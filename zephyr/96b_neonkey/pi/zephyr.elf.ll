; ModuleID = 'build/96b_neonkey/pi/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.emitter = type { i8*, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234455 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234435 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234425 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234525 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234515 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234505 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234495 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234485 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234475 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234465 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134235780 to i8*), void (i8*)* inttoptr (i32 134234445 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [5 x i8] c"%.4d\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"Calculate first %d digits of Pi independently by %d threads.\0A\00", align 1
@tthread = internal global [16 x %struct.k_thread] zeroinitializer, align 8, !dbg !25
@tstack = internal global [16 x [4480 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !123
@counter = internal global i32 16, align 4, !dbg !139
@buffer = internal global [16 x [241 x i8]] zeroinitializer, align 1, !dbg !134
@.str.2 = private unnamed_addr constant [39 x i8] c"Pi value calculated by thread #%d: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"All %d threads executed by %d cores in %d msec\0A\00", align 1
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str.4 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !268
@.str.1.5 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.6 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.7 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.8 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !293
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !303
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !354
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !383
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !517
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !389
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !526
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !562
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !572
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !577
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !597
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !770
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !731
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !714
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !687
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !703
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !733
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !747
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !749
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !751
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !753
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !757
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !759
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !761
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !763
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !765
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !775
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !802
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !899
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !888
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !940
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !795
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1006
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1282
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1252
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1238
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1183
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1284
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1256
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1254
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1200
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !791
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1297
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1260
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1258
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1206
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !789
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1299
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1264
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1262
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1212
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !787
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1301
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1268
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1266
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1218
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !785
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1303
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1272
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1270
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1224
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1305
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1276
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1274
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1230
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !781
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1307
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1280
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1278
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1236
@.str.8.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1309
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !797
@.str.1.127 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1465
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1520
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1463
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1522
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.127, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1454
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1456
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1509
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1512
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1514
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1517
@.str.2.129 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.130 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.131 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.132 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.133 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.136 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.138 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.139 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !872
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1533
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1642
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1644
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1640
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1635
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1609
@.str.143 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.144 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.145 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.146 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.147 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.148 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1646
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1181
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1198
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1204
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1210
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1216
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1222
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1228
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1234
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1736
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1778
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1781
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1786
@.str.179 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.183 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.184 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.185 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.189 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.190 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.191 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.192 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.193 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.188 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.187 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.189, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.190, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.191, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.192, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.193, i32 0, i32 0)], align 4
@.str.195 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.195, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1793
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2019
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2006
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2014
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2026
@.str.5.201 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2031
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.205 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.212, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.213, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.214, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.215, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.209, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.216, i32 0, i32 0)], align 4, !dbg !2061
@.str.210 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.211 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.212 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.213 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.214 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.215 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.209 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.216 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2176
@.str.8.208 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.219 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.220 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.221 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.222 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.226 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.227 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.230 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.231 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.241 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.242 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.243 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2189
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2300
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2303
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2305
@.str.244 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.260 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.251 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.265 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.273 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.253 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.268 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.250 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.277 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.278 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.286 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.287 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.288 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.289 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.245 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.246 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.247 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.248 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.249 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.252 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.264 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.269 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.270 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2016
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2024
@.str.23.281 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.295 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.297 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.298 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2307
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2337
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2342
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1880
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2340
@.str.4.299 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.300 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.301 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.305 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.306 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.326 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2934 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2938, !srcloc !2939
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2940, !srcloc !2941
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2942, !srcloc !2943
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2944, !srcloc !2945
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2946, !srcloc !2947
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2948, !srcloc !2949
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2950, !srcloc !2951
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2952, !srcloc !2953
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2954, !srcloc !2955
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2956, !srcloc !2957
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2958, !srcloc !2959
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2960, !srcloc !2961
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2962, !srcloc !2963
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2964, !srcloc !2965
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2966, !srcloc !2967
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2968, !srcloc !2969
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2970, !srcloc !2971
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !2972, !srcloc !2973
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2974, !srcloc !2975
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2976, !srcloc !2977
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !2978, !srcloc !2979
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !2980, !srcloc !2981
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2982, !srcloc !2983
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2984, !srcloc !2985
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2986, !srcloc !2987
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2992, !srcloc !2995
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2996, !srcloc !2997
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3010, !srcloc !3011
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3012, !srcloc !3013
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3014, !srcloc !3015
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3016, !srcloc !3017
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3018, !srcloc !3019
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3020, !srcloc !3021
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3022, !srcloc !3023
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3024, !srcloc !3025
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3026, !srcloc !3027
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3028, !srcloc !3029
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3030, !srcloc !3031
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3032, !srcloc !3033
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3034, !srcloc !3035
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3036, !srcloc !3037
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3038, !srcloc !3039
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3040, !srcloc !3041
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3042, !srcloc !3043
  ret void, !dbg !3044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @test_thread(i8* nocapture noundef %0, i8* noundef %1, i8* nocapture readnone %2) #1 !dbg !3047 {
  %4 = alloca [841 x i32], align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3049, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i8* %1, metadata !3050, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i8* undef, metadata !3051, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i8* %0, metadata !3052, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i8* %1, metadata !3053, metadata !DIExpression()), !dbg !3066
  %5 = bitcast [841 x i32]* %4 to i8*, !dbg !3067
  call void @llvm.lifetime.start.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3067
  call void @llvm.dbg.declare(metadata [841 x i32]* %4, metadata !3054, metadata !DIExpression()), !dbg !3068
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(3364) %5, i8 0, i32 3364, i1 false), !dbg !3068
  call void @llvm.dbg.value(metadata i32 0, metadata !3058, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i32 0, metadata !3059, metadata !DIExpression()), !dbg !3066
  br label %6, !dbg !3069

6:                                                ; preds = %3, %6
  %7 = phi i32 [ 0, %3 ], [ %9, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3059, metadata !DIExpression()), !dbg !3066
  %8 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %7, !dbg !3071
  store i32 2000, i32* %8, align 4, !dbg !3074
  %9 = add nuw nsw i32 %7, 1, !dbg !3075
  call void @llvm.dbg.value(metadata i32 %9, metadata !3059, metadata !DIExpression()), !dbg !3066
  %10 = icmp eq i32 %9, 840, !dbg !3076
  br i1 %10, label %11, label %6, !dbg !3069, !llvm.loop !3077

11:                                               ; preds = %6, %32
  %12 = phi i8* [ %38, %32 ], [ %1, %6 ]
  %13 = phi i32 [ %39, %32 ], [ 840, %6 ]
  %14 = phi i32 [ %36, %32 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i8* %12, metadata !3053, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i32 %13, metadata !3059, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i32 %14, metadata !3058, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i32 0, metadata !3061, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 %13, metadata !3060, metadata !DIExpression()), !dbg !3066
  br label %15, !dbg !3080

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %27, %15 ], [ 0, %11 ]
  %17 = phi i32 [ %30, %15 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3061, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 %17, metadata !3060, metadata !DIExpression()), !dbg !3066
  %18 = mul nsw i32 %16, %17, !dbg !3082
  %19 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %17, !dbg !3085
  %20 = load i32, i32* %19, align 4, !dbg !3085
  %21 = mul nsw i32 %20, 10000, !dbg !3086
  %22 = add nsw i32 %21, %18, !dbg !3087
  call void @llvm.dbg.value(metadata i32 %22, metadata !3061, metadata !DIExpression()), !dbg !3079
  %23 = shl nuw nsw i32 %17, 1, !dbg !3088
  %24 = add nsw i32 %23, -1, !dbg !3089
  %25 = freeze i32 %22
  %26 = freeze i32 %24
  %27 = sdiv i32 %25, %26, !dbg !3090
  %28 = mul i32 %27, %26
  %29 = sub i32 %25, %28
  store i32 %29, i32* %19, align 4, !dbg !3091
  call void @llvm.dbg.value(metadata i32 %27, metadata !3061, metadata !DIExpression()), !dbg !3079
  %30 = add nsw i32 %17, -1, !dbg !3092
  call void @llvm.dbg.value(metadata i32 %30, metadata !3060, metadata !DIExpression()), !dbg !3066
  %31 = icmp sgt i32 %17, 1, !dbg !3093
  br i1 %31, label %15, label %32, !dbg !3080, !llvm.loop !3094

32:                                               ; preds = %15
  %33 = sdiv i32 %27, 10000, !dbg !3096
  %34 = add nsw i32 %33, %14, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %34, metadata !3065, metadata !DIExpression()), !dbg !3079
  %35 = mul i32 %33, 10000
  %36 = sub i32 %27, %35
  call void @llvm.dbg.value(metadata i32 %36, metadata !3058, metadata !DIExpression()), !dbg !3066
  %37 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %12, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 noundef %34) #24, !dbg !3098
  %38 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !3099
  call void @llvm.dbg.value(metadata i8* %38, metadata !3053, metadata !DIExpression()), !dbg !3066
  %39 = add nsw i32 %13, -14, !dbg !3100
  call void @llvm.dbg.value(metadata i32 %39, metadata !3059, metadata !DIExpression()), !dbg !3066
  %40 = icmp ugt i32 %13, 14, !dbg !3101
  br i1 %40, label %11, label %41, !dbg !3102, !llvm.loop !3103

41:                                               ; preds = %32
  %42 = bitcast i8* %0 to i32*, !dbg !3105
  call void @llvm.dbg.value(metadata i32* %42, metadata !3052, metadata !DIExpression()), !dbg !3066
  tail call fastcc void @atomic_dec(i32* noundef %42) #25, !dbg !3106
  call void @llvm.lifetime.end.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3107
  ret void, !dbg !3107
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_dec(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3108 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3114, metadata !DIExpression()), !dbg !3115
  tail call fastcc void @atomic_sub(i32* noundef %0) #25, !dbg !3116
  ret void, !dbg !3117
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_sub(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3118 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3122, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.value(metadata i32 1, metadata !3123, metadata !DIExpression()), !dbg !3124
  %2 = atomicrmw sub i32* %0, i32 1 seq_cst, align 4, !dbg !3125
  ret void, !dbg !3126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3127 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i32 0, i32 0), i32 noundef 240, i32 noundef 16) #24, !dbg !3134
  %1 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3135
  call void @llvm.dbg.value(metadata i32 %1, metadata !3129, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i32 0, metadata !3133, metadata !DIExpression()), !dbg !3136
  br label %8, !dbg !3137

2:                                                ; preds = %8
  %3 = load i32, i32* @counter, align 4, !dbg !3139
  %4 = icmp eq i32 %3, 0, !dbg !3140
  br i1 %4, label %18, label %5, !dbg !3140

5:                                                ; preds = %2
  %6 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #25, !dbg !3136
  %7 = insertvalue [1 x i64] poison, i64 %6, 0
  br label %15, !dbg !3140

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 0, %0 ], [ %13, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3133, metadata !DIExpression()), !dbg !3136
  %10 = getelementptr inbounds [16 x %struct.k_thread], [16 x %struct.k_thread]* @tthread, i32 0, i32 %9, !dbg !3141
  %11 = getelementptr inbounds [16 x [4480 x %struct.z_thread_stack_element]], [16 x [4480 x %struct.z_thread_stack_element]]* @tstack, i32 0, i32 %9, i32 0, !dbg !3144
  %12 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %9, i32 0, !dbg !3145
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %10, %struct.z_thread_stack_element* noundef nonnull %11, i8* noundef nonnull %12) #25, !dbg !3146
  %13 = add nuw nsw i32 %9, 1, !dbg !3147
  call void @llvm.dbg.value(metadata i32 %13, metadata !3133, metadata !DIExpression()), !dbg !3136
  %14 = icmp eq i32 %13, 16, !dbg !3148
  br i1 %14, label %2, label %8, !dbg !3137, !llvm.loop !3149

15:                                               ; preds = %5, %15
  tail call fastcc void @k_sleep([1 x i64] %7) #25, !dbg !3151
  %16 = load i32, i32* @counter, align 4, !dbg !3139
  %17 = icmp eq i32 %16, 0, !dbg !3140
  br i1 %17, label %18, label %15, !dbg !3140, !llvm.loop !3153

18:                                               ; preds = %15, %2
  %19 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3155
  call void @llvm.dbg.value(metadata i32 %19, metadata !3130, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %1), metadata !3131, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3136
  call void @llvm.dbg.value(metadata i64 undef, metadata !3132, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3136
  call void @llvm.dbg.value(metadata i32 0, metadata !3133, metadata !DIExpression()), !dbg !3136
  br label %20, !dbg !3156

20:                                               ; preds = %18, %20
  %21 = phi i32 [ 0, %18 ], [ %23, %20 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3133, metadata !DIExpression()), !dbg !3136
  %22 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %21, i32 0, !dbg !3158
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0), i32 noundef %21, i8* noundef nonnull %22) #24, !dbg !3161
  %23 = add nuw nsw i32 %21, 1, !dbg !3162
  call void @llvm.dbg.value(metadata i32 %23, metadata !3133, metadata !DIExpression()), !dbg !3136
  %24 = icmp eq i32 %23, 16, !dbg !3163
  br i1 %24, label %25, label %20, !dbg !3156, !llvm.loop !3164

25:                                               ; preds = %20
  %26 = sub i32 %19, %1, !dbg !3166
  call void @llvm.dbg.value(metadata i32 %26, metadata !3131, metadata !DIExpression()), !dbg !3136
  %27 = zext i32 %26 to i64, !dbg !3167
  %28 = tail call fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %27) #25, !dbg !3168
  call void @llvm.dbg.value(metadata i64 %28, metadata !3132, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3136
  %29 = trunc i64 %28 to i32, !dbg !3169
  call void @llvm.dbg.value(metadata i32 %29, metadata !3132, metadata !DIExpression()), !dbg !3136
  %30 = udiv i32 %29, 1000000, !dbg !3170
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i32 0, i32 0), i32 noundef 16, i32 noundef 1, i32 noundef %30) #24, !dbg !3171
  ret void, !dbg !3172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3173 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !3176
  ret i32 %1, !dbg !3177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #6 !dbg !3178 {
  call void @llvm.dbg.value(metadata i64 1, metadata !3183, metadata !DIExpression()), !dbg !3184
  ret i64 10, !dbg !3185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3186 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3208, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3199, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3200, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata i32 4384, metadata !3201, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_thread, metadata !3202, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata i8* bitcast (i32* @counter to i8*), metadata !3203, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata i8* %2, metadata !3204, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata i8* null, metadata !3205, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata i32 -6, metadata !3206, metadata !DIExpression()), !dbg !3209
  call void @llvm.dbg.value(metadata i32 0, metadata !3207, metadata !DIExpression()), !dbg !3209
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3210, !srcloc !3212
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 4384, void (i8*, i8*, i8*)* noundef nonnull @test_thread, i8* noundef bitcast (i32* @counter to i8*), i8* noundef %2, i8* noundef null, i32 noundef -6, i32 noundef 0, [1 x i64] zeroinitializer) #24, !dbg !3213
  ret void, !dbg !3214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3215 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3219, metadata !DIExpression()), !dbg !3220
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3221, !srcloc !3223
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3224
  ret void, !dbg !3225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %0) unnamed_addr #6 !dbg !3226 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3228, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata i64 %0, metadata !3230, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i32 84000000, metadata !3235, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i32 1000000000, metadata !3236, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 1, metadata !3237, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i8 0, metadata !3238, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i1 false, metadata !3239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3247
  call void @llvm.dbg.value(metadata i8 0, metadata !3240, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i1 false, metadata !3241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3247
  call void @llvm.dbg.value(metadata i1 false, metadata !3242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3247
  call void @llvm.dbg.value(metadata i64 0, metadata !3243, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.value(metadata i64 0, metadata !3243, metadata !DIExpression()), !dbg !3247
  %2 = udiv i64 %0, 84000000, !dbg !3249
  %3 = mul i64 %2, 1000000000, !dbg !3256
  %4 = mul i64 %2, 84000000
  %5 = sub i64 %0, %4
  %6 = mul nuw nsw i64 %5, 1000000000, !dbg !3257
  %7 = udiv i64 %6, 84000000, !dbg !3258
  %8 = add i64 %7, %3, !dbg !3259
  ret i64 %8, !dbg !3260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3261 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !3263
  ret i32 %1, !dbg !3264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3265 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %0, metadata !3276, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %1, metadata !3277, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %2, metadata !3278, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %3, metadata !3279, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %0, metadata !3281, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %0, metadata !3282, metadata !DIExpression()), !dbg !3343
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3344
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3344
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3285, metadata !DIExpression()), !dbg !3345
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3346
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3346
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3287, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i32 0, metadata !3288, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 0, metadata !3289, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 0, metadata !3290, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 -1, metadata !3291, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 0, metadata !3294, metadata !DIExpression()), !dbg !3343
  %12 = and i32 %2, 4, !dbg !3348
  %13 = icmp eq i32 %12, 0, !dbg !3349
  call void @llvm.dbg.value(metadata i1 %13, metadata !3295, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3343
  %14 = lshr i32 %2, 3, !dbg !3350
  %15 = and i32 %14, 7, !dbg !3350
  %16 = add nuw nsw i32 %15, 1, !dbg !3351
  call void @llvm.dbg.value(metadata i32 %16, metadata !3296, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 0, metadata !3297, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %0, metadata !3298, metadata !DIExpression()), !dbg !3343
  %17 = ptrtoint i8* %0 to i32, !dbg !3352
  %18 = and i32 %17, 3, !dbg !3354
  %19 = icmp eq i32 %18, 0, !dbg !3354
  br i1 %19, label %20, label %320, !dbg !3355

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3356
  call void @llvm.dbg.value(metadata i8* %21, metadata !3282, metadata !DIExpression()), !dbg !3343
  %22 = icmp eq i8* %0, null, !dbg !3357
  %23 = and i32 %1, 7, !dbg !3359
  %24 = sub nuw nsw i32 8, %23, !dbg !3359
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3359
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3359
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3359
  call void @llvm.dbg.value(metadata i32 %27, metadata !3277, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %26, metadata !3282, metadata !DIExpression()), !dbg !3343
  br i1 %22, label %33, label %28, !dbg !3360

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3362
  %30 = sub i32 4, %17, !dbg !3362
  %31 = add i32 %30, %29, !dbg !3363
  %32 = icmp ugt i32 %31, %27, !dbg !3364
  br i1 %32, label %320, label %33, !dbg !3365

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3366
  call void @llvm.dbg.value(metadata i8* %34, metadata !3279, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %3, metadata !3293, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 4, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 4, metadata !3283, metadata !DIExpression()), !dbg !3343
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3367

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %42, metadata !3279, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %43, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %44, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %45, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %72, metadata !3291, metadata !DIExpression()), !dbg !3343
  br i1 %46, label %73, label %47, !dbg !3368

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3369
  %49 = zext i1 %48 to i32, !dbg !3373
  %50 = add nsw i32 %72, %49, !dbg !3373
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3373
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3373
  call void @llvm.dbg.value(metadata i32 %52, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %51, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3294, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %50, metadata !3291, metadata !DIExpression()), !dbg !3343
  br label %53, !dbg !3374

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %40, metadata !3279, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %58, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %57, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %56, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3294, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %54, metadata !3291, metadata !DIExpression()), !dbg !3343
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3375
  call void @llvm.dbg.value(metadata i8* %60, metadata !3279, metadata !DIExpression()), !dbg !3343
  %61 = load i8, i8* %60, align 1, !dbg !3377
  %62 = icmp eq i8 %61, 0, !dbg !3378
  br i1 %62, label %226, label %63, !dbg !3379, !llvm.loop !3380

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3368

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3383

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3294, metadata !DIExpression()), !dbg !3343
  %75 = add nsw i32 %72, -1, !dbg !3384
  call void @llvm.dbg.value(metadata i32 %75, metadata !3291, metadata !DIExpression()), !dbg !3343
  br label %53, !dbg !3385

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3386

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 4, metadata !3283, metadata !DIExpression()), !dbg !3343
  br label %53, !dbg !3387

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 4, metadata !3283, metadata !DIExpression()), !dbg !3343
  br label %53, !dbg !3388

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3389
  %81 = icmp eq i8 %80, 108, !dbg !3391
  br i1 %81, label %82, label %109, !dbg !3392

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3393
  %84 = load i8, i8* %83, align 1, !dbg !3393
  %85 = icmp eq i8 %84, 108, !dbg !3396
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3397
  %89 = add i32 %88, 7, !dbg !3397
  %90 = and i32 %89, -8, !dbg !3397
  %91 = inttoptr i32 %90 to i8*, !dbg !3397
  %92 = inttoptr i32 %90 to double*, !dbg !3397
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3397
  %94 = load double, double* %92, align 8, !dbg !3397
  call void @llvm.dbg.value(metadata i8* %93, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 8, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 8, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata double %94, metadata !3311, metadata !DIExpression()), !dbg !3399
  %95 = ptrtoint i8* %43 to i32, !dbg !3400
  %96 = add i32 %95, 7, !dbg !3400
  %97 = and i32 %96, -8, !dbg !3400
  %98 = inttoptr i32 %97 to i8*, !dbg !3401
  call void @llvm.dbg.value(metadata i8* %98, metadata !3282, metadata !DIExpression()), !dbg !3343
  br i1 %22, label %104, label %99, !dbg !3402

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3403
  %101 = icmp ugt i32 %100, %196, !dbg !3407
  br i1 %101, label %320, label %102, !dbg !3408

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3409
  store double %94, double* %103, align 8, !dbg !3409
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3412
  call void @llvm.dbg.value(metadata i8* %105, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3294, metadata !DIExpression()), !dbg !3343
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3294, metadata !DIExpression()), !dbg !3343
  br label %53, !dbg !3413

107:                                              ; preds = %73, %73
  br label %109, !dbg !3414

108:                                              ; preds = %73
  br label %109, !dbg !3414

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3343
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3343
  call void @llvm.dbg.value(metadata i32 %113, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %112, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3297, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3294, metadata !DIExpression()), !dbg !3343
  %114 = ptrtoint i8* %43 to i32, !dbg !3414
  %115 = add i32 %114, -1, !dbg !3414
  %116 = add i32 %115, %112, !dbg !3414
  %117 = sub i32 0, %112, !dbg !3414
  %118 = and i32 %116, %117, !dbg !3414
  %119 = inttoptr i32 %118 to i8*, !dbg !3415
  call void @llvm.dbg.value(metadata i8* %119, metadata !3282, metadata !DIExpression()), !dbg !3343
  br i1 %22, label %124, label %120, !dbg !3416

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3418
  %122 = add i32 %121, %118, !dbg !3419
  %123 = icmp ugt i32 %122, %196, !dbg !3420
  br i1 %123, label %320, label %124, !dbg !3421

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3422

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3415
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3423
  call void @llvm.dbg.value(metadata i8* %127, metadata !3280, metadata !DIExpression()), !dbg !3343
  %128 = bitcast i8* %41 to i8**, !dbg !3423
  %129 = load i8*, i8** %128, align 4, !dbg !3423
  call void @llvm.dbg.value(metadata i8* %129, metadata !3293, metadata !DIExpression()), !dbg !3343
  br label %130, !dbg !3424

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3343
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3425
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3343
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3426
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3343
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3343
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3343
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3343
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3343
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3343
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3427
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %142, metadata !3277, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %141, metadata !3279, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %140, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %139, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %138, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %137, metadata !3288, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %136, metadata !3296, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %135, metadata !3289, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3294, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %133, metadata !3293, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %132, metadata !3291, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %131, metadata !3290, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.label(metadata !3342), !dbg !3429
  br i1 %22, label %146, label %144, !dbg !3430

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3431
  store i8* %133, i8** %145, align 4, !dbg !3434
  br label %146, !dbg !3435

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3436
  call void @llvm.dbg.value(metadata i32 %147, metadata !3296, metadata !DIExpression()), !dbg !3343
  %148 = icmp sgt i32 %136, 0, !dbg !3437
  br i1 %148, label %152, label %149, !dbg !3438

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !3439
  %151 = zext i1 %150 to i32, !dbg !3439
  br label %152, !dbg !3438

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3438
  %154 = icmp eq i32 %153, 0, !dbg !3438
  call void @llvm.dbg.value(metadata i1 %154, metadata !3320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3440
  call void @llvm.dbg.value(metadata i1 %36, metadata !3323, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3440
  %155 = or i1 %36, %154, !dbg !3441
  br i1 %155, label %156, label %192, !dbg !3441

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3442
  %158 = sub i32 %157, %17, !dbg !3442
  %159 = lshr i32 %158, 2, !dbg !3443
  call void @llvm.dbg.value(metadata i32 %159, metadata !3324, metadata !DIExpression()), !dbg !3444
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3445
  br i1 %161, label %162, label %163, !dbg !3445

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3447
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.8, i32 0, i32 0)) #24, !dbg !3447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3447
  unreachable, !dbg !3447

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3452
  br i1 %164, label %165, label %166, !dbg !3454

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #24, !dbg !3455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3455
  unreachable, !dbg !3455

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3460

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3461
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3464
  store i8 %168, i8* %169, align 1, !dbg !3465
  %170 = trunc i32 %132 to i8, !dbg !3466
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3467
  store i8 %170, i8* %171, align 1, !dbg !3468
  br i1 %154, label %175, label %172, !dbg !3469

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3470
  store i8 %173, i8* %169, align 1, !dbg !3470
  %174 = add i32 %131, 1, !dbg !3473
  call void @llvm.dbg.value(metadata i32 %174, metadata !3290, metadata !DIExpression()), !dbg !3343
  br label %187, !dbg !3474

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %176, metadata !3289, metadata !DIExpression()), !dbg !3343
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3477

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3478
  call void @llvm.dbg.value(metadata i32 %179, metadata !3277, metadata !DIExpression()), !dbg !3343
  br label %187, !dbg !3481

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3482

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %182, metadata !3277, metadata !DIExpression()), !dbg !3343
  br label %187, !dbg !3486

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !3487
  %185 = add i32 %142, 2, !dbg !3489
  %186 = add i32 %185, %184, !dbg !3490
  call void @llvm.dbg.value(metadata i32 %186, metadata !3277, metadata !DIExpression()), !dbg !3343
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3343
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3343
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3343
  call void @llvm.dbg.value(metadata i32 %190, metadata !3277, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %189, metadata !3289, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %188, metadata !3290, metadata !DIExpression()), !dbg !3343
  %191 = add nuw nsw i32 %137, 1, !dbg !3491
  call void @llvm.dbg.value(metadata i32 %191, metadata !3288, metadata !DIExpression()), !dbg !3343
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3343
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3426
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3343
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3427
  call void @llvm.dbg.value(metadata i32 %196, metadata !3277, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %195, metadata !3288, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %194, metadata !3289, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %193, metadata !3290, metadata !DIExpression()), !dbg !3343
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3492
  call void @llvm.dbg.value(metadata i8* %197, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %143, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %141, metadata !3279, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %139, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %138, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3297, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3294, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %132, metadata !3291, metadata !DIExpression()), !dbg !3343
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3375
  call void @llvm.dbg.value(metadata i8* %198, metadata !3279, metadata !DIExpression()), !dbg !3343
  %199 = load i8, i8* %198, align 1, !dbg !3377
  %200 = icmp eq i8 %199, 0, !dbg !3378
  br i1 %200, label %226, label %63, !dbg !3379

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3493

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3494
  call void @llvm.dbg.value(metadata i8* %203, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 undef, metadata !3327, metadata !DIExpression()), !dbg !3495
  br i1 %22, label %219, label %204, !dbg !3496

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3494
  %206 = load i32, i32* %205, align 4, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %206, metadata !3327, metadata !DIExpression()), !dbg !3495
  %207 = inttoptr i32 %118 to i32*, !dbg !3497
  store i32 %206, i32* %207, align 4, !dbg !3500
  br label %219, !dbg !3501

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3502
  %210 = add i32 %209, 7, !dbg !3502
  %211 = and i32 %210, -8, !dbg !3502
  %212 = inttoptr i32 %211 to i8*, !dbg !3502
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3502
  call void @llvm.dbg.value(metadata i8* %213, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i64 undef, metadata !3333, metadata !DIExpression()), !dbg !3503
  br i1 %22, label %219, label %214, !dbg !3504

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3502
  %216 = load i64, i64* %215, align 8, !dbg !3502
  call void @llvm.dbg.value(metadata i64 %216, metadata !3333, metadata !DIExpression()), !dbg !3503
  %217 = inttoptr i32 %118 to i64*, !dbg !3505
  store i64 %216, i64* %217, align 8, !dbg !3510
  br label %219, !dbg !3511

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3512
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #24, !dbg !3512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3512
  unreachable, !dbg !3512

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3517
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3517
  call void @llvm.dbg.value(metadata i8* %221, metadata !3280, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %40, metadata !3279, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %222, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %113, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %112, metadata !3284, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3297, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8 poison, metadata !3294, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %72, metadata !3291, metadata !DIExpression()), !dbg !3343
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3375
  call void @llvm.dbg.value(metadata i8* %223, metadata !3279, metadata !DIExpression()), !dbg !3343
  %224 = load i8, i8* %223, align 1, !dbg !3377
  %225 = icmp eq i8 %224, 0, !dbg !3378
  br i1 %225, label %226, label %38, !dbg !3379

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3518
  %228 = ptrtoint i8* %227 to i32, !dbg !3519
  %229 = sub i32 %228, %17, !dbg !3519
  %230 = lshr i32 %229, 2, !dbg !3521
  %231 = icmp ugt i32 %229, 1023, !dbg !3522
  br i1 %231, label %232, label %233, !dbg !3523

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #24, !dbg !3524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3524
  unreachable, !dbg !3524

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3529

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3530
  %236 = add i32 %235, %229, !dbg !3533
  br label %320, !dbg !3534

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3535
  store i8 %238, i8* %0, align 1, !dbg !3536
  %239 = trunc i32 %194 to i8, !dbg !3537
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3539
  store i8 %240, i8* %242, align 1, !dbg !3541
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3542
  store i8 %241, i8* %243, align 1, !dbg !3543
  %244 = trunc i32 %193 to i8, !dbg !3544
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3545
  store i8 %244, i8* %245, align 1, !dbg !3546
  %246 = icmp eq i32 %193, 0, !dbg !3547
  %247 = xor i1 %246, true, !dbg !3548
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3548
  call void @llvm.dbg.value(metadata i8* %227, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 0, metadata !3292, metadata !DIExpression()), !dbg !3343
  br i1 %249, label %250, label %269, !dbg !3548

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3549

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %254, metadata !3292, metadata !DIExpression()), !dbg !3343
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3550
  %256 = load i8, i8* %255, align 1, !dbg !3550
  %257 = icmp sgt i8 %256, -1, !dbg !3552
  br i1 %257, label %265, label %258, !dbg !3553

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3336, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3554
  %259 = ptrtoint i8* %253 to i32, !dbg !3555
  %260 = add i32 %251, %259, !dbg !3557
  %261 = icmp ugt i32 %260, %196, !dbg !3558
  br i1 %261, label %320, label %262, !dbg !3559

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3560
  call void @llvm.dbg.value(metadata i8 %263, metadata !3336, metadata !DIExpression()), !dbg !3554
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3561
  call void @llvm.dbg.value(metadata i8* %264, metadata !3282, metadata !DIExpression()), !dbg !3343
  store i8 %263, i8* %253, align 1, !dbg !3562
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3492
  call void @llvm.dbg.value(metadata i8* %266, metadata !3282, metadata !DIExpression()), !dbg !3343
  %267 = add nuw i32 %254, 1, !dbg !3563
  call void @llvm.dbg.value(metadata i32 %267, metadata !3292, metadata !DIExpression()), !dbg !3343
  %268 = icmp eq i32 %267, %195, !dbg !3564
  br i1 %268, label %269, label %252, !dbg !3549, !llvm.loop !3565

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3492
  call void @llvm.dbg.value(metadata i8* %270, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 0, metadata !3292, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %133, metadata !3293, metadata !DIExpression()), !dbg !3343
  %271 = icmp eq i32 %195, 0, !dbg !3567
  br i1 %271, label %316, label %272, !dbg !3570

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3570

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %276, metadata !3293, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %277, metadata !3292, metadata !DIExpression()), !dbg !3343
  br i1 %246, label %282, label %278, !dbg !3571

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3574
  %280 = load i8, i8* %279, align 1, !dbg !3574
  %281 = icmp sgt i8 %280, -1, !dbg !3575
  br i1 %281, label %282, label %311, !dbg !3576

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3577

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3283, metadata !DIExpression()), !dbg !3343
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3578
  %285 = load i8, i8* %284, align 1, !dbg !3578
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3581
  call void @llvm.dbg.value(metadata i8* %286, metadata !3282, metadata !DIExpression()), !dbg !3343
  store i8 %285, i8* %275, align 1, !dbg !3582
  br label %297, !dbg !3583

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3584
  %289 = load i8, i8* %288, align 1, !dbg !3584
  %290 = zext i8 %289 to i32, !dbg !3584
  %291 = shl nuw nsw i32 %290, 2, !dbg !3586
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3587
  %293 = bitcast i8* %292 to i8**, !dbg !3588
  %294 = load i8*, i8** %293, align 4, !dbg !3588
  call void @llvm.dbg.value(metadata i8* %294, metadata !3293, metadata !DIExpression()), !dbg !3343
  store i8* null, i8** %293, align 4, !dbg !3589
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !3590
  %296 = add i32 %295, 1, !dbg !3591
  call void @llvm.dbg.value(metadata i32 %296, metadata !3283, metadata !DIExpression()), !dbg !3343
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3343
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3592
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3343
  call void @llvm.dbg.value(metadata i8* %300, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %299, metadata !3283, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %298, metadata !3293, metadata !DIExpression()), !dbg !3343
  %301 = ptrtoint i8* %300 to i32, !dbg !3593
  %302 = add i32 %273, %299, !dbg !3595
  %303 = add i32 %302, %301, !dbg !3596
  %304 = icmp ugt i32 %303, %196, !dbg !3597
  br i1 %304, label %320, label %305, !dbg !3598

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3599
  %307 = load i8, i8* %306, align 1, !dbg !3599
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3600
  call void @llvm.dbg.value(metadata i8* %308, metadata !3282, metadata !DIExpression()), !dbg !3343
  store i8 %307, i8* %300, align 1, !dbg !3601
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !3602
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3603
  call void @llvm.dbg.value(metadata i8* %310, metadata !3282, metadata !DIExpression()), !dbg !3343
  br label %311, !dbg !3604

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3605
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3343
  call void @llvm.dbg.value(metadata i8* %313, metadata !3282, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %312, metadata !3293, metadata !DIExpression()), !dbg !3343
  %314 = add nuw i32 %277, 1, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %314, metadata !3292, metadata !DIExpression()), !dbg !3343
  %315 = icmp eq i32 %314, %195, !dbg !3567
  br i1 %315, label %316, label %274, !dbg !3570, !llvm.loop !3607

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3492
  %318 = ptrtoint i8* %317 to i32, !dbg !3609
  %319 = sub i32 %318, %17, !dbg !3609
  br label %320, !dbg !3610

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3611
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3611
  ret i32 %321, !dbg !3611
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3616, metadata !DIExpression()), !dbg !3617
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !3618
  ret i1 %2, !dbg !3619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3625, metadata !DIExpression()), !dbg !3626
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3627
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3628
  %4 = and i1 %2, %3, !dbg !3628
  ret i1 %4, !dbg !3629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3630 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3634, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %1, metadata !3635, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %2, metadata !3636, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i8* %3, metadata !3637, metadata !DIExpression()), !dbg !3640
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3641
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3641
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3638, metadata !DIExpression()), !dbg !3642
  call void @llvm.va_start(i8* nonnull %6), !dbg !3643
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3644
  %8 = load i32, i32* %7, align 4, !dbg !3644
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3644
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %10, metadata !3639, metadata !DIExpression()), !dbg !3640
  call void @llvm.va_end(i8* nonnull %6), !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3646
  ret i32 %10, !dbg !3647
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3648 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3660, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3661, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8* %2, metadata !3662, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8* %3, metadata !3663, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8* %3, metadata !3664, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8* %3, metadata !3665, metadata !DIExpression()), !dbg !3679
  %5 = icmp eq i8* %3, null, !dbg !3680
  br i1 %5, label %45, label %6, !dbg !3682

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3674, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3679
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3683
  %8 = load i8, i8* %7, align 1, !dbg !3683
  %9 = zext i8 %8 to i32, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %9, metadata !3675, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i8 undef, metadata !3676, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata i8 undef, metadata !3677, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata i32 0, metadata !3673, metadata !DIExpression()), !dbg !3679
  %10 = icmp eq i8 %8, 0, !dbg !3685
  br i1 %10, label %39, label %11, !dbg !3688

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3689
  call void @llvm.dbg.value(metadata i8 %12, metadata !3674, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %13 = zext i8 %12 to i32, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %13, metadata !3674, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %14 = shl nuw nsw i32 %13, 2, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %14, metadata !3674, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3692
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3693
  %17 = load i8, i8* %16, align 1, !dbg !3693
  call void @llvm.dbg.value(metadata i8 %17, metadata !3676, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %18 = zext i8 %17 to i32, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %18, metadata !3676, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3695
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3696
  %21 = load i8, i8* %20, align 1, !dbg !3696
  call void @llvm.dbg.value(metadata i8 %21, metadata !3677, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %22 = zext i8 %21 to i32, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %22, metadata !3677, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %23 = shl nuw nsw i32 %22, 1, !dbg !3698
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3671, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3679
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3699
  call void @llvm.dbg.value(metadata i8* %24, metadata !3671, metadata !DIExpression()), !dbg !3679
  br label %25, !dbg !3688

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3671, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.value(metadata i32 %27, metadata !3673, metadata !DIExpression()), !dbg !3679
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3700
  call void @llvm.dbg.value(metadata i8* %28, metadata !3671, metadata !DIExpression()), !dbg !3679
  %29 = load i8, i8* %26, align 1, !dbg !3702
  %30 = zext i8 %29 to i32, !dbg !3702
  call void @llvm.dbg.value(metadata i32 %30, metadata !3678, metadata !DIExpression()), !dbg !3679
  %31 = shl nuw nsw i32 %30, 2, !dbg !3703
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3704
  %33 = bitcast i8* %32 to i8**, !dbg !3705
  call void @llvm.dbg.value(metadata i8** %33, metadata !3672, metadata !DIExpression()), !dbg !3679
  store i8* %28, i8** %33, align 4, !dbg !3706
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !3707
  %35 = add i32 %34, 1, !dbg !3708
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3709
  call void @llvm.dbg.value(metadata i8* %36, metadata !3671, metadata !DIExpression()), !dbg !3679
  %37 = add nuw nsw i32 %27, 1, !dbg !3710
  call void @llvm.dbg.value(metadata i32 %37, metadata !3673, metadata !DIExpression()), !dbg !3679
  %38 = icmp eq i32 %37, %9, !dbg !3685
  br i1 %38, label %39, label %25, !dbg !3688, !llvm.loop !3711

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3713
  call void @llvm.dbg.value(metadata i8* %40, metadata !3664, metadata !DIExpression()), !dbg !3679
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3714
  %42 = bitcast i8* %41 to i8**, !dbg !3714
  %43 = load i8*, i8** %42, align 1, !dbg !3714
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !3715
  br label %45, !dbg !3716

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3679
  ret i32 %46, !dbg !3717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3718 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3722, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3723, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %2, metadata !3724, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %3, metadata !3725, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %4, metadata !3726, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i8* %4, metadata !3727, metadata !DIExpression()), !dbg !3732
  %6 = ptrtoint i8* %4 to i32, !dbg !3733
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3733
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !3733
  ret i32 %8, !dbg !3734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !3735 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3739, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 %1, metadata !3740, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 0, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 0, metadata !3743, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 poison, metadata !3742, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %0, metadata !3739, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3744
  %3 = load i8, i8* %0, align 1, !dbg !3745
  call void @llvm.dbg.value(metadata i8 %3, metadata !3741, metadata !DIExpression()), !dbg !3744
  %4 = icmp eq i8 %3, 0, !dbg !3746
  br i1 %4, label %29, label %5, !dbg !3747

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3748
  call void @llvm.dbg.value(metadata i32 %8, metadata !3743, metadata !DIExpression()), !dbg !3744
  br i1 %9, label %11, label %22, !dbg !3749

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3751
  br i1 %12, label %13, label %17, !dbg !3755

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3756
  br i1 %14, label %29, label %15, !dbg !3759

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3760
  br i1 %16, label %29, label %22, !dbg !3762

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3763
  %19 = xor i1 %18, true, !dbg !3765
  %20 = zext i1 %18 to i32, !dbg !3765
  %21 = add nsw i32 %8, %20, !dbg !3765
  br label %22, !dbg !3765

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3744
  call void @llvm.dbg.value(metadata i32 %24, metadata !3743, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 poison, metadata !3742, metadata !DIExpression()), !dbg !3744
  %25 = icmp eq i8 %6, 37, !dbg !3766
  %26 = xor i1 %25, %23, !dbg !3768
  call void @llvm.dbg.value(metadata i8* %10, metadata !3739, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8* %10, metadata !3739, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3744
  %27 = load i8, i8* %10, align 1, !dbg !3745
  call void @llvm.dbg.value(metadata i8 %27, metadata !3741, metadata !DIExpression()), !dbg !3744
  %28 = icmp eq i8 %27, 0, !dbg !3746
  br i1 %28, label %29, label %5, !dbg !3747, !llvm.loop !3769

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3744
  ret i1 %30, !dbg !3771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !3772 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3776, metadata !DIExpression()), !dbg !3777
  %2 = add i8 %0, -64, !dbg !3778
  %3 = icmp ult i8 %2, 59, !dbg !3778
  ret i1 %3, !dbg !3779
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3780 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3788, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %1, metadata !3789, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3790, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %3, metadata !3791, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %4, metadata !3792, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i16* %5, metadata !3793, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %6, metadata !3794, metadata !DIExpression()), !dbg !3857
  %11 = icmp eq i8* %0, null, !dbg !3858
  br i1 %11, label %12, label %13, !dbg !3861

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3862
  unreachable, !dbg !3862

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3795, metadata !DIExpression()), !dbg !3857
  %14 = bitcast i8* %0 to i32*, !dbg !3864
  call void @llvm.dbg.value(metadata i32* %14, metadata !3796, metadata !DIExpression()), !dbg !3857
  %15 = and i32 %4, 8, !dbg !3865
  %16 = icmp eq i32 %15, 0, !dbg !3866
  call void @llvm.dbg.value(metadata i1 %16, metadata !3800, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %0, metadata !3803, metadata !DIExpression()), !dbg !3857
  %17 = icmp eq i32 %1, 0, !dbg !3867
  br i1 %17, label %18, label %20, !dbg !3868

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !3869
  br label %20, !dbg !3868

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3868
  call void @llvm.dbg.value(metadata i32 %21, metadata !3789, metadata !DIExpression()), !dbg !3857
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3870
  %23 = load i8, i8* %22, align 1, !dbg !3870
  %24 = zext i8 %23 to i32, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %24, metadata !3798, metadata !DIExpression()), !dbg !3857
  %25 = icmp ne i8 %23, 0, !dbg !3872
  %26 = and i32 %4, 1, !dbg !3873
  %27 = icmp ne i32 %26, 0, !dbg !3873
  %28 = and i1 %27, %25, !dbg !3873
  call void @llvm.dbg.value(metadata i1 %28, metadata !3802, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3857
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3874
  %30 = load i8, i8* %29, align 1, !dbg !3874
  %31 = zext i8 %30 to i32, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %31, metadata !3799, metadata !DIExpression()), !dbg !3857
  %32 = icmp ne i8 %30, 0, !dbg !3876
  %33 = and i32 %4, 2, !dbg !3877
  %34 = icmp ne i32 %33, 0, !dbg !3877
  %35 = and i1 %34, %32, !dbg !3877
  call void @llvm.dbg.value(metadata i1 %35, metadata !3801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3857
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3878
  br i1 %36, label %41, label %37, !dbg !3878

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3880
  br i1 %38, label %287, label %39, !dbg !3883

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !3884
  br label %287, !dbg !3886

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3887
  %43 = zext i8 %42 to i32, !dbg !3888
  %44 = shl nuw nsw i32 %43, 2, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %44, metadata !3797, metadata !DIExpression()), !dbg !3857
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3890
  %46 = bitcast i8* %45 to i8**, !dbg !3891
  %47 = load i8*, i8** %46, align 4, !dbg !3891
  call void @llvm.dbg.value(metadata i8* %47, metadata !3806, metadata !DIExpression()), !dbg !3857
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3892
  call void @llvm.dbg.value(metadata i8* %48, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3808, metadata !DIExpression()), !dbg !3857
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3893
  br i1 %49, label %50, label %135, !dbg !3894

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3805, metadata !DIExpression()), !dbg !3857
  br i1 %28, label %51, label %76, !dbg !3895

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %48, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3808, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3809, metadata !DIExpression()), !dbg !3896
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3897

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %55, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %56, metadata !3808, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %57, metadata !3809, metadata !DIExpression()), !dbg !3896
  %58 = load i8, i8* %55, align 1, !dbg !3898
  %59 = zext i8 %58 to i32, !dbg !3899
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3899
  %61 = bitcast i32* %60 to i8**, !dbg !3900
  %62 = load i8*, i8** %61, align 4, !dbg !3900
  call void @llvm.dbg.value(metadata i8* %62, metadata !3815, metadata !DIExpression()), !dbg !3901
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %63, metadata !3818, metadata !DIExpression()), !dbg !3901
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3903
  br i1 %65, label %66, label %70, !dbg !3903

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3905
  %68 = add nuw i32 %56, 1, !dbg !3907
  call void @llvm.dbg.value(metadata i32 %68, metadata !3808, metadata !DIExpression()), !dbg !3857
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3908
  store i16 %67, i16* %69, align 2, !dbg !3909
  br label %70, !dbg !3910

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3857
  call void @llvm.dbg.value(metadata i32 %71, metadata !3808, metadata !DIExpression()), !dbg !3857
  %72 = add nsw i32 %63, %54, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %72, metadata !3805, metadata !DIExpression()), !dbg !3857
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3912
  call void @llvm.dbg.value(metadata i8* %73, metadata !3807, metadata !DIExpression()), !dbg !3857
  %74 = add nuw nsw i32 %57, 1, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %74, metadata !3809, metadata !DIExpression()), !dbg !3896
  %75 = icmp eq i32 %74, %24, !dbg !3914
  br i1 %75, label %82, label %53, !dbg !3897, !llvm.loop !3915

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3917
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3917
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3917
  br label %82, !dbg !3917

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3920
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3857
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3921
  call void @llvm.dbg.value(metadata i1 undef, metadata !3819, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3922
  call void @llvm.dbg.value(metadata i32 0, metadata !3820, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i32 %85, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %84, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %83, metadata !3808, metadata !DIExpression()), !dbg !3857
  %86 = icmp eq i8 %30, 0, !dbg !3924
  br i1 %86, label %287, label %87, !dbg !3925

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3926
  %89 = icmp eq i32 %88, 0, !dbg !3927
  call void @llvm.dbg.value(metadata i1 %89, metadata !3819, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3922
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3925

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %96, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %97, metadata !3808, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %98, metadata !3820, metadata !DIExpression()), !dbg !3923
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3928
  call void @llvm.dbg.value(metadata i8* %99, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 undef, metadata !3822, metadata !DIExpression()), !dbg !3929
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %100, metadata !3807, metadata !DIExpression()), !dbg !3857
  %101 = load i8, i8* %99, align 1, !dbg !3931
  call void @llvm.dbg.value(metadata i8 %101, metadata !3825, metadata !DIExpression()), !dbg !3929
  %102 = zext i8 %101 to i32, !dbg !3932
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3932
  %104 = bitcast i32* %103 to i8**, !dbg !3933
  %105 = load i8*, i8** %104, align 4, !dbg !3933
  call void @llvm.dbg.value(metadata i8* %105, metadata !3826, metadata !DIExpression()), !dbg !3929
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !3934
  call void @llvm.dbg.value(metadata i1 %106, metadata !3827, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3929
  br i1 %16, label %113, label %107, !dbg !3935

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3937
  call void @llvm.dbg.value(metadata i8 %108, metadata !3822, metadata !DIExpression()), !dbg !3929
  %109 = zext i8 %108 to i32, !dbg !3938
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !3939
  br i1 %110, label %111, label %113, !dbg !3940

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !3941
  %112 = add nsw i32 %95, -2, !dbg !3947
  call void @llvm.dbg.value(metadata i32 %112, metadata !3805, metadata !DIExpression()), !dbg !3857
  br label %130, !dbg !3948

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3949

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3950

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3952
  call void @llvm.dbg.value(metadata i32 %116, metadata !3805, metadata !DIExpression()), !dbg !3857
  br label %130, !dbg !3955

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3956

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3853), !dbg !3957
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !3958
  call void @llvm.dbg.value(metadata i32 %119, metadata !3828, metadata !DIExpression()), !dbg !3929
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3959
  br i1 %121, label %122, label %126, !dbg !3959

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3961
  %124 = add nuw i32 %97, 1, !dbg !3963
  call void @llvm.dbg.value(metadata i32 %124, metadata !3808, metadata !DIExpression()), !dbg !3857
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3964
  store i16 %123, i16* %125, align 2, !dbg !3965
  br label %126, !dbg !3966

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3857
  call void @llvm.dbg.value(metadata i32 %127, metadata !3808, metadata !DIExpression()), !dbg !3857
  %128 = add i32 %95, -1, !dbg !3967
  %129 = add i32 %128, %119, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %129, metadata !3805, metadata !DIExpression()), !dbg !3857
  br label %130, !dbg !3969

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3857
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3929
  call void @llvm.dbg.value(metadata i32 %132, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %131, metadata !3808, metadata !DIExpression()), !dbg !3857
  %133 = add nuw nsw i32 %98, 1, !dbg !3970
  call void @llvm.dbg.value(metadata i8* %100, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %133, metadata !3820, metadata !DIExpression()), !dbg !3923
  %134 = icmp eq i32 %133, %31, !dbg !3924
  br i1 %134, label %287, label %94, !dbg !3925, !llvm.loop !3971

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3830, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3831, metadata !DIExpression()), !dbg !3974
  br i1 %28, label %136, label %138, !dbg !3975

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3832, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 0, metadata !3833, metadata !DIExpression()), !dbg !3857
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3976
  call void @llvm.dbg.value(metadata i8* %137, metadata !3834, metadata !DIExpression()), !dbg !3857
  br label %143, !dbg !3979

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3980
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3980

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3834, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 undef, metadata !3833, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 0, metadata !3832, metadata !DIExpression()), !dbg !3857
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !3982
  br label %148, !dbg !3985

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3986
  call void @llvm.dbg.value(metadata i8* %151, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3836, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i8 %149, metadata !3833, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 %150, metadata !3832, metadata !DIExpression()), !dbg !3857
  %152 = icmp eq i8 %30, 0, !dbg !3988
  br i1 %152, label %153, label %155, !dbg !3989

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3990
  br label %160, !dbg !3989

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3989

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3990
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3991
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3992
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3857
  call void @llvm.dbg.value(metadata i8 undef, metadata !3829, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3857
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3993
  %166 = load i8, i8* %165, align 1, !dbg !3993
  %167 = zext i8 %162 to i32, !dbg !3994
  %168 = add i8 %166, %162, !dbg !3995
  call void @llvm.dbg.value(metadata i8 %168, metadata !3829, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3857
  %169 = icmp eq i32 %33, 0, !dbg !3996
  %170 = lshr i8 %163, 1, !dbg !3997
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3997
  call void @llvm.dbg.value(metadata i8 %171, metadata !3829, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3857
  %172 = icmp eq i32 %26, 0, !dbg !3998
  %173 = icmp eq i32 %161, 0, !dbg !3990
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3990
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3990
  call void @llvm.dbg.value(metadata i8 %175, metadata !3829, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3857
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3844, metadata !DIExpression()), !dbg !3999
  %176 = load i32, i32* %14, align 1, !dbg !4000
  store i8 %168, i8* %165, align 1, !dbg !4001
  store i8 %175, i8* %22, align 1, !dbg !4001
  store i8 %171, i8* %29, align 1, !dbg !4001
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %177, metadata !3835, metadata !DIExpression()), !dbg !3857
  %178 = icmp slt i32 %177, 0, !dbg !4003
  br i1 %178, label %287, label %240, !dbg !4005

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %181, metadata !3836, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i8 %182, metadata !3833, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 %183, metadata !3832, metadata !DIExpression()), !dbg !3857
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4006
  call void @llvm.dbg.value(metadata i8* %184, metadata !3807, metadata !DIExpression()), !dbg !3857
  %185 = load i8, i8* %180, align 1, !dbg !4007
  call void @llvm.dbg.value(metadata i8 %185, metadata !3838, metadata !DIExpression()), !dbg !4008
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4009
  call void @llvm.dbg.value(metadata i8* %186, metadata !3807, metadata !DIExpression()), !dbg !3857
  %187 = load i8, i8* %184, align 1, !dbg !4010
  call void @llvm.dbg.value(metadata i8 %187, metadata !3841, metadata !DIExpression()), !dbg !4008
  %188 = zext i8 %187 to i32, !dbg !4011
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4011
  %190 = bitcast i32* %189 to i8**, !dbg !4012
  %191 = load i8*, i8** %190, align 4, !dbg !4012
  call void @llvm.dbg.value(metadata i8* %191, metadata !3842, metadata !DIExpression()), !dbg !4008
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4013
  call void @llvm.dbg.value(metadata i1 %192, metadata !3843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4008
  br i1 %16, label %196, label %193, !dbg !4014

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4016
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4017
  br i1 %195, label %235, label %196, !dbg !4018

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4019

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4020

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4023
  br i1 %199, label %201, label %200, !dbg !4028

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4029
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4029
  unreachable, !dbg !4029

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4023
  %203 = add nuw nsw i8 %183, 1, !dbg !4031
  call void @llvm.dbg.value(metadata i8 %203, metadata !3832, metadata !DIExpression()), !dbg !3857
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4032
  br label %231, !dbg !4033

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4034

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4035
  br i1 %207, label %209, label %208, !dbg !4040

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4041
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4041
  unreachable, !dbg !4041

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4035
  %211 = add nuw nsw i8 %182, 1, !dbg !4043
  call void @llvm.dbg.value(metadata i8 %211, metadata !3833, metadata !DIExpression()), !dbg !3857
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4044
  br label %231, !dbg !4045

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4046

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4048
  br i1 %215, label %217, label %216, !dbg !4053

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4054
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4054
  unreachable, !dbg !4054

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4048
  %219 = add nuw nsw i8 %183, 1, !dbg !4056
  call void @llvm.dbg.value(metadata i8 %219, metadata !3832, metadata !DIExpression()), !dbg !3857
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4057
  br label %231, !dbg !4058

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4059
  br i1 %222, label %224, label %223, !dbg !4063

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4064
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4064
  unreachable, !dbg !4064

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4059
  %226 = add nuw nsw i8 %182, 1, !dbg !4066
  call void @llvm.dbg.value(metadata i8 %226, metadata !3833, metadata !DIExpression()), !dbg !3857
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4067
  store i8 %185, i8* %227, align 1, !dbg !4068
  %228 = add nuw nsw i8 %182, 2, !dbg !4069
  call void @llvm.dbg.value(metadata i8 %228, metadata !3833, metadata !DIExpression()), !dbg !3857
  %229 = zext i8 %226 to i32, !dbg !4070
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4070
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4071
  br label %235, !dbg !4072

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3857
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3992
  call void @llvm.dbg.value(metadata i8 %237, metadata !3833, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8 %236, metadata !3832, metadata !DIExpression()), !dbg !3857
  %238 = add nuw nsw i32 %181, 1, !dbg !4072
  call void @llvm.dbg.value(metadata i8* %186, metadata !3807, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 %238, metadata !3836, metadata !DIExpression()), !dbg !3987
  %239 = icmp eq i32 %238, %31, !dbg !3988
  br i1 %239, label %160, label %179, !dbg !3989, !llvm.loop !4073

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %177, metadata !3805, metadata !DIExpression()), !dbg !3857
  store i32 %176, i32* %14, align 1, !dbg !4075
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4076
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %243, metadata !3835, metadata !DIExpression()), !dbg !3857
  %244 = icmp slt i32 %243, 0, !dbg !4078
  br i1 %244, label %287, label %245, !dbg !4080

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3857
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4081
  %248 = add nuw nsw i32 %44, %24, !dbg !4081
  %249 = sub i32 %247, %248, !dbg !4081
  call void @llvm.dbg.value(metadata i32 %249, metadata !3845, metadata !DIExpression()), !dbg !3857
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %250, metadata !3835, metadata !DIExpression()), !dbg !3857
  %251 = icmp slt i32 %250, 0, !dbg !4083
  br i1 %251, label %287, label %252, !dbg !4085

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %253, metadata !3805, metadata !DIExpression()), !dbg !3857
  %254 = add nuw nsw i32 %253, %250, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %254, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 0, metadata !3846, metadata !DIExpression()), !dbg !4088
  %255 = icmp eq i8 %162, 0, !dbg !4089
  br i1 %255, label %284, label %256, !dbg !4090

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4090

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3846, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 %260, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4091
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4092
  %262 = load i8, i8* %261, align 1, !dbg !4092
  call void @llvm.dbg.value(metadata i8 %262, metadata !3848, metadata !DIExpression()), !dbg !4093
  store i8 %262, i8* %10, align 1, !dbg !4094
  %263 = zext i8 %262 to i32, !dbg !4095
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4095
  %265 = bitcast i32* %264 to i8**, !dbg !4096
  %266 = load i8*, i8** %265, align 4, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %266, metadata !3851, metadata !DIExpression()), !dbg !4093
  br i1 %257, label %270, label %267, !dbg !4097

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4098
  %269 = load i16, i16* %268, align 2, !dbg !4098
  br label %270, !dbg !4097

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4097
  call void @llvm.dbg.value(metadata i32 undef, metadata !3852, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4093
  call void @llvm.dbg.value(metadata i8* %10, metadata !3848, metadata !DIExpression(DW_OP_deref)), !dbg !4093
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %272, metadata !3835, metadata !DIExpression()), !dbg !3857
  %273 = icmp slt i32 %272, 0, !dbg !4100
  br i1 %273, label %277, label %274, !dbg !4102

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3852, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3857
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %275, metadata !3835, metadata !DIExpression()), !dbg !3857
  %276 = icmp slt i32 %275, 0, !dbg !4104
  br i1 %276, label %277, label %279, !dbg !4106

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4107
  call void @llvm.dbg.value(metadata i32 undef, metadata !3805, metadata !DIExpression()), !dbg !3857
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %280, metadata !3805, metadata !DIExpression()), !dbg !3857
  %281 = add nsw i32 %280, %275, !dbg !4109
  call void @llvm.dbg.value(metadata i32 %281, metadata !3805, metadata !DIExpression()), !dbg !3857
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4107
  %282 = add nuw nsw i32 %259, 1, !dbg !4110
  call void @llvm.dbg.value(metadata i32 %282, metadata !3846, metadata !DIExpression()), !dbg !4088
  %283 = icmp eq i32 %282, %167, !dbg !4089
  br i1 %283, label %284, label %258, !dbg !4090, !llvm.loop !4111

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4087
  call void @llvm.dbg.value(metadata i32 %285, metadata !3805, metadata !DIExpression()), !dbg !3857
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4113
  br label %287, !dbg !4114

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3857
  ret i32 %288, !dbg !4115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4120, metadata !DIExpression()), !dbg !4128
  %2 = icmp eq i8* %0, null, !dbg !4129
  br i1 %2, label %3, label %4, !dbg !4132

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4133
  unreachable, !dbg !4133

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4121, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata i8* %0, metadata !4122, metadata !DIExpression()), !dbg !4128
  %5 = load i8, i8* %0, align 1, !dbg !4135
  %6 = zext i8 %5 to i32, !dbg !4135
  %7 = shl nuw nsw i32 %6, 2, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %7, metadata !4123, metadata !DIExpression()), !dbg !4128
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4137
  %9 = load i8, i8* %8, align 1, !dbg !4137
  %10 = zext i8 %9 to i32, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %10, metadata !4124, metadata !DIExpression()), !dbg !4128
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4138
  %12 = load i8, i8* %11, align 1, !dbg !4138
  %13 = zext i8 %12 to i32, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %13, metadata !4125, metadata !DIExpression()), !dbg !4128
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4139
  call void @llvm.dbg.value(metadata i8* %14, metadata !4121, metadata !DIExpression()), !dbg !4128
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4140
  call void @llvm.dbg.value(metadata i8* %15, metadata !4121, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata i32 0, metadata !4126, metadata !DIExpression()), !dbg !4141
  %16 = icmp eq i8 %9, 0, !dbg !4142
  br i1 %16, label %17, label %22, !dbg !4144

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4128
  %19 = ptrtoint i8* %18 to i32, !dbg !4145
  %20 = ptrtoint i8* %0 to i32, !dbg !4145
  %21 = sub i32 %19, %20, !dbg !4145
  ret i32 %21, !dbg !4146

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4126, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i8* %24, metadata !4121, metadata !DIExpression()), !dbg !4128
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4147
  call void @llvm.dbg.value(metadata i8* %25, metadata !4121, metadata !DIExpression()), !dbg !4128
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !4149
  %27 = add i32 %26, 1, !dbg !4150
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4151
  call void @llvm.dbg.value(metadata i8* %28, metadata !4121, metadata !DIExpression()), !dbg !4128
  %29 = add nuw nsw i32 %23, 1, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %29, metadata !4126, metadata !DIExpression()), !dbg !4141
  %30 = icmp eq i32 %29, %10, !dbg !4142
  br i1 %30, label %17, label %22, !dbg !4144, !llvm.loop !4153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4155 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4159, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i8* %1, metadata !4160, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i8* %2, metadata !4161, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.value(metadata i16 %3, metadata !4162, metadata !DIExpression()), !dbg !4163
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4164
  br i1 %5, label %6, label %9, !dbg !4166

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4167
  %8 = add i32 %7, 1, !dbg !4169
  br label %20, !dbg !4170

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4171
  br i1 %10, label %13, label %11, !dbg !4172

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4172
  br label %16, !dbg !4172

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4173
  %15 = add i32 %14, 1, !dbg !4174
  br label %16, !dbg !4172

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4172
  %18 = and i32 %17, 65535, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %17, metadata !4162, metadata !DIExpression()), !dbg !4163
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4176
  br label %20, !dbg !4177

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4163
  ret i32 %21, !dbg !4178
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4181, metadata !DIExpression()), !dbg !4182
  ret i32 0, !dbg !4183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4184 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4188, metadata !DIExpression()), !dbg !4189
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4190
  ret void, !dbg !4191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4192 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4195
  ret i8* %1, !dbg !4196
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4197 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4208, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i8* %0, metadata !4207, metadata !DIExpression()), !dbg !4219
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !4220
  ret void, !dbg !4222
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4227, metadata !DIExpression()), !dbg !4229
  call void @llvm.dbg.value(metadata i8* %1, metadata !4228, metadata !DIExpression()), !dbg !4229
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4230
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4230
  ret i32 %4, !dbg !4231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4232 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4239, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4236, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata i8* %1, metadata !4237, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata i8* %2, metadata !4238, metadata !DIExpression()), !dbg !4240
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4241
  ret void, !dbg !4242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4243 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4247, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i32 %1, metadata !4248, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i32 0, metadata !4249, metadata !DIExpression()), !dbg !4250
  %3 = icmp eq i32 %1, 0, !dbg !4251
  br i1 %3, label %13, label %4, !dbg !4254

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4249, metadata !DIExpression()), !dbg !4250
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4255
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4257
  %8 = load i8, i8* %7, align 1, !dbg !4257
  %9 = zext i8 %8 to i32, !dbg !4257
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4255
  %11 = add nuw i32 %5, 1, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %11, metadata !4249, metadata !DIExpression()), !dbg !4250
  %12 = icmp eq i32 %11, %1, !dbg !4251
  br i1 %12, label %13, label %4, !dbg !4254, !llvm.loop !4259

13:                                               ; preds = %4, %2
  ret void, !dbg !4261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4262 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4266, metadata !DIExpression()), !dbg !4268
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4269
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4269
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4267, metadata !DIExpression()), !dbg !4270
  call void @llvm.va_start(i8* nonnull %3), !dbg !4271
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4272
  %5 = load i32, i32* %4, align 4, !dbg !4272
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4272
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !4272
  call void @llvm.va_end(i8* nonnull %3), !dbg !4273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4274
  ret void, !dbg !4274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4275 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4279, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i32 %1, metadata !4280, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i8* %2, metadata !4281, metadata !DIExpression()), !dbg !4284
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4285
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4285
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4282, metadata !DIExpression()), !dbg !4286
  call void @llvm.va_start(i8* nonnull %5), !dbg !4287
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4288
  %7 = load i32, i32* %6, align 4, !dbg !4288
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4288
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !4288
  call void @llvm.dbg.value(metadata i32 %9, metadata !4283, metadata !DIExpression()), !dbg !4284
  call void @llvm.va_end(i8* nonnull %5), !dbg !4289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4290
  ret i32 %9, !dbg !4291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4292 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4299, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i8* %0, metadata !4296, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i32 %1, metadata !4297, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i8* %2, metadata !4298, metadata !DIExpression()), !dbg !4306
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4307
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4307
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4300, metadata !DIExpression()), !dbg !4308
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4309
  store i8* %0, i8** %7, align 4, !dbg !4309
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4309
  store i32 %1, i32* %8, align 4, !dbg !4309
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4309
  store i32 0, i32* %9, align 4, !dbg !4309
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !4310
  %10 = load i32, i32* %9, align 4, !dbg !4311
  %11 = load i32, i32* %8, align 4, !dbg !4313
  %12 = icmp slt i32 %10, %11, !dbg !4314
  br i1 %12, label %13, label %15, !dbg !4315

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4316
  store i8 0, i8* %14, align 1, !dbg !4318
  br label %15, !dbg !4319

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4320
  ret i32 %10, !dbg !4321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !4322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4327, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4328, metadata !DIExpression()), !dbg !4329
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4330
  %4 = load i8*, i8** %3, align 4, !dbg !4330
  %5 = icmp eq i8* %4, null, !dbg !4332
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4333
  br i1 %5, label %12, label %8, !dbg !4334

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4335
  %10 = load i32, i32* %9, align 4, !dbg !4335
  %11 = icmp slt i32 %7, %10, !dbg !4336
  br i1 %11, label %15, label %12, !dbg !4337

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4338
  %14 = add nsw i32 %7, 1, !dbg !4340
  store i32 %14, i32* %13, align 4, !dbg !4340
  br label %25, !dbg !4341

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4342
  %17 = icmp eq i32 %7, %16, !dbg !4344
  br i1 %17, label %18, label %21, !dbg !4345

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4346
  store i32 %19, i32* %6, align 4, !dbg !4346
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4348
  store i8 0, i8* %20, align 1, !dbg !4349
  br label %25, !dbg !4350

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4351
  %23 = add nsw i32 %7, 1, !dbg !4353
  store i32 %23, i32* %6, align 4, !dbg !4353
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4354
  store i8 %22, i8* %24, align 1, !dbg !4355
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4356
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !4357 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4362, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata i8* %1, metadata !4363, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata i8* %2, metadata !4364, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.value(metadata i8* %3, metadata !4365, metadata !DIExpression()), !dbg !4366
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !4367
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4368
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !4369
  unreachable, !dbg !4370
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !4371 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4478
  ret %struct.k_thread* %1, !dbg !4479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4480 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4484, metadata !DIExpression()), !dbg !4485
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4486, !srcloc !4488
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !4489
  ret void, !dbg !4490
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !4491 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4492, !srcloc !4494
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !4495
  ret %struct.k_thread* %1, !dbg !4496
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4497 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4510, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4507, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %1, metadata !4508, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %2, metadata !4509, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %4, metadata !4511, metadata !DIExpression()), !dbg !4636
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4637
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4637
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4512, metadata !DIExpression()), !dbg !4638
  call void @llvm.dbg.value(metadata i32 0, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i1 undef, metadata !4518, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4636
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4639

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4639

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4640
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4510, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %30, metadata !4509, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %29, metadata !4516, metadata !DIExpression()), !dbg !4636
  %31 = load i8, i8* %30, align 1, !dbg !4641
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4639

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4641
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4642
  call void @llvm.dbg.value(metadata i8* %34, metadata !4509, metadata !DIExpression()), !dbg !4636
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !4642
  call void @llvm.dbg.value(metadata i32 %35, metadata !4520, metadata !DIExpression()), !dbg !4643
  %36 = icmp slt i32 %35, 0, !dbg !4644
  %37 = add i32 %29, 1, !dbg !4642
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %36, label %365, label %28, !llvm.loop !4646

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4648
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4525, metadata !DIExpression()), !dbg !4649
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4649
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4568, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4571, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i8* %30, metadata !4574, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i32 -1, metadata !4575, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i32 -1, metadata !4576, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i8* null, metadata !4577, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i8* %14, metadata !4578, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i8 0, metadata !4579, metadata !DIExpression()), !dbg !4650
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !4651
  call void @llvm.dbg.value(metadata i8* %39, metadata !4509, metadata !DIExpression()), !dbg !4636
  %40 = load i24, i24* %15, align 8, !dbg !4652
  %41 = and i24 %40, 256, !dbg !4652
  %42 = icmp eq i24 %41, 0, !dbg !4652
  br i1 %42, label %51, label %43, !dbg !4654

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4655
  call void @llvm.dbg.value(metadata i8* %44, metadata !4510, metadata !DIExpression()), !dbg !4636
  %45 = bitcast i8* %27 to i32*, !dbg !4655
  %46 = load i32, i32* %45, align 4, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %46, metadata !4575, metadata !DIExpression()), !dbg !4650
  %47 = icmp slt i32 %46, 0, !dbg !4657
  br i1 %47, label %48, label %56, !dbg !4659

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4660
  store i24 %49, i24* %15, align 8, !dbg !4660
  %50 = sub nsw i32 0, %46, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %50, metadata !4575, metadata !DIExpression()), !dbg !4650
  br label %56, !dbg !4663

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4664
  %53 = icmp eq i24 %52, 0, !dbg !4664
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4666
  br label %56, !dbg !4666

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4667
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4650
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4510, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %58, metadata !4575, metadata !DIExpression()), !dbg !4650
  %60 = and i24 %57, 1024, !dbg !4667
  %61 = icmp eq i24 %60, 0, !dbg !4667
  br i1 %61, label %69, label %62, !dbg !4668

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4669
  call void @llvm.dbg.value(metadata i8* %63, metadata !4510, metadata !DIExpression()), !dbg !4636
  %64 = bitcast i8* %59 to i32*, !dbg !4669
  %65 = load i32, i32* %64, align 4, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %65, metadata !4580, metadata !DIExpression()), !dbg !4670
  %66 = icmp slt i32 %65, 0, !dbg !4671
  br i1 %66, label %67, label %74, !dbg !4673

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4674
  store i24 %68, i24* %15, align 8, !dbg !4674
  br label %74, !dbg !4676

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4677
  %71 = icmp eq i24 %70, 0, !dbg !4677
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4679
  br label %74, !dbg !4679

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4680
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4650
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4650
  call void @llvm.dbg.value(metadata i8* %77, metadata !4510, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %76, metadata !4576, metadata !DIExpression()), !dbg !4650
  store i32 0, i32* %16, align 4, !dbg !4681
  store i32 0, i32* %17, align 8, !dbg !4682
  %78 = lshr i24 %75, 16, !dbg !4680
  call void @llvm.dbg.value(metadata i24 %78, metadata !4583, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4650
  %79 = lshr i24 %75, 11, !dbg !4683
  %80 = and i24 %79, 15, !dbg !4683
  %81 = zext i24 %80 to i32, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %81, metadata !4584, metadata !DIExpression()), !dbg !4650
  %82 = trunc i24 %78 to i3, !dbg !4684
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4684

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4685

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %85, metadata !4510, metadata !DIExpression()), !dbg !4636
  %86 = bitcast i8* %77 to i32*, !dbg !4688
  %87 = load i32, i32* %86, align 4, !dbg !4688
  %88 = sext i32 %87 to i64, !dbg !4688
  store i64 %88, i64* %20, align 8, !dbg !4690
  br label %115, !dbg !4691

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4692
  call void @llvm.dbg.value(metadata i8* %90, metadata !4510, metadata !DIExpression()), !dbg !4636
  %91 = bitcast i8* %77 to i32*, !dbg !4692
  %92 = load i32, i32* %91, align 4, !dbg !4692
  %93 = sext i32 %92 to i64, !dbg !4692
  store i64 %93, i64* %20, align 8, !dbg !4695
  br label %115, !dbg !4696

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4697
  %96 = add i32 %95, 7, !dbg !4697
  %97 = and i32 %96, -8, !dbg !4697
  %98 = inttoptr i32 %97 to i8*, !dbg !4697
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4697
  call void @llvm.dbg.value(metadata i8* %99, metadata !4510, metadata !DIExpression()), !dbg !4636
  %100 = inttoptr i32 %97 to i64*, !dbg !4697
  %101 = load i64, i64* %100, align 8, !dbg !4697
  store i64 %101, i64* %20, align 8, !dbg !4698
  br label %115, !dbg !4699

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4700
  %104 = add i32 %103, 7, !dbg !4700
  %105 = and i32 %104, -8, !dbg !4700
  %106 = inttoptr i32 %105 to i8*, !dbg !4700
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4700
  call void @llvm.dbg.value(metadata i8* %107, metadata !4510, metadata !DIExpression()), !dbg !4636
  %108 = inttoptr i32 %105 to i64*, !dbg !4700
  %109 = load i64, i64* %108, align 8, !dbg !4700
  store i64 %109, i64* %20, align 8, !dbg !4701
  br label %115, !dbg !4702

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %111, metadata !4510, metadata !DIExpression()), !dbg !4636
  %112 = bitcast i8* %77 to i32*, !dbg !4703
  %113 = load i32, i32* %112, align 4, !dbg !4703
  %114 = sext i32 %113 to i64, !dbg !4704
  store i64 %114, i64* %20, align 8, !dbg !4705
  br label %115, !dbg !4706

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4707
  call void @llvm.dbg.value(metadata i8* %117, metadata !4510, metadata !DIExpression()), !dbg !4636
  %118 = trunc i24 %79 to i4, !dbg !4708
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4708

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4709
  %121 = ashr exact i64 %120, 56, !dbg !4709
  store i64 %121, i64* %20, align 8, !dbg !4712
  br label %177, !dbg !4713

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4714
  %124 = ashr exact i64 %123, 48, !dbg !4714
  store i64 %124, i64* %20, align 8, !dbg !4717
  br label %177, !dbg !4718

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4719

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4722
  call void @llvm.dbg.value(metadata i8* %127, metadata !4510, metadata !DIExpression()), !dbg !4636
  %128 = bitcast i8* %77 to i32*, !dbg !4722
  %129 = load i32, i32* %128, align 4, !dbg !4722
  %130 = zext i32 %129 to i64, !dbg !4722
  store i64 %130, i64* %20, align 8, !dbg !4724
  br label %157, !dbg !4725

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4726
  call void @llvm.dbg.value(metadata i8* %132, metadata !4510, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %132, metadata !4510, metadata !DIExpression()), !dbg !4636
  %133 = bitcast i8* %77 to i32*, !dbg !4726
  %134 = load i32, i32* %133, align 4, !dbg !4726
  %135 = zext i32 %134 to i64, !dbg !4726
  store i64 %135, i64* %20, align 8, !dbg !4726
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4728
  %138 = add i32 %137, 7, !dbg !4728
  %139 = and i32 %138, -8, !dbg !4728
  %140 = inttoptr i32 %139 to i8*, !dbg !4728
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4728
  call void @llvm.dbg.value(metadata i8* %141, metadata !4510, metadata !DIExpression()), !dbg !4636
  %142 = inttoptr i32 %139 to i64*, !dbg !4728
  %143 = load i64, i64* %142, align 8, !dbg !4728
  store i64 %143, i64* %20, align 8, !dbg !4729
  br label %157, !dbg !4730

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4731
  %146 = add i32 %145, 7, !dbg !4731
  %147 = and i32 %146, -8, !dbg !4731
  %148 = inttoptr i32 %147 to i8*, !dbg !4731
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4731
  call void @llvm.dbg.value(metadata i8* %149, metadata !4510, metadata !DIExpression()), !dbg !4636
  %150 = inttoptr i32 %147 to i64*, !dbg !4731
  %151 = load i64, i64* %150, align 8, !dbg !4731
  store i64 %151, i64* %20, align 8, !dbg !4732
  br label %157, !dbg !4733

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4734
  call void @llvm.dbg.value(metadata i8* %153, metadata !4510, metadata !DIExpression()), !dbg !4636
  %154 = bitcast i8* %77 to i32*, !dbg !4734
  %155 = load i32, i32* %154, align 4, !dbg !4734
  %156 = zext i32 %155 to i64, !dbg !4735
  store i64 %156, i64* %20, align 8, !dbg !4736
  br label %157, !dbg !4737

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4738
  call void @llvm.dbg.value(metadata i8* %159, metadata !4510, metadata !DIExpression()), !dbg !4636
  %160 = trunc i24 %79 to i4, !dbg !4739
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4739

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4740
  store i64 %162, i64* %20, align 8, !dbg !4743
  br label %177, !dbg !4744

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4745
  store i64 %164, i64* %20, align 8, !dbg !4748
  br label %177, !dbg !4749

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4750
  %167 = add i32 %166, 7, !dbg !4750
  %168 = and i32 %167, -8, !dbg !4750
  %169 = inttoptr i32 %168 to i8*, !dbg !4750
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4750
  call void @llvm.dbg.value(metadata i8* %170, metadata !4510, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %170, metadata !4510, metadata !DIExpression()), !dbg !4636
  %171 = inttoptr i32 %168 to double*, !dbg !4750
  %172 = load double, double* %171, align 8, !dbg !4750
  store double %172, double* %19, align 8, !dbg !4750
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4754
  call void @llvm.dbg.value(metadata i8* %174, metadata !4510, metadata !DIExpression()), !dbg !4636
  %175 = bitcast i8* %77 to i8**, !dbg !4754
  %176 = load i8*, i8** %175, align 4, !dbg !4754
  store i8* %176, i8** %18, align 8, !dbg !4757
  br label %177, !dbg !4758

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4650
  call void @llvm.dbg.value(metadata i8* %178, metadata !4510, metadata !DIExpression()), !dbg !4636
  %179 = and i24 %75, 3, !dbg !4759
  %180 = icmp eq i24 %179, 0, !dbg !4759
  br i1 %180, label %185, label %181, !dbg !4759

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !4760
  call void @llvm.dbg.value(metadata i32 %182, metadata !4585, metadata !DIExpression()), !dbg !4761
  %183 = icmp slt i32 %182, 0, !dbg !4762
  %184 = add i32 %182, %29, !dbg !4760
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4764
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4765

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %188, metadata !4589, metadata !DIExpression()), !dbg !4767
  %189 = icmp slt i32 %188, 0, !dbg !4768
  %190 = add i32 %29, 1, !dbg !4766
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4770
  call void @llvm.dbg.value(metadata i8* %192, metadata !4577, metadata !DIExpression()), !dbg !4650
  %193 = icmp sgt i32 %76, -1, !dbg !4771
  br i1 %193, label %194, label %196, !dbg !4773

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !4774
  call void @llvm.dbg.value(metadata i32 %195, metadata !4592, metadata !DIExpression()), !dbg !4776
  br label %241, !dbg !4777

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !4778
  call void @llvm.dbg.value(metadata i32 %197, metadata !4592, metadata !DIExpression()), !dbg !4776
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4577, metadata !DIExpression()), !dbg !4650
  %199 = load i64, i64* %20, align 8, !dbg !4780
  %200 = trunc i64 %199 to i8, !dbg !4781
  store i8 %200, i8* %10, align 1, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %23, metadata !4578, metadata !DIExpression()), !dbg !4650
  br label %245, !dbg !4783

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4784
  %203 = icmp eq i24 %202, 0, !dbg !4784
  %204 = trunc i24 %75 to i8, !dbg !4786
  %205 = shl i8 %204, 1, !dbg !4786
  %206 = and i8 %205, 32, !dbg !4786
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4786
  call void @llvm.dbg.value(metadata i8 %207, metadata !4579, metadata !DIExpression()), !dbg !4650
  %208 = load i64, i64* %20, align 8, !dbg !4787
  call void @llvm.dbg.value(metadata i64 %208, metadata !4517, metadata !DIExpression()), !dbg !4636
  %209 = icmp slt i64 %208, 0, !dbg !4788
  br i1 %209, label %210, label %212, !dbg !4790

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4579, metadata !DIExpression()), !dbg !4650
  %211 = sub nsw i64 0, %208, !dbg !4791
  store i64 %211, i64* %20, align 8, !dbg !4793
  br label %212, !dbg !4794

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4650
  call void @llvm.dbg.value(metadata i8 %213, metadata !4579, metadata !DIExpression()), !dbg !4650
  %214 = load i64, i64* %20, align 8, !dbg !4795
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %215, metadata !4577, metadata !DIExpression()), !dbg !4650
  br label %216, !dbg !4797

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4798
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4799
  call void @llvm.dbg.value(metadata i8* %218, metadata !4577, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i8 %217, metadata !4579, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.label(metadata !4635), !dbg !4800
  %219 = icmp sgt i32 %76, -1, !dbg !4801
  br i1 %219, label %222, label %220, !dbg !4802

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4803
  br label %245, !dbg !4802

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4805
  %224 = sub i32 %22, %223, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %224, metadata !4594, metadata !DIExpression()), !dbg !4806
  %225 = load i24, i24* %15, align 8, !dbg !4807
  %226 = and i24 %225, -65, !dbg !4807
  store i24 %226, i24* %15, align 8, !dbg !4807
  %227 = icmp ugt i32 %76, %224, !dbg !4808
  br i1 %227, label %228, label %245, !dbg !4810

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4811
  store i32 %229, i32* %16, align 4, !dbg !4813
  br label %245, !dbg !4814

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4815
  %232 = icmp eq i8* %231, null, !dbg !4817
  br i1 %232, label %245, label %233, !dbg !4818

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4819
  %235 = zext i32 %234 to i64, !dbg !4819
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4821
  call void @llvm.dbg.value(metadata i8* %236, metadata !4577, metadata !DIExpression()), !dbg !4650
  %237 = load i24, i24* %15, align 8, !dbg !4822
  %238 = or i24 %237, 1048576, !dbg !4822
  store i24 %238, i24* %15, align 8, !dbg !4822
  store i8 120, i8* %21, align 1, !dbg !4823
  br label %216, !dbg !4824

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4825
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !4828
  br label %363, !dbg !4829

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %242, metadata !4592, metadata !DIExpression()), !dbg !4776
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4831
  call void @llvm.dbg.value(metadata i32 -1, metadata !4576, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i32 %29, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %192, metadata !4577, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i8* %243, metadata !4578, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i8 0, metadata !4579, metadata !DIExpression()), !dbg !4650
  %244 = icmp eq i8* %192, null, !dbg !4832
  br i1 %244, label %363, label %245, !dbg !4834, !llvm.loop !4646

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4803
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4650
  call void @llvm.dbg.value(metadata i32 0, metadata !4598, metadata !DIExpression()), !dbg !4650
  %250 = zext i8 %249 to i32, !dbg !4835
  %251 = icmp eq i8 %249, 0, !dbg !4837
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  call void @llvm.dbg.value(metadata i32 undef, metadata !4597, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  call void @llvm.dbg.value(metadata i32 undef, metadata !4597, metadata !DIExpression()), !dbg !4650
  %252 = icmp sgt i32 %58, 0, !dbg !4838
  br i1 %252, label %253, label %302, !dbg !4839

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4803
  %255 = icmp eq i24 %254, 0, !dbg !4803
  %256 = ptrtoint i8* %248 to i32, !dbg !4840
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  %257 = ptrtoint i8* %247 to i32, !dbg !4840
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  %258 = xor i1 %251, true, !dbg !4841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  %259 = sext i1 %258 to i32, !dbg !4841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  %260 = lshr i24 %246, 19, !dbg !4842
  %261 = and i24 %260, 1, !dbg !4842
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4842
  %263 = zext i24 %262 to i32, !dbg !4842
  %264 = add i32 %257, %259, !dbg !4842
  %265 = add i32 %256, %263, !dbg !4842
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  %266 = and i24 %246, 4194304, !dbg !4843
  %267 = icmp eq i24 %266, 0, !dbg !4843
  %268 = load i32, i32* %16, align 4, !dbg !4845
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4650
  call void @llvm.dbg.value(metadata i32 undef, metadata !4597, metadata !DIExpression()), !dbg !4650
  %269 = load i32, i32* %17, align 8, !dbg !4846
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4846
  call void @llvm.dbg.value(metadata i32 undef, metadata !4597, metadata !DIExpression()), !dbg !4650
  %271 = add i32 %264, %58, !dbg !4846
  %272 = add i32 %265, %268, !dbg !4846
  %273 = add i32 %272, %270, !dbg !4847
  %274 = sub i32 %271, %273, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %274, metadata !4575, metadata !DIExpression()), !dbg !4650
  %275 = and i24 %246, 4, !dbg !4848
  %276 = icmp eq i24 %275, 0, !dbg !4848
  br i1 %276, label %277, label %302, !dbg !4849

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4599, metadata !DIExpression()), !dbg !4850
  %278 = and i24 %246, 64, !dbg !4851
  %279 = icmp eq i24 %278, 0, !dbg !4851
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4852
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4852
  %282 = select i1 %279, i32 32, i32 48, !dbg !4852
  br i1 %280, label %287, label %283, !dbg !4852

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %284, metadata !4604, metadata !DIExpression()), !dbg !4854
  %285 = icmp slt i32 %284, 0, !dbg !4855
  %286 = add i32 %29, 1, !dbg !4853
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4650
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4640
  call void @llvm.dbg.value(metadata i32 %290, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8 undef, metadata !4599, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.value(metadata i8 %288, metadata !4579, metadata !DIExpression()), !dbg !4650
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4857
  %292 = add i32 %291, -1, !dbg !4857
  br label %293, !dbg !4857

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4858
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4640
  call void @llvm.dbg.value(metadata i32 %295, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %294, metadata !4575, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i32 %294, metadata !4575, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4650
  %296 = icmp sgt i32 %294, 0, !dbg !4859
  br i1 %296, label %297, label %302, !dbg !4857

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %298, metadata !4575, metadata !DIExpression()), !dbg !4650
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %299, metadata !4610, metadata !DIExpression()), !dbg !4862
  %300 = icmp slt i32 %299, 0, !dbg !4863
  %301 = add i32 %295, 1, !dbg !4861
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %300, label %361, label %293, !llvm.loop !4865

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4650
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4650
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4640
  call void @llvm.dbg.value(metadata i32 %305, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %304, metadata !4575, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i8 %303, metadata !4579, metadata !DIExpression()), !dbg !4650
  %306 = icmp eq i8 %303, 0, !dbg !4867
  br i1 %306, label %312, label %307, !dbg !4868

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4869
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !4870
  call void @llvm.dbg.value(metadata i32 %309, metadata !4613, metadata !DIExpression()), !dbg !4871
  %310 = icmp slt i32 %309, 0, !dbg !4872
  %311 = add i32 %305, 1, !dbg !4870
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4640
  call void @llvm.dbg.value(metadata i32 %313, metadata !4516, metadata !DIExpression()), !dbg !4636
  %314 = lshr i24 %246, 20, !dbg !4874
  %315 = lshr i24 %246, 19, !dbg !4875
  %316 = or i24 %314, %315, !dbg !4876
  %317 = and i24 %316, 1, !dbg !4876
  %318 = icmp eq i24 %317, 0, !dbg !4876
  br i1 %318, label %323, label %319, !dbg !4877

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4878
  call void @llvm.dbg.value(metadata i32 %320, metadata !4617, metadata !DIExpression()), !dbg !4879
  %321 = icmp slt i32 %320, 0, !dbg !4880
  %322 = add i32 %313, 1, !dbg !4878
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4640
  call void @llvm.dbg.value(metadata i32 %324, metadata !4516, metadata !DIExpression()), !dbg !4636
  %325 = and i24 %246, 1048576, !dbg !4882
  %326 = icmp eq i24 %325, 0, !dbg !4882
  br i1 %326, label %333, label %327, !dbg !4883

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4884
  %329 = zext i8 %328 to i32, !dbg !4884
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %330, metadata !4623, metadata !DIExpression()), !dbg !4885
  %331 = icmp slt i32 %330, 0, !dbg !4886
  %332 = add i32 %324, 1, !dbg !4884
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4640
  call void @llvm.dbg.value(metadata i32 %334, metadata !4516, metadata !DIExpression()), !dbg !4636
  %335 = load i32, i32* %16, align 4, !dbg !4888
  call void @llvm.dbg.value(metadata i32 %335, metadata !4598, metadata !DIExpression()), !dbg !4650
  br label %336, !dbg !4889

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4890
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4640
  call void @llvm.dbg.value(metadata i32 %338, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %337, metadata !4598, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4650
  %339 = icmp sgt i32 %337, 0, !dbg !4891
  br i1 %339, label %340, label %345, !dbg !4889

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %341, metadata !4598, metadata !DIExpression()), !dbg !4650
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %342, metadata !4627, metadata !DIExpression()), !dbg !4894
  %343 = icmp slt i32 %342, 0, !dbg !4895
  %344 = add i32 %338, 1, !dbg !4893
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %343, label %361, label %336, !llvm.loop !4897

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %346, metadata !4630, metadata !DIExpression()), !dbg !4900
  %347 = icmp slt i32 %346, 0, !dbg !4901
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %349, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %304, metadata !4575, metadata !DIExpression()), !dbg !4650
  %350 = icmp sgt i32 %304, 0, !dbg !4903
  br i1 %350, label %351, label %363, !dbg !4904

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4904
  %353 = add i32 %352, %338, !dbg !4904
  br label %354, !dbg !4904

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %355, metadata !4575, metadata !DIExpression()), !dbg !4650
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %356, metadata !4632, metadata !DIExpression()), !dbg !4906
  %357 = icmp slt i32 %356, 0, !dbg !4907
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4909
  call void @llvm.dbg.value(metadata i32 undef, metadata !4516, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4636
  call void @llvm.dbg.value(metadata i32 %359, metadata !4575, metadata !DIExpression()), !dbg !4650
  %360 = icmp sgt i32 %355, 1, !dbg !4903
  br i1 %360, label %354, label %363, !dbg !4904, !llvm.loop !4910

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4647
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4640
  call void @llvm.dbg.value(metadata i32 %364, metadata !4516, metadata !DIExpression()), !dbg !4636
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4647
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4636
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4912
  ret i32 %366, !dbg !4912
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4913 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4917, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.value(metadata i8* %1, metadata !4918, metadata !DIExpression()), !dbg !4919
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4920
  store i24 0, i24* %3, align 4, !dbg !4920
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4920
  store i8 0, i8* %4, align 1, !dbg !4920
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4920
  store i32 0, i32* %5, align 4, !dbg !4920
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4920
  store i32 0, i32* %6, align 4, !dbg !4920
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4921
  call void @llvm.dbg.value(metadata i8* %7, metadata !4918, metadata !DIExpression()), !dbg !4919
  %8 = load i8, i8* %7, align 1, !dbg !4922
  %9 = icmp eq i8 %8, 37, !dbg !4924
  br i1 %9, label %10, label %12, !dbg !4925

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4926
  call void @llvm.dbg.value(metadata i8* %11, metadata !4918, metadata !DIExpression()), !dbg !4919
  store i8 37, i8* %4, align 1, !dbg !4928
  br label %18, !dbg !4929

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !4930
  call void @llvm.dbg.value(metadata i8* %13, metadata !4918, metadata !DIExpression()), !dbg !4919
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !4931
  call void @llvm.dbg.value(metadata i8* %14, metadata !4918, metadata !DIExpression()), !dbg !4919
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %15, metadata !4918, metadata !DIExpression()), !dbg !4919
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !4933
  call void @llvm.dbg.value(metadata i8* %16, metadata !4918, metadata !DIExpression()), !dbg !4919
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !4934
  call void @llvm.dbg.value(metadata i8* %17, metadata !4918, metadata !DIExpression()), !dbg !4919
  br label %18, !dbg !4935

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4919
  ret i8* %19, !dbg !4936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4937 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4941, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i8* %1, metadata !4942, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i8* %2, metadata !4943, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i8* %3, metadata !4944, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i32 0, metadata !4945, metadata !DIExpression()), !dbg !4948
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4949

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4950
  call void @llvm.dbg.value(metadata i32 %9, metadata !4945, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i8* %8, metadata !4943, metadata !DIExpression()), !dbg !4948
  %10 = icmp ult i8* %8, %3, !dbg !4951
  br i1 %10, label %11, label %13, !dbg !4952

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4953
  br label %17, !dbg !4952

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4954

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4955
  %16 = icmp eq i8 %15, 0, !dbg !4954
  br i1 %16, label %24, label %17, !dbg !4949

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4953
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4956
  call void @llvm.dbg.value(metadata i8* %19, metadata !4943, metadata !DIExpression()), !dbg !4948
  %20 = zext i8 %18 to i32, !dbg !4957
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !4958
  call void @llvm.dbg.value(metadata i32 %21, metadata !4946, metadata !DIExpression()), !dbg !4959
  %22 = icmp slt i32 %21, 0, !dbg !4960
  %23 = add i32 %9, 1, !dbg !4962
  call void @llvm.dbg.value(metadata i32 undef, metadata !4945, metadata !DIExpression()), !dbg !4948
  br i1 %22, label %24, label %7, !llvm.loop !4963

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4948
  ret i32 %25, !dbg !4965
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4966 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4970, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4971, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %2, metadata !4972, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %3, metadata !4973, metadata !DIExpression()), !dbg !4980
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4981
  %6 = load i8, i8* %5, align 1, !dbg !4981
  %7 = zext i8 %6 to i32, !dbg !4982
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !4983
  %9 = icmp eq i32 %8, 0, !dbg !4983
  call void @llvm.dbg.value(metadata i1 %9, metadata !4974, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4980
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !4984
  call void @llvm.dbg.value(metadata i32 %10, metadata !4975, metadata !DIExpression()), !dbg !4980
  %11 = ptrtoint i8* %3 to i32, !dbg !4985
  %12 = ptrtoint i8* %2 to i32, !dbg !4985
  %13 = sub i32 %11, %12, !dbg !4985
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4986
  call void @llvm.dbg.value(metadata i8* %14, metadata !4977, metadata !DIExpression()), !dbg !4980
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4987

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4980
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4970, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i8* %18, metadata !4977, metadata !DIExpression()), !dbg !4980
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4988
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4989
  call void @llvm.dbg.value(metadata i32 %25, metadata !4978, metadata !DIExpression()), !dbg !4990
  %26 = icmp ult i32 %25, 10, !dbg !4991
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4992
  %28 = add i32 %27, %25, !dbg !4990
  %29 = trunc i32 %28 to i8, !dbg !4992
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4993
  call void @llvm.dbg.value(metadata i8* %30, metadata !4977, metadata !DIExpression()), !dbg !4980
  store i8 %29, i8* %30, align 1, !dbg !4994
  call void @llvm.dbg.value(metadata i64 %22, metadata !4970, metadata !DIExpression()), !dbg !4980
  %31 = icmp uge i64 %19, %15, !dbg !4995
  %32 = icmp ugt i8* %30, %2, !dbg !4996
  %33 = and i1 %31, %32, !dbg !4996
  br i1 %33, label %17, label %34, !dbg !4997, !llvm.loop !4998

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5000
  %36 = load i24, i24* %35, align 4, !dbg !5000
  %37 = and i24 %36, 32, !dbg !5000
  %38 = icmp eq i24 %37, 0, !dbg !5000
  br i1 %38, label %44, label %39, !dbg !5002

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5003

40:                                               ; preds = %39
  br label %41, !dbg !5005

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5009
  store i24 %43, i24* %35, align 4, !dbg !5009
  br label %44, !dbg !5010

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5011 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5017, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i8* %1, metadata !5018, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i32 %2, metadata !5019, metadata !DIExpression()), !dbg !5020
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5021
  %5 = load i24, i24* %4, align 4, !dbg !5021
  %6 = lshr i24 %5, 11, !dbg !5021
  %7 = and i24 %6, 15, !dbg !5021
  %8 = zext i24 %7 to i32, !dbg !5021
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5022

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5023
  store i32 %2, i32* %10, align 4, !dbg !5025
  br label %28, !dbg !5026

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5027
  store i8 %12, i8* %1, align 1, !dbg !5028
  br label %28, !dbg !5029

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5030
  %15 = bitcast i8* %1 to i16*, !dbg !5031
  store i16 %14, i16* %15, align 2, !dbg !5032
  br label %28, !dbg !5033

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5034
  store i32 %2, i32* %17, align 4, !dbg !5035
  br label %28, !dbg !5036

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5037
  %20 = bitcast i8* %1 to i64*, !dbg !5038
  store i64 %19, i64* %20, align 8, !dbg !5039
  br label %28, !dbg !5040

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5041
  %23 = bitcast i8* %1 to i64*, !dbg !5042
  store i64 %22, i64* %23, align 8, !dbg !5043
  br label %28, !dbg !5044

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5045
  store i32 %2, i32* %25, align 4, !dbg !5046
  br label %28, !dbg !5047

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5048
  store i32 %2, i32* %27, align 4, !dbg !5049
  br label %28, !dbg !5050

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5051
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !5052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5055, metadata !DIExpression()), !dbg !5056
  %2 = add i32 %0, -65, !dbg !5057
  %3 = icmp ult i32 %2, 26, !dbg !5058
  %4 = zext i1 %3 to i32, !dbg !5058
  ret i32 %4, !dbg !5059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !5060 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5064, metadata !DIExpression()), !dbg !5065
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5066

2:                                                ; preds = %1
  br label %4, !dbg !5067

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5069

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5070
  ret i32 %5, !dbg !5071
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5072 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5074, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata i8* %1, metadata !5075, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata i8 1, metadata !5076, metadata !DIExpression()), !dbg !5077
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5078

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5076, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata i8* %5, metadata !5075, metadata !DIExpression()), !dbg !5077
  %6 = load i8, i8* %5, align 1, !dbg !5079
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5081

7:                                                ; preds = %4
  br label %11, !dbg !5082

8:                                                ; preds = %4
  br label %11, !dbg !5084

9:                                                ; preds = %4
  br label %11, !dbg !5085

10:                                               ; preds = %4
  br label %11, !dbg !5086

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5087
  %14 = or i24 %13, %12, !dbg !5087
  store i24 %14, i24* %3, align 4, !dbg !5087
  call void @llvm.dbg.value(metadata i8 poison, metadata !5076, metadata !DIExpression()), !dbg !5077
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5075, metadata !DIExpression()), !dbg !5077
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5076, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.value(metadata i8* %15, metadata !5075, metadata !DIExpression()), !dbg !5077
  %17 = load i24, i24* %3, align 4, !dbg !5088
  %18 = and i24 %17, 68, !dbg !5090
  %19 = icmp eq i24 %18, 68, !dbg !5090
  br i1 %19, label %20, label %22, !dbg !5090

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5091
  store i24 %21, i24* %3, align 4, !dbg !5091
  br label %22, !dbg !5093

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5094
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5095 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5097, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %1, metadata !5098, metadata !DIExpression()), !dbg !5101
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5102
  %5 = load i24, i24* %4, align 4, !dbg !5103
  %6 = or i24 %5, 128, !dbg !5103
  store i24 %6, i24* %4, align 4, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %1, metadata !5098, metadata !DIExpression()), !dbg !5101
  %7 = load i8, i8* %1, align 1, !dbg !5104
  %8 = icmp eq i8 %7, 42, !dbg !5106
  br i1 %8, label %9, label %12, !dbg !5107

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5108
  store i24 %10, i24* %4, align 4, !dbg !5108
  call void @llvm.dbg.value(metadata i8* %1, metadata !5098, metadata !DIExpression()), !dbg !5101
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5110
  call void @llvm.dbg.value(metadata i8* %11, metadata !5098, metadata !DIExpression()), !dbg !5101
  store i8* %11, i8** %3, align 4, !dbg !5110
  br label %29, !dbg !5111

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5099, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8** %3, metadata !5098, metadata !DIExpression(DW_OP_deref)), !dbg !5101
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5112
  call void @llvm.dbg.value(metadata i32 %13, metadata !5100, metadata !DIExpression()), !dbg !5101
  %14 = load i8*, i8** %3, align 4, !dbg !5113
  call void @llvm.dbg.value(metadata i8* %14, metadata !5098, metadata !DIExpression()), !dbg !5101
  %15 = icmp eq i8* %14, %1, !dbg !5115
  br i1 %15, label %29, label %16, !dbg !5116

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5117
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5119
  store i32 %13, i32* %18, align 4, !dbg !5120
  %19 = lshr i32 %13, 31, !dbg !5121
  %20 = lshr i24 %17, 1, !dbg !5122
  %21 = and i24 %20, 1, !dbg !5122
  %22 = zext i24 %21 to i32, !dbg !5122
  %23 = or i32 %19, %22, !dbg !5122
  %24 = trunc i32 %23 to i24, !dbg !5122
  %25 = shl nuw nsw i24 %24, 1, !dbg !5122
  %26 = and i24 %17, -131, !dbg !5122
  %27 = or i24 %26, 128, !dbg !5122
  %28 = or i24 %25, %27, !dbg !5122
  store i24 %28, i24* %4, align 4, !dbg !5122
  br label %29, !dbg !5123

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5101
  ret i8* %30, !dbg !5124
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5125 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5127, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata i8* %1, metadata !5128, metadata !DIExpression()), !dbg !5130
  %4 = load i8, i8* %1, align 1, !dbg !5131
  %5 = icmp eq i8 %4, 46, !dbg !5132
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5133
  %7 = load i24, i24* %6, align 4, !dbg !5134
  %8 = select i1 %5, i24 512, i24 0, !dbg !5134
  %9 = and i24 %7, -513, !dbg !5134
  %10 = or i24 %9, %8, !dbg !5134
  store i24 %10, i24* %6, align 4, !dbg !5134
  br i1 %5, label %11, label %32, !dbg !5135

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5128, metadata !DIExpression()), !dbg !5130
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5136
  call void @llvm.dbg.value(metadata i8* %12, metadata !5128, metadata !DIExpression()), !dbg !5130
  store i8* %12, i8** %3, align 4, !dbg !5136
  %13 = load i8, i8* %12, align 1, !dbg !5137
  %14 = icmp eq i8 %13, 42, !dbg !5139
  br i1 %14, label %15, label %18, !dbg !5140

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5141
  store i24 %16, i24* %6, align 4, !dbg !5141
  call void @llvm.dbg.value(metadata i8* %12, metadata !5128, metadata !DIExpression()), !dbg !5130
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5143
  call void @llvm.dbg.value(metadata i8* %17, metadata !5128, metadata !DIExpression()), !dbg !5130
  store i8* %17, i8** %3, align 4, !dbg !5143
  br label %32, !dbg !5144

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5128, metadata !DIExpression(DW_OP_deref)), !dbg !5130
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5145
  call void @llvm.dbg.value(metadata i32 %19, metadata !5129, metadata !DIExpression()), !dbg !5130
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5146
  store i32 %19, i32* %20, align 4, !dbg !5147
  %21 = lshr i32 %19, 31, !dbg !5148
  %22 = load i24, i24* %6, align 4, !dbg !5149
  %23 = lshr i24 %22, 1, !dbg !5149
  %24 = and i24 %23, 1, !dbg !5149
  %25 = zext i24 %24 to i32, !dbg !5149
  %26 = or i32 %21, %25, !dbg !5149
  %27 = trunc i32 %26 to i24, !dbg !5149
  %28 = shl nuw nsw i24 %27, 1, !dbg !5149
  %29 = and i24 %22, -3, !dbg !5149
  %30 = or i24 %28, %29, !dbg !5149
  store i24 %30, i24* %6, align 4, !dbg !5149
  %31 = load i8*, i8** %3, align 4, !dbg !5150
  call void @llvm.dbg.value(metadata i8* %31, metadata !5128, metadata !DIExpression()), !dbg !5130
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5130
  ret i8* %33, !dbg !5151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5152 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5154, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.value(metadata i8* %1, metadata !5155, metadata !DIExpression()), !dbg !5156
  %3 = load i8, i8* %1, align 1, !dbg !5157
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5158

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5159
  call void @llvm.dbg.value(metadata i8* %5, metadata !5155, metadata !DIExpression()), !dbg !5156
  %6 = load i8, i8* %5, align 1, !dbg !5162
  %7 = icmp eq i8 %6, 104, !dbg !5163
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5164
  %9 = load i24, i24* %8, align 4, !dbg !5164
  %10 = and i24 %9, -30721, !dbg !5164
  br i1 %7, label %11, label %14, !dbg !5165

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5166
  store i24 %12, i24* %8, align 4, !dbg !5166
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5168
  call void @llvm.dbg.value(metadata i8* %13, metadata !5155, metadata !DIExpression()), !dbg !5156
  br label %56, !dbg !5169

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5170
  store i24 %15, i24* %8, align 4, !dbg !5170
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5172
  call void @llvm.dbg.value(metadata i8* %17, metadata !5155, metadata !DIExpression()), !dbg !5156
  %18 = load i8, i8* %17, align 1, !dbg !5174
  %19 = icmp eq i8 %18, 108, !dbg !5175
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5176
  %21 = load i24, i24* %20, align 4, !dbg !5176
  %22 = and i24 %21, -30721, !dbg !5176
  br i1 %19, label %23, label %26, !dbg !5177

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5178
  store i24 %24, i24* %20, align 4, !dbg !5178
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5180
  call void @llvm.dbg.value(metadata i8* %25, metadata !5155, metadata !DIExpression()), !dbg !5156
  br label %56, !dbg !5181

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5182
  store i24 %27, i24* %20, align 4, !dbg !5182
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5184
  %30 = load i24, i24* %29, align 4, !dbg !5185
  %31 = and i24 %30, -30721, !dbg !5185
  %32 = or i24 %31, 10240, !dbg !5185
  store i24 %32, i24* %29, align 4, !dbg !5185
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5186
  call void @llvm.dbg.value(metadata i8* %33, metadata !5155, metadata !DIExpression()), !dbg !5156
  br label %56, !dbg !5187

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5188
  %36 = load i24, i24* %35, align 4, !dbg !5189
  %37 = and i24 %36, -30721, !dbg !5189
  %38 = or i24 %37, 12288, !dbg !5189
  store i24 %38, i24* %35, align 4, !dbg !5189
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5190
  call void @llvm.dbg.value(metadata i8* %39, metadata !5155, metadata !DIExpression()), !dbg !5156
  br label %56, !dbg !5191

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5192
  %42 = load i24, i24* %41, align 4, !dbg !5193
  %43 = and i24 %42, -30721, !dbg !5193
  %44 = or i24 %43, 14336, !dbg !5193
  store i24 %44, i24* %41, align 4, !dbg !5193
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5194
  call void @llvm.dbg.value(metadata i8* %45, metadata !5155, metadata !DIExpression()), !dbg !5156
  br label %56, !dbg !5195

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5196
  %48 = load i24, i24* %47, align 4, !dbg !5197
  %49 = and i24 %48, -30723, !dbg !5197
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5198
  call void @llvm.dbg.value(metadata i8* %50, metadata !5155, metadata !DIExpression()), !dbg !5156
  %51 = or i24 %49, 16386, !dbg !5199
  store i24 %51, i24* %47, align 4, !dbg !5199
  br label %56, !dbg !5200

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5201
  %54 = load i24, i24* %53, align 4, !dbg !5202
  %55 = and i24 %54, -30721, !dbg !5202
  store i24 %55, i24* %53, align 4, !dbg !5202
  br label %56, !dbg !5203

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5155, metadata !DIExpression()), !dbg !5156
  ret i8* %57, !dbg !5204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5205 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5207, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %1, metadata !5208, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8 0, metadata !5209, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %1, metadata !5208, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5212
  %3 = load i8, i8* %1, align 1, !dbg !5213
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5214
  store i8 %3, i8* %4, align 1, !dbg !5215
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5216

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5217

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5218
  %9 = load i24, i24* %8, align 4, !dbg !5218
  %10 = and i24 %9, -458753, !dbg !5218
  %11 = or i24 %10, %7, !dbg !5218
  call void @llvm.dbg.label(metadata !5210), !dbg !5219
  %12 = and i24 %9, 30720, !dbg !5220
  %13 = icmp eq i24 %12, 16384, !dbg !5220
  %14 = zext i1 %13 to i24, !dbg !5222
  %15 = or i24 %11, %14, !dbg !5222
  %16 = icmp eq i8 %3, 99, !dbg !5223
  br i1 %16, label %17, label %43, !dbg !5225

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5226
  %19 = icmp ne i24 %18, 0, !dbg !5226
  call void @llvm.dbg.value(metadata i1 %19, metadata !5209, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5212
  br label %43, !dbg !5228

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5229
  %22 = load i24, i24* %21, align 4, !dbg !5230
  %23 = and i24 %22, -458753, !dbg !5230
  %24 = or i24 %23, 262144, !dbg !5230
  call void @llvm.dbg.value(metadata i8 1, metadata !5209, metadata !DIExpression()), !dbg !5212
  br label %43, !dbg !5231

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5234
  %27 = load i24, i24* %26, align 4, !dbg !5235
  %28 = and i24 %27, -458753, !dbg !5235
  %29 = or i24 %28, 196608, !dbg !5235
  %30 = and i24 %27, 30720, !dbg !5236
  %31 = icmp eq i24 %30, 16384, !dbg !5236
  br label %43, !dbg !5238

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5239
  %34 = load i24, i24* %33, align 4, !dbg !5240
  %35 = and i24 %34, -458753, !dbg !5240
  %36 = or i24 %35, 196608, !dbg !5240
  %37 = and i24 %34, 30720, !dbg !5241
  %38 = icmp ne i24 %37, 0, !dbg !5241
  br label %43, !dbg !5243

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5244
  %41 = load i24, i24* %40, align 4, !dbg !5245
  %42 = or i24 %41, 1, !dbg !5245
  br label %43, !dbg !5246

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5247
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5248
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5249
  call void @llvm.dbg.value(metadata i8* %48, metadata !5208, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8 poison, metadata !5209, metadata !DIExpression()), !dbg !5212
  %49 = lshr i24 %44, 1, !dbg !5247
  %50 = and i24 %49, 1, !dbg !5247
  %51 = zext i24 %50 to i32, !dbg !5247
  %52 = or i32 %51, %47, !dbg !5247
  %53 = trunc i32 %52 to i24, !dbg !5247
  %54 = shl nuw nsw i24 %53, 1, !dbg !5247
  %55 = and i24 %44, -3, !dbg !5247
  %56 = or i24 %54, %55, !dbg !5247
  store i24 %56, i24* %46, align 4, !dbg !5247
  ret i8* %48, !dbg !5250
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5251 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5255, metadata !DIExpression()), !dbg !5258
  %2 = load i8*, i8** %0, align 4, !dbg !5259
  call void @llvm.dbg.value(metadata i8* %2, metadata !5256, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i32 0, metadata !5257, metadata !DIExpression()), !dbg !5258
  %3 = load i8, i8* %2, align 1, !dbg !5260
  %4 = zext i8 %3 to i32, !dbg !5261
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !5262
  %6 = icmp eq i32 %5, 0, !dbg !5263
  br i1 %6, label %19, label %7, !dbg !5263

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5257, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i8* %10, metadata !5256, metadata !DIExpression()), !dbg !5258
  %11 = mul i32 %9, 10, !dbg !5264
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5266
  call void @llvm.dbg.value(metadata i8* %12, metadata !5256, metadata !DIExpression()), !dbg !5258
  %13 = add i32 %11, -48, !dbg !5267
  %14 = add i32 %13, %8, !dbg !5268
  call void @llvm.dbg.value(metadata i32 %14, metadata !5257, metadata !DIExpression()), !dbg !5258
  %15 = load i8, i8* %12, align 1, !dbg !5260
  %16 = zext i8 %15 to i32, !dbg !5261
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !5262
  %18 = icmp eq i32 %17, 0, !dbg !5263
  br i1 %18, label %19, label %7, !dbg !5263, !llvm.loop !5269

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5258
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5258
  store i8* %20, i8** %0, align 4, !dbg !5271
  ret i32 %21, !dbg !5272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !5273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5275, metadata !DIExpression()), !dbg !5276
  %2 = add i32 %0, -48, !dbg !5277
  %3 = icmp ult i32 %2, 10, !dbg !5278
  %4 = zext i1 %3 to i32, !dbg !5278
  ret i32 %4, !dbg !5279
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5280 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5285, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i32 %1, metadata !5286, metadata !DIExpression()), !dbg !5287
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5288, !srcloc !5290
  ret void, !dbg !5291
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5292 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5294, metadata !DIExpression()), !dbg !5302
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5303
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5303
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5295, metadata !DIExpression()), !dbg !5304
  call void @llvm.va_start(i8* nonnull %3), !dbg !5305
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5306
  %5 = load i32, i32* %4, align 4, !dbg !5306
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5306
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5306
  call void @llvm.va_end(i8* nonnull %3), !dbg !5307
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5308
  ret void, !dbg !5308
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5309 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,11\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5947, !srcloc !5948
  ret void, !dbg !5949
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5950 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5952, metadata !DIExpression()), !dbg !5954
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !5955
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !5956
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5957, !srcloc !5966
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5957
  call void @llvm.dbg.value(metadata i32 %3, metadata !5963, metadata !DIExpression()) #23, !dbg !5967
  call void @llvm.dbg.value(metadata i32 undef, metadata !5964, metadata !DIExpression()) #23, !dbg !5967
  call void @llvm.dbg.value(metadata i32 %3, metadata !5953, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i32 %3, metadata !5968, metadata !DIExpression()) #23, !dbg !5973
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5975, !srcloc !5976
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5977
  ret i32 0, !dbg !5978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5979 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5981
  %2 = or i32 %1, 512, !dbg !5981
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5981
  ret void, !dbg !5982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5983 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5984
  %2 = or i32 %1, 1024, !dbg !5984
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5984
  ret void, !dbg !5985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #6 !dbg !5986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5988, metadata !DIExpression()), !dbg !5989
  ret i32 0, !dbg !5990
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5991 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5994, metadata !DIExpression()), !dbg !6002
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6003
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6003
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5995, metadata !DIExpression()), !dbg !6004
  call void @llvm.va_start(i8* nonnull %3), !dbg !6005
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6006
  %5 = load i32, i32* %4, align 4, !dbg !6006
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6006
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6006
  call void @llvm.va_end(i8* nonnull %3), !dbg !6007
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6008
  ret void, !dbg !6008
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6009 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6014, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.value(metadata i8* %0, metadata !6013, metadata !DIExpression()), !dbg !6015
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !6016
  ret void, !dbg !6017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6022, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata i8* %1, metadata !6023, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata i32 %2, metadata !6024, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata i8* %1, metadata !6025, metadata !DIExpression()), !dbg !6026
  %4 = icmp eq i32 %2, 0, !dbg !6027
  br i1 %4, label %14, label %5, !dbg !6028

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !6026
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6028

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6025, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata i32 %10, metadata !6024, metadata !DIExpression()), !dbg !6026
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #24, !dbg !6029
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !6031
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6032
  call void @llvm.dbg.value(metadata i32 %11, metadata !6024, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata i8* %12, metadata !6025, metadata !DIExpression()), !dbg !6026
  br i1 %13, label %14, label %8, !dbg !6032, !llvm.loop !6033

14:                                               ; preds = %8, %3
  ret void, !dbg !6035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !6036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6041, metadata !DIExpression()), !dbg !6042
  %2 = add i32 %0, -1, !dbg !6043
  %3 = icmp ult i32 %2, 4, !dbg !6043
  %4 = shl i32 %2, 3, !dbg !6043
  %5 = lshr i32 1145657157, %4, !dbg !6043
  %6 = trunc i32 %5 to i8, !dbg !6043
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6043
  ret i8 %7, !dbg !6044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6045 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6049, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 %1, metadata !6050, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 0, metadata !6051, metadata !DIExpression()), !dbg !6061
  br label %4, !dbg !6062

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #24, !dbg !6063
  call void @llvm.dbg.value(metadata i32 0, metadata !6053, metadata !DIExpression()), !dbg !6064
  br label %16, !dbg !6065

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6051, metadata !DIExpression()), !dbg !6061
  %6 = icmp ult i32 %5, %1, !dbg !6066
  br i1 %6, label %7, label %11, !dbg !6070

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6071
  %9 = load i8, i8* %8, align 1, !dbg !6071
  %10 = zext i8 %9 to i32, !dbg !6073
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #24, !dbg !6074
  br label %12, !dbg !6075

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #24, !dbg !6076
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6078
  call void @llvm.dbg.value(metadata i32 %13, metadata !6051, metadata !DIExpression()), !dbg !6061
  %14 = icmp eq i32 %13, 8, !dbg !6079
  br i1 %14, label %3, label %4, !dbg !6062, !llvm.loop !6080

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #24, !dbg !6082
  ret void, !dbg !6083

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6053, metadata !DIExpression()), !dbg !6064
  %18 = icmp ult i32 %17, %1, !dbg !6084
  br i1 %18, label %19, label %26, !dbg !6085

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6086
  %21 = load i8, i8* %20, align 1, !dbg !6086
  call void @llvm.dbg.value(metadata i8 %21, metadata !6055, metadata !DIExpression()), !dbg !6087
  %22 = zext i8 %21 to i32, !dbg !6088
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !6089
  %24 = icmp eq i32 %23, 0, !dbg !6090
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6089
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #24, !dbg !6091
  br label %27, !dbg !6092

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #24, !dbg !6093
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6095
  call void @llvm.dbg.value(metadata i32 %28, metadata !6053, metadata !DIExpression()), !dbg !6064
  %29 = icmp eq i32 %28, 8, !dbg !6096
  br i1 %29, label %15, label %16, !dbg !6065, !llvm.loop !6097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !6099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6101, metadata !DIExpression()), !dbg !6102
  %2 = add i32 %0, -32, !dbg !6103
  %3 = icmp ult i32 %2, 95, !dbg !6103
  %4 = zext i1 %3 to i32, !dbg !6103
  ret i32 %4, !dbg !6104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6154, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6155, metadata !DIExpression()), !dbg !6156
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6157
  br i1 %3, label %5, label %4, !dbg !6159

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !6160
  br label %5, !dbg !6162

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !6163
  ret void, !dbg !6164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6165 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6169, metadata !DIExpression()), !dbg !6170
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6171
  %3 = load i32, i32* %2, align 4, !dbg !6171
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6171
  %5 = load i32, i32* %4, align 4, !dbg !6171
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6171
  %7 = load i32, i32* %6, align 4, !dbg !6171
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !6171
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6176
  %9 = load i32, i32* %8, align 4, !dbg !6176
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6176
  %11 = load i32, i32* %10, align 4, !dbg !6176
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6176
  %13 = load i32, i32* %12, align 4, !dbg !6176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !6176
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6181
  %15 = load i32, i32* %14, align 4, !dbg !6181
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !6181
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6186
  %17 = load i32, i32* %16, align 4, !dbg !6186
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !6186
  ret void, !dbg !6191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6192 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6209, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6210, metadata !DIExpression()), !dbg !6212
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6213
  %4 = load i32, i32* %3, align 4, !dbg !6213
  call void @llvm.dbg.value(metadata i32 %4, metadata !6211, metadata !DIExpression()), !dbg !6212
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !6214
  ret void, !dbg !6215
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !6216 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6220, metadata !DIExpression()), !dbg !6223
  call void @llvm.dbg.value(metadata i8* %0, metadata !6221, metadata !DIExpression()), !dbg !6223
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6224
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6224
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6222, metadata !DIExpression()), !dbg !6225
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6225
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6226
  %5 = bitcast i8* %4 to i32*, !dbg !6226
  %6 = load i32, i32* %5, align 4, !dbg !6226
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6227
  store i32 %6, i32* %7, align 4, !dbg !6228
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !6229
  unreachable, !dbg !6230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6234, metadata !DIExpression()), !dbg !6235
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !6236
  ret void, !dbg !6237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6242, metadata !DIExpression()), !dbg !6243
  %2 = icmp sgt i32 %0, -1, !dbg !6244
  br i1 %2, label %3, label %8, !dbg !6246

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6247, !srcloc !6249
  %4 = and i32 %0, 31, !dbg !6250
  %5 = shl nuw i32 1, %4, !dbg !6251
  %6 = lshr i32 %0, 5, !dbg !6252
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6253
  store volatile i32 %5, i32* %7, align 4, !dbg !6254
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6255, !srcloc !6256
  br label %8, !dbg !6257

8:                                                ; preds = %3, %1
  ret void, !dbg !6258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6261, metadata !DIExpression()), !dbg !6262
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !6263
  ret void, !dbg !6264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6267, metadata !DIExpression()), !dbg !6268
  %2 = icmp sgt i32 %0, -1, !dbg !6269
  br i1 %2, label %3, label %8, !dbg !6271

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6272
  %5 = shl nuw i32 1, %4, !dbg !6274
  %6 = lshr i32 %0, 5, !dbg !6275
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6276
  store volatile i32 %5, i32* %7, align 4, !dbg !6277
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6278, !srcloc !6282
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6283, !srcloc !6286
  br label %8, !dbg !6287

8:                                                ; preds = %3, %1
  ret void, !dbg !6288
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !6289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6293, metadata !DIExpression()), !dbg !6294
  %2 = lshr i32 %0, 5, !dbg !6295
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6296
  %4 = load volatile i32, i32* %3, align 4, !dbg !6296
  %5 = and i32 %0, 31, !dbg !6297
  %6 = shl nuw i32 1, %5, !dbg !6297
  %7 = and i32 %4, %6, !dbg !6298
  ret i32 %7, !dbg !6299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6304, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i32 %1, metadata !6305, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i32 %2, metadata !6306, metadata !DIExpression()), !dbg !6307
  %4 = add i32 %1, 1, !dbg !6308
  call void @llvm.dbg.value(metadata i32 %4, metadata !6305, metadata !DIExpression()), !dbg !6307
  %5 = icmp ult i32 %4, 16, !dbg !6311
  br i1 %5, label %7, label %6, !dbg !6314

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !6315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6315
  unreachable, !dbg !6315

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !6317
  ret void, !dbg !6318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6323, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata i32 %1, metadata !6324, metadata !DIExpression()), !dbg !6325
  %3 = trunc i32 %1 to i8, !dbg !6326
  %4 = shl i8 %3, 4, !dbg !6326
  %5 = and i32 %0, 15, !dbg !6328
  %6 = add nsw i32 %5, -4, !dbg !6328
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6328
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6328
  %9 = icmp slt i32 %0, 0, !dbg !6328
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6328
  store volatile i8 %4, i8* %10, align 1, !dbg !6326
  ret void, !dbg !6329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6330 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6332, metadata !DIExpression()), !dbg !6333
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !6334
  ret void, !dbg !6335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6336 {
  tail call void @z_SysNmiOnReset() #24, !dbg !6338
  tail call void @z_arm_int_exit() #24, !dbg !6339
  ret void, !dbg !6340
}

; Function Attrs: optsize
declare !dbg !6341 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6342 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !6344 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !6346
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !6347
  tail call void @z_bss_zero() #24, !dbg !6348
  tail call void @z_data_copy() #24, !dbg !6349
  tail call void @z_arm_interrupt_init() #24, !dbg !6350
  tail call void @z_cstart() #27, !dbg !6351
  unreachable, !dbg !6351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6352 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6353
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6354, !srcloc !6357
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6358, !srcloc !6361
  ret void, !dbg !6362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6363 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6364
  %2 = and i32 %1, -15728641, !dbg !6364
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6364
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6365, !srcloc !6370
  call void @llvm.dbg.value(metadata i32 %3, metadata !6368, metadata !DIExpression()) #23, !dbg !6371
  %4 = and i32 %3, -5, !dbg !6372
  call void @llvm.dbg.value(metadata i32 %4, metadata !6373, metadata !DIExpression()) #23, !dbg !6378
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6382, !srcloc !6361
  ret void, !dbg !6384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6388, metadata !DIExpression()), !dbg !6389
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6390
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6391
  store i32 %0, i32* %3, align 4, !dbg !6392
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6393
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6394
  store i32 %4, i32* %5, align 4, !dbg !6395
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6396
  %7 = or i32 %6, 268435456, !dbg !6396
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6396
  call void @llvm.dbg.value(metadata i32 0, metadata !6397, metadata !DIExpression()) #23, !dbg !6400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6402, !srcloc !6403
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6404
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6405
  %10 = load i32, i32* %9, align 4, !dbg !6405
  ret i32 %10, !dbg !6406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !6407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6520, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6521, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i8* %2, metadata !6522, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6523, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i8* %4, metadata !6524, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i8* %5, metadata !6525, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.value(metadata i8* %6, metadata !6526, metadata !DIExpression()), !dbg !6528
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6529
  call void @llvm.dbg.value(metadata i8* %8, metadata !6527, metadata !DIExpression()), !dbg !6528
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6530
  %10 = bitcast i8* %9 to i32*, !dbg !6530
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6531
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6532
  %12 = bitcast i8* %8 to i32*, !dbg !6533
  store i32 %11, i32* %12, align 4, !dbg !6534
  %13 = ptrtoint i8* %4 to i32, !dbg !6535
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6536
  %15 = bitcast i8* %14 to i32*, !dbg !6536
  store i32 %13, i32* %15, align 4, !dbg !6537
  %16 = ptrtoint i8* %5 to i32, !dbg !6538
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6539
  %18 = bitcast i8* %17 to i32*, !dbg !6539
  store i32 %16, i32* %18, align 4, !dbg !6540
  %19 = ptrtoint i8* %6 to i32, !dbg !6541
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6542
  %21 = bitcast i8* %20 to i32*, !dbg !6542
  store i32 %19, i32* %21, align 4, !dbg !6543
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6544
  %23 = bitcast i8* %22 to i32*, !dbg !6544
  store i32 16777216, i32* %23, align 4, !dbg !6545
  %24 = ptrtoint i8* %8 to i32, !dbg !6546
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6547
  store i32 %24, i32* %25, align 8, !dbg !6548
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6549
  store i32 0, i32* %26, align 4, !dbg !6550
  ret void, !dbg !6551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6557, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 %1, metadata !6558, metadata !DIExpression()), !dbg !6563
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6564
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6559, metadata !DIExpression()), !dbg !6563
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6565
  br i1 %4, label %19, label %5, !dbg !6567

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6562, metadata !DIExpression()), !dbg !6563
  %6 = icmp eq i32 %0, -22, !dbg !6568
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6568
  %8 = load i32, i32* %7, align 4, !dbg !6568
  br i1 %6, label %16, label %9, !dbg !6570

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6568
  %11 = icmp ule i32 %10, %0, !dbg !6568
  %12 = icmp ugt i32 %8, %0, !dbg !6568
  %13 = and i1 %12, %11, !dbg !6568
  %14 = icmp ugt i32 %8, %1, !dbg !6568
  %15 = and i1 %14, %13, !dbg !6568
  br i1 %15, label %18, label %19, !dbg !6568

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6568
  br i1 %17, label %18, label %19, !dbg !6570

18:                                               ; preds = %9, %16
  br label %19, !dbg !6571

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6563
  ret i32 %20, !dbg !6573
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !6574 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6578, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.value(metadata i8* %1, metadata !6579, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6580, metadata !DIExpression()), !dbg !6581
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6582
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !6583
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6584, !srcloc !6585
  unreachable, !dbg !6586
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6587 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6605, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 %1, metadata !6606, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 %2, metadata !6607, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6608, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 0, metadata !6609, metadata !DIExpression()), !dbg !6615
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6616
  call void @llvm.dbg.value(metadata i32 %8, metadata !6610, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6615
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6617
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6617
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6618
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6618
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6614, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.value(metadata i32 0, metadata !6620, metadata !DIExpression()) #23, !dbg !6623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6625, !srcloc !6626
  call void @llvm.dbg.value(metadata i8* %6, metadata !6612, metadata !DIExpression(DW_OP_deref)), !dbg !6615
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !6627
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6613, metadata !DIExpression()), !dbg !6615
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6628
  br i1 %11, label %12, label %13, !dbg !6631

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #24, !dbg !6632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6632
  unreachable, !dbg !6632

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6634
  call void @llvm.dbg.value(metadata i32 %14, metadata !6610, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i8* %5, metadata !6611, metadata !DIExpression(DW_OP_deref)), !dbg !6615
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !6635
  call void @llvm.dbg.value(metadata i32 %15, metadata !6609, metadata !DIExpression()), !dbg !6615
  %16 = load i8, i8* %5, align 1, !dbg !6636, !range !6638
  call void @llvm.dbg.value(metadata i8 %16, metadata !6611, metadata !DIExpression()), !dbg !6615
  %17 = icmp eq i8 %16, 0, !dbg !6636
  br i1 %17, label %18, label %35, !dbg !6639

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6640
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !6641
  %21 = load i8, i8* %6, align 1, !dbg !6642, !range !6638
  call void @llvm.dbg.value(metadata i8 %21, metadata !6612, metadata !DIExpression()), !dbg !6615
  %22 = icmp eq i8 %21, 0, !dbg !6642
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6644
  %24 = load i32, i32* %23, align 4, !dbg !6644
  br i1 %22, label %30, label %25, !dbg !6645

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6646
  %27 = icmp eq i32 %26, 0, !dbg !6649
  br i1 %27, label %28, label %34, !dbg !6650

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6651
  br label %32, !dbg !6653

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6654
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6644
  br label %34, !dbg !6656

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !6656
  br label %35, !dbg !6657

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6657
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6657
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6657
  ret void, !dbg !6657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6663, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i32 %1, metadata !6664, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i32 %2, metadata !6665, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i8* %3, metadata !6666, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i8 0, metadata !6667, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6668, metadata !DIExpression()), !dbg !6669
  store i8 0, i8* %3, align 1, !dbg !6670
  %5 = icmp ugt i32 %2, -16777217, !dbg !6671
  br i1 %5, label %6, label %17, !dbg !6673

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6674
  %8 = icmp eq i32 %7, 8, !dbg !6674
  br i1 %8, label %9, label %10, !dbg !6674

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #24, !dbg !6676
  br label %17, !dbg !6682

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6683
  %12 = icmp eq i32 %11, 0, !dbg !6683
  br i1 %12, label %13, label %14, !dbg !6684

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6668, metadata !DIExpression()), !dbg !6669
  store i8 1, i8* %3, align 1, !dbg !6687
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6669
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6668, metadata !DIExpression()), !dbg !6669
  br label %17, !dbg !6690

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6669
  ret %struct.__esf* %18, !dbg !6691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6692 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6696, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 %1, metadata !6697, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8* %2, metadata !6698, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  store i8 0, i8* %2, align 1, !dbg !6701
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6702

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !6703
  call void @llvm.dbg.value(metadata i32 %5, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %12, !dbg !6705

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6706
  call void @llvm.dbg.value(metadata i32 %7, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %12, !dbg !6707

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6708
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %12, !dbg !6709

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !6710
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %12, !dbg !6711

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !6712
  br label %12, !dbg !6713

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !6714
  br label %12, !dbg !6715

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6700
  call void @llvm.dbg.value(metadata i32 %13, metadata !6699, metadata !DIExpression()), !dbg !6700
  ret i32 %13, !dbg !6716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6717 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6721, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i8* %1, metadata !6722, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 0, metadata !6723, metadata !DIExpression()), !dbg !6724
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #24, !dbg !6725
  store i8 0, i8* %1, align 1, !dbg !6730
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6731
  %4 = and i32 %3, 2, !dbg !6733
  %5 = icmp eq i32 %4, 0, !dbg !6734
  br i1 %5, label %7, label %6, !dbg !6735

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #24, !dbg !6736
  br label %38, !dbg !6742

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6743
  %9 = icmp sgt i32 %8, -1, !dbg !6745
  br i1 %9, label %11, label %10, !dbg !6746

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #24, !dbg !6747
  br label %38, !dbg !6753

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6754
  %13 = and i32 %12, 1073741824, !dbg !6756
  %14 = icmp eq i32 %13, 0, !dbg !6757
  br i1 %14, label %37, label %15, !dbg !6758

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #24, !dbg !6759
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !6765
  br i1 %16, label %17, label %21, !dbg !6767

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6768
  %19 = load i32, i32* %18, align 4, !dbg !6768
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !6768
  %20 = load i32, i32* %18, align 4, !dbg !6774
  call void @llvm.dbg.value(metadata i32 %20, metadata !6723, metadata !DIExpression()), !dbg !6724
  br label %38, !dbg !6775

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6776
  %23 = and i32 %22, 255, !dbg !6778
  %24 = icmp eq i32 %23, 0, !dbg !6779
  br i1 %24, label %27, label %25, !dbg !6780

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6781
  call void @llvm.dbg.value(metadata i32 %26, metadata !6723, metadata !DIExpression()), !dbg !6724
  br label %38, !dbg !6783

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6784
  %29 = and i32 %28, 65280, !dbg !6786
  %30 = icmp eq i32 %29, 0, !dbg !6787
  br i1 %30, label %32, label %31, !dbg !6788

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6789
  call void @llvm.dbg.value(metadata i32 0, metadata !6723, metadata !DIExpression()), !dbg !6724
  br label %38, !dbg !6791

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6792
  %34 = icmp ult i32 %33, 65536, !dbg !6794
  br i1 %34, label %36, label %35, !dbg !6795

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #25, !dbg !6796
  call void @llvm.dbg.value(metadata i32 0, metadata !6723, metadata !DIExpression()), !dbg !6724
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #24, !dbg !6798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6798
  unreachable, !dbg !6798

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #24, !dbg !6803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6803
  unreachable, !dbg !6803

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6724
  call void @llvm.dbg.value(metadata i32 %39, metadata !6723, metadata !DIExpression()), !dbg !6724
  ret i32 %39, !dbg !6808
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6809 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6811, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i32 %1, metadata !6812, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i8* %2, metadata !6813, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i32 0, metadata !6814, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i32 -22, metadata !6815, metadata !DIExpression()), !dbg !6824
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #24, !dbg !6825
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6830
  %5 = and i32 %4, 16, !dbg !6832
  %6 = icmp eq i32 %5, 0, !dbg !6833
  br i1 %6, label %8, label %7, !dbg !6834

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !6835
  br label %8, !dbg !6841

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6842
  %10 = and i32 %9, 8, !dbg !6844
  %11 = icmp eq i32 %10, 0, !dbg !6845
  br i1 %11, label %13, label %12, !dbg !6846

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !6847
  br label %13, !dbg !6853

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6854
  %15 = and i32 %14, 2, !dbg !6855
  %16 = icmp eq i32 %15, 0, !dbg !6856
  br i1 %16, label %27, label %17, !dbg !6857

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #24, !dbg !6858
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6863
  call void @llvm.dbg.value(metadata i32 %18, metadata !6816, metadata !DIExpression()), !dbg !6864
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6865
  %20 = and i32 %19, 128, !dbg !6867
  %21 = icmp eq i32 %20, 0, !dbg !6868
  br i1 %21, label %27, label %22, !dbg !6869

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6815, metadata !DIExpression()), !dbg !6824
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #24, !dbg !6870
  %23 = icmp eq i32 %1, 0, !dbg !6876
  br i1 %23, label %27, label %24, !dbg !6878

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6879
  %26 = and i32 %25, -129, !dbg !6879
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6879
  br label %27, !dbg !6881

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6824
  call void @llvm.dbg.value(metadata i32 %28, metadata !6815, metadata !DIExpression()), !dbg !6824
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6882
  %30 = and i32 %29, 1, !dbg !6884
  %31 = icmp eq i32 %30, 0, !dbg !6885
  br i1 %31, label %33, label %32, !dbg !6886

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !6887
  br label %33, !dbg !6893

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6894
  %35 = and i32 %34, 32, !dbg !6896
  %36 = icmp eq i32 %35, 0, !dbg !6897
  br i1 %36, label %38, label %37, !dbg !6898

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !6899
  br label %38, !dbg !6905

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6906
  %40 = and i32 %39, 16, !dbg !6907
  %41 = icmp eq i32 %40, 0, !dbg !6907
  br i1 %41, label %42, label %46, !dbg !6908

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6909
  %44 = and i32 %43, 2, !dbg !6910
  %45 = icmp eq i32 %44, 0, !dbg !6910
  br i1 %45, label %60, label %46, !dbg !6911

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6912
  %48 = and i32 %47, 2048, !dbg !6913
  %49 = icmp eq i32 %48, 0, !dbg !6913
  br i1 %49, label %60, label %50, !dbg !6914

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6915
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #24, !dbg !6916
  call void @llvm.dbg.value(metadata i32 %52, metadata !6819, metadata !DIExpression()), !dbg !6917
  %53 = icmp eq i32 %52, 0, !dbg !6918
  br i1 %53, label %55, label %54, !dbg !6920

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6921, metadata !DIExpression()) #23, !dbg !6924
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6927, !srcloc !6928
  call void @llvm.dbg.value(metadata i32 2, metadata !6814, metadata !DIExpression()), !dbg !6824
  br label %60, !dbg !6929

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6930
  %57 = and i32 %56, 16, !dbg !6930
  %58 = icmp eq i32 %57, 0, !dbg !6930
  br i1 %58, label %60, label %59, !dbg !6934

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !6935
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !6935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !6935
  unreachable, !dbg !6935

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6824
  call void @llvm.dbg.value(metadata i32 %61, metadata !6814, metadata !DIExpression()), !dbg !6824
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6937
  %63 = and i32 %62, 32, !dbg !6939
  %64 = icmp eq i32 %63, 0, !dbg !6940
  br i1 %64, label %68, label %65, !dbg !6941

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6942
  %67 = and i32 %66, -8193, !dbg !6942
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6942
  br label %68, !dbg !6944

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6945
  %70 = or i32 %69, 255, !dbg !6945
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6945
  store i8 0, i8* %2, align 1, !dbg !6946
  ret i32 %61, !dbg !6947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6948 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6952, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata i32 %0, metadata !6953, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata i8* %1, metadata !6954, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.value(metadata i32 0, metadata !6955, metadata !DIExpression()), !dbg !6959
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #24, !dbg !6960
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6965
  %4 = and i32 %3, 4096, !dbg !6967
  %5 = icmp eq i32 %4, 0, !dbg !6967
  br i1 %5, label %7, label %6, !dbg !6968

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !6969
  br label %7, !dbg !6975

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6976
  %9 = and i32 %8, 2048, !dbg !6978
  %10 = icmp eq i32 %9, 0, !dbg !6978
  br i1 %10, label %12, label %11, !dbg !6979

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !6980
  br label %12, !dbg !6986

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6987
  %14 = and i32 %13, 512, !dbg !6988
  %15 = icmp eq i32 %14, 0, !dbg !6988
  br i1 %15, label %26, label %16, !dbg !6989

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !6990
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6995
  call void @llvm.dbg.value(metadata i32 %17, metadata !6956, metadata !DIExpression()), !dbg !6996
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6997
  %19 = and i32 %18, 32768, !dbg !6999
  %20 = icmp eq i32 %19, 0, !dbg !7000
  br i1 %20, label %26, label %21, !dbg !7001

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7002
  %22 = icmp eq i32 %0, 0, !dbg !7008
  br i1 %22, label %26, label %23, !dbg !7010

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  %25 = and i32 %24, -32769, !dbg !7011
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  br label %26, !dbg !7013

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7014
  %28 = and i32 %27, 1024, !dbg !7016
  %29 = icmp eq i32 %28, 0, !dbg !7016
  br i1 %29, label %31, label %30, !dbg !7017

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !7018
  br label %31, !dbg !7024

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7025
  %33 = and i32 %32, 256, !dbg !7027
  %34 = icmp eq i32 %33, 0, !dbg !7028
  br i1 %34, label %35, label %39, !dbg !7029

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7030
  %37 = and i32 %36, 8192, !dbg !7032
  %38 = icmp eq i32 %37, 0, !dbg !7032
  br i1 %38, label %41, label %39, !dbg !7033

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !7034
  br label %41, !dbg !7035

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7035
  %43 = or i32 %42, 65280, !dbg !7035
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7035
  store i8 0, i8* %1, align 1, !dbg !7036
  ret void, !dbg !7037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7038 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7044, metadata !DIExpression()), !dbg !7046
  call void @llvm.dbg.value(metadata i32 0, metadata !7045, metadata !DIExpression()), !dbg !7046
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #24, !dbg !7047
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7052
  %2 = and i32 %1, 33554432, !dbg !7054
  %3 = icmp eq i32 %2, 0, !dbg !7055
  br i1 %3, label %5, label %4, !dbg !7056

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #24, !dbg !7057
  br label %5, !dbg !7063

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7064
  %7 = and i32 %6, 16777216, !dbg !7066
  %8 = icmp eq i32 %7, 0, !dbg !7067
  br i1 %8, label %10, label %9, !dbg !7068

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #24, !dbg !7069
  br label %10, !dbg !7075

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7076
  %12 = and i32 %11, 524288, !dbg !7078
  %13 = icmp eq i32 %12, 0, !dbg !7079
  br i1 %13, label %15, label %14, !dbg !7080

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !7081
  br label %15, !dbg !7087

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7088
  %17 = and i32 %16, 262144, !dbg !7090
  %18 = icmp eq i32 %17, 0, !dbg !7091
  br i1 %18, label %20, label %19, !dbg !7092

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !7093
  br label %20, !dbg !7099

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7100
  %22 = and i32 %21, 131072, !dbg !7102
  %23 = icmp eq i32 %22, 0, !dbg !7103
  br i1 %23, label %25, label %24, !dbg !7104

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #24, !dbg !7105
  br label %25, !dbg !7111

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7112
  %27 = and i32 %26, 65536, !dbg !7114
  %28 = icmp eq i32 %27, 0, !dbg !7115
  br i1 %28, label %30, label %29, !dbg !7116

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !7117
  br label %30, !dbg !7123

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7124
  %32 = or i32 %31, -65536, !dbg !7124
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7124
  ret void, !dbg !7125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7126 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7130, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %0, metadata !7131, metadata !DIExpression()), !dbg !7132
  store i8 0, i8* %0, align 1, !dbg !7133
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !7134
  ret void, !dbg !7139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7140 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7144, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.value(metadata i32 %0, metadata !7145, metadata !DIExpression()), !dbg !7146
  %2 = icmp slt i32 %0, 16, !dbg !7147
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7147
  %4 = add nsw i32 %0, -16, !dbg !7147
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !7147
  ret void, !dbg !7152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7153 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7157, metadata !DIExpression()), !dbg !7160
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7161
  %3 = load i32, i32* %2, align 4, !dbg !7161
  %4 = inttoptr i32 %3 to i16*, !dbg !7162
  call void @llvm.dbg.value(metadata i16* %4, metadata !7158, metadata !DIExpression()), !dbg !7160
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7163
  %6 = or i32 %5, 256, !dbg !7163
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7163
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7164, !srcloc !7167
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7168, !srcloc !7171
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7172
  %8 = load i16, i16* %7, align 2, !dbg !7173
  call void @llvm.dbg.value(metadata i16 %8, metadata !7159, metadata !DIExpression()), !dbg !7160
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7174
  %10 = and i32 %9, -257, !dbg !7174
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7174
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7175, !srcloc !7167
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7177, !srcloc !7171
  %11 = icmp eq i16 %8, -8446, !dbg !7179
  ret i1 %11, !dbg !7181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7182 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7183
  %2 = or i32 %1, 16, !dbg !7183
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7183
  ret void, !dbg !7184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7185 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7189
  br label %1, !dbg !7190

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7188, metadata !DIExpression()), !dbg !7189
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #25, !dbg !7192
  %3 = add nuw nsw i32 %2, 1, !dbg !7195
  call void @llvm.dbg.value(metadata i32 %3, metadata !7188, metadata !DIExpression()), !dbg !7189
  %4 = icmp eq i32 %3, 86, !dbg !7196
  br i1 %4, label %5, label %1, !dbg !7190, !llvm.loop !7197

5:                                                ; preds = %1
  ret void, !dbg !7199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #15 !dbg !7200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7202, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.value(metadata i32 1, metadata !7203, metadata !DIExpression()), !dbg !7204
  %2 = and i32 %0, 15, !dbg !7205
  %3 = add nsw i32 %2, -4, !dbg !7205
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7205
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7205
  %6 = icmp slt i32 %0, 0, !dbg !7205
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7205
  store volatile i8 16, i8* %7, align 1, !dbg !7206
  ret void, !dbg !7208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7318, metadata !DIExpression()), !dbg !7319
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7320
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7322
  br i1 %3, label %4, label %12, !dbg !7323

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7324, !srcloc !7336
  call void @llvm.dbg.value(metadata i32 %5, metadata !7327, metadata !DIExpression()) #23, !dbg !7337
  %6 = icmp eq i32 %5, 0, !dbg !7338
  br i1 %6, label %12, label %7, !dbg !7339

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7340
  %9 = or i32 %8, 268435456, !dbg !7340
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7340
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7342
  %11 = and i32 %10, -32769, !dbg !7342
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7342
  br label %12, !dbg !7343

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !7344
  ret void, !dbg !7345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7346 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !7347
  ret void, !dbg !7348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !499, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i8 0, metadata !500, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 64, metadata !502, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 undef, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7349
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7350
  %3 = load i32, i32* %2, align 4, !dbg !7350
  call void @llvm.dbg.value(metadata i32 %3, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7349
  %4 = add i32 %3, -64, !dbg !7352
  call void @llvm.dbg.value(metadata i32 %4, metadata !501, metadata !DIExpression()), !dbg !7349
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7353
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7354
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7355
  call void @llvm.dbg.value(metadata i8 1, metadata !500, metadata !DIExpression()), !dbg !7349
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !7356
  ret void, !dbg !7357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7358 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7359
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7360, !srcloc !7363
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7364, !srcloc !7367
  ret void, !dbg !7368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7369 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7370, !srcloc !7373
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7374
  ret void, !dbg !7375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7376 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7391, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i8 %1, metadata !7392, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i32 %2, metadata !7393, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i32 %3, metadata !7394, metadata !DIExpression()), !dbg !7395
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7396
  %6 = icmp eq i32 %5, -22, !dbg !7398
  br i1 %6, label %7, label %9, !dbg !7399

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7400
  %8 = zext i8 %1 to i32, !dbg !7400
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #24, !dbg !7400
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7400
  unreachable, !dbg !7400

9:                                                ; preds = %4
  ret void, !dbg !7405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7406 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7411, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.value(metadata i8 %1, metadata !7412, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.value(metadata i32 undef, metadata !7413, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.value(metadata i32 undef, metadata !7414, metadata !DIExpression()), !dbg !7416
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7417
  call void @llvm.dbg.value(metadata i8 %3, metadata !7415, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7416
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !7418
  call void @llvm.dbg.value(metadata i32 %4, metadata !7415, metadata !DIExpression()), !dbg !7416
  %5 = trunc i32 %4 to i8, !dbg !7419
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7420
  ret i32 %4, !dbg !7421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7422 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7426, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i8 %1, metadata !7427, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i8 %2, metadata !7428, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i1 %3, metadata !7429, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7432
  %5 = zext i8 %2 to i32, !dbg !7433
  call void @llvm.dbg.value(metadata i32 %5, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i32 0, metadata !7430, metadata !DIExpression()), !dbg !7432
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i32 0, metadata !7430, metadata !DIExpression()), !dbg !7432
  %7 = icmp eq i8 %1, 0, !dbg !7434
  br i1 %7, label %30, label %8, !dbg !7437

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata i32 %10, metadata !7430, metadata !DIExpression()), !dbg !7432
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7438
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7441
  %13 = load i32, i32* %12, align 4, !dbg !7441
  %14 = icmp eq i32 %13, 0, !dbg !7442
  br i1 %14, label %26, label %15, !dbg !7443

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7444

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7446
  %18 = icmp eq i32 %17, 0, !dbg !7446
  br i1 %18, label %19, label %20, !dbg !7447

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #24, !dbg !7448
  br label %30, !dbg !7454

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7455
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7456
  call void @llvm.dbg.value(metadata i32 %22, metadata !7431, metadata !DIExpression()), !dbg !7432
  %23 = icmp eq i32 %22, -22, !dbg !7457
  br i1 %23, label %30, label %24, !dbg !7459

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %25, metadata !7431, metadata !DIExpression()), !dbg !7432
  br label %26, !dbg !7461

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7432
  call void @llvm.dbg.value(metadata i32 %27, metadata !7431, metadata !DIExpression()), !dbg !7432
  %28 = add nuw nsw i32 %10, 1, !dbg !7462
  call void @llvm.dbg.value(metadata i32 %28, metadata !7430, metadata !DIExpression()), !dbg !7432
  %29 = icmp eq i32 %28, %6, !dbg !7434
  br i1 %29, label %30, label %8, !dbg !7437, !llvm.loop !7463

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7432
  ret i32 %31, !dbg !7465
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7466 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7470, metadata !DIExpression()), !dbg !7472
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7473
  %3 = load i32, i32* %2, align 4, !dbg !7473
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7474, !range !7475
  %5 = icmp ult i32 %4, 2, !dbg !7474
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7476
  br i1 %7, label %8, label %15, !dbg !7476

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7477
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7478
  %11 = load i32, i32* %10, align 4, !dbg !7478
  %12 = and i32 %11, %9, !dbg !7479
  %13 = icmp eq i32 %12, 0, !dbg !7480
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7471, metadata !DIExpression()), !dbg !7472
  ret i32 %16, !dbg !7481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7482 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7486, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7487, metadata !DIExpression()), !dbg !7489
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7490
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7490
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7488, metadata !DIExpression()), !dbg !7491
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7492
  %6 = load i32, i32* %5, align 4, !dbg !7492
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7493
  store i32 %6, i32* %7, align 4, !dbg !7494
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7495
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7496
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7497
  %11 = load i32, i32* %10, align 4, !dbg !7497
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #25, !dbg !7498
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !7499
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7500
  ret i32 %12, !dbg !7501
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7502 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7509, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7510, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.value(metadata i32 undef, metadata !7511, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.value(metadata i32 %2, metadata !7512, metadata !DIExpression()), !dbg !7513
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7514
  %5 = load i32, i32* %4, align 4, !dbg !7514
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !7515
  %7 = or i32 %6, %5, !dbg !7516
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7517
  store i32 %7, i32* %8, align 4, !dbg !7518
  ret void, !dbg !7519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7520 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7524, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7525, metadata !DIExpression()), !dbg !7526
  %3 = zext i8 %0 to i32, !dbg !7527
  %4 = icmp ugt i8 %0, 7, !dbg !7529
  br i1 %4, label %5, label %6, !dbg !7530

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #24, !dbg !7531
  br label %7, !dbg !7537

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !7538
  br label %7, !dbg !7539

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7526
  ret i32 %8, !dbg !7540
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7545, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7546, metadata !DIExpression()), !dbg !7547
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !7548
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7549
  %4 = load i32, i32* %3, align 4, !dbg !7549
  %5 = and i32 %4, -32, !dbg !7550
  %6 = or i32 %5, %0, !dbg !7551
  %7 = or i32 %6, 16, !dbg !7551
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7552
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7553
  %9 = load i32, i32* %8, align 4, !dbg !7553
  %10 = or i32 %9, 1, !dbg !7554
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7555
  ret void, !dbg !7556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7560, metadata !DIExpression()), !dbg !7561
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7562
  ret void, !dbg !7563
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !7564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7568, metadata !DIExpression()), !dbg !7569
  %2 = icmp ult i32 %0, 33, !dbg !7570
  br i1 %2, label %11, label %3, !dbg !7572

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7573
  br i1 %4, label %11, label %5, !dbg !7575

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7576
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7577, !range !7475
  %8 = mul nsw i32 %7, -2, !dbg !7578
  %9 = add nsw i32 %8, 62, !dbg !7578
  %10 = and i32 %9, 62, !dbg !7579
  br label %11, !dbg !7580

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7569
  ret i32 %12, !dbg !7581
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7582 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7586, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i8 %1, metadata !7587, metadata !DIExpression()), !dbg !7588
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7589
  %4 = icmp eq i32 %3, -22, !dbg !7591
  br i1 %4, label %5, label %7, !dbg !7592

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7593
  %6 = zext i8 %1 to i32, !dbg !7593
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #24, !dbg !7593
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7593
  unreachable, !dbg !7593

7:                                                ; preds = %2
  ret void, !dbg !7598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7599 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7603, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i8 %1, metadata !7604, metadata !DIExpression()), !dbg !7610
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7611
  call void @llvm.dbg.value(metadata i8 %3, metadata !7605, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7610
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !7612
  call void @llvm.dbg.value(metadata i32 %4, metadata !7605, metadata !DIExpression()), !dbg !7610
  %5 = icmp ne i32 %4, -22, !dbg !7613
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %4, metadata !7606, metadata !DIExpression()), !dbg !7615
  br i1 %7, label %8, label %12, !dbg !7614

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7606, metadata !DIExpression()), !dbg !7615
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !7616
  %10 = add i32 %9, 1, !dbg !7619
  call void @llvm.dbg.value(metadata i32 %10, metadata !7606, metadata !DIExpression()), !dbg !7615
  %11 = icmp eq i32 %10, 8, !dbg !7620
  br i1 %11, label %12, label %8, !dbg !7621, !llvm.loop !7622

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7628, metadata !DIExpression()), !dbg !7629
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7630
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7631
  ret void, !dbg !7632
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7633 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7638
  %2 = icmp ugt i32 %1, 8, !dbg !7640
  br i1 %2, label %3, label %4, !dbg !7641

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #24, !dbg !7642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7642
  unreachable, !dbg !7642

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !7647
  call void @llvm.dbg.value(metadata i32 0, metadata !7637, metadata !DIExpression()), !dbg !7648
  %5 = icmp eq i32 %1, 0, !dbg !7649
  br i1 %5, label %13, label %6, !dbg !7652

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7652

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7637, metadata !DIExpression()), !dbg !7648
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7653
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #25, !dbg !7655
  %11 = add nuw i32 %9, 1, !dbg !7656
  call void @llvm.dbg.value(metadata i32 %11, metadata !7637, metadata !DIExpression()), !dbg !7648
  %12 = icmp eq i32 %11, %1, !dbg !7649
  br i1 %12, label %13, label %8, !dbg !7652, !llvm.loop !7657

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7659
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7660
  tail call void @arm_core_mpu_enable() #25, !dbg !7661
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7662
  %16 = and i32 %15, 65280, !dbg !7662
  %17 = icmp eq i32 %16, 2048, !dbg !7662
  br i1 %17, label %19, label %18, !dbg !7665

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7666
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #24, !dbg !7666
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7666
  unreachable, !dbg !7666

19:                                               ; preds = %13
  ret i32 0, !dbg !7668
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7676, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8* %1, metadata !7677, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8* %0, metadata !7678, metadata !DIExpression()), !dbg !7679
  %3 = load i8, i8* %1, align 1, !dbg !7680
  %4 = icmp eq i8 %3, 0, !dbg !7681
  br i1 %4, label %13, label %5, !dbg !7682

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7676, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8* %8, metadata !7677, metadata !DIExpression()), !dbg !7679
  store i8 %6, i8* %7, align 1, !dbg !7683
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7685
  call void @llvm.dbg.value(metadata i8* %9, metadata !7676, metadata !DIExpression()), !dbg !7679
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7686
  call void @llvm.dbg.value(metadata i8* %10, metadata !7677, metadata !DIExpression()), !dbg !7679
  %11 = load i8, i8* %10, align 1, !dbg !7680
  %12 = icmp eq i8 %11, 0, !dbg !7681
  br i1 %12, label %13, label %5, !dbg !7682, !llvm.loop !7687

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7689
  ret i8* %0, !dbg !7690
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7695, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %1, metadata !7696, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i32 %2, metadata !7697, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %0, metadata !7698, metadata !DIExpression()), !dbg !7699
  %4 = icmp eq i32 %2, 0, !dbg !7700
  br i1 %4, label %22, label %5, !dbg !7701

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7695, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i32 %7, metadata !7697, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %8, metadata !7696, metadata !DIExpression()), !dbg !7699
  %9 = load i8, i8* %8, align 1, !dbg !7702
  %10 = icmp eq i8 %9, 0, !dbg !7703
  br i1 %10, label %16, label %11, !dbg !7704

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7705
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7707
  call void @llvm.dbg.value(metadata i8* %12, metadata !7696, metadata !DIExpression()), !dbg !7699
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7708
  call void @llvm.dbg.value(metadata i8* %13, metadata !7695, metadata !DIExpression()), !dbg !7699
  %14 = add i32 %7, -1, !dbg !7709
  call void @llvm.dbg.value(metadata i32 %14, metadata !7697, metadata !DIExpression()), !dbg !7699
  %15 = icmp eq i32 %14, 0, !dbg !7700
  br i1 %15, label %22, label %5, !dbg !7701, !llvm.loop !7710

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7695, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i32 %18, metadata !7697, metadata !DIExpression()), !dbg !7699
  store i8 0, i8* %17, align 1, !dbg !7712
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7714
  call void @llvm.dbg.value(metadata i8* %19, metadata !7695, metadata !DIExpression()), !dbg !7699
  %20 = add i32 %18, -1, !dbg !7715
  call void @llvm.dbg.value(metadata i32 %20, metadata !7697, metadata !DIExpression()), !dbg !7699
  %21 = icmp eq i32 %20, 0, !dbg !7716
  br i1 %21, label %22, label %16, !dbg !7717, !llvm.loop !7718

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7720
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7721 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7725, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32 %1, metadata !7726, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32 %1, metadata !7727, metadata !DIExpression()), !dbg !7728
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7729

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7725, metadata !DIExpression()), !dbg !7728
  %6 = load i8, i8* %5, align 1, !dbg !7730
  %7 = icmp eq i8 %6, %3, !dbg !7731
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7732
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7733
  call void @llvm.dbg.value(metadata i8* %10, metadata !7725, metadata !DIExpression()), !dbg !7728
  br i1 %9, label %11, label %4, !dbg !7732, !llvm.loop !7735

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7737
  ret i8* %12, !dbg !7738
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7739 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7741, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i32 %1, metadata !7742, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* null, metadata !7743, metadata !DIExpression()), !dbg !7744
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7745

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7744
  call void @llvm.dbg.value(metadata i8* %6, metadata !7743, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %5, metadata !7741, metadata !DIExpression()), !dbg !7744
  %7 = load i8, i8* %5, align 1, !dbg !7746
  %8 = icmp eq i8 %7, %3, !dbg !7749
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7750
  call void @llvm.dbg.value(metadata i8* %9, metadata !7743, metadata !DIExpression()), !dbg !7744
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7751
  call void @llvm.dbg.value(metadata i8* %10, metadata !7741, metadata !DIExpression()), !dbg !7744
  %11 = icmp eq i8 %7, 0, !dbg !7752
  br i1 %11, label %12, label %4, !dbg !7752, !llvm.loop !7753

12:                                               ; preds = %4
  ret i8* %9, !dbg !7755
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !7756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7760, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata i32 0, metadata !7761, metadata !DIExpression()), !dbg !7762
  %2 = load i8, i8* %0, align 1, !dbg !7763
  %3 = icmp eq i8 %2, 0, !dbg !7764
  br i1 %3, label %11, label %4, !dbg !7765

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata i8* %6, metadata !7760, metadata !DIExpression()), !dbg !7762
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7766
  call void @llvm.dbg.value(metadata i8* %7, metadata !7760, metadata !DIExpression()), !dbg !7762
  %8 = add i32 %5, 1, !dbg !7768
  call void @llvm.dbg.value(metadata i32 %8, metadata !7761, metadata !DIExpression()), !dbg !7762
  %9 = load i8, i8* %7, align 1, !dbg !7763
  %10 = icmp eq i8 %9, 0, !dbg !7764
  br i1 %10, label %11, label %4, !dbg !7765, !llvm.loop !7769

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7762
  ret i32 %12, !dbg !7771
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7772 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i32 %1, metadata !7777, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i32 0, metadata !7778, metadata !DIExpression()), !dbg !7779
  %3 = load i8, i8* %0, align 1, !dbg !7780
  %4 = icmp ne i8 %3, 0, !dbg !7781
  %5 = icmp ne i32 %1, 0, !dbg !7782
  %6 = and i1 %4, %5, !dbg !7782
  br i1 %6, label %7, label %16, !dbg !7783

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7778, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %9, metadata !7776, metadata !DIExpression()), !dbg !7779
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7784
  call void @llvm.dbg.value(metadata i8* %10, metadata !7776, metadata !DIExpression()), !dbg !7779
  %11 = add nuw i32 %8, 1, !dbg !7786
  call void @llvm.dbg.value(metadata i32 %11, metadata !7778, metadata !DIExpression()), !dbg !7779
  %12 = load i8, i8* %10, align 1, !dbg !7780
  %13 = icmp ne i8 %12, 0, !dbg !7781
  %14 = icmp ult i32 %11, %1, !dbg !7782
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7782
  br i1 %15, label %7, label %16, !dbg !7783, !llvm.loop !7787

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7779
  ret i32 %17, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !7790 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7794, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i8* %1, metadata !7795, metadata !DIExpression()), !dbg !7796
  %3 = load i8, i8* %0, align 1, !dbg !7797
  %4 = load i8, i8* %1, align 1, !dbg !7798
  %5 = icmp ne i8 %3, %4, !dbg !7799
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7800
  br i1 %7, label %18, label %8, !dbg !7800

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7795, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i8* %10, metadata !7794, metadata !DIExpression()), !dbg !7796
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7801
  call void @llvm.dbg.value(metadata i8* %11, metadata !7794, metadata !DIExpression()), !dbg !7796
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7803
  call void @llvm.dbg.value(metadata i8* %12, metadata !7795, metadata !DIExpression()), !dbg !7796
  %13 = load i8, i8* %11, align 1, !dbg !7797
  %14 = load i8, i8* %12, align 1, !dbg !7798
  %15 = icmp ne i8 %13, %14, !dbg !7799
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7800
  br i1 %17, label %18, label %8, !dbg !7800, !llvm.loop !7804

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7797
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7798
  %21 = zext i8 %19 to i32, !dbg !7807
  %22 = zext i8 %20 to i32, !dbg !7808
  %23 = sub nsw i32 %21, %22, !dbg !7809
  ret i32 %23, !dbg !7810
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7811 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7815, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %1, metadata !7816, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i32 %2, metadata !7817, metadata !DIExpression()), !dbg !7818
  %4 = icmp eq i32 %2, 0, !dbg !7819
  br i1 %4, label %23, label %5, !dbg !7819

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7817, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %7, metadata !7816, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %8, metadata !7815, metadata !DIExpression()), !dbg !7818
  %9 = load i8, i8* %8, align 1, !dbg !7820
  %10 = load i8, i8* %7, align 1, !dbg !7821
  %11 = icmp ne i8 %9, %10, !dbg !7822
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7823
  br i1 %13, label %19, label %14, !dbg !7823

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7824
  call void @llvm.dbg.value(metadata i8* %15, metadata !7815, metadata !DIExpression()), !dbg !7818
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7826
  call void @llvm.dbg.value(metadata i8* %16, metadata !7816, metadata !DIExpression()), !dbg !7818
  %17 = add i32 %6, -1, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %17, metadata !7817, metadata !DIExpression()), !dbg !7818
  %18 = icmp eq i32 %17, 0, !dbg !7819
  br i1 %18, label %23, label %5, !dbg !7819, !llvm.loop !7828

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7831
  %21 = zext i8 %10 to i32, !dbg !7832
  %22 = sub nsw i32 %20, %21, !dbg !7833
  br label %23, !dbg !7834

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7834
  ret i32 %24, !dbg !7835
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7836 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7840, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8* %1, metadata !7841, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.value(metadata i8** %2, metadata !7842, metadata !DIExpression()), !dbg !7845
  %4 = icmp eq i8* %0, null, !dbg !7846
  br i1 %4, label %5, label %7, !dbg !7846

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7847
  br label %7, !dbg !7846

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7846
  call void @llvm.dbg.value(metadata i8* %8, metadata !7843, metadata !DIExpression()), !dbg !7845
  %9 = load i8, i8* %8, align 1, !dbg !7848
  %10 = icmp eq i8 %9, 0, !dbg !7848
  br i1 %10, label %33, label %11, !dbg !7849

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7843, metadata !DIExpression()), !dbg !7845
  %14 = zext i8 %12 to i32, !dbg !7848
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !7850
  %16 = icmp eq i8* %15, null, !dbg !7849
  br i1 %16, label %21, label %17, !dbg !7851

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7852
  call void @llvm.dbg.value(metadata i8* %18, metadata !7843, metadata !DIExpression()), !dbg !7845
  %19 = load i8, i8* %18, align 1, !dbg !7848
  %20 = icmp eq i8 %19, 0, !dbg !7848
  br i1 %20, label %33, label %11, !dbg !7849, !llvm.loop !7854

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7844, metadata !DIExpression()), !dbg !7845
  %24 = zext i8 %22 to i32, !dbg !7856
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !7857
  %26 = icmp eq i8* %25, null, !dbg !7858
  br i1 %26, label %27, label %31, !dbg !7859

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7860
  call void @llvm.dbg.value(metadata i8* %28, metadata !7844, metadata !DIExpression()), !dbg !7845
  %29 = load i8, i8* %28, align 1, !dbg !7856
  %30 = icmp eq i8 %29, 0, !dbg !7856
  br i1 %30, label %33, label %21, !dbg !7862, !llvm.loop !7863

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7865
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7868
  br label %33, !dbg !7869

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7845
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7845
  store i8* %34, i8** %2, align 4, !dbg !7845
  ret i8* %35, !dbg !7870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7873, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.value(metadata i8* %1, metadata !7874, metadata !DIExpression()), !dbg !7875
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7876
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7877
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !7878
  ret i8* %0, !dbg !7879
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7880 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7882, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %1, metadata !7883, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %2, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %0, metadata !7885, metadata !DIExpression()), !dbg !7887
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7888
  call void @llvm.dbg.value(metadata i32 %4, metadata !7886, metadata !DIExpression()), !dbg !7887
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7889
  call void @llvm.dbg.value(metadata i8* %5, metadata !7882, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %1, metadata !7883, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %2, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %2, metadata !7884, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7887
  %6 = icmp eq i32 %2, 0, !dbg !7890
  br i1 %6, label %18, label %7, !dbg !7891

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7892
  call void @llvm.dbg.value(metadata i8* %9, metadata !7882, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %10, metadata !7883, metadata !DIExpression()), !dbg !7887
  %12 = load i8, i8* %10, align 1, !dbg !7893
  %13 = icmp eq i8 %12, 0, !dbg !7894
  br i1 %13, label %18, label %14, !dbg !7895

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7896
  call void @llvm.dbg.value(metadata i8* %15, metadata !7883, metadata !DIExpression()), !dbg !7887
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7898
  call void @llvm.dbg.value(metadata i8* %16, metadata !7882, metadata !DIExpression()), !dbg !7887
  store i8 %12, i8* %9, align 1, !dbg !7899
  call void @llvm.dbg.value(metadata i32 %11, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %11, metadata !7884, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7887
  %17 = icmp eq i32 %11, 0, !dbg !7890
  br i1 %17, label %18, label %7, !dbg !7891, !llvm.loop !7900

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7887
  store i8 0, i8* %19, align 1, !dbg !7902
  ret i8* %0, !dbg !7903
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7904 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7908, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %1, metadata !7909, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 %2, metadata !7910, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %0, metadata !7911, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %1, metadata !7912, metadata !DIExpression()), !dbg !7913
  %4 = icmp eq i32 %2, 0, !dbg !7914
  br i1 %4, label %31, label %5, !dbg !7916

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7912, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %0, metadata !7911, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 %2, metadata !7910, metadata !DIExpression()), !dbg !7913
  %6 = add i32 %2, -1, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %6, metadata !7910, metadata !DIExpression()), !dbg !7913
  %7 = icmp eq i32 %6, 0, !dbg !7918
  br i1 %7, label %23, label %8, !dbg !7919

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7920
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7920
  br label %11, !dbg !7920

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7912, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %14, metadata !7911, metadata !DIExpression()), !dbg !7913
  %15 = load i8, i8* %14, align 1, !dbg !7921
  %16 = load i8, i8* %13, align 1, !dbg !7922
  %17 = icmp eq i8 %15, %16, !dbg !7923
  br i1 %17, label %18, label %23, !dbg !7920

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7924
  call void @llvm.dbg.value(metadata i8* %19, metadata !7911, metadata !DIExpression()), !dbg !7913
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7926
  call void @llvm.dbg.value(metadata i8* %20, metadata !7912, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 %12, metadata !7910, metadata !DIExpression()), !dbg !7913
  %21 = add i32 %12, -1, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %21, metadata !7910, metadata !DIExpression()), !dbg !7913
  %22 = icmp eq i32 %21, 0, !dbg !7918
  br i1 %22, label %23, label %11, !dbg !7919, !llvm.loop !7927

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7913
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7913
  %26 = load i8, i8* %24, align 1, !dbg !7929
  %27 = zext i8 %26 to i32, !dbg !7929
  %28 = load i8, i8* %25, align 1, !dbg !7930
  %29 = zext i8 %28 to i32, !dbg !7930
  %30 = sub nsw i32 %27, %29, !dbg !7931
  br label %31, !dbg !7932

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7913
  ret i32 %32, !dbg !7933
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7938, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i8* %1, metadata !7939, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 %2, metadata !7940, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i8* %0, metadata !7941, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i8* %1, metadata !7942, metadata !DIExpression()), !dbg !7943
  %4 = ptrtoint i8* %0 to i32, !dbg !7944
  %5 = ptrtoint i8* %1 to i32, !dbg !7944
  %6 = sub i32 %4, %5, !dbg !7944
  %7 = icmp ult i32 %6, %2, !dbg !7946
  br i1 %7, label %10, label %8, !dbg !7947

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i8* %0, metadata !7941, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 %2, metadata !7940, metadata !DIExpression()), !dbg !7943
  %9 = icmp eq i32 %2, 0, !dbg !7948
  br i1 %9, label %26, label %17, !dbg !7950

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7940, metadata !DIExpression()), !dbg !7943
  %12 = add i32 %11, -1, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %12, metadata !7940, metadata !DIExpression()), !dbg !7943
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7954
  %14 = load i8, i8* %13, align 1, !dbg !7954
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7955
  store i8 %14, i8* %15, align 1, !dbg !7956
  %16 = icmp eq i32 %12, 0, !dbg !7957
  br i1 %16, label %26, label %10, !dbg !7958, !llvm.loop !7959

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i8* %19, metadata !7941, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 %20, metadata !7940, metadata !DIExpression()), !dbg !7943
  %21 = load i8, i8* %18, align 1, !dbg !7961
  store i8 %21, i8* %19, align 1, !dbg !7963
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7964
  call void @llvm.dbg.value(metadata i8* %22, metadata !7941, metadata !DIExpression()), !dbg !7943
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7965
  call void @llvm.dbg.value(metadata i8* %23, metadata !7942, metadata !DIExpression()), !dbg !7943
  %24 = add i32 %20, -1, !dbg !7966
  call void @llvm.dbg.value(metadata i32 %24, metadata !7940, metadata !DIExpression()), !dbg !7943
  %25 = icmp eq i32 %24, 0, !dbg !7948
  br i1 %25, label %26, label %17, !dbg !7950, !llvm.loop !7967

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7969
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7976, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %1, metadata !7977, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i32 %2, metadata !7978, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %0, metadata !7979, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %1, metadata !7980, metadata !DIExpression()), !dbg !7981
  %4 = icmp eq i32 %2, 0, !dbg !7982
  br i1 %4, label %14, label %5, !dbg !7983

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7980, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i8* %7, metadata !7979, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.value(metadata i32 %8, metadata !7978, metadata !DIExpression()), !dbg !7981
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7984
  call void @llvm.dbg.value(metadata i8* %9, metadata !7980, metadata !DIExpression()), !dbg !7981
  %10 = load i8, i8* %6, align 1, !dbg !7986
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7987
  call void @llvm.dbg.value(metadata i8* %11, metadata !7979, metadata !DIExpression()), !dbg !7981
  store i8 %10, i8* %7, align 1, !dbg !7988
  %12 = add i32 %8, -1, !dbg !7989
  call void @llvm.dbg.value(metadata i32 %12, metadata !7978, metadata !DIExpression()), !dbg !7981
  %13 = icmp eq i32 %12, 0, !dbg !7982
  br i1 %13, label %14, label %5, !dbg !7983, !llvm.loop !7990

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7992
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7993 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7997, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %1, metadata !7998, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %2, metadata !7999, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i8* %0, metadata !8000, metadata !DIExpression()), !dbg !8002
  %4 = trunc i32 %1 to i8, !dbg !8003
  call void @llvm.dbg.value(metadata i8 %4, metadata !8001, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %2, metadata !7999, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i8* %0, metadata !8000, metadata !DIExpression()), !dbg !8002
  %5 = icmp eq i32 %2, 0, !dbg !8004
  br i1 %5, label %12, label %6, !dbg !8005

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7999, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i8* %8, metadata !8000, metadata !DIExpression()), !dbg !8002
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8006
  call void @llvm.dbg.value(metadata i8* %9, metadata !8000, metadata !DIExpression()), !dbg !8002
  store i8 %4, i8* %8, align 1, !dbg !8008
  %10 = add i32 %7, -1, !dbg !8009
  call void @llvm.dbg.value(metadata i32 %10, metadata !7999, metadata !DIExpression()), !dbg !8002
  %11 = icmp eq i32 %10, 0, !dbg !8004
  br i1 %11, label %12, label %6, !dbg !8005, !llvm.loop !8010

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8017, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.value(metadata i32 %1, metadata !8018, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.value(metadata i32 %2, metadata !8019, metadata !DIExpression()), !dbg !8023
  %4 = icmp eq i32 %2, 0, !dbg !8024
  br i1 %4, label %17, label %5, !dbg !8025

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8026

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8027
  call void @llvm.dbg.value(metadata i8* %9, metadata !8020, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32 %8, metadata !8019, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.value(metadata i8* %9, metadata !8020, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8027
  %10 = load i8, i8* %9, align 1, !dbg !8028
  %11 = icmp eq i8 %10, %6, !dbg !8031
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8032
  call void @llvm.dbg.value(metadata i8* %12, metadata !8020, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32 %13, metadata !8019, metadata !DIExpression()), !dbg !8023
  br i1 %15, label %16, label %7, !dbg !8032, !llvm.loop !8033

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8035

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8023
  ret i8* %19, !dbg !8036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !8037 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8039, metadata !DIExpression()), !dbg !8040
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8041
  ret void, !dbg !8042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !8043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8045, metadata !DIExpression()), !dbg !8046
  ret i32 -1, !dbg !8047
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8052, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.value(metadata i32* %1, metadata !8053, metadata !DIExpression()), !dbg !8054
  %3 = ptrtoint i32* %1 to i32, !dbg !8055
  %4 = and i32 %3, -2, !dbg !8055
  %5 = icmp eq i32 %4, 2, !dbg !8055
  br i1 %5, label %6, label %9, !dbg !8055

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8056
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8056
  br label %9, !dbg !8057

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8057
  ret i32 %10, !dbg !8058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8061, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i32* %1, metadata !8062, metadata !DIExpression()), !dbg !8063
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8064
  ret i32 %3, !dbg !8065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8069, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32* %1, metadata !8070, metadata !DIExpression()), !dbg !8071
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8072, !srcloc !8074
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8075
  ret i32 %3, !dbg !8076
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8082, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32* %1, metadata !8083, metadata !DIExpression()), !dbg !8086
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8087
  call void @llvm.dbg.value(metadata i32 %3, metadata !8084, metadata !DIExpression()), !dbg !8086
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !8088
  call void @llvm.dbg.value(metadata i32 %4, metadata !8085, metadata !DIExpression()), !dbg !8086
  %5 = icmp ne i32 %3, %4, !dbg !8089
  %6 = sext i1 %5 to i32, !dbg !8090
  ret i32 %6, !dbg !8091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8092 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8096, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 %1, metadata !8097, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 %2, metadata !8098, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32* %3, metadata !8099, metadata !DIExpression()), !dbg !8100
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8101
  ret i32 %5, !dbg !8102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8103 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8105, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata i32 %1, metadata !8106, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata i32 %2, metadata !8107, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.value(metadata i32* %3, metadata !8108, metadata !DIExpression()), !dbg !8109
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8110, !srcloc !8112
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8113
  ret i32 %5, !dbg !8114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8115 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8117, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 %1, metadata !8118, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 %2, metadata !8119, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32* %3, metadata !8120, metadata !DIExpression()), !dbg !8125
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8126
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8128
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8128
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8128
  br i1 %11, label %33, label %12, !dbg !8128

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8125
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8125
  call void @llvm.dbg.value(metadata i8* %14, metadata !8123, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 %13, metadata !8121, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 %1, metadata !8122, metadata !DIExpression()), !dbg !8125
  br label %15, !dbg !8129

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8131
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8125
  call void @llvm.dbg.value(metadata i8* %17, metadata !8123, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 %16, metadata !8122, metadata !DIExpression()), !dbg !8125
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8132
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8135
  call void @llvm.dbg.value(metadata i8* %19, metadata !8123, metadata !DIExpression()), !dbg !8125
  %20 = load i8, i8* %17, align 1, !dbg !8136
  %21 = zext i8 %20 to i32, !dbg !8137
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !8132
  %23 = icmp eq i32 %22, -1, !dbg !8138
  br i1 %23, label %30, label %24, !dbg !8139

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8140
  call void @llvm.dbg.value(metadata i32 %25, metadata !8122, metadata !DIExpression()), !dbg !8125
  %26 = icmp eq i32 %25, 0, !dbg !8141
  br i1 %26, label %27, label %15, !dbg !8142, !llvm.loop !8143

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8145
  call void @llvm.dbg.value(metadata i32 %28, metadata !8121, metadata !DIExpression()), !dbg !8125
  %29 = icmp eq i32 %28, 0, !dbg !8146
  br i1 %29, label %30, label %12, !dbg !8147, !llvm.loop !8148

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8125
  call void @llvm.dbg.value(metadata i32 %31, metadata !8121, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.label(metadata !8124), !dbg !8151
  %32 = sub i32 %2, %31, !dbg !8152
  br label %33, !dbg !8153

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8125
  ret i32 %34, !dbg !8154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8159, metadata !DIExpression()), !dbg !8160
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8161
  %3 = icmp eq i32 %2, -1, !dbg !8163
  br i1 %3, label %8, label %4, !dbg !8164

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8165
  %6 = icmp eq i32 %5, -1, !dbg !8166
  %7 = sext i1 %6 to i32, !dbg !8165
  br label %8, !dbg !8167

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8160
  ret i32 %9, !dbg !8168
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, ...) local_unnamed_addr #1 !dbg !8169 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8174, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i32 %1, metadata !8175, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i8* %2, metadata !8176, metadata !DIExpression()), !dbg !8191
  %7 = bitcast %struct.__va_list* %4 to i8*, !dbg !8192
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8192
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !8177, metadata !DIExpression()), !dbg !8193
  %8 = bitcast %struct.emitter* %5 to i8*, !dbg !8194
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8194
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8184, metadata !DIExpression()), !dbg !8195
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8196
  %9 = icmp eq i32 %1, 0, !dbg !8197
  %10 = select i1 %9, i8* %6, i8* %0, !dbg !8199
  call void @llvm.dbg.value(metadata i8* %10, metadata !8174, metadata !DIExpression()), !dbg !8191
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8200
  store i8* %10, i8** %11, align 4, !dbg !8201
  %12 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8202
  store i32 %1, i32* %12, align 4, !dbg !8203
  call void @llvm.va_start(i8* nonnull %7), !dbg !8204
  %13 = bitcast %struct.__va_list* %4 to i32*, !dbg !8205
  %14 = load i32, i32* %13, align 4, !dbg !8205
  %15 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !8205
  %16 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %8, i8* noundef %2, [1 x i32] %15) #25, !dbg !8205
  call void @llvm.dbg.value(metadata i32 %16, metadata !8189, metadata !DIExpression()), !dbg !8191
  call void @llvm.va_end(i8* nonnull %7), !dbg !8206
  %17 = load i8*, i8** %11, align 4, !dbg !8207
  store i8 0, i8* %17, align 1, !dbg !8208
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8209
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8209
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8209
  ret i32 %16, !dbg !8210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbvprintf.85(i8* noundef %0, i8* noundef %1, [1 x i32] %2) unnamed_addr #1 !dbg !8211 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8218, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i32 (...)* bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), metadata !8215, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i8* %0, metadata !8216, metadata !DIExpression()), !dbg !8219
  call void @llvm.dbg.value(metadata i8* %1, metadata !8217, metadata !DIExpression()), !dbg !8219
  %4 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), i8* noundef %0, i8* noundef %1, [1 x i32] %2, i32 noundef 0) #24, !dbg !8220
  ret i32 %4, !dbg !8221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @sprintf_out(i32 noundef %0, %struct.emitter* nocapture noundef %1) #11 !dbg !8222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8227, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata %struct.emitter* %1, metadata !8228, metadata !DIExpression()), !dbg !8229
  %3 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 1, !dbg !8230
  %4 = load i32, i32* %3, align 4, !dbg !8230
  %5 = icmp sgt i32 %4, 1, !dbg !8232
  br i1 %5, label %6, label %14, !dbg !8233

6:                                                ; preds = %2
  %7 = trunc i32 %0 to i8, !dbg !8234
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 0, !dbg !8236
  %9 = load i8*, i8** %8, align 4, !dbg !8236
  store i8 %7, i8* %9, align 1, !dbg !8237
  %10 = load i8*, i8** %8, align 4, !dbg !8238
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8238
  store i8* %11, i8** %8, align 4, !dbg !8238
  %12 = load i32, i32* %3, align 4, !dbg !8239
  %13 = add nsw i32 %12, -1, !dbg !8239
  store i32 %13, i32* %3, align 4, !dbg !8239
  br label %14, !dbg !8240

14:                                               ; preds = %6, %2
  ret i32 0, !dbg !8241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sprintf(i8* noalias noundef %0, i8* noalias noundef %1, ...) local_unnamed_addr #1 !dbg !8242 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8246, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %1, metadata !8247, metadata !DIExpression()), !dbg !8251
  %5 = bitcast %struct.__va_list* %3 to i8*, !dbg !8252
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8252
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !8248, metadata !DIExpression()), !dbg !8253
  %6 = bitcast %struct.emitter* %4 to i8*, !dbg !8254
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8254
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8249, metadata !DIExpression()), !dbg !8255
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8256
  store i8* %0, i8** %7, align 4, !dbg !8257
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8258
  store i32 2147483647, i32* %8, align 4, !dbg !8259
  call void @llvm.va_start(i8* nonnull %5), !dbg !8260
  %9 = bitcast %struct.__va_list* %3 to i32*, !dbg !8261
  %10 = load i32, i32* %9, align 4, !dbg !8261
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !8261
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %6, i8* noundef %1, [1 x i32] %11) #25, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %12, metadata !8250, metadata !DIExpression()), !dbg !8251
  call void @llvm.va_end(i8* nonnull %5), !dbg !8262
  %13 = load i8*, i8** %7, align 4, !dbg !8263
  store i8 0, i8* %13, align 1, !dbg !8264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8265
  ret i32 %12, !dbg !8266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !8267 {
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8274, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.value(metadata i8* %0, metadata !8271, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.value(metadata i32 %1, metadata !8272, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.value(metadata i8* %2, metadata !8273, metadata !DIExpression()), !dbg !8278
  %7 = bitcast %struct.emitter* %5 to i8*, !dbg !8279
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8279
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8275, metadata !DIExpression()), !dbg !8280
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8281
  %8 = icmp eq i32 %1, 0, !dbg !8282
  %9 = select i1 %8, i8* %6, i8* %0, !dbg !8284
  call void @llvm.dbg.value(metadata i8* %9, metadata !8271, metadata !DIExpression()), !dbg !8278
  %10 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8285
  store i8* %9, i8** %10, align 4, !dbg !8286
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8287
  store i32 %1, i32* %11, align 4, !dbg !8288
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %7, i8* noundef %2, [1 x i32] %3) #25, !dbg !8289
  call void @llvm.dbg.value(metadata i32 %12, metadata !8276, metadata !DIExpression()), !dbg !8278
  %13 = load i8*, i8** %10, align 4, !dbg !8290
  store i8 0, i8* %13, align 1, !dbg !8291
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8292
  ret i32 %12, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsprintf(i8* noalias noundef %0, i8* noalias noundef %1, [1 x i32] %2) local_unnamed_addr #1 !dbg !8294 {
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !8300, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i8* %0, metadata !8298, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i8* %1, metadata !8299, metadata !DIExpression()), !dbg !8303
  %5 = bitcast %struct.emitter* %4 to i8*, !dbg !8304
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8304
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8301, metadata !DIExpression()), !dbg !8305
  %6 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8306
  store i8* %0, i8** %6, align 4, !dbg !8307
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8308
  store i32 2147483647, i32* %7, align 4, !dbg !8309
  %8 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %5, i8* noundef %1, [1 x i32] %2) #25, !dbg !8310
  call void @llvm.dbg.value(metadata i32 %8, metadata !8302, metadata !DIExpression()), !dbg !8303
  %9 = load i8*, i8** %6, align 4, !dbg !8311
  store i8 0, i8* %9, align 1, !dbg !8312
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8313
  ret i32 %8, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8317, metadata !DIExpression()), !dbg !8318
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !8319
  ret void, !dbg !8320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8325, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata i32 %1, metadata !8326, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8327, metadata !DIExpression()), !dbg !8331
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8332
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8332
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8332
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8328, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata i32 %0, metadata !8330, metadata !DIExpression()), !dbg !8331
  %7 = icmp slt i32 %0, %1, !dbg !8333
  br i1 %7, label %8, label %22, !dbg !8336

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8330, metadata !DIExpression()), !dbg !8331
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !8337
  %11 = icmp eq i32 %10, 0, !dbg !8337
  br i1 %11, label %19, label %12, !dbg !8340

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !8341
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8343
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8343
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8345
  br i1 %15, label %19, label %16, !dbg !8346

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8347
  %18 = load i8*, i8** %17, align 4, !dbg !8347
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !8348
  br label %19, !dbg !8349

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %20, metadata !8330, metadata !DIExpression()), !dbg !8331
  %21 = icmp eq i32 %20, %1, !dbg !8333
  br i1 %21, label %22, label %8, !dbg !8336, !llvm.loop !8351

22:                                               ; preds = %19, %3
  ret void, !dbg !8353
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !8354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8356, metadata !DIExpression()), !dbg !8357
  %2 = shl nuw i32 1, %0, !dbg !8358
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !8361
  ret i32 %3, !dbg !8362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8367, metadata !DIExpression()), !dbg !8368
  %2 = shl nuw i32 1, %0, !dbg !8369
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !8372
  ret void, !dbg !8373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8377, metadata !DIExpression()), !dbg !8378
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8379
  ret void, !dbg !8380
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !8381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8383, metadata !DIExpression()), !dbg !8384
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8385
  %3 = and i32 %2, %0, !dbg !8385
  %4 = icmp eq i32 %3, %0, !dbg !8386
  %5 = zext i1 %4 to i32, !dbg !8386
  ret i32 %5, !dbg !8387
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8390, metadata !DIExpression()), !dbg !8391
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !8392
  ret void, !dbg !8393
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8396, metadata !DIExpression()), !dbg !8397
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !8398
  ret void, !dbg !8399
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8400 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8402, metadata !DIExpression()), !dbg !8403
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !8404
  ret void, !dbg !8405
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8408, metadata !DIExpression()), !dbg !8409
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8414, metadata !DIExpression()), !dbg !8415
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !8416
  ret void, !dbg !8417
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8420, metadata !DIExpression()), !dbg !8421
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !8422
  ret void, !dbg !8423
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8426, metadata !DIExpression()), !dbg !8427
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8430 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8432, metadata !DIExpression()), !dbg !8433
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !8434
  ret void, !dbg !8435
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8436 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8438, metadata !DIExpression()), !dbg !8439
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !8440
  ret void, !dbg !8441
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8444, metadata !DIExpression()), !dbg !8445
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !8446
  ret void, !dbg !8447
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8450, metadata !DIExpression()), !dbg !8451
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !8452
  ret i32 0, !dbg !8453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !735 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !739, metadata !DIExpression()), !dbg !8454
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !8455
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !8457
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !8459
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !8461
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !8463
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !8465
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !8467
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !8469
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !8471
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !8473
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !8475
  ret void, !dbg !8477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8480, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.value(metadata i32 0, metadata !8481, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.value(metadata i32 undef, metadata !8481, metadata !DIExpression()), !dbg !8482
  %2 = lshr i32 6684671, %0, !dbg !8483
  %3 = and i32 %2, 1, !dbg !8483
  %4 = or i32 %3, %0, !dbg !8485
  %5 = icmp eq i32 %4, 0, !dbg !8485
  br i1 %5, label %6, label %7, !dbg !8485

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8486
  unreachable, !dbg !8486

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8491
  %9 = load i32, i32* %8, align 4, !dbg !8491
  call void @llvm.dbg.value(metadata i32 %9, metadata !8481, metadata !DIExpression()), !dbg !8482
  %10 = shl nuw i32 1, %0, !dbg !8492
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #25, !dbg !8493
  tail call void @arch_irq_enable(i32 noundef %9) #24, !dbg !8494
  ret void, !dbg !8495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8498, metadata !DIExpression()), !dbg !8499
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8500
  %3 = or i32 %2, %0, !dbg !8500
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8500
  ret void, !dbg !8501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8504, metadata !DIExpression()), !dbg !8505
  %2 = icmp slt i32 %0, 32, !dbg !8506
  br i1 %2, label %3, label %5, !dbg !8508

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8509
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !8511
  br label %5, !dbg !8512

5:                                                ; preds = %1, %3
  ret void, !dbg !8513
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8516, metadata !DIExpression()), !dbg !8517
  %2 = xor i32 %0, -1, !dbg !8518
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8518
  %4 = and i32 %3, %2, !dbg !8518
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8518
  ret void, !dbg !8519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8524, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i32 %1, metadata !8525, metadata !DIExpression()), !dbg !8526
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8527

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8528
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !8530
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !8531
  br label %11, !dbg !8532

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8533
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !8534
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !8535
  br label %11, !dbg !8536

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8537
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !8538
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !8539
  br label %11, !dbg !8540

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8541
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !8542
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !8543
  br label %11, !dbg !8544

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8548, metadata !DIExpression()), !dbg !8549
  %2 = xor i32 %0, -1, !dbg !8550
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8550
  %4 = and i32 %3, %2, !dbg !8550
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8550
  ret void, !dbg !8551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8554, metadata !DIExpression()), !dbg !8555
  %2 = xor i32 %0, -1, !dbg !8556
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8556
  %4 = and i32 %3, %2, !dbg !8556
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8560, metadata !DIExpression()), !dbg !8561
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8562
  %3 = or i32 %2, %0, !dbg !8562
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8562
  ret void, !dbg !8563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8566, metadata !DIExpression()), !dbg !8567
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8568
  %3 = or i32 %2, %0, !dbg !8568
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8568
  ret void, !dbg !8569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !8570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8574, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8575, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8* %2, metadata !8576, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8577, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8579, metadata !DIExpression()), !dbg !8580
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8581
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8581
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8583
  br i1 %6, label %7, label %9, !dbg !8584

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8585
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8586
  store i8* %2, i8** %8, align 4, !dbg !8587
  br label %9, !dbg !8588

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8580
  ret i32 %10, !dbg !8589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !8590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8592, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8593, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8594, metadata !DIExpression()), !dbg !8595
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8596
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8597
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8598
  store i8* null, i8** %3, align 4, !dbg !8599
  ret void, !dbg !8600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8601 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8603, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata i8* %1, metadata !8604, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata i8* %1, metadata !8605, metadata !DIExpression()), !dbg !8608
  %3 = bitcast i8* %1 to i32*, !dbg !8609
  %4 = load i32, i32* %3, align 4, !dbg !8609
  %5 = add i32 %4, -169, !dbg !8609
  %6 = icmp ult i32 %5, -121, !dbg !8609
  br i1 %6, label %15, label %7, !dbg !8611

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8612
  %9 = inttoptr i32 %8 to i32*, !dbg !8613
  call void @llvm.dbg.value(metadata i32* %9, metadata !8606, metadata !DIExpression()), !dbg !8608
  %10 = load volatile i32, i32* %9, align 4, !dbg !8614
  call void @llvm.dbg.value(metadata i32 %10, metadata !8607, metadata !DIExpression()), !dbg !8608
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8615
  %12 = bitcast i8* %11 to i32*, !dbg !8615
  %13 = load i32, i32* %12, align 4, !dbg !8615
  %14 = or i32 %13, %10, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %14, metadata !8607, metadata !DIExpression()), !dbg !8608
  store volatile i32 %14, i32* %9, align 4, !dbg !8617
  br label %15, !dbg !8618

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8608
  ret i32 %16, !dbg !8619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8620 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8622, metadata !DIExpression()), !dbg !8627
  call void @llvm.dbg.value(metadata i8* %1, metadata !8623, metadata !DIExpression()), !dbg !8627
  call void @llvm.dbg.value(metadata i8* %1, metadata !8624, metadata !DIExpression()), !dbg !8627
  %3 = bitcast i8* %1 to i32*, !dbg !8628
  %4 = load i32, i32* %3, align 4, !dbg !8628
  %5 = add i32 %4, -169, !dbg !8628
  %6 = icmp ult i32 %5, -121, !dbg !8628
  br i1 %6, label %16, label %7, !dbg !8630

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8631
  %9 = inttoptr i32 %8 to i32*, !dbg !8632
  call void @llvm.dbg.value(metadata i32* %9, metadata !8625, metadata !DIExpression()), !dbg !8627
  %10 = load volatile i32, i32* %9, align 4, !dbg !8633
  call void @llvm.dbg.value(metadata i32 %10, metadata !8626, metadata !DIExpression()), !dbg !8627
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8634
  %12 = bitcast i8* %11 to i32*, !dbg !8634
  %13 = load i32, i32* %12, align 4, !dbg !8634
  %14 = xor i32 %13, -1, !dbg !8635
  %15 = and i32 %10, %14, !dbg !8636
  call void @llvm.dbg.value(metadata i32 %15, metadata !8626, metadata !DIExpression()), !dbg !8627
  store volatile i32 %15, i32* %9, align 4, !dbg !8637
  br label %16, !dbg !8638

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8627
  ret i32 %17, !dbg !8639
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8642, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i8* %1, metadata !8643, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i32* %2, metadata !8644, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i8* %1, metadata !8645, metadata !DIExpression()), !dbg !8650
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8651
  call void @llvm.dbg.value(metadata i32 %4, metadata !8646, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i32 undef, metadata !8647, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i32 undef, metadata !8648, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i32 %4, metadata !8649, metadata !DIExpression()), !dbg !8650
  %5 = bitcast i8* %1 to i32*, !dbg !8652
  %6 = load i32, i32* %5, align 4, !dbg !8652
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !8653

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !8654
  call void @llvm.dbg.value(metadata i32 %8, metadata !8647, metadata !DIExpression()), !dbg !8650
  br label %16, !dbg !8655

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #25, !dbg !8657
  call void @llvm.dbg.value(metadata i32 %10, metadata !8648, metadata !DIExpression()), !dbg !8650
  br label %16, !dbg !8658

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8659
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #25, !dbg !8660
  br label %16, !dbg !8661

14:                                               ; preds = %3
  br label %16, !dbg !8662

15:                                               ; preds = %3
  br label %16, !dbg !8663

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !8664
  br label %18, !dbg !8665

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !8650
  ret i32 %19, !dbg !8665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8666 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8668, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %1, metadata !8669, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %2, metadata !8670, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %1, metadata !8671, metadata !DIExpression()), !dbg !8676
  %4 = bitcast i8* %1 to i32*, !dbg !8677
  %5 = load i32, i32* %4, align 4, !dbg !8677
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !8678
  call void @llvm.dbg.value(metadata i32 %6, metadata !8675, metadata !DIExpression()), !dbg !8676
  %7 = icmp slt i32 %6, 0, !dbg !8679
  br i1 %7, label %22, label %8, !dbg !8681

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8671, metadata !DIExpression()), !dbg !8676
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8682
  %10 = bitcast i8* %9 to i32*, !dbg !8682
  %11 = load i32, i32* %10, align 4, !dbg !8682
  %12 = lshr i32 %11, 16, !dbg !8682
  %13 = and i32 %12, 7, !dbg !8682
  %14 = lshr i32 %11, 8, !dbg !8683
  %15 = and i32 %14, 31, !dbg !8683
  %16 = shl i32 %13, %15, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %16, metadata !8674, metadata !DIExpression()), !dbg !8676
  %17 = and i32 %11, 255, !dbg !8685
  %18 = or i32 %17, 1073887232, !dbg !8686
  %19 = inttoptr i32 %18 to i32*, !dbg !8687
  call void @llvm.dbg.value(metadata i32* %19, metadata !8672, metadata !DIExpression()), !dbg !8676
  %20 = load volatile i32, i32* %19, align 4, !dbg !8688
  call void @llvm.dbg.value(metadata i32 %20, metadata !8673, metadata !DIExpression()), !dbg !8676
  %21 = or i32 %16, %20, !dbg !8689
  call void @llvm.dbg.value(metadata i32 %21, metadata !8673, metadata !DIExpression()), !dbg !8676
  store volatile i32 %21, i32* %19, align 4, !dbg !8690
  br label %22, !dbg !8691

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8676
  ret i32 %23, !dbg !8692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #6 !dbg !8693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8697, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i32 0, metadata !8698, metadata !DIExpression()), !dbg !8699
  %2 = add i32 %0, -1, !dbg !8700
  %3 = icmp ult i32 %2, 6, !dbg !8700
  br i1 %3, label %4, label %7, !dbg !8700

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8700
  %6 = load i32, i32* %5, align 4, !dbg !8700
  call void @llvm.dbg.value(metadata i32 %6, metadata !8698, metadata !DIExpression()), !dbg !8699
  br label %7, !dbg !8701

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8699
  ret i32 %8, !dbg !8702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 %1, metadata !8708, metadata !DIExpression()), !dbg !8709
  %3 = udiv i32 %0, %1, !dbg !8710
  ret i32 %3, !dbg !8711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #6 !dbg !8712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8716, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 16, metadata !8717, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 336, metadata !8718, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 4, metadata !8719, metadata !DIExpression()), !dbg !8720
  %2 = mul i32 %0, 336, !dbg !8721
  %3 = lshr i32 %2, 6, !dbg !8722
  ret i32 %3, !dbg !8723
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8724 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8726, metadata !DIExpression()), !dbg !8729
  tail call void @config_enable_default_clocks() #24, !dbg !8730
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !8731
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !8731
  %4 = lshr i32 %3, 4, !dbg !8731
  %5 = and i32 %4, 15, !dbg !8731
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8731
  %7 = load i8, i8* %6, align 1, !dbg !8731
  %8 = zext i8 %7 to i32, !dbg !8731
  %9 = lshr i32 %2, %8, !dbg !8731
  call void @llvm.dbg.value(metadata i32 %9, metadata !8727, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8729
  %10 = icmp ult i32 %9, 84000000, !dbg !8732
  br i1 %10, label %11, label %13, !dbg !8734

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !8735
  br label %13, !dbg !8737

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !8738
  tail call fastcc void @set_up_plls() #25, !dbg !8739
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8740
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !8743
  br label %14, !dbg !8744

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8745
  %16 = icmp eq i32 %15, 8, !dbg !8746
  br i1 %16, label %17, label %14, !dbg !8744, !llvm.loop !8747

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8749
  br i1 %18, label %19, label %21, !dbg !8751

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !8752
  br label %21, !dbg !8754

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8755
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !8756
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !8757
  ret i32 0, !dbg !8758
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !8759 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8761
  %2 = and i32 %1, 240, !dbg !8761
  ret i32 %2, !dbg !8762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8763 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8764
  %2 = icmp eq i32 %1, 1, !dbg !8768
  br i1 %2, label %7, label %3, !dbg !8769

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !8770
  br label %4, !dbg !8772

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8773
  %6 = icmp eq i32 %5, 1, !dbg !8774
  br i1 %6, label %7, label %4, !dbg !8772, !llvm.loop !8775

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !8777
  br label %8, !dbg !8780

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !8781
  %10 = icmp eq i32 %9, 1, !dbg !8782
  br i1 %10, label %11, label %8, !dbg !8780, !llvm.loop !8783

11:                                               ; preds = %8
  ret void, !dbg !8785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8786 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8787
  %2 = icmp eq i32 %1, 8, !dbg !8789
  br i1 %2, label %3, label %4, !dbg !8790

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8791
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !8793
  br label %4, !dbg !8794

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !8795
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8796
  %6 = and i32 %5, -196609, !dbg !8796
  %7 = or i32 %6, 65536, !dbg !8796
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8796
  tail call void @config_pll_sysclock() #24, !dbg !8797
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !8798
  br label %8, !dbg !8799

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !8800
  %10 = icmp eq i32 %9, 1, !dbg !8801
  br i1 %10, label %11, label %8, !dbg !8799, !llvm.loop !8802

11:                                               ; preds = %8
  ret void, !dbg !8804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8805 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8807, metadata !DIExpression()), !dbg !8808
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8809
  %2 = and i32 %1, -241, !dbg !8809
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8809
  ret void, !dbg !8810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8813, metadata !DIExpression()), !dbg !8814
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8815
  %3 = and i32 %2, -4, !dbg !8815
  %4 = or i32 %3, %0, !dbg !8815
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8815
  ret void, !dbg !8816
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !8817 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8818
  %2 = and i32 %1, 12, !dbg !8818
  ret i32 %2, !dbg !8819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8820 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8822, metadata !DIExpression()), !dbg !8823
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8824
  %2 = and i32 %1, -7169, !dbg !8824
  %3 = or i32 %2, 4096, !dbg !8824
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8824
  ret void, !dbg !8825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8826 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8828, metadata !DIExpression()), !dbg !8829
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8830
  %2 = and i32 %1, -57345, !dbg !8830
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8830
  ret void, !dbg !8831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8832 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8833
  %2 = icmp eq i32 %1, 1, !dbg !8835
  br i1 %2, label %7, label %3, !dbg !8836

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !8837
  br label %4, !dbg !8839

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8840
  %6 = icmp eq i32 %5, 1, !dbg !8841
  br i1 %6, label %7, label %4, !dbg !8839, !llvm.loop !8842

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !8844
  br label %8, !dbg !8845

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8846
  %10 = icmp eq i32 %9, 0, !dbg !8847
  br i1 %10, label %11, label %8, !dbg !8845, !llvm.loop !8848

11:                                               ; preds = %8
  ret void, !dbg !8850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8851 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8852
  %2 = and i32 %1, -16777217, !dbg !8852
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8852
  ret void, !dbg !8853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8854 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8855
  %2 = or i32 %1, 16777216, !dbg !8855
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8855
  ret void, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !8857 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8858
  %2 = lshr i32 %1, 25, !dbg !8859
  %3 = and i32 %2, 1, !dbg !8859
  ret i32 %3, !dbg !8860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !8861 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8862
  %2 = lshr i32 %1, 1, !dbg !8863
  %3 = and i32 %2, 1, !dbg !8863
  ret i32 %3, !dbg !8864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8865 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8866
  %2 = or i32 %1, 1, !dbg !8866
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8866
  ret void, !dbg !8867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8868 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8869
  %2 = or i32 %1, 1, !dbg !8869
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8869
  ret void, !dbg !8870
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !8871 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8872
  %2 = lshr i32 %1, 1, !dbg !8873
  %3 = and i32 %2, 1, !dbg !8873
  ret i32 %3, !dbg !8874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #6 !dbg !8875 {
  ret i32 16000000, !dbg !8877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8880 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !8881
  ret void, !dbg !8882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8883 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8887, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 16, metadata !8888, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 336, metadata !8889, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 65536, metadata !8890, metadata !DIExpression()), !dbg !8891
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8892
  %2 = and i32 %1, -4227072, !dbg !8892
  %3 = or i32 %2, 21520, !dbg !8892
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8892
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8893
  %5 = and i32 %4, -196609, !dbg !8893
  %6 = or i32 %5, 65536, !dbg !8893
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8893
  ret void, !dbg !8894
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8895 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !8896
  ret void, !dbg !8897
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8898 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8901, metadata !DIExpression()), !dbg !8903
  %2 = bitcast i32* %1 to i8*, !dbg !8904
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8904
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8902, metadata !DIExpression()), !dbg !8905
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8906
  %4 = or i32 %3, 268435456, !dbg !8906
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8906
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8907
  %6 = and i32 %5, 268435456, !dbg !8907
  store volatile i32 %6, i32* %1, align 4, !dbg !8908
  %7 = load volatile i32, i32* %1, align 4, !dbg !8909
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8910
  ret void, !dbg !8910
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8911 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8913, metadata !DIExpression()), !dbg !8914
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !8915
  br i1 %2, label %3, label %4, !dbg !8917

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !8918
  br label %4, !dbg !8919

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8914
  ret i32 %5, !dbg !8920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8921 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8926, metadata !DIExpression()), !dbg !8927
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8928, !srcloc !8930
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !8931
  ret i1 %1, !dbg !8932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8933 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !8934
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !8935
  ret void, !dbg !8936
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8939, metadata !DIExpression()), !dbg !8940
  %2 = icmp eq i32 %0, 10, !dbg !8941
  br i1 %2, label %3, label %4, !dbg !8943

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !8944
  br label %4, !dbg !8946

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8947
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !8948
  ret i32 %0, !dbg !8949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8950 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8953, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i8 %0, metadata !8954, metadata !DIExpression()), !dbg !8955
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8956, !srcloc !8958
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !8959
  ret void, !dbg !8960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8961 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8963, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i8 %0, metadata !8964, metadata !DIExpression()), !dbg !8966
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8967
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8965, metadata !DIExpression()), !dbg !8966
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8968
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8968
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #24, !dbg !8969
  ret void, !dbg !8970
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8971 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8973, metadata !DIExpression()), !dbg !8974
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #24, !dbg !8975
  ret i1 %1, !dbg !8976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !8977 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9026, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9027, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9028, metadata !DIExpression()), !dbg !9029
  ret void, !dbg !9030
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9031 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9033, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata i8 %1, metadata !9034, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata i32 %2, metadata !9035, metadata !DIExpression()), !dbg !9038
  %5 = bitcast i32* %4 to i8*, !dbg !9039
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9039
  call void @llvm.dbg.value(metadata i32* %4, metadata !9037, metadata !DIExpression(DW_OP_deref)), !dbg !9038
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !9040
  call void @llvm.dbg.value(metadata i32 %6, metadata !9036, metadata !DIExpression()), !dbg !9038
  %7 = icmp eq i32 %6, 0, !dbg !9041
  br i1 %7, label %8, label %31, !dbg !9043

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9036, metadata !DIExpression()), !dbg !9038
  %9 = and i32 %2, 131072, !dbg !9044
  %10 = icmp eq i32 %9, 0, !dbg !9046
  br i1 %10, label %28, label %11, !dbg !9047

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9048
  %13 = icmp eq i32 %12, 0, !dbg !9051
  br i1 %13, label %18, label %14, !dbg !9052

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9053
  %16 = shl nuw i32 1, %15, !dbg !9053
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !9055
  br label %25, !dbg !9056

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9057
  %20 = icmp eq i32 %19, 0, !dbg !9059
  %21 = zext i8 %1 to i32, !dbg !9038
  br i1 %20, label %25, label %22, !dbg !9060

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9061
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !9063
  br label %25, !dbg !9064

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9065
  %27 = load i32, i32* %4, align 4, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %30, metadata !9037, metadata !DIExpression()), !dbg !9038
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !9067
  br label %31, !dbg !9068

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9065
  %30 = load i32, i32* %4, align 4, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %30, metadata !9037, metadata !DIExpression()), !dbg !9038
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !9067
  call void @llvm.dbg.value(metadata i32 0, metadata !9036, metadata !DIExpression()), !dbg !9038
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9069
  ret i32 %6, !dbg !9069
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !9070 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9074, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32* %1, metadata !9075, metadata !DIExpression()), !dbg !9079
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9080
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9080
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9080
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9076, metadata !DIExpression()), !dbg !9079
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9081
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9081
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9081
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9078, metadata !DIExpression()), !dbg !9079
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !9082
  store i32 %9, i32* %1, align 4, !dbg !9083
  ret i32 0, !dbg !9084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9087, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.value(metadata i32 %1, metadata !9088, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.value(metadata i32 %2, metadata !9089, metadata !DIExpression()), !dbg !9093
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9094
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9094
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9094
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9090, metadata !DIExpression()), !dbg !9093
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9095
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9095
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9095
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9091, metadata !DIExpression()), !dbg !9093
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !9096
  call void @llvm.dbg.value(metadata i32 %10, metadata !9092, metadata !DIExpression()), !dbg !9093
  %11 = xor i32 %1, -1, !dbg !9097
  %12 = and i32 %10, %11, !dbg !9098
  %13 = and i32 %2, %1, !dbg !9099
  %14 = or i32 %12, %13, !dbg !9100
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !9101
  ret i32 0, !dbg !9102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9105, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i32 %1, metadata !9106, metadata !DIExpression()), !dbg !9109
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9110
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9110
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9110
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9107, metadata !DIExpression()), !dbg !9109
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9111
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9111
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9111
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9108, metadata !DIExpression()), !dbg !9109
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9112
  store volatile i32 %1, i32* %9, align 4, !dbg !9112
  ret i32 0, !dbg !9113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9116, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %1, metadata !9117, metadata !DIExpression()), !dbg !9120
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9121
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9121
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9121
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9118, metadata !DIExpression()), !dbg !9120
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9122
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9122
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9122
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9119, metadata !DIExpression()), !dbg !9120
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !9123
  ret i32 0, !dbg !9124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9127, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata i32 %1, metadata !9128, metadata !DIExpression()), !dbg !9131
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9132
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9132
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9132
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9129, metadata !DIExpression()), !dbg !9131
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9133
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9133
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9133
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9130, metadata !DIExpression()), !dbg !9131
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9134
  %10 = load volatile i32, i32* %9, align 4, !dbg !9134
  %11 = xor i32 %10, %1, !dbg !9134
  store volatile i32 %11, i32* %9, align 4, !dbg !9134
  ret i32 0, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9138, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata i8 %1, metadata !9139, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata i32 %2, metadata !9140, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata i32 %3, metadata !9141, metadata !DIExpression()), !dbg !9148
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9149
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9149
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9149
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9142, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata i8* undef, metadata !9143, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata i32 0, metadata !9145, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.value(metadata i32 0, metadata !9146, metadata !DIExpression()), !dbg !9148
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9150

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9151
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !9155
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9156
  %12 = load i32, i32* %11, align 4, !dbg !9156
  %13 = icmp eq i32 %10, %12, !dbg !9157
  br i1 %13, label %14, label %29, !dbg !9158

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !9159
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !9161
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !9162
  br label %29, !dbg !9163

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9164
  %17 = load i8*, i8** %16, align 4, !dbg !9164
  call void @llvm.dbg.value(metadata i8* %17, metadata !9143, metadata !DIExpression()), !dbg !9148
  %18 = zext i8 %1 to i32, !dbg !9165
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !9167
  %20 = icmp eq i32 %19, 0, !dbg !9168
  br i1 %20, label %21, label %29, !dbg !9169

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9170
  %23 = load i32, i32* %22, align 4, !dbg !9170
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !9171
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9172

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9145, metadata !DIExpression()), !dbg !9148
  br label %27, !dbg !9173

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9145, metadata !DIExpression()), !dbg !9148
  br label %27, !dbg !9175

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9145, metadata !DIExpression()), !dbg !9148
  br label %27, !dbg !9176

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9148
  call void @llvm.dbg.value(metadata i32 %28, metadata !9145, metadata !DIExpression()), !dbg !9148
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !9177
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !9178
  br label %29, !dbg !9178

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9148
  call void @llvm.dbg.value(metadata i32 %30, metadata !9146, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.label(metadata !9147), !dbg !9179
  ret i32 %30, !dbg !9180
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9183, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9184, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata i1 %2, metadata !9185, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9187
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9188
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9188
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9188
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9186, metadata !DIExpression()), !dbg !9187
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9189
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !9190
  ret i32 %8, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9198, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9199, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i1 %2, metadata !9200, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9201
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9202
  br i1 %4, label %5, label %6, !dbg !9205

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.110, i32 0, i32 0)) #24, !dbg !9206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9206
  unreachable, !dbg !9206

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9208
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9208
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9208
  br i1 %9, label %10, label %11, !dbg !9211

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9212
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #24, !dbg !9212
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9212
  unreachable, !dbg !9212

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !9214
  br i1 %12, label %18, label %13, !dbg !9216

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9217
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !9220
  %16 = or i1 %15, %2, !dbg !9221
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9221
  br i1 %2, label %19, label %21, !dbg !9221

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9222

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9223
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !9226
  br label %21, !dbg !9227

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9201
  ret i32 %22, !dbg !9228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9233, metadata !DIExpression()), !dbg !9234
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9235
  %3 = icmp eq %struct._snode* %2, null, !dbg !9235
  ret i1 %3, !dbg !9235
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9236 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9240, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9241, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9242, metadata !DIExpression()), !dbg !9244
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9245
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9242, metadata !DIExpression()), !dbg !9244
  %4 = icmp eq %struct._snode* %3, null, !dbg !9247
  br i1 %4, label %15, label %5, !dbg !9245

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9242, metadata !DIExpression()), !dbg !9244
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9249
  br i1 %6, label %9, label %11, !dbg !9252

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9242, metadata !DIExpression()), !dbg !9244
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9249
  br i1 %8, label %9, label %11, !dbg !9252, !llvm.loop !9253

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !9254
  br label %15, !dbg !9254

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9242, metadata !DIExpression()), !dbg !9244
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !9247
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9243, metadata !DIExpression()), !dbg !9244
  %14 = icmp eq %struct._snode* %13, null, !dbg !9247
  br i1 %14, label %15, label %7, !dbg !9245, !llvm.loop !9253

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !9257 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9261, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9262, metadata !DIExpression()), !dbg !9263
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9264
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !9264
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !9264
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9265
  %5 = icmp eq %struct._snode* %4, null, !dbg !9265
  br i1 %5, label %6, label %8, !dbg !9264

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9267
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !9267
  br label %8, !dbg !9267

8:                                                ; preds = %6, %2
  ret void, !dbg !9264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9269 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9273, metadata !DIExpression()), !dbg !9274
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9275
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9275
  ret %struct._snode* %3, !dbg !9276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9281, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9282, metadata !DIExpression()), !dbg !9283
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9284
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9285
  ret void, !dbg !9286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9287 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9289, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9290, metadata !DIExpression()), !dbg !9291
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9292
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9293
  ret void, !dbg !9294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9295 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9297, metadata !DIExpression()), !dbg !9298
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9299
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9299
  ret %struct._snode* %3, !dbg !9300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9301 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9303, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9304, metadata !DIExpression()), !dbg !9305
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9306
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9307
  ret void, !dbg !9308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !9309 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9313, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9314, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9315, metadata !DIExpression()), !dbg !9316
  %4 = icmp eq %struct._snode* %1, null, !dbg !9317
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !9319
  br i1 %4, label %6, label %11, !dbg !9320

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !9321
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9323
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9323
  br i1 %8, label %9, label %15, !dbg !9321

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9325
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !9325
  br label %15, !dbg !9325

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !9327
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9329
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9329
  br i1 %13, label %14, label %15, !dbg !9327

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !9331
  br label %15, !dbg !9331

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !9320
  ret void, !dbg !9320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !9333 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9337, metadata !DIExpression()), !dbg !9338
  %2 = icmp eq %struct._snode* %0, null, !dbg !9339
  br i1 %2, label %5, label %3, !dbg !9339

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !9339
  br label %5, !dbg !9339

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9339
  ret %struct._snode* %6, !dbg !9339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9340 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9342, metadata !DIExpression()), !dbg !9343
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !9344
  ret %struct._snode* %2, !dbg !9344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9345 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9347, metadata !DIExpression()), !dbg !9348
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9349
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9349
  ret %struct._snode* %3, !dbg !9350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9353, metadata !DIExpression()), !dbg !9356
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !9357, !range !9358
  call void @llvm.dbg.value(metadata i32 %2, metadata !9354, metadata !DIExpression()), !dbg !9356
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !9359
  call void @llvm.dbg.value(metadata i32 %3, metadata !9355, metadata !DIExpression()), !dbg !9356
  ret i32 %3, !dbg !9360
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9363, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i8* %1, metadata !9364, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i8* %1, metadata !9365, metadata !DIExpression()), !dbg !9366
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9367
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9367
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9368
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9368
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9368
  %8 = shl nuw i32 1, %0, !dbg !9369
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !9370
  ret void, !dbg !9371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9372 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9376, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata i32 %1, metadata !9377, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9378, metadata !DIExpression()), !dbg !9382
  %4 = bitcast i64* %3 to i8*, !dbg !9383
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9383
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9380, metadata !DIExpression()), !dbg !9382
  store i64 70368744177732, i64* %3, align 8, !dbg !9384
  call void @llvm.dbg.value(metadata i64* %3, metadata !9380, metadata !DIExpression(DW_OP_deref)), !dbg !9382
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !9385
  call void @llvm.dbg.value(metadata i32 %5, metadata !9381, metadata !DIExpression()), !dbg !9382
  %6 = icmp eq i32 %5, 0, !dbg !9386
  br i1 %6, label %7, label %8, !dbg !9388

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !9389
  br label %8, !dbg !9390

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9391
  ret void, !dbg !9391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9392 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9394, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i8* %0, metadata !9395, metadata !DIExpression()), !dbg !9397
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9398
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9396, metadata !DIExpression()), !dbg !9397
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9399
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9399
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !9400
  ret i32 %5, !dbg !9401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9404, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata i32 %1, metadata !9405, metadata !DIExpression()), !dbg !9407
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !9408
  call void @llvm.dbg.value(metadata i32 %3, metadata !9406, metadata !DIExpression()), !dbg !9407
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !9409
  ret void, !dbg !9410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #6 !dbg !9411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9415, metadata !DIExpression()), !dbg !9416
  %2 = sdiv i32 %0, 4, !dbg !9417
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9418
  %6 = add nsw i32 %5, 16, !dbg !9419
  %7 = shl i32 15, %6, !dbg !9420
  %8 = or i32 %7, %2, !dbg !9421
  ret i32 %8, !dbg !9422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9427, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata i32 %1, metadata !9428, metadata !DIExpression()), !dbg !9429
  %3 = and i32 %1, 255, !dbg !9430
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9430
  %5 = load volatile i32, i32* %4, align 4, !dbg !9430
  %6 = lshr i32 %1, 16, !dbg !9430
  %7 = xor i32 %6, -1, !dbg !9430
  %8 = and i32 %5, %7, !dbg !9430
  call void @llvm.dbg.value(metadata i32 %6, metadata !9431, metadata !DIExpression()) #23, !dbg !9435
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9437, !srcloc !9438
  call void @llvm.dbg.value(metadata i32 %9, metadata !9434, metadata !DIExpression()) #23, !dbg !9435
  call void @llvm.dbg.value(metadata i32 %9, metadata !9439, metadata !DIExpression()) #23, !dbg !9444
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9446, !range !7475
  %11 = shl i32 %0, %10, !dbg !9430
  %12 = or i32 %11, %8, !dbg !9430
  store volatile i32 %12, i32* %4, align 4, !dbg !9430
  ret void, !dbg !9447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9448 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9452, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9453, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i32 %2, metadata !9454, metadata !DIExpression()), !dbg !9457
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9458
  %5 = icmp eq %struct._snode* %4, null, !dbg !9458
  br i1 %5, label %24, label %6, !dbg !9458

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !9460
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9456, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9455, metadata !DIExpression()), !dbg !9457
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9461
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9461
  %12 = load i32, i32* %11, align 4, !dbg !9461
  %13 = and i32 %12, %2, !dbg !9465
  %14 = icmp eq i32 %13, 0, !dbg !9465
  br i1 %14, label %22, label %15, !dbg !9466

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9467
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9467
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9467
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9467
  br i1 %19, label %20, label %21, !dbg !9471

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #24, !dbg !9472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9472
  unreachable, !dbg !9472

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !9474
  br label %22, !dbg !9475

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9455, metadata !DIExpression()), !dbg !9457
  %23 = icmp eq %struct._snode* %8, null, !dbg !9476
  br i1 %23, label %24, label %6, !dbg !9476

24:                                               ; preds = %22, %3
  ret void, !dbg !9477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9480, metadata !DIExpression()), !dbg !9481
  %2 = and i32 %0, 255, !dbg !9482
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9482
  %4 = load volatile i32, i32* %3, align 4, !dbg !9482
  %5 = lshr i32 %0, 16, !dbg !9482
  %6 = and i32 %4, %5, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %5, metadata !9431, metadata !DIExpression()) #23, !dbg !9483
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9485, !srcloc !9438
  call void @llvm.dbg.value(metadata i32 %7, metadata !9434, metadata !DIExpression()) #23, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %7, metadata !9439, metadata !DIExpression()) #23, !dbg !9486
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9488, !range !7475
  %9 = lshr i32 %6, %8, !dbg !9489
  ret i32 %9, !dbg !9490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9491 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9496, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata i32 %1, metadata !9497, metadata !DIExpression()), !dbg !9498
  %3 = shl i32 %1, 16, !dbg !9499
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9499
  store volatile i32 %3, i32* %4, align 4, !dbg !9499
  ret void, !dbg !9500
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9501 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9505, metadata !DIExpression()), !dbg !9506
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9507
  %3 = load volatile i32, i32* %2, align 4, !dbg !9507
  ret i32 %3, !dbg !9508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9509 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9511, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.value(metadata i32 %1, metadata !9512, metadata !DIExpression()), !dbg !9513
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9514
  store volatile i32 %1, i32* %3, align 4, !dbg !9514
  ret void, !dbg !9515
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9516 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9518, metadata !DIExpression()), !dbg !9519
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9520
  %3 = load volatile i32, i32* %2, align 4, !dbg !9520
  ret i32 %3, !dbg !9521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !9522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9526, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.value(metadata i32* %1, metadata !9527, metadata !DIExpression()), !dbg !9528
  %3 = and i32 %0, 131072, !dbg !9529
  %4 = icmp eq i32 %3, 0, !dbg !9531
  br i1 %4, label %22, label %5, !dbg !9532

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9533
  %6 = and i32 %0, 2, !dbg !9535
  %7 = icmp eq i32 %6, 0, !dbg !9537
  br i1 %7, label %11, label %8, !dbg !9538

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9539
  %10 = icmp eq i32 %9, 0, !dbg !9539
  br i1 %10, label %33, label %11, !dbg !9542

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9543
  store i32 %12, i32* %1, align 4, !dbg !9543
  %13 = and i32 %0, 16, !dbg !9544
  %14 = icmp eq i32 %13, 0, !dbg !9546
  br i1 %14, label %17, label %15, !dbg !9547

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9548
  br label %31, !dbg !9550

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9551
  %19 = icmp eq i32 %18, 0, !dbg !9553
  br i1 %19, label %33, label %20, !dbg !9554

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9555
  br label %31, !dbg !9557

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9558
  %24 = icmp eq i32 %23, 0, !dbg !9560
  br i1 %24, label %31, label %25, !dbg !9561

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9562
  %27 = icmp eq i32 %26, 0, !dbg !9565
  br i1 %27, label %28, label %31, !dbg !9566

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9567
  br label %33, !dbg !9568

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9528
  ret i32 %34, !dbg !9568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9573, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.value(metadata i32 %1, metadata !9574, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.value(metadata i32 %2, metadata !9575, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.value(metadata i32 %3, metadata !9576, metadata !DIExpression()), !dbg !9584
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9585
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9585
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9585
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9577, metadata !DIExpression()), !dbg !9584
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9586
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9586
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9586
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9578, metadata !DIExpression()), !dbg !9584
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !9587
  call void @llvm.dbg.value(metadata i32 %11, metadata !9579, metadata !DIExpression()), !dbg !9584
  %12 = and i32 %2, 48, !dbg !9588
  call void @llvm.dbg.value(metadata i32 %12, metadata !9580, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.value(metadata i32 %2, metadata !9581, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9584
  call void @llvm.dbg.value(metadata i32 %2, metadata !9582, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9584
  call void @llvm.dbg.value(metadata i32 %2, metadata !9583, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9584
  %13 = lshr i32 %2, 6, !dbg !9589
  %14 = and i32 %13, 1, !dbg !9589
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !9590
  %15 = lshr i32 %2, 7, !dbg !9591
  %16 = and i32 %15, 3, !dbg !9591
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !9592
  %17 = lshr i32 %2, 9, !dbg !9593
  %18 = and i32 %17, 3, !dbg !9593
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !9594
  %19 = icmp eq i32 %12, 32, !dbg !9595
  br i1 %19, label %20, label %24, !dbg !9597

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9598
  br i1 %21, label %22, label %23, !dbg !9601

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9602
  br label %24, !dbg !9604

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9605
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9607
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !9608
  ret void, !dbg !9609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #6 !dbg !9610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9612, metadata !DIExpression()), !dbg !9614
  %2 = shl nuw i32 1, %0, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %2, metadata !9613, metadata !DIExpression()), !dbg !9614
  ret i32 %2, !dbg !9616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9617 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9621, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.value(metadata i32 %1, metadata !9622, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.value(metadata i32 %2, metadata !9623, metadata !DIExpression()), !dbg !9624
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9625
  %5 = load volatile i32, i32* %4, align 4, !dbg !9625
  %6 = xor i32 %1, -1, !dbg !9625
  %7 = and i32 %5, %6, !dbg !9625
  %8 = mul i32 %2, %1, !dbg !9625
  %9 = or i32 %7, %8, !dbg !9625
  store volatile i32 %9, i32* %4, align 4, !dbg !9625
  ret void, !dbg !9626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9627 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9629, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %1, metadata !9630, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9631, metadata !DIExpression()), !dbg !9632
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9633
  %5 = load volatile i32, i32* %4, align 4, !dbg !9633
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()) #23, !dbg !9634
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9636, !srcloc !9438
  call void @llvm.dbg.value(metadata i32 %6, metadata !9434, metadata !DIExpression()) #23, !dbg !9634
  call void @llvm.dbg.value(metadata i32 %6, metadata !9439, metadata !DIExpression()) #23, !dbg !9637
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9639, !range !7475
  %8 = shl nuw nsw i32 %7, 1, !dbg !9633
  %9 = shl i32 3, %8, !dbg !9633
  %10 = xor i32 %9, -1, !dbg !9633
  %11 = and i32 %5, %10, !dbg !9633
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()) #23, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %6, metadata !9434, metadata !DIExpression()) #23, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %6, metadata !9439, metadata !DIExpression()) #23, !dbg !9642
  %12 = shl i32 %2, %8, !dbg !9633
  %13 = or i32 %11, %12, !dbg !9633
  store volatile i32 %13, i32* %4, align 4, !dbg !9633
  ret void, !dbg !9644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9645 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9647, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.value(metadata i32 %1, metadata !9648, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.value(metadata i32 %2, metadata !9649, metadata !DIExpression()), !dbg !9650
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9651
  %5 = load volatile i32, i32* %4, align 4, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()) #23, !dbg !9652
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9654, !srcloc !9438
  call void @llvm.dbg.value(metadata i32 %6, metadata !9434, metadata !DIExpression()) #23, !dbg !9652
  call void @llvm.dbg.value(metadata i32 %6, metadata !9439, metadata !DIExpression()) #23, !dbg !9655
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9657, !range !7475
  %8 = shl nuw nsw i32 %7, 1, !dbg !9651
  %9 = shl i32 3, %8, !dbg !9651
  %10 = xor i32 %9, -1, !dbg !9651
  %11 = and i32 %5, %10, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()) #23, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %6, metadata !9434, metadata !DIExpression()) #23, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %6, metadata !9439, metadata !DIExpression()) #23, !dbg !9660
  %12 = shl i32 %2, %8, !dbg !9651
  %13 = or i32 %11, %12, !dbg !9651
  store volatile i32 %13, i32* %4, align 4, !dbg !9651
  ret void, !dbg !9662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9663 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9665, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %1, metadata !9666, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.value(metadata i32 %2, metadata !9667, metadata !DIExpression()), !dbg !9668
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9669
  %5 = load volatile i32, i32* %4, align 4, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()) #23, !dbg !9670
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9672, !srcloc !9438
  call void @llvm.dbg.value(metadata i32 %6, metadata !9434, metadata !DIExpression()) #23, !dbg !9670
  call void @llvm.dbg.value(metadata i32 %6, metadata !9439, metadata !DIExpression()) #23, !dbg !9673
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9675, !range !7475
  %8 = shl nuw nsw i32 %7, 2, !dbg !9669
  %9 = shl i32 15, %8, !dbg !9669
  %10 = xor i32 %9, -1, !dbg !9669
  %11 = and i32 %5, %10, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()) #23, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %6, metadata !9434, metadata !DIExpression()) #23, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %6, metadata !9439, metadata !DIExpression()) #23, !dbg !9678
  %12 = shl i32 %2, %8, !dbg !9669
  %13 = or i32 %11, %12, !dbg !9669
  store volatile i32 %13, i32* %4, align 4, !dbg !9669
  ret void, !dbg !9680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9681 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9683, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %1, metadata !9684, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %2, metadata !9685, metadata !DIExpression()), !dbg !9686
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9687
  %5 = load volatile i32, i32* %4, align 4, !dbg !9687
  %6 = lshr i32 %1, 8, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %6, metadata !9431, metadata !DIExpression()) #23, !dbg !9688
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9690, !srcloc !9438
  call void @llvm.dbg.value(metadata i32 %7, metadata !9434, metadata !DIExpression()) #23, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %7, metadata !9439, metadata !DIExpression()) #23, !dbg !9691
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9693, !range !7475
  %9 = shl nuw nsw i32 %8, 2, !dbg !9687
  %10 = shl i32 15, %9, !dbg !9687
  %11 = xor i32 %10, -1, !dbg !9687
  %12 = and i32 %5, %11, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %6, metadata !9431, metadata !DIExpression()) #23, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %7, metadata !9434, metadata !DIExpression()) #23, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %7, metadata !9439, metadata !DIExpression()) #23, !dbg !9696
  %13 = shl i32 %2, %9, !dbg !9687
  %14 = or i32 %12, %13, !dbg !9687
  store volatile i32 %14, i32* %4, align 4, !dbg !9687
  ret void, !dbg !9698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9699 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9701, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i32 %1, metadata !9702, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i32 %2, metadata !9703, metadata !DIExpression()), !dbg !9704
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9705
  %5 = load volatile i32, i32* %4, align 4, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()) #23, !dbg !9706
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9708, !srcloc !9438
  call void @llvm.dbg.value(metadata i32 %6, metadata !9434, metadata !DIExpression()) #23, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %6, metadata !9439, metadata !DIExpression()) #23, !dbg !9709
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9711, !range !7475
  %8 = shl nuw nsw i32 %7, 1, !dbg !9705
  %9 = shl i32 3, %8, !dbg !9705
  %10 = xor i32 %9, -1, !dbg !9705
  %11 = and i32 %5, %10, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()) #23, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %6, metadata !9434, metadata !DIExpression()) #23, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %6, metadata !9439, metadata !DIExpression()) #23, !dbg !9714
  %12 = shl i32 %2, %8, !dbg !9705
  %13 = or i32 %11, %12, !dbg !9705
  store volatile i32 %13, i32* %4, align 4, !dbg !9705
  ret void, !dbg !9716
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9719, metadata !DIExpression()), !dbg !9722
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9723
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9723
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9723
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9720, metadata !DIExpression()), !dbg !9722
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9724
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9725
  %6 = tail call fastcc zeroext i1 @device_is_ready.122() #25, !dbg !9726
  br i1 %6, label %7, label %11, !dbg !9728

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %8, metadata !9721, metadata !DIExpression()), !dbg !9722
  %9 = icmp slt i32 %8, 0, !dbg !9730
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9732
  br label %11, !dbg !9732

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9722
  ret i32 %12, !dbg !9733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122() unnamed_addr #1 !dbg !9734 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9738, metadata !DIExpression()), !dbg !9739
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9740, !srcloc !9742
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123() #25, !dbg !9743
  ret i1 %1, !dbg !9744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9749, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata i8 1, metadata !9750, metadata !DIExpression()), !dbg !9754
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9755
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9755
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9755
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9751, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata i32 0, metadata !9752, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9753, metadata !DIExpression()), !dbg !9754
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9756
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9759
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %7, metadata !9752, metadata !DIExpression()), !dbg !9754
  ret i32 %7, !dbg !9761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123() unnamed_addr #1 !dbg !9762 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9764, metadata !DIExpression()), !dbg !9765
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !9766
  ret i1 %1, !dbg !9767
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9772, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %1, metadata !9773, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %2, metadata !9774, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %3, metadata !9775, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 0, metadata !9776, metadata !DIExpression()), !dbg !9780
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !9781
  %5 = icmp eq i32 %3, 17, !dbg !9782
  br i1 %5, label %6, label %14, !dbg !9783

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9784
  call void @llvm.dbg.value(metadata i32 %7, metadata !9777, metadata !DIExpression()), !dbg !9785
  %8 = icmp eq i32 %7, 0, !dbg !9786
  %9 = shl nuw i32 1, %1, !dbg !9788
  br i1 %8, label %12, label %10, !dbg !9789

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9790
  br label %14, !dbg !9792

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9793
  br label %14, !dbg !9796

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9797
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9800, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata i8* %1, metadata !9801, metadata !DIExpression()), !dbg !9804
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9805
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9805
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9805
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9802, metadata !DIExpression()), !dbg !9804
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9806
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9806
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !9808
  %9 = icmp eq i32 %8, 0, !dbg !9808
  br i1 %9, label %12, label %10, !dbg !9809

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9810
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !9812
  br label %12, !dbg !9813

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9814
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9816
  %15 = icmp eq i32 %14, 0, !dbg !9816
  br i1 %15, label %19, label %16, !dbg !9817

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9818
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !9819
  store i8 %18, i8* %1, align 1, !dbg !9820
  br label %19, !dbg !9821

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9804
  ret i32 %20, !dbg !9822
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9823 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9825, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i8 %1, metadata !9826, metadata !DIExpression()), !dbg !9829
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9830
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9830
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9830
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9827, metadata !DIExpression()), !dbg !9829
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9831

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9832
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !9835
  %10 = icmp eq i32 %9, 0, !dbg !9835
  br i1 %10, label %18, label %11, !dbg !9836

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9837, !srcloc !9844
  call void @llvm.dbg.value(metadata i32 undef, metadata !9840, metadata !DIExpression()) #23, !dbg !9845
  call void @llvm.dbg.value(metadata i32 undef, metadata !9841, metadata !DIExpression()) #23, !dbg !9845
  call void @llvm.dbg.value(metadata i32 undef, metadata !9828, metadata !DIExpression()), !dbg !9829
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9846
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9848
  %15 = icmp eq i32 %14, 0, !dbg !9848
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9837
  br i1 %15, label %17, label %19, !dbg !9849

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9840, metadata !DIExpression()) #23, !dbg !9845
  call void @llvm.dbg.value(metadata i32 %16, metadata !9828, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i32 undef, metadata !9850, metadata !DIExpression()) #23, !dbg !9853
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9855, !srcloc !9856
  br label %18, !dbg !9857

18:                                               ; preds = %17, %7
  br label %7, !dbg !9832, !llvm.loop !9858

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9837
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9860
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !9861
  call void @llvm.dbg.value(metadata i32 %20, metadata !9850, metadata !DIExpression()) #23, !dbg !9862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9864, !srcloc !9856
  ret void, !dbg !9865
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9866 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9868, metadata !DIExpression()), !dbg !9871
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9872
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9872
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9872
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9869, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.value(metadata i32 0, metadata !9870, metadata !DIExpression()), !dbg !9871
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9873
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9873
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !9875
  %8 = icmp ne i32 %7, 0, !dbg !9875
  %9 = zext i1 %8 to i32, !dbg !9876
  call void @llvm.dbg.value(metadata i32 %9, metadata !9870, metadata !DIExpression()), !dbg !9871
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9877
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !9879
  %12 = icmp eq i32 %11, 0, !dbg !9879
  %13 = or i32 %9, 2, !dbg !9880
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9880
  call void @llvm.dbg.value(metadata i32 %14, metadata !9870, metadata !DIExpression()), !dbg !9871
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9881
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !9883
  %17 = icmp eq i32 %16, 0, !dbg !9883
  %18 = or i32 %14, 4, !dbg !9884
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9884
  call void @llvm.dbg.value(metadata i32 %19, metadata !9870, metadata !DIExpression()), !dbg !9871
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9885
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !9887
  %22 = icmp eq i32 %21, 0, !dbg !9887
  %23 = or i32 %19, 8, !dbg !9888
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %24, metadata !9870, metadata !DIExpression()), !dbg !9871
  %25 = and i32 %24, 8, !dbg !9889
  %26 = icmp eq i32 %25, 0, !dbg !9889
  br i1 %26, label %29, label %27, !dbg !9891

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9892
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !9894
  br label %29, !dbg !9895

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9896
  %31 = icmp eq i32 %30, 0, !dbg !9896
  br i1 %31, label %34, label %32, !dbg !9898

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9899
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !9901
  br label %34, !dbg !9902

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9903
  %36 = icmp eq i32 %35, 0, !dbg !9903
  br i1 %36, label %39, label %37, !dbg !9905

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9906
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !9908
  br label %39, !dbg !9909

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9910
  %41 = icmp eq i32 %40, 0, !dbg !9910
  br i1 %41, label %44, label %42, !dbg !9912

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9913
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !9915
  br label %44, !dbg !9916

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9917
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !9918
  ret i32 %24, !dbg !9919
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9922, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9923, metadata !DIExpression()), !dbg !9931
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9932
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9932
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9932
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9924, metadata !DIExpression()), !dbg !9931
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9933
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9933
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9933
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9925, metadata !DIExpression()), !dbg !9931
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9934
  %10 = load i8, i8* %9, align 4, !dbg !9934
  %11 = zext i8 %10 to i32, !dbg !9935
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %12, metadata !9927, metadata !DIExpression()), !dbg !9931
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9937
  %14 = load i8, i8* %13, align 1, !dbg !9937
  %15 = zext i8 %14 to i32, !dbg !9938
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !9939
  call void @llvm.dbg.value(metadata i32 %16, metadata !9928, metadata !DIExpression()), !dbg !9931
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9940
  %18 = load i8, i8* %17, align 2, !dbg !9940
  %19 = zext i8 %18 to i32, !dbg !9941
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !9942
  call void @llvm.dbg.value(metadata i32 %20, metadata !9929, metadata !DIExpression()), !dbg !9931
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9943
  %22 = load i8, i8* %21, align 1, !dbg !9943
  %23 = zext i8 %22 to i32, !dbg !9944
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !9945
  call void @llvm.dbg.value(metadata i32 %24, metadata !9930, metadata !DIExpression()), !dbg !9931
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9946

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9948
  br i1 %26, label %69, label %27, !dbg !9950

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9951

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9952
  br i1 %29, label %65, label %30, !dbg !9952

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9954
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9931
  br i1 %31, label %38, label %34, !dbg !9956

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9957
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9957

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9960
  br i1 %37, label %38, label %69, !dbg !9961

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9962
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !9963
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !9964
  %41 = icmp eq i32 %12, %40, !dbg !9966
  br i1 %41, label %43, label %42, !dbg !9967

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !9968
  br label %43, !dbg !9970

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !9971
  %45 = icmp eq i32 %16, %44, !dbg !9973
  br i1 %45, label %47, label %46, !dbg !9974

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !9975
  br label %47, !dbg !9977

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !9978
  %49 = icmp eq i32 %20, %48, !dbg !9980
  br i1 %49, label %51, label %50, !dbg !9981

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !9982
  br label %51, !dbg !9984

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !9985
  %53 = icmp eq i32 %24, %52, !dbg !9987
  br i1 %53, label %55, label %54, !dbg !9988

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !9989
  br label %55, !dbg !9991

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9992
  %57 = load i32, i32* %56, align 4, !dbg !9992
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9994
  %59 = load i32, i32* %58, align 4, !dbg !9994
  %60 = icmp eq i32 %57, %59, !dbg !9995
  br i1 %60, label %63, label %61, !dbg !9996

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !9997
  %62 = load i32, i32* %56, align 4, !dbg !9999
  store i32 %62, i32* %58, align 4, !dbg !10000
  br label %63, !dbg !10001

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10002
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !10003
  br label %69, !dbg !10004

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9952
  %67 = and i8 %66, 1, !dbg !9952
  %68 = icmp eq i8 %67, 0, !dbg !9952
  br i1 %68, label %30, label %69, !dbg !9952

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9931
  ret i32 %70, !dbg !10005
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10006 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10008, metadata !DIExpression()), !dbg !10011
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10009, metadata !DIExpression()), !dbg !10011
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10012
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10012
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10012
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10010, metadata !DIExpression()), !dbg !10011
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10013
  %7 = load i32, i32* %6, align 4, !dbg !10013
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10014
  store i32 %7, i32* %8, align 4, !dbg !10015
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10016, !range !10017
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !10018
  %11 = trunc i32 %10 to i8, !dbg !10018
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10019
  store i8 %11, i8* %12, align 4, !dbg !10020
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !10021, !range !10022
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !10023
  %15 = trunc i32 %14 to i8, !dbg !10023
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10024
  store i8 %15, i8* %16, align 1, !dbg !10025
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !10026
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10027, !range !10017
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !10028
  %20 = trunc i32 %19 to i8, !dbg !10028
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10029
  store i8 %20, i8* %21, align 2, !dbg !10030
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !10031, !range !10032
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !10033
  %24 = trunc i32 %23 to i8, !dbg !10033
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10034
  store i8 %24, i8* %25, align 1, !dbg !10035
  ret i32 0, !dbg !10036
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10041, metadata !DIExpression()), !dbg !10043
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10044
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10044
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10044
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10042, metadata !DIExpression()), !dbg !10043
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10045
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10045
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !10046
  ret i32 %7, !dbg !10047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #6 !dbg !10048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10052, metadata !DIExpression()), !dbg !10053
  %2 = icmp eq i32 %0, 1024, !dbg !10054
  %3 = select i1 %2, i32 2, i32 0, !dbg !10054
  %4 = icmp eq i32 %0, 1536, !dbg !10054
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10054
  ret i32 %5, !dbg !10055
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10056 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10058, metadata !DIExpression()), !dbg !10060
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10061
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10061
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10061
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10059, metadata !DIExpression()), !dbg !10060
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10062
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10062
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !10063
  ret i32 %7, !dbg !10064
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !10065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10069, metadata !DIExpression()), !dbg !10070
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10071
  %3 = icmp ult i32 %2, 4, !dbg !10071
  br i1 %3, label %4, label %7, !dbg !10071

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10071
  %6 = load i32, i32* %5, align 4, !dbg !10071
  br label %7, !dbg !10071

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10072
  ret i32 %8, !dbg !10074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10075 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10077, metadata !DIExpression()), !dbg !10079
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10080
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10080
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10080
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10078, metadata !DIExpression()), !dbg !10079
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10081
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10081
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !10082
  ret i32 %7, !dbg !10083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10088, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i32 %1, metadata !10089, metadata !DIExpression()), !dbg !10090
  %3 = icmp eq i32 %0, 4096, !dbg !10091
  %4 = icmp eq i32 %1, 0, !dbg !10091
  %5 = select i1 %4, i32 4, i32 3, !dbg !10091
  %6 = select i1 %4, i32 3, i32 2, !dbg !10091
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10091
  ret i32 %7, !dbg !10092
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10093 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10095, metadata !DIExpression()), !dbg !10097
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10098
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10098
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10098
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10096, metadata !DIExpression()), !dbg !10097
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10099
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10099
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !10100
  ret i32 %7, !dbg !10101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10106, metadata !DIExpression()), !dbg !10107
  %2 = icmp eq i32 %0, 768, !dbg !10108
  %3 = zext i1 %2 to i32, !dbg !10107
  ret i32 %3, !dbg !10110
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10111 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10116, metadata !DIExpression()), !dbg !10117
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10118
  %3 = load volatile i32, i32* %2, align 4, !dbg !10118
  %4 = and i32 %3, 768, !dbg !10118
  ret i32 %4, !dbg !10119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10120 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10122, metadata !DIExpression()), !dbg !10123
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10124
  %3 = load volatile i32, i32* %2, align 4, !dbg !10124
  %4 = and i32 %3, 4096, !dbg !10124
  ret i32 %4, !dbg !10125
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10126 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10128, metadata !DIExpression()), !dbg !10129
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10130
  %3 = load volatile i32, i32* %2, align 4, !dbg !10130
  %4 = and i32 %3, 12288, !dbg !10130
  ret i32 %4, !dbg !10131
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10132 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10134, metadata !DIExpression()), !dbg !10135
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10136
  %3 = load volatile i32, i32* %2, align 4, !dbg !10136
  %4 = and i32 %3, 1536, !dbg !10136
  ret i32 %4, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #6 !dbg !10138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10142, metadata !DIExpression()), !dbg !10143
  %2 = icmp eq i32 %0, 2, !dbg !10144
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10144
  %4 = icmp eq i32 %0, 1, !dbg !10144
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10144
  ret i32 %5, !dbg !10145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !10146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10150, metadata !DIExpression()), !dbg !10151
  %2 = icmp ult i32 %0, 3, !dbg !10152
  br i1 %2, label %3, label %6, !dbg !10152

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10152
  %5 = load i32, i32* %4, align 4, !dbg !10152
  br label %6, !dbg !10152

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10153
  ret i32 %7, !dbg !10155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10160, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.value(metadata i32 %1, metadata !10161, metadata !DIExpression()), !dbg !10162
  %3 = icmp eq i32 %0, 4, !dbg !10163
  %4 = icmp eq i32 %1, 0, !dbg !10163
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10163
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10163
  ret i32 %6, !dbg !10164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10169, metadata !DIExpression()), !dbg !10170
  %2 = icmp eq i32 %0, 1, !dbg !10171
  %3 = select i1 %2, i32 768, i32 0, !dbg !10170
  ret i32 %3, !dbg !10173
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10174 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10178, metadata !DIExpression()), !dbg !10179
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10180
  %3 = load volatile i32, i32* %2, align 4, !dbg !10180
  %4 = and i32 %3, -8193, !dbg !10180
  store volatile i32 %4, i32* %2, align 4, !dbg !10180
  ret void, !dbg !10181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10182 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10186, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i32 %1, metadata !10187, metadata !DIExpression()), !dbg !10189
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10190
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10190
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10190
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10188, metadata !DIExpression()), !dbg !10189
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10191
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10191
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10192
  ret void, !dbg !10193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10194 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10196, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.value(metadata i32 %1, metadata !10197, metadata !DIExpression()), !dbg !10199
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10200
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10200
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10200
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10198, metadata !DIExpression()), !dbg !10199
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10201
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10201
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10202
  ret void, !dbg !10203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10204 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10206, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.value(metadata i32 %1, metadata !10207, metadata !DIExpression()), !dbg !10209
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10210
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10210
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10210
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10208, metadata !DIExpression()), !dbg !10209
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10211
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10211
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10212
  ret void, !dbg !10213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10214 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10216, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.value(metadata i32 %1, metadata !10217, metadata !DIExpression()), !dbg !10219
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10220
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10220
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10220
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10218, metadata !DIExpression()), !dbg !10219
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10221
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10221
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10222
  ret void, !dbg !10223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10224 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10226, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %1, metadata !10227, metadata !DIExpression()), !dbg !10231
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10232
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10232
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10232
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10228, metadata !DIExpression()), !dbg !10231
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10233
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10233
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10233
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10229, metadata !DIExpression()), !dbg !10231
  %10 = bitcast i32* %3 to i8*, !dbg !10234
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10234
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10235
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10235
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10239
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10239
  %15 = load i8*, i8** %14, align 4, !dbg !10239
  call void @llvm.dbg.value(metadata i32* %3, metadata !10230, metadata !DIExpression(DW_OP_deref)), !dbg !10231
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !10240
  %17 = icmp slt i32 %16, 0, !dbg !10241
  br i1 %17, label %18, label %21, !dbg !10242

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10243
  %20 = zext i8 %19 to i32, !dbg !10243
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef %20) #24, !dbg !10243
  br label %31, !dbg !10249

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10250
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10250
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #25, !dbg !10251
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10252
  %25 = load i32, i32* %3, align 4, !dbg !10253
  call void @llvm.dbg.value(metadata i32 %25, metadata !10230, metadata !DIExpression()), !dbg !10231
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #25, !dbg !10254
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10255
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10255
  %28 = load volatile i32, i32* %27, align 4, !dbg !10255
  %29 = icmp ugt i32 %28, 16, !dbg !10255
  br i1 %29, label %31, label %30, !dbg !10258

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.132, i32 0, i32 0), i32 noundef 190) #24, !dbg !10259
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.133, i32 0, i32 0)) #24, !dbg !10259
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.132, i32 0, i32 0), i32 noundef 190) #24, !dbg !10259
  unreachable, !dbg !10259

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10261
  ret void, !dbg !10261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10262 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10264, metadata !DIExpression()), !dbg !10265
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10266
  %3 = load volatile i32, i32* %2, align 4, !dbg !10266
  %4 = or i32 %3, 8192, !dbg !10266
  store volatile i32 %4, i32* %2, align 4, !dbg !10266
  ret void, !dbg !10267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10268 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10270, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i8* %1, metadata !10271, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32* %2, metadata !10272, metadata !DIExpression()), !dbg !10274
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10275
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10275
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10275
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10273, metadata !DIExpression()), !dbg !10274
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10276
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10276
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10278
  br i1 %9, label %12, label %10, !dbg !10279

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !10280
  br label %12, !dbg !10281

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10274
  ret i32 %13, !dbg !10282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef %0) unnamed_addr #6 !dbg !10283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10285, metadata !DIExpression()), !dbg !10286
  %2 = icmp eq i32 %0, 2, !dbg !10287
  %3 = select i1 %2, i8 87, i8 63, !dbg !10287
  %4 = icmp eq i32 %0, 1, !dbg !10287
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10287
  ret i8 %5, !dbg !10288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10289 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10293, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i32 0, metadata !10294, metadata !DIExpression()), !dbg !10295
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10296
  %3 = load volatile i32, i32* %2, align 4, !dbg !10296
  %4 = and i32 %3, -32769, !dbg !10296
  store volatile i32 %4, i32* %2, align 4, !dbg !10296
  ret void, !dbg !10297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10302, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 %1, metadata !10303, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 0, metadata !10304, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 %2, metadata !10305, metadata !DIExpression()), !dbg !10306
  %4 = zext i32 %1 to i64, !dbg !10307
  %5 = mul nuw nsw i64 %4, 25, !dbg !10307
  %6 = zext i32 %2 to i64, !dbg !10307
  %7 = shl nuw nsw i64 %6, 2, !dbg !10307
  %8 = udiv i64 %5, %7, !dbg !10307
  %9 = trunc i64 %8 to i32, !dbg !10307
  %10 = udiv i32 %9, 100, !dbg !10307
  %11 = shl nuw nsw i32 %10, 4, !dbg !10307
  %12 = mul i32 %10, -100, !dbg !10307
  %13 = add i32 %12, %9, !dbg !10307
  %14 = shl i32 %13, 4, !dbg !10307
  %15 = add i32 %14, 50, !dbg !10307
  %16 = udiv i32 %15, 100, !dbg !10307
  %17 = and i32 %16, 240, !dbg !10307
  %18 = add nuw nsw i32 %17, %11, !dbg !10307
  %19 = and i32 %16, 15, !dbg !10307
  %20 = and i32 %18, 65520, !dbg !10310
  %21 = or i32 %20, %19, !dbg !10310
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10311
  store volatile i32 %21, i32* %22, align 4, !dbg !10312
  ret void, !dbg !10313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10314 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10316, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.value(metadata i32 %1, metadata !10317, metadata !DIExpression()), !dbg !10318
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10319
  %4 = load volatile i32, i32* %3, align 4, !dbg !10319
  %5 = and i32 %4, -769, !dbg !10319
  %6 = or i32 %5, %1, !dbg !10319
  store volatile i32 %6, i32* %3, align 4, !dbg !10319
  ret void, !dbg !10320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10323, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 %1, metadata !10324, metadata !DIExpression()), !dbg !10325
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10326
  %4 = load volatile i32, i32* %3, align 4, !dbg !10326
  %5 = and i32 %4, -4097, !dbg !10326
  %6 = or i32 %5, %1, !dbg !10326
  store volatile i32 %6, i32* %3, align 4, !dbg !10326
  ret void, !dbg !10327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10328 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10330, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 %1, metadata !10331, metadata !DIExpression()), !dbg !10332
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10333
  %4 = load volatile i32, i32* %3, align 4, !dbg !10333
  %5 = and i32 %4, -12289, !dbg !10333
  %6 = or i32 %5, %1, !dbg !10333
  store volatile i32 %6, i32* %3, align 4, !dbg !10333
  ret void, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10335 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10337, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.value(metadata i32 %1, metadata !10338, metadata !DIExpression()), !dbg !10339
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10340
  %4 = load volatile i32, i32* %3, align 4, !dbg !10340
  %5 = and i32 %4, -1537, !dbg !10340
  %6 = or i32 %5, %1, !dbg !10340
  store volatile i32 %6, i32* %3, align 4, !dbg !10340
  ret void, !dbg !10341
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10342 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10344, metadata !DIExpression()), !dbg !10345
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10346
  %3 = load volatile i32, i32* %2, align 4, !dbg !10346
  %4 = lshr i32 %3, 3, !dbg !10347
  %5 = and i32 %4, 1, !dbg !10347
  ret i32 %5, !dbg !10348
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10351, metadata !DIExpression()), !dbg !10352
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10353
  %3 = load volatile i32, i32* %2, align 4, !dbg !10353
  %4 = and i32 %3, 1, !dbg !10353
  ret i32 %4, !dbg !10354
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10355 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10357, metadata !DIExpression()), !dbg !10358
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10359
  %3 = load volatile i32, i32* %2, align 4, !dbg !10359
  %4 = lshr i32 %3, 1, !dbg !10360
  %5 = and i32 %4, 1, !dbg !10360
  ret i32 %5, !dbg !10361
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10364, metadata !DIExpression()), !dbg !10365
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10366
  %3 = load volatile i32, i32* %2, align 4, !dbg !10366
  %4 = lshr i32 %3, 8, !dbg !10367
  %5 = and i32 %4, 1, !dbg !10367
  ret i32 %5, !dbg !10368
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10371, metadata !DIExpression()), !dbg !10372
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10373
  store volatile i32 -257, i32* %2, align 4, !dbg !10373
  ret void, !dbg !10374
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10375 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10377, metadata !DIExpression()), !dbg !10379
  %3 = bitcast i32* %2 to i8*, !dbg !10380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10380
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10378, metadata !DIExpression()), !dbg !10381
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10382
  %5 = load volatile i32, i32* %4, align 4, !dbg !10382
  store volatile i32 %5, i32* %2, align 4, !dbg !10383
  %6 = load volatile i32, i32* %2, align 4, !dbg !10384
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10385
  %8 = load volatile i32, i32* %7, align 4, !dbg !10385
  store volatile i32 %8, i32* %2, align 4, !dbg !10386
  %9 = load volatile i32, i32* %2, align 4, !dbg !10387
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10388
  ret void, !dbg !10388
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10389 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10391, metadata !DIExpression()), !dbg !10393
  %3 = bitcast i32* %2 to i8*, !dbg !10394
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10394
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10392, metadata !DIExpression()), !dbg !10395
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10396
  %5 = load volatile i32, i32* %4, align 4, !dbg !10396
  store volatile i32 %5, i32* %2, align 4, !dbg !10397
  %6 = load volatile i32, i32* %2, align 4, !dbg !10398
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10399
  %8 = load volatile i32, i32* %7, align 4, !dbg !10399
  store volatile i32 %8, i32* %2, align 4, !dbg !10400
  %9 = load volatile i32, i32* %2, align 4, !dbg !10401
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10402
  ret void, !dbg !10402
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10403 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10405, metadata !DIExpression()), !dbg !10407
  %3 = bitcast i32* %2 to i8*, !dbg !10408
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10408
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10406, metadata !DIExpression()), !dbg !10409
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10410
  %5 = load volatile i32, i32* %4, align 4, !dbg !10410
  store volatile i32 %5, i32* %2, align 4, !dbg !10411
  %6 = load volatile i32, i32* %2, align 4, !dbg !10412
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10413
  %8 = load volatile i32, i32* %7, align 4, !dbg !10413
  store volatile i32 %8, i32* %2, align 4, !dbg !10414
  %9 = load volatile i32, i32* %2, align 4, !dbg !10415
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10416
  ret void, !dbg !10416
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10417 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10419, metadata !DIExpression()), !dbg !10421
  %3 = bitcast i32* %2 to i8*, !dbg !10422
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10422
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10420, metadata !DIExpression()), !dbg !10423
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10424
  %5 = load volatile i32, i32* %4, align 4, !dbg !10424
  store volatile i32 %5, i32* %2, align 4, !dbg !10425
  %6 = load volatile i32, i32* %2, align 4, !dbg !10426
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10427
  %8 = load volatile i32, i32* %7, align 4, !dbg !10427
  store volatile i32 %8, i32* %2, align 4, !dbg !10428
  %9 = load volatile i32, i32* %2, align 4, !dbg !10429
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10430
  ret void, !dbg !10430
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10431 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10433, metadata !DIExpression()), !dbg !10434
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10435
  %3 = load volatile i32, i32* %2, align 4, !dbg !10435
  %4 = lshr i32 %3, 7, !dbg !10436
  %5 = and i32 %4, 1, !dbg !10436
  ret i32 %5, !dbg !10437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10438 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10442, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.value(metadata i8 %1, metadata !10443, metadata !DIExpression()), !dbg !10444
  %3 = zext i8 %1 to i32, !dbg !10445
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10446
  store volatile i32 %3, i32* %4, align 4, !dbg !10447
  ret void, !dbg !10448
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10449 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10451, metadata !DIExpression()), !dbg !10452
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10453
  %3 = load volatile i32, i32* %2, align 4, !dbg !10453
  %4 = lshr i32 %3, 5, !dbg !10454
  %5 = and i32 %4, 1, !dbg !10454
  ret i32 %5, !dbg !10455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10460, metadata !DIExpression()), !dbg !10461
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10462
  %3 = load volatile i32, i32* %2, align 4, !dbg !10462
  %4 = trunc i32 %3 to i8, !dbg !10463
  ret i8 %4, !dbg !10464
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10467, metadata !DIExpression()), !dbg !10473
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10474
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10474
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10474
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10468, metadata !DIExpression()), !dbg !10473
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10475
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10475
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10475
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10469, metadata !DIExpression()), !dbg !10473
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !10476
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10477
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10477
  %10 = tail call fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %9) #25, !dbg !10479
  br i1 %10, label %14, label %11, !dbg !10480

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10481
  %13 = zext i8 %12 to i32, !dbg !10481
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.136, i32 0, i32 0), i32 noundef %13) #24, !dbg !10481
  br label %62, !dbg !10487

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10488
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10489
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10489
  %18 = load i8*, i8** %17, align 4, !dbg !10489
  %19 = tail call fastcc i32 @clock_control_on.137(%struct.device* noundef %15, i8* noundef %18) #25, !dbg !10490
  call void @llvm.dbg.value(metadata i32 %19, metadata !10472, metadata !DIExpression()), !dbg !10473
  %20 = icmp eq i32 %19, 0, !dbg !10491
  br i1 %20, label %24, label %21, !dbg !10493

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #25, !dbg !10494
  %23 = zext i8 %22 to i32, !dbg !10494
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.138, i32 0, i32 0), i32 noundef %23) #24, !dbg !10494
  br label %62, !dbg !10500

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10501
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10501
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #25, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %27, metadata !10472, metadata !DIExpression()), !dbg !10473
  %28 = icmp slt i32 %27, 0, !dbg !10503
  br i1 %28, label %62, label %29, !dbg !10505

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10506
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10506
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #25, !dbg !10507
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10508
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #25, !dbg !10509
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10510
  %34 = load i32, i32* %33, align 4, !dbg !10510
  %35 = icmp ult i32 %34, 3, !dbg !10512
  br i1 %35, label %39, label %36, !dbg !10512

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 2) #25, !dbg !10513
  %38 = zext i8 %37 to i32, !dbg !10513
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.139, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #24, !dbg !10513
  call void @llvm.dbg.value(metadata i32 0, metadata !10470, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32 0, metadata !10471, metadata !DIExpression()), !dbg !10473
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10512
  %41 = load i32, i32* %40, align 4, !dbg !10512
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10512
  %43 = load i32, i32* %42, align 4, !dbg !10512
  br label %44, !dbg !10512

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10522
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10522
  call void @llvm.dbg.value(metadata i32 %46, metadata !10471, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32 %45, metadata !10470, metadata !DIExpression()), !dbg !10473
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10523
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #25, !dbg !10524
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10525
  %49 = load i8, i8* %48, align 4, !dbg !10525, !range !6638
  %50 = icmp eq i8 %49, 0, !dbg !10525
  br i1 %50, label %52, label %51, !dbg !10527

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !10528
  br label %52, !dbg !10530

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10531
  %54 = load i32, i32* %53, align 4, !dbg !10531
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #25, !dbg !10532
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10533
  %56 = load i8, i8* %55, align 4, !dbg !10533, !range !6638
  %57 = icmp eq i8 %56, 0, !dbg !10533
  br i1 %57, label %60, label %58, !dbg !10535

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10536
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #25, !dbg !10538
  br label %60, !dbg !10539

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10540
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #25, !dbg !10541
  br label %62, !dbg !10542

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10473
  ret i32 %63, !dbg !10543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !10544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10548, metadata !DIExpression()), !dbg !10552
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10553
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10553
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10553
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10549, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10550, metadata !DIExpression()), !dbg !10552
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10554
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10555
  ret void, !dbg !10556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %0) unnamed_addr #1 !dbg !10557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10561, metadata !DIExpression()), !dbg !10562
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10563, !srcloc !10565
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) #25, !dbg !10566
  ret i1 %2, !dbg !10567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.137(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10568 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10570, metadata !DIExpression()), !dbg !10573
  call void @llvm.dbg.value(metadata i8* %1, metadata !10571, metadata !DIExpression()), !dbg !10573
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10574
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10574
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10574
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10572, metadata !DIExpression()), !dbg !10573
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10575
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10575
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !10576
  ret i32 %8, !dbg !10577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10578 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10582, metadata !DIExpression()), !dbg !10586
  call void @llvm.dbg.value(metadata i8 0, metadata !10583, metadata !DIExpression()), !dbg !10586
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10587
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10587
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10585, metadata !DIExpression(DW_OP_deref)), !dbg !10586
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %4, metadata !10584, metadata !DIExpression()), !dbg !10586
  %5 = icmp slt i32 %4, 0, !dbg !10589
  br i1 %5, label %9, label %6, !dbg !10591

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10592
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10585, metadata !DIExpression()), !dbg !10586
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10593
  br label %9, !dbg !10594

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10586
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10595
  ret i32 %10, !dbg !10595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10596 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10598, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata i32 12, metadata !10599, metadata !DIExpression()), !dbg !10602
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10603

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10604, metadata !DIExpression()) #23, !dbg !10610
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10613, !srcloc !10614
  call void @llvm.dbg.value(metadata i32 %4, metadata !10609, metadata !DIExpression()) #23, !dbg !10610
  %5 = or i32 %4, 12, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %5, metadata !10600, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.value(metadata i32 %5, metadata !10617, metadata !DIExpression()) #23, !dbg !10624
  call void @llvm.dbg.value(metadata i32* %2, metadata !10622, metadata !DIExpression()) #23, !dbg !10624
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10626, !srcloc !10627
  call void @llvm.dbg.value(metadata i32 %6, metadata !10623, metadata !DIExpression()) #23, !dbg !10624
  %7 = icmp eq i32 %6, 0, !dbg !10603
  br i1 %7, label %8, label %3, !dbg !10615, !llvm.loop !10628

8:                                                ; preds = %3
  ret void, !dbg !10629
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10630 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10632, metadata !DIExpression()), !dbg !10636
  call void @llvm.dbg.value(metadata i32 %1, metadata !10633, metadata !DIExpression()), !dbg !10636
  call void @llvm.dbg.value(metadata i32 %2, metadata !10634, metadata !DIExpression()), !dbg !10636
  call void @llvm.dbg.value(metadata i32 0, metadata !10635, metadata !DIExpression()), !dbg !10636
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10637
  %5 = load volatile i32, i32* %4, align 4, !dbg !10637
  %6 = and i32 %5, -5633, !dbg !10637
  %7 = or i32 %2, %1, !dbg !10637
  %8 = or i32 %7, %6, !dbg !10637
  store volatile i32 %8, i32* %4, align 4, !dbg !10637
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10638
  %10 = load volatile i32, i32* %9, align 4, !dbg !10638
  %11 = and i32 %10, -12289, !dbg !10638
  store volatile i32 %11, i32* %9, align 4, !dbg !10638
  ret void, !dbg !10639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10640 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10644
  %3 = load volatile i32, i32* %2, align 4, !dbg !10644
  %4 = or i32 %3, 8, !dbg !10644
  store volatile i32 %4, i32* %2, align 4, !dbg !10644
  ret void, !dbg !10645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10646 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10650, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10651, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i32 0, metadata !10652, metadata !DIExpression()), !dbg !10653
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10654
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10654
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10655
  %5 = load i8, i8* %4, align 4, !dbg !10655
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10656
  ret i32 %6, !dbg !10657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) unnamed_addr #1 !dbg !10658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10660, metadata !DIExpression()), !dbg !10661
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !10662
  ret i1 %2, !dbg !10663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10666, metadata !DIExpression()), !dbg !10667
  tail call fastcc void @__NVIC_SetPriority.142() #25, !dbg !10668
  store i32 8399, i32* @last_load, align 4, !dbg !10669
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10670
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10671
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10672
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10673
  %3 = or i32 %2, 7, !dbg !10673
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10673
  ret i32 0, !dbg !10674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.142() unnamed_addr #15 !dbg !10675 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10677, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata i32 1, metadata !10678, metadata !DIExpression()), !dbg !10679
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10680
  ret void, !dbg !10683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10684 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10686, metadata !DIExpression()), !dbg !10688
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10689
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10690
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10691
  %5 = add i32 %4, %3, !dbg !10691
  store i32 %5, i32* @cycle_count, align 4, !dbg !10691
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10692
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10693
  %7 = sub i32 %5, %6, !dbg !10696
  %8 = udiv i32 %7, 8400, !dbg !10697
  call void @llvm.dbg.value(metadata i32 %8, metadata !10687, metadata !DIExpression()), !dbg !10688
  %9 = mul nuw i32 %8, 8400, !dbg !10698
  %10 = add i32 %9, %6, !dbg !10699
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10699
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10700
  tail call void @z_arm_int_exit() #24, !dbg !10701
  ret void, !dbg !10702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10703 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10708
  call void @llvm.dbg.value(metadata i32 %1, metadata !10705, metadata !DIExpression()), !dbg !10709
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %2, metadata !10706, metadata !DIExpression()), !dbg !10709
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %3, metadata !10707, metadata !DIExpression()), !dbg !10709
  %4 = and i32 %2, 65536, !dbg !10712
  %5 = icmp ne i32 %4, 0, !dbg !10712
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10714
  %8 = load i32, i32* @last_load, align 4, !dbg !10709
  br i1 %7, label %9, label %13, !dbg !10714

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10715
  %11 = add i32 %10, %8, !dbg !10715
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10715
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10717
  br label %13, !dbg !10718

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10719
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10720
  %16 = add i32 %14, %15, !dbg !10721
  ret i32 %16, !dbg !10722
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10727, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i1 %1, metadata !10728, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10740
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10741
  br i1 %4, label %5, label %8, !dbg !10741

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10743
  %7 = and i32 %6, -2, !dbg !10743
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10743
  store i32 -16777216, i32* @last_load, align 4, !dbg !10745
  br label %60, !dbg !10746

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10747
  call void @llvm.dbg.value(metadata i32 %9, metadata !10732, metadata !DIExpression()), !dbg !10740
  br i1 %3, label %18, label %10, !dbg !10748

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10748
  call void @llvm.dbg.value(metadata i32 undef, metadata !10727, metadata !DIExpression()), !dbg !10740
  %12 = icmp slt i32 %11, 1, !dbg !10749
  br i1 %12, label %18, label %13, !dbg !10749

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10749
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10749
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10749
  %17 = add nuw nsw i32 %16, 8399, !dbg !10749
  br label %18, !dbg !10749

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10727, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10750, metadata !DIExpression()) #23, !dbg !10757
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10759, !srcloc !10765
  call void @llvm.dbg.value(metadata i32 undef, metadata !10762, metadata !DIExpression()) #23, !dbg !10766
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10766
  call void @llvm.dbg.value(metadata i32 undef, metadata !10756, metadata !DIExpression()) #23, !dbg !10757
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10767
  br i1 %21, label %23, label %22, !dbg !10770

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10771
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10771
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10771
  unreachable, !dbg !10771

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %24, metadata !10762, metadata !DIExpression()) #23, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %24, metadata !10756, metadata !DIExpression()) #23, !dbg !10757
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %24, metadata !10733, metadata !DIExpression()), !dbg !10740
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !10774
  call void @llvm.dbg.value(metadata i32 %25, metadata !10738, metadata !DIExpression()), !dbg !10740
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10775
  call void @llvm.dbg.value(metadata i32 %26, metadata !10730, metadata !DIExpression()), !dbg !10740
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10776
  %28 = add i32 %27, %25, !dbg !10776
  store i32 %28, i32* @cycle_count, align 4, !dbg !10776
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10777
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10778
  %30 = sub i32 %28, %29, !dbg !10779
  call void @llvm.dbg.value(metadata i32 %30, metadata !10739, metadata !DIExpression()), !dbg !10740
  %31 = icmp slt i32 %30, 0, !dbg !10780
  br i1 %31, label %41, label %32, !dbg !10782

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10729, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i32 undef, metadata !10729, metadata !DIExpression()), !dbg !10740
  %33 = add nuw i32 %19, %30, !dbg !10783
  %34 = urem i32 %33, 8400, !dbg !10785
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10729, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10740
  %35 = sub nuw nsw i32 %19, %34, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %35, metadata !10729, metadata !DIExpression()), !dbg !10740
  %36 = icmp ugt i32 %35, 1024, !dbg !10787
  br i1 %36, label %37, label %39, !dbg !10787

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10729, metadata !DIExpression()), !dbg !10740
  %38 = icmp ugt i32 %35, 16766400, !dbg !10788
  br i1 %38, label %41, label %39, !dbg !10790

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10791
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10792
  call void @llvm.dbg.value(metadata i32 %43, metadata !10731, metadata !DIExpression()), !dbg !10740
  %44 = add nsw i32 %42, -1, !dbg !10793
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10794
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10795
  %45 = icmp ult i32 %26, %43, !dbg !10796
  br i1 %45, label %46, label %51, !dbg !10798

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10799
  %48 = add i32 %26, %9, !dbg !10801
  %49 = sub i32 %48, %43, !dbg !10802
  %50 = add i32 %49, %47, !dbg !10799
  br label %55, !dbg !10803

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10804
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10806
  %54 = add i32 %52, %53, !dbg !10806
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10807
  store i32 %56, i32* @cycle_count, align 4, !dbg !10807
  call void @llvm.dbg.value(metadata i32 undef, metadata !10808, metadata !DIExpression()) #23, !dbg !10814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10813, metadata !DIExpression()) #23, !dbg !10814
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10816
  br i1 %57, label %59, label %58, !dbg !10819

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10820
  unreachable, !dbg !10820

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10808, metadata !DIExpression()) #23, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %24, metadata !10822, metadata !DIExpression()) #23, !dbg !10825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10827, !srcloc !10828
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10830 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10750, metadata !DIExpression()) #23, !dbg !10834
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10836, !srcloc !10765
  call void @llvm.dbg.value(metadata i32 undef, metadata !10762, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10756, metadata !DIExpression()) #23, !dbg !10834
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10839
  br i1 %2, label %4, label %3, !dbg !10840

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10841
  unreachable, !dbg !10841

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10762, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10756, metadata !DIExpression()) #23, !dbg !10834
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10842
  call void @llvm.dbg.value(metadata i32 undef, metadata !10832, metadata !DIExpression()), !dbg !10843
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10844
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10845
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10846
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10843
  call void @llvm.dbg.value(metadata i32 undef, metadata !10808, metadata !DIExpression()) #23, !dbg !10847
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10813, metadata !DIExpression()) #23, !dbg !10847
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10849
  br i1 %8, label %10, label %9, !dbg !10850

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10851
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10851
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10851
  unreachable, !dbg !10851

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10852
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10843
  %12 = sub i32 %11, %7, !dbg !10853
  call void @llvm.dbg.value(metadata i32 %12, metadata !10833, metadata !DIExpression()), !dbg !10843
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %13, metadata !10762, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 %13, metadata !10756, metadata !DIExpression()) #23, !dbg !10834
  call void @llvm.dbg.value(metadata i32 %13, metadata !10832, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata i32 undef, metadata !10808, metadata !DIExpression()) #23, !dbg !10847
  call void @llvm.dbg.value(metadata i32 undef, metadata !10822, metadata !DIExpression()) #23, !dbg !10854
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10856, !srcloc !10828
  %14 = udiv i32 %12, 8400, !dbg !10857
  ret i32 %14, !dbg !10858
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10859 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10750, metadata !DIExpression()) #23, !dbg !10863
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10865, !srcloc !10765
  call void @llvm.dbg.value(metadata i32 undef, metadata !10762, metadata !DIExpression()) #23, !dbg !10867
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10867
  call void @llvm.dbg.value(metadata i32 undef, metadata !10756, metadata !DIExpression()) #23, !dbg !10863
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10868
  br i1 %2, label %4, label %3, !dbg !10869

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #24, !dbg !10870
  unreachable, !dbg !10870

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10762, metadata !DIExpression()) #23, !dbg !10867
  call void @llvm.dbg.value(metadata i32 undef, metadata !10756, metadata !DIExpression()) #23, !dbg !10863
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10871
  call void @llvm.dbg.value(metadata i32 undef, metadata !10861, metadata !DIExpression()), !dbg !10872
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10873
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10874
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10862, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10872
  call void @llvm.dbg.value(metadata i32 undef, metadata !10808, metadata !DIExpression()) #23, !dbg !10875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10813, metadata !DIExpression()) #23, !dbg !10875
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10877
  br i1 %7, label %9, label %8, !dbg !10878

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #24, !dbg !10879
  unreachable, !dbg !10879

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10880
  call void @llvm.dbg.value(metadata i32 %10, metadata !10862, metadata !DIExpression()), !dbg !10872
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %11, metadata !10762, metadata !DIExpression()) #23, !dbg !10867
  call void @llvm.dbg.value(metadata i32 %11, metadata !10756, metadata !DIExpression()) #23, !dbg !10863
  call void @llvm.dbg.value(metadata i32 %11, metadata !10861, metadata !DIExpression()), !dbg !10872
  call void @llvm.dbg.value(metadata i32 undef, metadata !10808, metadata !DIExpression()) #23, !dbg !10875
  call void @llvm.dbg.value(metadata i32 undef, metadata !10822, metadata !DIExpression()) #23, !dbg !10881
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10883, !srcloc !10828
  ret i32 %10, !dbg !10884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10885 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10886
  %2 = icmp eq i32 %1, -16777216, !dbg !10888
  br i1 %2, label %3, label %6, !dbg !10889

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10890
  %5 = or i32 %4, 1, !dbg !10890
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10890
  br label %6, !dbg !10892

6:                                                ; preds = %3, %0
  ret void, !dbg !10893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10894 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10895
  %2 = and i32 %1, -2, !dbg !10895
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10895
  ret void, !dbg !10896
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10897 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10923, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata i8 %1, metadata !10924, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10925, metadata !DIExpression()), !dbg !10926
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10927
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10927
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10926
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10928
  %8 = load i8, i8* %6, align 4, !dbg !10929
  %9 = zext i8 %8 to i32, !dbg !10930
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10930
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10931
  br i1 %11, label %18, label %24, !dbg !10932

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10926
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10928
  %14 = load i8, i8* %6, align 4, !dbg !10929
  %15 = zext i8 %14 to i32, !dbg !10930
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10930
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10931
  br i1 %17, label %18, label %24, !dbg !10932, !llvm.loop !10933

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10935
  %21 = load i8, i8* %20, align 1, !dbg !10935
  %22 = icmp eq i8 %21, %1, !dbg !10938
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10939
  br i1 %22, label %24, label %12, !dbg !10940

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10926
  ret i32 %25, !dbg !10941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10942 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10953, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i8 %1, metadata !10954, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i32 %2, metadata !10955, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i32 0, metadata !10958, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i32 0, metadata !10959, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i8 0, metadata !10960, metadata !DIExpression()), !dbg !10970
  %4 = icmp eq i8 %1, 0, !dbg !10971
  br i1 %4, label %35, label %5, !dbg !10972

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10971
  br label %9, !dbg !10972

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10960, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %29, metadata !10958, metadata !DIExpression()), !dbg !10969
  %8 = icmp eq i32 %34, %6, !dbg !10971
  br i1 %8, label %35, label %9, !dbg !10972, !llvm.loop !10973

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10960, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.value(metadata i32 %11, metadata !10958, metadata !DIExpression()), !dbg !10969
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10975
  %13 = load i32, i32* %12, align 4, !dbg !10975
  call void @llvm.dbg.value(metadata i32 %13, metadata !10957, metadata !DIExpression()), !dbg !10969
  %14 = and i32 %13, 31, !dbg !10976
  %15 = icmp ult i32 %14, 16, !dbg !10977
  br i1 %15, label %16, label %20, !dbg !10978

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10979
  %18 = load i32, i32* %17, align 4, !dbg !10979
  %19 = or i32 %18, 32, !dbg !10981
  call void @llvm.dbg.value(metadata i32 %19, metadata !10958, metadata !DIExpression()), !dbg !10969
  br label %28, !dbg !10982

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10983

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10984
  %23 = load i32, i32* %22, align 4, !dbg !10984
  call void @llvm.dbg.value(metadata i32 %23, metadata !10962, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10985
  %24 = lshr i32 %23, 7, !dbg !10986
  %25 = and i32 %24, 16, !dbg !10986
  %26 = or i32 %25, %23, !dbg !10986
  call void @llvm.dbg.value(metadata i32 %26, metadata !10958, metadata !DIExpression()), !dbg !10969
  br label %28, !dbg !10987

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10969
  call void @llvm.dbg.value(metadata i32 %29, metadata !10958, metadata !DIExpression()), !dbg !10969
  %30 = lshr i32 %13, 5, !dbg !10988
  %31 = and i32 %30, 255, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %31, metadata !10956, metadata !DIExpression()), !dbg !10969
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !10989
  call void @llvm.dbg.value(metadata i32 %32, metadata !10959, metadata !DIExpression()), !dbg !10969
  %33 = icmp slt i32 %32, 0, !dbg !10990
  %34 = add nuw nsw i32 %10, 1, !dbg !10992
  call void @llvm.dbg.value(metadata i32 %34, metadata !10960, metadata !DIExpression()), !dbg !10970
  br i1 %33, label %35, label %7, !dbg !10993

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10999, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 %1, metadata !11000, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 %2, metadata !11001, metadata !DIExpression()), !dbg !11003
  %4 = icmp ugt i32 %0, 175, !dbg !11004
  br i1 %4, label %16, label %5, !dbg !11006

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11007
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11008
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11008
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11002, metadata !DIExpression()), !dbg !11003
  %9 = add nsw i32 %6, -8, !dbg !11009
  %10 = icmp ult i32 %9, 3, !dbg !11009
  br i1 %10, label %16, label %11, !dbg !11011

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.155(%struct.device* noundef %8) #25, !dbg !11012
  br i1 %12, label %13, label %16, !dbg !11013

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11014
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !11015
  br label %16, !dbg !11016

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11003
  ret i32 %17, !dbg !11017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155(%struct.device* noundef %0) unnamed_addr #1 !dbg !11018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11022, metadata !DIExpression()), !dbg !11023
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11024, !srcloc !11026
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156(%struct.device* noundef %0) #25, !dbg !11027
  ret i1 %2, !dbg !11028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156(%struct.device* noundef %0) unnamed_addr #1 !dbg !11029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11031, metadata !DIExpression()), !dbg !11032
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !11033
  ret i1 %2, !dbg !11034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #6 !dbg !11035 {
  ret void, !dbg !11036
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !11037 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11039, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 0, metadata !11040, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 2, metadata !11041, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 0, metadata !11042, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 2, metadata !11043, metadata !DIExpression()), !dbg !11044
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11045
  %2 = and i32 %1, 12, !dbg !11046
  call void @llvm.dbg.value(metadata i32 %2, metadata !11039, metadata !DIExpression()), !dbg !11044
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11047

3:                                                ; preds = %0
  br label %21, !dbg !11048

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %5, metadata !11042, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11044
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11051
  %7 = and i32 %6, 63, !dbg !11052
  call void @llvm.dbg.value(metadata i32 %7, metadata !11043, metadata !DIExpression()), !dbg !11044
  %8 = and i32 %5, 4194304, !dbg !11053
  %9 = icmp eq i32 %8, 0, !dbg !11053
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !11055
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11055
  %13 = lshr i32 %12, 6, !dbg !11055
  %14 = and i32 %13, 511, !dbg !11055
  %15 = mul i32 %14, %11, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %15, metadata !11040, metadata !DIExpression()), !dbg !11044
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11056
  %17 = lshr i32 %16, 15, !dbg !11057
  %18 = and i32 %17, 6, !dbg !11057
  %19 = add nuw nsw i32 %18, 2, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %19, metadata !11041, metadata !DIExpression()), !dbg !11044
  %20 = udiv i32 %15, %19, !dbg !11058
  br label %21, !dbg !11059

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11060
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11061
  %24 = lshr i32 %23, 4, !dbg !11062
  %25 = and i32 %24, 15, !dbg !11062
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11063
  %27 = load i8, i8* %26, align 1, !dbg !11063
  %28 = zext i8 %27 to i32, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %28, metadata !11039, metadata !DIExpression()), !dbg !11044
  %29 = lshr i32 %22, %28, !dbg !11064
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11064
  ret void, !dbg !11065
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11066 {
  ret i32 0, !dbg !11071
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11072 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11098, metadata !DIExpression()), !dbg !11109
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11110
  br i1 %3, label %311, label %4, !dbg !11112

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11113
  %6 = load i32, i32* %5, align 4, !dbg !11113
  %7 = and i32 %6, 1, !dbg !11115
  %8 = icmp eq i32 %7, 0, !dbg !11116
  br i1 %8, label %66, label %9, !dbg !11117

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11118
  %11 = and i32 %10, 12, !dbg !11118
  %12 = icmp eq i32 %11, 4, !dbg !11121
  br i1 %12, label %21, label %13, !dbg !11122

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11123
  %15 = and i32 %14, 12, !dbg !11123
  %16 = icmp eq i32 %15, 8, !dbg !11124
  br i1 %16, label %17, label %29, !dbg !11125

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11126
  %19 = and i32 %18, 4194304, !dbg !11127
  %20 = icmp eq i32 %19, 0, !dbg !11128
  br i1 %20, label %29, label %21, !dbg !11129

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11130
  %23 = and i32 %22, 131072, !dbg !11130
  %24 = icmp eq i32 %23, 0, !dbg !11130
  br i1 %24, label %66, label %25, !dbg !11133

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11134
  %27 = load i32, i32* %26, align 4, !dbg !11134
  %28 = icmp eq i32 %27, 0, !dbg !11135
  br i1 %28, label %311, label %66, !dbg !11136

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11137
  %31 = load i32, i32* %30, align 4, !dbg !11137
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11141

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11142
  %34 = or i32 %33, 65536, !dbg !11142
  br label %45, !dbg !11142

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11144
  %37 = or i32 %36, 262144, !dbg !11144
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11144
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11144
  %39 = or i32 %38, 65536, !dbg !11144
  br label %45, !dbg !11144

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11147
  %42 = and i32 %41, -65537, !dbg !11147
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11147
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11147
  %44 = and i32 %43, -262145, !dbg !11147
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11149
  %47 = load i32, i32* %30, align 4, !dbg !11150
  %48 = icmp eq i32 %47, 0, !dbg !11152
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !11153
  call void @llvm.dbg.value(metadata i32 %49, metadata !11099, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i32 %49, metadata !11099, metadata !DIExpression()), !dbg !11109
  br i1 %48, label %58, label %50, !dbg !11154

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11155
  %52 = and i32 %51, 131072, !dbg !11157
  %53 = icmp eq i32 %52, 0, !dbg !11157
  br i1 %53, label %54, label %66, !dbg !11158

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !11159
  %56 = sub i32 %55, %49, !dbg !11162
  %57 = icmp ugt i32 %56, 100, !dbg !11163
  br i1 %57, label %311, label %50, !dbg !11164, !llvm.loop !11165

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11167
  %60 = and i32 %59, 131072, !dbg !11167
  %61 = icmp eq i32 %60, 0, !dbg !11167
  br i1 %61, label %66, label %62, !dbg !11169

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !11170
  %64 = sub i32 %63, %49, !dbg !11173
  %65 = icmp ugt i32 %64, 100, !dbg !11174
  br i1 %65, label %311, label %58, !dbg !11175, !llvm.loop !11176

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11178
  %68 = and i32 %67, 2, !dbg !11180
  %69 = icmp eq i32 %68, 0, !dbg !11181
  br i1 %69, label %121, label %70, !dbg !11182

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11183
  %72 = and i32 %71, 12, !dbg !11183
  %73 = icmp eq i32 %72, 0, !dbg !11186
  br i1 %73, label %82, label %74, !dbg !11187

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11188
  %76 = and i32 %75, 12, !dbg !11188
  %77 = icmp eq i32 %76, 8, !dbg !11189
  br i1 %77, label %78, label %90, !dbg !11190

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11191
  %80 = and i32 %79, 4194304, !dbg !11192
  %81 = icmp eq i32 %80, 0, !dbg !11193
  br i1 %81, label %82, label %90, !dbg !11194

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11195
  %84 = and i32 %83, 2, !dbg !11195
  %85 = icmp eq i32 %84, 0, !dbg !11195
  br i1 %85, label %114, label %86, !dbg !11198

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11199
  %88 = load i32, i32* %87, align 4, !dbg !11199
  %89 = icmp eq i32 %88, 1, !dbg !11200
  br i1 %89, label %114, label %311, !dbg !11201

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11202
  %92 = load i32, i32* %91, align 4, !dbg !11202
  %93 = icmp eq i32 %92, 0, !dbg !11205
  br i1 %93, label %104, label %94, !dbg !11206

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11207
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !11209
  call void @llvm.dbg.value(metadata i32 %95, metadata !11099, metadata !DIExpression()), !dbg !11109
  br label %96, !dbg !11210

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11211
  %98 = and i32 %97, 2, !dbg !11212
  %99 = icmp eq i32 %98, 0, !dbg !11212
  br i1 %99, label %100, label %114, !dbg !11210

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !11213
  %102 = sub i32 %101, %95, !dbg !11216
  %103 = icmp ugt i32 %102, 2, !dbg !11217
  br i1 %103, label %311, label %96, !dbg !11218, !llvm.loop !11219

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11221
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %105, metadata !11099, metadata !DIExpression()), !dbg !11109
  br label %106, !dbg !11224

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11225
  %108 = and i32 %107, 2, !dbg !11225
  %109 = icmp eq i32 %108, 0, !dbg !11225
  br i1 %109, label %121, label %110, !dbg !11224

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !11226
  %112 = sub i32 %111, %105, !dbg !11229
  %113 = icmp ugt i32 %112, 2, !dbg !11230
  br i1 %113, label %311, label %106, !dbg !11231, !llvm.loop !11232

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11234
  %116 = and i32 %115, -249, !dbg !11234
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11234
  %118 = load i32, i32* %117, align 4, !dbg !11234
  %119 = shl i32 %118, 3, !dbg !11234
  %120 = or i32 %119, %116, !dbg !11234
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11234
  br label %121, !dbg !11235

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11235
  %123 = and i32 %122, 8, !dbg !11237
  %124 = icmp eq i32 %123, 0, !dbg !11238
  br i1 %124, label %149, label %125, !dbg !11239

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11240
  %127 = load i32, i32* %126, align 4, !dbg !11240
  %128 = icmp eq i32 %127, 0, !dbg !11243
  br i1 %128, label %139, label %129, !dbg !11244

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11245
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !11247
  call void @llvm.dbg.value(metadata i32 %130, metadata !11099, metadata !DIExpression()), !dbg !11109
  br label %131, !dbg !11248

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11249
  %133 = and i32 %132, 2, !dbg !11250
  %134 = icmp eq i32 %133, 0, !dbg !11250
  br i1 %134, label %135, label %149, !dbg !11248

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !11251
  %137 = sub i32 %136, %130, !dbg !11254
  %138 = icmp ugt i32 %137, 2, !dbg !11255
  br i1 %138, label %311, label %131, !dbg !11256, !llvm.loop !11257

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11259
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !11261
  call void @llvm.dbg.value(metadata i32 %140, metadata !11099, metadata !DIExpression()), !dbg !11109
  br label %141, !dbg !11262

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11263
  %143 = and i32 %142, 2, !dbg !11263
  %144 = icmp eq i32 %143, 0, !dbg !11263
  br i1 %144, label %149, label %145, !dbg !11262

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !11264
  %147 = sub i32 %146, %140, !dbg !11267
  %148 = icmp ugt i32 %147, 2, !dbg !11268
  br i1 %148, label %311, label %141, !dbg !11269, !llvm.loop !11270

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11272
  %151 = and i32 %150, 4, !dbg !11273
  %152 = icmp eq i32 %151, 0, !dbg !11274
  br i1 %152, label %221, label %153, !dbg !11275

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11101, metadata !DIExpression()), !dbg !11276
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11277
  %155 = and i32 %154, 268435456, !dbg !11277
  %156 = icmp eq i32 %155, 0, !dbg !11277
  br i1 %156, label %157, label %164, !dbg !11278

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11279
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11279
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11105, metadata !DIExpression()), !dbg !11279
  store volatile i32 0, i32* %2, align 4, !dbg !11279
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11279
  %160 = or i32 %159, 268435456, !dbg !11279
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11279
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11279
  %162 = and i32 %161, 268435456, !dbg !11279
  store volatile i32 %162, i32* %2, align 4, !dbg !11279
  %163 = load volatile i32, i32* %2, align 4, !dbg !11279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11280
  call void @llvm.dbg.value(metadata i32 1, metadata !11101, metadata !DIExpression()), !dbg !11276
  br label %164, !dbg !11281

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11101, metadata !DIExpression()), !dbg !11276
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11282
  %166 = and i32 %165, 256, !dbg !11282
  %167 = icmp eq i32 %166, 0, !dbg !11282
  br i1 %167, label %168, label %180, !dbg !11284

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11285
  %170 = or i32 %169, 256, !dbg !11285
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11285
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !11287
  call void @llvm.dbg.value(metadata i32 %171, metadata !11099, metadata !DIExpression()), !dbg !11109
  br label %172, !dbg !11288

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11289
  %174 = and i32 %173, 256, !dbg !11289
  %175 = icmp eq i32 %174, 0, !dbg !11289
  br i1 %175, label %176, label %180, !dbg !11288

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !11290
  %178 = sub i32 %177, %171, !dbg !11293
  %179 = icmp ugt i32 %178, 2, !dbg !11294
  br i1 %179, label %311, label %172, !dbg !11295, !llvm.loop !11296

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11298
  %182 = load i32, i32* %181, align 4, !dbg !11298
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11301

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11302
  %185 = or i32 %184, 1, !dbg !11302
  br label %196, !dbg !11302

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11304
  %188 = or i32 %187, 4, !dbg !11304
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11304
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11304
  %190 = or i32 %189, 1, !dbg !11304
  br label %196, !dbg !11304

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11307
  %193 = and i32 %192, -2, !dbg !11307
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11307
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11307
  %195 = and i32 %194, -5, !dbg !11307
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11309
  %198 = load i32, i32* %181, align 4, !dbg !11310
  %199 = icmp eq i32 %198, 0, !dbg !11312
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !11313
  call void @llvm.dbg.value(metadata i32 %200, metadata !11099, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i32 %200, metadata !11099, metadata !DIExpression()), !dbg !11109
  br i1 %199, label %209, label %201, !dbg !11314

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11315
  %203 = and i32 %202, 2, !dbg !11317
  %204 = icmp eq i32 %203, 0, !dbg !11317
  br i1 %204, label %205, label %217, !dbg !11318

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !11319
  %207 = sub i32 %206, %200, !dbg !11322
  %208 = icmp ugt i32 %207, 5000, !dbg !11323
  br i1 %208, label %311, label %201, !dbg !11324, !llvm.loop !11325

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11327
  %211 = and i32 %210, 2, !dbg !11327
  %212 = icmp eq i32 %211, 0, !dbg !11327
  br i1 %212, label %217, label %213, !dbg !11329

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !11330
  %215 = sub i32 %214, %200, !dbg !11333
  %216 = icmp ugt i32 %215, 5000, !dbg !11334
  br i1 %216, label %311, label %209, !dbg !11335, !llvm.loop !11336

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11338

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11339
  %220 = and i32 %219, -268435457, !dbg !11339
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11339
  br label %221, !dbg !11342

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11343
  %223 = load i32, i32* %222, align 4, !dbg !11343
  %224 = icmp eq i32 %223, 0, !dbg !11345
  br i1 %224, label %310, label %225, !dbg !11346

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11347
  %227 = and i32 %226, 12, !dbg !11347
  %228 = icmp eq i32 %227, 8, !dbg !11350
  br i1 %228, label %277, label %229, !dbg !11351

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11352
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11355
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !11355
  call void @llvm.dbg.value(metadata i32 %231, metadata !11099, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i32 %231, metadata !11099, metadata !DIExpression()), !dbg !11109
  br i1 %230, label %232, label %269, !dbg !11356

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11357
  %234 = and i32 %233, 33554432, !dbg !11357
  %235 = icmp eq i32 %234, 0, !dbg !11357
  br i1 %235, label %240, label %236, !dbg !11359

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !11360
  %238 = sub i32 %237, %231, !dbg !11363
  %239 = icmp ugt i32 %238, 2, !dbg !11364
  br i1 %239, label %311, label %232, !dbg !11365, !llvm.loop !11366

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11368
  %242 = load i32, i32* %241, align 4, !dbg !11368
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11368
  %244 = load i32, i32* %243, align 4, !dbg !11368
  %245 = or i32 %244, %242, !dbg !11368
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11368
  %247 = load i32, i32* %246, align 4, !dbg !11368
  %248 = shl i32 %247, 6, !dbg !11368
  %249 = or i32 %245, %248, !dbg !11368
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11368
  %251 = load i32, i32* %250, align 4, !dbg !11368
  %252 = shl i32 %251, 15, !dbg !11368
  %253 = add i32 %252, -65536, !dbg !11368
  %254 = and i32 %253, -65536, !dbg !11368
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11368
  %256 = load i32, i32* %255, align 4, !dbg !11368
  %257 = shl i32 %256, 24, !dbg !11368
  %258 = or i32 %249, %257, !dbg !11368
  %259 = or i32 %258, %254, !dbg !11368
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11368
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11369
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !11370
  call void @llvm.dbg.value(metadata i32 %260, metadata !11099, metadata !DIExpression()), !dbg !11109
  br label %261, !dbg !11371

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11372
  %263 = and i32 %262, 33554432, !dbg !11373
  %264 = icmp eq i32 %263, 0, !dbg !11373
  br i1 %264, label %265, label %310, !dbg !11371

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !11374
  %267 = sub i32 %266, %260, !dbg !11377
  %268 = icmp ugt i32 %267, 2, !dbg !11378
  br i1 %268, label %311, label %261, !dbg !11379, !llvm.loop !11380

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11382
  %271 = and i32 %270, 33554432, !dbg !11382
  %272 = icmp eq i32 %271, 0, !dbg !11382
  br i1 %272, label %310, label %273, !dbg !11384

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !11385
  %275 = sub i32 %274, %231, !dbg !11388
  %276 = icmp ugt i32 %275, 2, !dbg !11389
  br i1 %276, label %311, label %269, !dbg !11390, !llvm.loop !11391

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11393
  br i1 %278, label %311, label %279, !dbg !11396

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %280, metadata !11100, metadata !DIExpression()), !dbg !11109
  %281 = and i32 %280, 4194304, !dbg !11399
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11401
  %283 = load i32, i32* %282, align 4, !dbg !11401
  %284 = icmp eq i32 %281, %283, !dbg !11402
  br i1 %284, label %285, label %311, !dbg !11403

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11404
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11405
  %288 = load i32, i32* %287, align 4, !dbg !11405
  %289 = icmp eq i32 %286, %288, !dbg !11406
  br i1 %289, label %290, label %311, !dbg !11407

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11408
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11409
  %293 = load i32, i32* %292, align 4, !dbg !11409
  %294 = shl i32 %293, 6, !dbg !11410
  %295 = icmp eq i32 %291, %294, !dbg !11411
  br i1 %295, label %296, label %311, !dbg !11412

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11413
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11414
  %299 = load i32, i32* %298, align 4, !dbg !11414
  %300 = shl i32 %299, 15, !dbg !11415
  %301 = add i32 %300, -65536, !dbg !11415
  %302 = and i32 %301, -65536, !dbg !11415
  %303 = icmp eq i32 %297, %302, !dbg !11416
  br i1 %303, label %304, label %311, !dbg !11417

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11418
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11419
  %307 = load i32, i32* %306, align 4, !dbg !11419
  %308 = shl i32 %307, 24, !dbg !11420
  %309 = icmp eq i32 %305, %308, !dbg !11421
  br i1 %309, label %310, label %311, !dbg !11422

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11423

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11109
  ret i32 %312, !dbg !11424
}

; Function Attrs: optsize
declare !dbg !11425 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11427 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11440, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.value(metadata i32 %1, metadata !11441, metadata !DIExpression()), !dbg !11443
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11444
  br i1 %3, label %115, label %4, !dbg !11446

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11447
  %6 = and i32 %5, 7, !dbg !11447
  %7 = icmp ult i32 %6, %1, !dbg !11449
  br i1 %7, label %8, label %13, !dbg !11450

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11451
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11451
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11453
  %11 = and i32 %10, 7, !dbg !11453
  %12 = icmp eq i32 %11, %1, !dbg !11455
  br i1 %12, label %13, label %115, !dbg !11456

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11457
  %15 = load i32, i32* %14, align 4, !dbg !11457
  %16 = and i32 %15, 2, !dbg !11459
  %17 = icmp eq i32 %16, 0, !dbg !11460
  br i1 %17, label %39, label %18, !dbg !11461

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11462
  %20 = icmp eq i32 %19, 0, !dbg !11465
  br i1 %20, label %25, label %21, !dbg !11466

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11467
  %23 = or i32 %22, 7168, !dbg !11467
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11467
  %24 = load i32, i32* %14, align 4, !dbg !11469
  br label %25, !dbg !11471

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11469
  %27 = and i32 %26, 8, !dbg !11472
  %28 = icmp eq i32 %27, 0, !dbg !11473
  br i1 %28, label %32, label %29, !dbg !11474

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11475
  %31 = or i32 %30, 57344, !dbg !11475
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11475
  br label %32, !dbg !11477

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11478
  %34 = and i32 %33, -241, !dbg !11478
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11478
  %36 = load i32, i32* %35, align 4, !dbg !11478
  %37 = or i32 %34, %36, !dbg !11478
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11478
  %38 = load i32, i32* %14, align 4, !dbg !11479
  br label %39, !dbg !11481

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11479
  %41 = and i32 %40, 1, !dbg !11482
  %42 = icmp eq i32 %41, 0, !dbg !11483
  br i1 %42, label %73, label %43, !dbg !11484

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11485
  %45 = load i32, i32* %44, align 4, !dbg !11485
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11488

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11489
  %48 = and i32 %47, 131072, !dbg !11492
  %49 = icmp eq i32 %48, 0, !dbg !11492
  br i1 %49, label %115, label %58, !dbg !11493

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11494
  %52 = and i32 %51, 33554432, !dbg !11498
  %53 = icmp eq i32 %52, 0, !dbg !11498
  br i1 %53, label %115, label %58, !dbg !11499

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11500
  %56 = and i32 %55, 2, !dbg !11503
  %57 = icmp eq i32 %56, 0, !dbg !11503
  br i1 %57, label %115, label %58, !dbg !11504

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11505
  %60 = and i32 %59, -4, !dbg !11505
  %61 = or i32 %60, %45, !dbg !11505
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11505
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !11506
  call void @llvm.dbg.value(metadata i32 %62, metadata !11442, metadata !DIExpression()), !dbg !11443
  br label %63, !dbg !11507

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11508
  %65 = and i32 %64, 12, !dbg !11508
  %66 = load i32, i32* %44, align 4, !dbg !11509
  %67 = shl i32 %66, 2, !dbg !11510
  %68 = icmp eq i32 %65, %67, !dbg !11511
  br i1 %68, label %73, label %69, !dbg !11507

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !11512
  %71 = sub i32 %70, %62, !dbg !11515
  %72 = icmp ugt i32 %71, 5000, !dbg !11516
  br i1 %72, label %115, label %63, !dbg !11517, !llvm.loop !11518

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11520
  %75 = and i32 %74, 7, !dbg !11520
  %76 = icmp ugt i32 %75, %1, !dbg !11522
  br i1 %76, label %77, label %82, !dbg !11523

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11524
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11524
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11526
  %80 = and i32 %79, 7, !dbg !11526
  %81 = icmp eq i32 %80, %1, !dbg !11528
  br i1 %81, label %82, label %115, !dbg !11529

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11530
  %84 = and i32 %83, 4, !dbg !11532
  %85 = icmp eq i32 %84, 0, !dbg !11533
  br i1 %85, label %93, label %86, !dbg !11534

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11535
  %88 = and i32 %87, -7169, !dbg !11535
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11535
  %90 = load i32, i32* %89, align 4, !dbg !11535
  %91 = or i32 %88, %90, !dbg !11535
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11535
  %92 = load i32, i32* %14, align 4, !dbg !11537
  br label %93, !dbg !11539

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11537
  %95 = and i32 %94, 8, !dbg !11540
  %96 = icmp eq i32 %95, 0, !dbg !11541
  br i1 %96, label %104, label %97, !dbg !11542

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11543
  %99 = and i32 %98, -57345, !dbg !11543
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11543
  %101 = load i32, i32* %100, align 4, !dbg !11543
  %102 = shl i32 %101, 3, !dbg !11543
  %103 = or i32 %102, %99, !dbg !11543
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11543
  br label %104, !dbg !11545

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !11546
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11547
  %107 = lshr i32 %106, 4, !dbg !11548
  %108 = and i32 %107, 15, !dbg !11548
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11549
  %110 = load i8, i8* %109, align 1, !dbg !11549
  %111 = zext i8 %110 to i32, !dbg !11549
  %112 = lshr i32 %105, %111, !dbg !11550
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11551
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11552
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !11553
  br label %115, !dbg !11554

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11443
  ret i32 %116, !dbg !11555
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11556 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11558, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.value(metadata i32 0, metadata !11559, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.value(metadata i32 0, metadata !11560, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.value(metadata i32 0, metadata !11561, metadata !DIExpression()), !dbg !11562
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11563
  %2 = and i32 %1, 12, !dbg !11564
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11565

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11561, metadata !DIExpression()), !dbg !11562
  br label %29, !dbg !11566

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11569
  %6 = and i32 %5, 63, !dbg !11571
  call void @llvm.dbg.value(metadata i32 %6, metadata !11558, metadata !DIExpression()), !dbg !11562
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11572
  %8 = and i32 %7, 4194304, !dbg !11572
  %9 = icmp eq i32 %8, 0, !dbg !11574
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11575
  %11 = lshr i32 %10, 6, !dbg !11575
  %12 = and i32 %11, 511, !dbg !11575
  br i1 %9, label %16, label %13, !dbg !11576

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !11577
  %15 = udiv i32 %14, %6, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %15, metadata !11559, metadata !DIExpression()), !dbg !11562
  br label %22, !dbg !11580

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !11581
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !11583
  %19 = zext i32 %6 to i64, !dbg !11584
  %20 = udiv i64 %18, %19, !dbg !11585
  %21 = trunc i64 %20 to i32, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %21, metadata !11559, metadata !DIExpression()), !dbg !11562
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !11575
  call void @llvm.dbg.value(metadata i32 %23, metadata !11559, metadata !DIExpression()), !dbg !11562
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11587
  %25 = lshr i32 %24, 15, !dbg !11588
  %26 = and i32 %25, 6, !dbg !11588
  %27 = add nuw nsw i32 %26, 2, !dbg !11588
  call void @llvm.dbg.value(metadata i32 %27, metadata !11560, metadata !DIExpression()), !dbg !11562
  %28 = udiv i32 %23, %27, !dbg !11589
  call void @llvm.dbg.value(metadata i32 %28, metadata !11561, metadata !DIExpression()), !dbg !11562
  br label %29, !dbg !11590

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !11591
  call void @llvm.dbg.value(metadata i32 %30, metadata !11561, metadata !DIExpression()), !dbg !11562
  ret i32 %30, !dbg !11592
}

; Function Attrs: optsize
declare !dbg !11593 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11596 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11600, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata i32 %1, metadata !11601, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata i32 %2, metadata !11602, metadata !DIExpression()), !dbg !11620
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11621
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11621
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11603, metadata !DIExpression()), !dbg !11622
  %8 = icmp eq i32 %0, 0, !dbg !11623
  br i1 %8, label %9, label %23, !dbg !11624

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11625
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11625
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11613, metadata !DIExpression()), !dbg !11625
  store volatile i32 0, i32* %5, align 4, !dbg !11625
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11625
  %12 = or i32 %11, 1, !dbg !11625
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11625
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11625
  %14 = and i32 %13, 1, !dbg !11625
  store volatile i32 %14, i32* %5, align 4, !dbg !11625
  %15 = load volatile i32, i32* %5, align 4, !dbg !11625
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11626
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11627
  store i32 256, i32* %16, align 4, !dbg !11628
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11629
  store i32 2, i32* %17, align 4, !dbg !11630
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11631
  store i32 3, i32* %18, align 4, !dbg !11632
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11633
  store i32 0, i32* %19, align 4, !dbg !11634
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11635
  store i32 0, i32* %20, align 4, !dbg !11636
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11637
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11638
  %22 = and i32 %21, -123731969, !dbg !11638
  br label %38, !dbg !11639

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11640
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11617, metadata !DIExpression()), !dbg !11640
  store volatile i32 0, i32* %6, align 4, !dbg !11640
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11640
  %26 = or i32 %25, 4, !dbg !11640
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11640
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11640
  %28 = and i32 %27, 4, !dbg !11640
  store volatile i32 %28, i32* %6, align 4, !dbg !11640
  %29 = load volatile i32, i32* %6, align 4, !dbg !11640
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11641
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11642
  store i32 512, i32* %30, align 4, !dbg !11643
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11644
  store i32 2, i32* %31, align 4, !dbg !11645
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11646
  store i32 3, i32* %32, align 4, !dbg !11647
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11648
  store i32 0, i32* %33, align 4, !dbg !11649
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11650
  store i32 0, i32* %34, align 4, !dbg !11651
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11652
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11653
  %36 = and i32 %35, 134217727, !dbg !11653
  %37 = shl i32 %2, 3, !dbg !11653
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11654
  %42 = or i32 %41, %40, !dbg !11654
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11654
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11655
  ret void, !dbg !11655
}

; Function Attrs: optsize
declare !dbg !11656 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11660 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11661
  ret void, !dbg !11662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11663 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11664
  ret void, !dbg !11665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !11666 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11667
  ret i32 %1, !dbg !11668
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !11669 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11670
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11671
  %3 = lshr i32 %2, 10, !dbg !11672
  %4 = and i32 %3, 7, !dbg !11672
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11673
  %6 = load i8, i8* %5, align 1, !dbg !11673
  %7 = zext i8 %6 to i32, !dbg !11673
  %8 = lshr i32 %1, %7, !dbg !11674
  ret i32 %8, !dbg !11675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !11676 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11677
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11678
  %3 = lshr i32 %2, 13, !dbg !11679
  %4 = and i32 %3, 7, !dbg !11679
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11680
  %6 = load i8, i8* %5, align 1, !dbg !11680
  %7 = zext i8 %6 to i32, !dbg !11680
  %8 = lshr i32 %1, %7, !dbg !11681
  ret i32 %8, !dbg !11682
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11687, metadata !DIExpression()), !dbg !11688
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11689
  store i32 15, i32* %2, align 4, !dbg !11690
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11691
  %4 = and i32 %3, 262144, !dbg !11693
  %5 = icmp eq i32 %4, 0, !dbg !11694
  br i1 %5, label %8, label %6, !dbg !11695

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11696
  store i32 327680, i32* %7, align 4, !dbg !11698
  br label %15, !dbg !11699

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11700
  %10 = and i32 %9, 65536, !dbg !11702
  %11 = icmp eq i32 %10, 0, !dbg !11703
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11704
  br i1 %11, label %14, label %13, !dbg !11705

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11706
  br label %15, !dbg !11708

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11709
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11711
  %17 = and i32 %16, 1, !dbg !11713
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11714
  store i32 %17, i32* %18, align 4, !dbg !11716
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11717
  %20 = lshr i32 %19, 3, !dbg !11718
  %21 = and i32 %20, 31, !dbg !11718
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11719
  store i32 %21, i32* %22, align 4, !dbg !11720
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11721
  %24 = and i32 %23, 4, !dbg !11723
  %25 = icmp eq i32 %24, 0, !dbg !11724
  br i1 %25, label %28, label %26, !dbg !11725

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11726
  store i32 5, i32* %27, align 4, !dbg !11728
  br label %35, !dbg !11729

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11730
  %30 = and i32 %29, 1, !dbg !11732
  %31 = icmp eq i32 %30, 0, !dbg !11733
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11734
  br i1 %31, label %34, label %33, !dbg !11735

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11736
  br label %35, !dbg !11738

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11739
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11741
  %37 = and i32 %36, 1, !dbg !11743
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11744
  store i32 %37, i32* %38, align 4, !dbg !11746
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11747
  %40 = and i32 %39, 16777216, !dbg !11749
  %41 = icmp eq i32 %40, 0, !dbg !11750
  %42 = select i1 %41, i32 1, i32 2, !dbg !11751
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11752
  store i32 %42, i32* %43, align 4, !dbg !11754
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11755
  %45 = and i32 %44, 4194304, !dbg !11756
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11757
  store i32 %45, i32* %46, align 4, !dbg !11758
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11759
  %48 = and i32 %47, 63, !dbg !11760
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11761
  store i32 %48, i32* %49, align 4, !dbg !11762
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11763
  %51 = lshr i32 %50, 6, !dbg !11764
  %52 = and i32 %51, 511, !dbg !11764
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11765
  store i32 %52, i32* %53, align 4, !dbg !11766
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11767
  %55 = shl i32 %54, 1, !dbg !11768
  %56 = and i32 %55, 393216, !dbg !11768
  %57 = add nuw nsw i32 %56, 131072, !dbg !11768
  %58 = lshr exact i32 %57, 16, !dbg !11769
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11770
  store i32 %58, i32* %59, align 4, !dbg !11771
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11772
  %61 = lshr i32 %60, 24, !dbg !11773
  %62 = and i32 %61, 15, !dbg !11773
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11774
  store i32 %62, i32* %63, align 4, !dbg !11775
  ret void, !dbg !11776
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !11777 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32* %1, metadata !11782, metadata !DIExpression()), !dbg !11783
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11784
  store i32 15, i32* %3, align 4, !dbg !11785
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11786
  %5 = and i32 %4, 3, !dbg !11787
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11788
  store i32 %5, i32* %6, align 4, !dbg !11789
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11790
  %8 = and i32 %7, 240, !dbg !11791
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11792
  store i32 %8, i32* %9, align 4, !dbg !11793
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11794
  %11 = and i32 %10, 7168, !dbg !11795
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11796
  store i32 %11, i32* %12, align 4, !dbg !11797
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11798
  %14 = lshr i32 %13, 3, !dbg !11799
  %15 = and i32 %14, 7168, !dbg !11799
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11800
  store i32 %15, i32* %16, align 4, !dbg !11801
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11802
  %18 = and i32 %17, 7, !dbg !11803
  store i32 %18, i32* %1, align 4, !dbg !11804
  ret void, !dbg !11805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11806 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11807
  %2 = and i32 %1, 128, !dbg !11807
  %3 = icmp eq i32 %2, 0, !dbg !11807
  br i1 %3, label %5, label %4, !dbg !11809

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !11810
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11812
  br label %5, !dbg !11813

5:                                                ; preds = %4, %0
  ret void, !dbg !11814
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11815 {
  ret void, !dbg !11816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11820, metadata !DIExpression()), !dbg !11821
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !11822
  ret void, !dbg !11823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11827, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata i32 1000, metadata !11828, metadata !DIExpression()), !dbg !11829
  %2 = udiv i32 %0, 1000, !dbg !11830
  %3 = add nsw i32 %2, -1, !dbg !11831
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11832
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11833
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11836 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11838, metadata !DIExpression()), !dbg !11840
  %3 = bitcast i32* %2 to i8*, !dbg !11841
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11841
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11839, metadata !DIExpression()), !dbg !11842
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11843
  store volatile i32 %4, i32* %2, align 4, !dbg !11842
  %5 = load volatile i32, i32* %2, align 4, !dbg !11844
  %6 = icmp eq i32 %0, -1, !dbg !11845
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11838, metadata !DIExpression()), !dbg !11840
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %8, metadata !11838, metadata !DIExpression()), !dbg !11840
  br label %9, !dbg !11847

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11838, metadata !DIExpression()), !dbg !11840
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11848
  call void @llvm.dbg.value(metadata i32 undef, metadata !11838, metadata !DIExpression()), !dbg !11840
  %12 = shl i32 %11, 15, !dbg !11840
  %13 = ashr i32 %12, 31, !dbg !11840
  %14 = add i32 %13, %10, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %14, metadata !11838, metadata !DIExpression()), !dbg !11840
  %15 = icmp eq i32 %14, 0, !dbg !11847
  br i1 %15, label %16, label %9, !dbg !11847

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11851
  ret void, !dbg !11851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !11852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11854, metadata !DIExpression()), !dbg !11855
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11856
  ret void, !dbg !11857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11863, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i32 0, metadata !11866, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i32 0, metadata !11867, metadata !DIExpression()), !dbg !11868
  %2 = icmp eq i32 %0, 0, !dbg !11869
  br i1 %2, label %50, label %3, !dbg !11871

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11872
  %5 = icmp eq i32 %4, 49152, !dbg !11875
  br i1 %5, label %6, label %15, !dbg !11876

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11866, metadata !DIExpression()), !dbg !11868
  %7 = add i32 %0, -64000001, !dbg !11877
  %8 = icmp ult i32 %7, 26000000, !dbg !11877
  br i1 %8, label %15, label %9, !dbg !11877

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11880
  %11 = select i1 %10, i32 0, i32 3, !dbg !11882
  call void @llvm.dbg.value(metadata i32 %11, metadata !11866, metadata !DIExpression()), !dbg !11868
  %12 = add i32 %0, -30000001, !dbg !11883
  %13 = icmp ult i32 %12, 60000000, !dbg !11883
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %14, metadata !11866, metadata !DIExpression()), !dbg !11868
  br label %15, !dbg !11883

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11868
  call void @llvm.dbg.value(metadata i32 %16, metadata !11866, metadata !DIExpression()), !dbg !11868
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11886
  %18 = icmp eq i32 %17, 32768, !dbg !11888
  br i1 %18, label %19, label %27, !dbg !11889

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11890
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11893
  br i1 %22, label %27, label %23, !dbg !11893

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11894
  %25 = and i1 %24, %21, !dbg !11897
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %26, metadata !11866, metadata !DIExpression()), !dbg !11868
  br label %27, !dbg !11897

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11898
  call void @llvm.dbg.value(metadata i32 %28, metadata !11866, metadata !DIExpression()), !dbg !11868
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !11899
  %30 = icmp eq i32 %29, 16384, !dbg !11901
  br i1 %30, label %31, label %39, !dbg !11902

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11903
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11906
  br i1 %34, label %39, label %35, !dbg !11906

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11907
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11910
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11910
  call void @llvm.dbg.value(metadata i32 %38, metadata !11866, metadata !DIExpression()), !dbg !11868
  br label %39, !dbg !11910

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11898
  call void @llvm.dbg.value(metadata i32 %40, metadata !11866, metadata !DIExpression()), !dbg !11868
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #25, !dbg !11911
  call void @llvm.dbg.value(metadata i32 2, metadata !11864, metadata !DIExpression()), !dbg !11868
  br label %41, !dbg !11912

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11898
  call void @llvm.dbg.value(metadata i32 %42, metadata !11864, metadata !DIExpression()), !dbg !11868
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !11913
  call void @llvm.dbg.value(metadata i32 %43, metadata !11865, metadata !DIExpression()), !dbg !11868
  %44 = add nsw i32 %42, -1, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %44, metadata !11864, metadata !DIExpression()), !dbg !11868
  %45 = icmp ne i32 %43, %40, !dbg !11916
  %46 = icmp ne i32 %44, 0, !dbg !11917
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11917
  br i1 %47, label %41, label %48, !dbg !11918, !llvm.loop !11919

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11921
  call void @llvm.dbg.value(metadata i32 %51, metadata !11867, metadata !DIExpression()), !dbg !11868
  ret i32 %51, !dbg !11922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !11923 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11925
  %2 = and i32 %1, 49152, !dbg !11925
  ret i32 %2, !dbg !11926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11929, metadata !DIExpression()), !dbg !11930
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11931
  %3 = and i32 %2, -8, !dbg !11931
  %4 = or i32 %3, %0, !dbg !11931
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11931
  ret void, !dbg !11932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !11933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11934
  %2 = and i32 %1, 7, !dbg !11934
  ret i32 %2, !dbg !11935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11936 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11954, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11955, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata i32 0, metadata !11956, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata i32 0, metadata !11957, metadata !DIExpression()), !dbg !11958
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !11959
  %4 = icmp eq i32 %3, 0, !dbg !11961
  br i1 %4, label %5, label %21, !dbg !11962

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %6, metadata !11957, metadata !DIExpression()), !dbg !11958
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.165() #25, !dbg !11965
  %8 = icmp eq i32 %7, 1, !dbg !11967
  br i1 %8, label %13, label %9, !dbg !11968

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.166() #25, !dbg !11969
  br label %10, !dbg !11971

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.165() #25, !dbg !11972
  %12 = icmp eq i32 %11, 1, !dbg !11973
  br i1 %12, label %13, label %10, !dbg !11971, !llvm.loop !11974

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11976
  %15 = load i32, i32* %14, align 4, !dbg !11976
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11977
  %17 = load i32, i32* %16, align 4, !dbg !11977
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11978
  %19 = load i32, i32* %18, align 4, !dbg !11978
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.167(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !11979
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !11980
  call void @llvm.dbg.value(metadata i32 %20, metadata !11956, metadata !DIExpression()), !dbg !11958
  br label %21, !dbg !11981

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11982
  call void @llvm.dbg.value(metadata i32 %22, metadata !11956, metadata !DIExpression()), !dbg !11958
  ret i32 %22, !dbg !11983
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !11984 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11988, metadata !DIExpression()), !dbg !11989
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.169() #25, !dbg !11990
  %2 = icmp ne i32 %1, 0, !dbg !11992
  call void @llvm.dbg.value(metadata i1 %2, metadata !11988, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11989
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !11993
  %4 = icmp ne i32 %3, 0, !dbg !11995
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11996
  %6 = zext i1 %5 to i32, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %6, metadata !11988, metadata !DIExpression()), !dbg !11989
  ret i32 %6, !dbg !11997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !11998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12002, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12003, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 0, metadata !12004, metadata !DIExpression()), !dbg !12005
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12006
  %4 = load i32, i32* %3, align 4, !dbg !12006
  %5 = and i32 %4, 63, !dbg !12007
  %6 = udiv i32 %0, %5, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %6, metadata !12004, metadata !DIExpression()), !dbg !12005
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12009
  %8 = load i32, i32* %7, align 4, !dbg !12009
  %9 = and i32 %8, 511, !dbg !12010
  %10 = mul i32 %9, %6, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %10, metadata !12004, metadata !DIExpression()), !dbg !12005
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12012
  %12 = load i32, i32* %11, align 4, !dbg !12012
  %13 = lshr i32 %12, 15, !dbg !12013
  %14 = and i32 %13, 131070, !dbg !12013
  %15 = add nuw nsw i32 %14, 2, !dbg !12013
  %16 = udiv i32 %10, %15, !dbg !12014
  call void @llvm.dbg.value(metadata i32 %16, metadata !12004, metadata !DIExpression()), !dbg !12005
  ret i32 %16, !dbg !12015
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.165() unnamed_addr #5 !dbg !12016 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12017
  %2 = lshr i32 %1, 1, !dbg !12018
  %3 = and i32 %2, 1, !dbg !12018
  ret i32 %3, !dbg !12019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.166() unnamed_addr #15 !dbg !12020 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12021
  %2 = or i32 %1, 1, !dbg !12021
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12021
  ret void, !dbg !12022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.167(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12025, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %1, metadata !12026, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %2, metadata !12027, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %3, metadata !12028, metadata !DIExpression()), !dbg !12029
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12030
  %6 = and i32 %5, -4227072, !dbg !12030
  %7 = or i32 %1, %0, !dbg !12030
  %8 = shl i32 %2, 6, !dbg !12030
  %9 = or i32 %7, %8, !dbg !12030
  %10 = or i32 %9, %6, !dbg !12030
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12030
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12031
  %12 = and i32 %11, -196609, !dbg !12031
  %13 = or i32 %12, %3, !dbg !12031
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12031
  ret void, !dbg !12032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12037, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12038, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata i32 0, metadata !12039, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata i32 0, metadata !12040, metadata !DIExpression()), !dbg !12041
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12042
  %4 = load i32, i32* %3, align 4, !dbg !12042
  %5 = lshr i32 %4, 4, !dbg !12042
  %6 = and i32 %5, 15, !dbg !12042
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12042
  %8 = load i8, i8* %7, align 1, !dbg !12042
  %9 = zext i8 %8 to i32, !dbg !12042
  %10 = lshr i32 %0, %9, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %10, metadata !12040, metadata !DIExpression()), !dbg !12041
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12043
  %12 = icmp ult i32 %11, %10, !dbg !12045
  br i1 %12, label %13, label %16, !dbg !12046

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %14, metadata !12039, metadata !DIExpression()), !dbg !12041
  %15 = icmp eq i32 %14, 0, !dbg !12049
  br i1 %15, label %16, label %30, !dbg !12051

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.168() #25, !dbg !12052
  br label %17, !dbg !12054

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.169() #25, !dbg !12055
  %19 = icmp eq i32 %18, 1, !dbg !12056
  br i1 %19, label %20, label %17, !dbg !12054, !llvm.loop !12057

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12059
  tail call fastcc void @LL_RCC_SetAHBPrescaler.170(i32 noundef %21) #25, !dbg !12060
  tail call fastcc void @LL_RCC_SetSysClkSource.171() #25, !dbg !12061
  br label %22, !dbg !12062

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.172() #25, !dbg !12063
  %24 = icmp eq i32 %23, 8, !dbg !12064
  br i1 %24, label %25, label %22, !dbg !12062, !llvm.loop !12065

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12067
  %27 = load i32, i32* %26, align 4, !dbg !12067
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.173(i32 noundef %27) #25, !dbg !12068
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12069
  %29 = load i32, i32* %28, align 4, !dbg !12069
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.174(i32 noundef %29) #25, !dbg !12070
  br label %30, !dbg !12071

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12072
  %33 = icmp ugt i32 %32, %10, !dbg !12074
  br i1 %33, label %34, label %36, !dbg !12075

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %35, metadata !12039, metadata !DIExpression()), !dbg !12041
  br label %36, !dbg !12078

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12041
  call void @llvm.dbg.value(metadata i32 %37, metadata !12039, metadata !DIExpression()), !dbg !12041
  %38 = icmp eq i32 %37, 0, !dbg !12079
  br i1 %38, label %39, label %40, !dbg !12081

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !12082
  br label %40, !dbg !12084

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.168() unnamed_addr #15 !dbg !12086 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12087
  %2 = or i32 %1, 16777216, !dbg !12087
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12087
  ret void, !dbg !12088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.169() unnamed_addr #5 !dbg !12089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12090
  %2 = lshr i32 %1, 25, !dbg !12091
  %3 = and i32 %2, 1, !dbg !12091
  ret i32 %3, !dbg !12092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.170(i32 noundef %0) unnamed_addr #15 !dbg !12093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12095, metadata !DIExpression()), !dbg !12096
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12097
  %3 = and i32 %2, -241, !dbg !12097
  %4 = or i32 %3, %0, !dbg !12097
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12097
  ret void, !dbg !12098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.171() unnamed_addr #15 !dbg !12099 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12101, metadata !DIExpression()), !dbg !12102
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12103
  %2 = and i32 %1, -4, !dbg !12103
  %3 = or i32 %2, 2, !dbg !12103
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12103
  ret void, !dbg !12104
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.172() unnamed_addr #5 !dbg !12105 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12106
  %2 = and i32 %1, 12, !dbg !12106
  ret i32 %2, !dbg !12107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.173(i32 noundef %0) unnamed_addr #15 !dbg !12108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12110, metadata !DIExpression()), !dbg !12111
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12112
  %3 = and i32 %2, -7169, !dbg !12112
  %4 = or i32 %3, %0, !dbg !12112
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12112
  ret void, !dbg !12113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.174(i32 noundef %0) unnamed_addr #15 !dbg !12114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12116, metadata !DIExpression()), !dbg !12117
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12118
  %3 = and i32 %2, -57345, !dbg !12118
  %4 = or i32 %3, %0, !dbg !12118
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12118
  ret void, !dbg !12119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !12120 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12121
  %2 = lshr i32 %1, 27, !dbg !12122
  %3 = and i32 %2, 1, !dbg !12122
  ret i32 %3, !dbg !12123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12128, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 %1, metadata !12129, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12130, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12131, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 0, metadata !12132, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 0, metadata !12133, metadata !DIExpression()), !dbg !12134
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12135
  %6 = icmp eq i32 %5, 0, !dbg !12137
  br i1 %6, label %7, label %27, !dbg !12138

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %8, metadata !12133, metadata !DIExpression()), !dbg !12134
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !12141
  %10 = icmp eq i32 %9, 1, !dbg !12143
  br i1 %10, label %19, label %11, !dbg !12144

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12145
  br i1 %12, label %13, label %14, !dbg !12148

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !12149
  br label %15, !dbg !12151

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !12152
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !12154
  br label %16, !dbg !12155

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !12156
  %18 = icmp eq i32 %17, 1, !dbg !12157
  br i1 %18, label %19, label %16, !dbg !12155, !llvm.loop !12158

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12160
  %21 = load i32, i32* %20, align 4, !dbg !12160
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12161
  %23 = load i32, i32* %22, align 4, !dbg !12161
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12162
  %25 = load i32, i32* %24, align 4, !dbg !12162
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.167(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !12163
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %26, metadata !12132, metadata !DIExpression()), !dbg !12134
  br label %27, !dbg !12165

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12166
  call void @llvm.dbg.value(metadata i32 %28, metadata !12132, metadata !DIExpression()), !dbg !12134
  ret i32 %28, !dbg !12167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !12168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12169
  %2 = lshr i32 %1, 17, !dbg !12170
  %3 = and i32 %2, 1, !dbg !12170
  ret i32 %3, !dbg !12171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  %2 = or i32 %1, 262144, !dbg !12173
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  ret void, !dbg !12174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !12175 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %2 = and i32 %1, -262145, !dbg !12176
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  ret void, !dbg !12177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !12178 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12179
  %2 = or i32 %1, 65536, !dbg !12179
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12179
  ret void, !dbg !12180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12181 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12184, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12184, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12184, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12200
  ret void, !dbg !12201
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12206, metadata !DIExpression()), !dbg !12208
  %2 = icmp eq i8* %0, null, !dbg !12209
  br i1 %2, label %29, label %3, !dbg !12211

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12212
  %5 = icmp eq i8 %4, 0, !dbg !12213
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12214
  br i1 %6, label %29, label %8, !dbg !12214

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12207, metadata !DIExpression()), !dbg !12208
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12215

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12207, metadata !DIExpression()), !dbg !12208
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12217
  br i1 %10, label %11, label %15, !dbg !12222

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12223
  %13 = load i8*, i8** %12, align 4, !dbg !12223
  %14 = icmp eq i8* %13, %0, !dbg !12224
  br i1 %14, label %29, label %15, !dbg !12225

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12226
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12207, metadata !DIExpression()), !dbg !12208
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12227
  br i1 %17, label %7, label %8, !dbg !12228, !llvm.loop !12229

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12207, metadata !DIExpression()), !dbg !12208
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12231
  br i1 %20, label %21, label %26, !dbg !12235

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12236
  %23 = load i8*, i8** %22, align 4, !dbg !12236
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12237
  %25 = icmp eq i32 %24, 0, !dbg !12238
  br i1 %25, label %29, label %26, !dbg !12239

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12240
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12207, metadata !DIExpression()), !dbg !12208
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12241
  br i1 %28, label %29, label %18, !dbg !12215, !llvm.loop !12242

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12208
  ret %struct.device* %30, !dbg !12244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12249, metadata !DIExpression()), !dbg !12250
  %2 = icmp eq %struct.device* %0, null, !dbg !12251
  br i1 %2, label %14, label %3, !dbg !12253

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12254
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12254
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12255
  %7 = load i8, i8* %6, align 1, !dbg !12255
  %8 = and i8 %7, 1, !dbg !12255
  %9 = icmp eq i8 %8, 0, !dbg !12255
  br i1 %9, label %14, label %10, !dbg !12256

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12257
  %12 = load i8, i8* %11, align 1, !dbg !12257
  %13 = icmp eq i8 %12, 0, !dbg !12258
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12250
  ret i1 %15, !dbg !12259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12260 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12265, metadata !DIExpression()), !dbg !12266
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12267
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12269 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12277, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12278, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata i8* %2, metadata !12279, metadata !DIExpression()), !dbg !12282
  %5 = bitcast i32* %4 to i8*, !dbg !12283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12283
  call void @llvm.dbg.value(metadata i32 0, metadata !12280, metadata !DIExpression()), !dbg !12282
  store i32 0, i32* %4, align 4, !dbg !12284
  call void @llvm.dbg.value(metadata i32* %4, metadata !12280, metadata !DIExpression(DW_OP_deref)), !dbg !12282
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12285
  call void @llvm.dbg.value(metadata i16* %6, metadata !12281, metadata !DIExpression()), !dbg !12282
  %7 = load i32, i32* %4, align 4, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %7, metadata !12280, metadata !DIExpression()), !dbg !12282
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12287
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12288
  ret i32 %8, !dbg !12289
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12290 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12294, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i32* %1, metadata !12295, metadata !DIExpression()), !dbg !12300
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12301
  %4 = load i16*, i16** %3, align 4, !dbg !12301
  call void @llvm.dbg.value(metadata i16* %4, metadata !12296, metadata !DIExpression()), !dbg !12300
  %5 = icmp eq i16* %4, null, !dbg !12302
  br i1 %5, label %14, label %6, !dbg !12303

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12304
  call void @llvm.dbg.value(metadata i32 %7, metadata !12297, metadata !DIExpression()), !dbg !12304
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12305
  %9 = load i16, i16* %8, align 2, !dbg !12305
  %10 = add i16 %9, -32767, !dbg !12306
  %11 = icmp ult i16 %10, 2, !dbg !12306
  %12 = add i32 %7, 1, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %12, metadata !12297, metadata !DIExpression()), !dbg !12304
  br i1 %11, label %13, label %6, !dbg !12306, !llvm.loop !12309

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12312
  br label %14, !dbg !12313

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12315 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12319, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 %1, metadata !12320, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12321, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i8* %3, metadata !12322, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 0, metadata !12323, metadata !DIExpression()), !dbg !12331
  %5 = icmp eq i32 %1, 0, !dbg !12332
  br i1 %5, label %16, label %8, !dbg !12333

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12323, metadata !DIExpression()), !dbg !12331
  %7 = icmp eq i32 %15, %1, !dbg !12332
  br i1 %7, label %16, label %8, !dbg !12333, !llvm.loop !12334

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12323, metadata !DIExpression()), !dbg !12331
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12336
  %11 = load i16, i16* %10, align 2, !dbg !12336
  call void @llvm.dbg.value(metadata i16 %11, metadata !12325, metadata !DIExpression()), !dbg !12337
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !12338
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12328, metadata !DIExpression()), !dbg !12337
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12339
  call void @llvm.dbg.value(metadata i32 %13, metadata !12329, metadata !DIExpression()), !dbg !12337
  %14 = icmp slt i32 %13, 0, !dbg !12340
  %15 = add nuw i32 %9, 1, !dbg !12342
  call void @llvm.dbg.value(metadata i32 %15, metadata !12323, metadata !DIExpression()), !dbg !12331
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !12344 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12348, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12349, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12350, metadata !DIExpression()), !dbg !12351
  %2 = sext i16 %0 to i32, !dbg !12352
  %3 = icmp slt i16 %0, 1, !dbg !12354
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12355
  %6 = add nsw i32 %2, -1, !dbg !12355
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12355
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12355
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12349, metadata !DIExpression()), !dbg !12351
  ret %struct.device* %8, !dbg !12356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12357 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12359, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12360, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i8* %2, metadata !12361, metadata !DIExpression()), !dbg !12364
  %5 = bitcast i32* %4 to i8*, !dbg !12365
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12365
  call void @llvm.dbg.value(metadata i32 0, metadata !12362, metadata !DIExpression()), !dbg !12364
  store i32 0, i32* %4, align 4, !dbg !12366
  call void @llvm.dbg.value(metadata i32* %4, metadata !12362, metadata !DIExpression(DW_OP_deref)), !dbg !12364
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12367
  call void @llvm.dbg.value(metadata i16* %6, metadata !12363, metadata !DIExpression()), !dbg !12364
  %7 = load i32, i32* %4, align 4, !dbg !12368
  call void @llvm.dbg.value(metadata i32 %7, metadata !12362, metadata !DIExpression()), !dbg !12364
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12369
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12370
  ret i32 %8, !dbg !12371
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12374, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32* %1, metadata !12375, metadata !DIExpression()), !dbg !12379
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12380
  %4 = load i16*, i16** %3, align 4, !dbg !12380
  call void @llvm.dbg.value(metadata i16* %4, metadata !12376, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12377, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %5 = icmp eq i16* %4, null, !dbg !12381
  br i1 %5, label %22, label %6, !dbg !12383

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12377, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i16* %8, metadata !12376, metadata !DIExpression()), !dbg !12379
  %9 = load i16, i16* %8, align 2, !dbg !12384
  %10 = icmp eq i16 %9, -32768, !dbg !12388
  call void @llvm.dbg.value(metadata i32 undef, metadata !12377, metadata !DIExpression()), !dbg !12379
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12389
  call void @llvm.dbg.value(metadata i16* %11, metadata !12376, metadata !DIExpression()), !dbg !12379
  %12 = zext i1 %10 to i32, !dbg !12390
  %13 = add i32 %7, %12, !dbg !12390
  call void @llvm.dbg.value(metadata i32 %13, metadata !12377, metadata !DIExpression()), !dbg !12379
  %14 = icmp eq i32 %13, 2, !dbg !12391
  br i1 %14, label %15, label %6, !dbg !12392

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12379
  call void @llvm.dbg.value(metadata i32 %16, metadata !12378, metadata !DIExpression()), !dbg !12379
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12393
  %18 = load i16, i16* %17, align 2, !dbg !12393
  %19 = icmp eq i16 %18, 32767, !dbg !12394
  %20 = add i32 %16, 1, !dbg !12395
  call void @llvm.dbg.value(metadata i32 %20, metadata !12378, metadata !DIExpression()), !dbg !12379
  br i1 %19, label %21, label %15, !dbg !12397, !llvm.loop !12398

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12400
  br label %22, !dbg !12401

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12402
  call void @llvm.dbg.value(metadata i16* %23, metadata !12376, metadata !DIExpression()), !dbg !12379
  ret i16* %23, !dbg !12403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !12404 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12408
  ret i32* %2, !dbg !12409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !12410 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12561, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12562, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12563, metadata !DIExpression()), !dbg !12564
  ret void, !dbg !12565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 %1, metadata !12571, metadata !DIExpression()), !dbg !12572
  ret void, !dbg !12573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12574 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12578, metadata !DIExpression()), !dbg !12580
  call void @llvm.dbg.value(metadata i32 %1, metadata !12579, metadata !DIExpression()), !dbg !12580
  ret void, !dbg !12581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12586, metadata !DIExpression()), !dbg !12588
  call void @llvm.dbg.value(metadata i8* %1, metadata !12587, metadata !DIExpression()), !dbg !12588
  ret i32 -134, !dbg !12589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12594, metadata !DIExpression()), !dbg !12596
  call void @llvm.dbg.value(metadata i8* %1, metadata !12595, metadata !DIExpression()), !dbg !12596
  ret i32 -134, !dbg !12597
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12601, metadata !DIExpression()), !dbg !12602
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12603, !srcloc !12609
  call void @llvm.dbg.value(metadata i32 undef, metadata !12606, metadata !DIExpression()) #23, !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()) #23, !dbg !12610
  br label %3, !dbg !12611

3:                                                ; preds = %3, %1
  br label %3, !dbg !12612, !llvm.loop !12615
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12622, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12623, metadata !DIExpression()), !dbg !12624
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.179, i32 0, i32 0), i32 noundef 69) #24, !dbg !12625
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12630
  unreachable, !dbg !12630
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12633, metadata !DIExpression()), !dbg !12634
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12635
  unreachable, !dbg !12635
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12638, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12639, metadata !DIExpression()), !dbg !12642
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12643, !srcloc !12609
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %4, metadata !12606, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 %4, metadata !12640, metadata !DIExpression()), !dbg !12642
  %5 = tail call fastcc %struct.k_thread* @k_current_get.182() #26, !dbg !12646
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12641, metadata !DIExpression()), !dbg !12642
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !12647
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.183, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #24, !dbg !12647
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12652
  br i1 %7, label %20, label %8, !dbg !12654

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12655, metadata !DIExpression()), !dbg !12660
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12662
  %10 = load i32, i32* %9, align 4, !dbg !12662
  %11 = and i32 %10, 511, !dbg !12663
  %12 = icmp eq i32 %11, 0, !dbg !12664
  br i1 %12, label %14, label %13, !dbg !12665

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.184, i32 0, i32 0), i32 noundef 69) #24, !dbg !12666
  br label %14, !dbg !12672

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12673
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.185, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #24, !dbg !12673
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !12678
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12655, metadata !DIExpression()), !dbg !12679
  %16 = load i32, i32* %9, align 4, !dbg !12684
  %17 = and i32 %16, 511, !dbg !12685
  %18 = icmp eq i32 %17, 0, !dbg !12686
  br i1 %18, label %22, label %19, !dbg !12687

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12691
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12694, !srcloc !12695
  br label %25, !dbg !12696

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12673
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.185, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #24, !dbg !12673
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !12678
  br label %22, !dbg !12697

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12642
  br i1 %23, label %25, label %24, !dbg !12706

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.186(%struct.k_thread* noundef %5) #25, !dbg !12707
  br label %25, !dbg !12710

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.182() unnamed_addr #13 !dbg !12711 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.194() #26, !dbg !12715
  ret %struct.k_thread* %1, !dbg !12716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !12717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12721, metadata !DIExpression()), !dbg !12722
  %2 = icmp ult i32 %0, 5, !dbg !12723
  br i1 %2, label %3, label %6, !dbg !12723

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12723
  %5 = load i8*, i8** %4, align 4, !dbg !12723
  br label %6, !dbg !12723

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.188, i32 0, i32 0), %1 ], !dbg !12724
  ret i8* %7, !dbg !12726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12731, metadata !DIExpression()), !dbg !12733
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12734
  br i1 %2, label %9, label %3, !dbg !12735

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12736
  call void @llvm.dbg.value(metadata i8* %4, metadata !12732, metadata !DIExpression()), !dbg !12733
  %5 = icmp eq i8* %4, null, !dbg !12737
  br i1 %5, label %9, label %6, !dbg !12739

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12740
  %8 = icmp eq i8 %7, 0, !dbg !12741
  br i1 %8, label %9, label %10, !dbg !12742

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.187, i32 0, i32 0), metadata !12732, metadata !DIExpression()), !dbg !12733
  br label %10, !dbg !12743

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.187, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12733
  call void @llvm.dbg.value(metadata i8* %11, metadata !12732, metadata !DIExpression()), !dbg !12733
  ret i8* %11, !dbg !12745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.186(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12746 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12750, metadata !DIExpression()), !dbg !12751
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12752, !srcloc !12754
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12755
  ret void, !dbg !12756
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.194() unnamed_addr #13 !dbg !12757 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12758, !srcloc !12760
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12761
  ret %struct.k_thread* %1, !dbg !12762
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12763 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12767, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %1, metadata !12768, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %2, metadata !12769, metadata !DIExpression()), !dbg !12770
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12771
  ret void, !dbg !12772
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12773 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12777, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata i8* %1, metadata !12778, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata i32 %2, metadata !12779, metadata !DIExpression()), !dbg !12780
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12781
  ret void, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12783 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !12784
  ret void, !dbg !12785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12788, metadata !DIExpression()), !dbg !12789
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !12790
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12791
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12792
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12793
  %4 = trunc i32 %0 to i8, !dbg !12794
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12795
  store i8 %4, i8* %5, align 4, !dbg !12796
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12797
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !12798
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12799
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12800
  store i8* %8, i8** %9, align 4, !dbg !12801
  ret void, !dbg !12802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12805, metadata !DIExpression()), !dbg !12811
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12812
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12806, metadata !DIExpression()), !dbg !12811
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12813
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12807, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.201, i32 0, i32 0), metadata !12810, metadata !DIExpression()), !dbg !12811
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12814
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12815
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.201, i32 0, i32 0)) #24, !dbg !12816
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !12817
  ret void, !dbg !12818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !12819 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12823, metadata !DIExpression()), !dbg !12824
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12825
  ret i8* %2, !dbg !12826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !12827 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12832, metadata !DIExpression()), !dbg !12833
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12834
  %3 = load i8, i8* %2, align 1, !dbg !12835
  %4 = and i8 %3, -5, !dbg !12835
  store i8 %4, i8* %2, align 1, !dbg !12835
  ret void, !dbg !12836
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !12837 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !12840
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !12841
  %3 = ptrtoint i8* %2 to i32, !dbg !12850
  %4 = add i32 %3, 2048, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %4, metadata !12845, metadata !DIExpression()) #23, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %4, metadata !12853, metadata !DIExpression()) #23, !dbg !12856
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12858, !srcloc !12859
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12860
  %6 = or i32 %5, 512, !dbg !12860
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12860
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -2, i32 noundef 255) #24, !dbg !12861
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -5, i32 noundef 0) #24, !dbg !12864
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -12, i32 noundef 0) #24, !dbg !12865
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -11, i32 noundef 0) #24, !dbg !12866
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -10, i32 noundef 0) #24, !dbg !12867
  tail call fastcc void @__NVIC_SetPriority.204(i32 noundef -4, i32 noundef 0) #24, !dbg !12868
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12869
  %8 = or i32 %7, 458752, !dbg !12869
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12869
  tail call void @z_arm_fault_init() #24, !dbg !12870
  tail call void @z_arm_cpu_idle_init() #24, !dbg !12871
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12872
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12875
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !12876
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !12877
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12878
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12878
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12839, metadata !DIExpression()), !dbg !12879
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !12880
  call void @z_device_state_init() #24, !dbg !12881
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !12882
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !12883
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !12884
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12885
  unreachable, !dbg !12885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2037, metadata !DIExpression()), !dbg !12886
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12887
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12887
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2038, metadata !DIExpression()), !dbg !12886
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2038, metadata !DIExpression()), !dbg !12886
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12888
  br i1 %7, label %8, label %35, !dbg !12889

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2038, metadata !DIExpression()), !dbg !12886
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12890
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12890
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2048, metadata !DIExpression()), !dbg !12891
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12892
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12892
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !12893
  call void @llvm.dbg.value(metadata i32 %14, metadata !2052, metadata !DIExpression()), !dbg !12891
  %15 = icmp eq %struct.device* %11, null, !dbg !12894
  br i1 %15, label %32, label %16, !dbg !12896

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12897
  br i1 %17, label %26, label %18, !dbg !12900

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12901
  call void @llvm.dbg.value(metadata i32 %19, metadata !2052, metadata !DIExpression()), !dbg !12891
  %20 = icmp ult i32 %19, 255, !dbg !12903
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12903
  call void @llvm.dbg.value(metadata i32 %21, metadata !2052, metadata !DIExpression()), !dbg !12891
  %22 = trunc i32 %21 to i8, !dbg !12904
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12905
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12905
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12906
  store i8 %22, i8* %25, align 1, !dbg !12907
  br label %26, !dbg !12908

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12909
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12909
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12910
  %30 = load i8, i8* %29, align 1, !dbg !12911
  %31 = or i8 %30, 1, !dbg !12911
  store i8 %31, i8* %29, align 1, !dbg !12911
  br label %32, !dbg !12912

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12913
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2038, metadata !DIExpression()), !dbg !12886
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12888
  br i1 %34, label %8, label %35, !dbg !12889, !llvm.loop !12914

35:                                               ; preds = %32, %1
  ret void, !dbg !12916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.204(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12919, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i32 %1, metadata !12920, metadata !DIExpression()), !dbg !12921
  %3 = trunc i32 %1 to i8, !dbg !12922
  %4 = shl i8 %3, 4, !dbg !12922
  %5 = and i32 %0, 15, !dbg !12925
  %6 = add nsw i32 %5, -4, !dbg !12926
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12927
  store volatile i8 %4, i8* %7, align 1, !dbg !12928
  ret void, !dbg !12929
}

; Function Attrs: optsize
declare !dbg !12930 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !12931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12934, metadata !DIExpression()), !dbg !12935
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12936
  store i8 1, i8* %2, align 1, !dbg !12937
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12938
  store i8 1, i8* %3, align 4, !dbg !12939
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12940
  store i32 0, i32* %4, align 4, !dbg !12941
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12942
  store i32 0, i32* %5, align 4, !dbg !12943
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12944
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12945
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12946
  ret void, !dbg !12947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12948 {
  tail call void @z_sched_init() #24, !dbg !12953
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12954
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 11, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.205, i32 0, i32 0)) #24, !dbg !12955
  call void @llvm.dbg.value(metadata i8* %1, metadata !12952, metadata !DIExpression()), !dbg !12956
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12957
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12958
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !12959
  ret i8* %1, !dbg !12960
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !12961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12965, metadata !DIExpression()), !dbg !12966
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !12967
  unreachable, !dbg !12968
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12971, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata i8* %1, metadata !12972, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata i8* %2, metadata !12973, metadata !DIExpression()), !dbg !12974
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12975
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !12976
  tail call void @boot_banner() #24, !dbg !12977
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !12978
  tail call void @z_init_static_threads() #24, !dbg !12979
  tail call void @main() #24, !dbg !12980
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12981
  %5 = and i8 %4, -2, !dbg !12981
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12981
  ret void, !dbg !12982
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !12983 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12993, metadata !DIExpression()), !dbg !12995
  call void @llvm.dbg.value(metadata i8* %1, metadata !12994, metadata !DIExpression()), !dbg !12995
  ret void, !dbg !12996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !12997 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12999, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i8* %1, metadata !13000, metadata !DIExpression()), !dbg !13001
  ret void, !dbg !13002
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13003 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13004, !srcloc !13011
  call void @llvm.dbg.value(metadata i32 %1, metadata !13007, metadata !DIExpression()) #23, !dbg !13012
  %2 = icmp ne i32 %1, 0, !dbg !13013
  ret i1 %2, !dbg !13014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13015 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13016
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13017
  %3 = load i8, i8* %2, align 4, !dbg !13018
  %4 = or i8 %3, 1, !dbg !13018
  store i8 %4, i8* %2, align 4, !dbg !13018
  ret void, !dbg !13019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13020 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13021
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13022
  %3 = load i8, i8* %2, align 4, !dbg !13023
  %4 = and i8 %3, -2, !dbg !13023
  store i8 %4, i8* %2, align 4, !dbg !13023
  ret void, !dbg !13024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13025 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13026
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13027
  %3 = load i8, i8* %2, align 4, !dbg !13027
  %4 = and i8 %3, 1, !dbg !13028
  %5 = icmp ne i8 %4, 0, !dbg !13029
  ret i1 %5, !dbg !13030
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13031 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13035, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.value(metadata i8* %1, metadata !13036, metadata !DIExpression()), !dbg !13037
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13038
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13040
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13035, metadata !DIExpression()), !dbg !13037
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13041
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #24, !dbg !13042
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13043
  store i8 0, i8* %8, align 1, !dbg !13044
  ret i32 0, !dbg !13045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #6 !dbg !13046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13050, metadata !DIExpression()), !dbg !13051
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13052
  ret i8* %2, !dbg !13053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13058, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.value(metadata i8* %1, metadata !13059, metadata !DIExpression()), !dbg !13061
  call void @llvm.dbg.value(metadata i32 %2, metadata !13060, metadata !DIExpression()), !dbg !13061
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13062
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #24, !dbg !13063
  ret i32 0, !dbg !13064
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2180, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i8* %1, metadata !2181, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 %2, metadata !2182, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 0, metadata !2183, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i8 undef, metadata !2185, metadata !DIExpression()), !dbg !13065
  %4 = icmp eq i8* %1, null, !dbg !13066
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13068
  br i1 %6, label %46, label %7, !dbg !13068

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13069
  %9 = load i8, i8* %8, align 1, !dbg !13069
  call void @llvm.dbg.value(metadata i8 %9, metadata !2185, metadata !DIExpression()), !dbg !13065
  %10 = add i32 %2, -1, !dbg !13070
  call void @llvm.dbg.value(metadata i32 %10, metadata !2182, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i8 0, metadata !2186, metadata !DIExpression()), !dbg !13071
  call void @llvm.dbg.value(metadata i8 %9, metadata !2185, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 0, metadata !2183, metadata !DIExpression()), !dbg !13065
  %11 = icmp eq i8 %9, 0, !dbg !13072
  br i1 %11, label %12, label %15, !dbg !13074

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13075
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13076
  store i8 0, i8* %14, align 1, !dbg !13077
  br label %46, !dbg !13078

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2186, metadata !DIExpression()), !dbg !13071
  call void @llvm.dbg.value(metadata i8 %17, metadata !2185, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 %18, metadata !2183, metadata !DIExpression()), !dbg !13065
  %19 = zext i8 %17 to i32, !dbg !13079
  %20 = zext i8 %16 to i32, !dbg !13080
  %21 = shl nuw i32 1, %20, !dbg !13080
  call void @llvm.dbg.value(metadata i32 %21, metadata !2184, metadata !DIExpression()), !dbg !13065
  %22 = and i32 %21, %19, !dbg !13082
  %23 = icmp eq i32 %22, 0, !dbg !13084
  br i1 %23, label %42, label %24, !dbg !13085

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13086
  %26 = sub i32 %10, %18, !dbg !13087
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13088
  %28 = load i8*, i8** %27, align 4, !dbg !13088
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13089
  %30 = load i32, i32* %29, align 4, !dbg !13089
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13090
  %32 = add i32 %31, %18, !dbg !13091
  call void @llvm.dbg.value(metadata i32 %32, metadata !2183, metadata !DIExpression()), !dbg !13065
  %33 = trunc i32 %21 to i8, !dbg !13092
  %34 = xor i8 %33, -1, !dbg !13092
  %35 = and i8 %17, %34, !dbg !13092
  call void @llvm.dbg.value(metadata i8 %35, metadata !2185, metadata !DIExpression()), !dbg !13065
  %36 = icmp eq i8 %35, 0, !dbg !13093
  br i1 %36, label %12, label %37, !dbg !13095

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13096
  %39 = sub i32 %10, %32, !dbg !13098
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.208, i32 0, i32 0), i32 noundef 1) #25, !dbg !13099
  %41 = add i32 %40, %32, !dbg !13100
  call void @llvm.dbg.value(metadata i32 %41, metadata !2183, metadata !DIExpression()), !dbg !13065
  br label %42, !dbg !13101

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13065
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13065
  call void @llvm.dbg.value(metadata i8 %44, metadata !2185, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 %43, metadata !2183, metadata !DIExpression()), !dbg !13065
  %45 = add i8 %16, 1, !dbg !13102
  call void @llvm.dbg.value(metadata i8 %45, metadata !2186, metadata !DIExpression()), !dbg !13071
  br label %15, !dbg !13074

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.209, i32 0, i32 0), %3 ], !dbg !13065
  ret i8* %47, !dbg !13103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13108, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.value(metadata i32 %1, metadata !13109, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.value(metadata i8* %2, metadata !13110, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()), !dbg !13113
  %5 = icmp ult i32 %1, %3, !dbg !13114
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13114
  call void @llvm.dbg.value(metadata i32 %6, metadata !13112, metadata !DIExpression()), !dbg !13113
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13115
  ret i32 %6, !dbg !13116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13121, metadata !DIExpression()), !dbg !13122
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13123
  ret void, !dbg !13124
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13125 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13134, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13135, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 %2, metadata !13136, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13137, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i8* %4, metadata !13138, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i8* %5, metadata !13139, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i8* %6, metadata !13140, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 %7, metadata !13141, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 %8, metadata !13142, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i8* %9, metadata !13143, metadata !DIExpression()), !dbg !13145
  %11 = icmp eq i32 %7, 15, !dbg !13146
  br i1 %11, label %12, label %15, !dbg !13146

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13146
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !13146
  br i1 %14, label %19, label %18, !dbg !13146

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13146
  %17 = icmp ult i32 %16, 31, !dbg !13146
  br i1 %17, label %19, label %18, !dbg !13146

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.221, i32 0, i32 0), i32 noundef 536) #24, !dbg !13150
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.222, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !13150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.221, i32 0, i32 0), i32 noundef 536) #24, !dbg !13150
  unreachable, !dbg !13150

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13152
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #25, !dbg !13153
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13154
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13155
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !13156
  call void @llvm.dbg.value(metadata i8* %22, metadata !13144, metadata !DIExpression()), !dbg !13145
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13157
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13158
  store i8* null, i8** %23, align 4, !dbg !13159
  %24 = icmp eq i8* %9, null, !dbg !13160
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13162
  br i1 %24, label %29, label %26, !dbg !13163

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #24, !dbg !13164
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13166
  store i8 0, i8* %28, align 1, !dbg !13167
  br label %30, !dbg !13168

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13169
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13171
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13171
  br i1 %32, label %36, label %33, !dbg !13173

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13174
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13174
  br label %36, !dbg !13175

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13145
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13176
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13178
  ret i8* %22, !dbg !13179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !13180 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13184, metadata !DIExpression()), !dbg !13185
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13186
  ret i1 %2, !dbg !13187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !13188 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13195
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13196
  ret void, !dbg !13197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13198 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13203, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %1, metadata !13204, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %2, metadata !13205, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i32 %3, metadata !13206, metadata !DIExpression()), !dbg !13207
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13208
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13209
  %6 = trunc i32 %3 to i8, !dbg !13210
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13211
  store i8 %6, i8* %7, align 4, !dbg !13212
  %8 = trunc i32 %2 to i8, !dbg !13213
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13214
  store i8 %8, i8* %9, align 1, !dbg !13215
  %10 = trunc i32 %1 to i8, !dbg !13216
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13217
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13217
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13217
  store i8 %10, i8* %13, align 2, !dbg !13218
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13219
  store i8 0, i8* %14, align 1, !dbg !13220
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13221
  ret void, !dbg !13222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !13223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13227, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13228, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 %2, metadata !13229, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 0, metadata !13234, metadata !DIExpression()), !dbg !13235
  %4 = add i32 %2, 7, !dbg !13236
  %5 = and i32 %4, -8, !dbg !13236
  %6 = add i32 %5, 64, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %6, metadata !13230, metadata !DIExpression()), !dbg !13235
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.223(%struct.z_thread_stack_element* noundef %1) #25, !dbg !13238
  call void @llvm.dbg.value(metadata i8* %7, metadata !13233, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 %5, metadata !13231, metadata !DIExpression()), !dbg !13235
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13239
  call void @llvm.dbg.value(metadata i8* %8, metadata !13232, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 0, metadata !13234, metadata !DIExpression()), !dbg !13235
  %9 = ptrtoint i8* %7 to i32, !dbg !13240
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13241
  store i32 %9, i32* %10, align 4, !dbg !13242
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13243
  store i32 %5, i32* %11, align 4, !dbg !13244
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13245
  store i32 0, i32* %12, align 4, !dbg !13246
  call void @llvm.dbg.value(metadata i8* %8, metadata !13232, metadata !DIExpression()), !dbg !13235
  ret i8* %8, !dbg !13247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.223(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13248 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13252, metadata !DIExpression()), !dbg !13253
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13254
  ret i8* %2, !dbg !13255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13256 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13261, metadata !DIExpression()), !dbg !13262
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13263
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13264
  ret void, !dbg !13265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13266 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13268, metadata !DIExpression()), !dbg !13269
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13270
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13271
  ret void, !dbg !13272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13273 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13277, metadata !DIExpression()), !dbg !13278
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13279
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13280
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13281
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13282
  ret void, !dbg !13283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13284 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13289, metadata !DIExpression()), !dbg !13290
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13291
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13292
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13293
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13294
  ret void, !dbg !13295
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13296 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13313, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13304, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13305, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %2, metadata !13306, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13307, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %4, metadata !13308, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %5, metadata !13309, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i8* %6, metadata !13310, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %7, metadata !13311, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata i32 %8, metadata !13312, metadata !DIExpression()), !dbg !13314
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13315, !srcloc !13011
  call void @llvm.dbg.value(metadata i32 %11, metadata !13007, metadata !DIExpression()) #23, !dbg !13320
  %12 = icmp eq i32 %11, 0, !dbg !13321
  br i1 %12, label %14, label %13, !dbg !13322

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.221, i32 0, i32 0), i32 noundef 647) #24, !dbg !13323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.227, i32 0, i32 0)) #24, !dbg !13323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.221, i32 0, i32 0), i32 noundef 647) #24, !dbg !13323
  unreachable, !dbg !13323

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13313, metadata !DIExpression()), !dbg !13314
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #25, !dbg !13325
  %17 = icmp eq i64 %15, -1, !dbg !13326
  br i1 %17, label %19, label %18, !dbg !13328

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !13329
  br label %19, !dbg !13331

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13333 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13338, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13337, metadata !DIExpression()), !dbg !13339
  %4 = icmp eq i64 %3, 0, !dbg !13340
  br i1 %4, label %5, label %6, !dbg !13342

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13343
  br label %7, !dbg !13345

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13346
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13353, metadata !DIExpression()), !dbg !13354
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13355, !srcloc !13357
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13358
  ret void, !dbg !13359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13360 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13363, metadata !DIExpression()), !dbg !13364
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13362, metadata !DIExpression()), !dbg !13364
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13365
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13366
  ret void, !dbg !13367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13368 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13370, metadata !DIExpression()), !dbg !13390
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13391

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.221, i32 0, i32 0), i32 noundef 750) #24, !dbg !13395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.231, i32 0, i32 0)) #24, !dbg !13395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.221, i32 0, i32 0), i32 noundef 750) #24, !dbg !13395
  unreachable, !dbg !13395

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13370, metadata !DIExpression()), !dbg !13390
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13398
  br i1 %4, label %6, label %5, !dbg !13399

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !13400
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13388, metadata !DIExpression()), !dbg !13401
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13402

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13406
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13406
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13408
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13408
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13409
  %12 = load i32, i32* %11, align 4, !dbg !13409
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13410
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13410
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13411
  %16 = load i8*, i8** %15, align 4, !dbg !13411
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13412
  %18 = load i8*, i8** %17, align 4, !dbg !13412
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13413
  %20 = load i8*, i8** %19, align 4, !dbg !13413
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13414
  %22 = load i32, i32* %21, align 4, !dbg !13414
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13415
  %24 = load i32, i32* %23, align 4, !dbg !13415
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13416
  %26 = load i8*, i8** %25, align 4, !dbg !13416
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #25, !dbg !13417
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13418
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13419
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13420
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13420
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13421
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13370, metadata !DIExpression()), !dbg !13390
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13422
  br i1 %32, label %1, label %2, !dbg !13391, !llvm.loop !13423

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.221, i32 0, i32 0), i32 noundef 781) #24, !dbg !13425
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.231, i32 0, i32 0)) #24, !dbg !13425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.221, i32 0, i32 0), i32 noundef 781) #24, !dbg !13425
  unreachable, !dbg !13425

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13388, metadata !DIExpression()), !dbg !13401
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13428
  br i1 %36, label %38, label %37, !dbg !13429

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #24, !dbg !13430
  ret void, !dbg !13431

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13432
  %40 = load i32, i32* %39, align 4, !dbg !13432
  %41 = icmp eq i32 %40, -1, !dbg !13435
  br i1 %41, label %50, label %42, !dbg !13436

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13437
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13437
  %45 = icmp sgt i32 %40, 0, !dbg !13439
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13439
  %47 = zext i32 %46 to i64, !dbg !13439
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.232(i64 noundef %47) #25, !dbg !13439
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13440
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #25, !dbg !13440
  br label %50, !dbg !13441

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13442
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13388, metadata !DIExpression()), !dbg !13401
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13443
  br i1 %52, label %33, label %34, !dbg !13402, !llvm.loop !13444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.232(i64 noundef %0) unnamed_addr #6 !dbg !13446 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13448, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i64 %0, metadata !13450, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 1000, metadata !13453, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 10000, metadata !13454, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8 1, metadata !13455, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8 0, metadata !13456, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8 1, metadata !13457, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8 0, metadata !13458, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8 1, metadata !13459, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8 0, metadata !13460, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i64 0, metadata !13461, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i64 0, metadata !13461, metadata !DIExpression()), !dbg !13465
  %2 = mul i64 %0, 10, !dbg !13467
  ret i64 %2, !dbg !13473
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !13474 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13476, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8* %1, metadata !13477, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8* %2, metadata !13478, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.value(metadata i8* %3, metadata !13479, metadata !DIExpression()), !dbg !13480
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13481
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13482
  %7 = load i8, i8* %6, align 4, !dbg !13483
  %8 = or i8 %7, 4, !dbg !13483
  store i8 %8, i8* %6, align 4, !dbg !13483
  tail call void @z_thread_essential_clear() #25, !dbg !13484
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13485
  unreachable, !dbg !13485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !13486 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13491, metadata !DIExpression()), !dbg !13493
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13494
  %3 = load i32, i32* %2, align 4, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %3, metadata !13492, metadata !DIExpression()), !dbg !13493
  %4 = icmp eq i32 %3, 0, !dbg !13495
  br i1 %4, label %10, label %5, !dbg !13497

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13498
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13501
  %8 = zext i8 %7 to i32, !dbg !13502
  %9 = icmp eq i32 %6, %8, !dbg !13503
  br i1 %9, label %11, label %10, !dbg !13504

10:                                               ; preds = %5, %1
  br label %11, !dbg !13505

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13493
  ret i1 %12, !dbg !13506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !13507 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13509, metadata !DIExpression()), !dbg !13510
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13511
  %3 = load i32, i32* %2, align 4, !dbg !13511
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13513
  %5 = zext i8 %4 to i32, !dbg !13514
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13515
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13516
  %8 = or i32 %7, %5, !dbg !13517
  %9 = icmp eq i32 %3, %8, !dbg !13518
  br i1 %9, label %10, label %11, !dbg !13519

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13520
  br label %11, !dbg !13521

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !13523 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13527, metadata !DIExpression()), !dbg !13528
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13529
  %3 = zext i8 %2 to i32, !dbg !13530
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13531
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13532
  %6 = or i32 %5, %3, !dbg !13533
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13534
  store i32 %6, i32* %7, align 4, !dbg !13535
  ret void, !dbg !13536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !13537 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13541, metadata !DIExpression()), !dbg !13542
  ret i32 -134, !dbg !13543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13548, metadata !DIExpression()), !dbg !13550
  call void @llvm.dbg.value(metadata i32 %1, metadata !13549, metadata !DIExpression()), !dbg !13550
  ret i32 -134, !dbg !13551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !13552 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13559, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13560, metadata !DIExpression()), !dbg !13561
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13562
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13564
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13561
  ret i32 %6, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !13566 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13570, metadata !DIExpression()), !dbg !13571
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13572
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13571
  ret i32 %3, !dbg !13574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13575 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13577
  ret void, !dbg !13578
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !13579 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13581, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i8* %1, metadata !13582, metadata !DIExpression()), !dbg !13584
  call void @llvm.dbg.value(metadata i8* %2, metadata !13583, metadata !DIExpression()), !dbg !13584
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13585
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13585
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13585
  %7 = load i8, i8* %6, align 2, !dbg !13585
  %8 = icmp sgt i8 %7, -1, !dbg !13585
  br i1 %8, label %10, label %9, !dbg !13588

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.241, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.243, i32 0, i32 0), i32 noundef 39) #24, !dbg !13589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.243, i32 0, i32 0), i32 noundef 39) #24, !dbg !13589
  unreachable, !dbg !13589

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13591, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()) #23, !dbg !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #23, !dbg !13599
  tail call fastcc void @k_cpu_idle() #25, !dbg !13600
  br label %10, !dbg !13601, !llvm.loop !13602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13604 {
  tail call void @arch_cpu_idle() #24, !dbg !13605
  ret void, !dbg !13606
}

; Function Attrs: optsize
declare !dbg !13607 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !13608 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13612, metadata !DIExpression()), !dbg !13616
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13613, metadata !DIExpression()), !dbg !13616
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13617
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13617
  %5 = load i8, i8* %4, align 2, !dbg !13617
  call void @llvm.dbg.value(metadata i8 %5, metadata !13614, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13616
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13618
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13618
  %8 = load i8, i8* %7, align 2, !dbg !13618
  call void @llvm.dbg.value(metadata i8 %8, metadata !13615, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13616
  %9 = icmp eq i8 %8, %5, !dbg !13619
  %10 = sext i8 %5 to i32, !dbg !13621
  %11 = sext i8 %8 to i32, !dbg !13621
  %12 = sub nsw i32 %11, %10, !dbg !13621
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13621
  ret i32 %13, !dbg !13622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13627, metadata !DIExpression()), !dbg !13628
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !13629
  %3 = icmp eq i32 %2, 0, !dbg !13631
  br i1 %3, label %8, label %4, !dbg !13632

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !13633
  %6 = add i32 %5, %2, !dbg !13635
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13636
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !13637
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !13638
  br label %8, !dbg !13639

8:                                                ; preds = %4, %1
  ret void, !dbg !13640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !13641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13645, metadata !DIExpression()), !dbg !13647
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13648
  call void @llvm.dbg.value(metadata i32 %1, metadata !13646, metadata !DIExpression()), !dbg !13647
  ret i32 %1, !dbg !13649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13654, metadata !DIExpression()), !dbg !13663
  call void @llvm.dbg.value(metadata i32 %1, metadata !13655, metadata !DIExpression()), !dbg !13663
  call void @llvm.dbg.value(metadata i32 0, metadata !13656, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !13672
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13674, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !13681
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !13681
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !13672
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13682
  br i1 %4, label %6, label %5, !dbg !13685

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !13686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !13686
  unreachable, !dbg !13686

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !13681
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !13672
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13688
  call void @llvm.dbg.value(metadata i32 undef, metadata !13662, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.value(metadata i32 undef, metadata !13656, metadata !DIExpression()), !dbg !13664
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13689
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !13692
  %8 = icmp sgt i32 %0, 0, !dbg !13693
  %9 = icmp sgt i32 %7, 2, !dbg !13695
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13695
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13695
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13696
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13697
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13698
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !13705
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !13705
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13707
  br i1 %12, label %14, label %13, !dbg !13710

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !13711
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !13711
  unreachable, !dbg !13711

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13674
  call void @llvm.dbg.value(metadata i32 %15, metadata !13677, metadata !DIExpression()) #23, !dbg !13681
  call void @llvm.dbg.value(metadata i32 %15, metadata !13671, metadata !DIExpression()) #23, !dbg !13672
  call void @llvm.dbg.value(metadata i32 %15, metadata !13662, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !13705
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !13716
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13718, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !13656, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.value(metadata i32 undef, metadata !13656, metadata !DIExpression()), !dbg !13664
  ret void, !dbg !13720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !13721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13723, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 %0, metadata !13725, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13740
  call void @llvm.dbg.value(metadata i32 1000, metadata !13728, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.value(metadata i32 10000, metadata !13729, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.value(metadata i8 1, metadata !13730, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.value(metadata i1 true, metadata !13731, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13740
  call void @llvm.dbg.value(metadata i1 true, metadata !13732, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13740
  call void @llvm.dbg.value(metadata i8 0, metadata !13733, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.value(metadata i1 true, metadata !13734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13740
  call void @llvm.dbg.value(metadata i1 false, metadata !13735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13740
  call void @llvm.dbg.value(metadata i64 0, metadata !13736, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.value(metadata i64 0, metadata !13736, metadata !DIExpression()), !dbg !13740
  %2 = mul i32 %0, 10, !dbg !13742
  ret i32 %2, !dbg !13748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13751, metadata !DIExpression()), !dbg !13753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !13754
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13756, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !13758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !13758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !13754
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13759
  br i1 %3, label %5, label %4, !dbg !13760

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !13761
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13761
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !13761
  unreachable, !dbg !13761

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13756
  call void @llvm.dbg.value(metadata i32 %6, metadata !13677, metadata !DIExpression()) #23, !dbg !13758
  call void @llvm.dbg.value(metadata i32 %6, metadata !13671, metadata !DIExpression()) #23, !dbg !13754
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13762
  call void @llvm.dbg.value(metadata i32 %6, metadata !13752, metadata !DIExpression()), !dbg !13753
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13763
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13765
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13766
  br i1 %9, label %10, label %14, !dbg !13767

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13768
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !13770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !13770
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13772
  br i1 %11, label %13, label %12, !dbg !13773

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !13774
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13774
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !13774
  unreachable, !dbg !13774

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13699, metadata !DIExpression()) #23, !dbg !13770
  call void @llvm.dbg.value(metadata i32 %6, metadata !13713, metadata !DIExpression()) #23, !dbg !13775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13777, !srcloc !13719
  br label %33, !dbg !13778

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13779
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !13780
  %16 = icmp eq i32 %15, 0, !dbg !13780
  br i1 %16, label %27, label %17, !dbg !13782

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !13783
  br i1 %18, label %19, label %27, !dbg !13784

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13785
  %21 = icmp sgt i32 %20, %0, !dbg !13788
  br i1 %21, label %25, label %22, !dbg !13789

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13790
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %24, metadata !13752, metadata !DIExpression()), !dbg !13753
  br label %28, !dbg !13792

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13793
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13793
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13795
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13753
  call void @llvm.dbg.value(metadata i32 %29, metadata !13752, metadata !DIExpression()), !dbg !13753
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !13797
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !13797
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13799
  br i1 %30, label %32, label %31, !dbg !13800

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !13801
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !13801
  unreachable, !dbg !13801

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13699, metadata !DIExpression()) #23, !dbg !13797
  call void @llvm.dbg.value(metadata i32 %29, metadata !13713, metadata !DIExpression()) #23, !dbg !13802
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13804, !srcloc !13719
  br label %33, !dbg !13805

33:                                               ; preds = %32, %13
  ret void, !dbg !13805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !13806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13810, metadata !DIExpression()), !dbg !13812
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !13813
  %3 = icmp eq i32 %2, 0, !dbg !13813
  br i1 %3, label %16, label %4, !dbg !13814

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !13815
  br i1 %5, label %16, label %6, !dbg !13816

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13817
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13817
  %9 = load i8, i8* %8, align 2, !dbg !13817
  %10 = sext i8 %9 to i32, !dbg !13818
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13819
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !13820
  br i1 %12, label %16, label %13, !dbg !13821

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !13822
  %15 = xor i1 %14, true, !dbg !13823
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13812
  call void @llvm.dbg.value(metadata i1 %17, metadata !13811, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13812
  ret i1 %17, !dbg !13824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13825 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13829, metadata !DIExpression()), !dbg !13831
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13832
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13830, metadata !DIExpression()), !dbg !13831
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !13833
  br i1 %3, label %5, label %4, !dbg !13835

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !13836
  br label %5, !dbg !13838

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13829, metadata !DIExpression()), !dbg !13831
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13839
  ret i32 %6, !dbg !13840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13841 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13843, metadata !DIExpression()), !dbg !13845
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13846
  %3 = load i8, i8* %2, align 1, !dbg !13846
  call void @llvm.dbg.value(metadata i8 %3, metadata !13844, metadata !DIExpression()), !dbg !13845
  %4 = and i8 %3, 31, !dbg !13847
  %5 = icmp ne i8 %4, 0, !dbg !13848
  ret i1 %5, !dbg !13849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13852, metadata !DIExpression()), !dbg !13853
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13854
  br i1 %2, label %3, label %7, !dbg !13856

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13857, metadata !DIExpression()) #23, !dbg !13860
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13863
  %5 = load i8, i8* %4, align 1, !dbg !13864
  %6 = and i8 %5, 127, !dbg !13864
  store i8 %6, i8* %4, align 1, !dbg !13864
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13865, metadata !DIExpression()) #23, !dbg !13868
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13872
  br label %7, !dbg !13873

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13874, metadata !DIExpression()) #23, !dbg !13877
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13879
  %9 = load i8, i8* %8, align 1, !dbg !13880
  %10 = or i8 %9, -128, !dbg !13880
  store i8 %10, i8* %8, align 1, !dbg !13880
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13881, metadata !DIExpression()) #23, !dbg !13884
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13888, metadata !DIExpression()) #23, !dbg !13896
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13894, metadata !DIExpression()) #23, !dbg !13896
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !13898
  br i1 %11, label %12, label %13, !dbg !13901

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !13902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !13902
  unreachable, !dbg !13902

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13904
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13895, metadata !DIExpression()) #23, !dbg !13896
  %15 = icmp eq %struct._dnode* %14, null, !dbg !13906
  br i1 %15, label %26, label %16, !dbg !13904

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13895, metadata !DIExpression()) #23, !dbg !13896
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !13908
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !13895, metadata !DIExpression()) #23, !dbg !13896
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !13909
  %20 = icmp sgt i32 %19, 0, !dbg !13912
  br i1 %20, label %21, label %23, !dbg !13913

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13914
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !13916
  br label %28, !dbg !13917

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !13906
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13895, metadata !DIExpression()) #23, !dbg !13896
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13906
  br i1 %25, label %26, label %16, !dbg !13904, !llvm.loop !13918

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13920
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !13921
  br label %28, !dbg !13922

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13923
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !13924
  %31 = zext i1 %30 to i32, !dbg !13924
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !13925
  ret void, !dbg !13926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !13927 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13929, metadata !DIExpression()), !dbg !13930
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !13931
  ret i1 %2, !dbg !13932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13933 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13935, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13936, metadata !DIExpression()), !dbg !13937
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !13938
  br i1 %3, label %4, label %5, !dbg !13941

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1139) #24, !dbg !13942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1139) #24, !dbg !13942
  unreachable, !dbg !13942

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13944
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !13945
  ret void, !dbg !13946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !13947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13949, metadata !DIExpression()), !dbg !13950
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13951
  ret i1 %2, !dbg !13952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !13953 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13957, metadata !DIExpression()), !dbg !13958
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !13959
  br i1 %2, label %6, label %3, !dbg !13959

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13960
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13960
  br label %6, !dbg !13959

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13959
  ret %struct._dnode* %7, !dbg !13961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !13962 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13966, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13967, metadata !DIExpression()), !dbg !13970
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13971
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13971
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13968, metadata !DIExpression()), !dbg !13970
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13972
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13973
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13974
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13975
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13976
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13977
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13978
  ret void, !dbg !13979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !13980 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13984, metadata !DIExpression()), !dbg !13986
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13985, metadata !DIExpression()), !dbg !13986
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13987
  br i1 %3, label %6, label %4, !dbg !13988

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !13989
  br label %6, !dbg !13988

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13988
  ret %struct._dnode* %7, !dbg !13990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !13991 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13995, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13996, metadata !DIExpression()), !dbg !13998
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13999
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13999
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13997, metadata !DIExpression()), !dbg !13998
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14000
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14001
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14002
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14003
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14004
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14005
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14006
  ret void, !dbg !14007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14010, metadata !DIExpression()), !dbg !14012
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14013
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14020, metadata !DIExpression()) #23, !dbg !14022
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14023
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14024
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14024
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14011, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14025, metadata !DIExpression()) #23, !dbg !14031
  call void @llvm.dbg.value(metadata i32 %0, metadata !14030, metadata !DIExpression()) #23, !dbg !14031
  %6 = icmp eq i32 %0, 0, !dbg !14034
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14036
  br i1 %6, label %8, label %18, !dbg !14037

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14038
  br i1 %9, label %10, label %11, !dbg !14041

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 137) #24, !dbg !14042
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !14042
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 137) #24, !dbg !14042
  unreachable, !dbg !14042

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !14044
  br i1 %12, label %18, label %13, !dbg !14046

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14047
  br i1 %14, label %18, label %15, !dbg !14049

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !14050
  %17 = icmp eq i32 %16, 0, !dbg !14050
  br i1 %17, label %21, label %18, !dbg !14052

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14053
  br i1 %19, label %21, label %20, !dbg !14056

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14057
  br label %21, !dbg !14059

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14036
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14036
  ret void, !dbg !14060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !14061 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14065, metadata !DIExpression()), !dbg !14068
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14066, metadata !DIExpression()), !dbg !14068
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !14069
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14067, metadata !DIExpression()), !dbg !14068
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14066, metadata !DIExpression()), !dbg !14068
  ret %struct.k_thread* %3, !dbg !14070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14071 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14073, metadata !DIExpression()), !dbg !14074
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14075
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14076
  %4 = xor i1 %3, true, !dbg !14077
  ret i1 %4, !dbg !14078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14081, metadata !DIExpression()), !dbg !14082
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14083
  %3 = load i16, i16* %2, align 2, !dbg !14083
  %4 = icmp ult i16 %3, 128, !dbg !14084
  %5 = zext i1 %4 to i32, !dbg !14084
  ret i32 %5, !dbg !14085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14086 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14092, metadata !DIExpression()), !dbg !14093
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14094
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14095
  %4 = xor i1 %3, true, !dbg !14096
  ret i1 %4, !dbg !14097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14098 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14104, metadata !DIExpression()), !dbg !14105
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14106
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14106
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14107
  ret i1 %4, !dbg !14108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14109 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14111, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14112, metadata !DIExpression()), !dbg !14113
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14114
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14114
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14115
  br i1 %5, label %9, label %6, !dbg !14116

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14117
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14117
  br label %9, !dbg !14116

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14116
  ret %struct._dnode* %10, !dbg !14118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14119 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14123, metadata !DIExpression()), !dbg !14124
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14125
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14125
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14126
  ret i1 %4, !dbg !14127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !14128 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14132, metadata !DIExpression()), !dbg !14135
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14136
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14136
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14133, metadata !DIExpression()), !dbg !14135
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14137
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14137
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14134, metadata !DIExpression()), !dbg !14135
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14138
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14139
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14140
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14141
  tail call fastcc void @sys_dnode_init.254(%struct._dnode* noundef %0) #25, !dbg !14142
  ret void, !dbg !14143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.254(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14144 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14146, metadata !DIExpression()), !dbg !14147
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14148
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14149
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14150
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14151
  ret void, !dbg !14152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !14153 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14157, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.value(metadata i32 %1, metadata !14158, metadata !DIExpression()), !dbg !14159
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14160
  %4 = load i8, i8* %3, align 1, !dbg !14160
  %5 = zext i8 %4 to i32, !dbg !14161
  %6 = and i32 %5, %1, !dbg !14162
  %7 = icmp ne i32 %6, 0, !dbg !14163
  ret i1 %7, !dbg !14164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14169, metadata !DIExpression()), !dbg !14171
  call void @llvm.dbg.value(metadata i32 %1, metadata !14170, metadata !DIExpression()), !dbg !14171
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14172
  ret i1 %3, !dbg !14173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14176, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i32 %1, metadata !14177, metadata !DIExpression()), !dbg !14178
  %3 = icmp slt i32 %0, %1, !dbg !14179
  ret i1 %3, !dbg !14180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14183, metadata !DIExpression()), !dbg !14187
  call void @llvm.dbg.value(metadata i32 0, metadata !14184, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14189
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14191, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14193
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14193
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14189
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14194
  br i1 %3, label %5, label %4, !dbg !14195

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14196
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14196
  unreachable, !dbg !14196

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14193
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14189
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14197
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14184, metadata !DIExpression()), !dbg !14188
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14198
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14203
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14205
  br i1 %6, label %8, label %7, !dbg !14206

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14207
  unreachable, !dbg !14207

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14191
  call void @llvm.dbg.value(metadata i32 %9, metadata !13677, metadata !DIExpression()) #23, !dbg !14193
  call void @llvm.dbg.value(metadata i32 %9, metadata !13671, metadata !DIExpression()) #23, !dbg !14189
  call void @llvm.dbg.value(metadata i32 %9, metadata !14186, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14203
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14208
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14210, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !14184, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14184, metadata !DIExpression()), !dbg !14188
  ret void, !dbg !14211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14212 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()), !dbg !14215
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14216
  br i1 %2, label %27, label %3, !dbg !14218

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14219
  br i1 %4, label %5, label %27, !dbg !14220

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13874, metadata !DIExpression()) #23, !dbg !14221
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14224
  %7 = load i8, i8* %6, align 1, !dbg !14225
  %8 = or i8 %7, -128, !dbg !14225
  store i8 %8, i8* %6, align 1, !dbg !14225
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13881, metadata !DIExpression()) #23, !dbg !14226
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13888, metadata !DIExpression()) #23, !dbg !14228
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13894, metadata !DIExpression()) #23, !dbg !14228
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14230
  br i1 %9, label %10, label %11, !dbg !14231

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !14232
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !14232
  unreachable, !dbg !14232

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14233
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13895, metadata !DIExpression()) #23, !dbg !14228
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14234
  br i1 %13, label %24, label %14, !dbg !14233

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13895, metadata !DIExpression()) #23, !dbg !14228
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14235
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13895, metadata !DIExpression()) #23, !dbg !14228
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !14236
  %18 = icmp sgt i32 %17, 0, !dbg !14237
  br i1 %18, label %19, label %21, !dbg !14238

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14239
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !14240
  br label %26, !dbg !14241

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !14234
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !13895, metadata !DIExpression()) #23, !dbg !14228
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14234
  br i1 %23, label %24, label %14, !dbg !14233, !llvm.loop !14242

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14244
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !14245
  br label %26, !dbg !14246

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14247
  br label %27, !dbg !14248

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14250 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14252, metadata !DIExpression()), !dbg !14253
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14254
  br i1 %2, label %6, label %3, !dbg !14255

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14256
  %5 = xor i1 %4, true, !dbg !14255
  br label %6, !dbg !14255

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14260, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata i32 0, metadata !14261, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14266
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14268, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14270
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14270
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14266
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14271
  br i1 %3, label %5, label %4, !dbg !14272

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14273
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14273
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14273
  unreachable, !dbg !14273

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14270
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14266
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14263, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata i32 undef, metadata !14261, metadata !DIExpression()), !dbg !14265
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14275
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14278
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14280
  br i1 %6, label %8, label %7, !dbg !14281

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14282
  unreachable, !dbg !14282

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14268
  call void @llvm.dbg.value(metadata i32 %9, metadata !13677, metadata !DIExpression()) #23, !dbg !14270
  call void @llvm.dbg.value(metadata i32 %9, metadata !13671, metadata !DIExpression()) #23, !dbg !14266
  call void @llvm.dbg.value(metadata i32 %9, metadata !14263, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14278
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14283
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14285, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !14261, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata i32 undef, metadata !14261, metadata !DIExpression()), !dbg !14265
  ret void, !dbg !14286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14289, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14292
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14294, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14296
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14296
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14292
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14297
  br i1 %3, label %5, label %4, !dbg !14298

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14299
  unreachable, !dbg !14299

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14294
  call void @llvm.dbg.value(metadata i32 %6, metadata !13677, metadata !DIExpression()) #23, !dbg !14296
  call void @llvm.dbg.value(metadata i32 %6, metadata !13671, metadata !DIExpression()) #23, !dbg !14292
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14300
  call void @llvm.dbg.value(metadata i32 %6, metadata !14290, metadata !DIExpression()), !dbg !14291
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14301
  br i1 %7, label %8, label %12, !dbg !14303

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14304
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14307
  br i1 %9, label %11, label %10, !dbg !14308

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14309
  unreachable, !dbg !14309

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13699, metadata !DIExpression()) #23, !dbg !14304
  call void @llvm.dbg.value(metadata i32 %6, metadata !13713, metadata !DIExpression()) #23, !dbg !14310
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14312, !srcloc !13719
  br label %14, !dbg !14313

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.259(%struct.k_thread* noundef %0) #25, !dbg !14314
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14315
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14316
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14316
  br label %14, !dbg !14317

14:                                               ; preds = %12, %11
  ret void, !dbg !14317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14320, metadata !DIExpression()), !dbg !14321
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14322
  %3 = load i8, i8* %2, align 1, !dbg !14322
  %4 = and i8 %3, 4, !dbg !14323
  %5 = icmp eq i8 %4, 0, !dbg !14324
  ret i1 %5, !dbg !14325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.259(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14326 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14328, metadata !DIExpression()), !dbg !14329
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14330
  %3 = load i8, i8* %2, align 1, !dbg !14331
  %4 = and i8 %3, -5, !dbg !14331
  store i8 %4, i8* %2, align 1, !dbg !14331
  ret void, !dbg !14332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14333 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14336, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14335, metadata !DIExpression()), !dbg !14337
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !14338
  br i1 %4, label %5, label %12, !dbg !14340

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !14341
  br i1 %6, label %7, label %12, !dbg !14342

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14343, metadata !DIExpression()) #23, !dbg !14349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14348, metadata !DIExpression()) #23, !dbg !14349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14352, metadata !DIExpression()) #23, !dbg !14357
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14359
  br i1 %8, label %10, label %9, !dbg !14362

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !14363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !14363
  unreachable, !dbg !14363

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14343, metadata !DIExpression()) #23, !dbg !14349
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14365
  br label %16, !dbg !14366

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13704, metadata !DIExpression()) #23, !dbg !14367
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14370
  br i1 %13, label %15, label %14, !dbg !14371

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14372
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14372
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14372
  unreachable, !dbg !14372

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13699, metadata !DIExpression()) #23, !dbg !14367
  call void @llvm.dbg.value(metadata i32 %3, metadata !13713, metadata !DIExpression()) #23, !dbg !14373
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14375, !srcloc !13719
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14381, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i32 %0, metadata !14383, metadata !DIExpression()), !dbg !14388
  %2 = icmp eq i32 %0, 0, !dbg !14390
  br i1 %2, label %3, label %6, !dbg !14391

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14392, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %4, metadata !14395, metadata !DIExpression()) #23, !dbg !14400
  %5 = icmp eq i32 %4, 0, !dbg !14401
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14382
  ret i1 %7, !dbg !14402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !14403 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14406
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14405, metadata !DIExpression()), !dbg !14407
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14408
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14409
  ret i1 %3, !dbg !14410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14413, metadata !DIExpression()), !dbg !14415
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !14416
  call void @llvm.dbg.value(metadata i32 %2, metadata !14414, metadata !DIExpression()), !dbg !14415
  ret i32 %2, !dbg !14417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14418 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14420, metadata !DIExpression()), !dbg !14424
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !14425
  call void @llvm.dbg.value(metadata i32 0, metadata !14421, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14427
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14429, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14431
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14431
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14427
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14432
  br i1 %4, label %6, label %5, !dbg !14433

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14434
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14434
  unreachable, !dbg !14434

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14429
  call void @llvm.dbg.value(metadata i32 %7, metadata !13677, metadata !DIExpression()) #23, !dbg !14431
  call void @llvm.dbg.value(metadata i32 %7, metadata !13671, metadata !DIExpression()) #23, !dbg !14427
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14435
  call void @llvm.dbg.value(metadata i32 %7, metadata !14423, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i32 undef, metadata !14421, metadata !DIExpression()), !dbg !14426
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14436
  br i1 %8, label %9, label %13, !dbg !14440

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13857, metadata !DIExpression()) #23, !dbg !14441
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14444
  %11 = load i8, i8* %10, align 1, !dbg !14445
  %12 = and i8 %11, 127, !dbg !14445
  store i8 %12, i8* %10, align 1, !dbg !14445
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13865, metadata !DIExpression()) #23, !dbg !14446
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14448
  br label %13, !dbg !14449

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !14450
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14451
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14452
  %16 = zext i1 %15 to i32, !dbg !14452
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !14453
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14454
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14456
  br i1 %17, label %19, label %18, !dbg !14457

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14458
  unreachable, !dbg !14458

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13699, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata i32 %7, metadata !13713, metadata !DIExpression()) #23, !dbg !14459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14461, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !14421, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i32 undef, metadata !14421, metadata !DIExpression()), !dbg !14426
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14462
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14464
  br i1 %21, label %22, label %23, !dbg !14465

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !14466
  br label %23, !dbg !14468

23:                                               ; preds = %22, %19
  ret void, !dbg !14469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14472, metadata !DIExpression()), !dbg !14473
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14474
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14475
  ret i32 %3, !dbg !14476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14477 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14479, metadata !DIExpression()), !dbg !14480
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14481
  %3 = load i8, i8* %2, align 1, !dbg !14482
  %4 = or i8 %3, 16, !dbg !14482
  store i8 %4, i8* %2, align 1, !dbg !14482
  ret void, !dbg !14483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14484 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14485, !srcloc !13680
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14485
  call void @llvm.dbg.value(metadata i32 %2, metadata !13677, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14487
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !14488
  ret void, !dbg !14489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14492, metadata !DIExpression()), !dbg !14493
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !14494
  br i1 %2, label %3, label %5, !dbg !14496

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14497
  br label %6, !dbg !14499

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13713, metadata !DIExpression()) #23, !dbg !14500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14503, !srcloc !13719
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14507, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14510
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14512, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14510
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14515
  br i1 %3, label %5, label %4, !dbg !14516

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14517
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14517
  unreachable, !dbg !14517

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14512
  call void @llvm.dbg.value(metadata i32 %6, metadata !13677, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 %6, metadata !13671, metadata !DIExpression()) #23, !dbg !14510
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14518
  call void @llvm.dbg.value(metadata i32 %6, metadata !14508, metadata !DIExpression()), !dbg !14509
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !14519
  br i1 %7, label %12, label %8, !dbg !14521

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14522
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14525
  br i1 %9, label %11, label %10, !dbg !14526

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14527
  unreachable, !dbg !14527

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13699, metadata !DIExpression()) #23, !dbg !14522
  call void @llvm.dbg.value(metadata i32 %6, metadata !13713, metadata !DIExpression()) #23, !dbg !14528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14530, !srcloc !13719
  br label %14, !dbg !14531

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !14532
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14533
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14534
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14534
  br label %14, !dbg !14535

14:                                               ; preds = %12, %11
  ret void, !dbg !14535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14538, metadata !DIExpression()), !dbg !14539
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14540
  %3 = load i8, i8* %2, align 1, !dbg !14540
  %4 = and i8 %3, 16, !dbg !14541
  %5 = icmp ne i8 %4, 0, !dbg !14542
  ret i1 %5, !dbg !14543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14546, metadata !DIExpression()), !dbg !14547
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14548
  %3 = load i8, i8* %2, align 1, !dbg !14549
  %4 = and i8 %3, -17, !dbg !14549
  store i8 %4, i8* %2, align 1, !dbg !14549
  ret void, !dbg !14550
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14551 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14561, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14559, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14560, metadata !DIExpression()), !dbg !14565
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14566
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14566
  br i1 %5, label %9, label %6, !dbg !14566

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !14566
  br i1 %7, label %9, label %8, !dbg !14569

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 773) #24, !dbg !14570
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 773) #24, !dbg !14570
  unreachable, !dbg !14570

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14562, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14573
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14575, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14573
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14578
  br i1 %11, label %13, label %12, !dbg !14579

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14580
  unreachable, !dbg !14580

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14573
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14564, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata i32 undef, metadata !14562, metadata !DIExpression()), !dbg !14572
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14582
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14585
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14587
  br i1 %14, label %16, label %15, !dbg !14588

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14589
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14589
  unreachable, !dbg !14589

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %17, metadata !13677, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata i32 %17, metadata !13671, metadata !DIExpression()) #23, !dbg !14573
  call void @llvm.dbg.value(metadata i32 %17, metadata !14564, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14585
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14590
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14592, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !14562, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata i32 undef, metadata !14562, metadata !DIExpression()), !dbg !14572
  ret void, !dbg !14593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14596, metadata !DIExpression()), !dbg !14597
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14598
  %3 = load i8, i8* %2, align 1, !dbg !14598
  %4 = and i8 %3, 1, !dbg !14599
  %5 = icmp ne i8 %4, 0, !dbg !14600
  ret i1 %5, !dbg !14601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14602 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14606, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14604, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14605, metadata !DIExpression()), !dbg !14607
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !14608
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !14609
  ret void, !dbg !14610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14615, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14616, metadata !DIExpression()), !dbg !14617
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !14618
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !14619
  %3 = icmp eq %union.anon* %1, null, !dbg !14620
  br i1 %3, label %24, label %4, !dbg !14622

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14623
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14625
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14626
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13888, metadata !DIExpression()) #23, !dbg !14627
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13894, metadata !DIExpression()) #23, !dbg !14627
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14629
  br i1 %7, label %8, label %9, !dbg !14630

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !14631
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !14631
  unreachable, !dbg !14631

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !14632
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13895, metadata !DIExpression()) #23, !dbg !14627
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14633
  br i1 %11, label %22, label %12, !dbg !14632

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13895, metadata !DIExpression()) #23, !dbg !14627
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14634
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13895, metadata !DIExpression()) #23, !dbg !14627
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !14635
  %16 = icmp sgt i32 %15, 0, !dbg !14636
  br i1 %16, label %17, label %19, !dbg !14637

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14638
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !14639
  br label %24, !dbg !14640

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !14633
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13895, metadata !DIExpression()) #23, !dbg !14627
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14633
  br i1 %21, label %22, label %12, !dbg !14632, !llvm.loop !14641

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14643
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !14644
  br label %24, !dbg !14645

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14647 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14652, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14651, metadata !DIExpression()), !dbg !14653
  %4 = icmp eq i64 %3, -1, !dbg !14654
  br i1 %4, label %6, label %5, !dbg !14656

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.261(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14657
  br label %6, !dbg !14659

6:                                                ; preds = %5, %2
  ret void, !dbg !14660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.261(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14661 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14664, metadata !DIExpression()), !dbg !14665
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14663, metadata !DIExpression()), !dbg !14665
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14666
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14667
  ret void, !dbg !14668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14669 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14671, metadata !DIExpression()), !dbg !14679
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14680
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14680
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14672, metadata !DIExpression()), !dbg !14679
  call void @llvm.dbg.value(metadata i32 0, metadata !14673, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14682
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14684, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14686
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14686
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14682
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14687
  br i1 %5, label %7, label %6, !dbg !14688

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14689
  unreachable, !dbg !14689

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14686
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14682
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14690
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14673, metadata !DIExpression()), !dbg !14681
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14691
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14692
  %10 = load i8, i8* %9, align 1, !dbg !14692
  %11 = and i8 %10, 40, !dbg !14693
  %12 = icmp eq i8 %11, 0, !dbg !14693
  call void @llvm.dbg.value(metadata i1 %12, metadata !14676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14694
  br i1 %12, label %13, label %20, !dbg !14695

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14696
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !14696
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !14696
  %17 = icmp eq %union.anon* %16, null, !dbg !14700
  br i1 %17, label %19, label %18, !dbg !14701

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !14702
  br label %19, !dbg !14704

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.259(%struct.k_thread* noundef nonnull %3) #25, !dbg !14705
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !14706
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !14707
  br label %20, !dbg !14708

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14709
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14711
  br i1 %21, label %23, label %22, !dbg !14712

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14713
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14713
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14713
  unreachable, !dbg !14713

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14684
  call void @llvm.dbg.value(metadata i32 %24, metadata !13677, metadata !DIExpression()) #23, !dbg !14686
  call void @llvm.dbg.value(metadata i32 %24, metadata !13671, metadata !DIExpression()) #23, !dbg !14682
  call void @llvm.dbg.value(metadata i32 %24, metadata !14675, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14714
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !14716, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !14673, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14673, metadata !DIExpression()), !dbg !14681
  ret void, !dbg !14717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14720, metadata !DIExpression()), !dbg !14721
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !14722
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14723
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !14724
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14725
  store %union.anon* null, %union.anon** %3, align 8, !dbg !14726
  ret void, !dbg !14727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14732, metadata !DIExpression()), !dbg !14733
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14734
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !14734
  %4 = icmp eq %union.anon* %3, null, !dbg !14734
  br i1 %4, label %5, label %6, !dbg !14737

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 726) #24, !dbg !14738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 726) #24, !dbg !14738
  unreachable, !dbg !14738

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !14740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14743, metadata !DIExpression()), !dbg !14744
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14745
  %3 = load i8, i8* %2, align 1, !dbg !14746
  %4 = and i8 %3, -3, !dbg !14746
  store i8 %4, i8* %2, align 1, !dbg !14746
  ret void, !dbg !14747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14750, metadata !DIExpression()), !dbg !14751
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14752
  br i1 %2, label %3, label %7, !dbg !14754

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13857, metadata !DIExpression()) #23, !dbg !14755
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14758
  %5 = load i8, i8* %4, align 1, !dbg !14759
  %6 = and i8 %5, 127, !dbg !14759
  store i8 %6, i8* %4, align 1, !dbg !14759
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13865, metadata !DIExpression()) #23, !dbg !14760
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14762
  br label %7, !dbg !14763

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14764
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14765
  %10 = zext i1 %9 to i32, !dbg !14765
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !14766
  ret void, !dbg !14767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14770, metadata !DIExpression()), !dbg !14771
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14772
  %3 = load i8, i8* %2, align 1, !dbg !14773
  %4 = or i8 %3, 2, !dbg !14773
  store i8 %4, i8* %2, align 1, !dbg !14773
  ret void, !dbg !14774
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14777, metadata !DIExpression()), !dbg !14781
  call void @llvm.dbg.value(metadata i32 0, metadata !14778, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14783
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14785, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14783
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14788
  br i1 %3, label %5, label %4, !dbg !14789

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14790
  unreachable, !dbg !14790

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14783
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14791
  call void @llvm.dbg.value(metadata i32 undef, metadata !14780, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14778, metadata !DIExpression()), !dbg !14782
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14792
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14795
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14797
  br i1 %6, label %8, label %7, !dbg !14798

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14799
  unreachable, !dbg !14799

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14785
  call void @llvm.dbg.value(metadata i32 %9, metadata !13677, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata i32 %9, metadata !13671, metadata !DIExpression()) #23, !dbg !14783
  call void @llvm.dbg.value(metadata i32 %9, metadata !14780, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14795
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14800
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14802, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !14778, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14778, metadata !DIExpression()), !dbg !14782
  ret void, !dbg !14803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14804 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14810, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.value(metadata i32 %0, metadata !14808, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14809, metadata !DIExpression()), !dbg !14815
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14816
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14817
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14818
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14819
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14820
  call void @llvm.dbg.value(metadata i32 %6, metadata !14811, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.value(metadata i32 0, metadata !14812, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14822
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14824, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14822
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14827
  br i1 %8, label %10, label %9, !dbg !14828

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14829
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14829
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14829
  unreachable, !dbg !14829

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14822
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14830
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i32 undef, metadata !14812, metadata !DIExpression()), !dbg !14821
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14831
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14835
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !14836
  br i1 %13, label %14, label %15, !dbg !14837

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14838
  br label %15, !dbg !14840

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14841
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14843
  br i1 %16, label %18, label %17, !dbg !14844

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14845
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14845
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14845
  unreachable, !dbg !14845

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %19, metadata !13677, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata i32 %19, metadata !13671, metadata !DIExpression()) #23, !dbg !14822
  call void @llvm.dbg.value(metadata i32 %19, metadata !14814, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14841
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14846
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !14848, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !14812, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.value(metadata i32 undef, metadata !14812, metadata !DIExpression()), !dbg !14821
  ret i32 %6, !dbg !14849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14850 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14855, metadata !DIExpression()), !dbg !14858
  call void @llvm.dbg.value(metadata i64 undef, metadata !14857, metadata !DIExpression()), !dbg !14858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14854, metadata !DIExpression()), !dbg !14858
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14856, metadata !DIExpression()), !dbg !14858
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14859
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14860
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !14861
  br i1 %6, label %7, label %8, !dbg !14864

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 846) #24, !dbg !14865
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 846) #24, !dbg !14865
  unreachable, !dbg !14865

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14867
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14869, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14867
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14872
  br i1 %10, label %12, label %11, !dbg !14873

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14874
  unreachable, !dbg !14874

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14871
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14867
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14875
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14876
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14877
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14352, metadata !DIExpression()) #23, !dbg !14878
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14880
  br i1 %14, label %16, label %15, !dbg !14881

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !14882
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14882
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !14882
  unreachable, !dbg !14882

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14343, metadata !DIExpression()) #23, !dbg !14883
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14348, metadata !DIExpression()) #23, !dbg !14883
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14352, metadata !DIExpression()) #23, !dbg !14885
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14887
  br i1 %17, label %19, label %18, !dbg !14888

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !14889
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14889
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !14889
  unreachable, !dbg !14889

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14343, metadata !DIExpression()) #23, !dbg !14883
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !14890
  ret i32 %21, !dbg !14891
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14892 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14896, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14897, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata i32 0, metadata !14898, metadata !DIExpression()), !dbg !14902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14903
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14905, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14907
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14907
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14903
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14908
  br i1 %3, label %5, label %4, !dbg !14909

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14910
  unreachable, !dbg !14910

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14907
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14903
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14911
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()), !dbg !14902
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14897, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14898, metadata !DIExpression()), !dbg !14902
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !14912
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14897, metadata !DIExpression()), !dbg !14901
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14915
  br i1 %8, label %10, label %9, !dbg !14917

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14918
  br label %10, !dbg !14920

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14921
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14923
  br i1 %11, label %13, label %12, !dbg !14924

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14925
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14925
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14925
  unreachable, !dbg !14925

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14905
  call void @llvm.dbg.value(metadata i32 %14, metadata !13677, metadata !DIExpression()) #23, !dbg !14907
  call void @llvm.dbg.value(metadata i32 %14, metadata !13671, metadata !DIExpression()) #23, !dbg !14903
  call void @llvm.dbg.value(metadata i32 %14, metadata !14900, metadata !DIExpression()), !dbg !14902
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14921
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14926
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14928, !srcloc !13719
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14897, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14898, metadata !DIExpression()), !dbg !14902
  ret %struct.k_thread* %7, !dbg !14929
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14930 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14932, metadata !DIExpression()), !dbg !14937
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14933, metadata !DIExpression()), !dbg !14937
  call void @llvm.dbg.value(metadata i32 0, metadata !14934, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14939
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14941, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14943
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14943
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14939
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14944
  br i1 %3, label %5, label %4, !dbg !14945

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14946
  unreachable, !dbg !14946

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14943
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14939
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14947
  call void @llvm.dbg.value(metadata i32 undef, metadata !14936, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14933, metadata !DIExpression()), !dbg !14937
  call void @llvm.dbg.value(metadata i32 undef, metadata !14934, metadata !DIExpression()), !dbg !14938
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !14948
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14933, metadata !DIExpression()), !dbg !14937
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14951
  br i1 %8, label %11, label %9, !dbg !14953

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14954
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !14956
  br label %11, !dbg !14957

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14958
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14960
  br i1 %12, label %14, label %13, !dbg !14961

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14962
  unreachable, !dbg !14962

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !14941
  call void @llvm.dbg.value(metadata i32 %15, metadata !13677, metadata !DIExpression()) #23, !dbg !14943
  call void @llvm.dbg.value(metadata i32 %15, metadata !13671, metadata !DIExpression()) #23, !dbg !14939
  call void @llvm.dbg.value(metadata i32 %15, metadata !14936, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14958
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14965, !srcloc !13719
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14933, metadata !DIExpression()), !dbg !14937
  call void @llvm.dbg.value(metadata i32 undef, metadata !14934, metadata !DIExpression()), !dbg !14938
  ret %struct.k_thread* %7, !dbg !14966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14967 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14969, metadata !DIExpression()), !dbg !14970
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14777, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 0, metadata !14778, metadata !DIExpression()) #23, !dbg !14973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !14974
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14976, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14974
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14979
  br i1 %3, label %5, label %4, !dbg !14980

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !14981
  unreachable, !dbg !14981

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !14978
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !14974
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14780, metadata !DIExpression()) #23, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !14778, metadata !DIExpression()) #23, !dbg !14973
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !14983
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !14984
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14986
  br i1 %6, label %8, label %7, !dbg !14987

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14988
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14988
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !14988
  unreachable, !dbg !14988

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14976
  call void @llvm.dbg.value(metadata i32 %9, metadata !13677, metadata !DIExpression()) #23, !dbg !14978
  call void @llvm.dbg.value(metadata i32 %9, metadata !13671, metadata !DIExpression()) #23, !dbg !14974
  call void @llvm.dbg.value(metadata i32 %9, metadata !14780, metadata !DIExpression()) #23, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !14984
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !14989
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14991, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !14778, metadata !DIExpression()) #23, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !14778, metadata !DIExpression()) #23, !dbg !14973
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !14992
  ret void, !dbg !14993
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14996, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata i32 %1, metadata !14997, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata i8 0, metadata !14998, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata i32 0, metadata !14999, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !15004
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15006, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15008
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15008
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15004
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15009
  br i1 %4, label %6, label %5, !dbg !15010

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15011
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15011
  unreachable, !dbg !15011

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15008
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15004
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15001, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.value(metadata i8 poison, metadata !14998, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !14999, metadata !DIExpression()), !dbg !15003
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15013
  call void @llvm.dbg.value(metadata i1 %9, metadata !14998, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15002
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15016

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13857, metadata !DIExpression()) #23, !dbg !15017
  %14 = load i8, i8* %7, align 1, !dbg !15023
  %15 = and i8 %14, 127, !dbg !15023
  store i8 %15, i8* %7, align 1, !dbg !15023
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13865, metadata !DIExpression()) #23, !dbg !15024
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15026
  store i8 %12, i8* %11, align 2, !dbg !15027
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13874, metadata !DIExpression()) #23, !dbg !15028
  %16 = load i8, i8* %7, align 1, !dbg !15030
  %17 = or i8 %16, -128, !dbg !15030
  store i8 %17, i8* %7, align 1, !dbg !15030
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13881, metadata !DIExpression()) #23, !dbg !15031
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13888, metadata !DIExpression()) #23, !dbg !15033
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13894, metadata !DIExpression()) #23, !dbg !15033
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15035
  br i1 %18, label %19, label %20, !dbg !15036

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !15037
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !15037
  unreachable, !dbg !15037

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15038
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13895, metadata !DIExpression()) #23, !dbg !15033
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15039
  br i1 %22, label %32, label %23, !dbg !15038

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13895, metadata !DIExpression()) #23, !dbg !15033
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15040
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !13895, metadata !DIExpression()) #23, !dbg !15033
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !15041
  %27 = icmp sgt i32 %26, 0, !dbg !15042
  br i1 %27, label %28, label %29, !dbg !15043

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !15044
  br label %33, !dbg !15045

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !15039
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !13895, metadata !DIExpression()) #23, !dbg !15033
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15039
  br i1 %31, label %32, label %23, !dbg !15038, !llvm.loop !15046

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !15048
  br label %33, !dbg !15049

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15050
  br label %35, !dbg !15051

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15052
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !15054
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15056
  br i1 %36, label %38, label %37, !dbg !15057

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15058
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15058
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15058
  unreachable, !dbg !15058

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15006
  call void @llvm.dbg.value(metadata i32 %39, metadata !13677, metadata !DIExpression()) #23, !dbg !15008
  call void @llvm.dbg.value(metadata i32 %39, metadata !13671, metadata !DIExpression()) #23, !dbg !15004
  call void @llvm.dbg.value(metadata i32 %39, metadata !15001, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15054
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !15059
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15061, !srcloc !13719
  call void @llvm.dbg.value(metadata i8 poison, metadata !14998, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !14999, metadata !DIExpression()), !dbg !15003
  ret i1 %9, !dbg !15062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15067, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i32 %1, metadata !15068, metadata !DIExpression()), !dbg !15070
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15071
  call void @llvm.dbg.value(metadata i1 %3, metadata !15069, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15070
  br i1 %3, label %4, label %12, !dbg !15072

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15074
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15075
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15075
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15075
  %9 = load i8, i8* %8, align 1, !dbg !15075
  %10 = icmp eq i8 %9, 0, !dbg !15076
  br i1 %10, label %11, label %12, !dbg !15077

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15078
  br label %12, !dbg !15080

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15081
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15082 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15084, metadata !DIExpression()), !dbg !15087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !15088
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15090, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15088
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15093
  br i1 %2, label %4, label %3, !dbg !15094

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15095
  unreachable, !dbg !15095

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15088
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15096
  call void @llvm.dbg.value(metadata i32 undef, metadata !15086, metadata !DIExpression()), !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !15084, metadata !DIExpression()), !dbg !15087
  tail call fastcc void @z_sched_lock() #25, !dbg !15097
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !15100
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15102
  br i1 %5, label %7, label %6, !dbg !15103

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15104
  unreachable, !dbg !15104

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15090
  call void @llvm.dbg.value(metadata i32 %8, metadata !13677, metadata !DIExpression()) #23, !dbg !15092
  call void @llvm.dbg.value(metadata i32 %8, metadata !13671, metadata !DIExpression()) #23, !dbg !15088
  call void @llvm.dbg.value(metadata i32 %8, metadata !15086, metadata !DIExpression()), !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15100
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !15105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15107, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !15084, metadata !DIExpression()), !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !15084, metadata !DIExpression()), !dbg !15087
  ret void, !dbg !15108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15109 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15110, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %1, metadata !14395, metadata !DIExpression()) #23, !dbg !15115
  %2 = icmp eq i32 %1, 0, !dbg !15116
  br i1 %2, label %4, label %3, !dbg !15117

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.269, i32 0, i32 0), i32 noundef 253) #24, !dbg !15118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.269, i32 0, i32 0), i32 noundef 253) #24, !dbg !15118
  unreachable, !dbg !15118

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15120
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15120
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15120
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15120
  %9 = load i8, i8* %8, align 1, !dbg !15120
  %10 = icmp eq i8 %9, 1, !dbg !15120
  br i1 %10, label %11, label %12, !dbg !15123

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.269, i32 0, i32 0), i32 noundef 254) #24, !dbg !15124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.269, i32 0, i32 0), i32 noundef 254) #24, !dbg !15124
  unreachable, !dbg !15124

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15126
  store i8 %13, i8* %8, align 1, !dbg !15126
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15127, !srcloc !15129
  ret void, !dbg !15130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15131 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15133, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !15137
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15139, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15141
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15141
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15137
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15142
  br i1 %2, label %4, label %3, !dbg !15143

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15144
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15144
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15144
  unreachable, !dbg !15144

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15141
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15137
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15145
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.value(metadata i32 undef, metadata !15133, metadata !DIExpression()), !dbg !15136
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15146
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15146
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15146
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15146
  %9 = load i8, i8* %8, align 1, !dbg !15146
  %10 = icmp eq i8 %9, 0, !dbg !15146
  br i1 %10, label %11, label %12, !dbg !15151

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 999) #24, !dbg !15152
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15152
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 999) #24, !dbg !15152
  unreachable, !dbg !15152

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15154, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %13, metadata !14395, metadata !DIExpression()) #23, !dbg !15159
  %14 = icmp eq i32 %13, 0, !dbg !15160
  br i1 %14, label %16, label %15, !dbg !15161

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15162
  unreachable, !dbg !15162

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15164
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15165
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15165
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15165
  %21 = load i8, i8* %20, align 1, !dbg !15166
  %22 = add i8 %21, 1, !dbg !15166
  store i8 %22, i8* %20, align 1, !dbg !15166
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15167
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !15168
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15170
  br i1 %23, label %25, label %24, !dbg !15171

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15172
  unreachable, !dbg !15172

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15139
  call void @llvm.dbg.value(metadata i32 %26, metadata !13677, metadata !DIExpression()) #23, !dbg !15141
  call void @llvm.dbg.value(metadata i32 %26, metadata !13671, metadata !DIExpression()) #23, !dbg !15137
  call void @llvm.dbg.value(metadata i32 %26, metadata !15135, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15168
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !15173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15175, !srcloc !13719
  call void @llvm.dbg.value(metadata i32 1, metadata !15133, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.value(metadata i32 undef, metadata !15133, metadata !DIExpression()), !dbg !15136
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15176
  ret void, !dbg !15177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !15178 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15179
  ret %struct.k_thread* %1, !dbg !15180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15181 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15185, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15186, metadata !DIExpression()), !dbg !15190
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15191
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15187, metadata !DIExpression()), !dbg !15190
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15192
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15188, metadata !DIExpression()), !dbg !15190
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %5, metadata !15189, metadata !DIExpression()), !dbg !15190
  %6 = icmp sgt i32 %5, 0, !dbg !15194
  br i1 %6, label %17, label %7, !dbg !15196

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15197
  br i1 %8, label %17, label %9, !dbg !15199

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15200
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15200
  %12 = load i32, i32* %11, align 8, !dbg !15200
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15202
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15202
  %15 = load i32, i32* %14, align 8, !dbg !15202
  %16 = icmp ult i32 %12, %15, !dbg !15203
  br label %17, !dbg !15204

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15205
  ret i1 %18, !dbg !15206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15207 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15224, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15225, metadata !DIExpression()), !dbg !15239
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15240
  br i1 %4, label %5, label %6, !dbg !15243

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15244
  unreachable, !dbg !15244

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15246
  %8 = load i32, i32* %7, align 4, !dbg !15247
  %9 = add nsw i32 %8, 1, !dbg !15247
  store i32 %9, i32* %7, align 4, !dbg !15247
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15248
  store i32 %8, i32* %10, align 8, !dbg !15249
  %11 = load i32, i32* %7, align 4, !dbg !15250
  %12 = icmp eq i32 %11, 0, !dbg !15251
  br i1 %12, label %13, label %35, !dbg !15252

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15253
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15253
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15227, metadata !DIExpression()), !dbg !15253
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15253
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15253
  %17 = load i32, i32* %16, align 4, !dbg !15253
  %18 = shl i32 %17, 2, !dbg !15253
  %19 = alloca i8, i32 %18, align 8, !dbg !15253
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15253
  store i8* %19, i8** %20, align 4, !dbg !15253
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15253
  %22 = alloca i8, i32 %17, align 8, !dbg !15253
  store i8* %22, i8** %21, align 4, !dbg !15253
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15253
  store i32 -1, i32* %23, align 4, !dbg !15253
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15254
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15236, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15226, metadata !DIExpression()), !dbg !15239
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15256
  br i1 %25, label %26, label %27, !dbg !15253

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15256
  br label %35, !dbg !15257

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15226, metadata !DIExpression()), !dbg !15239
  %29 = load i32, i32* %7, align 4, !dbg !15258
  %30 = add nsw i32 %29, 1, !dbg !15258
  store i32 %30, i32* %7, align 4, !dbg !15258
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15260
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15260
  store i32 %29, i32* %32, align 8, !dbg !15261
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15254
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15236, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15226, metadata !DIExpression()), !dbg !15239
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15256
  br i1 %34, label %26, label %27, !dbg !15253, !llvm.loop !15262

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15264
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15265
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !15266
  ret void, !dbg !15267
}

; Function Attrs: optsize
declare !dbg !15268 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15273 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15278, metadata !DIExpression()), !dbg !15280
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15279, metadata !DIExpression()), !dbg !15280
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15281
  br i1 %3, label %4, label %5, !dbg !15284

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15285
  unreachable, !dbg !15285

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15287
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15288
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !15289
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15290
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15290
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15292
  br i1 %10, label %11, label %13, !dbg !15293

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15294
  store i32 0, i32* %12, align 4, !dbg !15296
  br label %13, !dbg !15297

13:                                               ; preds = %11, %5
  ret void, !dbg !15298
}

; Function Attrs: optsize
declare !dbg !15299 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15304, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15305, metadata !DIExpression()), !dbg !15307
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15308
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !15309
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15306, metadata !DIExpression()), !dbg !15307
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15305, metadata !DIExpression()), !dbg !15307
  ret %struct.k_thread* %4, !dbg !15310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15311 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15315, metadata !DIExpression()), !dbg !15316
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !15317
  ret %struct.rbnode* %2, !dbg !15318
}

; Function Attrs: optsize
declare !dbg !15319 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15322 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15332, metadata !DIExpression()), !dbg !15336
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15337
  %3 = load i32, i32* %2, align 4, !dbg !15337
  %4 = icmp eq i32 %3, 0, !dbg !15339
  br i1 %4, label %10, label %5, !dbg !15340

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15333, metadata !DIExpression()), !dbg !15336
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15341, !range !7475
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15342
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15334, metadata !DIExpression()), !dbg !15336
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !15343
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15335, metadata !DIExpression()), !dbg !15336
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15333, metadata !DIExpression()), !dbg !15336
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15336
  ret %struct.k_thread* %11, !dbg !15344
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15345 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15349, metadata !DIExpression()), !dbg !15352
  call void @llvm.dbg.value(metadata i32 0, metadata !15350, metadata !DIExpression()), !dbg !15352
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15353
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15351, metadata !DIExpression()), !dbg !15352
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15354
  br i1 %3, label %8, label %4, !dbg !15355

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15356
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15358
  call void @llvm.dbg.value(metadata i32 1, metadata !15350, metadata !DIExpression()), !dbg !15352
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15353
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15351, metadata !DIExpression()), !dbg !15352
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15354
  br i1 %7, label %8, label %4, !dbg !15355, !llvm.loop !15359

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15352
  ret i32 %9, !dbg !15361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !15362 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15364, metadata !DIExpression()), !dbg !15365
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15366
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !15367
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15368
  ret %struct.k_thread* %4, !dbg !15369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !15370 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15379, metadata !DIExpression()), !dbg !15380
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15381
  tail call fastcc void @sys_dlist_init.274(%struct._dnode* noundef nonnull %2) #25, !dbg !15382
  ret void, !dbg !15383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.274(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15384 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15388, metadata !DIExpression()), !dbg !15389
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15390
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15391
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15392
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15393
  ret void, !dbg !15394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15395 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !15396
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !15397
  ret void, !dbg !15398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !15399 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15404, metadata !DIExpression()), !dbg !15405
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15406
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15406
  %4 = load i8, i8* %3, align 2, !dbg !15406
  %5 = sext i8 %4 to i32, !dbg !15407
  ret i32 %5, !dbg !15408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15409 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15413, metadata !DIExpression()), !dbg !15416
  call void @llvm.dbg.value(metadata i32 %1, metadata !15414, metadata !DIExpression()), !dbg !15416
  %3 = add i32 %1, 16, !dbg !15417
  %4 = icmp ult i32 %3, 31, !dbg !15417
  br i1 %4, label %6, label %5, !dbg !15417

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15421
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.278, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !15421
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15421
  unreachable, !dbg !15421

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15423, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %7, metadata !14395, metadata !DIExpression()) #23, !dbg !15428
  %8 = icmp eq i32 %7, 0, !dbg !15429
  br i1 %8, label %10, label %9, !dbg !15430

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15431
  unreachable, !dbg !15431

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15415, metadata !DIExpression()), !dbg !15416
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15433
  ret void, !dbg !15434
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15435 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !15436
  br i1 %1, label %8, label %2, !dbg !15437

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15438
  br i1 %3, label %8, label %4, !dbg !15439

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15440
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !15441
  %7 = xor i1 %6, true, !dbg !15439
  br label %8, !dbg !15439

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !15443 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15444, !range !6638
  %2 = icmp eq i8 %1, 0, !dbg !15444
  ret i1 %2, !dbg !15445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15446 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15449, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %1, metadata !14395, metadata !DIExpression()) #23, !dbg !15454
  %2 = icmp eq i32 %1, 0, !dbg !15455
  br i1 %2, label %4, label %3, !dbg !15456

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15457
  unreachable, !dbg !15457

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !15459
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15461, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15463
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15463
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15459
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15464
  br i1 %6, label %8, label %7, !dbg !15465

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15466
  unreachable, !dbg !15466

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15463
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15459
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15467
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()), !dbg !15468
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13857, metadata !DIExpression()) #23, !dbg !15472
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15474
  %11 = load i8, i8* %10, align 1, !dbg !15475
  %12 = and i8 %11, 127, !dbg !15475
  store i8 %12, i8* %10, align 1, !dbg !15475
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13865, metadata !DIExpression()) #23, !dbg !15476
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !15478
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15479
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13874, metadata !DIExpression()) #23, !dbg !15480
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15482
  %15 = load i8, i8* %14, align 1, !dbg !15483
  %16 = or i8 %15, -128, !dbg !15483
  store i8 %16, i8* %14, align 1, !dbg !15483
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13881, metadata !DIExpression()) #23, !dbg !15484
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13888, metadata !DIExpression()) #23, !dbg !15486
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13894, metadata !DIExpression()) #23, !dbg !15486
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !15488
  br i1 %17, label %18, label %19, !dbg !15489

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !15490
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 186) #24, !dbg !15490
  unreachable, !dbg !15490

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15491
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13895, metadata !DIExpression()) #23, !dbg !15486
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15492
  br i1 %21, label %32, label %22, !dbg !15491

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !13895, metadata !DIExpression()) #23, !dbg !15486
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15493
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13895, metadata !DIExpression()) #23, !dbg !15486
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !15494
  %26 = icmp sgt i32 %25, 0, !dbg !15495
  br i1 %26, label %27, label %29, !dbg !15496

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15497
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !15498
  br label %34, !dbg !15499

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !15492
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !13895, metadata !DIExpression()) #23, !dbg !15486
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15492
  br i1 %31, label %32, label %22, !dbg !15491, !llvm.loop !15500

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15502
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !15503
  br label %34, !dbg !15504

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !14343, metadata !DIExpression()) #23, !dbg !15506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14348, metadata !DIExpression()) #23, !dbg !15506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14352, metadata !DIExpression()) #23, !dbg !15508
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15510
  br i1 %35, label %37, label %36, !dbg !15511

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !15512
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !15512
  unreachable, !dbg !15512

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %38, metadata !13677, metadata !DIExpression()) #23, !dbg !15463
  call void @llvm.dbg.value(metadata i32 %38, metadata !13671, metadata !DIExpression()) #23, !dbg !15459
  call void @llvm.dbg.value(metadata i32 %38, metadata !15448, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !14343, metadata !DIExpression()) #23, !dbg !15506
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !15513
  ret void, !dbg !15514
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15515 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15519, metadata !DIExpression()), !dbg !15522
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15523, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %3, metadata !14395, metadata !DIExpression()) #23, !dbg !15528
  %4 = icmp eq i32 %3, 0, !dbg !15529
  br i1 %4, label %6, label %5, !dbg !15530

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15531
  unreachable, !dbg !15531

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15533
  br i1 %7, label %8, label %10, !dbg !15535

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15536
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !15538
  br label %15, !dbg !15539

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15520, metadata !DIExpression()), !dbg !15522
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !15540
  %12 = sext i32 %11 to i64, !dbg !15540
  call void @llvm.dbg.value(metadata i64 %12, metadata !15520, metadata !DIExpression()), !dbg !15522
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !15541
  %14 = trunc i64 %13 to i32, !dbg !15541
  call void @llvm.dbg.value(metadata i32 %14, metadata !15521, metadata !DIExpression()), !dbg !15522
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15522
  ret i32 %16, !dbg !15542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15547, metadata !DIExpression()), !dbg !15548
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15549, !srcloc !15551
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !15552
  ret void, !dbg !15553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15554 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15558, metadata !DIExpression()), !dbg !15562
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15563, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %2, metadata !14395, metadata !DIExpression()) #23, !dbg !15568
  %3 = icmp eq i32 %2, 0, !dbg !15569
  br i1 %3, label %5, label %4, !dbg !15570

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15571
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15571
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15571
  unreachable, !dbg !15571

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15573
  br i1 %6, label %7, label %8, !dbg !15575

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #25, !dbg !15576
  br label %43, !dbg !15578

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15560, metadata !DIExpression()), !dbg !15562
  %9 = icmp sgt i64 %0, -3, !dbg !15579
  br i1 %9, label %10, label %14, !dbg !15581

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15582
  %12 = trunc i64 %0 to i32, !dbg !15584
  %13 = add i32 %11, %12, !dbg !15584
  call void @llvm.dbg.value(metadata i32 %13, metadata !15559, metadata !DIExpression()), !dbg !15562
  br label %17, !dbg !15585

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15586
  %16 = sub i32 -2, %15, !dbg !15586
  call void @llvm.dbg.value(metadata i32 %16, metadata !15559, metadata !DIExpression()), !dbg !15562
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15588
  call void @llvm.dbg.value(metadata i32 %18, metadata !15559, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !15589
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15591, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15589
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15594
  br i1 %20, label %22, label %21, !dbg !15595

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15596
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15596
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15596
  unreachable, !dbg !15596

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15589
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15561, metadata !DIExpression()), !dbg !15562
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15598
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15599
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !15600
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15601
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15602
  tail call fastcc void @z_add_thread_timeout.261(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !15602
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15603
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !14343, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14348, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14352, metadata !DIExpression()) #23, !dbg !15607
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15609
  br i1 %27, label %29, label %28, !dbg !15610

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !15611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !15611
  unreachable, !dbg !15611

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15591
  call void @llvm.dbg.value(metadata i32 %30, metadata !13677, metadata !DIExpression()) #23, !dbg !15593
  call void @llvm.dbg.value(metadata i32 %30, metadata !13671, metadata !DIExpression()) #23, !dbg !15589
  call void @llvm.dbg.value(metadata i32 %30, metadata !15561, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i32 undef, metadata !14343, metadata !DIExpression()) #23, !dbg !15605
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !15612
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15613
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !15613
  br i1 %33, label %34, label %35, !dbg !15616

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.253, i32 0, i32 0)) #24, !dbg !15617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15617
  unreachable, !dbg !15617

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15619
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15620
  %38 = zext i32 %37 to i64, !dbg !15620
  %39 = sub nsw i64 %36, %38, !dbg !15621
  call void @llvm.dbg.value(metadata i64 %39, metadata !15558, metadata !DIExpression()), !dbg !15562
  %40 = icmp sgt i64 %39, 0, !dbg !15622
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15622
  %42 = trunc i64 %41 to i32, !dbg !15622
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15562
  ret i32 %44, !dbg !15623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15624 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15626, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata i64 %0, metadata !13725, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i32 10000, metadata !13728, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i32 1000, metadata !13729, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i8 1, metadata !13730, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i1 false, metadata !13731, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15628
  call void @llvm.dbg.value(metadata i1 false, metadata !13732, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15628
  call void @llvm.dbg.value(metadata i8 0, metadata !13733, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i1 false, metadata !13734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15628
  call void @llvm.dbg.value(metadata i1 true, metadata !13735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15628
  call void @llvm.dbg.value(metadata i64 0, metadata !13736, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i64 0, metadata !13736, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i64 %0, metadata !13725, metadata !DIExpression()), !dbg !15628
  %2 = udiv i64 %0, 10, !dbg !15630
  ret i64 %2, !dbg !15634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15635 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15636, !srcloc !15638
  tail call void @z_impl_k_yield() #25, !dbg !15639
  ret void, !dbg !15640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15645, metadata !DIExpression()), !dbg !15647
  %2 = sext i32 %0 to i64, !dbg !15648
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !15649
  call void @llvm.dbg.value(metadata i64 %3, metadata !15646, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15647
  %4 = shl i64 %3, 32, !dbg !15650
  %5 = ashr exact i64 %4, 32, !dbg !15650
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !15651
  call void @llvm.dbg.value(metadata i32 %6, metadata !15646, metadata !DIExpression()), !dbg !15647
  %7 = sext i32 %6 to i64, !dbg !15652
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !15653
  %9 = trunc i64 %8 to i32, !dbg !15653
  ret i32 %9, !dbg !15654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !15655 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15657, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata i64 %0, metadata !13725, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13728, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata i32 10000, metadata !13729, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata i8 1, metadata !13730, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata i1 false, metadata !13731, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15659
  call void @llvm.dbg.value(metadata i1 true, metadata !13732, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15659
  call void @llvm.dbg.value(metadata i8 0, metadata !13733, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata i1 false, metadata !13734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15659
  call void @llvm.dbg.value(metadata i1 true, metadata !13735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15659
  call void @llvm.dbg.value(metadata i64 0, metadata !13736, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata i64 0, metadata !13736, metadata !DIExpression()), !dbg !15659
  %2 = add i64 %0, 99, !dbg !15661
  call void @llvm.dbg.value(metadata i64 %2, metadata !13725, metadata !DIExpression()), !dbg !15659
  %3 = udiv i64 %2, 100, !dbg !15662
  ret i64 %3, !dbg !15663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15664 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15666, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.value(metadata i64 %0, metadata !13725, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i32 10000, metadata !13728, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13729, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i8 1, metadata !13730, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i1 false, metadata !13731, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15668
  call void @llvm.dbg.value(metadata i1 false, metadata !13732, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15668
  call void @llvm.dbg.value(metadata i8 0, metadata !13733, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i1 true, metadata !13734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15668
  call void @llvm.dbg.value(metadata i1 false, metadata !13735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15668
  call void @llvm.dbg.value(metadata i64 0, metadata !13736, metadata !DIExpression()), !dbg !15668
  call void @llvm.dbg.value(metadata i64 0, metadata !13736, metadata !DIExpression()), !dbg !15668
  %2 = mul i64 %0, 100, !dbg !15670
  ret i64 %2, !dbg !15672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15675, metadata !DIExpression()), !dbg !15676
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !15677
  br i1 %2, label %14, label %3, !dbg !15679

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15680
  %5 = icmp slt i32 %4, 0, !dbg !15682
  br i1 %5, label %6, label %10, !dbg !15683

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15684
  %8 = load i8, i8* %7, align 1, !dbg !15684
  %9 = icmp eq i8 %8, 16, !dbg !15687
  br i1 %9, label %10, label %14, !dbg !15688

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15689
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15690
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15691, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %11, metadata !14395, metadata !DIExpression()) #23, !dbg !15695
  %12 = icmp eq i32 %11, 0, !dbg !15696
  br i1 %12, label %13, label %14, !dbg !15697

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15698
  br label %14, !dbg !15700

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15702 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15704, metadata !DIExpression()), !dbg !15705
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15706
  %3 = load i8, i8* %2, align 1, !dbg !15706
  %4 = and i8 %3, 2, !dbg !15707
  %5 = icmp ne i8 %4, 0, !dbg !15708
  ret i1 %5, !dbg !15709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !15710 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15715
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15714, metadata !DIExpression()), !dbg !15716
  ret %struct.k_thread* %1, !dbg !15717
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15718 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15719, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %1, metadata !14395, metadata !DIExpression()) #23, !dbg !15722
  %2 = icmp eq i32 %1, 0, !dbg !15723
  br i1 %2, label %3, label %8, !dbg !15724

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15725
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !15726
  %6 = icmp ne i32 %5, 0, !dbg !15724
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15727
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15730, metadata !DIExpression()), !dbg !15732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !15733
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15735, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15733
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15738
  br i1 %3, label %5, label %4, !dbg !15739

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15740
  unreachable, !dbg !15740

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15735
  call void @llvm.dbg.value(metadata i32 %6, metadata !13677, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 %6, metadata !13671, metadata !DIExpression()) #23, !dbg !15733
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15741
  call void @llvm.dbg.value(metadata i32 %6, metadata !15731, metadata !DIExpression()), !dbg !15732
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15742
  %8 = load i8, i8* %7, align 4, !dbg !15742
  %9 = and i8 %8, 1, !dbg !15744
  %10 = icmp eq i8 %9, 0, !dbg !15745
  br i1 %10, label %15, label %11, !dbg !15746

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !15747
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15750
  br i1 %12, label %14, label %13, !dbg !15751

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15752
  unreachable, !dbg !15752

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13699, metadata !DIExpression()) #23, !dbg !15747
  call void @llvm.dbg.value(metadata i32 %6, metadata !13713, metadata !DIExpression()) #23, !dbg !15753
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15755, !srcloc !13719
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.287, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !15756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15756
  unreachable, !dbg !15756

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15760
  %17 = load i8, i8* %16, align 1, !dbg !15760
  %18 = and i8 %17, 8, !dbg !15762
  %19 = icmp eq i8 %18, 0, !dbg !15763
  br i1 %19, label %24, label %20, !dbg !15764

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !15765
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15768
  br i1 %21, label %23, label %22, !dbg !15769

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15770
  unreachable, !dbg !15770

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13699, metadata !DIExpression()) #23, !dbg !15765
  call void @llvm.dbg.value(metadata i32 %6, metadata !13713, metadata !DIExpression()) #23, !dbg !15771
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15773, !srcloc !13719
  br label %39, !dbg !15774

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !15775
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15776
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15778
  br i1 %26, label %27, label %35, !dbg !15779

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15780, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %28, metadata !14395, metadata !DIExpression()) #23, !dbg !15783
  %29 = icmp eq i32 %28, 0, !dbg !15784
  br i1 %29, label %30, label %35, !dbg !15785

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14343, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14348, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14352, metadata !DIExpression()) #23, !dbg !15789
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15791
  br i1 %31, label %33, label %32, !dbg !15792

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !15793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !15793
  unreachable, !dbg !15793

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14343, metadata !DIExpression()) #23, !dbg !15786
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !15794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15795
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.288, i32 0, i32 0)) #24, !dbg !15795
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15795
  unreachable, !dbg !15795

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !15799
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15801
  br i1 %36, label %38, label %37, !dbg !15802

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15803
  unreachable, !dbg !15803

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13699, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata i32 %6, metadata !13713, metadata !DIExpression()) #23, !dbg !15804
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15806, !srcloc !13719
  br label %39, !dbg !15807

39:                                               ; preds = %38, %23
  ret void, !dbg !15807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15808 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15810, metadata !DIExpression()), !dbg !15811
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15812
  %3 = load i8, i8* %2, align 1, !dbg !15812
  %4 = and i8 %3, 8, !dbg !15814
  %5 = icmp eq i8 %4, 0, !dbg !15815
  br i1 %5, label %6, label %20, !dbg !15816

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15817
  %8 = or i8 %7, 8, !dbg !15817
  store i8 %8, i8* %2, align 1, !dbg !15817
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !15819
  br i1 %9, label %10, label %12, !dbg !15821

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13857, metadata !DIExpression()) #23, !dbg !15822
  %11 = and i8 %8, 95, !dbg !15825
  store i8 %11, i8* %2, align 1, !dbg !15825
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13865, metadata !DIExpression()) #23, !dbg !15826
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !15828
  br label %12, !dbg !15829

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15830
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !15830
  %15 = icmp eq %union.anon* %14, null, !dbg !15832
  br i1 %15, label %17, label %16, !dbg !15833

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15834
  br label %17, !dbg !15836

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !15837
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15838
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !15839
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15840
  br label %20, !dbg !15841

20:                                               ; preds = %17, %1
  ret void, !dbg !15842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !15843 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15847, metadata !DIExpression()), !dbg !15849
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15850
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15848, metadata !DIExpression()), !dbg !15849
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15851
  br i1 %3, label %10, label %4, !dbg !15852

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15853
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15856, metadata !DIExpression()), !dbg !15862
  call void @llvm.dbg.value(metadata i32 0, metadata !15861, metadata !DIExpression()), !dbg !15862
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !15864
  store i32 0, i32* %7, align 4, !dbg !15865
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15866
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15850
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15848, metadata !DIExpression()), !dbg !15849
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15851
  br i1 %9, label %10, label %4, !dbg !15852, !llvm.loop !15867

10:                                               ; preds = %4, %1
  ret void, !dbg !15869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15870 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15875, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !15879
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15881, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15879
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15884
  br i1 %4, label %6, label %5, !dbg !15885

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15886
  unreachable, !dbg !15886

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15881
  call void @llvm.dbg.value(metadata i32 %7, metadata !13677, metadata !DIExpression()) #23, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %7, metadata !13671, metadata !DIExpression()) #23, !dbg !15879
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15887
  call void @llvm.dbg.value(metadata i32 %7, metadata !15876, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 0, metadata !15877, metadata !DIExpression()), !dbg !15878
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15888
  %9 = load i8, i8* %8, align 1, !dbg !15888
  %10 = and i8 %9, 8, !dbg !15890
  %11 = icmp eq i8 %10, 0, !dbg !15891
  br i1 %11, label %12, label %35, !dbg !15892

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !15875, metadata !DIExpression()), !dbg !15878
  %14 = icmp eq i64 %13, 0, !dbg !15893
  br i1 %14, label %35, label %15, !dbg !15895

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15896
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15898
  br i1 %17, label %35, label %18, !dbg !15899

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15900
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !15900
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !15901
  %22 = icmp eq %union.anon* %20, %21, !dbg !15902
  br i1 %22, label %35, label %23, !dbg !15903

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15904, !srcloc !14399
  call void @llvm.dbg.value(metadata i32 %24, metadata !14395, metadata !DIExpression()) #23, !dbg !15910
  %25 = icmp eq i32 %24, 0, !dbg !15911
  br i1 %25, label %27, label %26, !dbg !15912

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1809) #24, !dbg !15913
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.289, i32 0, i32 0)) #24, !dbg !15913
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 1809) #24, !dbg !15913
  unreachable, !dbg !15913

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15915
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15916
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #25, !dbg !15917
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15918
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !14343, metadata !DIExpression()) #23, !dbg !15920
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14348, metadata !DIExpression()) #23, !dbg !15920
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14352, metadata !DIExpression()) #23, !dbg !15922
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15924
  br i1 %31, label %33, label %32, !dbg !15925

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !15926
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15926
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 225) #24, !dbg !15926
  unreachable, !dbg !15926

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14343, metadata !DIExpression()) #23, !dbg !15920
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !15927
  call void @llvm.dbg.value(metadata i32 %34, metadata !15877, metadata !DIExpression()), !dbg !15878
  br label %40, !dbg !15928

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !15929
  call void @llvm.dbg.value(metadata i32 %36, metadata !15877, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !15930
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15932
  br i1 %37, label %39, label %38, !dbg !15933

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15934
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15934
  unreachable, !dbg !15934

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13699, metadata !DIExpression()) #23, !dbg !15930
  call void @llvm.dbg.value(metadata i32 %7, metadata !13713, metadata !DIExpression()) #23, !dbg !15935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15937, !srcloc !13719
  br label %40, !dbg !15938

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !15878
  ret i32 %41, !dbg !15939
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15940 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15944, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i32 %1, metadata !15945, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i8* %2, metadata !15946, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i8 0, metadata !15948, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i32 0, metadata !15949, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13665, metadata !DIExpression()) #23, !dbg !15954
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15956, !srcloc !13680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15954
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15959
  br i1 %5, label %7, label %6, !dbg !15960

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 148) #24, !dbg !15961
  unreachable, !dbg !15961

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13677, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata i32 undef, metadata !13671, metadata !DIExpression()) #23, !dbg !15954
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15962
  call void @llvm.dbg.value(metadata i32 undef, metadata !15951, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i8 poison, metadata !15948, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !15949, metadata !DIExpression()), !dbg !15953
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !15963
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15947, metadata !DIExpression()), !dbg !15952
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15966
  br i1 %10, label %15, label %11, !dbg !15968

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15969, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i32 %1, metadata !15975, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i8* %2, metadata !15976, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15856, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i32 %1, metadata !15861, metadata !DIExpression()), !dbg !15980
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !15982
  store i32 %1, i32* %12, align 4, !dbg !15983
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15984
  store i8* %2, i8** %13, align 4, !dbg !15985
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !15986
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !15987
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !15988
  call void @llvm.dbg.value(metadata i8 1, metadata !15948, metadata !DIExpression()), !dbg !15952
  br label %15, !dbg !15989

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !15948, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13704, metadata !DIExpression()) #23, !dbg !15990
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15992
  br i1 %16, label %18, label %17, !dbg !15993

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15994
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.249, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15994
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.246, i32 0, i32 0), i32 noundef 194) #24, !dbg !15994
  unreachable, !dbg !15994

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !15952
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !15956
  call void @llvm.dbg.value(metadata i32 %20, metadata !13677, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata i32 %20, metadata !13671, metadata !DIExpression()) #23, !dbg !15954
  call void @llvm.dbg.value(metadata i32 %20, metadata !15951, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !13713, metadata !DIExpression()) #23, !dbg !15995
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !15997, !srcloc !13719
  call void @llvm.dbg.value(metadata i8 poison, metadata !15948, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !15949, metadata !DIExpression()), !dbg !15953
  ret i1 %19, !dbg !15998
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15999 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16005, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i64 undef, metadata !16007, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16004, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16006, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i8** %4, metadata !16008, metadata !DIExpression()), !dbg !16010
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !16011
  call void @llvm.dbg.value(metadata i32 %6, metadata !16009, metadata !DIExpression()), !dbg !16010
  %7 = icmp eq i8** %4, null, !dbg !16012
  br i1 %7, label %12, label %8, !dbg !16014

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16015
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16017
  %11 = load i8*, i8** %10, align 4, !dbg !16017
  store i8* %11, i8** %4, align 4, !dbg !16018
  br label %12, !dbg !16019

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16021 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !16023
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !16024
  ret void, !dbg !16025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16026 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16036, metadata !DIExpression()), !dbg !16053
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16034, metadata !DIExpression()), !dbg !16053
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16035, metadata !DIExpression()), !dbg !16053
  %5 = icmp eq i64 %4, -1, !dbg !16054
  br i1 %5, label %63, label %6, !dbg !16056

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16057
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.294(%struct._dnode* noundef %7) #25, !dbg !16057
  br i1 %8, label %9, label %10, !dbg !16060

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.297, i32 0, i32 0), i32 noundef 99) #24, !dbg !16061
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.298, i32 0, i32 0)) #24, !dbg !16061
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.297, i32 0, i32 0), i32 noundef 99) #24, !dbg !16061
  unreachable, !dbg !16061

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16063
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16064
  call void @llvm.dbg.value(metadata i32 0, metadata !16037, metadata !DIExpression()), !dbg !16065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16073
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16075, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16082
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16082
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16073
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16083
  br i1 %13, label %15, label %14, !dbg !16086

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16087
  unreachable, !dbg !16087

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16075
  call void @llvm.dbg.value(metadata i32 %16, metadata !16078, metadata !DIExpression()) #23, !dbg !16082
  call void @llvm.dbg.value(metadata i32 %16, metadata !16072, metadata !DIExpression()) #23, !dbg !16073
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16089
  call void @llvm.dbg.value(metadata i32 %16, metadata !16043, metadata !DIExpression()), !dbg !16065
  call void @llvm.dbg.value(metadata i32 undef, metadata !16037, metadata !DIExpression()), !dbg !16065
  %17 = icmp slt i64 %4, -1, !dbg !16090
  br i1 %17, label %18, label %24, !dbg !16091

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16092
  %20 = add i64 %4, %19, !dbg !16093
  %21 = sub i64 -2, %20, !dbg !16093
  call void @llvm.dbg.value(metadata i64 %21, metadata !16047, metadata !DIExpression()), !dbg !16094
  %22 = icmp sgt i64 %21, 1, !dbg !16095
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16095
  br label %29, !dbg !16096

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16097
  %26 = tail call fastcc i32 @elapsed.302() #25, !dbg !16099
  %27 = sext i32 %26 to i64, !dbg !16099
  %28 = add nsw i64 %25, %27, !dbg !16100
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16101
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16102
  store i64 %30, i64* %31, align 8, !dbg !16103
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !16104
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16044, metadata !DIExpression()), !dbg !16106
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16107
  br i1 %33, label %48, label %34, !dbg !16107

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16108
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16044, metadata !DIExpression()), !dbg !16106
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16112
  %38 = load i64, i64* %37, align 8, !dbg !16112
  %39 = icmp slt i64 %35, %38, !dbg !16113
  br i1 %39, label %40, label %44, !dbg !16114

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16112
  %42 = sub nsw i64 %38, %35, !dbg !16115
  store i64 %42, i64* %41, align 8, !dbg !16115
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16117
  tail call fastcc void @sys_dlist_insert.303(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !16118
  br label %49, !dbg !16119

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16120
  store i64 %45, i64* %31, align 8, !dbg !16120
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !16121
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16044, metadata !DIExpression()), !dbg !16106
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16107
  br i1 %47, label %48, label %34, !dbg !16107, !llvm.loop !16122

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.304(%struct._dnode* noundef nonnull %7) #25, !dbg !16124
  br label %49, !dbg !16127

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !16128
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16129
  br i1 %51, label %52, label %59, !dbg !16130

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !16131
  call void @llvm.dbg.value(metadata i32 %53, metadata !16050, metadata !DIExpression()), !dbg !16132
  %54 = icmp ne i32 %53, 0, !dbg !16133
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16135
  br i1 %57, label %59, label %58, !dbg !16135

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !16136
  br label %59, !dbg !16138

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16145
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16147
  br i1 %60, label %62, label %61, !dbg !16150

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16151
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16151
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16151
  unreachable, !dbg !16151

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16139, metadata !DIExpression()) #23, !dbg !16145
  call void @llvm.dbg.value(metadata i32 %16, metadata !16153, metadata !DIExpression()) #23, !dbg !16156
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16158, !srcloc !16159
  call void @llvm.dbg.value(metadata i32 undef, metadata !16037, metadata !DIExpression()), !dbg !16065
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.294(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16161 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16167, metadata !DIExpression()), !dbg !16168
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16169
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16169
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16170
  ret i1 %4, !dbg !16171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.302() unnamed_addr #1 !dbg !16172 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16175
  %2 = icmp eq i32 %1, 0, !dbg !16176
  br i1 %2, label %3, label %5, !dbg !16175

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !16177
  br label %5, !dbg !16175

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16175
  ret i32 %6, !dbg !16178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16179 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.309() #25, !dbg !16185
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16183, metadata !DIExpression()), !dbg !16186
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16187
  ret %struct._timeout* %2, !dbg !16188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.303(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16189 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16193, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16194, metadata !DIExpression()), !dbg !16197
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16198
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16198
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16195, metadata !DIExpression()), !dbg !16197
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16199
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16200
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16201
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16202
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16203
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16204
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16205
  ret void, !dbg !16206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16207 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16211, metadata !DIExpression()), !dbg !16213
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16214
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.307(%struct._dnode* noundef %2) #25, !dbg !16215
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16212, metadata !DIExpression()), !dbg !16213
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16216
  ret %struct._timeout* %4, !dbg !16217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.304(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16218 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16223, metadata !DIExpression()), !dbg !16226
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16224, metadata !DIExpression()), !dbg !16226
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16227
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16225, metadata !DIExpression()), !dbg !16226
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16228
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16229
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16230
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16231
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16232
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16233
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16234
  ret void, !dbg !16235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16236 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16241
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16238, metadata !DIExpression()), !dbg !16242
  %2 = tail call fastcc i32 @elapsed.302() #25, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %2, metadata !16239, metadata !DIExpression()), !dbg !16242
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16244
  br i1 %3, label %14, label %4, !dbg !16246

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16247
  %6 = load i64, i64* %5, align 8, !dbg !16247
  %7 = sext i32 %2 to i64, !dbg !16248
  %8 = sub nsw i64 %6, %7, !dbg !16249
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16250
  br i1 %9, label %14, label %10, !dbg !16251

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16252
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16252
  %13 = trunc i64 %12 to i32, !dbg !16252
  call void @llvm.dbg.value(metadata i32 %13, metadata !16240, metadata !DIExpression()), !dbg !16242
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16254
  call void @llvm.dbg.value(metadata i32 %15, metadata !16240, metadata !DIExpression()), !dbg !16242
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16255
  %17 = icmp ne i32 %16, 0, !dbg !16257
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16258
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16258
  call void @llvm.dbg.value(metadata i32 %20, metadata !16240, metadata !DIExpression()), !dbg !16242
  ret i32 %20, !dbg !16259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.307(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16260 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16264, metadata !DIExpression()), !dbg !16266
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16265, metadata !DIExpression()), !dbg !16266
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16267
  br i1 %2, label %5, label %3, !dbg !16268

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.308(%struct._dnode* noundef nonnull %0) #25, !dbg !16269
  br label %5, !dbg !16268

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16268
  ret %struct._dnode* %6, !dbg !16270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.308(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16271 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16273, metadata !DIExpression()), !dbg !16275
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16274, metadata !DIExpression()), !dbg !16275
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16276
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16277
  br i1 %3, label %7, label %4, !dbg !16278

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16279
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16279
  br label %7, !dbg !16278

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16278
  ret %struct._dnode* %8, !dbg !16280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.309() unnamed_addr #10 !dbg !16281 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16285, metadata !DIExpression()), !dbg !16286
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.310() #25, !dbg !16287
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16287
  ret %struct._dnode* %3, !dbg !16288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.310() unnamed_addr #10 !dbg !16289 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16293, metadata !DIExpression()), !dbg !16294
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16295
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16296
  ret i1 %2, !dbg !16297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16298 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16302, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata i32 -22, metadata !16303, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata i32 0, metadata !16304, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16309
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16311, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16313
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16313
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16309
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16314
  br i1 %3, label %5, label %4, !dbg !16315

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16316
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16316
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16316
  unreachable, !dbg !16316

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16313
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16309
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16317
  call void @llvm.dbg.value(metadata i32 undef, metadata !16306, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata i32 -22, metadata !16303, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16304, metadata !DIExpression()), !dbg !16308
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16303, metadata !DIExpression()), !dbg !16307
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.294(%struct._dnode* noundef %6) #25, !dbg !16318
  br i1 %7, label %8, label %9, !dbg !16322

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !16323
  call void @llvm.dbg.value(metadata i32 0, metadata !16303, metadata !DIExpression()), !dbg !16307
  br label %9, !dbg !16325

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16307
  call void @llvm.dbg.value(metadata i32 %10, metadata !16303, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16326
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16328
  br i1 %11, label %13, label %12, !dbg !16329

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16330
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16330
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16330
  unreachable, !dbg !16330

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16311
  call void @llvm.dbg.value(metadata i32 %14, metadata !16078, metadata !DIExpression()) #23, !dbg !16313
  call void @llvm.dbg.value(metadata i32 %14, metadata !16072, metadata !DIExpression()) #23, !dbg !16309
  call void @llvm.dbg.value(metadata i32 %14, metadata !16306, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16326
  call void @llvm.dbg.value(metadata i32 undef, metadata !16153, metadata !DIExpression()) #23, !dbg !16331
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16333, !srcloc !16159
  call void @llvm.dbg.value(metadata i32 %10, metadata !16303, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16304, metadata !DIExpression()), !dbg !16308
  ret i32 %10, !dbg !16334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !16335 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16337, metadata !DIExpression()), !dbg !16338
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !16339
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16341
  br i1 %3, label %10, label %4, !dbg !16342

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16343
  %6 = load i64, i64* %5, align 8, !dbg !16343
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16345
  %8 = load i64, i64* %7, align 8, !dbg !16346
  %9 = add nsw i64 %8, %6, !dbg !16346
  store i64 %9, i64* %7, align 8, !dbg !16346
  br label %10, !dbg !16347

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16348
  tail call fastcc void @sys_dlist_remove.313(%struct._dnode* noundef %11) #25, !dbg !16349
  ret void, !dbg !16350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.313(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16351 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16355, metadata !DIExpression()), !dbg !16358
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16359
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16359
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16356, metadata !DIExpression()), !dbg !16358
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16360
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16360
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16357, metadata !DIExpression()), !dbg !16358
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16361
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16362
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16363
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16364
  tail call fastcc void @sys_dnode_init.314(%struct._dnode* noundef %0) #25, !dbg !16365
  ret void, !dbg !16366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.314(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16367 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16369, metadata !DIExpression()), !dbg !16370
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16371
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16372
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16373
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16374
  ret void, !dbg !16375
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16376 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16382, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i64 0, metadata !16383, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 0, metadata !16384, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16389
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16391, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16389
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16394
  br i1 %3, label %5, label %4, !dbg !16395

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16396
  unreachable, !dbg !16396

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16389
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16386, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i64 0, metadata !16383, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()), !dbg !16388
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16398
  call void @llvm.dbg.value(metadata i64 %6, metadata !16383, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16401
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16401
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16403
  br i1 %7, label %9, label %8, !dbg !16404

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16405
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16405
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16405
  unreachable, !dbg !16405

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16391
  call void @llvm.dbg.value(metadata i32 %10, metadata !16078, metadata !DIExpression()) #23, !dbg !16393
  call void @llvm.dbg.value(metadata i32 %10, metadata !16072, metadata !DIExpression()) #23, !dbg !16389
  call void @llvm.dbg.value(metadata i32 %10, metadata !16386, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16401
  call void @llvm.dbg.value(metadata i32 undef, metadata !16153, metadata !DIExpression()) #23, !dbg !16406
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16408, !srcloc !16159
  call void @llvm.dbg.value(metadata i64 %6, metadata !16383, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()), !dbg !16388
  ret i64 %6, !dbg !16409
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16410 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16412, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata i64 0, metadata !16413, metadata !DIExpression()), !dbg !16416
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.315(%struct._timeout* noundef %0) #25, !dbg !16417
  br i1 %2, label %21, label %3, !dbg !16419

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !16420
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16414, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata i64 0, metadata !16413, metadata !DIExpression()), !dbg !16416
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16422
  br i1 %5, label %16, label %6, !dbg !16424

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16414, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata i64 %8, metadata !16413, metadata !DIExpression()), !dbg !16416
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16425
  %10 = load i64, i64* %9, align 8, !dbg !16425
  %11 = add nsw i64 %10, %8, !dbg !16427
  call void @llvm.dbg.value(metadata i64 %11, metadata !16413, metadata !DIExpression()), !dbg !16416
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16428
  br i1 %12, label %16, label %13, !dbg !16430

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !16431
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16414, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata i64 %11, metadata !16413, metadata !DIExpression()), !dbg !16416
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16422
  br i1 %15, label %16, label %6, !dbg !16424, !llvm.loop !16432

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16416
  call void @llvm.dbg.value(metadata i64 %17, metadata !16413, metadata !DIExpression()), !dbg !16416
  %18 = tail call fastcc i32 @elapsed.302() #25, !dbg !16434
  %19 = sext i32 %18 to i64, !dbg !16434
  %20 = sub nsw i64 %17, %19, !dbg !16435
  br label %21, !dbg !16436

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16416
  ret i64 %22, !dbg !16437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.315(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16438 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16442, metadata !DIExpression()), !dbg !16443
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16444
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.294(%struct._dnode* noundef %2) #25, !dbg !16445
  %4 = xor i1 %3, true, !dbg !16446
  ret i1 %4, !dbg !16447
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16448 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16450, metadata !DIExpression()), !dbg !16455
  call void @llvm.dbg.value(metadata i64 0, metadata !16451, metadata !DIExpression()), !dbg !16455
  call void @llvm.dbg.value(metadata i32 0, metadata !16452, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16457
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16459, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16461
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16461
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16457
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16462
  br i1 %3, label %5, label %4, !dbg !16463

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16464
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16464
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16464
  unreachable, !dbg !16464

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16461
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16457
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !16454, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.value(metadata i64 0, metadata !16451, metadata !DIExpression()), !dbg !16455
  call void @llvm.dbg.value(metadata i32 undef, metadata !16452, metadata !DIExpression()), !dbg !16456
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16466
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16469
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16455
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16470
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16472
  br i1 %8, label %10, label %9, !dbg !16473

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16474
  unreachable, !dbg !16474

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16459
  call void @llvm.dbg.value(metadata i32 %11, metadata !16078, metadata !DIExpression()) #23, !dbg !16461
  call void @llvm.dbg.value(metadata i32 %11, metadata !16072, metadata !DIExpression()) #23, !dbg !16457
  call void @llvm.dbg.value(metadata i32 %11, metadata !16454, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16455
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16470
  call void @llvm.dbg.value(metadata i32 undef, metadata !16153, metadata !DIExpression()) #23, !dbg !16475
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16477, !srcloc !16159
  call void @llvm.dbg.value(metadata i32 undef, metadata !16452, metadata !DIExpression()), !dbg !16456
  %12 = add i64 %7, %6, !dbg !16478
  ret i64 %12, !dbg !16479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16480 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16482, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata i32 0, metadata !16483, metadata !DIExpression()), !dbg !16487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16488
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16490, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16488
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16493
  br i1 %2, label %4, label %3, !dbg !16494

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16495
  unreachable, !dbg !16495

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16488
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16485, metadata !DIExpression()), !dbg !16487
  call void @llvm.dbg.value(metadata i32 -1, metadata !16482, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata i32 undef, metadata !16483, metadata !DIExpression()), !dbg !16487
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !16497
  call void @llvm.dbg.value(metadata i32 %5, metadata !16482, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16500
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16502
  br i1 %6, label %8, label %7, !dbg !16503

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16504
  unreachable, !dbg !16504

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %9, metadata !16078, metadata !DIExpression()) #23, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %9, metadata !16072, metadata !DIExpression()) #23, !dbg !16488
  call void @llvm.dbg.value(metadata i32 %9, metadata !16485, metadata !DIExpression()), !dbg !16487
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16500
  call void @llvm.dbg.value(metadata i32 undef, metadata !16153, metadata !DIExpression()) #23, !dbg !16505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16507, !srcloc !16159
  call void @llvm.dbg.value(metadata i32 %5, metadata !16482, metadata !DIExpression()), !dbg !16486
  call void @llvm.dbg.value(metadata i32 undef, metadata !16483, metadata !DIExpression()), !dbg !16487
  ret i32 %5, !dbg !16508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16511, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.value(metadata i1 %1, metadata !16512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16521
  call void @llvm.dbg.value(metadata i32 0, metadata !16513, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16523
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16525, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16523
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16528
  br i1 %4, label %6, label %5, !dbg !16529

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16530
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16530
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16530
  unreachable, !dbg !16530

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16527
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16523
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16515, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 undef, metadata !16513, metadata !DIExpression()), !dbg !16522
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %7, metadata !16516, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i1 undef, metadata !16519, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16533
  %8 = icmp slt i32 %7, 2, !dbg !16534
  call void @llvm.dbg.value(metadata i1 %8, metadata !16520, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16533
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16535
  call void @llvm.dbg.value(metadata i1 %9, metadata !16519, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16533
  br i1 %10, label %14, label %11, !dbg !16535

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16537
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16537
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !16539
  br label %14, !dbg !16540

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16541
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16543
  br i1 %15, label %17, label %16, !dbg !16544

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16545
  unreachable, !dbg !16545

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16525
  call void @llvm.dbg.value(metadata i32 %18, metadata !16078, metadata !DIExpression()) #23, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %18, metadata !16072, metadata !DIExpression()) #23, !dbg !16523
  call void @llvm.dbg.value(metadata i32 %18, metadata !16515, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16541
  call void @llvm.dbg.value(metadata i32 undef, metadata !16153, metadata !DIExpression()) #23, !dbg !16546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16548, !srcloc !16159
  call void @llvm.dbg.value(metadata i32 1, metadata !16513, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 undef, metadata !16513, metadata !DIExpression()), !dbg !16522
  ret void, !dbg !16549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16554, metadata !DIExpression()), !dbg !16559
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !16560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16561
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16563, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16565
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16565
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16561
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16566
  br i1 %3, label %5, label %4, !dbg !16567

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16568
  unreachable, !dbg !16568

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16565
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16561
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16569
  call void @llvm.dbg.value(metadata i32 undef, metadata !16555, metadata !DIExpression()), !dbg !16559
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !16555, metadata !DIExpression()), !dbg !16559
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !16570
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16571
  br i1 %7, label %37, label %8, !dbg !16572

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16559
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16573
  %14 = load i64, i64* %13, align 8, !dbg !16573
  %15 = sext i32 %11 to i64, !dbg !16574
  %16 = icmp sgt i64 %14, %15, !dbg !16575
  br i1 %16, label %35, label %17, !dbg !16576

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16556, metadata !DIExpression()), !dbg !16577
  %18 = trunc i64 %14 to i32, !dbg !16578
  call void @llvm.dbg.value(metadata i32 %18, metadata !16558, metadata !DIExpression()), !dbg !16577
  %19 = sext i32 %18 to i64, !dbg !16579
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16580
  %21 = add i64 %20, %19, !dbg !16580
  store i64 %21, i64* @curr_tick, align 8, !dbg !16580
  store i64 0, i64* %13, align 8, !dbg !16581
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !16582
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16583
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16585
  br i1 %22, label %24, label %23, !dbg !16586

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16587
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16587
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16587
  unreachable, !dbg !16587

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16139, metadata !DIExpression()) #23, !dbg !16583
  call void @llvm.dbg.value(metadata i32 %12, metadata !16153, metadata !DIExpression()) #23, !dbg !16588
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16590, !srcloc !16159
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16591
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16591
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !16592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16593
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16595, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16593
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16598
  br i1 %28, label %30, label %29, !dbg !16599

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16600
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16600
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16600
  unreachable, !dbg !16600

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16593
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !16555, metadata !DIExpression()), !dbg !16559
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16602
  %32 = sub nsw i32 %31, %18, !dbg !16602
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !16555, metadata !DIExpression()), !dbg !16559
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !16570
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16571
  br i1 %34, label %37, label %8, !dbg !16572, !llvm.loop !16603

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16605
  store i64 %36, i64* %13, align 8, !dbg !16605
  br label %41, !dbg !16608

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16559
  %40 = sext i32 %39 to i64, !dbg !16609
  br label %41, !dbg !16609

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16609
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16610
  %45 = add i64 %44, %42, !dbg !16610
  store i64 %45, i64* @curr_tick, align 8, !dbg !16610
  store i32 0, i32* @announce_remaining, align 4, !dbg !16611
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !16612
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16614
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16616
  br i1 %47, label %49, label %48, !dbg !16617

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16618
  unreachable, !dbg !16618

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %50, metadata !16139, metadata !DIExpression()) #23, !dbg !16614
  call void @llvm.dbg.value(metadata i32 %50, metadata !16153, metadata !DIExpression()) #23, !dbg !16619
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !16621, !srcloc !16159
  ret void, !dbg !16622
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16623 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16627, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 0, metadata !16628, metadata !DIExpression()), !dbg !16632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16066, metadata !DIExpression()) #23, !dbg !16633
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16635, !srcloc !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16637
  call void @llvm.dbg.value(metadata i32 undef, metadata !16079, metadata !DIExpression()) #23, !dbg !16637
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16633
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16638
  br i1 %2, label %4, label %3, !dbg !16639

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #24, !dbg !16640
  unreachable, !dbg !16640

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16078, metadata !DIExpression()) #23, !dbg !16637
  call void @llvm.dbg.value(metadata i32 undef, metadata !16072, metadata !DIExpression()) #23, !dbg !16633
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16641
  call void @llvm.dbg.value(metadata i32 undef, metadata !16630, metadata !DIExpression()), !dbg !16632
  call void @llvm.dbg.value(metadata i64 0, metadata !16627, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 undef, metadata !16628, metadata !DIExpression()), !dbg !16632
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16642
  %6 = tail call fastcc i32 @elapsed.302() #25, !dbg !16645
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16631
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16144, metadata !DIExpression()) #23, !dbg !16646
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16648
  br i1 %7, label %9, label %8, !dbg !16649

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16650
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16650
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #24, !dbg !16650
  unreachable, !dbg !16650

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16635
  call void @llvm.dbg.value(metadata i32 %10, metadata !16078, metadata !DIExpression()) #23, !dbg !16637
  call void @llvm.dbg.value(metadata i32 %10, metadata !16072, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata i32 %10, metadata !16630, metadata !DIExpression()), !dbg !16632
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16631
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16631
  call void @llvm.dbg.value(metadata i32 undef, metadata !16139, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !16153, metadata !DIExpression()) #23, !dbg !16651
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16653, !srcloc !16159
  call void @llvm.dbg.value(metadata i32 undef, metadata !16628, metadata !DIExpression()), !dbg !16632
  %11 = sext i32 %6 to i64, !dbg !16645
  %12 = add i64 %5, %11, !dbg !16654
  ret i64 %12, !dbg !16655
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16656 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16657
  %2 = trunc i64 %1 to i32, !dbg !16658
  ret i32 %2, !dbg !16659
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16660 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16661
  ret i64 %1, !dbg !16662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16665, metadata !DIExpression()), !dbg !16672
  %2 = icmp eq i32 %0, 0, !dbg !16673
  br i1 %2, label %10, label %3, !dbg !16675

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.322() #25, !dbg !16676
  call void @llvm.dbg.value(metadata i32 %4, metadata !16666, metadata !DIExpression()), !dbg !16672
  %5 = mul i32 %0, 84, !dbg !16677
  call void @llvm.dbg.value(metadata i32 %5, metadata !16667, metadata !DIExpression()), !dbg !16672
  br label %6, !dbg !16678

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.322() #25, !dbg !16679
  call void @llvm.dbg.value(metadata i32 %7, metadata !16668, metadata !DIExpression()), !dbg !16680
  %8 = sub i32 %7, %4, !dbg !16681
  %9 = icmp ult i32 %8, %5, !dbg !16683
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.322() unnamed_addr #1 !dbg !16685 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.323() #25, !dbg !16686
  ret i32 %1, !dbg !16687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.323() unnamed_addr #1 !dbg !16688 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !16689
  ret i32 %1, !dbg !16690
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16691 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16695, metadata !DIExpression()), !dbg !16697
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16698

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !16699
  br label %14, !dbg !16703

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16696, metadata !DIExpression()), !dbg !16697
  %6 = icmp slt i64 %2, -1, !dbg !16704
  br i1 %6, label %7, label %9, !dbg !16707

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16708
  br label %14, !dbg !16709

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !16711
  %11 = icmp ugt i64 %2, 1, !dbg !16712
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16712
  %13 = add nsw i64 %10, %12, !dbg !16713
  br label %14, !dbg !16714

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16715
  ret i64 %15, !dbg !16716
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16717 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.326, i32 0, i32 0)) #24, !dbg !16719
  ret void, !dbg !16720
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!772, !2, !2348, !27, !270, !295, !2350, !2352, !2386, !2388, !305, !356, !2390, !2393, !2404, !2450, !2452, !2480, !2508, !2551, !2623, !2668, !385, !528, !2696, !564, !2701, !574, !599, !804, !2704, !942, !1008, !1311, !1535, !2743, !1648, !1738, !2745, !2831, !2896, !1788, !2899, !1795, !2171, !2917, !2191, !2919, !2309, !2922}
!llvm.ident = !{!2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924, !2924}
!llvm.module.flags = !{!2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "tthread", scope: !27, file: !125, line: 29, type: !141, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !122, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !108, !113, !114, !118, !119, !120}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !104, line: 22, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !109, line: 46, baseType: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!111 = !DISubroutineType(types: !112)
!112 = !{null, !113, !113, !113}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !115, line: 46, baseType: !116)
!115 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !117)
!117 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !121)
!121 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!122 = !{!123, !25, !134, !139}
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "tstack", scope: !27, file: !125, line: 28, type: !126, isLocal: true, isDefinition: true, align: 512)
!125 = !DIFile(filename: "zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 573440, elements: !131)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !127, file: !128, line: 48, baseType: !107, size: 8)
!131 = !{!132, !133}
!132 = !DISubrange(count: 16)
!133 = !DISubrange(count: 4480)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "buffer", scope: !27, file: !125, line: 30, type: !136, isLocal: true, isDefinition: true)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 30848, elements: !137)
!137 = !{!132, !138}
!138 = !DISubrange(count: 241)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "counter", scope: !27, file: !125, line: 31, type: !103, isLocal: true, isDefinition: true)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 20480, elements: !267)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !214, !227, !228, !229, !233, !234, !242, !262}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !142, file: !143, line: 247, baseType: !146, size: 384)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !147)
!147 = !{!148, !176, !184, !187, !188, !201, !202, !203}
!148 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 60, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 60, size: 64, elements: !150)
!150 = !{!151, !167}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !149, file: !143, line: 61, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !155)
!155 = !{!156, !162}
!156 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 38, baseType: !157, size: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 38, size: 32, elements: !158)
!158 = !{!159, !161}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !157, file: !153, line: 39, baseType: !160, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !157, file: !153, line: 40, baseType: !160, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 42, baseType: !163, size: 32, offset: 32)
!163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 42, size: 32, elements: !164)
!164 = !{!165, !166}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !163, file: !153, line: 43, baseType: !160, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !163, file: !153, line: 44, baseType: !160, size: 32)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !149, file: !143, line: 62, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !170)
!169 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!170 = !{!171}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !168, file: !169, line: 50, baseType: !172, size: 64)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 64, elements: !174)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!174 = !{!175}
!175 = !DISubrange(count: 2)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !146, file: !143, line: 68, baseType: !177, size: 32, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !180)
!179 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !181)
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !180, file: !179, line: 232, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !154)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !146, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !146, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !143, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !143, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !143, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !143, line: 100, baseType: !199, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !200)
!200 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !146, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !146, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !146, file: !143, line: 131, baseType: !204, size: 192, offset: 192)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !205)
!205 = !{!206, !207, !213}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !204, file: !179, line: 245, baseType: !152, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !204, file: !179, line: 246, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DISubroutineType(types: !211)
!211 = !{null, !212}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !204, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !142, file: !143, line: 250, baseType: !215, size: 288, offset: 384)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225, !226}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !215, file: !216, line: 26, baseType: !118, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !215, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !215, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !215, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !215, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !215, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !215, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !215, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !215, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !142, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !142, file: !143, line: 256, baseType: !178, size: 64, offset: 704)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !142, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !142, file: !143, line: 300, baseType: !235, size: 96, offset: 1056)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !236)
!236 = !{!237, !238, !241}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !235, file: !143, line: 153, baseType: !22, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !235, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !240, line: 214, baseType: !32)
!240 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !235, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !142, file: !143, line: 325, baseType: !243, size: 32, offset: 1152)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !256, !257}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 5074, baseType: !248, size: 96)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251, !254, !255}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !248, file: !249, line: 57, baseType: !252, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !249, line: 57, flags: DIFlagFwdDecl)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !248, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !248, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !244, file: !245, line: 5075, baseType: !178, size: 64, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !244, file: !245, line: 5076, baseType: !258, size: 32, offset: 160)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !260)
!259 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !258, file: !259, line: 52, baseType: !22, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !142, file: !143, line: 343, baseType: !263, size: 64, offset: 1184)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !264)
!264 = !{!265, !266}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !263, file: !216, line: 63, baseType: !118, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !263, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!267 = !{!132}
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !270, file: !286, line: 18, type: !287, isLocal: false, isDefinition: true)
!270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !272, globals: !285, splitDebugInlining: false, nameTableKind: None)
!271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!272 = !{!22, !113, !24, !273, !275, !277, !239, !119, !280, !281, !282, !283, !106, !284, !199, !278}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!285 = !{!268}
!286 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291, !292}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !289, line: 17, baseType: !278, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !288, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "_char_out", scope: !295, file: !299, line: 54, type: !300, isLocal: false, isDefinition: true)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !298, splitDebugInlining: false, nameTableKind: None)
!296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!297 = !{!113, !119}
!298 = !{!293}
!299 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DISubroutineType(types: !302)
!302 = !{!119, !119}
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !305, file: !322, line: 56, type: !323, isLocal: true, isDefinition: true, align: 32)
!305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !307, globals: !321, splitDebugInlining: false, nameTableKind: None)
!306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 259, baseType: !311)
!310 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 250, size: 224, elements: !312)
!312 = !{!313, !315, !316, !317, !318, !319, !320}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !311, file: !310, line: 252, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !118)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !311, file: !310, line: 253, baseType: !314, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !311, file: !310, line: 254, baseType: !314, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !311, file: !310, line: 255, baseType: !314, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !311, file: !310, line: 256, baseType: !314, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !311, file: !310, line: 257, baseType: !314, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !311, file: !310, line: 258, baseType: !314, size: 32, offset: 192)
!321 = !{!303}
!322 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = !{!327, !353}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !324, file: !325, line: 60, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!329 = !DISubroutineType(types: !330)
!330 = !{!119, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !346, !347}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !334, line: 380, baseType: !278, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !333, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !333, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !333, file: !334, line: 386, baseType: !340, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !341, file: !334, line: 359, baseType: !185, size: 8)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !341, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!345 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !333, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !333, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !334, line: 43, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !352)
!352 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !324, file: !325, line: 65, baseType: !331, size: 32, offset: 32)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !356, file: !359, line: 71, type: !360, isLocal: true, isDefinition: true, align: 32)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !358, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!358 = !{!354}
!359 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !362)
!362 = !{!363, !382}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !361, file: !325, line: 60, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{!119, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !370)
!370 = !{!371, !372, !373, !374, !380, !381}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !369, file: !334, line: 380, baseType: !278, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !369, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !369, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !369, file: !334, line: 386, baseType: !375, size: 32, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !377)
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !376, file: !334, line: 359, baseType: !185, size: 8)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !376, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !369, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !369, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !361, file: !325, line: 65, baseType: !367, size: 32, offset: 32)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !385, file: !392, line: 17, type: !521, isLocal: false, isDefinition: true)
!385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !387, globals: !388, splitDebugInlining: false, nameTableKind: None)
!386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!387 = !{!239, !119, !118, !113}
!388 = !{!383, !389, !517}
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !391, file: !392, line: 198, type: !503, isLocal: true, isDefinition: true)
!391 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !392, file: !392, line: 175, type: !393, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !498)
!392 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !DISubroutineType(types: !394)
!394 = !{null, !395}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !397)
!397 = !{!398, !456, !468, !469, !470, !471, !472, !478, !493}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !396, file: !143, line: 247, baseType: !399, size: 384)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !400)
!400 = !{!401, !425, !432, !433, !434, !443, !444, !445}
!401 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 60, baseType: !402, size: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 60, size: 64, elements: !403)
!403 = !{!404, !419}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !402, file: !143, line: 61, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !407)
!407 = !{!408, !414}
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 38, baseType: !409, size: 32)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 38, size: 32, elements: !410)
!410 = !{!411, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !409, file: !153, line: 39, baseType: !412, size: 32)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !409, file: !153, line: 40, baseType: !412, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 42, baseType: !415, size: 32, offset: 32)
!415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 42, size: 32, elements: !416)
!416 = !{!417, !418}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !415, file: !153, line: 43, baseType: !412, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !415, file: !153, line: 44, baseType: !412, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !402, file: !143, line: 62, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !420, file: !169, line: 50, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 64, elements: !174)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !399, file: !143, line: 68, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !428, file: !179, line: 232, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !406)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !399, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !399, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!434 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 90, baseType: !435, size: 16, offset: 112)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 90, size: 16, elements: !436)
!436 = !{!437, !442}
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !143, line: 91, baseType: !438, size: 16)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !143, line: 91, size: 16, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !438, file: !143, line: 96, baseType: !195, size: 8)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !438, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !435, file: !143, line: 100, baseType: !199, size: 16)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !399, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !399, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !399, file: !143, line: 131, baseType: !446, size: 192, offset: 192)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !447)
!447 = !{!448, !449, !455}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !446, file: !179, line: 245, baseType: !405, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !446, file: !179, line: 246, baseType: !450, size: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !454}
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !446, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !396, file: !143, line: 250, baseType: !457, size: 288, offset: 384)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !458)
!458 = !{!459, !460, !461, !462, !463, !464, !465, !466, !467}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !457, file: !216, line: 26, baseType: !118, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !457, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !457, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !457, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !457, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !457, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !457, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !457, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !457, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !396, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !396, file: !143, line: 256, baseType: !427, size: 64, offset: 704)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !396, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !396, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !396, file: !143, line: 300, baseType: !473, size: 96, offset: 1056)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !474)
!474 = !{!475, !476, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !143, line: 153, baseType: !22, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !473, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !396, file: !143, line: 325, baseType: !479, size: 32, offset: 1152)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !481)
!481 = !{!482, !488, !489}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !480, file: !245, line: 5074, baseType: !483, size: 96)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !483, file: !249, line: 57, baseType: !252, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !483, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !483, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !245, line: 5075, baseType: !427, size: 64, offset: 96)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !245, line: 5076, baseType: !490, size: 32, offset: 160)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !491)
!491 = !{!492}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !490, file: !259, line: 52, baseType: !22, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !396, file: !143, line: 343, baseType: !494, size: 64, offset: 1184)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !495)
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !494, file: !216, line: 63, baseType: !118, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !494, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!498 = !{!499, !500, !501, !502}
!499 = !DILocalVariable(name: "thread", arg: 1, scope: !391, file: !392, line: 175, type: !395)
!500 = !DILocalVariable(name: "region_num", scope: !391, file: !392, line: 200, type: !185)
!501 = !DILocalVariable(name: "guard_start", scope: !391, file: !392, line: 265, type: !22)
!502 = !DILocalVariable(name: "guard_size", scope: !391, file: !392, line: 266, type: !239)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 96, elements: !515)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !506)
!505 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = !{!507, !508, !509}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !504, file: !505, line: 53, baseType: !22, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !504, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !504, file: !505, line: 55, baseType: !510, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !512)
!511 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !512, file: !511, line: 150, baseType: !118, size: 32)
!515 = !{!516}
!516 = !DISubrange(count: 1)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "static_regions", scope: !385, file: !392, line: 62, type: !519, isLocal: true, isDefinition: true)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 96, elements: !515)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !289, line: 17, baseType: !278, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !522, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !528, file: !561, line: 39, type: !185, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !560, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!530 = !{!531, !113, !119, !548, !185}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !533, line: 1226, baseType: !534)
!533 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 1213, size: 352, elements: !535)
!535 = !{!536, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !534, file: !533, line: 1215, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !534, file: !533, line: 1216, baseType: !314, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !534, file: !533, line: 1217, baseType: !314, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !534, file: !533, line: 1218, baseType: !314, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !534, file: !533, line: 1219, baseType: !314, size: 32, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !534, file: !533, line: 1220, baseType: !314, size: 32, offset: 160)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !534, file: !533, line: 1221, baseType: !314, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !534, file: !533, line: 1222, baseType: !314, size: 32, offset: 224)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !534, file: !533, line: 1223, baseType: !314, size: 32, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !534, file: !533, line: 1224, baseType: !314, size: 32, offset: 288)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !534, file: !533, line: 1225, baseType: !314, size: 32, offset: 320)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !552)
!551 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !550, file: !551, line: 29, baseType: !118, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !550, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !550, file: !551, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !511, line: 143, baseType: !118, size: 32)
!560 = !{!526}
!561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !564, file: !571, line: 21, type: !300, isLocal: true, isDefinition: true)
!564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !566, globals: !570, splitDebugInlining: false, nameTableKind: None)
!565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!566 = !{!567, !119, !113}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !569, line: 22, baseType: !119)
!569 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !{!562}
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !574, file: !579, line: 13, type: !596, isLocal: true, isDefinition: true)
!574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !576, splitDebugInlining: false, nameTableKind: None)
!575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!576 = !{!577, !572}
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "mpu_config", scope: !574, file: !579, line: 37, type: !580, isLocal: false, isDefinition: true)
!579 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !551, line: 41, size: 64, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !581, file: !551, line: 43, baseType: !118, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !581, file: !551, line: 45, baseType: !585, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !588)
!588 = !{!589, !590, !591}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !587, file: !551, line: 29, baseType: !118, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !587, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !587, file: !551, line: 37, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !594)
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !593, file: !511, line: 143, baseType: !118, size: 32)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 192, elements: !174)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !599, file: !683, line: 72, type: !767, isLocal: true, isDefinition: true)
!599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !601, retainedTypes: !669, globals: !680, splitDebugInlining: false, nameTableKind: None)
!600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!601 = !{!30, !602}
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !310, line: 65, baseType: !119, size: 32, elements: !603)
!603 = !{!604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668}
!604 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!605 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!606 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!607 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!608 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!609 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!610 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!611 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!612 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!613 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!614 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!615 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!616 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!617 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!618 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!619 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!620 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!621 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!622 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!623 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!624 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!625 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!626 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!627 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!628 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!629 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!630 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!631 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!632 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!633 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!634 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!635 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!636 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!637 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!638 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!639 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!640 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!641 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!642 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!643 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!644 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!645 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!646 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!647 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!648 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!649 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!650 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!651 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!652 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!653 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!654 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!655 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!656 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!657 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!658 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!659 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!660 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!661 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!662 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!663 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!664 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!665 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!666 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!667 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!668 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!669 = !{!239, !119, !113, !670}
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !310, line: 244, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 236, size: 192, elements: !673)
!673 = !{!674, !675, !676, !677, !678, !679}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !672, file: !310, line: 238, baseType: !314, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !672, file: !310, line: 239, baseType: !314, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !672, file: !310, line: 240, baseType: !314, size: 32, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !672, file: !310, line: 241, baseType: !314, size: 32, offset: 96)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !672, file: !310, line: 242, baseType: !314, size: 32, offset: 128)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !672, file: !310, line: 243, baseType: !314, size: 32, offset: 160)
!680 = !{!681, !687, !703, !714, !731, !597, !733, !747, !749, !751, !753, !755, !757, !759, !761, !763, !765}
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !599, file: !683, line: 424, type: !684, isLocal: false, isDefinition: true, align: 16)
!683 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 64, elements: !685)
!685 = !{!686}
!686 = !DISubrange(count: 4)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !599, file: !683, line: 424, type: !689, isLocal: false, isDefinition: true, align: 32)
!689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !690)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !691)
!691 = !{!692, !693, !694, !695, !701, !702}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !690, file: !334, line: 380, baseType: !278, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !690, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !690, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !690, file: !334, line: 386, baseType: !696, size: 32, offset: 96)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !698)
!698 = !{!699, !700}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !697, file: !334, line: 359, baseType: !185, size: 8)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !697, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !690, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !690, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !599, file: !683, line: 424, type: !705, isLocal: true, isDefinition: true, align: 32)
!705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !707)
!707 = !{!708, !713}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !706, file: !325, line: 60, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = !DISubroutineType(types: !711)
!711 = !{!119, !712}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !706, file: !325, line: 65, baseType: !712, size: 32, offset: 32)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "exti_data", scope: !599, file: !683, line: 423, type: !716, isLocal: true, isDefinition: true)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !683, line: 107, size: 1472, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !716, file: !683, line: 109, baseType: !719, size: 1472)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !720, size: 1472, elements: !729)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !683, line: 101, size: 64, elements: !721)
!721 = !{!722, !728}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !720, file: !683, line: 102, baseType: !723, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !724, line: 63, baseType: !725)
!724 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 32)
!726 = !DISubroutineType(types: !727)
!727 = !{null, !119, !113}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !720, file: !683, line: 103, baseType: !113, size: 32, offset: 32)
!729 = !{!730}
!730 = !DISubrange(count: 23)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !599, file: !683, line: 424, type: !697, isLocal: true, isDefinition: true, align: 8)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !735, file: !683, line: 493, type: !740, isLocal: true, isDefinition: true, align: 32)
!735 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !683, file: !683, line: 460, type: !736, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !738)
!736 = !DISubroutineType(types: !737)
!737 = !{null, !712}
!738 = !{!739}
!739 = !DILocalVariable(name: "dev", arg: 1, scope: !735, file: !683, line: 460, type: !712)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !741)
!741 = !{!742, !744, !745, !746}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !740, file: !10, line: 55, baseType: !743, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !119)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !740, file: !10, line: 57, baseType: !743, size: 32, offset: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !740, file: !10, line: 59, baseType: !113, size: 32, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !740, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !735, file: !683, line: 497, type: !740, isLocal: true, isDefinition: true, align: 32)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !735, file: !683, line: 507, type: !740, isLocal: true, isDefinition: true, align: 32)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !735, file: !683, line: 512, type: !740, isLocal: true, isDefinition: true, align: 32)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !735, file: !683, line: 516, type: !740, isLocal: true, isDefinition: true, align: 32)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !735, file: !683, line: 523, type: !740, isLocal: true, isDefinition: true, align: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !735, file: !683, line: 527, type: !740, isLocal: true, isDefinition: true, align: 32)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !735, file: !683, line: 581, type: !740, isLocal: true, isDefinition: true, align: 32)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !735, file: !683, line: 586, type: !740, isLocal: true, isDefinition: true, align: 32)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !735, file: !683, line: 591, type: !740, isLocal: true, isDefinition: true, align: 32)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !735, file: !683, line: 595, type: !740, isLocal: true, isDefinition: true, align: 32)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !768, size: 736, elements: !729)
!768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !310, line: 134, baseType: !602)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !772, file: !777, line: 22, type: !799, isLocal: false, isDefinition: true, align: 16)
!772 = distinct !DICompileUnit(language: DW_LANG_C99, file: !773, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !774, splitDebugInlining: false, nameTableKind: None)
!773 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!774 = !{!775, !770, !781, !783, !785, !787, !789, !791, !793, !795, !797}
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !772, file: !777, line: 17, type: !778, isLocal: false, isDefinition: true, align: 16)
!777 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 192, elements: !779)
!779 = !{!780}
!780 = !DISubrange(count: 12)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !772, file: !777, line: 29, type: !684, isLocal: false, isDefinition: true, align: 16)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !772, file: !777, line: 36, type: !684, isLocal: false, isDefinition: true, align: 16)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !772, file: !777, line: 43, type: !684, isLocal: false, isDefinition: true, align: 16)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !772, file: !777, line: 50, type: !684, isLocal: false, isDefinition: true, align: 16)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !772, file: !777, line: 57, type: !684, isLocal: false, isDefinition: true, align: 16)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !772, file: !777, line: 64, type: !684, isLocal: false, isDefinition: true, align: 16)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !772, file: !777, line: 71, type: !684, isLocal: false, isDefinition: true, align: 16)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !772, file: !777, line: 78, type: !684, isLocal: false, isDefinition: true, align: 16)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !772, file: !777, line: 85, type: !684, isLocal: false, isDefinition: true, align: 16)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 48, elements: !800)
!800 = !{!801}
!801 = !DISubrange(count: 3)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !804, file: !868, line: 398, type: !901, isLocal: true, isDefinition: true)
!804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !806, retainedTypes: !819, globals: !865, splitDebugInlining: false, nameTableKind: None)
!805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!806 = !{!807, !30, !812}
!807 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !808, line: 197, baseType: !32, size: 32, elements: !809)
!808 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!809 = !{!810, !811}
!810 = !DIEnumerator(name: "SUCCESS", value: 0)
!811 = !DIEnumerator(name: "ERROR", value: 1)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !813, line: 44, baseType: !32, size: 32, elements: !814)
!813 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!814 = !{!815, !816, !817, !818}
!815 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!816 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!817 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!818 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!819 = !{!113, !119, !118, !820, !858, !864}
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 370, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 336, size: 1152, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !857}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !822, file: !310, line: 338, baseType: !314, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !822, file: !310, line: 339, baseType: !314, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !822, file: !310, line: 340, baseType: !314, size: 32, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !822, file: !310, line: 341, baseType: !314, size: 32, offset: 96)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !822, file: !310, line: 342, baseType: !314, size: 32, offset: 128)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !822, file: !310, line: 343, baseType: !314, size: 32, offset: 160)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !822, file: !310, line: 344, baseType: !314, size: 32, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !822, file: !310, line: 345, baseType: !118, size: 32, offset: 224)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !822, file: !310, line: 346, baseType: !314, size: 32, offset: 256)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !822, file: !310, line: 347, baseType: !314, size: 32, offset: 288)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !822, file: !310, line: 348, baseType: !835, size: 64, offset: 320)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 64, elements: !174)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !822, file: !310, line: 349, baseType: !314, size: 32, offset: 384)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !822, file: !310, line: 350, baseType: !314, size: 32, offset: 416)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !822, file: !310, line: 351, baseType: !314, size: 32, offset: 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !822, file: !310, line: 352, baseType: !118, size: 32, offset: 480)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !822, file: !310, line: 353, baseType: !314, size: 32, offset: 512)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !822, file: !310, line: 354, baseType: !314, size: 32, offset: 544)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !822, file: !310, line: 355, baseType: !835, size: 64, offset: 576)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !822, file: !310, line: 356, baseType: !314, size: 32, offset: 640)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !822, file: !310, line: 357, baseType: !314, size: 32, offset: 672)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !822, file: !310, line: 358, baseType: !314, size: 32, offset: 704)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !822, file: !310, line: 359, baseType: !118, size: 32, offset: 736)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !822, file: !310, line: 360, baseType: !314, size: 32, offset: 768)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !822, file: !310, line: 361, baseType: !314, size: 32, offset: 800)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !822, file: !310, line: 362, baseType: !835, size: 64, offset: 832)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !822, file: !310, line: 363, baseType: !314, size: 32, offset: 896)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !822, file: !310, line: 364, baseType: !314, size: 32, offset: 928)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !822, file: !310, line: 365, baseType: !835, size: 64, offset: 960)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !822, file: !310, line: 366, baseType: !314, size: 32, offset: 1024)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !822, file: !310, line: 367, baseType: !314, size: 32, offset: 1056)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !822, file: !310, line: 368, baseType: !856, size: 32, offset: 1088)
!856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 32, elements: !515)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !822, file: !310, line: 369, baseType: !314, size: 32, offset: 1120)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !861)
!860 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !859, file: !860, line: 344, baseType: !118, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !859, file: !860, line: 345, baseType: !118, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!865 = !{!866, !872, !888, !899, !802}
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !804, file: !868, line: 752, type: !869, isLocal: false, isDefinition: true, align: 16)
!868 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 704, elements: !870)
!870 = !{!871}
!871 = !DISubrange(count: 44)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !804, file: !868, line: 752, type: !874, isLocal: false, isDefinition: true, align: 32)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !876)
!876 = !{!877, !878, !879, !880, !886, !887}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !875, file: !334, line: 380, baseType: !278, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !875, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !875, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !875, file: !334, line: 386, baseType: !881, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !883)
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !882, file: !334, line: 359, baseType: !185, size: 8)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !882, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !875, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !875, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !804, file: !868, line: 752, type: !890, isLocal: true, isDefinition: true, align: 32)
!890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !891)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !892)
!892 = !{!893, !898}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !891, file: !325, line: 60, baseType: !894, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!119, !897}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !891, file: !325, line: 65, baseType: !897, size: 32, offset: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !804, file: !868, line: 752, type: !882, isLocal: true, isDefinition: true, align: 8)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !813, line: 100, size: 224, elements: !902)
!902 = !{!903, !909, !910, !919, !924, !929, !935}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !901, file: !813, line: 101, baseType: !904, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !813, line: 76, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!119, !897, !908}
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !813, line: 56, baseType: !113)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !901, file: !813, line: 102, baseType: !904, size: 32, offset: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !901, file: !813, line: 103, baseType: !911, size: 32, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !813, line: 83, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!119, !897, !908, !915, !113}
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !813, line: 72, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !897, !908, !113}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !901, file: !813, line: 104, baseType: !920, size: 32, offset: 96)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !813, line: 79, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DISubroutineType(types: !923)
!923 = !{!119, !897, !908, !864}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !901, file: !813, line: 105, baseType: !925, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !813, line: 88, baseType: !926)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{!812, !897, !908}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !901, file: !813, line: 106, baseType: !930, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !813, line: 92, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!119, !897, !908, !934}
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !813, line: 64, baseType: !113)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !901, file: !813, line: 107, baseType: !936, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !813, line: 96, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!119, !897, !908, !113}
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !942, file: !999, line: 603, type: !1001, isLocal: true, isDefinition: true, align: 32)
!942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !944, globals: !996, splitDebugInlining: false, nameTableKind: None)
!943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!944 = !{!113, !119, !945}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !948, line: 336, size: 160, elements: !949)
!948 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!949 = !{!950, !970, !974, !978, !991}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !947, file: !948, line: 365, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{!119, !954, !969}
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !957)
!957 = !{!958, !959, !960, !961, !967, !968}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !956, file: !334, line: 380, baseType: !278, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !956, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !956, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !956, file: !334, line: 386, baseType: !962, size: 32, offset: 96)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !964)
!964 = !{!965, !966}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !963, file: !334, line: 359, baseType: !185, size: 8)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !963, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !956, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !956, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !947, file: !948, line: 366, baseType: !971, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !954, !186}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !947, file: !948, line: 374, baseType: !975, size: 32, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!119, !954}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !947, file: !948, line: 377, baseType: !979, size: 32, offset: 96)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DISubroutineType(types: !981)
!981 = !{!119, !954, !982}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !948, line: 122, size: 64, elements: !985)
!985 = !{!986, !987, !988, !989, !990}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !984, file: !948, line: 123, baseType: !118, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !984, file: !948, line: 124, baseType: !185, size: 8, offset: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !984, file: !948, line: 125, baseType: !185, size: 8, offset: 40)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !984, file: !948, line: 126, baseType: !185, size: 8, offset: 48)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !984, file: !948, line: 127, baseType: !185, size: 8, offset: 56)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !947, file: !948, line: 379, baseType: !992, size: 32, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DISubroutineType(types: !994)
!994 = !{!119, !954, !995}
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!996 = !{!940, !997}
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !942, file: !999, line: 38, type: !1000, isLocal: true, isDefinition: true)
!999 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1002, file: !325, line: 60, baseType: !975, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1002, file: !325, line: 65, baseType: !954, size: 32, offset: 32)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1008, file: !1177, line: 762, type: !1286, isLocal: true, isDefinition: true)
!1008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1010, retainedTypes: !1028, globals: !1174, splitDebugInlining: false, nameTableKind: None)
!1009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!1010 = !{!30, !1011, !1017, !1022, !812}
!1011 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1012, line: 506, baseType: !32, size: 32, elements: !1013)
!1012 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1013 = !{!1014, !1015, !1016}
!1014 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1015 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1016 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1017 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1012, line: 512, baseType: !32, size: 32, elements: !1018)
!1018 = !{!1019, !1020, !1021}
!1019 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1020 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1021 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1022 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !724, line: 43, baseType: !32, size: 32, elements: !1023)
!1023 = !{!1024, !1025, !1026, !1027}
!1024 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1025 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1026 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1027 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1028 = !{!113, !119, !1029, !1099, !1104, !1064, !1017, !1011, !1109, !1110, !118, !1124, !1079, !106, !1134, !1135}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1012, line: 523, size: 288, elements: !1032)
!1032 = !{!1033, !1054, !1060, !1065, !1069, !1070, !1071, !1075, !1095}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1031, file: !1012, line: 524, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!119, !1037, !1052, !1053}
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1040)
!1040 = !{!1041, !1042, !1043, !1044, !1050, !1051}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1039, file: !334, line: 380, baseType: !278, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1039, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1039, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1039, file: !334, line: 386, baseType: !1045, size: 32, offset: 96)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1046, file: !334, line: 359, baseType: !185, size: 8)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1046, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1039, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1039, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1012, line: 237, baseType: !185)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1012, line: 257, baseType: !118)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1031, file: !1012, line: 530, baseType: !1055, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!119, !1037, !1058}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1012, line: 229, baseType: !118)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1031, file: !1012, line: 532, baseType: !1061, size: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!119, !1037, !1064, !1059}
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1012, line: 216, baseType: !118)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1031, file: !1012, line: 535, baseType: !1066, size: 32, offset: 96)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!119, !1037, !1064}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1031, file: !1012, line: 537, baseType: !1066, size: 32, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1031, file: !1012, line: 539, baseType: !1066, size: 32, offset: 160)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1031, file: !1012, line: 541, baseType: !1072, size: 32, offset: 192)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!119, !1037, !1052, !1011, !1017}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1031, file: !1012, line: 544, baseType: !1076, size: 32, offset: 224)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!119, !1037, !1079, !345}
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1012, line: 478, size: 96, elements: !1081)
!1081 = !{!1082, !1089, !1094}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1080, file: !1012, line: 482, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1084, line: 33, baseType: !1085)
!1084 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1084, line: 29, size: 32, elements: !1086)
!1086 = !{!1087}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1085, file: !1084, line: 30, baseType: !1088, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1080, file: !1012, line: 485, baseType: !1090, size: 32, offset: 32)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1012, line: 464, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{null, !1037, !1079, !1064}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1080, file: !1012, line: 493, baseType: !1064, size: 32, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1031, file: !1012, line: 547, baseType: !1096, size: 32, offset: 256)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!118, !1037}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1012, line: 428, size: 32, elements: !1102)
!1102 = !{!1103}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1101, file: !1012, line: 434, baseType: !1064, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1012, line: 441, size: 32, elements: !1107)
!1107 = !{!1108}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1106, file: !1012, line: 447, baseType: !1064, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 276, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 265, size: 320, elements: !1113)
!1113 = !{!1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1112, file: !310, line: 267, baseType: !314, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1112, file: !310, line: 268, baseType: !314, size: 32, offset: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1112, file: !310, line: 269, baseType: !314, size: 32, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1112, file: !310, line: 270, baseType: !314, size: 32, offset: 96)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1112, file: !310, line: 271, baseType: !314, size: 32, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1112, file: !310, line: 272, baseType: !314, size: 32, offset: 160)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1112, file: !310, line: 273, baseType: !314, size: 32, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1112, file: !310, line: 274, baseType: !314, size: 32, offset: 224)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1112, file: !310, line: 275, baseType: !1123, size: 64, offset: 256)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 64, elements: !174)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !310, line: 289, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 282, size: 288, elements: !1127)
!1127 = !{!1128, !1129, !1130, !1132, !1133}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1126, file: !310, line: 284, baseType: !314, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1126, file: !310, line: 285, baseType: !314, size: 32, offset: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1126, file: !310, line: 286, baseType: !1131, size: 128, offset: 64)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 128, elements: !685)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1126, file: !310, line: 287, baseType: !835, size: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1126, file: !310, line: 288, baseType: !314, size: 32, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !813, line: 100, size: 224, elements: !1138)
!1138 = !{!1139, !1144, !1145, !1154, !1159, !1164, !1169}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1137, file: !813, line: 101, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !813, line: 76, baseType: !1141)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!119, !1037, !908}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1137, file: !813, line: 102, baseType: !1140, size: 32, offset: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1137, file: !813, line: 103, baseType: !1146, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !813, line: 83, baseType: !1147)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!119, !1037, !908, !1150, !113}
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !813, line: 72, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{null, !1037, !908, !113}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1137, file: !813, line: 104, baseType: !1155, size: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !813, line: 79, baseType: !1156)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!119, !1037, !908, !864}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1137, file: !813, line: 105, baseType: !1160, size: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !813, line: 88, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!812, !1037, !908}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1137, file: !813, line: 106, baseType: !1165, size: 32, offset: 160)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !813, line: 92, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!119, !1037, !908, !934}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1137, file: !813, line: 107, baseType: !1170, size: 32, offset: 192)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !813, line: 96, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!119, !1037, !908, !113}
!1174 = !{!1175, !1181, !1183, !1193, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1280, !1006, !1282, !1284, !1297, !1299, !1301, !1303, !1305, !1307}
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1008, file: !1177, line: 762, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1177 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 80, elements: !1179)
!1179 = !{!1180}
!1180 = !DISubrange(count: 5)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1008, file: !1177, line: 762, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1008, file: !1177, line: 762, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1187)
!1187 = !{!1188, !1192}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1186, file: !325, line: 60, baseType: !1189, size: 32)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!119, !1037}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1186, file: !325, line: 65, baseType: !1037, size: 32, offset: 32)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1008, file: !1177, line: 766, type: !1195, isLocal: false, isDefinition: true, align: 16)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 160, elements: !1196)
!1196 = !{!1197}
!1197 = !DISubrange(count: 10)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1008, file: !1177, line: 766, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1008, file: !1177, line: 766, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1008, file: !1177, line: 770, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1008, file: !1177, line: 770, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1008, file: !1177, line: 770, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1008, file: !1177, line: 774, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1008, file: !1177, line: 774, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1008, file: !1177, line: 774, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1008, file: !1177, line: 778, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1008, file: !1177, line: 778, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1008, file: !1177, line: 778, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1008, file: !1177, line: 782, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1008, file: !1177, line: 782, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1008, file: !1177, line: 782, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1008, file: !1177, line: 786, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1008, file: !1177, line: 786, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1008, file: !1177, line: 786, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1008, file: !1177, line: 790, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1008, file: !1177, line: 790, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1008, file: !1177, line: 790, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1008, file: !1177, line: 762, type: !1240, isLocal: true, isDefinition: true)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1241, line: 237, size: 128, elements: !1242)
!1241 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1242 = !{!1243, !1244, !1245}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1240, file: !1241, line: 239, baseType: !1106, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1240, file: !1241, line: 241, baseType: !1037, size: 32, offset: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1240, file: !1241, line: 243, baseType: !1246, size: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1084, line: 40, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1084, line: 35, size: 64, elements: !1248)
!1248 = !{!1249, !1251}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1247, file: !1084, line: 36, baseType: !1250, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1247, file: !1084, line: 37, baseType: !1250, size: 32, offset: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1008, file: !1177, line: 762, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1008, file: !1177, line: 766, type: !1240, isLocal: true, isDefinition: true)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1008, file: !1177, line: 766, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1008, file: !1177, line: 770, type: !1240, isLocal: true, isDefinition: true)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1008, file: !1177, line: 770, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1008, file: !1177, line: 774, type: !1240, isLocal: true, isDefinition: true)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1008, file: !1177, line: 774, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1008, file: !1177, line: 778, type: !1240, isLocal: true, isDefinition: true)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1008, file: !1177, line: 778, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1008, file: !1177, line: 782, type: !1240, isLocal: true, isDefinition: true)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1008, file: !1177, line: 782, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1008, file: !1177, line: 786, type: !1240, isLocal: true, isDefinition: true)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1008, file: !1177, line: 786, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1008, file: !1177, line: 790, type: !1240, isLocal: true, isDefinition: true)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1008, file: !1177, line: 790, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1008, file: !1177, line: 656, type: !1030, isLocal: true, isDefinition: true)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1008, file: !1177, line: 766, type: !1286, isLocal: true, isDefinition: true)
!1286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1241, line: 224, size: 160, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1287, file: !1241, line: 226, baseType: !1101, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1287, file: !1241, line: 228, baseType: !864, size: 32, offset: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1287, file: !1241, line: 230, baseType: !119, size: 32, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1287, file: !1241, line: 231, baseType: !1293, size: 64, offset: 96)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !1294)
!1294 = !{!1295, !1296}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1293, file: !860, line: 344, baseType: !118, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1293, file: !860, line: 345, baseType: !118, size: 32, offset: 32)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1008, file: !1177, line: 770, type: !1286, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1008, file: !1177, line: 774, type: !1286, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1008, file: !1177, line: 778, type: !1286, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1008, file: !1177, line: 782, type: !1286, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1008, file: !1177, line: 786, type: !1286, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1008, file: !1177, line: 790, type: !1286, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1311, file: !1450, line: 44, type: !1528, isLocal: false, isDefinition: true)
!1311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1312, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1313, retainedTypes: !1346, globals: !1447, splitDebugInlining: false, nameTableKind: None)
!1312 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!1313 = !{!30, !1314, !1321, !1328, !1335, !1341, !812}
!1314 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !948, line: 47, baseType: !32, size: 32, elements: !1315)
!1315 = !{!1316, !1317, !1318, !1319, !1320}
!1316 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1317 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1318 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1319 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1320 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1321 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !948, line: 75, baseType: !32, size: 32, elements: !1322)
!1322 = !{!1323, !1324, !1325, !1326, !1327}
!1323 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1324 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1325 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1326 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1327 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !948, line: 92, baseType: !32, size: 32, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1334}
!1330 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1331 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1332 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1333 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1334 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !948, line: 84, baseType: !32, size: 32, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1340}
!1337 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1338 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1339 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1340 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1341 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !948, line: 107, baseType: !32, size: 32, elements: !1342)
!1342 = !{!1343, !1344, !1345}
!1343 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1344 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1345 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1346 = !{!113, !119, !1347, !186, !185, !1396, !118, !908, !1407, !199, !120, !1446}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !948, line: 336, size: 160, elements: !1350)
!1350 = !{!1351, !1370, !1374, !1378, !1391}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1349, file: !948, line: 365, baseType: !1352, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!119, !1355, !969}
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1368, !1369}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1357, file: !334, line: 380, baseType: !278, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1357, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1357, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1357, file: !334, line: 386, baseType: !1363, size: 32, offset: 96)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1365)
!1365 = !{!1366, !1367}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1364, file: !334, line: 359, baseType: !185, size: 8)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1364, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1357, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1357, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1349, file: !948, line: 366, baseType: !1371, size: 32, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{null, !1355, !186}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1349, file: !948, line: 374, baseType: !1375, size: 32, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!119, !1355}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1349, file: !948, line: 377, baseType: !1379, size: 32, offset: 96)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!119, !1355, !1382}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !948, line: 122, size: 64, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389, !1390}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1384, file: !948, line: 123, baseType: !118, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1384, file: !948, line: 124, baseType: !185, size: 8, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1384, file: !948, line: 125, baseType: !185, size: 8, offset: 40)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1384, file: !948, line: 126, baseType: !185, size: 8, offset: 48)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1384, file: !948, line: 127, baseType: !185, size: 8, offset: 56)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1349, file: !948, line: 379, baseType: !1392, size: 32, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!119, !1355, !1395}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !310, line: 508, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 499, size: 224, elements: !1399)
!1399 = !{!1400, !1401, !1402, !1403, !1404, !1405, !1406}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1398, file: !310, line: 501, baseType: !314, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1398, file: !310, line: 502, baseType: !314, size: 32, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1398, file: !310, line: 503, baseType: !314, size: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1398, file: !310, line: 504, baseType: !314, size: 32, offset: 96)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1398, file: !310, line: 505, baseType: !314, size: 32, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1398, file: !310, line: 506, baseType: !314, size: 32, offset: 160)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1398, file: !310, line: 507, baseType: !314, size: 32, offset: 192)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !813, line: 100, size: 224, elements: !1410)
!1410 = !{!1411, !1416, !1417, !1426, !1431, !1436, !1441}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1409, file: !813, line: 101, baseType: !1412, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !813, line: 76, baseType: !1413)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!119, !1355, !908}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1409, file: !813, line: 102, baseType: !1412, size: 32, offset: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1409, file: !813, line: 103, baseType: !1418, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !813, line: 83, baseType: !1419)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!119, !1355, !908, !1422, !113}
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !813, line: 72, baseType: !1423)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{null, !1355, !908, !113}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1409, file: !813, line: 104, baseType: !1427, size: 32, offset: 96)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !813, line: 79, baseType: !1428)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!119, !1355, !908, !864}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1409, file: !813, line: 105, baseType: !1432, size: 32, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !813, line: 88, baseType: !1433)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!812, !1355, !908}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1409, file: !813, line: 106, baseType: !1437, size: 32, offset: 160)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !813, line: 92, baseType: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!119, !1355, !908, !934}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1409, file: !813, line: 107, baseType: !1442, size: 32, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !813, line: 96, baseType: !1443)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!119, !1355, !908, !113}
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!1447 = !{!1309, !1448, !1454, !1456, !1463, !1465, !1509, !1512, !1514, !1517, !1520, !1522}
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1451, isLocal: false, isDefinition: true, align: 16)
!1450 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 128, elements: !1452)
!1452 = !{!1453}
!1453 = !DISubrange(count: 8)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1356, isLocal: false, isDefinition: true, align: 32)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1458, isLocal: true, isDefinition: true, align: 32)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1459)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1460)
!1460 = !{!1461, !1462}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1459, file: !325, line: 60, baseType: !1375, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1459, file: !325, line: 65, baseType: !1355, size: 32, offset: 32)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1364, isLocal: true, isDefinition: true, align: 8)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1311, file: !1450, line: 1914, type: !1467, isLocal: true, isDefinition: true)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1469, line: 22, size: 224, elements: !1470)
!1469 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1470 = !{!1471, !1472, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1468, file: !1469, line: 24, baseType: !1396, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1468, file: !1469, line: 26, baseType: !1473, size: 32, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !1476)
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1475, file: !860, line: 344, baseType: !118, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1475, file: !860, line: 345, baseType: !118, size: 32, offset: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1468, file: !1469, line: 28, baseType: !239, size: 32, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1468, file: !1469, line: 30, baseType: !345, size: 8, offset: 96)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1468, file: !1469, line: 32, baseType: !119, size: 32, offset: 128)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1468, file: !1469, line: 34, baseType: !345, size: 8, offset: 160)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1468, file: !1469, line: 36, baseType: !345, size: 8, offset: 168)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1468, file: !1469, line: 38, baseType: !345, size: 8, offset: 176)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1468, file: !1469, line: 40, baseType: !345, size: 8, offset: 184)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1468, file: !1469, line: 41, baseType: !1487, size: 32, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1490, line: 60, size: 64, elements: !1491)
!1490 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1491 = !{!1492, !1508}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1489, file: !1490, line: 69, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1490, line: 50, size: 64, elements: !1496)
!1496 = !{!1497, !1506, !1507}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1495, file: !1490, line: 52, baseType: !1498, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1501, line: 37, baseType: !1502)
!1501 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1501, line: 32, size: 64, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1502, file: !1501, line: 34, baseType: !118, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1502, file: !1501, line: 36, baseType: !118, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1495, file: !1490, line: 54, baseType: !185, size: 8, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1495, file: !1490, line: 56, baseType: !185, size: 8, offset: 40)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1489, file: !1490, line: 71, baseType: !185, size: 8, offset: 32)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1311, file: !1450, line: 1914, type: !1511, isLocal: true, isDefinition: true)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 64, elements: !515)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1488, isLocal: true, isDefinition: true)
!1514 = !DIGlobalVariableExpression(var: !1515, expr: !DIExpression())
!1515 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1516, isLocal: true, isDefinition: true)
!1516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 64, elements: !515)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1519, isLocal: true, isDefinition: true)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 128, elements: !174)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1311, file: !1450, line: 1539, type: !1348, isLocal: true, isDefinition: true)
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1311, file: !1450, line: 1914, type: !1524, isLocal: true, isDefinition: true)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1469, line: 74, size: 64, elements: !1525)
!1525 = !{!1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1524, file: !1469, line: 76, baseType: !118, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1524, file: !1469, line: 78, baseType: !1355, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !1530)
!1530 = !{!1531, !1532}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1529, file: !289, line: 17, baseType: !278, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1529, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1535, file: !1611, line: 65, type: !314, isLocal: true, isDefinition: true)
!1535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1536, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1537, retainedTypes: !1538, globals: !1608, splitDebugInlining: false, nameTableKind: None)
!1536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!1537 = !{!602}
!1538 = !{!114, !1539, !743, !185, !118, !1547, !1578}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1541, file: !533, line: 766, baseType: !314, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1541, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1541, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1541, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1550)
!1550 = !{!1551, !1553, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1568, !1573, !1577}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1549, file: !533, line: 413, baseType: !1552, size: 256)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 256, elements: !1452)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1549, file: !533, line: 414, baseType: !1554, size: 768, offset: 256)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 768, elements: !1555)
!1555 = !{!1556}
!1556 = !DISubrange(count: 24)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1549, file: !533, line: 415, baseType: !1552, size: 256, offset: 1024)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1549, file: !533, line: 416, baseType: !1554, size: 768, offset: 1280)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1549, file: !533, line: 417, baseType: !1552, size: 256, offset: 2048)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1549, file: !533, line: 418, baseType: !1554, size: 768, offset: 2304)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1549, file: !533, line: 419, baseType: !1552, size: 256, offset: 3072)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1549, file: !533, line: 420, baseType: !1554, size: 768, offset: 3328)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1549, file: !533, line: 421, baseType: !1552, size: 256, offset: 4096)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1549, file: !533, line: 422, baseType: !1565, size: 1792, offset: 4352)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 1792, elements: !1566)
!1566 = !{!1567}
!1567 = !DISubrange(count: 56)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1549, file: !533, line: 423, baseType: !1569, size: 1920, offset: 6144)
!1569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1570, size: 1920, elements: !1571)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1571 = !{!1572}
!1572 = !DISubrange(count: 240)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1549, file: !533, line: 424, baseType: !1574, size: 20608, offset: 8064)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 20608, elements: !1575)
!1575 = !{!1576}
!1576 = !DISubrange(count: 644)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1549, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1587, !1588, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1599, !1600, !1601, !1603, !1605, !1607}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1580, file: !533, line: 447, baseType: !537, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1580, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1580, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1580, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1580, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1580, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1580, file: !533, line: 453, baseType: !1589, size: 96, offset: 192)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1570, size: 96, elements: !779)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1580, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1580, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1580, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1580, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1580, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1580, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1580, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1580, file: !533, line: 461, baseType: !1598, size: 64, offset: 512)
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 64, elements: !174)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1580, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1580, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1580, file: !533, line: 464, baseType: !1602, size: 128, offset: 640)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 128, elements: !685)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1580, file: !533, line: 465, baseType: !1604, size: 160, offset: 768)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 160, elements: !1179)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1580, file: !533, line: 466, baseType: !1606, size: 160, offset: 928)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 160, elements: !1179)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1580, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1608 = !{!1609, !1635, !1640, !1642, !1644, !1533}
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1535, file: !1611, line: 285, type: !1612, isLocal: true, isDefinition: true, align: 32)
!1611 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1614)
!1614 = !{!1615, !1634}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1613, file: !325, line: 60, baseType: !1616, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!119, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1626, !1632, !1633}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1621, file: !334, line: 380, baseType: !278, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1621, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1621, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1621, file: !334, line: 386, baseType: !1627, size: 32, offset: 96)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1628, file: !334, line: 359, baseType: !185, size: 8)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1628, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1621, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1621, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1613, file: !325, line: 65, baseType: !1619, size: 32, offset: 32)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "lock", scope: !1535, file: !1611, line: 34, type: !1637, isLocal: true, isDefinition: true)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !1638)
!1638 = !{!1639}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1637, file: !259, line: 52, baseType: !22, size: 32)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "last_load", scope: !1535, file: !1611, line: 36, type: !118, isLocal: true, isDefinition: true)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1535, file: !1611, line: 48, type: !118, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1535, file: !1611, line: 54, type: !118, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1648, file: !1730, line: 22, type: !1732, isLocal: true, isDefinition: true)
!1648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1650, retainedTypes: !1651, globals: !1727, splitDebugInlining: false, nameTableKind: None)
!1649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!1650 = !{!1011, !1017}
!1651 = !{!1652, !1716, !1721, !1064, !1017, !1011, !1726, !113}
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1012, line: 523, size: 288, elements: !1655)
!1655 = !{!1656, !1675, !1679, !1683, !1687, !1688, !1689, !1693, !1712}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1654, file: !1012, line: 524, baseType: !1657, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!119, !1660, !1052, !1053}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1673, !1674}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1662, file: !334, line: 380, baseType: !278, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1662, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1662, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1662, file: !334, line: 386, baseType: !1668, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1669, file: !334, line: 359, baseType: !185, size: 8)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1669, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1662, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1662, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1654, file: !1012, line: 530, baseType: !1676, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!119, !1660, !1058}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1654, file: !1012, line: 532, baseType: !1680, size: 32, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!119, !1660, !1064, !1059}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1654, file: !1012, line: 535, baseType: !1684, size: 32, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!119, !1660, !1064}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1654, file: !1012, line: 537, baseType: !1684, size: 32, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1654, file: !1012, line: 539, baseType: !1684, size: 32, offset: 160)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1654, file: !1012, line: 541, baseType: !1690, size: 32, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!119, !1660, !1052, !1011, !1017}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1654, file: !1012, line: 544, baseType: !1694, size: 32, offset: 224)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{!119, !1660, !1697, !345}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1012, line: 478, size: 96, elements: !1699)
!1699 = !{!1700, !1706, !1711}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1698, file: !1012, line: 482, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1084, line: 33, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1084, line: 29, size: 32, elements: !1703)
!1703 = !{!1704}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1702, file: !1084, line: 30, baseType: !1705, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1698, file: !1012, line: 485, baseType: !1707, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1012, line: 464, baseType: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{null, !1660, !1697, !1064}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1698, file: !1012, line: 493, baseType: !1064, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1654, file: !1012, line: 547, baseType: !1713, size: 32, offset: 256)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!118, !1660}
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1012, line: 428, size: 32, elements: !1719)
!1719 = !{!1720}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1718, file: !1012, line: 434, baseType: !1064, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1012, line: 441, size: 32, elements: !1724)
!1724 = !{!1725}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1723, file: !1012, line: 447, baseType: !1064, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1727 = !{!1728, !1646}
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1729 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1648, file: !1730, line: 37, type: !1731, isLocal: true, isDefinition: true)
!1730 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1733, size: 352, elements: !1734)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1660)
!1734 = !{!1735}
!1735 = !DISubrange(count: 11)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1738, file: !1780, line: 139, type: !1785, isLocal: false, isDefinition: true)
!1738 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1739, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1740, globals: !1777, splitDebugInlining: false, nameTableKind: None)
!1739 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!1740 = !{!1741}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 370, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 336, size: 1152, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1743, file: !310, line: 338, baseType: !314, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1743, file: !310, line: 339, baseType: !314, size: 32, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1743, file: !310, line: 340, baseType: !314, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1743, file: !310, line: 341, baseType: !314, size: 32, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1743, file: !310, line: 342, baseType: !314, size: 32, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1743, file: !310, line: 343, baseType: !314, size: 32, offset: 160)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1743, file: !310, line: 344, baseType: !314, size: 32, offset: 192)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1743, file: !310, line: 345, baseType: !118, size: 32, offset: 224)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1743, file: !310, line: 346, baseType: !314, size: 32, offset: 256)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1743, file: !310, line: 347, baseType: !314, size: 32, offset: 288)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1743, file: !310, line: 348, baseType: !835, size: 64, offset: 320)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1743, file: !310, line: 349, baseType: !314, size: 32, offset: 384)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1743, file: !310, line: 350, baseType: !314, size: 32, offset: 416)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1743, file: !310, line: 351, baseType: !314, size: 32, offset: 448)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1743, file: !310, line: 352, baseType: !118, size: 32, offset: 480)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1743, file: !310, line: 353, baseType: !314, size: 32, offset: 512)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1743, file: !310, line: 354, baseType: !314, size: 32, offset: 544)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1743, file: !310, line: 355, baseType: !835, size: 64, offset: 576)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1743, file: !310, line: 356, baseType: !314, size: 32, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1743, file: !310, line: 357, baseType: !314, size: 32, offset: 672)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1743, file: !310, line: 358, baseType: !314, size: 32, offset: 704)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1743, file: !310, line: 359, baseType: !118, size: 32, offset: 736)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1743, file: !310, line: 360, baseType: !314, size: 32, offset: 768)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1743, file: !310, line: 361, baseType: !314, size: 32, offset: 800)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1743, file: !310, line: 362, baseType: !835, size: 64, offset: 832)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1743, file: !310, line: 363, baseType: !314, size: 32, offset: 896)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1743, file: !310, line: 364, baseType: !314, size: 32, offset: 928)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1743, file: !310, line: 365, baseType: !835, size: 64, offset: 960)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1743, file: !310, line: 366, baseType: !314, size: 32, offset: 1024)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1743, file: !310, line: 367, baseType: !314, size: 32, offset: 1056)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1743, file: !310, line: 368, baseType: !856, size: 32, offset: 1088)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1743, file: !310, line: 369, baseType: !314, size: 32, offset: 1120)
!1777 = !{!1778, !1781, !1736}
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1738, file: !1780, line: 137, type: !118, isLocal: false, isDefinition: true)
!1780 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1738, file: !1780, line: 138, type: !1783, isLocal: false, isDefinition: true)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 128, elements: !267)
!1784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 64, elements: !1452)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1788, file: !1791, line: 23, type: !1792, isLocal: false, isDefinition: true)
!1788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !1790, splitDebugInlining: false, nameTableKind: None)
!1789 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!1790 = !{!1786}
!1791 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!1793 = !DIGlobalVariableExpression(var: !1794, expr: !DIExpression())
!1794 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1795, file: !1799, line: 37, type: !2056, isLocal: false, isDefinition: true)
!1795 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1796, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1797, retainedTypes: !1806, globals: !1879, splitDebugInlining: false, nameTableKind: None)
!1796 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!1797 = !{!1798, !30, !602}
!1798 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1799, line: 63, baseType: !32, size: 32, elements: !1800)
!1799 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1800 = !{!1801, !1802, !1803, !1804, !1805}
!1801 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1802 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1803 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1804 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1805 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1806 = !{!239, !113, !119, !1807, !106, !118, !1837, !743, !185, !1862}
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1810, line: 51, size: 64, elements: !1811)
!1810 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1811 = !{!1812, !1832}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1809, file: !1810, line: 52, baseType: !1813, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1810, line: 38, baseType: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!119, !1817, !284, !199}
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1830, !1831}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1819, file: !334, line: 380, baseType: !278, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1819, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1819, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1819, file: !334, line: 386, baseType: !1825, size: 32, offset: 96)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1826, file: !334, line: 359, baseType: !185, size: 8)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1826, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1819, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1819, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1809, file: !1810, line: 53, baseType: !1833, size: 32, offset: 32)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1810, line: 47, baseType: !1834)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{!119, !1817, !284, !199, !118}
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1839, file: !533, line: 447, baseType: !537, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1839, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1839, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1839, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1839, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1839, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1839, file: !533, line: 453, baseType: !1589, size: 96, offset: 192)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1839, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1839, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1839, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1839, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1839, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1839, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1839, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1839, file: !533, line: 461, baseType: !1598, size: 64, offset: 512)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1839, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1839, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1839, file: !533, line: 464, baseType: !1602, size: 128, offset: 640)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1839, file: !533, line: 465, baseType: !1604, size: 160, offset: 768)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1839, file: !533, line: 466, baseType: !1606, size: 160, offset: 928)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1839, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1864, file: !533, line: 413, baseType: !1552, size: 256)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1864, file: !533, line: 414, baseType: !1554, size: 768, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1864, file: !533, line: 415, baseType: !1552, size: 256, offset: 1024)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1864, file: !533, line: 416, baseType: !1554, size: 768, offset: 1280)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1864, file: !533, line: 417, baseType: !1552, size: 256, offset: 2048)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1864, file: !533, line: 418, baseType: !1554, size: 768, offset: 2304)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1864, file: !533, line: 419, baseType: !1552, size: 256, offset: 3072)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1864, file: !533, line: 420, baseType: !1554, size: 768, offset: 3328)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1864, file: !533, line: 421, baseType: !1552, size: 256, offset: 4096)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1864, file: !533, line: 422, baseType: !1565, size: 1792, offset: 4352)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1864, file: !533, line: 423, baseType: !1569, size: 1920, offset: 6144)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1864, file: !533, line: 424, baseType: !1574, size: 20608, offset: 8064)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1864, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1879 = !{!1793, !1880, !2006, !2014, !2016, !2019, !2024, !2026, !2031}
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "_kernel", scope: !1795, file: !1799, line: 40, type: !1882, isLocal: false, isDefinition: true)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !179, line: 158, size: 288, elements: !1883)
!1883 = !{!1884, !2001}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1882, file: !179, line: 159, baseType: !1885, size: 192)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 192, elements: !515)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !179, line: 100, size: 192, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1994, !1995, !1996, !1997}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1886, file: !179, line: 102, baseType: !118, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1886, file: !179, line: 105, baseType: !106, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1886, file: !179, line: 108, baseType: !1891, size: 32, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !1893)
!1893 = !{!1894, !1952, !1964, !1965, !1966, !1967, !1968, !1974, !1989}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1892, file: !143, line: 247, baseType: !1895, size: 384)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !1896)
!1896 = !{!1897, !1921, !1928, !1929, !1930, !1939, !1940, !1941}
!1897 = !DIDerivedType(tag: DW_TAG_member, scope: !1895, file: !143, line: 60, baseType: !1898, size: 64)
!1898 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1895, file: !143, line: 60, size: 64, elements: !1899)
!1899 = !{!1900, !1915}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1898, file: !143, line: 61, baseType: !1901, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !1903)
!1903 = !{!1904, !1910}
!1904 = !DIDerivedType(tag: DW_TAG_member, scope: !1902, file: !153, line: 38, baseType: !1905, size: 32)
!1905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1902, file: !153, line: 38, size: 32, elements: !1906)
!1906 = !{!1907, !1909}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1905, file: !153, line: 39, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1905, file: !153, line: 40, baseType: !1908, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, scope: !1902, file: !153, line: 42, baseType: !1911, size: 32, offset: 32)
!1911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1902, file: !153, line: 42, size: 32, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1911, file: !153, line: 43, baseType: !1908, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1911, file: !153, line: 44, baseType: !1908, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1898, file: !143, line: 62, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !1917)
!1917 = !{!1918}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1916, file: !169, line: 50, baseType: !1919, size: 64)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1920, size: 64, elements: !174)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1895, file: !143, line: 68, baseType: !1922, size: 32, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !1925)
!1925 = !{!1926}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1924, file: !179, line: 232, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !1902)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1895, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1895, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!1930 = !DIDerivedType(tag: DW_TAG_member, scope: !1895, file: !143, line: 90, baseType: !1931, size: 16, offset: 112)
!1931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1895, file: !143, line: 90, size: 16, elements: !1932)
!1932 = !{!1933, !1938}
!1933 = !DIDerivedType(tag: DW_TAG_member, scope: !1931, file: !143, line: 91, baseType: !1934, size: 16)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1931, file: !143, line: 91, size: 16, elements: !1935)
!1935 = !{!1936, !1937}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1934, file: !143, line: 96, baseType: !195, size: 8)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1934, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1931, file: !143, line: 100, baseType: !199, size: 16)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1895, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1895, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1895, file: !143, line: 131, baseType: !1942, size: 192, offset: 192)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !1943)
!1943 = !{!1944, !1945, !1951}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1942, file: !179, line: 245, baseType: !1901, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1942, file: !179, line: 246, baseType: !1946, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !1947)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{null, !1950}
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1942, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1892, file: !143, line: 250, baseType: !1953, size: 288, offset: 384)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !1954)
!1954 = !{!1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1953, file: !216, line: 26, baseType: !118, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1953, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1953, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1953, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1953, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1953, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1953, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1953, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1953, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1892, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1892, file: !143, line: 256, baseType: !1923, size: 64, offset: 704)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1892, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1892, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1892, file: !143, line: 300, baseType: !1969, size: 96, offset: 1056)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !1970)
!1970 = !{!1971, !1972, !1973}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1969, file: !143, line: 153, baseType: !22, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1969, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1969, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1892, file: !143, line: 325, baseType: !1975, size: 32, offset: 1152)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !1977)
!1977 = !{!1978, !1984, !1985}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1976, file: !245, line: 5074, baseType: !1979, size: 96)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !1980)
!1980 = !{!1981, !1982, !1983}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1979, file: !249, line: 57, baseType: !252, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1979, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1979, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1976, file: !245, line: 5075, baseType: !1923, size: 64, offset: 96)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1976, file: !245, line: 5076, baseType: !1986, size: 32, offset: 160)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !1987)
!1987 = !{!1988}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1986, file: !259, line: 52, baseType: !22, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1892, file: !143, line: 343, baseType: !1990, size: 64, offset: 1184)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !1991)
!1991 = !{!1992, !1993}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1990, file: !216, line: 63, baseType: !118, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1990, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1886, file: !179, line: 111, baseType: !1891, size: 32, offset: 96)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1886, file: !179, line: 124, baseType: !119, size: 32, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1886, file: !179, line: 127, baseType: !185, size: 8, offset: 160)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1886, file: !179, line: 153, baseType: !1998, offset: 168)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1999, line: 33, elements: !2000)
!1999 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2000 = !{}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1882, file: !179, line: 170, baseType: !2002, size: 96, offset: 192)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2002, file: !179, line: 86, baseType: !1891, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2002, file: !179, line: 90, baseType: !1927, size: 64, offset: 32)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1795, file: !1799, line: 43, type: !2008, isLocal: false, isDefinition: true, align: 512)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2009, size: 8704, elements: !2012)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !2010)
!2010 = !{!2011}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2009, file: !128, line: 48, baseType: !107, size: 8)
!2012 = !{!2013}
!2013 = !DISubrange(count: 1088)
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1795, file: !1799, line: 44, type: !1892, isLocal: false, isDefinition: true)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1795, file: !1799, line: 48, type: !2018, isLocal: false, isDefinition: true)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 1280, elements: !515)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1795, file: !1799, line: 86, type: !2021, isLocal: false, isDefinition: true, align: 512)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2009, size: 16896, elements: !2022)
!2022 = !{!516, !2023}
!2023 = !DISubrange(count: 2112)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1795, file: !1799, line: 217, type: !345, isLocal: false, isDefinition: true)
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1795, file: !1799, line: 50, type: !2028, isLocal: true, isDefinition: true, align: 512)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2009, size: 3072, elements: !2029)
!2029 = !{!516, !2030}
!2030 = !DISubrange(count: 384)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "levels", scope: !2033, file: !1799, line: 232, type: !2053, isLocal: true, isDefinition: true)
!2033 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1799, file: !1799, line: 230, type: !2034, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2036)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{null, !1798}
!2036 = !{!2037, !2038, !2048, !2052}
!2037 = !DILocalVariable(name: "level", arg: 1, scope: !2033, file: !1799, line: 230, type: !1798)
!2038 = !DILocalVariable(name: "entry", scope: !2033, file: !1799, line: 244, type: !2039)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !2042)
!2042 = !{!2043, !2047}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2041, file: !325, line: 60, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!119, !1817}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2041, file: !325, line: 65, baseType: !1817, size: 32, offset: 32)
!2048 = !DILocalVariable(name: "dev", scope: !2049, file: !1799, line: 247, type: !1817)
!2049 = distinct !DILexicalBlock(scope: !2050, file: !1799, line: 246, column: 64)
!2050 = distinct !DILexicalBlock(scope: !2051, file: !1799, line: 246, column: 2)
!2051 = distinct !DILexicalBlock(scope: !2033, file: !1799, line: 246, column: 2)
!2052 = !DILocalVariable(name: "rc", scope: !2049, file: !1799, line: 248, type: !119)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 192, elements: !2054)
!2054 = !{!2055}
!2055 = !DISubrange(count: 6)
!2056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2057)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !2058)
!2058 = !{!2059, !2060}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2057, file: !289, line: 17, baseType: !278, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2057, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "states_str", scope: !2063, file: !2064, line: 276, type: !2188, isLocal: true, isDefinition: true)
!2063 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2064, file: !2064, line: 271, type: !2065, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !2179)
!2064 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!278, !2067, !106, !239}
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2068)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2070)
!2070 = !{!2071, !2129, !2141, !2142, !2143, !2144, !2145, !2151, !2166}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2069, file: !143, line: 247, baseType: !2072, size: 384)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2073)
!2073 = !{!2074, !2098, !2105, !2106, !2107, !2116, !2117, !2118}
!2074 = !DIDerivedType(tag: DW_TAG_member, scope: !2072, file: !143, line: 60, baseType: !2075, size: 64)
!2075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2072, file: !143, line: 60, size: 64, elements: !2076)
!2076 = !{!2077, !2092}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2075, file: !143, line: 61, baseType: !2078, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2079)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2080)
!2080 = !{!2081, !2087}
!2081 = !DIDerivedType(tag: DW_TAG_member, scope: !2079, file: !153, line: 38, baseType: !2082, size: 32)
!2082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2079, file: !153, line: 38, size: 32, elements: !2083)
!2083 = !{!2084, !2086}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2082, file: !153, line: 39, baseType: !2085, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2082, file: !153, line: 40, baseType: !2085, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2079, file: !153, line: 42, baseType: !2088, size: 32, offset: 32)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2079, file: !153, line: 42, size: 32, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2088, file: !153, line: 43, baseType: !2085, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2088, file: !153, line: 44, baseType: !2085, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2075, file: !143, line: 62, baseType: !2093, size: 64)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2094)
!2094 = !{!2095}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2093, file: !169, line: 50, baseType: !2096, size: 64)
!2096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2097, size: 64, elements: !174)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2072, file: !143, line: 68, baseType: !2099, size: 32, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2101)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2102)
!2102 = !{!2103}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2101, file: !179, line: 232, baseType: !2104, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2079)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2072, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2072, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2107 = !DIDerivedType(tag: DW_TAG_member, scope: !2072, file: !143, line: 90, baseType: !2108, size: 16, offset: 112)
!2108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2072, file: !143, line: 90, size: 16, elements: !2109)
!2109 = !{!2110, !2115}
!2110 = !DIDerivedType(tag: DW_TAG_member, scope: !2108, file: !143, line: 91, baseType: !2111, size: 16)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2108, file: !143, line: 91, size: 16, elements: !2112)
!2112 = !{!2113, !2114}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2111, file: !143, line: 96, baseType: !195, size: 8)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2111, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2108, file: !143, line: 100, baseType: !199, size: 16)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2072, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2072, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2072, file: !143, line: 131, baseType: !2119, size: 192, offset: 192)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2120)
!2120 = !{!2121, !2122, !2128}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2119, file: !179, line: 245, baseType: !2078, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2119, file: !179, line: 246, baseType: !2123, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2124)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{null, !2127}
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2119, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2069, file: !143, line: 250, baseType: !2130, size: 288, offset: 384)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2130, file: !216, line: 26, baseType: !118, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2130, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2130, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2130, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2130, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2130, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2130, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2130, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2130, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2069, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2069, file: !143, line: 256, baseType: !2100, size: 64, offset: 704)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2069, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2069, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2069, file: !143, line: 300, baseType: !2146, size: 96, offset: 1056)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2147)
!2147 = !{!2148, !2149, !2150}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2146, file: !143, line: 153, baseType: !22, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2146, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2146, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2069, file: !143, line: 325, baseType: !2152, size: 32, offset: 1152)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2154)
!2154 = !{!2155, !2161, !2162}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2153, file: !245, line: 5074, baseType: !2156, size: 96)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2157)
!2157 = !{!2158, !2159, !2160}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2156, file: !249, line: 57, baseType: !252, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2156, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2156, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2153, file: !245, line: 5075, baseType: !2100, size: 64, offset: 96)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2153, file: !245, line: 5076, baseType: !2163, size: 32, offset: 160)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2164)
!2164 = !{!2165}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2163, file: !259, line: 52, baseType: !22, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2069, file: !143, line: 343, baseType: !2167, size: 64, offset: 1184)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2168)
!2168 = !{!2169, !2170}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2167, file: !216, line: 63, baseType: !118, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2167, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2172, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2173, globals: !2175, splitDebugInlining: false, nameTableKind: None)
!2172 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2173 = !{!113, !278, !114, !185, !22, !119, !2174, !24, !239, !106, !118, !120}
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2175 = !{!2061, !2176}
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "states_sz", scope: !2063, file: !2064, line: 279, type: !2178, isLocal: true, isDefinition: true)
!2178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1731, size: 256, elements: !1452)
!2179 = !{!2180, !2181, !2182, !2183, !2184, !2185, !2186}
!2180 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2063, file: !2064, line: 271, type: !2067)
!2181 = !DILocalVariable(name: "buf", arg: 2, scope: !2063, file: !2064, line: 271, type: !106)
!2182 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2063, file: !2064, line: 271, type: !239)
!2183 = !DILocalVariable(name: "off", scope: !2063, file: !2064, line: 273, type: !239)
!2184 = !DILocalVariable(name: "bit", scope: !2063, file: !2064, line: 274, type: !185)
!2185 = !DILocalVariable(name: "thread_state", scope: !2063, file: !2064, line: 275, type: !185)
!2186 = !DILocalVariable(name: "index", scope: !2187, file: !2064, line: 293, type: !185)
!2187 = distinct !DILexicalBlock(scope: !2063, file: !2064, line: 293, column: 2)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 256, elements: !1452)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2191, file: !2302, line: 56, type: !2289, isLocal: false, isDefinition: true)
!2191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2192, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2193, globals: !2299, splitDebugInlining: false, nameTableKind: None)
!2192 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2193 = !{!2194, !106, !113, !2297, !284, !114, !743, !119, !118, !120, !2298}
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2196)
!2196 = !{!2197, !2255, !2267, !2268, !2269, !2270, !2271, !2277, !2292}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2195, file: !143, line: 247, baseType: !2198, size: 384)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2199)
!2199 = !{!2200, !2224, !2231, !2232, !2233, !2242, !2243, !2244}
!2200 = !DIDerivedType(tag: DW_TAG_member, scope: !2198, file: !143, line: 60, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !143, line: 60, size: 64, elements: !2202)
!2202 = !{!2203, !2218}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2201, file: !143, line: 61, baseType: !2204, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2206)
!2206 = !{!2207, !2213}
!2207 = !DIDerivedType(tag: DW_TAG_member, scope: !2205, file: !153, line: 38, baseType: !2208, size: 32)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2205, file: !153, line: 38, size: 32, elements: !2209)
!2209 = !{!2210, !2212}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2208, file: !153, line: 39, baseType: !2211, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2208, file: !153, line: 40, baseType: !2211, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2205, file: !153, line: 42, baseType: !2214, size: 32, offset: 32)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2205, file: !153, line: 42, size: 32, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2214, file: !153, line: 43, baseType: !2211, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2214, file: !153, line: 44, baseType: !2211, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2201, file: !143, line: 62, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2220)
!2220 = !{!2221}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2219, file: !169, line: 50, baseType: !2222, size: 64)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2223, size: 64, elements: !174)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2198, file: !143, line: 68, baseType: !2225, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2227)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2228)
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2227, file: !179, line: 232, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2205)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2198, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2198, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2198, file: !143, line: 90, baseType: !2234, size: 16, offset: 112)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !143, line: 90, size: 16, elements: !2235)
!2235 = !{!2236, !2241}
!2236 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !143, line: 91, baseType: !2237, size: 16)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2234, file: !143, line: 91, size: 16, elements: !2238)
!2238 = !{!2239, !2240}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2237, file: !143, line: 96, baseType: !195, size: 8)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2237, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2234, file: !143, line: 100, baseType: !199, size: 16)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2198, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2198, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2198, file: !143, line: 131, baseType: !2245, size: 192, offset: 192)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2246)
!2246 = !{!2247, !2248, !2254}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2245, file: !179, line: 245, baseType: !2204, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2245, file: !179, line: 246, baseType: !2249, size: 32, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2250)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{null, !2253}
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2245, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2195, file: !143, line: 250, baseType: !2256, size: 288, offset: 384)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2256, file: !216, line: 26, baseType: !118, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2256, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2256, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2256, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2256, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2256, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2256, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2256, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2256, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2195, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2195, file: !143, line: 256, baseType: !2226, size: 64, offset: 704)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2195, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2195, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2195, file: !143, line: 300, baseType: !2272, size: 96, offset: 1056)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2273)
!2273 = !{!2274, !2275, !2276}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2272, file: !143, line: 153, baseType: !22, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2272, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2272, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2195, file: !143, line: 325, baseType: !2278, size: 32, offset: 1152)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2280)
!2280 = !{!2281, !2287, !2288}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2279, file: !245, line: 5074, baseType: !2282, size: 96)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2283)
!2283 = !{!2284, !2285, !2286}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2282, file: !249, line: 57, baseType: !252, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2282, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2282, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2279, file: !245, line: 5075, baseType: !2226, size: 64, offset: 96)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2279, file: !245, line: 5076, baseType: !2289, size: 32, offset: 160)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2290)
!2290 = !{!2291}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2289, file: !259, line: 52, baseType: !22, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2195, file: !143, line: 343, baseType: !2293, size: 64, offset: 1184)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2294)
!2294 = !{!2295, !2296}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2293, file: !216, line: 63, baseType: !118, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2293, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2299 = !{!2189, !2300, !2303, !2305}
!2300 = !DIGlobalVariableExpression(var: !2301, expr: !DIExpression())
!2301 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2191, file: !2302, line: 404, type: !119, isLocal: true, isDefinition: true)
!2302 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2191, file: !2302, line: 405, type: !119, isLocal: true, isDefinition: true)
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(name: "pending_current", scope: !2191, file: !2302, line: 425, type: !2194, isLocal: true, isDefinition: true)
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2309, file: !2339, line: 19, type: !2345, isLocal: true, isDefinition: true)
!2309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2311, globals: !2336, splitDebugInlining: false, nameTableKind: None)
!2310 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2311 = !{!114, !113, !743, !118, !120, !119, !2312, !106, !116}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2314)
!2314 = !{!2315, !2330, !2335}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2313, file: !179, line: 245, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2318)
!2318 = !{!2319, !2325}
!2319 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !153, line: 38, baseType: !2320, size: 32)
!2320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !153, line: 38, size: 32, elements: !2321)
!2321 = !{!2322, !2324}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2320, file: !153, line: 39, baseType: !2323, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2320, file: !153, line: 40, baseType: !2323, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !153, line: 42, baseType: !2326, size: 32, offset: 32)
!2326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !153, line: 42, size: 32, elements: !2327)
!2327 = !{!2328, !2329}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2326, file: !153, line: 43, baseType: !2323, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2326, file: !153, line: 44, baseType: !2323, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2313, file: !179, line: 246, baseType: !2331, size: 32, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2332)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{null, !2312}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2313, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2336 = !{!2337, !2307, !2340, !2342}
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2309, file: !2339, line: 15, type: !120, isLocal: true, isDefinition: true)
!2339 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2309, file: !2339, line: 25, type: !119, isLocal: true, isDefinition: true)
!2342 = !DIGlobalVariableExpression(var: !2343, expr: !DIExpression())
!2343 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2309, file: !2339, line: 17, type: !2344, isLocal: true, isDefinition: true)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2317)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2346)
!2346 = !{!2347}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2345, file: !259, line: 52, baseType: !22, size: 32)
!2348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2349 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2351, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2351 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2352 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2353, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2354, retainedTypes: !2374, splitDebugInlining: false, nameTableKind: None)
!2353 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2354 = !{!2355, !2363}
!2355 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2356, line: 69, baseType: !32, size: 32, elements: !2357)
!2356 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2357 = !{!2358, !2359, !2360, !2361, !2362}
!2358 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2359 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2360 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2361 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2362 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2356, line: 56, baseType: !32, size: 32, elements: !2364)
!2364 = !{!2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373}
!2365 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2366 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2367 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2368 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2369 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2370 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2371 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2372 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2373 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2374 = !{!119, !2355, !2363, !2375, !196, !352, !2377, !2378, !186, !200, !278, !239, !113, !22, !32, !280, !2380, !2381, !105, !281, !117, !282, !2376, !2382, !2383, !2384, !2385}
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2356, line: 31, baseType: !2376)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !117)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !240, line: 329, baseType: !32)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2356, line: 32, baseType: !2379)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !121)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !240, line: 145, baseType: !119)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2386 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2387, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2387 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2388 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2389, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2389 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2391, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2392, splitDebugInlining: false, nameTableKind: None)
!2391 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2392 = !{!278, !186, !119, !32}
!2393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2394, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2395, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2394 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2395 = !{!2396, !30}
!2396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2397, line: 27, baseType: !32, size: 32, elements: !2398)
!2397 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2398 = !{!2399, !2400, !2401, !2402, !2403}
!2399 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2400 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2401 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2402 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2403 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2404 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2405, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2406, retainedTypes: !2407, splitDebugInlining: false, nameTableKind: None)
!2405 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2406 = !{!602, !2396, !30}
!2407 = !{!769, !2408, !113, !119, !743, !118, !185, !2425}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2411)
!2411 = !{!2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2410, file: !533, line: 413, baseType: !1552, size: 256)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2410, file: !533, line: 414, baseType: !1554, size: 768, offset: 256)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2410, file: !533, line: 415, baseType: !1552, size: 256, offset: 1024)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2410, file: !533, line: 416, baseType: !1554, size: 768, offset: 1280)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2410, file: !533, line: 417, baseType: !1552, size: 256, offset: 2048)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2410, file: !533, line: 418, baseType: !1554, size: 768, offset: 2304)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2410, file: !533, line: 419, baseType: !1552, size: 256, offset: 3072)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2410, file: !533, line: 420, baseType: !1554, size: 768, offset: 3328)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2410, file: !533, line: 421, baseType: !1552, size: 256, offset: 4096)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2410, file: !533, line: 422, baseType: !1565, size: 1792, offset: 4352)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2410, file: !533, line: 423, baseType: !1569, size: 1920, offset: 6144)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2410, file: !533, line: 424, baseType: !1574, size: 20608, offset: 8064)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2410, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2427)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2427, file: !533, line: 447, baseType: !537, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2427, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2427, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2427, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2427, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2427, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2427, file: !533, line: 453, baseType: !1589, size: 96, offset: 192)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2427, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2427, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2427, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2427, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2427, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2427, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2427, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2427, file: !533, line: 461, baseType: !1598, size: 64, offset: 512)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2427, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2427, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2427, file: !533, line: 464, baseType: !1602, size: 128, offset: 640)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2427, file: !533, line: 465, baseType: !1604, size: 160, offset: 768)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2427, file: !533, line: 466, baseType: !1606, size: 160, offset: 928)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2427, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2454, splitDebugInlining: false, nameTableKind: None)
!2453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2454 = !{!113, !119, !22, !2455}
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2457)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2457, file: !533, line: 447, baseType: !537, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2457, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2457, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2457, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2457, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2457, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2457, file: !533, line: 453, baseType: !1589, size: 96, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2457, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2457, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2457, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2457, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2457, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2457, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2457, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2457, file: !533, line: 461, baseType: !1598, size: 64, offset: 512)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2457, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2457, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2457, file: !533, line: 464, baseType: !1602, size: 128, offset: 640)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2457, file: !533, line: 465, baseType: !1604, size: 160, offset: 768)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2457, file: !533, line: 466, baseType: !1606, size: 160, offset: 928)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2457, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2482, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2482 = !{!2483, !113, !119}
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2485)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2485, file: !533, line: 447, baseType: !537, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2485, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2485, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2485, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2485, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2485, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2485, file: !533, line: 453, baseType: !1589, size: 96, offset: 192)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2485, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2485, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2485, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2485, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2485, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2485, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2485, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2485, file: !533, line: 461, baseType: !1598, size: 64, offset: 512)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2485, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2485, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2485, file: !533, line: 464, baseType: !1602, size: 128, offset: 640)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2485, file: !533, line: 465, baseType: !1604, size: 160, offset: 768)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2485, file: !533, line: 466, baseType: !1606, size: 160, offset: 928)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2485, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2508 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2509, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2510, splitDebugInlining: false, nameTableKind: None)
!2509 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2510 = !{!2511, !118, !113, !119}
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 32)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2513, line: 98, size: 256, elements: !2514)
!2513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2514 = !{!2515, !2520, !2525, !2530, !2535, !2540, !2545, !2550}
!2515 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2513, line: 99, baseType: !2516, size: 32)
!2516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2513, line: 99, size: 32, elements: !2517)
!2517 = !{!2518, !2519}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2516, file: !2513, line: 99, baseType: !118, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2516, file: !2513, line: 99, baseType: !118, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2513, line: 100, baseType: !2521, size: 32, offset: 32)
!2521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2513, line: 100, size: 32, elements: !2522)
!2522 = !{!2523, !2524}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2521, file: !2513, line: 100, baseType: !118, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2521, file: !2513, line: 100, baseType: !118, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2513, line: 101, baseType: !2526, size: 32, offset: 64)
!2526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2513, line: 101, size: 32, elements: !2527)
!2527 = !{!2528, !2529}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2526, file: !2513, line: 101, baseType: !118, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2526, file: !2513, line: 101, baseType: !118, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2513, line: 102, baseType: !2531, size: 32, offset: 96)
!2531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2513, line: 102, size: 32, elements: !2532)
!2532 = !{!2533, !2534}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2531, file: !2513, line: 102, baseType: !118, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2531, file: !2513, line: 102, baseType: !118, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2513, line: 103, baseType: !2536, size: 32, offset: 128)
!2536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2513, line: 103, size: 32, elements: !2537)
!2537 = !{!2538, !2539}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2536, file: !2513, line: 103, baseType: !118, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2536, file: !2513, line: 103, baseType: !118, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2513, line: 104, baseType: !2541, size: 32, offset: 160)
!2541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2513, line: 104, size: 32, elements: !2542)
!2542 = !{!2543, !2544}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2541, file: !2513, line: 104, baseType: !118, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2541, file: !2513, line: 104, baseType: !118, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2513, line: 105, baseType: !2546, size: 32, offset: 192)
!2546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2513, line: 105, size: 32, elements: !2547)
!2547 = !{!2548, !2549}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2546, file: !2513, line: 105, baseType: !118, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2546, file: !2513, line: 105, baseType: !118, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2512, file: !2513, line: 106, baseType: !118, size: 32, offset: 224)
!2551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2395, retainedTypes: !2553, splitDebugInlining: false, nameTableKind: None)
!2552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2553 = !{!2554, !113, !119, !2579, !2622, !118}
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2556)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2557)
!2557 = !{!2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2556, file: !533, line: 447, baseType: !537, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2556, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2556, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2556, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2556, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2556, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2556, file: !533, line: 453, baseType: !1589, size: 96, offset: 192)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2556, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2556, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2556, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2556, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2556, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2556, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2556, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2556, file: !533, line: 461, baseType: !1598, size: 64, offset: 512)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2556, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2556, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2556, file: !533, line: 464, baseType: !1602, size: 128, offset: 640)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2556, file: !533, line: 465, baseType: !1604, size: 160, offset: 768)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2556, file: !533, line: 466, baseType: !1606, size: 160, offset: 928)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2556, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2513, line: 141, baseType: !2581)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2513, line: 97, size: 256, elements: !2582)
!2582 = !{!2583}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2581, file: !2513, line: 107, baseType: !2584, size: 256)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2513, line: 98, size: 256, elements: !2585)
!2585 = !{!2586, !2591, !2596, !2601, !2606, !2611, !2616, !2621}
!2586 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !2513, line: 99, baseType: !2587, size: 32)
!2587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !2513, line: 99, size: 32, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2587, file: !2513, line: 99, baseType: !118, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2587, file: !2513, line: 99, baseType: !118, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !2513, line: 100, baseType: !2592, size: 32, offset: 32)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !2513, line: 100, size: 32, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2592, file: !2513, line: 100, baseType: !118, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2592, file: !2513, line: 100, baseType: !118, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !2513, line: 101, baseType: !2597, size: 32, offset: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !2513, line: 101, size: 32, elements: !2598)
!2598 = !{!2599, !2600}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2597, file: !2513, line: 101, baseType: !118, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2597, file: !2513, line: 101, baseType: !118, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !2513, line: 102, baseType: !2602, size: 32, offset: 96)
!2602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !2513, line: 102, size: 32, elements: !2603)
!2603 = !{!2604, !2605}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2602, file: !2513, line: 102, baseType: !118, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2602, file: !2513, line: 102, baseType: !118, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !2513, line: 103, baseType: !2607, size: 32, offset: 128)
!2607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !2513, line: 103, size: 32, elements: !2608)
!2608 = !{!2609, !2610}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2607, file: !2513, line: 103, baseType: !118, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2607, file: !2513, line: 103, baseType: !118, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !2513, line: 104, baseType: !2612, size: 32, offset: 160)
!2612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !2513, line: 104, size: 32, elements: !2613)
!2613 = !{!2614, !2615}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2612, file: !2513, line: 104, baseType: !118, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2612, file: !2513, line: 104, baseType: !118, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !2513, line: 105, baseType: !2617, size: 32, offset: 192)
!2617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !2513, line: 105, size: 32, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2617, file: !2513, line: 105, baseType: !118, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2617, file: !2513, line: 105, baseType: !118, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2584, file: !2513, line: 106, baseType: !118, size: 32, offset: 224)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1537, retainedTypes: !2625, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2625 = !{!769, !743, !185, !118, !2626, !2643}
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2628)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2629)
!2629 = !{!2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2628, file: !533, line: 413, baseType: !1552, size: 256)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2628, file: !533, line: 414, baseType: !1554, size: 768, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2628, file: !533, line: 415, baseType: !1552, size: 256, offset: 1024)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2628, file: !533, line: 416, baseType: !1554, size: 768, offset: 1280)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2628, file: !533, line: 417, baseType: !1552, size: 256, offset: 2048)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2628, file: !533, line: 418, baseType: !1554, size: 768, offset: 2304)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2628, file: !533, line: 419, baseType: !1552, size: 256, offset: 3072)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2628, file: !533, line: 420, baseType: !1554, size: 768, offset: 3328)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2628, file: !533, line: 421, baseType: !1552, size: 256, offset: 4096)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2628, file: !533, line: 422, baseType: !1565, size: 1792, offset: 4352)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2628, file: !533, line: 423, baseType: !1569, size: 1920, offset: 6144)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2628, file: !533, line: 424, baseType: !1574, size: 20608, offset: 8064)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2628, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2645)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2646)
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2645, file: !533, line: 447, baseType: !537, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2645, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2645, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2645, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2645, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2645, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2645, file: !533, line: 453, baseType: !1589, size: 96, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2645, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2645, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2645, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2645, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2645, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2645, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2645, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2645, file: !533, line: 461, baseType: !1598, size: 64, offset: 512)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2645, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2645, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2645, file: !533, line: 464, baseType: !1602, size: 128, offset: 640)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2645, file: !533, line: 465, baseType: !1604, size: 160, offset: 768)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2645, file: !533, line: 466, baseType: !1606, size: 160, offset: 928)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2645, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2668 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2669, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2670, splitDebugInlining: false, nameTableKind: None)
!2669 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2670 = !{!2671, !113, !119}
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2674)
!2674 = !{!2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2673, file: !533, line: 447, baseType: !537, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2673, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2673, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2673, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2673, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2673, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2673, file: !533, line: 453, baseType: !1589, size: 96, offset: 192)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2673, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2673, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2673, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2673, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2673, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2673, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2673, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2673, file: !533, line: 461, baseType: !1598, size: 64, offset: 512)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2673, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2673, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2673, file: !533, line: 464, baseType: !1602, size: 128, offset: 640)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2673, file: !533, line: 465, baseType: !1604, size: 160, offset: 768)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2673, file: !533, line: 466, baseType: !1606, size: 160, offset: 928)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2673, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2698, splitDebugInlining: false, nameTableKind: None)
!2697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2698 = !{!107, !106, !239, !969, !2699, !186, !113}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!2701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2703, splitDebugInlining: false, nameTableKind: None)
!2702 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2703 = !{!119, !113}
!2704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2706, splitDebugInlining: false, nameTableKind: None)
!2705 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2706 = !{!2707}
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 370, baseType: !2709)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 336, size: 1152, elements: !2710)
!2710 = !{!2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2709, file: !310, line: 338, baseType: !314, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2709, file: !310, line: 339, baseType: !314, size: 32, offset: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2709, file: !310, line: 340, baseType: !314, size: 32, offset: 64)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2709, file: !310, line: 341, baseType: !314, size: 32, offset: 96)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2709, file: !310, line: 342, baseType: !314, size: 32, offset: 128)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2709, file: !310, line: 343, baseType: !314, size: 32, offset: 160)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2709, file: !310, line: 344, baseType: !314, size: 32, offset: 192)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2709, file: !310, line: 345, baseType: !118, size: 32, offset: 224)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2709, file: !310, line: 346, baseType: !314, size: 32, offset: 256)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2709, file: !310, line: 347, baseType: !314, size: 32, offset: 288)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2709, file: !310, line: 348, baseType: !835, size: 64, offset: 320)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2709, file: !310, line: 349, baseType: !314, size: 32, offset: 384)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2709, file: !310, line: 350, baseType: !314, size: 32, offset: 416)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2709, file: !310, line: 351, baseType: !314, size: 32, offset: 448)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2709, file: !310, line: 352, baseType: !118, size: 32, offset: 480)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2709, file: !310, line: 353, baseType: !314, size: 32, offset: 512)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2709, file: !310, line: 354, baseType: !314, size: 32, offset: 544)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2709, file: !310, line: 355, baseType: !835, size: 64, offset: 576)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2709, file: !310, line: 356, baseType: !314, size: 32, offset: 640)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2709, file: !310, line: 357, baseType: !314, size: 32, offset: 672)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2709, file: !310, line: 358, baseType: !314, size: 32, offset: 704)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2709, file: !310, line: 359, baseType: !118, size: 32, offset: 736)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2709, file: !310, line: 360, baseType: !314, size: 32, offset: 768)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2709, file: !310, line: 361, baseType: !314, size: 32, offset: 800)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2709, file: !310, line: 362, baseType: !835, size: 64, offset: 832)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2709, file: !310, line: 363, baseType: !314, size: 32, offset: 896)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2709, file: !310, line: 364, baseType: !314, size: 32, offset: 928)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2709, file: !310, line: 365, baseType: !835, size: 64, offset: 960)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2709, file: !310, line: 366, baseType: !314, size: 32, offset: 1024)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2709, file: !310, line: 367, baseType: !314, size: 32, offset: 1056)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2709, file: !310, line: 368, baseType: !856, size: 32, offset: 1088)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2709, file: !310, line: 369, baseType: !314, size: 32, offset: 1120)
!2743 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2744, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2744 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2747, retainedTypes: !2763, splitDebugInlining: false, nameTableKind: None)
!2746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2747 = !{!2748, !2755, !2759}
!2748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2749, line: 38, baseType: !32, size: 32, elements: !2750)
!2749 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2750 = !{!2751, !2752, !2753, !2754}
!2751 = !DIEnumerator(name: "HAL_OK", value: 0)
!2752 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2753 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2754 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2755 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !808, line: 184, baseType: !32, size: 32, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIEnumerator(name: "RESET", value: 0)
!2758 = !DIEnumerator(name: "SET", value: 1)
!2759 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !808, line: 190, baseType: !32, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIEnumerator(name: "DISABLE", value: 0)
!2762 = !DIEnumerator(name: "ENABLE", value: 1)
!2763 = !{!113, !2764, !185, !118, !1446, !2800, !2806, !2817, !199, !2818, !120}
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 370, baseType: !2766)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 336, size: 1152, elements: !2767)
!2767 = !{!2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2766, file: !310, line: 338, baseType: !314, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2766, file: !310, line: 339, baseType: !314, size: 32, offset: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2766, file: !310, line: 340, baseType: !314, size: 32, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2766, file: !310, line: 341, baseType: !314, size: 32, offset: 96)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2766, file: !310, line: 342, baseType: !314, size: 32, offset: 128)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2766, file: !310, line: 343, baseType: !314, size: 32, offset: 160)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2766, file: !310, line: 344, baseType: !314, size: 32, offset: 192)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2766, file: !310, line: 345, baseType: !118, size: 32, offset: 224)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2766, file: !310, line: 346, baseType: !314, size: 32, offset: 256)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2766, file: !310, line: 347, baseType: !314, size: 32, offset: 288)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2766, file: !310, line: 348, baseType: !835, size: 64, offset: 320)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2766, file: !310, line: 349, baseType: !314, size: 32, offset: 384)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2766, file: !310, line: 350, baseType: !314, size: 32, offset: 416)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2766, file: !310, line: 351, baseType: !314, size: 32, offset: 448)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2766, file: !310, line: 352, baseType: !118, size: 32, offset: 480)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2766, file: !310, line: 353, baseType: !314, size: 32, offset: 512)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2766, file: !310, line: 354, baseType: !314, size: 32, offset: 544)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2766, file: !310, line: 355, baseType: !835, size: 64, offset: 576)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2766, file: !310, line: 356, baseType: !314, size: 32, offset: 640)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2766, file: !310, line: 357, baseType: !314, size: 32, offset: 672)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2766, file: !310, line: 358, baseType: !314, size: 32, offset: 704)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2766, file: !310, line: 359, baseType: !118, size: 32, offset: 736)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2766, file: !310, line: 360, baseType: !314, size: 32, offset: 768)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2766, file: !310, line: 361, baseType: !314, size: 32, offset: 800)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2766, file: !310, line: 362, baseType: !835, size: 64, offset: 832)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2766, file: !310, line: 363, baseType: !314, size: 32, offset: 896)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2766, file: !310, line: 364, baseType: !314, size: 32, offset: 928)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2766, file: !310, line: 365, baseType: !835, size: 64, offset: 960)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2766, file: !310, line: 366, baseType: !314, size: 32, offset: 1024)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2766, file: !310, line: 367, baseType: !314, size: 32, offset: 1056)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2766, file: !310, line: 368, baseType: !856, size: 32, offset: 1088)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2766, file: !310, line: 369, baseType: !314, size: 32, offset: 1120)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 330, baseType: !2802)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 326, size: 64, elements: !2803)
!2803 = !{!2804, !2805}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2802, file: !310, line: 328, baseType: !314, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2802, file: !310, line: 329, baseType: !314, size: 32, offset: 32)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 259, baseType: !2808)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 250, size: 224, elements: !2809)
!2809 = !{!2810, !2811, !2812, !2813, !2814, !2815, !2816}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2808, file: !310, line: 252, baseType: !314, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2808, file: !310, line: 253, baseType: !314, size: 32, offset: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2808, file: !310, line: 254, baseType: !314, size: 32, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2808, file: !310, line: 255, baseType: !314, size: 32, offset: 96)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2808, file: !310, line: 256, baseType: !314, size: 32, offset: 128)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2808, file: !310, line: 257, baseType: !314, size: 32, offset: 160)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2808, file: !310, line: 258, baseType: !314, size: 32, offset: 192)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 276, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 265, size: 320, elements: !2821)
!2821 = !{!2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2820, file: !310, line: 267, baseType: !314, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2820, file: !310, line: 268, baseType: !314, size: 32, offset: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2820, file: !310, line: 269, baseType: !314, size: 32, offset: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2820, file: !310, line: 270, baseType: !314, size: 32, offset: 96)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2820, file: !310, line: 271, baseType: !314, size: 32, offset: 128)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2820, file: !310, line: 272, baseType: !314, size: 32, offset: 160)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2820, file: !310, line: 273, baseType: !314, size: 32, offset: 192)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2820, file: !310, line: 274, baseType: !314, size: 32, offset: 224)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2820, file: !310, line: 275, baseType: !1123, size: 64, offset: 256)
!2831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2833, retainedTypes: !2834, splitDebugInlining: false, nameTableKind: None)
!2832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2833 = !{!807}
!2834 = !{!2835, !118, !2843, !2849, !2860}
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !2837)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !2838)
!2838 = !{!2839, !2840, !2841, !2842}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2837, file: !533, line: 766, baseType: !314, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2837, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2837, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2837, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 330, baseType: !2845)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 326, size: 64, elements: !2846)
!2846 = !{!2847, !2848}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2845, file: !310, line: 328, baseType: !314, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2845, file: !310, line: 329, baseType: !314, size: 32, offset: 32)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 259, baseType: !2851)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 250, size: 224, elements: !2852)
!2852 = !{!2853, !2854, !2855, !2856, !2857, !2858, !2859}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2851, file: !310, line: 252, baseType: !314, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2851, file: !310, line: 253, baseType: !314, size: 32, offset: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2851, file: !310, line: 254, baseType: !314, size: 32, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2851, file: !310, line: 255, baseType: !314, size: 32, offset: 96)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2851, file: !310, line: 256, baseType: !314, size: 32, offset: 128)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2851, file: !310, line: 257, baseType: !314, size: 32, offset: 160)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2851, file: !310, line: 258, baseType: !314, size: 32, offset: 192)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 370, baseType: !2862)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 336, size: 1152, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2862, file: !310, line: 338, baseType: !314, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2862, file: !310, line: 339, baseType: !314, size: 32, offset: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2862, file: !310, line: 340, baseType: !314, size: 32, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2862, file: !310, line: 341, baseType: !314, size: 32, offset: 96)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2862, file: !310, line: 342, baseType: !314, size: 32, offset: 128)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2862, file: !310, line: 343, baseType: !314, size: 32, offset: 160)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2862, file: !310, line: 344, baseType: !314, size: 32, offset: 192)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2862, file: !310, line: 345, baseType: !118, size: 32, offset: 224)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2862, file: !310, line: 346, baseType: !314, size: 32, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2862, file: !310, line: 347, baseType: !314, size: 32, offset: 288)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2862, file: !310, line: 348, baseType: !835, size: 64, offset: 320)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2862, file: !310, line: 349, baseType: !314, size: 32, offset: 384)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2862, file: !310, line: 350, baseType: !314, size: 32, offset: 416)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2862, file: !310, line: 351, baseType: !314, size: 32, offset: 448)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2862, file: !310, line: 352, baseType: !118, size: 32, offset: 480)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2862, file: !310, line: 353, baseType: !314, size: 32, offset: 512)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2862, file: !310, line: 354, baseType: !314, size: 32, offset: 544)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2862, file: !310, line: 355, baseType: !835, size: 64, offset: 576)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2862, file: !310, line: 356, baseType: !314, size: 32, offset: 640)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2862, file: !310, line: 357, baseType: !314, size: 32, offset: 672)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2862, file: !310, line: 358, baseType: !314, size: 32, offset: 704)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2862, file: !310, line: 359, baseType: !118, size: 32, offset: 736)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2862, file: !310, line: 360, baseType: !314, size: 32, offset: 768)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2862, file: !310, line: 361, baseType: !314, size: 32, offset: 800)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2862, file: !310, line: 362, baseType: !835, size: 64, offset: 832)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2862, file: !310, line: 363, baseType: !314, size: 32, offset: 896)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2862, file: !310, line: 364, baseType: !314, size: 32, offset: 928)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2862, file: !310, line: 365, baseType: !835, size: 64, offset: 960)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2862, file: !310, line: 366, baseType: !314, size: 32, offset: 1024)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2862, file: !310, line: 367, baseType: !314, size: 32, offset: 1056)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2862, file: !310, line: 368, baseType: !856, size: 32, offset: 1088)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2862, file: !310, line: 369, baseType: !314, size: 32, offset: 1120)
!2896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2898, splitDebugInlining: false, nameTableKind: None)
!2897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2898 = !{!113, !239}
!2899 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2900, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2901, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2900 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2901 = !{!2902, !2909, !2396, !30}
!2902 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2903, line: 14, baseType: !32, size: 32, elements: !2904)
!2903 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2904 = !{!2905, !2906, !2907, !2908}
!2905 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2906 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2907 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2908 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2903, line: 42, baseType: !32, size: 32, elements: !2910)
!2910 = !{!2911, !2912, !2913, !2914, !2915, !2916}
!2911 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2912 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2913 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2914 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2915 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2916 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2917 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2918, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2918 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2919 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2920, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2921, splitDebugInlining: false, nameTableKind: None)
!2920 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2921 = !{!22, !113, !119}
!2922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2923 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!2924 = !{!"Ubuntu clang version 14.0.6"}
!2925 = !{i32 7, !"Dwarf Version", i32 4}
!2926 = !{i32 2, !"Debug Info Version", i32 3}
!2927 = !{i32 1, !"wchar_size", i32 4}
!2928 = !{i32 1, !"min_enum_size", i32 4}
!2929 = !{i32 1, !"branch-target-enforcement", i32 0}
!2930 = !{i32 1, !"sign-return-address", i32 0}
!2931 = !{i32 1, !"sign-return-address-all", i32 0}
!2932 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2933 = !{i32 7, !"frame-pointer", i32 2}
!2934 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2935, file: !2935, line: 26, type: !2936, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !2000)
!2935 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2936 = !DISubroutineType(types: !2937)
!2937 = !{null}
!2938 = !DILocation(line: 28, column: 1, scope: !2934)
!2939 = !{i64 2154351560, i64 2154351580, i64 2154351643}
!2940 = !DILocation(line: 29, column: 1, scope: !2934)
!2941 = !{i64 2154351975, i64 2154351995, i64 2154352058}
!2942 = !DILocation(line: 30, column: 1, scope: !2934)
!2943 = !{i64 2154352394, i64 2154352414, i64 2154352477}
!2944 = !DILocation(line: 31, column: 1, scope: !2934)
!2945 = !{i64 2154352813, i64 2154352833, i64 2154352896}
!2946 = !DILocation(line: 33, column: 1, scope: !2934)
!2947 = !{i64 2154353105, i64 2154353125, i64 2154353188}
!2948 = !DILocation(line: 35, column: 1, scope: !2934)
!2949 = !{i64 2154353430, i64 2154353450, i64 2154353513}
!2950 = !DILocation(line: 50, column: 1, scope: !2934)
!2951 = !{i64 2154353857, i64 2154353877, i64 2154353940}
!2952 = !DILocation(line: 54, column: 1, scope: !2934)
!2953 = !{i64 2154354296, i64 2154354316, i64 2154354379}
!2954 = !DILocation(line: 61, column: 1, scope: !2934)
!2955 = !{i64 2154354613, i64 2154354633, i64 2154354696}
!2956 = !DILocation(line: 63, column: 1, scope: !2934)
!2957 = !{i64 2154354993, i64 2154355013, i64 2154355076}
!2958 = !DILocation(line: 64, column: 1, scope: !2934)
!2959 = !{i64 2154355515, i64 2154355535, i64 2154355598}
!2960 = !DILocation(line: 65, column: 1, scope: !2934)
!2961 = !{i64 2154356013, i64 2154356033, i64 2154356096}
!2962 = !DILocation(line: 66, column: 1, scope: !2934)
!2963 = !{i64 2154356495, i64 2154356515, i64 2154356578}
!2964 = !DILocation(line: 67, column: 1, scope: !2934)
!2965 = !{i64 2154357002, i64 2154357022, i64 2154357085}
!2966 = !DILocation(line: 68, column: 1, scope: !2934)
!2967 = !{i64 2154357490, i64 2154357510, i64 2154357573}
!2968 = !DILocation(line: 70, column: 1, scope: !2934)
!2969 = !{i64 2154362019, i64 2154362039, i64 2154362102}
!2970 = !DILocation(line: 71, column: 1, scope: !2934)
!2971 = !{i64 2154362461, i64 2154362481, i64 2154362544}
!2972 = !DILocation(line: 72, column: 1, scope: !2934)
!2973 = !{i64 2154362919, i64 2154362939, i64 2154363002}
!2974 = !DILocation(line: 79, column: 1, scope: !2934)
!2975 = !{i64 2154363373, i64 2154363393, i64 2154363456}
!2976 = !DILocation(line: 80, column: 1, scope: !2934)
!2977 = !{i64 2154363884, i64 2154363904, i64 2154363967}
!2978 = !DILocation(line: 82, column: 1, scope: !2934)
!2979 = !{i64 2154364375, i64 2154364395, i64 2154364458}
!2980 = !DILocation(line: 97, column: 1, scope: !2934)
!2981 = !{i64 2154364712, i64 2154364732, i64 2154364795}
!2982 = !DILocation(line: 99, column: 1, scope: !2934)
!2983 = !{i64 2154364930, i64 2154364950, i64 2154365013}
!2984 = !DILocation(line: 102, column: 1, scope: !2934)
!2985 = !{i64 2154365187, i64 2154365207, i64 2154365270}
!2986 = !DILocation(line: 105, column: 1, scope: !2934)
!2987 = !{i64 2154365427, i64 2154365447, i64 2154365510}
!2988 = !DILocation(line: 115, column: 1, scope: !2934)
!2989 = !{i64 2154365766, i64 2154365786, i64 2154365849}
!2990 = !DILocation(line: 118, column: 1, scope: !2934)
!2991 = !{i64 2154366110, i64 2154366130, i64 2154366193}
!2992 = !DILocation(line: 32, column: 1, scope: !2993)
!2993 = !DILexicalBlockFile(scope: !2934, file: !2994, discriminator: 0)
!2994 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2995 = !{i64 2154366466, i64 2154366486, i64 2154366549}
!2996 = !DILocation(line: 33, column: 1, scope: !2993)
!2997 = !{i64 2154366978, i64 2154366998, i64 2154367061}
!2998 = !DILocation(line: 53, column: 1, scope: !2993)
!2999 = !{i64 2154367486, i64 2154367506, i64 2154367569}
!3000 = !DILocation(line: 54, column: 1, scope: !2993)
!3001 = !{i64 2154367904, i64 2154367924, i64 2154367987}
!3002 = !DILocation(line: 55, column: 1, scope: !2993)
!3003 = !{i64 2154368322, i64 2154368342, i64 2154368405}
!3004 = !DILocation(line: 56, column: 1, scope: !2993)
!3005 = !{i64 2154368740, i64 2154368760, i64 2154368823}
!3006 = !DILocation(line: 57, column: 1, scope: !2993)
!3007 = !{i64 2154369158, i64 2154369178, i64 2154369241}
!3008 = !DILocation(line: 58, column: 1, scope: !2993)
!3009 = !{i64 2154369576, i64 2154369596, i64 2154369659}
!3010 = !DILocation(line: 59, column: 1, scope: !2993)
!3011 = !{i64 2154369994, i64 2154370014, i64 2154370077}
!3012 = !DILocation(line: 60, column: 1, scope: !2993)
!3013 = !{i64 2154370418, i64 2154370438, i64 2154370501}
!3014 = !DILocation(line: 61, column: 1, scope: !2993)
!3015 = !{i64 2154370735, i64 2154370755, i64 2154370818}
!3016 = !DILocation(line: 70, column: 1, scope: !2993)
!3017 = !{i64 2154370964, i64 2154370984, i64 2154371047}
!3018 = !DILocation(line: 72, column: 1, scope: !2993)
!3019 = !{i64 2154371296, i64 2154371316, i64 2154371379}
!3020 = !DILocation(line: 73, column: 1, scope: !2993)
!3021 = !{i64 2154375807, i64 2154375827, i64 2154375890}
!3022 = !DILocation(line: 74, column: 1, scope: !2993)
!3023 = !{i64 2154376257, i64 2154376277, i64 2154376340}
!3024 = !DILocation(line: 75, column: 1, scope: !2993)
!3025 = !{i64 2154376707, i64 2154376727, i64 2154376790}
!3026 = !DILocation(line: 76, column: 1, scope: !2993)
!3027 = !{i64 2154377157, i64 2154377177, i64 2154377240}
!3028 = !DILocation(line: 77, column: 1, scope: !2993)
!3029 = !{i64 2154377607, i64 2154377627, i64 2154377690}
!3030 = !DILocation(line: 78, column: 1, scope: !2993)
!3031 = !{i64 2154378057, i64 2154378077, i64 2154378140}
!3032 = !DILocation(line: 79, column: 1, scope: !2993)
!3033 = !{i64 2154378507, i64 2154378527, i64 2154378590}
!3034 = !DILocation(line: 80, column: 1, scope: !2993)
!3035 = !{i64 2154378960, i64 2154378980, i64 2154379043}
!3036 = !DILocation(line: 84, column: 1, scope: !2993)
!3037 = !{i64 2154379292, i64 2154379312, i64 2154379375}
!3038 = !DILocation(line: 91, column: 1, scope: !2993)
!3039 = !{i64 2154379689, i64 2154379709, i64 2154379772}
!3040 = !DILocation(line: 93, column: 1, scope: !2993)
!3041 = !{i64 2154380056, i64 2154380076, i64 2154380139}
!3042 = !DILocation(line: 106, column: 1, scope: !2993)
!3043 = !{i64 2154380326, i64 2154380346, i64 2154380409}
!3044 = !DILocation(line: 11, column: 1, scope: !3045)
!3045 = !DILexicalBlockFile(scope: !2934, file: !3046, discriminator: 0)
!3046 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3047 = distinct !DISubprogram(name: "test_thread", scope: !125, file: !125, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3048)
!3048 = !{!3049, !3050, !3051, !3052, !3053, !3054, !3058, !3059, !3060, !3061, !3065}
!3049 = !DILocalVariable(name: "arg1", arg: 1, scope: !3047, file: !125, line: 33, type: !113)
!3050 = !DILocalVariable(name: "arg2", arg: 2, scope: !3047, file: !125, line: 33, type: !113)
!3051 = !DILocalVariable(name: "arg3", arg: 3, scope: !3047, file: !125, line: 33, type: !113)
!3052 = !DILocalVariable(name: "counter", scope: !3047, file: !125, line: 35, type: !102)
!3053 = !DILocalVariable(name: "buffer", scope: !3047, file: !125, line: 36, type: !106)
!3054 = !DILocalVariable(name: "array", scope: !3047, file: !125, line: 52, type: !3055)
!3055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 26912, elements: !3056)
!3056 = !{!3057}
!3057 = !DISubrange(count: 841)
!3058 = !DILocalVariable(name: "carry", scope: !3047, file: !125, line: 53, type: !119)
!3059 = !DILocalVariable(name: "i", scope: !3047, file: !125, line: 54, type: !119)
!3060 = !DILocalVariable(name: "j", scope: !3047, file: !125, line: 54, type: !119)
!3061 = !DILocalVariable(name: "sum", scope: !3062, file: !125, line: 61, type: !119)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !125, line: 60, column: 35)
!3063 = distinct !DILexicalBlock(scope: !3064, file: !125, line: 60, column: 2)
!3064 = distinct !DILexicalBlock(scope: !3047, file: !125, line: 60, column: 2)
!3065 = !DILocalVariable(name: "value", scope: !3062, file: !125, line: 61, type: !119)
!3066 = !DILocation(line: 0, scope: !3047)
!3067 = !DILocation(line: 52, column: 2, scope: !3047)
!3068 = !DILocation(line: 52, column: 6, scope: !3047)
!3069 = !DILocation(line: 56, column: 2, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3047, file: !125, line: 56, column: 2)
!3071 = !DILocation(line: 57, column: 3, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !125, line: 56, column: 31)
!3073 = distinct !DILexicalBlock(scope: !3070, file: !125, line: 56, column: 2)
!3074 = !DILocation(line: 57, column: 12, scope: !3072)
!3075 = !DILocation(line: 56, column: 27, scope: !3073)
!3076 = !DILocation(line: 56, column: 16, scope: !3073)
!3077 = distinct !{!3077, !3069, !3078}
!3078 = !DILocation(line: 58, column: 2, scope: !3070)
!3079 = !DILocation(line: 0, scope: !3062)
!3080 = !DILocation(line: 63, column: 3, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3062, file: !125, line: 63, column: 3)
!3082 = !DILocation(line: 64, column: 14, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !125, line: 63, column: 27)
!3084 = distinct !DILexicalBlock(scope: !3081, file: !125, line: 63, column: 3)
!3085 = !DILocation(line: 64, column: 31, scope: !3083)
!3086 = !DILocation(line: 64, column: 29, scope: !3083)
!3087 = !DILocation(line: 64, column: 18, scope: !3083)
!3088 = !DILocation(line: 65, column: 24, scope: !3083)
!3089 = !DILocation(line: 65, column: 28, scope: !3083)
!3090 = !DILocation(line: 66, column: 8, scope: !3083)
!3091 = !DILocation(line: 65, column: 13, scope: !3083)
!3092 = !DILocation(line: 63, column: 22, scope: !3084)
!3093 = !DILocation(line: 63, column: 17, scope: !3084)
!3094 = distinct !{!3094, !3080, !3095}
!3095 = !DILocation(line: 67, column: 3, scope: !3081)
!3096 = !DILocation(line: 69, column: 23, scope: !3062)
!3097 = !DILocation(line: 69, column: 17, scope: !3062)
!3098 = !DILocation(line: 73, column: 3, scope: !3062)
!3099 = !DILocation(line: 74, column: 10, scope: !3062)
!3100 = !DILocation(line: 60, column: 28, scope: !3063)
!3101 = !DILocation(line: 60, column: 21, scope: !3063)
!3102 = !DILocation(line: 60, column: 2, scope: !3064)
!3103 = distinct !{!3103, !3102, !3104}
!3104 = !DILocation(line: 75, column: 2, scope: !3064)
!3105 = !DILocation(line: 35, column: 22, scope: !3047)
!3106 = !DILocation(line: 77, column: 2, scope: !3047)
!3107 = !DILocation(line: 78, column: 1, scope: !3047)
!3108 = distinct !DISubprogram(name: "atomic_dec", scope: !3109, file: !3109, line: 141, type: !3110, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3113)
!3109 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3110 = !DISubroutineType(types: !3111)
!3111 = !{!3112, !102}
!3112 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !104, line: 23, baseType: !103)
!3113 = !{!3114}
!3114 = !DILocalVariable(name: "target", arg: 1, scope: !3108, file: !3109, line: 141, type: !102)
!3115 = !DILocation(line: 0, scope: !3108)
!3116 = !DILocation(line: 143, column: 9, scope: !3108)
!3117 = !DILocation(line: 143, column: 2, scope: !3108)
!3118 = distinct !DISubprogram(name: "atomic_sub", scope: !3109, file: !3109, line: 105, type: !3119, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3121)
!3119 = !DISubroutineType(types: !3120)
!3120 = !{!3112, !102, !3112}
!3121 = !{!3122, !3123}
!3122 = !DILocalVariable(name: "target", arg: 1, scope: !3118, file: !3109, line: 105, type: !102)
!3123 = !DILocalVariable(name: "value", arg: 2, scope: !3118, file: !3109, line: 105, type: !3112)
!3124 = !DILocation(line: 0, scope: !3118)
!3125 = !DILocation(line: 107, column: 9, scope: !3118)
!3126 = !DILocation(line: 107, column: 2, scope: !3118)
!3127 = distinct !DISubprogram(name: "main", scope: !125, file: !125, line: 80, type: !2936, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3128)
!3128 = !{!3129, !3130, !3131, !3132, !3133}
!3129 = !DILocalVariable(name: "start_time", scope: !3127, file: !125, line: 82, type: !118)
!3130 = !DILocalVariable(name: "stop_time", scope: !3127, file: !125, line: 82, type: !118)
!3131 = !DILocalVariable(name: "cycles_spent", scope: !3127, file: !125, line: 82, type: !118)
!3132 = !DILocalVariable(name: "nanoseconds_spent", scope: !3127, file: !125, line: 82, type: !118)
!3133 = !DILocalVariable(name: "i", scope: !3127, file: !125, line: 83, type: !119)
!3134 = !DILocation(line: 85, column: 2, scope: !3127)
!3135 = !DILocation(line: 89, column: 15, scope: !3127)
!3136 = !DILocation(line: 0, scope: !3127)
!3137 = !DILocation(line: 91, column: 2, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3127, file: !125, line: 91, column: 2)
!3139 = !DILocation(line: 99, column: 9, scope: !3127)
!3140 = !DILocation(line: 99, column: 2, scope: !3127)
!3141 = !DILocation(line: 92, column: 20, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3143, file: !125, line: 91, column: 36)
!3143 = distinct !DILexicalBlock(scope: !3138, file: !125, line: 91, column: 2)
!3144 = !DILocation(line: 92, column: 32, scope: !3142)
!3145 = !DILocation(line: 94, column: 37, scope: !3142)
!3146 = !DILocation(line: 92, column: 3, scope: !3142)
!3147 = !DILocation(line: 91, column: 32, scope: !3143)
!3148 = !DILocation(line: 91, column: 16, scope: !3143)
!3149 = distinct !{!3149, !3137, !3150}
!3150 = !DILocation(line: 96, column: 2, scope: !3138)
!3151 = !DILocation(line: 100, column: 3, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3127, file: !125, line: 99, column: 18)
!3153 = distinct !{!3153, !3140, !3154}
!3154 = !DILocation(line: 101, column: 2, scope: !3127)
!3155 = !DILocation(line: 104, column: 14, scope: !3127)
!3156 = !DILocation(line: 109, column: 2, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3127, file: !125, line: 109, column: 2)
!3158 = !DILocation(line: 110, column: 56, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !125, line: 109, column: 36)
!3160 = distinct !DILexicalBlock(scope: !3157, file: !125, line: 109, column: 2)
!3161 = !DILocation(line: 110, column: 3, scope: !3159)
!3162 = !DILocation(line: 109, column: 32, scope: !3160)
!3163 = !DILocation(line: 109, column: 16, scope: !3160)
!3164 = distinct !{!3164, !3156, !3165}
!3165 = !DILocation(line: 111, column: 2, scope: !3157)
!3166 = !DILocation(line: 106, column: 27, scope: !3127)
!3167 = !DILocation(line: 107, column: 52, scope: !3127)
!3168 = !DILocation(line: 107, column: 32, scope: !3127)
!3169 = !DILocation(line: 107, column: 22, scope: !3127)
!3170 = !DILocation(line: 114, column: 45, scope: !3127)
!3171 = !DILocation(line: 113, column: 2, scope: !3127)
!3172 = !DILocation(line: 115, column: 1, scope: !3127)
!3173 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3174, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2000)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!118}
!3176 = !DILocation(line: 1677, column: 9, scope: !3173)
!3177 = !DILocation(line: 1677, column: 2, scope: !3173)
!3178 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3179, file: !3179, line: 403, type: !3180, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3182)
!3179 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!120, !120}
!3182 = !{!3183}
!3183 = !DILocalVariable(name: "t", arg: 1, scope: !3178, file: !3179, line: 403, type: !120)
!3184 = !DILocation(line: 0, scope: !3178)
!3185 = !DILocation(line: 406, column: 2, scope: !3178)
!3186 = distinct !DISubprogram(name: "k_thread_create", scope: !3187, file: !3187, line: 24, type: !3188, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3198)
!3187 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!3188 = !DISubroutineType(types: !3189)
!3189 = !{!3190, !3191, !3192, !239, !108, !113, !113, !113, !119, !118, !3194}
!3190 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !3191)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !127)
!3194 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !3195)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !3196)
!3196 = !{!3197}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3195, file: !115, line: 66, baseType: !114, size: 64)
!3198 = !{!3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208}
!3199 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3186, file: !3187, line: 24, type: !3191)
!3200 = !DILocalVariable(name: "stack", arg: 2, scope: !3186, file: !3187, line: 24, type: !3192)
!3201 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3186, file: !3187, line: 24, type: !239)
!3202 = !DILocalVariable(name: "entry", arg: 4, scope: !3186, file: !3187, line: 24, type: !108)
!3203 = !DILocalVariable(name: "p1", arg: 5, scope: !3186, file: !3187, line: 24, type: !113)
!3204 = !DILocalVariable(name: "p2", arg: 6, scope: !3186, file: !3187, line: 24, type: !113)
!3205 = !DILocalVariable(name: "p3", arg: 7, scope: !3186, file: !3187, line: 24, type: !113)
!3206 = !DILocalVariable(name: "prio", arg: 8, scope: !3186, file: !3187, line: 24, type: !119)
!3207 = !DILocalVariable(name: "options", arg: 9, scope: !3186, file: !3187, line: 24, type: !118)
!3208 = !DILocalVariable(name: "delay", arg: 10, scope: !3186, file: !3187, line: 24, type: !3194)
!3209 = !DILocation(line: 0, scope: !3186)
!3210 = !DILocation(line: 49, column: 2, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3186, file: !3187, line: 49, column: 2)
!3212 = !{i64 2154070675}
!3213 = !DILocation(line: 50, column: 9, scope: !3186)
!3214 = !DILocation(line: 50, column: 2, scope: !3186)
!3215 = distinct !DISubprogram(name: "k_sleep", scope: !3187, file: !3187, line: 91, type: !3216, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3218)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!743, !3194}
!3218 = !{!3219}
!3219 = !DILocalVariable(name: "timeout", arg: 1, scope: !3215, file: !3187, line: 91, type: !3194)
!3220 = !DILocation(line: 0, scope: !3215)
!3221 = !DILocation(line: 99, column: 2, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3215, file: !3187, line: 99, column: 2)
!3223 = !{i64 2154070879}
!3224 = !DILocation(line: 100, column: 9, scope: !3215)
!3225 = !DILocation(line: 100, column: 2, scope: !3215)
!3226 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !3179, file: !3179, line: 935, type: !3180, scopeLine: 936, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3227)
!3227 = !{!3228}
!3228 = !DILocalVariable(name: "t", arg: 1, scope: !3226, file: !3179, line: 935, type: !120)
!3229 = !DILocation(line: 0, scope: !3226)
!3230 = !DILocalVariable(name: "t", arg: 1, scope: !3231, file: !3179, line: 102, type: !120)
!3231 = distinct !DISubprogram(name: "z_tmcvt", scope: !3179, file: !3179, line: 102, type: !3232, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3234)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!120, !120, !118, !118, !345, !345, !345, !345}
!3234 = !{!3230, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244}
!3235 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3231, file: !3179, line: 102, type: !118)
!3236 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3231, file: !3179, line: 103, type: !118)
!3237 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3231, file: !3179, line: 103, type: !345)
!3238 = !DILocalVariable(name: "result32", arg: 5, scope: !3231, file: !3179, line: 104, type: !345)
!3239 = !DILocalVariable(name: "round_up", arg: 6, scope: !3231, file: !3179, line: 104, type: !345)
!3240 = !DILocalVariable(name: "round_off", arg: 7, scope: !3231, file: !3179, line: 105, type: !345)
!3241 = !DILocalVariable(name: "mul_ratio", scope: !3231, file: !3179, line: 107, type: !345)
!3242 = !DILocalVariable(name: "div_ratio", scope: !3231, file: !3179, line: 109, type: !345)
!3243 = !DILocalVariable(name: "off", scope: !3231, file: !3179, line: 116, type: !120)
!3244 = !DILocalVariable(name: "rdivisor", scope: !3245, file: !3179, line: 119, type: !118)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !3179, line: 118, column: 18)
!3246 = distinct !DILexicalBlock(scope: !3231, file: !3179, line: 118, column: 6)
!3247 = !DILocation(line: 0, scope: !3231, inlinedAt: !3248)
!3248 = distinct !DILocation(line: 938, column: 9, scope: !3226)
!3249 = !DILocation(line: 161, column: 14, scope: !3250, inlinedAt: !3248)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !3179, line: 157, column: 10)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !3179, line: 150, column: 14)
!3252 = distinct !DILexicalBlock(scope: !3253, file: !3179, line: 148, column: 7)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !3179, line: 147, column: 9)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !3179, line: 141, column: 13)
!3255 = distinct !DILexicalBlock(scope: !3231, file: !3179, line: 134, column: 6)
!3256 = !DILocation(line: 161, column: 25, scope: !3250, inlinedAt: !3248)
!3257 = !DILocation(line: 161, column: 50, scope: !3250, inlinedAt: !3248)
!3258 = !DILocation(line: 161, column: 65, scope: !3250, inlinedAt: !3248)
!3259 = !DILocation(line: 161, column: 33, scope: !3250, inlinedAt: !3248)
!3260 = !DILocation(line: 938, column: 2, scope: !3226)
!3261 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3262, file: !3262, line: 24, type: !3174, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2000)
!3262 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3263 = !DILocation(line: 26, column: 9, scope: !3261)
!3264 = !DILocation(line: 26, column: 2, scope: !3261)
!3265 = distinct !DISubprogram(name: "cbvprintf_package", scope: !286, file: !286, line: 233, type: !3266, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3275)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!119, !113, !239, !118, !278, !3268}
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3269, line: 99, baseType: !3270)
!3269 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3269, line: 40, baseType: !3271)
!3271 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3272)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3273)
!3273 = !{!3274}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3272, file: !286, line: 18, baseType: !113, size: 32)
!3275 = !{!3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3311, !3320, !3323, !3324, !3327, !3330, !3333, !3336, !3342}
!3276 = !DILocalVariable(name: "packaged", arg: 1, scope: !3265, file: !286, line: 233, type: !113)
!3277 = !DILocalVariable(name: "len", arg: 2, scope: !3265, file: !286, line: 233, type: !239)
!3278 = !DILocalVariable(name: "flags", arg: 3, scope: !3265, file: !286, line: 233, type: !118)
!3279 = !DILocalVariable(name: "fmt", arg: 4, scope: !3265, file: !286, line: 234, type: !278)
!3280 = !DILocalVariable(name: "ap", arg: 5, scope: !3265, file: !286, line: 234, type: !3268)
!3281 = !DILocalVariable(name: "buf0", scope: !3265, file: !286, line: 247, type: !284)
!3282 = !DILocalVariable(name: "buf", scope: !3265, file: !286, line: 248, type: !284)
!3283 = !DILocalVariable(name: "size", scope: !3265, file: !286, line: 249, type: !32)
!3284 = !DILocalVariable(name: "align", scope: !3265, file: !286, line: 250, type: !32)
!3285 = !DILocalVariable(name: "str_ptr_pos", scope: !3265, file: !286, line: 251, type: !3286)
!3286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !267)
!3287 = !DILocalVariable(name: "str_ptr_arg", scope: !3265, file: !286, line: 252, type: !3286)
!3288 = !DILocalVariable(name: "s_idx", scope: !3265, file: !286, line: 253, type: !32)
!3289 = !DILocalVariable(name: "s_rw_cnt", scope: !3265, file: !286, line: 254, type: !32)
!3290 = !DILocalVariable(name: "s_ro_cnt", scope: !3265, file: !286, line: 255, type: !32)
!3291 = !DILocalVariable(name: "arg_idx", scope: !3265, file: !286, line: 256, type: !119)
!3292 = !DILocalVariable(name: "i", scope: !3265, file: !286, line: 257, type: !32)
!3293 = !DILocalVariable(name: "s", scope: !3265, file: !286, line: 258, type: !278)
!3294 = !DILocalVariable(name: "parsing", scope: !3265, file: !286, line: 259, type: !345)
!3295 = !DILocalVariable(name: "rws_pos_en", scope: !3265, file: !286, line: 263, type: !345)
!3296 = !DILocalVariable(name: "fros_cnt", scope: !3265, file: !286, line: 268, type: !119)
!3297 = !DILocalVariable(name: "is_str_arg", scope: !3265, file: !286, line: 269, type: !345)
!3298 = !DILocalVariable(name: "pkg_hdr", scope: !3265, file: !286, line: 270, type: !3299)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 32)
!3300 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3301, line: 78, size: 32, elements: !3302)
!3301 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3302 = !{!3303, !3310}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3300, file: !3301, line: 80, baseType: !3304, size: 32)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3301, line: 45, size: 32, elements: !3305)
!3305 = !{!3306, !3307, !3308, !3309}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3304, file: !3301, line: 47, baseType: !185, size: 8)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3304, file: !3301, line: 50, baseType: !185, size: 8, offset: 8)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3304, file: !3301, line: 53, baseType: !185, size: 8, offset: 16)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3304, file: !3301, line: 56, baseType: !185, size: 8, offset: 24)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3300, file: !3301, line: 82, baseType: !113, size: 32)
!3311 = !DILocalVariable(name: "v", scope: !3312, file: !286, line: 567, type: !3316)
!3312 = distinct !DILexicalBlock(scope: !3313, file: !286, line: 562, column: 14)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !286, line: 481, column: 18)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !286, line: 466, column: 3)
!3315 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 343, column: 15)
!3316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3265, file: !286, line: 567, size: 64, elements: !3317)
!3317 = !{!3318, !3319}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3316, file: !286, line: 567, baseType: !276, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3316, file: !286, line: 567, baseType: !274, size: 64)
!3320 = !DILocalVariable(name: "is_ro", scope: !3321, file: !286, line: 620, type: !345)
!3321 = distinct !DILexicalBlock(scope: !3322, file: !286, line: 613, column: 19)
!3322 = distinct !DILexicalBlock(scope: !3315, file: !286, line: 613, column: 7)
!3323 = !DILocalVariable(name: "do_ro", scope: !3321, file: !286, line: 621, type: !345)
!3324 = !DILocalVariable(name: "s_ptr_idx", scope: !3325, file: !286, line: 626, type: !118)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !286, line: 625, column: 11)
!3326 = distinct !DILexicalBlock(scope: !3321, file: !286, line: 623, column: 8)
!3327 = !DILocalVariable(name: "v", scope: !3328, file: !286, line: 684, type: !119)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !286, line: 683, column: 35)
!3329 = distinct !DILexicalBlock(scope: !3322, file: !286, line: 683, column: 14)
!3330 = !DILocalVariable(name: "v", scope: !3331, file: !286, line: 691, type: !105)
!3331 = distinct !DILexicalBlock(scope: !3332, file: !286, line: 690, column: 36)
!3332 = distinct !DILexicalBlock(scope: !3329, file: !286, line: 690, column: 14)
!3333 = !DILocalVariable(name: "v", scope: !3334, file: !286, line: 698, type: !117)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !286, line: 697, column: 41)
!3335 = distinct !DILexicalBlock(scope: !3332, file: !286, line: 697, column: 14)
!3336 = !DILocalVariable(name: "pos", scope: !3337, file: !286, line: 762, type: !185)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !286, line: 757, column: 31)
!3338 = distinct !DILexicalBlock(scope: !3339, file: !286, line: 757, column: 3)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !286, line: 757, column: 3)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !286, line: 756, column: 16)
!3341 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 756, column: 6)
!3342 = !DILabel(scope: !3321, name: "process_string", file: !286, line: 615)
!3343 = !DILocation(line: 0, scope: !3265)
!3344 = !DILocation(line: 251, column: 2, scope: !3265)
!3345 = !DILocation(line: 251, column: 10, scope: !3265)
!3346 = !DILocation(line: 252, column: 2, scope: !3265)
!3347 = !DILocation(line: 252, column: 10, scope: !3265)
!3348 = !DILocation(line: 263, column: 29, scope: !3265)
!3349 = !DILocation(line: 263, column: 21, scope: !3265)
!3350 = !DILocation(line: 268, column: 21, scope: !3265)
!3351 = !DILocation(line: 268, column: 19, scope: !3265)
!3352 = !DILocation(line: 273, column: 6, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 273, column: 6)
!3354 = !DILocation(line: 273, column: 26, scope: !3353)
!3355 = !DILocation(line: 273, column: 6, scope: !3265)
!3356 = !DILocation(line: 297, column: 6, scope: !3265)
!3357 = !DILocation(line: 305, column: 11, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 305, column: 6)
!3359 = !DILocation(line: 305, column: 6, scope: !3265)
!3360 = !DILocation(line: 327, column: 19, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 327, column: 6)
!3362 = !DILocation(line: 327, column: 22, scope: !3361)
!3363 = !DILocation(line: 327, column: 33, scope: !3361)
!3364 = !DILocation(line: 327, column: 50, scope: !3361)
!3365 = !DILocation(line: 327, column: 6, scope: !3265)
!3366 = !DILocation(line: 338, column: 9, scope: !3265)
!3367 = !DILocation(line: 341, column: 2, scope: !3265)
!3368 = !DILocation(line: 472, column: 8, scope: !3314)
!3369 = !DILocation(line: 473, column: 14, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !286, line: 473, column: 9)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !286, line: 472, column: 18)
!3372 = distinct !DILexicalBlock(scope: !3314, file: !286, line: 472, column: 8)
!3373 = !DILocation(line: 473, column: 9, scope: !3371)
!3374 = !DILocation(line: 479, column: 5, scope: !3371)
!3375 = !DILocation(line: 468, column: 9, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3314, file: !286, line: 468, column: 8)
!3377 = !DILocation(line: 468, column: 8, scope: !3376)
!3378 = !DILocation(line: 468, column: 15, scope: !3376)
!3379 = !DILocation(line: 468, column: 8, scope: !3314)
!3380 = distinct !{!3380, !3381, !3382}
!3381 = !DILocation(line: 343, column: 2, scope: !3265)
!3382 = !DILocation(line: 712, column: 2, scope: !3265)
!3383 = !DILocation(line: 481, column: 4, scope: !3314)
!3384 = !DILocation(line: 484, column: 12, scope: !3313)
!3385 = !DILocation(line: 485, column: 5, scope: !3313)
!3386 = !DILocation(line: 505, column: 5, scope: !3313)
!3387 = !DILocation(line: 518, column: 5, scope: !3313)
!3388 = !DILocation(line: 523, column: 5, scope: !3313)
!3389 = !DILocation(line: 532, column: 9, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3313, file: !286, line: 532, column: 9)
!3391 = !DILocation(line: 532, column: 17, scope: !3390)
!3392 = !DILocation(line: 532, column: 9, scope: !3313)
!3393 = !DILocation(line: 533, column: 10, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !286, line: 533, column: 10)
!3395 = distinct !DILexicalBlock(scope: !3390, file: !286, line: 532, column: 25)
!3396 = !DILocation(line: 533, column: 18, scope: !3394)
!3397 = !DILocation(line: 0, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3312, file: !286, line: 569, column: 9)
!3399 = !DILocation(line: 0, scope: !3312)
!3400 = !DILocation(line: 579, column: 20, scope: !3312)
!3401 = !DILocation(line: 579, column: 11, scope: !3312)
!3402 = !DILocation(line: 580, column: 9, scope: !3312)
!3403 = !DILocation(line: 582, column: 21, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !286, line: 582, column: 10)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !286, line: 580, column: 23)
!3406 = distinct !DILexicalBlock(scope: !3312, file: !286, line: 580, column: 9)
!3407 = !DILocation(line: 582, column: 28, scope: !3404)
!3408 = !DILocation(line: 582, column: 10, scope: !3405)
!3409 = !DILocation(line: 0, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !286, line: 587, column: 17)
!3411 = distinct !DILexicalBlock(scope: !3405, file: !286, line: 585, column: 10)
!3412 = !DILocation(line: 593, column: 9, scope: !3312)
!3413 = !DILocation(line: 600, column: 5, scope: !3313)
!3414 = !DILocation(line: 605, column: 18, scope: !3315)
!3415 = !DILocation(line: 605, column: 9, scope: !3315)
!3416 = !DILocation(line: 608, column: 20, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3315, file: !286, line: 608, column: 7)
!3418 = !DILocation(line: 608, column: 23, scope: !3417)
!3419 = !DILocation(line: 608, column: 34, scope: !3417)
!3420 = !DILocation(line: 608, column: 41, scope: !3417)
!3421 = !DILocation(line: 608, column: 7, scope: !3315)
!3422 = !DILocation(line: 613, column: 7, scope: !3315)
!3423 = !DILocation(line: 614, column: 8, scope: !3321)
!3424 = !DILocation(line: 614, column: 4, scope: !3321)
!3425 = !DILocation(line: 256, column: 6, scope: !3265)
!3426 = !DILocation(line: 254, column: 15, scope: !3265)
!3427 = !DILocation(line: 320, column: 7, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3358, file: !286, line: 305, column: 20)
!3429 = !DILocation(line: 615, column: 1, scope: !3321)
!3430 = !DILocation(line: 616, column: 8, scope: !3321)
!3431 = !DILocation(line: 617, column: 5, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !286, line: 616, column: 22)
!3433 = distinct !DILexicalBlock(scope: !3321, file: !286, line: 616, column: 8)
!3434 = !DILocation(line: 617, column: 25, scope: !3432)
!3435 = !DILocation(line: 618, column: 4, scope: !3432)
!3436 = !DILocation(line: 620, column: 26, scope: !3321)
!3437 = !DILocation(line: 620, column: 29, scope: !3321)
!3438 = !DILocation(line: 620, column: 17, scope: !3321)
!3439 = !DILocation(line: 620, column: 43, scope: !3321)
!3440 = !DILocation(line: 0, scope: !3321)
!3441 = !DILocation(line: 623, column: 14, scope: !3326)
!3442 = !DILocation(line: 626, column: 26, scope: !3325)
!3443 = !DILocation(line: 626, column: 37, scope: !3325)
!3444 = !DILocation(line: 0, scope: !3325)
!3445 = !DILocation(line: 634, column: 15, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3325, file: !286, line: 634, column: 9)
!3447 = !DILocation(line: 635, column: 6, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !286, line: 635, column: 6)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !286, line: 635, column: 6)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !286, line: 635, column: 6)
!3451 = distinct !DILexicalBlock(scope: !3446, file: !286, line: 634, column: 44)
!3452 = !DILocation(line: 639, column: 15, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3325, file: !286, line: 639, column: 9)
!3454 = !DILocation(line: 639, column: 9, scope: !3325)
!3455 = !DILocation(line: 640, column: 6, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !286, line: 640, column: 6)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !286, line: 640, column: 6)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !286, line: 640, column: 6)
!3459 = distinct !DILexicalBlock(scope: !3453, file: !286, line: 639, column: 43)
!3460 = !DILocation(line: 644, column: 9, scope: !3325)
!3461 = !DILocation(line: 649, column: 27, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !286, line: 644, column: 23)
!3463 = distinct !DILexicalBlock(scope: !3325, file: !286, line: 644, column: 9)
!3464 = !DILocation(line: 649, column: 6, scope: !3462)
!3465 = !DILocation(line: 649, column: 25, scope: !3462)
!3466 = !DILocation(line: 650, column: 27, scope: !3462)
!3467 = !DILocation(line: 650, column: 6, scope: !3462)
!3468 = !DILocation(line: 650, column: 25, scope: !3462)
!3469 = !DILocation(line: 651, column: 10, scope: !3462)
!3470 = !DILocation(line: 653, column: 26, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !286, line: 651, column: 17)
!3472 = distinct !DILexicalBlock(scope: !3462, file: !286, line: 651, column: 10)
!3473 = !DILocation(line: 654, column: 15, scope: !3471)
!3474 = !DILocation(line: 655, column: 6, scope: !3471)
!3475 = !DILocation(line: 656, column: 15, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3472, file: !286, line: 655, column: 13)
!3477 = !DILocation(line: 658, column: 16, scope: !3463)
!3478 = !DILocation(line: 663, column: 10, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !286, line: 658, column: 23)
!3480 = distinct !DILexicalBlock(scope: !3463, file: !286, line: 658, column: 16)
!3481 = !DILocation(line: 664, column: 5, scope: !3479)
!3482 = !DILocation(line: 664, column: 16, scope: !3480)
!3483 = !DILocation(line: 669, column: 10, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !286, line: 664, column: 28)
!3485 = distinct !DILexicalBlock(scope: !3480, file: !286, line: 664, column: 16)
!3486 = !DILocation(line: 670, column: 5, scope: !3484)
!3487 = !DILocation(line: 675, column: 13, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3485, file: !286, line: 670, column: 12)
!3489 = !DILocation(line: 675, column: 27, scope: !3488)
!3490 = !DILocation(line: 675, column: 10, scope: !3488)
!3491 = !DILocation(line: 678, column: 10, scope: !3325)
!3492 = !DILocation(line: 680, column: 8, scope: !3321)
!3493 = !DILocation(line: 683, column: 14, scope: !3322)
!3494 = !DILocation(line: 684, column: 12, scope: !3328)
!3495 = !DILocation(line: 0, scope: !3328)
!3496 = !DILocation(line: 686, column: 8, scope: !3328)
!3497 = !DILocation(line: 687, column: 5, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !286, line: 686, column: 22)
!3499 = distinct !DILexicalBlock(scope: !3328, file: !286, line: 686, column: 8)
!3500 = !DILocation(line: 687, column: 17, scope: !3498)
!3501 = !DILocation(line: 688, column: 4, scope: !3498)
!3502 = !DILocation(line: 698, column: 18, scope: !3334)
!3503 = !DILocation(line: 0, scope: !3334)
!3504 = !DILocation(line: 700, column: 8, scope: !3334)
!3505 = !DILocation(line: 704, column: 6, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3507, file: !286, line: 703, column: 12)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !286, line: 701, column: 9)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !286, line: 700, column: 22)
!3509 = distinct !DILexicalBlock(scope: !3334, file: !286, line: 700, column: 8)
!3510 = !DILocation(line: 704, column: 24, scope: !3506)
!3511 = !DILocation(line: 706, column: 4, scope: !3508)
!3512 = !DILocation(line: 709, column: 4, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !286, line: 709, column: 4)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !286, line: 709, column: 4)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !286, line: 709, column: 4)
!3516 = distinct !DILexicalBlock(scope: !3335, file: !286, line: 708, column: 10)
!3517 = !DILocation(line: 0, scope: !3329)
!3518 = !DILocation(line: 0, scope: !3315)
!3519 = !DILocation(line: 720, column: 6, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 720, column: 6)
!3521 = !DILocation(line: 720, column: 17, scope: !3520)
!3522 = !DILocation(line: 720, column: 31, scope: !3520)
!3523 = !DILocation(line: 720, column: 6, scope: !3265)
!3524 = !DILocation(line: 721, column: 3, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !286, line: 721, column: 3)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !286, line: 721, column: 3)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !286, line: 721, column: 3)
!3528 = distinct !DILexicalBlock(scope: !3520, file: !286, line: 720, column: 38)
!3529 = !DILocation(line: 729, column: 6, scope: !3265)
!3530 = !DILocation(line: 730, column: 21, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !286, line: 729, column: 20)
!3532 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 729, column: 6)
!3533 = !DILocation(line: 730, column: 27, scope: !3531)
!3534 = !DILocation(line: 730, column: 3, scope: !3531)
!3535 = !DILocation(line: 737, column: 22, scope: !3265)
!3536 = !DILocation(line: 737, column: 20, scope: !3265)
!3537 = !DILocation(line: 0, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 739, column: 6)
!3539 = !DILocation(line: 745, column: 17, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3538, file: !286, line: 743, column: 9)
!3541 = !DILocation(line: 745, column: 25, scope: !3540)
!3542 = !DILocation(line: 746, column: 17, scope: !3540)
!3543 = !DILocation(line: 746, column: 28, scope: !3540)
!3544 = !DILocation(line: 749, column: 29, scope: !3265)
!3545 = !DILocation(line: 749, column: 16, scope: !3265)
!3546 = !DILocation(line: 749, column: 27, scope: !3265)
!3547 = !DILocation(line: 756, column: 6, scope: !3341)
!3548 = !DILocation(line: 756, column: 6, scope: !3265)
!3549 = !DILocation(line: 757, column: 3, scope: !3339)
!3550 = !DILocation(line: 758, column: 10, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3337, file: !286, line: 758, column: 8)
!3552 = !DILocation(line: 758, column: 25, scope: !3551)
!3553 = !DILocation(line: 758, column: 8, scope: !3337)
!3554 = !DILocation(line: 0, scope: !3337)
!3555 = !DILocation(line: 765, column: 8, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3337, file: !286, line: 765, column: 8)
!3557 = !DILocation(line: 765, column: 19, scope: !3556)
!3558 = !DILocation(line: 765, column: 23, scope: !3556)
!3559 = !DILocation(line: 765, column: 8, scope: !3337)
!3560 = !DILocation(line: 762, column: 33, scope: !3337)
!3561 = !DILocation(line: 769, column: 8, scope: !3337)
!3562 = !DILocation(line: 769, column: 11, scope: !3337)
!3563 = !DILocation(line: 757, column: 27, scope: !3338)
!3564 = !DILocation(line: 757, column: 17, scope: !3338)
!3565 = distinct !{!3565, !3549, !3566}
!3566 = !DILocation(line: 770, column: 3, scope: !3339)
!3567 = !DILocation(line: 774, column: 16, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !286, line: 774, column: 2)
!3569 = distinct !DILexicalBlock(scope: !3265, file: !286, line: 774, column: 2)
!3570 = !DILocation(line: 774, column: 2, scope: !3569)
!3571 = !DILocation(line: 776, column: 16, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !286, line: 776, column: 7)
!3573 = distinct !DILexicalBlock(scope: !3568, file: !286, line: 774, column: 30)
!3574 = !DILocation(line: 776, column: 19, scope: !3572)
!3575 = !DILocation(line: 776, column: 34, scope: !3572)
!3576 = !DILocation(line: 776, column: 7, scope: !3573)
!3577 = !DILocation(line: 780, column: 7, scope: !3573)
!3578 = !DILocation(line: 782, column: 13, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !286, line: 780, column: 19)
!3580 = distinct !DILexicalBlock(scope: !3573, file: !286, line: 780, column: 7)
!3581 = !DILocation(line: 782, column: 8, scope: !3579)
!3582 = !DILocation(line: 782, column: 11, scope: !3579)
!3583 = !DILocation(line: 783, column: 3, scope: !3579)
!3584 = !DILocation(line: 785, column: 26, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3580, file: !286, line: 783, column: 10)
!3586 = !DILocation(line: 785, column: 41, scope: !3585)
!3587 = !DILocation(line: 785, column: 24, scope: !3585)
!3588 = !DILocation(line: 785, column: 8, scope: !3585)
!3589 = !DILocation(line: 787, column: 52, scope: !3585)
!3590 = !DILocation(line: 789, column: 11, scope: !3585)
!3591 = !DILocation(line: 789, column: 21, scope: !3585)
!3592 = !DILocation(line: 0, scope: !3580)
!3593 = !DILocation(line: 793, column: 7, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3573, file: !286, line: 793, column: 7)
!3595 = !DILocation(line: 793, column: 18, scope: !3594)
!3596 = !DILocation(line: 793, column: 22, scope: !3594)
!3597 = !DILocation(line: 793, column: 29, scope: !3594)
!3598 = !DILocation(line: 793, column: 7, scope: !3573)
!3599 = !DILocation(line: 797, column: 12, scope: !3573)
!3600 = !DILocation(line: 797, column: 7, scope: !3573)
!3601 = !DILocation(line: 797, column: 10, scope: !3573)
!3602 = !DILocation(line: 799, column: 3, scope: !3573)
!3603 = !DILocation(line: 800, column: 7, scope: !3573)
!3604 = !DILocation(line: 801, column: 2, scope: !3573)
!3605 = !DILocation(line: 338, column: 4, scope: !3265)
!3606 = !DILocation(line: 774, column: 26, scope: !3568)
!3607 = distinct !{!3607, !3570, !3608}
!3608 = !DILocation(line: 801, column: 2, scope: !3569)
!3609 = !DILocation(line: 808, column: 9, scope: !3265)
!3610 = !DILocation(line: 808, column: 2, scope: !3265)
!3611 = !DILocation(line: 813, column: 1, scope: !3265)
!3612 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !286, file: !286, line: 33, type: !3613, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3615)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!345, !278}
!3615 = !{!3616}
!3616 = !DILocalVariable(name: "addr", arg: 1, scope: !3612, file: !286, line: 33, type: !278)
!3617 = !DILocation(line: 0, scope: !3612)
!3618 = !DILocation(line: 41, column: 9, scope: !3612)
!3619 = !DILocation(line: 41, column: 2, scope: !3612)
!3620 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3621, file: !3621, line: 24, type: !3622, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3624)
!3621 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!345, !13}
!3624 = !{!3625}
!3625 = !DILocalVariable(name: "addr", arg: 1, scope: !3620, file: !3621, line: 24, type: !13)
!3626 = !DILocation(line: 0, scope: !3620)
!3627 = !DILocation(line: 49, column: 30, scope: !3620)
!3628 = !DILocation(line: 49, column: 57, scope: !3620)
!3629 = !DILocation(line: 49, column: 2, scope: !3620)
!3630 = distinct !DISubprogram(name: "cbprintf_package", scope: !286, file: !286, line: 815, type: !3631, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3633)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!119, !113, !239, !118, !278, null}
!3633 = !{!3634, !3635, !3636, !3637, !3638, !3639}
!3634 = !DILocalVariable(name: "packaged", arg: 1, scope: !3630, file: !286, line: 815, type: !113)
!3635 = !DILocalVariable(name: "len", arg: 2, scope: !3630, file: !286, line: 815, type: !239)
!3636 = !DILocalVariable(name: "flags", arg: 3, scope: !3630, file: !286, line: 815, type: !118)
!3637 = !DILocalVariable(name: "format", arg: 4, scope: !3630, file: !286, line: 816, type: !278)
!3638 = !DILocalVariable(name: "ap", scope: !3630, file: !286, line: 818, type: !3268)
!3639 = !DILocalVariable(name: "ret", scope: !3630, file: !286, line: 819, type: !119)
!3640 = !DILocation(line: 0, scope: !3630)
!3641 = !DILocation(line: 818, column: 2, scope: !3630)
!3642 = !DILocation(line: 818, column: 10, scope: !3630)
!3643 = !DILocation(line: 821, column: 2, scope: !3630)
!3644 = !DILocation(line: 822, column: 8, scope: !3630)
!3645 = !DILocation(line: 823, column: 2, scope: !3630)
!3646 = !DILocation(line: 825, column: 1, scope: !3630)
!3647 = !DILocation(line: 824, column: 2, scope: !3630)
!3648 = distinct !DISubprogram(name: "cbpprintf_external", scope: !286, file: !286, line: 827, type: !3649, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3659)
!3649 = !DISubroutineType(types: !3650)
!3650 = !{!119, !3651, !3655, !113, !113}
!3651 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3301, line: 297, baseType: !3652)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 32)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!119, null}
!3655 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3301, line: 328, baseType: !3656)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 32)
!3657 = !DISubroutineType(types: !3658)
!3658 = !{!119, !3651, !113, !278, !3268}
!3659 = !{!3660, !3661, !3662, !3663, !3664, !3665, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678}
!3660 = !DILocalVariable(name: "out", arg: 1, scope: !3648, file: !286, line: 827, type: !3651)
!3661 = !DILocalVariable(name: "formatter", arg: 2, scope: !3648, file: !286, line: 828, type: !3655)
!3662 = !DILocalVariable(name: "ctx", arg: 3, scope: !3648, file: !286, line: 829, type: !113)
!3663 = !DILocalVariable(name: "packaged", arg: 4, scope: !3648, file: !286, line: 829, type: !113)
!3664 = !DILocalVariable(name: "buf", scope: !3648, file: !286, line: 831, type: !284)
!3665 = !DILocalVariable(name: "hdr", scope: !3648, file: !286, line: 832, type: !3666)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 32)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3301, line: 96, size: 64, elements: !3668)
!3668 = !{!3669, !3670}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3667, file: !3301, line: 98, baseType: !3300, size: 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3667, file: !3301, line: 101, baseType: !106, size: 32, offset: 32)
!3671 = !DILocalVariable(name: "s", scope: !3648, file: !286, line: 833, type: !106)
!3672 = !DILocalVariable(name: "ps", scope: !3648, file: !286, line: 833, type: !283)
!3673 = !DILocalVariable(name: "i", scope: !3648, file: !286, line: 834, type: !32)
!3674 = !DILocalVariable(name: "args_size", scope: !3648, file: !286, line: 834, type: !32)
!3675 = !DILocalVariable(name: "s_nbr", scope: !3648, file: !286, line: 834, type: !32)
!3676 = !DILocalVariable(name: "ros_nbr", scope: !3648, file: !286, line: 834, type: !32)
!3677 = !DILocalVariable(name: "rws_nbr", scope: !3648, file: !286, line: 834, type: !32)
!3678 = !DILocalVariable(name: "s_idx", scope: !3648, file: !286, line: 834, type: !32)
!3679 = !DILocation(line: 0, scope: !3648)
!3680 = !DILocation(line: 836, column: 10, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3648, file: !286, line: 836, column: 6)
!3682 = !DILocation(line: 836, column: 6, scope: !3648)
!3683 = !DILocation(line: 842, column: 28, scope: !3648)
!3684 = !DILocation(line: 842, column: 14, scope: !3648)
!3685 = !DILocation(line: 852, column: 16, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !286, line: 852, column: 2)
!3687 = distinct !DILexicalBlock(scope: !3648, file: !286, line: 852, column: 2)
!3688 = !DILocation(line: 852, column: 2, scope: !3687)
!3689 = !DILocation(line: 841, column: 28, scope: !3648)
!3690 = !DILocation(line: 841, column: 14, scope: !3648)
!3691 = !DILocation(line: 841, column: 32, scope: !3648)
!3692 = !DILocation(line: 847, column: 19, scope: !3648)
!3693 = !DILocation(line: 843, column: 28, scope: !3648)
!3694 = !DILocation(line: 843, column: 14, scope: !3648)
!3695 = !DILocation(line: 847, column: 31, scope: !3648)
!3696 = !DILocation(line: 844, column: 28, scope: !3648)
!3697 = !DILocation(line: 844, column: 14, scope: !3648)
!3698 = !DILocation(line: 847, column: 45, scope: !3648)
!3699 = !DILocation(line: 847, column: 41, scope: !3648)
!3700 = !DILocation(line: 854, column: 24, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3686, file: !286, line: 852, column: 30)
!3702 = !DILocation(line: 854, column: 11, scope: !3701)
!3703 = !DILocation(line: 855, column: 30, scope: !3701)
!3704 = !DILocation(line: 855, column: 22, scope: !3701)
!3705 = !DILocation(line: 855, column: 8, scope: !3701)
!3706 = !DILocation(line: 857, column: 7, scope: !3701)
!3707 = !DILocation(line: 859, column: 8, scope: !3701)
!3708 = !DILocation(line: 859, column: 18, scope: !3701)
!3709 = !DILocation(line: 859, column: 5, scope: !3701)
!3710 = !DILocation(line: 852, column: 26, scope: !3686)
!3711 = distinct !{!3711, !3688, !3712}
!3712 = !DILocation(line: 860, column: 2, scope: !3687)
!3713 = !DILocation(line: 863, column: 6, scope: !3648)
!3714 = !DILocation(line: 866, column: 56, scope: !3648)
!3715 = !DILocation(line: 866, column: 9, scope: !3648)
!3716 = !DILocation(line: 866, column: 2, scope: !3648)
!3717 = !DILocation(line: 867, column: 1, scope: !3648)
!3718 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !286, file: !286, line: 179, type: !3719, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3721)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!119, !3651, !3655, !113, !278, !113}
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3727}
!3722 = !DILocalVariable(name: "out", arg: 1, scope: !3718, file: !286, line: 179, type: !3651)
!3723 = !DILocalVariable(name: "formatter", arg: 2, scope: !3718, file: !286, line: 180, type: !3655)
!3724 = !DILocalVariable(name: "ctx", arg: 3, scope: !3718, file: !286, line: 181, type: !113)
!3725 = !DILocalVariable(name: "fmt", arg: 4, scope: !3718, file: !286, line: 182, type: !278)
!3726 = !DILocalVariable(name: "buf", arg: 5, scope: !3718, file: !286, line: 182, type: !113)
!3727 = !DILocalVariable(name: "u", scope: !3718, file: !286, line: 187, type: !3728)
!3728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3718, file: !286, line: 184, size: 32, elements: !3729)
!3729 = !{!3730, !3731}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3728, file: !286, line: 185, baseType: !3268, size: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3728, file: !286, line: 186, baseType: !113, size: 32)
!3732 = !DILocation(line: 0, scope: !3718)
!3733 = !DILocation(line: 191, column: 9, scope: !3718)
!3734 = !DILocation(line: 191, column: 2, scope: !3718)
!3735 = distinct !DISubprogram(name: "is_ptr", scope: !286, file: !286, line: 881, type: !3736, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3738)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!345, !278, !119}
!3738 = !{!3739, !3740, !3741, !3742, !3743}
!3739 = !DILocalVariable(name: "fmt", arg: 1, scope: !3735, file: !286, line: 881, type: !278)
!3740 = !DILocalVariable(name: "n", arg: 2, scope: !3735, file: !286, line: 881, type: !119)
!3741 = !DILocalVariable(name: "c", scope: !3735, file: !286, line: 883, type: !107)
!3742 = !DILocalVariable(name: "mod", scope: !3735, file: !286, line: 884, type: !345)
!3743 = !DILocalVariable(name: "cnt", scope: !3735, file: !286, line: 885, type: !119)
!3744 = !DILocation(line: 0, scope: !3735)
!3745 = !DILocation(line: 887, column: 14, scope: !3735)
!3746 = !DILocation(line: 887, column: 22, scope: !3735)
!3747 = !DILocation(line: 887, column: 2, scope: !3735)
!3748 = !DILocation(line: 887, column: 18, scope: !3735)
!3749 = !DILocation(line: 888, column: 7, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3735, file: !286, line: 887, column: 31)
!3751 = !DILocation(line: 889, column: 12, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !286, line: 889, column: 8)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !286, line: 888, column: 12)
!3754 = distinct !DILexicalBlock(scope: !3750, file: !286, line: 888, column: 7)
!3755 = !DILocation(line: 889, column: 8, scope: !3753)
!3756 = !DILocation(line: 890, column: 11, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !286, line: 890, column: 9)
!3758 = distinct !DILexicalBlock(scope: !3752, file: !286, line: 889, column: 18)
!3759 = !DILocation(line: 890, column: 9, scope: !3758)
!3760 = !DILocation(line: 892, column: 16, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3757, file: !286, line: 892, column: 16)
!3762 = !DILocation(line: 892, column: 16, scope: !3757)
!3763 = !DILocation(line: 895, column: 15, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3752, file: !286, line: 895, column: 15)
!3765 = !DILocation(line: 895, column: 15, scope: !3752)
!3766 = !DILocation(line: 900, column: 9, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3750, file: !286, line: 900, column: 7)
!3768 = !DILocation(line: 900, column: 7, scope: !3750)
!3769 = distinct !{!3769, !3747, !3770}
!3770 = !DILocation(line: 903, column: 2, scope: !3735)
!3771 = !DILocation(line: 906, column: 1, scope: !3735)
!3772 = distinct !DISubprogram(name: "is_fmt_spec", scope: !286, file: !286, line: 873, type: !3773, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3775)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!345, !107}
!3775 = !{!3776}
!3776 = !DILocalVariable(name: "c", arg: 1, scope: !3772, file: !286, line: 873, type: !107)
!3777 = !DILocation(line: 0, scope: !3772)
!3778 = !DILocation(line: 875, column: 19, scope: !3772)
!3779 = !DILocation(line: 875, column: 2, scope: !3772)
!3780 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !286, file: !286, line: 908, type: !3781, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3787)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!119, !113, !239, !3783, !113, !118, !2622, !239}
!3783 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3301, line: 308, baseType: !3784)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 32)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!119, !13, !239, !113}
!3787 = !{!3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3805, !3806, !3807, !3808, !3809, !3815, !3818, !3819, !3820, !3822, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3838, !3841, !3842, !3843, !3844, !3845, !3846, !3848, !3851, !3852, !3853}
!3788 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3780, file: !286, line: 908, type: !113)
!3789 = !DILocalVariable(name: "in_len", arg: 2, scope: !3780, file: !286, line: 909, type: !239)
!3790 = !DILocalVariable(name: "cb", arg: 3, scope: !3780, file: !286, line: 910, type: !3783)
!3791 = !DILocalVariable(name: "ctx", arg: 4, scope: !3780, file: !286, line: 911, type: !113)
!3792 = !DILocalVariable(name: "flags", arg: 5, scope: !3780, file: !286, line: 912, type: !118)
!3793 = !DILocalVariable(name: "strl", arg: 6, scope: !3780, file: !286, line: 913, type: !2622)
!3794 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3780, file: !286, line: 914, type: !239)
!3795 = !DILocalVariable(name: "buf", scope: !3780, file: !286, line: 918, type: !284)
!3796 = !DILocalVariable(name: "buf32", scope: !3780, file: !286, line: 919, type: !864)
!3797 = !DILocalVariable(name: "args_size", scope: !3780, file: !286, line: 920, type: !32)
!3798 = !DILocalVariable(name: "ros_nbr", scope: !3780, file: !286, line: 920, type: !32)
!3799 = !DILocalVariable(name: "rws_nbr", scope: !3780, file: !286, line: 920, type: !32)
!3800 = !DILocalVariable(name: "fmt_present", scope: !3780, file: !286, line: 921, type: !345)
!3801 = !DILocalVariable(name: "rw_cpy", scope: !3780, file: !286, line: 922, type: !345)
!3802 = !DILocalVariable(name: "ro_cpy", scope: !3780, file: !286, line: 923, type: !345)
!3803 = !DILocalVariable(name: "in_desc", scope: !3780, file: !286, line: 924, type: !3804)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 32)
!3805 = !DILocalVariable(name: "out_len", scope: !3780, file: !286, line: 960, type: !119)
!3806 = !DILocalVariable(name: "fmt", scope: !3780, file: !286, line: 965, type: !278)
!3807 = !DILocalVariable(name: "str_pos", scope: !3780, file: !286, line: 966, type: !284)
!3808 = !DILocalVariable(name: "strl_cnt", scope: !3780, file: !286, line: 967, type: !239)
!3809 = !DILocalVariable(name: "i", scope: !3810, file: !286, line: 973, type: !119)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !286, line: 973, column: 4)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !286, line: 972, column: 15)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !286, line: 972, column: 7)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !286, line: 970, column: 18)
!3814 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 970, column: 6)
!3815 = !DILocalVariable(name: "str", scope: !3816, file: !286, line: 974, type: !278)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !286, line: 973, column: 38)
!3817 = distinct !DILexicalBlock(scope: !3810, file: !286, line: 973, column: 4)
!3818 = !DILocalVariable(name: "len", scope: !3816, file: !286, line: 975, type: !119)
!3819 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3813, file: !286, line: 990, type: !345)
!3820 = !DILocalVariable(name: "i", scope: !3821, file: !286, line: 995, type: !119)
!3821 = distinct !DILexicalBlock(scope: !3813, file: !286, line: 995, column: 3)
!3822 = !DILocalVariable(name: "arg_idx", scope: !3823, file: !286, line: 996, type: !185)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !286, line: 995, column: 37)
!3824 = distinct !DILexicalBlock(scope: !3821, file: !286, line: 995, column: 3)
!3825 = !DILocalVariable(name: "arg_pos", scope: !3823, file: !286, line: 997, type: !185)
!3826 = !DILocalVariable(name: "str", scope: !3823, file: !286, line: 998, type: !278)
!3827 = !DILocalVariable(name: "is_ro", scope: !3823, file: !286, line: 999, type: !345)
!3828 = !DILocalVariable(name: "len", scope: !3823, file: !286, line: 1000, type: !119)
!3829 = !DILocalVariable(name: "out_desc", scope: !3780, file: !286, line: 1038, type: !3304)
!3830 = !DILocalVariable(name: "cpy_str_pos", scope: !3780, file: !286, line: 1040, type: !3286)
!3831 = !DILocalVariable(name: "keep_str_pos", scope: !3780, file: !286, line: 1042, type: !3286)
!3832 = !DILocalVariable(name: "scpy_cnt", scope: !3780, file: !286, line: 1043, type: !185)
!3833 = !DILocalVariable(name: "keep_cnt", scope: !3780, file: !286, line: 1044, type: !185)
!3834 = !DILocalVariable(name: "dst", scope: !3780, file: !286, line: 1045, type: !284)
!3835 = !DILocalVariable(name: "rv", scope: !3780, file: !286, line: 1046, type: !119)
!3836 = !DILocalVariable(name: "i", scope: !3837, file: !286, line: 1074, type: !119)
!3837 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 1074, column: 2)
!3838 = !DILocalVariable(name: "arg_idx", scope: !3839, file: !286, line: 1075, type: !185)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !286, line: 1074, column: 36)
!3840 = distinct !DILexicalBlock(scope: !3837, file: !286, line: 1074, column: 2)
!3841 = !DILocalVariable(name: "arg_pos", scope: !3839, file: !286, line: 1076, type: !185)
!3842 = !DILocalVariable(name: "str", scope: !3839, file: !286, line: 1077, type: !278)
!3843 = !DILocalVariable(name: "is_ro", scope: !3839, file: !286, line: 1078, type: !345)
!3844 = !DILocalVariable(name: "in_desc_backup", scope: !3780, file: !286, line: 1114, type: !3304)
!3845 = !DILocalVariable(name: "strs_len", scope: !3780, file: !286, line: 1134, type: !239)
!3846 = !DILocalVariable(name: "i", scope: !3847, file: !286, line: 1143, type: !119)
!3847 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 1143, column: 2)
!3848 = !DILocalVariable(name: "loc", scope: !3849, file: !286, line: 1144, type: !185)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !286, line: 1143, column: 37)
!3850 = distinct !DILexicalBlock(scope: !3847, file: !286, line: 1143, column: 2)
!3851 = !DILocalVariable(name: "str", scope: !3849, file: !286, line: 1145, type: !278)
!3852 = !DILocalVariable(name: "str_len", scope: !3849, file: !286, line: 1146, type: !199)
!3853 = !DILabel(scope: !3854, name: "calculate_string_length", file: !286, line: 1021)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !286, line: 1020, column: 56)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !286, line: 1020, column: 15)
!3856 = distinct !DILexicalBlock(scope: !3823, file: !286, line: 1014, column: 8)
!3857 = !DILocation(line: 0, scope: !3780)
!3858 = !DILocation(line: 916, column: 2, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !286, line: 916, column: 2)
!3860 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 916, column: 2)
!3861 = !DILocation(line: 916, column: 2, scope: !3860)
!3862 = !DILocation(line: 916, column: 2, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3859, file: !286, line: 916, column: 2)
!3864 = !DILocation(line: 919, column: 20, scope: !3780)
!3865 = !DILocation(line: 921, column: 27, scope: !3780)
!3866 = !DILocation(line: 921, column: 21, scope: !3780)
!3867 = !DILocation(line: 926, column: 18, scope: !3780)
!3868 = !DILocation(line: 926, column: 11, scope: !3780)
!3869 = !DILocation(line: 926, column: 34, scope: !3780)
!3870 = !DILocation(line: 931, column: 21, scope: !3780)
!3871 = !DILocation(line: 931, column: 12, scope: !3780)
!3872 = !DILocation(line: 932, column: 11, scope: !3780)
!3873 = !DILocation(line: 932, column: 19, scope: !3780)
!3874 = !DILocation(line: 938, column: 21, scope: !3780)
!3875 = !DILocation(line: 938, column: 12, scope: !3780)
!3876 = !DILocation(line: 939, column: 19, scope: !3780)
!3877 = !DILocation(line: 939, column: 23, scope: !3780)
!3878 = !DILocation(line: 946, column: 14, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 946, column: 6)
!3880 = !DILocation(line: 947, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !286, line: 947, column: 7)
!3882 = distinct !DILexicalBlock(scope: !3879, file: !286, line: 946, column: 26)
!3883 = !DILocation(line: 947, column: 7, scope: !3882)
!3884 = !DILocation(line: 948, column: 4, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !286, line: 947, column: 11)
!3886 = !DILocation(line: 949, column: 3, scope: !3885)
!3887 = !DILocation(line: 958, column: 23, scope: !3780)
!3888 = !DILocation(line: 958, column: 14, scope: !3780)
!3889 = !DILocation(line: 958, column: 27, scope: !3780)
!3890 = !DILocation(line: 965, column: 41, scope: !3780)
!3891 = !DILocation(line: 965, column: 20, scope: !3780)
!3892 = !DILocation(line: 966, column: 22, scope: !3780)
!3893 = !DILocation(line: 970, column: 9, scope: !3814)
!3894 = !DILocation(line: 970, column: 6, scope: !3780)
!3895 = !DILocation(line: 972, column: 7, scope: !3813)
!3896 = !DILocation(line: 0, scope: !3810)
!3897 = !DILocation(line: 973, column: 4, scope: !3810)
!3898 = !DILocation(line: 974, column: 46, scope: !3816)
!3899 = !DILocation(line: 974, column: 40, scope: !3816)
!3900 = !DILocation(line: 974, column: 23, scope: !3816)
!3901 = !DILocation(line: 0, scope: !3816)
!3902 = !DILocation(line: 975, column: 15, scope: !3816)
!3903 = !DILocation(line: 978, column: 14, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3816, file: !286, line: 978, column: 9)
!3905 = !DILocation(line: 979, column: 25, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3904, file: !286, line: 978, column: 38)
!3907 = !DILocation(line: 979, column: 19, scope: !3906)
!3908 = !DILocation(line: 979, column: 6, scope: !3906)
!3909 = !DILocation(line: 979, column: 23, scope: !3906)
!3910 = !DILocation(line: 980, column: 5, scope: !3906)
!3911 = !DILocation(line: 981, column: 13, scope: !3816)
!3912 = !DILocation(line: 982, column: 12, scope: !3816)
!3913 = !DILocation(line: 973, column: 34, scope: !3817)
!3914 = !DILocation(line: 973, column: 22, scope: !3817)
!3915 = distinct !{!3915, !3897, !3916}
!3916 = !DILocation(line: 983, column: 4, scope: !3810)
!3917 = !DILocation(line: 985, column: 16, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !286, line: 985, column: 8)
!3919 = distinct !DILexicalBlock(scope: !3812, file: !286, line: 984, column: 10)
!3920 = !DILocation(line: 967, column: 9, scope: !3780)
!3921 = !DILocation(line: 971, column: 11, scope: !3813)
!3922 = !DILocation(line: 0, scope: !3813)
!3923 = !DILocation(line: 0, scope: !3821)
!3924 = !DILocation(line: 995, column: 21, scope: !3824)
!3925 = !DILocation(line: 995, column: 3, scope: !3821)
!3926 = !DILocation(line: 990, column: 34, scope: !3813)
!3927 = !DILocation(line: 990, column: 26, scope: !3813)
!3928 = !DILocation(line: 996, column: 30, scope: !3823)
!3929 = !DILocation(line: 0, scope: !3823)
!3930 = !DILocation(line: 997, column: 30, scope: !3823)
!3931 = !DILocation(line: 997, column: 22, scope: !3823)
!3932 = !DILocation(line: 998, column: 39, scope: !3823)
!3933 = !DILocation(line: 998, column: 22, scope: !3823)
!3934 = !DILocation(line: 999, column: 17, scope: !3823)
!3935 = !DILocation(line: 1002, column: 20, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3823, file: !286, line: 1002, column: 8)
!3937 = !DILocation(line: 996, column: 22, scope: !3823)
!3938 = !DILocation(line: 1002, column: 35, scope: !3936)
!3939 = !DILocation(line: 1002, column: 23, scope: !3936)
!3940 = !DILocation(line: 1002, column: 8, scope: !3823)
!3941 = !DILocation(line: 1003, column: 5, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !286, line: 1003, column: 5)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !286, line: 1003, column: 5)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !286, line: 1003, column: 5)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !286, line: 1003, column: 5)
!3946 = distinct !DILexicalBlock(scope: !3936, file: !286, line: 1002, column: 45)
!3947 = !DILocation(line: 1010, column: 13, scope: !3946)
!3948 = !DILocation(line: 1011, column: 5, scope: !3946)
!3949 = !DILocation(line: 1014, column: 8, scope: !3823)
!3950 = !DILocation(line: 1015, column: 9, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3856, file: !286, line: 1014, column: 15)
!3952 = !DILocation(line: 1018, column: 14, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !286, line: 1017, column: 12)
!3954 = distinct !DILexicalBlock(scope: !3951, file: !286, line: 1015, column: 9)
!3955 = !DILocation(line: 1020, column: 4, scope: !3951)
!3956 = !DILocation(line: 1020, column: 15, scope: !3856)
!3957 = !DILocation(line: 1021, column: 1, scope: !3854)
!3958 = !DILocation(line: 1022, column: 11, scope: !3854)
!3959 = !DILocation(line: 1025, column: 14, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3854, file: !286, line: 1025, column: 9)
!3961 = !DILocation(line: 1026, column: 25, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3960, file: !286, line: 1025, column: 38)
!3963 = !DILocation(line: 1026, column: 19, scope: !3962)
!3964 = !DILocation(line: 1026, column: 6, scope: !3962)
!3965 = !DILocation(line: 1026, column: 23, scope: !3962)
!3966 = !DILocation(line: 1027, column: 5, scope: !3962)
!3967 = !DILocation(line: 1031, column: 21, scope: !3854)
!3968 = !DILocation(line: 1031, column: 13, scope: !3854)
!3969 = !DILocation(line: 1032, column: 4, scope: !3854)
!3970 = !DILocation(line: 995, column: 33, scope: !3824)
!3971 = distinct !{!3971, !3925, !3972}
!3972 = !DILocation(line: 1033, column: 3, scope: !3821)
!3973 = !DILocation(line: 1040, column: 10, scope: !3780)
!3974 = !DILocation(line: 1042, column: 10, scope: !3780)
!3975 = !DILocation(line: 1052, column: 6, scope: !3780)
!3976 = !DILocation(line: 1055, column: 9, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !286, line: 1052, column: 14)
!3978 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 1052, column: 6)
!3979 = !DILocation(line: 1056, column: 2, scope: !3977)
!3980 = !DILocation(line: 1056, column: 21, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3978, file: !286, line: 1056, column: 13)
!3982 = !DILocation(line: 1066, column: 3, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !286, line: 1065, column: 11)
!3984 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 1065, column: 6)
!3985 = !DILocation(line: 1067, column: 2, scope: !3983)
!3986 = !DILocation(line: 1068, column: 10, scope: !3780)
!3987 = !DILocation(line: 0, scope: !3837)
!3988 = !DILocation(line: 1074, column: 20, scope: !3840)
!3989 = !DILocation(line: 1074, column: 2, scope: !3837)
!3990 = !DILocation(line: 1110, column: 24, scope: !3780)
!3991 = !DILocation(line: 1053, column: 12, scope: !3977)
!3992 = !DILocation(line: 1054, column: 12, scope: !3977)
!3993 = !DILocation(line: 1108, column: 30, scope: !3780)
!3994 = !DILocation(line: 1108, column: 40, scope: !3780)
!3995 = !DILocation(line: 1108, column: 38, scope: !3780)
!3996 = !DILocation(line: 1109, column: 31, scope: !3780)
!3997 = !DILocation(line: 1109, column: 24, scope: !3780)
!3998 = !DILocation(line: 1110, column: 31, scope: !3780)
!3999 = !DILocation(line: 1114, column: 31, scope: !3780)
!4000 = !DILocation(line: 1114, column: 48, scope: !3780)
!4001 = !DILocation(line: 1115, column: 13, scope: !3780)
!4002 = !DILocation(line: 1118, column: 7, scope: !3780)
!4003 = !DILocation(line: 1119, column: 9, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 1119, column: 6)
!4005 = !DILocation(line: 1119, column: 6, scope: !3780)
!4006 = !DILocation(line: 1075, column: 29, scope: !3839)
!4007 = !DILocation(line: 1075, column: 21, scope: !3839)
!4008 = !DILocation(line: 0, scope: !3839)
!4009 = !DILocation(line: 1076, column: 29, scope: !3839)
!4010 = !DILocation(line: 1076, column: 21, scope: !3839)
!4011 = !DILocation(line: 1077, column: 38, scope: !3839)
!4012 = !DILocation(line: 1077, column: 21, scope: !3839)
!4013 = !DILocation(line: 1078, column: 16, scope: !3839)
!4014 = !DILocation(line: 1080, column: 19, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3839, file: !286, line: 1080, column: 7)
!4016 = !DILocation(line: 1080, column: 34, scope: !4015)
!4017 = !DILocation(line: 1080, column: 22, scope: !4015)
!4018 = !DILocation(line: 1080, column: 7, scope: !3839)
!4019 = !DILocation(line: 1084, column: 7, scope: !3839)
!4020 = !DILocation(line: 1085, column: 8, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !286, line: 1084, column: 14)
!4022 = distinct !DILexicalBlock(scope: !3839, file: !286, line: 1084, column: 7)
!4023 = !DILocation(line: 1086, column: 5, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !286, line: 1086, column: 5)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !286, line: 1086, column: 5)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !286, line: 1085, column: 49)
!4027 = distinct !DILexicalBlock(scope: !4021, file: !286, line: 1085, column: 8)
!4028 = !DILocation(line: 1086, column: 5, scope: !4025)
!4029 = !DILocation(line: 1086, column: 5, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4024, file: !286, line: 1086, column: 5)
!4031 = !DILocation(line: 1087, column: 25, scope: !4026)
!4032 = !DILocation(line: 1087, column: 5, scope: !4026)
!4033 = !DILocation(line: 1088, column: 4, scope: !4026)
!4034 = !DILocation(line: 1088, column: 15, scope: !4027)
!4035 = !DILocation(line: 1089, column: 5, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !286, line: 1089, column: 5)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !286, line: 1089, column: 5)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !286, line: 1088, column: 61)
!4039 = distinct !DILexicalBlock(scope: !4027, file: !286, line: 1088, column: 15)
!4040 = !DILocation(line: 1089, column: 5, scope: !4037)
!4041 = !DILocation(line: 1089, column: 5, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4036, file: !286, line: 1089, column: 5)
!4043 = !DILocation(line: 1090, column: 26, scope: !4038)
!4044 = !DILocation(line: 1090, column: 5, scope: !4038)
!4045 = !DILocation(line: 1091, column: 4, scope: !4038)
!4046 = !DILocation(line: 1095, column: 8, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4022, file: !286, line: 1094, column: 10)
!4048 = !DILocation(line: 1096, column: 5, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !286, line: 1096, column: 5)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !286, line: 1096, column: 5)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !286, line: 1095, column: 49)
!4052 = distinct !DILexicalBlock(scope: !4047, file: !286, line: 1095, column: 8)
!4053 = !DILocation(line: 1096, column: 5, scope: !4050)
!4054 = !DILocation(line: 1096, column: 5, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4049, file: !286, line: 1096, column: 5)
!4056 = !DILocation(line: 1097, column: 25, scope: !4051)
!4057 = !DILocation(line: 1097, column: 5, scope: !4051)
!4058 = !DILocation(line: 1098, column: 4, scope: !4051)
!4059 = !DILocation(line: 1099, column: 5, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !286, line: 1099, column: 5)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !286, line: 1099, column: 5)
!4062 = distinct !DILexicalBlock(scope: !4052, file: !286, line: 1098, column: 11)
!4063 = !DILocation(line: 1099, column: 5, scope: !4061)
!4064 = !DILocation(line: 1099, column: 5, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4060, file: !286, line: 1099, column: 5)
!4066 = !DILocation(line: 1100, column: 26, scope: !4062)
!4067 = !DILocation(line: 1100, column: 5, scope: !4062)
!4068 = !DILocation(line: 1100, column: 30, scope: !4062)
!4069 = !DILocation(line: 1101, column: 26, scope: !4062)
!4070 = !DILocation(line: 1101, column: 5, scope: !4062)
!4071 = !DILocation(line: 0, scope: !4022)
!4072 = !DILocation(line: 1074, column: 32, scope: !3840)
!4073 = distinct !{!4073, !3989, !4074}
!4074 = !DILocation(line: 1104, column: 2, scope: !3837)
!4075 = !DILocation(line: 1124, column: 13, scope: !3780)
!4076 = !DILocation(line: 1127, column: 10, scope: !3780)
!4077 = !DILocation(line: 1127, column: 7, scope: !3780)
!4078 = !DILocation(line: 1128, column: 9, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 1128, column: 6)
!4080 = !DILocation(line: 1128, column: 6, scope: !3780)
!4081 = !DILocation(line: 1134, column: 27, scope: !3780)
!4082 = !DILocation(line: 1136, column: 7, scope: !3780)
!4083 = !DILocation(line: 1137, column: 9, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !3780, file: !286, line: 1137, column: 6)
!4085 = !DILocation(line: 1137, column: 6, scope: !3780)
!4086 = !DILocation(line: 1131, column: 10, scope: !3780)
!4087 = !DILocation(line: 1140, column: 10, scope: !3780)
!4088 = !DILocation(line: 0, scope: !3847)
!4089 = !DILocation(line: 1143, column: 20, scope: !3850)
!4090 = !DILocation(line: 1143, column: 2, scope: !3847)
!4091 = !DILocation(line: 1144, column: 3, scope: !3849)
!4092 = !DILocation(line: 1144, column: 17, scope: !3849)
!4093 = !DILocation(line: 0, scope: !3849)
!4094 = !DILocation(line: 1144, column: 11, scope: !3849)
!4095 = !DILocation(line: 1145, column: 38, scope: !3849)
!4096 = !DILocation(line: 1145, column: 21, scope: !3849)
!4097 = !DILocation(line: 1146, column: 22, scope: !3849)
!4098 = !DILocation(line: 1146, column: 29, scope: !3849)
!4099 = !DILocation(line: 1148, column: 8, scope: !3849)
!4100 = !DILocation(line: 1149, column: 10, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !3849, file: !286, line: 1149, column: 7)
!4102 = !DILocation(line: 1149, column: 7, scope: !3849)
!4103 = !DILocation(line: 1154, column: 8, scope: !3849)
!4104 = !DILocation(line: 1155, column: 10, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !3849, file: !286, line: 1155, column: 7)
!4106 = !DILocation(line: 1155, column: 7, scope: !3849)
!4107 = !DILocation(line: 1159, column: 2, scope: !3850)
!4108 = !DILocation(line: 1152, column: 11, scope: !3849)
!4109 = !DILocation(line: 1158, column: 11, scope: !3849)
!4110 = !DILocation(line: 1143, column: 33, scope: !3850)
!4111 = distinct !{!4111, !4090, !4112}
!4112 = !DILocation(line: 1159, column: 2, scope: !3847)
!4113 = !DILocation(line: 1162, column: 8, scope: !3780)
!4114 = !DILocation(line: 1164, column: 2, scope: !3780)
!4115 = !DILocation(line: 1165, column: 1, scope: !3780)
!4116 = distinct !DISubprogram(name: "get_package_len", scope: !286, file: !286, line: 196, type: !4117, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4119)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!239, !113}
!4119 = !{!4120, !4121, !4122, !4123, !4124, !4125, !4126}
!4120 = !DILocalVariable(name: "packaged", arg: 1, scope: !4116, file: !286, line: 196, type: !113)
!4121 = !DILocalVariable(name: "buf", scope: !4116, file: !286, line: 200, type: !284)
!4122 = !DILocalVariable(name: "start", scope: !4116, file: !286, line: 201, type: !284)
!4123 = !DILocalVariable(name: "args_size", scope: !4116, file: !286, line: 202, type: !32)
!4124 = !DILocalVariable(name: "s_nbr", scope: !4116, file: !286, line: 202, type: !32)
!4125 = !DILocalVariable(name: "ros_nbr", scope: !4116, file: !286, line: 202, type: !32)
!4126 = !DILocalVariable(name: "i", scope: !4127, file: !286, line: 215, type: !119)
!4127 = distinct !DILexicalBlock(scope: !4116, file: !286, line: 215, column: 2)
!4128 = !DILocation(line: 0, scope: !4116)
!4129 = !DILocation(line: 198, column: 2, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !286, line: 198, column: 2)
!4131 = distinct !DILexicalBlock(scope: !4116, file: !286, line: 198, column: 2)
!4132 = !DILocation(line: 198, column: 2, scope: !4131)
!4133 = !DILocation(line: 198, column: 2, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4130, file: !286, line: 198, column: 2)
!4135 = !DILocation(line: 204, column: 14, scope: !4116)
!4136 = !DILocation(line: 204, column: 21, scope: !4116)
!4137 = !DILocation(line: 205, column: 14, scope: !4116)
!4138 = !DILocation(line: 206, column: 14, scope: !4116)
!4139 = !DILocation(line: 209, column: 6, scope: !4116)
!4140 = !DILocation(line: 212, column: 6, scope: !4116)
!4141 = !DILocation(line: 0, scope: !4127)
!4142 = !DILocation(line: 215, column: 20, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4127, file: !286, line: 215, column: 2)
!4144 = !DILocation(line: 215, column: 2, scope: !4127)
!4145 = !DILocation(line: 220, column: 33, scope: !4116)
!4146 = !DILocation(line: 220, column: 2, scope: !4116)
!4147 = !DILocation(line: 216, column: 6, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4143, file: !286, line: 215, column: 34)
!4149 = !DILocation(line: 217, column: 10, scope: !4148)
!4150 = !DILocation(line: 217, column: 36, scope: !4148)
!4151 = !DILocation(line: 217, column: 7, scope: !4148)
!4152 = !DILocation(line: 215, column: 30, scope: !4143)
!4153 = distinct !{!4153, !4144, !4154}
!4154 = !DILocation(line: 218, column: 2, scope: !4127)
!4155 = distinct !DISubprogram(name: "append_string", scope: !286, file: !286, line: 223, type: !4156, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4158)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!119, !3783, !113, !278, !199}
!4158 = !{!4159, !4160, !4161, !4162}
!4159 = !DILocalVariable(name: "cb", arg: 1, scope: !4155, file: !286, line: 223, type: !3783)
!4160 = !DILocalVariable(name: "ctx", arg: 2, scope: !4155, file: !286, line: 223, type: !113)
!4161 = !DILocalVariable(name: "str", arg: 3, scope: !4155, file: !286, line: 223, type: !278)
!4162 = !DILocalVariable(name: "strl", arg: 4, scope: !4155, file: !286, line: 223, type: !199)
!4163 = !DILocation(line: 0, scope: !4155)
!4164 = !DILocation(line: 225, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4155, file: !286, line: 225, column: 6)
!4166 = !DILocation(line: 225, column: 6, scope: !4155)
!4167 = !DILocation(line: 226, column: 14, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4165, file: !286, line: 225, column: 18)
!4169 = !DILocation(line: 226, column: 12, scope: !4168)
!4170 = !DILocation(line: 226, column: 3, scope: !4168)
!4171 = !DILocation(line: 229, column: 14, scope: !4155)
!4172 = !DILocation(line: 229, column: 9, scope: !4155)
!4173 = !DILocation(line: 229, column: 27, scope: !4155)
!4174 = !DILocation(line: 229, column: 39, scope: !4155)
!4175 = !DILocation(line: 230, column: 17, scope: !4155)
!4176 = !DILocation(line: 230, column: 9, scope: !4155)
!4177 = !DILocation(line: 230, column: 2, scope: !4155)
!4178 = !DILocation(line: 231, column: 1, scope: !4155)
!4179 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !299, file: !299, line: 45, type: !301, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4180)
!4180 = !{!4181}
!4181 = !DILocalVariable(name: "c", arg: 1, scope: !4179, file: !299, line: 45, type: !119)
!4182 = !DILocation(line: 0, scope: !4179)
!4183 = !DILocation(line: 50, column: 2, scope: !4179)
!4184 = distinct !DISubprogram(name: "__printk_hook_install", scope: !299, file: !299, line: 63, type: !4185, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4187)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{null, !300}
!4187 = !{!4188}
!4188 = !DILocalVariable(name: "fn", arg: 1, scope: !4184, file: !299, line: 63, type: !300)
!4189 = !DILocation(line: 0, scope: !4184)
!4190 = !DILocation(line: 65, column: 12, scope: !4184)
!4191 = !DILocation(line: 66, column: 1, scope: !4184)
!4192 = distinct !DISubprogram(name: "__printk_get_hook", scope: !299, file: !299, line: 76, type: !4193, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !2000)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!113}
!4195 = !DILocation(line: 78, column: 9, scope: !4192)
!4196 = !DILocation(line: 78, column: 2, scope: !4192)
!4197 = distinct !DISubprogram(name: "vprintk", scope: !299, file: !299, line: 113, type: !4198, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4206)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{null, !278, !4200}
!4200 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3269, line: 99, baseType: !4201)
!4201 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3269, line: 40, baseType: !4202)
!4202 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !299, baseType: !4203)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4204)
!4204 = !{!4205}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4203, file: !299, line: 79, baseType: !113, size: 32)
!4206 = !{!4207, !4208, !4209}
!4207 = !DILocalVariable(name: "fmt", arg: 1, scope: !4197, file: !299, line: 113, type: !278)
!4208 = !DILocalVariable(name: "ap", arg: 2, scope: !4197, file: !299, line: 113, type: !4200)
!4209 = !DILocalVariable(name: "ctx", scope: !4210, file: !299, line: 121, type: !4212)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !299, line: 120, column: 27)
!4211 = distinct !DILexicalBlock(scope: !4197, file: !299, line: 120, column: 6)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !299, line: 81, size: 32, elements: !4213)
!4213 = !{!4214, !4215}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4212, file: !299, line: 85, baseType: !32, size: 32)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4212, file: !299, line: 86, baseType: !4216, offset: 32)
!4216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !4217)
!4217 = !{!4218}
!4218 = !DISubrange(count: 0)
!4219 = !DILocation(line: 0, scope: !4197)
!4220 = !DILocation(line: 148, column: 3, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4211, file: !299, line: 138, column: 9)
!4222 = !DILocation(line: 155, column: 1, scope: !4197)
!4223 = distinct !DISubprogram(name: "char_out", scope: !299, file: !299, line: 107, type: !4224, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4226)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{!119, !119, !113}
!4226 = !{!4227, !4228}
!4227 = !DILocalVariable(name: "c", arg: 1, scope: !4223, file: !299, line: 107, type: !119)
!4228 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4223, file: !299, line: 107, type: !113)
!4229 = !DILocation(line: 0, scope: !4223)
!4230 = !DILocation(line: 110, column: 9, scope: !4223)
!4231 = !DILocation(line: 110, column: 2, scope: !4223)
!4232 = distinct !DISubprogram(name: "cbvprintf", scope: !3301, file: !3301, line: 739, type: !4233, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4235)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!119, !3651, !113, !278, !4200}
!4235 = !{!4236, !4237, !4238, !4239}
!4236 = !DILocalVariable(name: "out", arg: 1, scope: !4232, file: !3301, line: 739, type: !3651)
!4237 = !DILocalVariable(name: "ctx", arg: 2, scope: !4232, file: !3301, line: 739, type: !113)
!4238 = !DILocalVariable(name: "format", arg: 3, scope: !4232, file: !3301, line: 739, type: !278)
!4239 = !DILocalVariable(name: "ap", arg: 4, scope: !4232, file: !3301, line: 739, type: !4200)
!4240 = !DILocation(line: 0, scope: !4232)
!4241 = !DILocation(line: 741, column: 9, scope: !4232)
!4242 = !DILocation(line: 741, column: 2, scope: !4232)
!4243 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !299, file: !299, line: 157, type: !4244, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4246)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{null, !106, !239}
!4246 = !{!4247, !4248, !4249}
!4247 = !DILocalVariable(name: "c", arg: 1, scope: !4243, file: !299, line: 157, type: !106)
!4248 = !DILocalVariable(name: "n", arg: 2, scope: !4243, file: !299, line: 157, type: !239)
!4249 = !DILocalVariable(name: "i", scope: !4243, file: !299, line: 159, type: !239)
!4250 = !DILocation(line: 0, scope: !4243)
!4251 = !DILocation(line: 164, column: 16, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !299, line: 164, column: 2)
!4253 = distinct !DILexicalBlock(scope: !4243, file: !299, line: 164, column: 2)
!4254 = !DILocation(line: 164, column: 2, scope: !4253)
!4255 = !DILocation(line: 165, column: 3, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4252, file: !299, line: 164, column: 26)
!4257 = !DILocation(line: 165, column: 13, scope: !4256)
!4258 = !DILocation(line: 164, column: 22, scope: !4252)
!4259 = distinct !{!4259, !4254, !4260}
!4260 = !DILocation(line: 166, column: 2, scope: !4253)
!4261 = !DILocation(line: 171, column: 1, scope: !4243)
!4262 = distinct !DISubprogram(name: "printk", scope: !299, file: !299, line: 203, type: !4263, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4265)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{null, !278, null}
!4265 = !{!4266, !4267}
!4266 = !DILocalVariable(name: "fmt", arg: 1, scope: !4262, file: !299, line: 203, type: !278)
!4267 = !DILocalVariable(name: "ap", scope: !4262, file: !299, line: 205, type: !4200)
!4268 = !DILocation(line: 0, scope: !4262)
!4269 = !DILocation(line: 205, column: 2, scope: !4262)
!4270 = !DILocation(line: 205, column: 10, scope: !4262)
!4271 = !DILocation(line: 207, column: 2, scope: !4262)
!4272 = !DILocation(line: 209, column: 2, scope: !4262)
!4273 = !DILocation(line: 211, column: 2, scope: !4262)
!4274 = !DILocation(line: 212, column: 1, scope: !4262)
!4275 = distinct !DISubprogram(name: "snprintk", scope: !299, file: !299, line: 239, type: !4276, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4278)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!119, !106, !239, !278, null}
!4278 = !{!4279, !4280, !4281, !4282, !4283}
!4279 = !DILocalVariable(name: "str", arg: 1, scope: !4275, file: !299, line: 239, type: !106)
!4280 = !DILocalVariable(name: "size", arg: 2, scope: !4275, file: !299, line: 239, type: !239)
!4281 = !DILocalVariable(name: "fmt", arg: 3, scope: !4275, file: !299, line: 239, type: !278)
!4282 = !DILocalVariable(name: "ap", scope: !4275, file: !299, line: 241, type: !4200)
!4283 = !DILocalVariable(name: "ret", scope: !4275, file: !299, line: 242, type: !119)
!4284 = !DILocation(line: 0, scope: !4275)
!4285 = !DILocation(line: 241, column: 2, scope: !4275)
!4286 = !DILocation(line: 241, column: 10, scope: !4275)
!4287 = !DILocation(line: 244, column: 2, scope: !4275)
!4288 = !DILocation(line: 245, column: 8, scope: !4275)
!4289 = !DILocation(line: 246, column: 2, scope: !4275)
!4290 = !DILocation(line: 249, column: 1, scope: !4275)
!4291 = !DILocation(line: 248, column: 2, scope: !4275)
!4292 = distinct !DISubprogram(name: "vsnprintk", scope: !299, file: !299, line: 251, type: !4293, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4295)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!119, !106, !239, !278, !4200}
!4295 = !{!4296, !4297, !4298, !4299, !4300}
!4296 = !DILocalVariable(name: "str", arg: 1, scope: !4292, file: !299, line: 251, type: !106)
!4297 = !DILocalVariable(name: "size", arg: 2, scope: !4292, file: !299, line: 251, type: !239)
!4298 = !DILocalVariable(name: "fmt", arg: 3, scope: !4292, file: !299, line: 251, type: !278)
!4299 = !DILocalVariable(name: "ap", arg: 4, scope: !4292, file: !299, line: 251, type: !4200)
!4300 = !DILocalVariable(name: "ctx", scope: !4292, file: !299, line: 253, type: !4301)
!4301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !299, line: 217, size: 96, elements: !4302)
!4302 = !{!4303, !4304, !4305}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4301, file: !299, line: 218, baseType: !106, size: 32)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4301, file: !299, line: 219, baseType: !119, size: 32, offset: 32)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4301, file: !299, line: 220, baseType: !119, size: 32, offset: 64)
!4306 = !DILocation(line: 0, scope: !4292)
!4307 = !DILocation(line: 253, column: 2, scope: !4292)
!4308 = !DILocation(line: 253, column: 21, scope: !4292)
!4309 = !DILocation(line: 253, column: 27, scope: !4292)
!4310 = !DILocation(line: 255, column: 2, scope: !4292)
!4311 = !DILocation(line: 257, column: 10, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4292, file: !299, line: 257, column: 6)
!4313 = !DILocation(line: 257, column: 22, scope: !4312)
!4314 = !DILocation(line: 257, column: 16, scope: !4312)
!4315 = !DILocation(line: 257, column: 6, scope: !4292)
!4316 = !DILocation(line: 258, column: 3, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4312, file: !299, line: 257, column: 27)
!4318 = !DILocation(line: 258, column: 18, scope: !4317)
!4319 = !DILocation(line: 259, column: 2, scope: !4317)
!4320 = !DILocation(line: 262, column: 1, scope: !4292)
!4321 = !DILocation(line: 261, column: 2, scope: !4292)
!4322 = distinct !DISubprogram(name: "str_out", scope: !299, file: !299, line: 223, type: !4323, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4326)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{!119, !119, !4325}
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 32)
!4326 = !{!4327, !4328}
!4327 = !DILocalVariable(name: "c", arg: 1, scope: !4322, file: !299, line: 223, type: !119)
!4328 = !DILocalVariable(name: "ctx", arg: 2, scope: !4322, file: !299, line: 223, type: !4325)
!4329 = !DILocation(line: 0, scope: !4322)
!4330 = !DILocation(line: 225, column: 11, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4322, file: !299, line: 225, column: 6)
!4332 = !DILocation(line: 225, column: 15, scope: !4331)
!4333 = !DILocation(line: 0, scope: !4331)
!4334 = !DILocation(line: 225, column: 23, scope: !4331)
!4335 = !DILocation(line: 225, column: 45, scope: !4331)
!4336 = !DILocation(line: 225, column: 37, scope: !4331)
!4337 = !DILocation(line: 225, column: 6, scope: !4322)
!4338 = !DILocation(line: 226, column: 8, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4331, file: !299, line: 225, column: 50)
!4340 = !DILocation(line: 226, column: 13, scope: !4339)
!4341 = !DILocation(line: 227, column: 3, scope: !4339)
!4342 = !DILocation(line: 230, column: 29, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4322, file: !299, line: 230, column: 6)
!4344 = !DILocation(line: 230, column: 17, scope: !4343)
!4345 = !DILocation(line: 230, column: 6, scope: !4322)
!4346 = !DILocation(line: 231, column: 22, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4343, file: !299, line: 230, column: 34)
!4348 = !DILocation(line: 231, column: 3, scope: !4347)
!4349 = !DILocation(line: 231, column: 26, scope: !4347)
!4350 = !DILocation(line: 232, column: 2, scope: !4347)
!4351 = !DILocation(line: 233, column: 28, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4343, file: !299, line: 232, column: 9)
!4353 = !DILocation(line: 233, column: 22, scope: !4352)
!4354 = !DILocation(line: 233, column: 3, scope: !4352)
!4355 = !DILocation(line: 233, column: 26, scope: !4352)
!4356 = !DILocation(line: 237, column: 1, scope: !4322)
!4357 = distinct !DISubprogram(name: "z_thread_entry", scope: !4358, file: !4358, line: 30, type: !4359, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !4361)
!4358 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4359 = !DISubroutineType(types: !4360)
!4360 = !{null, !108, !113, !113, !113}
!4361 = !{!4362, !4363, !4364, !4365}
!4362 = !DILocalVariable(name: "entry", arg: 1, scope: !4357, file: !4358, line: 30, type: !108)
!4363 = !DILocalVariable(name: "p1", arg: 2, scope: !4357, file: !4358, line: 31, type: !113)
!4364 = !DILocalVariable(name: "p2", arg: 3, scope: !4357, file: !4358, line: 31, type: !113)
!4365 = !DILocalVariable(name: "p3", arg: 4, scope: !4357, file: !4358, line: 31, type: !113)
!4366 = !DILocation(line: 0, scope: !4357)
!4367 = !DILocation(line: 36, column: 2, scope: !4357)
!4368 = !DILocation(line: 38, column: 17, scope: !4357)
!4369 = !DILocation(line: 38, column: 2, scope: !4357)
!4370 = !DILocation(line: 45, column: 2, scope: !4357)
!4371 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !4372, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !2000)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!4374}
!4374 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !4375)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 32)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !4377)
!4377 = !{!4378, !4436, !4448, !4449, !4450, !4451, !4452, !4458, !4473}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4376, file: !143, line: 247, baseType: !4379, size: 384)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !4380)
!4380 = !{!4381, !4405, !4412, !4413, !4414, !4423, !4424, !4425}
!4381 = !DIDerivedType(tag: DW_TAG_member, scope: !4379, file: !143, line: 60, baseType: !4382, size: 64)
!4382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4379, file: !143, line: 60, size: 64, elements: !4383)
!4383 = !{!4384, !4399}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4382, file: !143, line: 61, baseType: !4385, size: 64)
!4385 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !4386)
!4386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !4387)
!4387 = !{!4388, !4394}
!4388 = !DIDerivedType(tag: DW_TAG_member, scope: !4386, file: !153, line: 38, baseType: !4389, size: 32)
!4389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4386, file: !153, line: 38, size: 32, elements: !4390)
!4390 = !{!4391, !4393}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4389, file: !153, line: 39, baseType: !4392, size: 32)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4386, size: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4389, file: !153, line: 40, baseType: !4392, size: 32)
!4394 = !DIDerivedType(tag: DW_TAG_member, scope: !4386, file: !153, line: 42, baseType: !4395, size: 32, offset: 32)
!4395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4386, file: !153, line: 42, size: 32, elements: !4396)
!4396 = !{!4397, !4398}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4395, file: !153, line: 43, baseType: !4392, size: 32)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4395, file: !153, line: 44, baseType: !4392, size: 32)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4382, file: !143, line: 62, baseType: !4400, size: 64)
!4400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !4401)
!4401 = !{!4402}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4400, file: !169, line: 50, baseType: !4403, size: 64)
!4403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4404, size: 64, elements: !174)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 32)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4379, file: !143, line: 68, baseType: !4406, size: 32, offset: 64)
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4407, size: 32)
!4407 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !4408)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !4409)
!4409 = !{!4410}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4408, file: !179, line: 232, baseType: !4411, size: 64)
!4411 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !4386)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4379, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4379, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!4414 = !DIDerivedType(tag: DW_TAG_member, scope: !4379, file: !143, line: 90, baseType: !4415, size: 16, offset: 112)
!4415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4379, file: !143, line: 90, size: 16, elements: !4416)
!4416 = !{!4417, !4422}
!4417 = !DIDerivedType(tag: DW_TAG_member, scope: !4415, file: !143, line: 91, baseType: !4418, size: 16)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4415, file: !143, line: 91, size: 16, elements: !4419)
!4419 = !{!4420, !4421}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4418, file: !143, line: 96, baseType: !195, size: 8)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4418, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4415, file: !143, line: 100, baseType: !199, size: 16)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4379, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4379, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4379, file: !143, line: 131, baseType: !4426, size: 192, offset: 192)
!4426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !4427)
!4427 = !{!4428, !4429, !4435}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4426, file: !179, line: 245, baseType: !4385, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4426, file: !179, line: 246, baseType: !4430, size: 32, offset: 64)
!4430 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !4431)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 32)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{null, !4434}
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4426, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4376, file: !143, line: 250, baseType: !4437, size: 288, offset: 384)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !4438)
!4438 = !{!4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4437, file: !216, line: 26, baseType: !118, size: 32)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4437, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4437, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4437, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4437, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4437, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4437, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4437, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4437, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4376, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4376, file: !143, line: 256, baseType: !4407, size: 64, offset: 704)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4376, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4376, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4376, file: !143, line: 300, baseType: !4453, size: 96, offset: 1056)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !4454)
!4454 = !{!4455, !4456, !4457}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4453, file: !143, line: 153, baseType: !22, size: 32)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4453, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4453, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4376, file: !143, line: 325, baseType: !4459, size: 32, offset: 1152)
!4459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4460, size: 32)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !4461)
!4461 = !{!4462, !4468, !4469}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4460, file: !245, line: 5074, baseType: !4463, size: 96)
!4463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !4464)
!4464 = !{!4465, !4466, !4467}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4463, file: !249, line: 57, baseType: !252, size: 32)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4463, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4463, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4460, file: !245, line: 5075, baseType: !4407, size: 64, offset: 96)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4460, file: !245, line: 5076, baseType: !4470, size: 32, offset: 160)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !4471)
!4471 = !{!4472}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4470, file: !259, line: 52, baseType: !22, size: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4376, file: !143, line: 343, baseType: !4474, size: 64, offset: 1184)
!4474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !4475)
!4475 = !{!4476, !4477}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4474, file: !216, line: 63, baseType: !118, size: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4474, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!4478 = !DILocation(line: 535, column: 9, scope: !4371)
!4479 = !DILocation(line: 535, column: 2, scope: !4371)
!4480 = distinct !DISubprogram(name: "k_thread_abort", scope: !3187, file: !3187, line: 188, type: !4481, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !4483)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{null, !4374}
!4483 = !{!4484}
!4484 = !DILocalVariable(name: "thread", arg: 1, scope: !4480, file: !3187, line: 188, type: !4374)
!4485 = !DILocation(line: 0, scope: !4480)
!4486 = !DILocation(line: 197, column: 2, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4480, file: !3187, line: 197, column: 2)
!4488 = !{i64 2154069531}
!4489 = !DILocation(line: 198, column: 2, scope: !4480)
!4490 = !DILocation(line: 199, column: 1, scope: !4480)
!4491 = distinct !DISubprogram(name: "z_current_get", scope: !3187, file: !3187, line: 173, type: !4372, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !2000)
!4492 = !DILocation(line: 180, column: 2, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4491, file: !3187, line: 180, column: 2)
!4494 = !{i64 2154069463}
!4495 = !DILocation(line: 181, column: 9, scope: !4491)
!4496 = !DILocation(line: 181, column: 2, scope: !4491)
!4497 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2356, file: !2356, line: 1338, type: !4498, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !4506)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!119, !3651, !113, !278, !4500, !118}
!4500 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3269, line: 99, baseType: !4501)
!4501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3269, line: 40, baseType: !4502)
!4502 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2356, baseType: !4503)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4504)
!4504 = !{!4505}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4503, file: !2356, baseType: !113, size: 32)
!4506 = !{!4507, !4508, !4509, !4510, !4511, !4512, !4516, !4517, !4518, !4520, !4525, !4568, !4571, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4583, !4584, !4585, !4589, !4592, !4594, !4597, !4598, !4599, !4604, !4610, !4613, !4617, !4623, !4627, !4630, !4632, !4635}
!4507 = !DILocalVariable(name: "out", arg: 1, scope: !4497, file: !2356, line: 1338, type: !3651)
!4508 = !DILocalVariable(name: "ctx", arg: 2, scope: !4497, file: !2356, line: 1338, type: !113)
!4509 = !DILocalVariable(name: "fp", arg: 3, scope: !4497, file: !2356, line: 1338, type: !278)
!4510 = !DILocalVariable(name: "ap", arg: 4, scope: !4497, file: !2356, line: 1339, type: !4500)
!4511 = !DILocalVariable(name: "flags", arg: 5, scope: !4497, file: !2356, line: 1339, type: !118)
!4512 = !DILocalVariable(name: "buf", scope: !4497, file: !2356, line: 1341, type: !4513)
!4513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !4514)
!4514 = !{!4515}
!4515 = !DISubrange(count: 22)
!4516 = !DILocalVariable(name: "count", scope: !4497, file: !2356, line: 1342, type: !239)
!4517 = !DILocalVariable(name: "sint", scope: !4497, file: !2356, line: 1343, type: !2375)
!4518 = !DILocalVariable(name: "tagged_ap", scope: !4497, file: !2356, line: 1345, type: !4519)
!4519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!4520 = !DILocalVariable(name: "rc", scope: !4521, file: !2356, line: 1377, type: !119)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2356, line: 1377, column: 4)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !2356, line: 1376, column: 19)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1376, column: 7)
!4524 = distinct !DILexicalBlock(scope: !4497, file: !2356, line: 1375, column: 19)
!4525 = !DILocalVariable(name: "state", scope: !4524, file: !2356, line: 1395, type: !4526)
!4526 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4497, file: !2356, line: 1392, size: 192, elements: !4527)
!4527 = !{!4528, !4536}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4526, file: !2356, line: 1393, baseType: !4529, size: 64)
!4529 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2356, line: 166, size: 64, elements: !4530)
!4530 = !{!4531, !4532, !4533, !4534, !4535}
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4529, file: !2356, line: 168, baseType: !2375, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4529, file: !2356, line: 171, baseType: !2378, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4529, file: !2356, line: 174, baseType: !276, size: 64)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4529, file: !2356, line: 177, baseType: !274, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4529, file: !2356, line: 180, baseType: !113, size: 32)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4526, file: !2356, line: 1394, baseType: !4537, size: 96, offset: 64)
!4537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2356, line: 189, size: 96, elements: !4538)
!4538 = !{!4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4563}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4537, file: !2356, line: 191, baseType: !345, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4537, file: !2356, line: 194, baseType: !345, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4537, file: !2356, line: 197, baseType: !345, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4537, file: !2356, line: 200, baseType: !345, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4537, file: !2356, line: 203, baseType: !345, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4537, file: !2356, line: 206, baseType: !345, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4537, file: !2356, line: 209, baseType: !345, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4537, file: !2356, line: 212, baseType: !345, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4537, file: !2356, line: 219, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4537, file: !2356, line: 222, baseType: !345, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4537, file: !2356, line: 229, baseType: !345, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4537, file: !2356, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4537, file: !2356, line: 238, baseType: !345, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4537, file: !2356, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4537, file: !2356, line: 244, baseType: !345, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4537, file: !2356, line: 247, baseType: !345, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4537, file: !2356, line: 252, baseType: !345, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4537, file: !2356, line: 257, baseType: !345, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4537, file: !2356, line: 260, baseType: !186, size: 8, offset: 24)
!4558 = !DIDerivedType(tag: DW_TAG_member, scope: !4537, file: !2356, line: 262, baseType: !4559, size: 32, offset: 32)
!4559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4537, file: !2356, line: 262, size: 32, elements: !4560)
!4560 = !{!4561, !4562}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4559, file: !2356, line: 267, baseType: !119, size: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4559, file: !2356, line: 289, baseType: !119, size: 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, scope: !4537, file: !2356, line: 292, baseType: !4564, size: 32, offset: 64)
!4564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4537, file: !2356, line: 292, size: 32, elements: !4565)
!4565 = !{!4566, !4567}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4564, file: !2356, line: 297, baseType: !119, size: 32)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4564, file: !2356, line: 306, baseType: !119, size: 32)
!4568 = !DILocalVariable(name: "conv", scope: !4524, file: !2356, line: 1400, type: !4569)
!4569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4570)
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 32)
!4571 = !DILocalVariable(name: "value", scope: !4524, file: !2356, line: 1401, type: !4572)
!4572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4573)
!4573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 32)
!4574 = !DILocalVariable(name: "sp", scope: !4524, file: !2356, line: 1402, type: !278)
!4575 = !DILocalVariable(name: "width", scope: !4524, file: !2356, line: 1403, type: !119)
!4576 = !DILocalVariable(name: "precision", scope: !4524, file: !2356, line: 1404, type: !119)
!4577 = !DILocalVariable(name: "bps", scope: !4524, file: !2356, line: 1405, type: !278)
!4578 = !DILocalVariable(name: "bpe", scope: !4524, file: !2356, line: 1406, type: !278)
!4579 = !DILocalVariable(name: "sign", scope: !4524, file: !2356, line: 1407, type: !107)
!4580 = !DILocalVariable(name: "arg", scope: !4581, file: !2356, line: 1432, type: !119)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !2356, line: 1431, column: 24)
!4582 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1431, column: 7)
!4583 = !DILocalVariable(name: "specifier_cat", scope: !4524, file: !2356, line: 1468, type: !2355)
!4584 = !DILocalVariable(name: "length_mod", scope: !4524, file: !2356, line: 1470, type: !2363)
!4585 = !DILocalVariable(name: "rc", scope: !4586, file: !2356, line: 1575, type: !119)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !2356, line: 1575, column: 4)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !2356, line: 1574, column: 43)
!4588 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1574, column: 7)
!4589 = !DILocalVariable(name: "rc", scope: !4590, file: !2356, line: 1584, type: !119)
!4590 = distinct !DILexicalBlock(scope: !4591, file: !2356, line: 1584, column: 4)
!4591 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1582, column: 28)
!4592 = !DILocalVariable(name: "len", scope: !4593, file: !2356, line: 1589, type: !239)
!4593 = distinct !DILexicalBlock(scope: !4591, file: !2356, line: 1586, column: 13)
!4594 = !DILocalVariable(name: "len", scope: !4595, file: !2356, line: 1641, type: !239)
!4595 = distinct !DILexicalBlock(scope: !4596, file: !2356, line: 1640, column: 24)
!4596 = distinct !DILexicalBlock(scope: !4591, file: !2356, line: 1640, column: 8)
!4597 = !DILocalVariable(name: "nj_len", scope: !4524, file: !2356, line: 1722, type: !239)
!4598 = !DILocalVariable(name: "pad_len", scope: !4524, file: !2356, line: 1723, type: !119)
!4599 = !DILocalVariable(name: "pad", scope: !4600, file: !2356, line: 1751, type: !107)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !2356, line: 1750, column: 26)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !2356, line: 1750, column: 8)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !2356, line: 1747, column: 18)
!4603 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1747, column: 7)
!4604 = !DILocalVariable(name: "rc", scope: !4605, file: !2356, line: 1758, type: !119)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !2356, line: 1758, column: 7)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !2356, line: 1757, column: 21)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !2356, line: 1757, column: 10)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !2356, line: 1756, column: 26)
!4609 = distinct !DILexicalBlock(scope: !4600, file: !2356, line: 1756, column: 9)
!4610 = !DILocalVariable(name: "rc", scope: !4611, file: !2356, line: 1765, type: !119)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !2356, line: 1765, column: 6)
!4612 = distinct !DILexicalBlock(scope: !4600, file: !2356, line: 1764, column: 25)
!4613 = !DILocalVariable(name: "rc", scope: !4614, file: !2356, line: 1774, type: !119)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !2356, line: 1774, column: 4)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !2356, line: 1773, column: 18)
!4616 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1773, column: 7)
!4617 = !DILocalVariable(name: "rc", scope: !4618, file: !2356, line: 1819, type: !119)
!4618 = distinct !DILexicalBlock(scope: !4619, file: !2356, line: 1819, column: 5)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !2356, line: 1818, column: 44)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !2356, line: 1818, column: 8)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !2356, line: 1817, column: 10)
!4622 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1777, column: 7)
!4623 = !DILocalVariable(name: "rc", scope: !4624, file: !2356, line: 1823, type: !119)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2356, line: 1823, column: 5)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2356, line: 1822, column: 26)
!4626 = distinct !DILexicalBlock(scope: !4621, file: !2356, line: 1822, column: 8)
!4627 = !DILocalVariable(name: "rc", scope: !4628, file: !2356, line: 1828, type: !119)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2356, line: 1828, column: 5)
!4629 = distinct !DILexicalBlock(scope: !4621, file: !2356, line: 1827, column: 26)
!4630 = !DILocalVariable(name: "rc", scope: !4631, file: !2356, line: 1831, type: !119)
!4631 = distinct !DILexicalBlock(scope: !4621, file: !2356, line: 1831, column: 4)
!4632 = !DILocalVariable(name: "rc", scope: !4633, file: !2356, line: 1836, type: !119)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2356, line: 1836, column: 4)
!4634 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1835, column: 21)
!4635 = !DILabel(scope: !4591, name: "prec_int_pad0", file: !2356, line: 1634)
!4636 = !DILocation(line: 0, scope: !4497)
!4637 = !DILocation(line: 1341, column: 2, scope: !4497)
!4638 = !DILocation(line: 1341, column: 7, scope: !4497)
!4639 = !DILocation(line: 1375, column: 2, scope: !4497)
!4640 = !DILocation(line: 1342, column: 9, scope: !4497)
!4641 = !DILocation(line: 1375, column: 9, scope: !4497)
!4642 = !DILocation(line: 1377, column: 4, scope: !4521)
!4643 = !DILocation(line: 0, scope: !4521)
!4644 = !DILocation(line: 1377, column: 4, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4521, file: !2356, line: 1377, column: 4)
!4646 = distinct !{!4646, !4639, !4647}
!4647 = !DILocation(line: 1839, column: 2, scope: !4497)
!4648 = !DILocation(line: 1392, column: 3, scope: !4524)
!4649 = !DILocation(line: 1395, column: 5, scope: !4524)
!4650 = !DILocation(line: 0, scope: !4524)
!4651 = !DILocation(line: 1409, column: 8, scope: !4524)
!4652 = !DILocation(line: 1414, column: 13, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1414, column: 7)
!4654 = !DILocation(line: 1414, column: 7, scope: !4524)
!4655 = !DILocation(line: 1415, column: 12, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4653, file: !2356, line: 1414, column: 25)
!4657 = !DILocation(line: 1417, column: 14, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4656, file: !2356, line: 1417, column: 8)
!4659 = !DILocation(line: 1417, column: 8, scope: !4656)
!4660 = !DILocation(line: 1418, column: 21, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4658, file: !2356, line: 1417, column: 19)
!4662 = !DILocation(line: 1419, column: 13, scope: !4661)
!4663 = !DILocation(line: 1420, column: 4, scope: !4661)
!4664 = !DILocation(line: 1421, column: 20, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4653, file: !2356, line: 1421, column: 14)
!4666 = !DILocation(line: 1421, column: 14, scope: !4653)
!4667 = !DILocation(line: 1431, column: 13, scope: !4582)
!4668 = !DILocation(line: 1431, column: 7, scope: !4524)
!4669 = !DILocation(line: 1432, column: 14, scope: !4581)
!4670 = !DILocation(line: 0, scope: !4581)
!4671 = !DILocation(line: 1434, column: 12, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4581, file: !2356, line: 1434, column: 8)
!4673 = !DILocation(line: 1434, column: 8, scope: !4581)
!4674 = !DILocation(line: 1435, column: 24, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4672, file: !2356, line: 1434, column: 17)
!4676 = !DILocation(line: 1436, column: 4, scope: !4675)
!4677 = !DILocation(line: 1439, column: 20, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4582, file: !2356, line: 1439, column: 14)
!4679 = !DILocation(line: 1439, column: 14, scope: !4582)
!4680 = !DILocation(line: 1469, column: 37, scope: !4524)
!4681 = !DILocation(line: 1448, column: 20, scope: !4524)
!4682 = !DILocation(line: 1449, column: 22, scope: !4524)
!4683 = !DILocation(line: 1471, column: 34, scope: !4524)
!4684 = !DILocation(line: 1478, column: 7, scope: !4524)
!4685 = !DILocation(line: 1479, column: 4, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !2356, line: 1478, column: 40)
!4687 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1478, column: 7)
!4688 = !DILocation(line: 1484, column: 19, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !2356, line: 1479, column: 24)
!4690 = !DILocation(line: 1484, column: 17, scope: !4689)
!4691 = !DILocation(line: 1485, column: 5, scope: !4689)
!4692 = !DILocation(line: 1492, column: 20, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2356, line: 1491, column: 12)
!4694 = distinct !DILexicalBlock(scope: !4689, file: !2356, line: 1487, column: 9)
!4695 = !DILocation(line: 1492, column: 18, scope: !4693)
!4696 = !DILocation(line: 1494, column: 5, scope: !4689)
!4697 = !DILocation(line: 1497, column: 23, scope: !4689)
!4698 = !DILocation(line: 1496, column: 17, scope: !4689)
!4699 = !DILocation(line: 1498, column: 5, scope: !4689)
!4700 = !DILocation(line: 1501, column: 23, scope: !4689)
!4701 = !DILocation(line: 1500, column: 17, scope: !4689)
!4702 = !DILocation(line: 1502, column: 5, scope: !4689)
!4703 = !DILocation(line: 1513, column: 23, scope: !4689)
!4704 = !DILocation(line: 1513, column: 6, scope: !4689)
!4705 = !DILocation(line: 1512, column: 17, scope: !4689)
!4706 = !DILocation(line: 1514, column: 5, scope: !4689)
!4707 = !DILocation(line: 0, scope: !4689)
!4708 = !DILocation(line: 1516, column: 8, scope: !4686)
!4709 = !DILocation(line: 1517, column: 19, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2356, line: 1516, column: 33)
!4711 = distinct !DILexicalBlock(scope: !4686, file: !2356, line: 1516, column: 8)
!4712 = !DILocation(line: 1517, column: 17, scope: !4710)
!4713 = !DILocation(line: 1518, column: 4, scope: !4710)
!4714 = !DILocation(line: 1519, column: 19, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !2356, line: 1518, column: 39)
!4716 = distinct !DILexicalBlock(scope: !4711, file: !2356, line: 1518, column: 15)
!4717 = !DILocation(line: 1519, column: 17, scope: !4715)
!4718 = !DILocation(line: 1520, column: 4, scope: !4715)
!4719 = !DILocation(line: 1522, column: 4, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !2356, line: 1521, column: 47)
!4721 = distinct !DILexicalBlock(scope: !4687, file: !2356, line: 1521, column: 14)
!4722 = !DILocation(line: 1527, column: 19, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4720, file: !2356, line: 1522, column: 24)
!4724 = !DILocation(line: 1527, column: 17, scope: !4723)
!4725 = !DILocation(line: 1528, column: 5, scope: !4723)
!4726 = !DILocation(line: 0, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4723, file: !2356, line: 1530, column: 9)
!4728 = !DILocation(line: 1540, column: 23, scope: !4723)
!4729 = !DILocation(line: 1539, column: 17, scope: !4723)
!4730 = !DILocation(line: 1542, column: 5, scope: !4723)
!4731 = !DILocation(line: 1545, column: 23, scope: !4723)
!4732 = !DILocation(line: 1544, column: 17, scope: !4723)
!4733 = !DILocation(line: 1547, column: 5, scope: !4723)
!4734 = !DILocation(line: 1551, column: 23, scope: !4723)
!4735 = !DILocation(line: 1551, column: 6, scope: !4723)
!4736 = !DILocation(line: 1550, column: 17, scope: !4723)
!4737 = !DILocation(line: 1552, column: 5, scope: !4723)
!4738 = !DILocation(line: 0, scope: !4723)
!4739 = !DILocation(line: 1554, column: 8, scope: !4720)
!4740 = !DILocation(line: 1555, column: 19, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !2356, line: 1554, column: 33)
!4742 = distinct !DILexicalBlock(scope: !4720, file: !2356, line: 1554, column: 8)
!4743 = !DILocation(line: 1555, column: 17, scope: !4741)
!4744 = !DILocation(line: 1556, column: 4, scope: !4741)
!4745 = !DILocation(line: 1557, column: 19, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !2356, line: 1556, column: 39)
!4747 = distinct !DILexicalBlock(scope: !4742, file: !2356, line: 1556, column: 15)
!4748 = !DILocation(line: 1557, column: 17, scope: !4746)
!4749 = !DILocation(line: 1558, column: 4, scope: !4746)
!4750 = !DILocation(line: 0, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !2356, line: 1560, column: 8)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !2356, line: 1559, column: 45)
!4753 = distinct !DILexicalBlock(scope: !4721, file: !2356, line: 1559, column: 14)
!4754 = !DILocation(line: 1566, column: 17, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !2356, line: 1565, column: 46)
!4756 = distinct !DILexicalBlock(scope: !4753, file: !2356, line: 1565, column: 14)
!4757 = !DILocation(line: 1566, column: 15, scope: !4755)
!4758 = !DILocation(line: 1567, column: 3, scope: !4755)
!4759 = !DILocation(line: 1574, column: 21, scope: !4588)
!4760 = !DILocation(line: 1575, column: 4, scope: !4586)
!4761 = !DILocation(line: 0, scope: !4586)
!4762 = !DILocation(line: 1575, column: 4, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4586, file: !2356, line: 1575, column: 4)
!4764 = !DILocation(line: 1582, column: 17, scope: !4524)
!4765 = !DILocation(line: 1582, column: 3, scope: !4524)
!4766 = !DILocation(line: 1584, column: 4, scope: !4590)
!4767 = !DILocation(line: 0, scope: !4590)
!4768 = !DILocation(line: 1584, column: 4, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4590, file: !2356, line: 1584, column: 4)
!4770 = !DILocation(line: 1587, column: 31, scope: !4593)
!4771 = !DILocation(line: 1591, column: 18, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4593, file: !2356, line: 1591, column: 8)
!4773 = !DILocation(line: 1591, column: 8, scope: !4593)
!4774 = !DILocation(line: 1592, column: 11, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4772, file: !2356, line: 1591, column: 24)
!4776 = !DILocation(line: 0, scope: !4593)
!4777 = !DILocation(line: 1593, column: 4, scope: !4775)
!4778 = !DILocation(line: 1594, column: 11, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4772, file: !2356, line: 1593, column: 11)
!4780 = !DILocation(line: 1604, column: 51, scope: !4591)
!4781 = !DILocation(line: 1604, column: 13, scope: !4591)
!4782 = !DILocation(line: 1604, column: 11, scope: !4591)
!4783 = !DILocation(line: 1606, column: 4, scope: !4591)
!4784 = !DILocation(line: 1609, column: 14, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4591, file: !2356, line: 1609, column: 8)
!4786 = !DILocation(line: 1609, column: 8, scope: !4591)
!4787 = !DILocation(line: 1619, column: 18, scope: !4591)
!4788 = !DILocation(line: 1620, column: 13, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4591, file: !2356, line: 1620, column: 8)
!4790 = !DILocation(line: 1620, column: 8, scope: !4591)
!4791 = !DILocation(line: 1622, column: 36, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4789, file: !2356, line: 1620, column: 18)
!4793 = !DILocation(line: 1622, column: 17, scope: !4792)
!4794 = !DILocation(line: 1623, column: 4, scope: !4792)
!4795 = !DILocation(line: 1632, column: 29, scope: !4591)
!4796 = !DILocation(line: 1632, column: 10, scope: !4591)
!4797 = !DILocation(line: 1632, column: 4, scope: !4591)
!4798 = !DILocation(line: 1407, column: 8, scope: !4524)
!4799 = !DILocation(line: 0, scope: !4591)
!4800 = !DILocation(line: 1634, column: 3, scope: !4591)
!4801 = !DILocation(line: 1640, column: 18, scope: !4596)
!4802 = !DILocation(line: 1640, column: 8, scope: !4591)
!4803 = !DILocation(line: 1729, column: 13, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1729, column: 7)
!4805 = !DILocation(line: 1641, column: 22, scope: !4595)
!4806 = !DILocation(line: 0, scope: !4595)
!4807 = !DILocation(line: 1646, column: 21, scope: !4595)
!4808 = !DILocation(line: 1649, column: 13, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4595, file: !2356, line: 1649, column: 9)
!4810 = !DILocation(line: 1649, column: 9, scope: !4595)
!4811 = !DILocation(line: 1650, column: 35, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4809, file: !2356, line: 1649, column: 34)
!4813 = !DILocation(line: 1650, column: 23, scope: !4812)
!4814 = !DILocation(line: 1651, column: 5, scope: !4812)
!4815 = !DILocation(line: 1660, column: 15, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4591, file: !2356, line: 1660, column: 8)
!4817 = !DILocation(line: 1660, column: 19, scope: !4816)
!4818 = !DILocation(line: 1660, column: 8, scope: !4591)
!4819 = !DILocation(line: 1661, column: 23, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4816, file: !2356, line: 1660, column: 28)
!4821 = !DILocation(line: 1661, column: 11, scope: !4820)
!4822 = !DILocation(line: 1665, column: 22, scope: !4820)
!4823 = !DILocation(line: 1666, column: 21, scope: !4820)
!4824 = !DILocation(line: 1668, column: 5, scope: !4820)
!4825 = !DILocation(line: 1677, column: 30, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !2356, line: 1676, column: 49)
!4827 = distinct !DILexicalBlock(scope: !4591, file: !2356, line: 1676, column: 8)
!4828 = !DILocation(line: 1677, column: 5, scope: !4826)
!4829 = !DILocation(line: 1680, column: 4, scope: !4591)
!4830 = !DILocation(line: 0, scope: !4772)
!4831 = !DILocation(line: 1597, column: 14, scope: !4593)
!4832 = !DILocation(line: 1699, column: 11, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1699, column: 7)
!4834 = !DILocation(line: 1699, column: 7, scope: !4524)
!4835 = !DILocation(line: 1725, column: 7, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1725, column: 7)
!4837 = !DILocation(line: 1725, column: 12, scope: !4836)
!4838 = !DILocation(line: 1747, column: 13, scope: !4603)
!4839 = !DILocation(line: 1747, column: 7, scope: !4524)
!4840 = !DILocation(line: 1722, column: 24, scope: !4524)
!4841 = !DILocation(line: 1725, column: 7, scope: !4524)
!4842 = !DILocation(line: 1729, column: 7, scope: !4524)
!4843 = !DILocation(line: 1736, column: 13, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4524, file: !2356, line: 1736, column: 7)
!4845 = !DILocation(line: 1735, column: 19, scope: !4524)
!4846 = !DILocation(line: 1736, column: 7, scope: !4524)
!4847 = !DILocation(line: 1748, column: 10, scope: !4602)
!4848 = !DILocation(line: 1750, column: 15, scope: !4601)
!4849 = !DILocation(line: 1750, column: 8, scope: !4602)
!4850 = !DILocation(line: 0, scope: !4600)
!4851 = !DILocation(line: 1756, column: 15, scope: !4609)
!4852 = !DILocation(line: 1756, column: 9, scope: !4600)
!4853 = !DILocation(line: 1758, column: 7, scope: !4605)
!4854 = !DILocation(line: 0, scope: !4605)
!4855 = !DILocation(line: 1758, column: 7, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4605, file: !2356, line: 1758, column: 7)
!4857 = !DILocation(line: 1764, column: 5, scope: !4600)
!4858 = !DILocation(line: 0, scope: !4602)
!4859 = !DILocation(line: 1764, column: 20, scope: !4600)
!4860 = !DILocation(line: 1764, column: 17, scope: !4600)
!4861 = !DILocation(line: 1765, column: 6, scope: !4611)
!4862 = !DILocation(line: 0, scope: !4611)
!4863 = !DILocation(line: 1765, column: 6, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4611, file: !2356, line: 1765, column: 6)
!4865 = distinct !{!4865, !4857, !4866}
!4866 = !DILocation(line: 1766, column: 5, scope: !4600)
!4867 = !DILocation(line: 1773, column: 12, scope: !4616)
!4868 = !DILocation(line: 1773, column: 7, scope: !4524)
!4869 = !DILocation(line: 1773, column: 7, scope: !4616)
!4870 = !DILocation(line: 1774, column: 4, scope: !4614)
!4871 = !DILocation(line: 0, scope: !4614)
!4872 = !DILocation(line: 1774, column: 4, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4614, file: !2356, line: 1774, column: 4)
!4874 = !DILocation(line: 1818, column: 8, scope: !4620)
!4875 = !DILocation(line: 1818, column: 27, scope: !4620)
!4876 = !DILocation(line: 1818, column: 25, scope: !4620)
!4877 = !DILocation(line: 1818, column: 8, scope: !4621)
!4878 = !DILocation(line: 1819, column: 5, scope: !4618)
!4879 = !DILocation(line: 0, scope: !4618)
!4880 = !DILocation(line: 1819, column: 5, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4618, file: !2356, line: 1819, column: 5)
!4882 = !DILocation(line: 1822, column: 14, scope: !4626)
!4883 = !DILocation(line: 1822, column: 8, scope: !4621)
!4884 = !DILocation(line: 1823, column: 5, scope: !4624)
!4885 = !DILocation(line: 0, scope: !4624)
!4886 = !DILocation(line: 1823, column: 5, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4624, file: !2356, line: 1823, column: 5)
!4888 = !DILocation(line: 1826, column: 20, scope: !4621)
!4889 = !DILocation(line: 1827, column: 4, scope: !4621)
!4890 = !DILocation(line: 0, scope: !4621)
!4891 = !DILocation(line: 1827, column: 21, scope: !4621)
!4892 = !DILocation(line: 1827, column: 18, scope: !4621)
!4893 = !DILocation(line: 1828, column: 5, scope: !4628)
!4894 = !DILocation(line: 0, scope: !4628)
!4895 = !DILocation(line: 1828, column: 5, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4628, file: !2356, line: 1828, column: 5)
!4897 = distinct !{!4897, !4889, !4898}
!4898 = !DILocation(line: 1829, column: 4, scope: !4621)
!4899 = !DILocation(line: 1831, column: 4, scope: !4631)
!4900 = !DILocation(line: 0, scope: !4631)
!4901 = !DILocation(line: 1831, column: 4, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4631, file: !2356, line: 1831, column: 4)
!4903 = !DILocation(line: 1835, column: 16, scope: !4524)
!4904 = !DILocation(line: 1835, column: 3, scope: !4524)
!4905 = !DILocation(line: 1836, column: 4, scope: !4633)
!4906 = !DILocation(line: 0, scope: !4633)
!4907 = !DILocation(line: 1836, column: 4, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4633, file: !2356, line: 1836, column: 4)
!4909 = !DILocation(line: 1837, column: 4, scope: !4634)
!4910 = distinct !{!4910, !4904, !4911}
!4911 = !DILocation(line: 1838, column: 3, scope: !4524)
!4912 = !DILocation(line: 1844, column: 1, scope: !4497)
!4913 = distinct !DISubprogram(name: "extract_conversion", scope: !2356, file: !2356, line: 642, type: !4914, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !4916)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!278, !4570, !278}
!4916 = !{!4917, !4918}
!4917 = !DILocalVariable(name: "conv", arg: 1, scope: !4913, file: !2356, line: 642, type: !4570)
!4918 = !DILocalVariable(name: "sp", arg: 2, scope: !4913, file: !2356, line: 643, type: !278)
!4919 = !DILocation(line: 0, scope: !4913)
!4920 = !DILocation(line: 645, column: 10, scope: !4913)
!4921 = !DILocation(line: 653, column: 2, scope: !4913)
!4922 = !DILocation(line: 654, column: 6, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4913, file: !2356, line: 654, column: 6)
!4924 = !DILocation(line: 654, column: 10, scope: !4923)
!4925 = !DILocation(line: 654, column: 6, scope: !4913)
!4926 = !DILocation(line: 655, column: 24, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4923, file: !2356, line: 654, column: 18)
!4928 = !DILocation(line: 655, column: 19, scope: !4927)
!4929 = !DILocation(line: 656, column: 3, scope: !4927)
!4930 = !DILocation(line: 659, column: 7, scope: !4913)
!4931 = !DILocation(line: 660, column: 7, scope: !4913)
!4932 = !DILocation(line: 661, column: 7, scope: !4913)
!4933 = !DILocation(line: 662, column: 7, scope: !4913)
!4934 = !DILocation(line: 663, column: 7, scope: !4913)
!4935 = !DILocation(line: 665, column: 2, scope: !4913)
!4936 = !DILocation(line: 666, column: 1, scope: !4913)
!4937 = distinct !DISubprogram(name: "outs", scope: !2356, file: !2356, line: 1319, type: !4938, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !4940)
!4938 = !DISubroutineType(types: !4939)
!4939 = !{!119, !3651, !113, !278, !278}
!4940 = !{!4941, !4942, !4943, !4944, !4945, !4946}
!4941 = !DILocalVariable(name: "out", arg: 1, scope: !4937, file: !2356, line: 1319, type: !3651)
!4942 = !DILocalVariable(name: "ctx", arg: 2, scope: !4937, file: !2356, line: 1320, type: !113)
!4943 = !DILocalVariable(name: "sp", arg: 3, scope: !4937, file: !2356, line: 1321, type: !278)
!4944 = !DILocalVariable(name: "ep", arg: 4, scope: !4937, file: !2356, line: 1322, type: !278)
!4945 = !DILocalVariable(name: "count", scope: !4937, file: !2356, line: 1324, type: !239)
!4946 = !DILocalVariable(name: "rc", scope: !4947, file: !2356, line: 1327, type: !119)
!4947 = distinct !DILexicalBlock(scope: !4937, file: !2356, line: 1326, column: 45)
!4948 = !DILocation(line: 0, scope: !4937)
!4949 = !DILocation(line: 1326, column: 2, scope: !4937)
!4950 = !DILocation(line: 1324, column: 9, scope: !4937)
!4951 = !DILocation(line: 1326, column: 13, scope: !4937)
!4952 = !DILocation(line: 1326, column: 19, scope: !4937)
!4953 = !DILocation(line: 1327, column: 21, scope: !4947)
!4954 = !DILocation(line: 1326, column: 36, scope: !4937)
!4955 = !DILocation(line: 1326, column: 39, scope: !4937)
!4956 = !DILocation(line: 1327, column: 24, scope: !4947)
!4957 = !DILocation(line: 1327, column: 16, scope: !4947)
!4958 = !DILocation(line: 1327, column: 12, scope: !4947)
!4959 = !DILocation(line: 0, scope: !4947)
!4960 = !DILocation(line: 1329, column: 10, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4947, file: !2356, line: 1329, column: 7)
!4962 = !DILocation(line: 1329, column: 7, scope: !4947)
!4963 = distinct !{!4963, !4949, !4964}
!4964 = !DILocation(line: 1333, column: 2, scope: !4937)
!4965 = !DILocation(line: 1336, column: 1, scope: !4937)
!4966 = distinct !DISubprogram(name: "encode_uint", scope: !2356, file: !2356, line: 788, type: !4967, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !4969)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!106, !2378, !4570, !106, !278}
!4969 = !{!4970, !4971, !4972, !4973, !4974, !4975, !4977, !4978}
!4970 = !DILocalVariable(name: "value", arg: 1, scope: !4966, file: !2356, line: 788, type: !2378)
!4971 = !DILocalVariable(name: "conv", arg: 2, scope: !4966, file: !2356, line: 789, type: !4570)
!4972 = !DILocalVariable(name: "bps", arg: 3, scope: !4966, file: !2356, line: 790, type: !106)
!4973 = !DILocalVariable(name: "bpe", arg: 4, scope: !4966, file: !2356, line: 791, type: !278)
!4974 = !DILocalVariable(name: "upcase", scope: !4966, file: !2356, line: 793, type: !345)
!4975 = !DILocalVariable(name: "radix", scope: !4966, file: !2356, line: 794, type: !4976)
!4976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4977 = !DILocalVariable(name: "bp", scope: !4966, file: !2356, line: 795, type: !106)
!4978 = !DILocalVariable(name: "lsv", scope: !4979, file: !2356, line: 798, type: !32)
!4979 = distinct !DILexicalBlock(scope: !4966, file: !2356, line: 797, column: 5)
!4980 = !DILocation(line: 0, scope: !4966)
!4981 = !DILocation(line: 793, column: 35, scope: !4966)
!4982 = !DILocation(line: 793, column: 24, scope: !4966)
!4983 = !DILocation(line: 793, column: 16, scope: !4966)
!4984 = !DILocation(line: 794, column: 29, scope: !4966)
!4985 = !DILocation(line: 795, column: 24, scope: !4966)
!4986 = !DILocation(line: 795, column: 17, scope: !4966)
!4987 = !DILocation(line: 797, column: 2, scope: !4966)
!4988 = !DILocation(line: 802, column: 9, scope: !4979)
!4989 = !DILocation(line: 798, column: 22, scope: !4979)
!4990 = !DILocation(line: 0, scope: !4979)
!4991 = !DILocation(line: 800, column: 16, scope: !4979)
!4992 = !DILocation(line: 800, column: 11, scope: !4979)
!4993 = !DILocation(line: 800, column: 4, scope: !4979)
!4994 = !DILocation(line: 800, column: 9, scope: !4979)
!4995 = !DILocation(line: 803, column: 18, scope: !4966)
!4996 = !DILocation(line: 803, column: 24, scope: !4966)
!4997 = !DILocation(line: 803, column: 2, scope: !4979)
!4998 = distinct !{!4998, !4987, !4999}
!4999 = !DILocation(line: 803, column: 37, scope: !4966)
!5000 = !DILocation(line: 808, column: 12, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4966, file: !2356, line: 808, column: 6)
!5002 = !DILocation(line: 808, column: 6, scope: !4966)
!5003 = !DILocation(line: 809, column: 7, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5001, file: !2356, line: 808, column: 23)
!5005 = !DILocation(line: 813, column: 3, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !2356, line: 811, column: 27)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !2356, line: 811, column: 14)
!5008 = distinct !DILexicalBlock(scope: !5004, file: !2356, line: 809, column: 7)
!5009 = !DILocation(line: 0, scope: !5008)
!5010 = !DILocation(line: 818, column: 2, scope: !4966)
!5011 = distinct !DISubprogram(name: "store_count", scope: !2356, file: !2356, line: 1280, type: !5012, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5016)
!5012 = !DISubroutineType(types: !5013)
!5013 = !{null, !5014, !113, !119}
!5014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5015, size: 32)
!5015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4537)
!5016 = !{!5017, !5018, !5019}
!5017 = !DILocalVariable(name: "conv", arg: 1, scope: !5011, file: !2356, line: 1280, type: !5014)
!5018 = !DILocalVariable(name: "dp", arg: 2, scope: !5011, file: !2356, line: 1281, type: !113)
!5019 = !DILocalVariable(name: "count", arg: 3, scope: !5011, file: !2356, line: 1282, type: !119)
!5020 = !DILocation(line: 0, scope: !5011)
!5021 = !DILocation(line: 1284, column: 38, scope: !5011)
!5022 = !DILocation(line: 1284, column: 2, scope: !5011)
!5023 = !DILocation(line: 1286, column: 4, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5011, file: !2356, line: 1284, column: 50)
!5025 = !DILocation(line: 1286, column: 14, scope: !5024)
!5026 = !DILocation(line: 1287, column: 3, scope: !5024)
!5027 = !DILocation(line: 1289, column: 24, scope: !5024)
!5028 = !DILocation(line: 1289, column: 22, scope: !5024)
!5029 = !DILocation(line: 1290, column: 3, scope: !5024)
!5030 = !DILocation(line: 1292, column: 18, scope: !5024)
!5031 = !DILocation(line: 1292, column: 4, scope: !5024)
!5032 = !DILocation(line: 1292, column: 16, scope: !5024)
!5033 = !DILocation(line: 1293, column: 3, scope: !5024)
!5034 = !DILocation(line: 1295, column: 4, scope: !5024)
!5035 = !DILocation(line: 1295, column: 15, scope: !5024)
!5036 = !DILocation(line: 1296, column: 3, scope: !5024)
!5037 = !DILocation(line: 1298, column: 22, scope: !5024)
!5038 = !DILocation(line: 1298, column: 4, scope: !5024)
!5039 = !DILocation(line: 1298, column: 20, scope: !5024)
!5040 = !DILocation(line: 1299, column: 3, scope: !5024)
!5041 = !DILocation(line: 1301, column: 21, scope: !5024)
!5042 = !DILocation(line: 1301, column: 4, scope: !5024)
!5043 = !DILocation(line: 1301, column: 19, scope: !5024)
!5044 = !DILocation(line: 1302, column: 3, scope: !5024)
!5045 = !DILocation(line: 1304, column: 4, scope: !5024)
!5046 = !DILocation(line: 1304, column: 17, scope: !5024)
!5047 = !DILocation(line: 1305, column: 3, scope: !5024)
!5048 = !DILocation(line: 1307, column: 4, scope: !5024)
!5049 = !DILocation(line: 1307, column: 20, scope: !5024)
!5050 = !DILocation(line: 1308, column: 3, scope: !5024)
!5051 = !DILocation(line: 1316, column: 1, scope: !5011)
!5052 = distinct !DISubprogram(name: "isupper", scope: !5053, file: !5053, line: 16, type: !301, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5054)
!5053 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5054 = !{!5055}
!5055 = !DILocalVariable(name: "a", arg: 1, scope: !5052, file: !5053, line: 16, type: !119)
!5056 = !DILocation(line: 0, scope: !5052)
!5057 = !DILocation(line: 18, column: 29, scope: !5052)
!5058 = !DILocation(line: 18, column: 45, scope: !5052)
!5059 = !DILocation(line: 18, column: 2, scope: !5052)
!5060 = distinct !DISubprogram(name: "conversion_radix", scope: !2356, file: !2356, line: 761, type: !5061, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5063)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{!239, !107}
!5063 = !{!5064}
!5064 = !DILocalVariable(name: "specifier", arg: 1, scope: !5060, file: !2356, line: 761, type: !107)
!5065 = !DILocation(line: 0, scope: !5060)
!5066 = !DILocation(line: 763, column: 2, scope: !5060)
!5067 = !DILocation(line: 770, column: 3, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5060, file: !2356, line: 763, column: 21)
!5069 = !DILocation(line: 774, column: 3, scope: !5068)
!5070 = !DILocation(line: 0, scope: !5068)
!5071 = !DILocation(line: 776, column: 1, scope: !5060)
!5072 = distinct !DISubprogram(name: "extract_flags", scope: !2356, file: !2356, line: 339, type: !4914, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5073)
!5073 = !{!5074, !5075, !5076}
!5074 = !DILocalVariable(name: "conv", arg: 1, scope: !5072, file: !2356, line: 339, type: !4570)
!5075 = !DILocalVariable(name: "sp", arg: 2, scope: !5072, file: !2356, line: 340, type: !278)
!5076 = !DILocalVariable(name: "loop", scope: !5072, file: !2356, line: 342, type: !345)
!5077 = !DILocation(line: 0, scope: !5072)
!5078 = !DILocation(line: 344, column: 2, scope: !5072)
!5079 = !DILocation(line: 345, column: 11, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5072, file: !2356, line: 344, column: 5)
!5081 = !DILocation(line: 345, column: 3, scope: !5080)
!5082 = !DILocation(line: 351, column: 4, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5080, file: !2356, line: 345, column: 16)
!5084 = !DILocation(line: 354, column: 4, scope: !5083)
!5085 = !DILocation(line: 357, column: 4, scope: !5083)
!5086 = !DILocation(line: 360, column: 4, scope: !5083)
!5087 = !DILocation(line: 0, scope: !5083)
!5088 = !DILocation(line: 370, column: 12, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5072, file: !2356, line: 370, column: 6)
!5090 = !DILocation(line: 370, column: 22, scope: !5089)
!5091 = !DILocation(line: 371, column: 19, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5089, file: !2356, line: 370, column: 42)
!5093 = !DILocation(line: 372, column: 2, scope: !5092)
!5094 = !DILocation(line: 376, column: 2, scope: !5072)
!5095 = distinct !DISubprogram(name: "extract_width", scope: !2356, file: !2356, line: 388, type: !4914, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5096)
!5096 = !{!5097, !5098, !5099, !5100}
!5097 = !DILocalVariable(name: "conv", arg: 1, scope: !5095, file: !2356, line: 388, type: !4570)
!5098 = !DILocalVariable(name: "sp", arg: 2, scope: !5095, file: !2356, line: 389, type: !278)
!5099 = !DILocalVariable(name: "wp", scope: !5095, file: !2356, line: 398, type: !278)
!5100 = !DILocalVariable(name: "width", scope: !5095, file: !2356, line: 399, type: !239)
!5101 = !DILocation(line: 0, scope: !5095)
!5102 = !DILocation(line: 391, column: 8, scope: !5095)
!5103 = !DILocation(line: 391, column: 22, scope: !5095)
!5104 = !DILocation(line: 393, column: 6, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5095, file: !2356, line: 393, column: 6)
!5106 = !DILocation(line: 393, column: 10, scope: !5105)
!5107 = !DILocation(line: 393, column: 6, scope: !5095)
!5108 = !DILocation(line: 394, column: 20, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5105, file: !2356, line: 393, column: 18)
!5110 = !DILocation(line: 395, column: 10, scope: !5109)
!5111 = !DILocation(line: 395, column: 3, scope: !5109)
!5112 = !DILocation(line: 399, column: 17, scope: !5095)
!5113 = !DILocation(line: 401, column: 6, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5095, file: !2356, line: 401, column: 6)
!5115 = !DILocation(line: 401, column: 9, scope: !5114)
!5116 = !DILocation(line: 401, column: 6, scope: !5095)
!5117 = !DILocation(line: 402, column: 23, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !2356, line: 401, column: 16)
!5119 = !DILocation(line: 403, column: 9, scope: !5118)
!5120 = !DILocation(line: 403, column: 21, scope: !5118)
!5121 = !DILocation(line: 405, column: 11, scope: !5118)
!5122 = !DILocation(line: 404, column: 21, scope: !5118)
!5123 = !DILocation(line: 406, column: 2, scope: !5118)
!5124 = !DILocation(line: 409, column: 1, scope: !5095)
!5125 = distinct !DISubprogram(name: "extract_prec", scope: !2356, file: !2356, line: 420, type: !4914, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5126)
!5126 = !{!5127, !5128, !5129}
!5127 = !DILocalVariable(name: "conv", arg: 1, scope: !5125, file: !2356, line: 420, type: !4570)
!5128 = !DILocalVariable(name: "sp", arg: 2, scope: !5125, file: !2356, line: 421, type: !278)
!5129 = !DILocalVariable(name: "prec", scope: !5125, file: !2356, line: 435, type: !239)
!5130 = !DILocation(line: 0, scope: !5125)
!5131 = !DILocation(line: 423, column: 24, scope: !5125)
!5132 = !DILocation(line: 423, column: 28, scope: !5125)
!5133 = !DILocation(line: 423, column: 8, scope: !5125)
!5134 = !DILocation(line: 423, column: 21, scope: !5125)
!5135 = !DILocation(line: 425, column: 6, scope: !5125)
!5136 = !DILocation(line: 428, column: 2, scope: !5125)
!5137 = !DILocation(line: 430, column: 6, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5125, file: !2356, line: 430, column: 6)
!5139 = !DILocation(line: 430, column: 10, scope: !5138)
!5140 = !DILocation(line: 430, column: 6, scope: !5125)
!5141 = !DILocation(line: 431, column: 19, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5138, file: !2356, line: 430, column: 18)
!5143 = !DILocation(line: 432, column: 10, scope: !5142)
!5144 = !DILocation(line: 432, column: 3, scope: !5142)
!5145 = !DILocation(line: 435, column: 16, scope: !5125)
!5146 = !DILocation(line: 437, column: 8, scope: !5125)
!5147 = !DILocation(line: 437, column: 19, scope: !5125)
!5148 = !DILocation(line: 439, column: 10, scope: !5125)
!5149 = !DILocation(line: 438, column: 20, scope: !5125)
!5150 = !DILocation(line: 441, column: 9, scope: !5125)
!5151 = !DILocation(line: 442, column: 1, scope: !5125)
!5152 = distinct !DISubprogram(name: "extract_length", scope: !2356, file: !2356, line: 453, type: !4914, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5153)
!5153 = !{!5154, !5155}
!5154 = !DILocalVariable(name: "conv", arg: 1, scope: !5152, file: !2356, line: 453, type: !4570)
!5155 = !DILocalVariable(name: "sp", arg: 2, scope: !5152, file: !2356, line: 454, type: !278)
!5156 = !DILocation(line: 0, scope: !5152)
!5157 = !DILocation(line: 456, column: 10, scope: !5152)
!5158 = !DILocation(line: 456, column: 2, scope: !5152)
!5159 = !DILocation(line: 458, column: 8, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5161, file: !2356, line: 458, column: 7)
!5161 = distinct !DILexicalBlock(scope: !5152, file: !2356, line: 456, column: 15)
!5162 = !DILocation(line: 458, column: 7, scope: !5160)
!5163 = !DILocation(line: 458, column: 13, scope: !5160)
!5164 = !DILocation(line: 0, scope: !5160)
!5165 = !DILocation(line: 458, column: 7, scope: !5161)
!5166 = !DILocation(line: 459, column: 21, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5160, file: !2356, line: 458, column: 21)
!5168 = !DILocation(line: 460, column: 4, scope: !5167)
!5169 = !DILocation(line: 461, column: 3, scope: !5167)
!5170 = !DILocation(line: 462, column: 21, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5160, file: !2356, line: 461, column: 10)
!5172 = !DILocation(line: 466, column: 8, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5161, file: !2356, line: 466, column: 7)
!5174 = !DILocation(line: 466, column: 7, scope: !5173)
!5175 = !DILocation(line: 466, column: 13, scope: !5173)
!5176 = !DILocation(line: 0, scope: !5173)
!5177 = !DILocation(line: 466, column: 7, scope: !5161)
!5178 = !DILocation(line: 467, column: 21, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5173, file: !2356, line: 466, column: 21)
!5180 = !DILocation(line: 468, column: 4, scope: !5179)
!5181 = !DILocation(line: 469, column: 3, scope: !5179)
!5182 = !DILocation(line: 470, column: 21, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5173, file: !2356, line: 469, column: 10)
!5184 = !DILocation(line: 474, column: 9, scope: !5161)
!5185 = !DILocation(line: 474, column: 20, scope: !5161)
!5186 = !DILocation(line: 475, column: 3, scope: !5161)
!5187 = !DILocation(line: 476, column: 3, scope: !5161)
!5188 = !DILocation(line: 478, column: 9, scope: !5161)
!5189 = !DILocation(line: 478, column: 20, scope: !5161)
!5190 = !DILocation(line: 479, column: 3, scope: !5161)
!5191 = !DILocation(line: 480, column: 3, scope: !5161)
!5192 = !DILocation(line: 482, column: 9, scope: !5161)
!5193 = !DILocation(line: 482, column: 20, scope: !5161)
!5194 = !DILocation(line: 483, column: 3, scope: !5161)
!5195 = !DILocation(line: 484, column: 3, scope: !5161)
!5196 = !DILocation(line: 486, column: 9, scope: !5161)
!5197 = !DILocation(line: 486, column: 20, scope: !5161)
!5198 = !DILocation(line: 487, column: 3, scope: !5161)
!5199 = !DILocation(line: 492, column: 21, scope: !5161)
!5200 = !DILocation(line: 493, column: 3, scope: !5161)
!5201 = !DILocation(line: 495, column: 9, scope: !5161)
!5202 = !DILocation(line: 495, column: 20, scope: !5161)
!5203 = !DILocation(line: 496, column: 3, scope: !5161)
!5204 = !DILocation(line: 498, column: 2, scope: !5152)
!5205 = distinct !DISubprogram(name: "extract_specifier", scope: !2356, file: !2356, line: 513, type: !4914, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5206)
!5206 = !{!5207, !5208, !5209, !5210}
!5207 = !DILocalVariable(name: "conv", arg: 1, scope: !5205, file: !2356, line: 513, type: !4570)
!5208 = !DILocalVariable(name: "sp", arg: 2, scope: !5205, file: !2356, line: 514, type: !278)
!5209 = !DILocalVariable(name: "unsupported", scope: !5205, file: !2356, line: 516, type: !345)
!5210 = !DILabel(scope: !5211, name: "int_conv", file: !2356, line: 526)
!5211 = distinct !DILexicalBlock(scope: !5205, file: !2356, line: 520, column: 27)
!5212 = !DILocation(line: 0, scope: !5205)
!5213 = !DILocation(line: 518, column: 20, scope: !5205)
!5214 = !DILocation(line: 518, column: 8, scope: !5205)
!5215 = !DILocation(line: 518, column: 18, scope: !5205)
!5216 = !DILocation(line: 520, column: 2, scope: !5205)
!5217 = !DILocation(line: 525, column: 3, scope: !5211)
!5218 = !DILocation(line: 0, scope: !5211)
!5219 = !DILocation(line: 526, column: 1, scope: !5211)
!5220 = !DILocation(line: 528, column: 24, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5211, file: !2356, line: 528, column: 7)
!5222 = !DILocation(line: 528, column: 7, scope: !5211)
!5223 = !DILocation(line: 535, column: 23, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5211, file: !2356, line: 535, column: 7)
!5225 = !DILocation(line: 535, column: 7, scope: !5211)
!5226 = !DILocation(line: 536, column: 36, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5224, file: !2356, line: 535, column: 31)
!5228 = !DILocation(line: 537, column: 3, scope: !5227)
!5229 = !DILocation(line: 570, column: 9, scope: !5211)
!5230 = !DILocation(line: 570, column: 23, scope: !5211)
!5231 = !DILocation(line: 575, column: 4, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5233, file: !2356, line: 573, column: 48)
!5233 = distinct !DILexicalBlock(scope: !5211, file: !2356, line: 573, column: 7)
!5234 = !DILocation(line: 603, column: 9, scope: !5211)
!5235 = !DILocation(line: 603, column: 23, scope: !5211)
!5236 = !DILocation(line: 605, column: 24, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5211, file: !2356, line: 605, column: 7)
!5238 = !DILocation(line: 605, column: 7, scope: !5211)
!5239 = !DILocation(line: 612, column: 9, scope: !5211)
!5240 = !DILocation(line: 612, column: 23, scope: !5211)
!5241 = !DILocation(line: 619, column: 24, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5211, file: !2356, line: 619, column: 7)
!5243 = !DILocation(line: 619, column: 7, scope: !5211)
!5244 = !DILocation(line: 625, column: 9, scope: !5211)
!5245 = !DILocation(line: 625, column: 17, scope: !5211)
!5246 = !DILocation(line: 626, column: 3, scope: !5211)
!5247 = !DILocation(line: 629, column: 20, scope: !5205)
!5248 = !DILocation(line: 629, column: 8, scope: !5205)
!5249 = !DILocation(line: 518, column: 23, scope: !5205)
!5250 = !DILocation(line: 631, column: 2, scope: !5205)
!5251 = distinct !DISubprogram(name: "extract_decimal", scope: !2356, file: !2356, line: 318, type: !5252, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5254)
!5252 = !DISubroutineType(types: !5253)
!5253 = !{!239, !277}
!5254 = !{!5255, !5256, !5257}
!5255 = !DILocalVariable(name: "str", arg: 1, scope: !5251, file: !2356, line: 318, type: !277)
!5256 = !DILocalVariable(name: "sp", scope: !5251, file: !2356, line: 320, type: !278)
!5257 = !DILocalVariable(name: "val", scope: !5251, file: !2356, line: 321, type: !239)
!5258 = !DILocation(line: 0, scope: !5251)
!5259 = !DILocation(line: 320, column: 19, scope: !5251)
!5260 = !DILocation(line: 323, column: 37, scope: !5251)
!5261 = !DILocation(line: 323, column: 17, scope: !5251)
!5262 = !DILocation(line: 323, column: 9, scope: !5251)
!5263 = !DILocation(line: 323, column: 2, scope: !5251)
!5264 = !DILocation(line: 324, column: 13, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5251, file: !2356, line: 323, column: 43)
!5266 = !DILocation(line: 324, column: 24, scope: !5265)
!5267 = !DILocation(line: 324, column: 19, scope: !5265)
!5268 = !DILocation(line: 324, column: 27, scope: !5265)
!5269 = distinct !{!5269, !5263, !5270}
!5270 = !DILocation(line: 325, column: 2, scope: !5251)
!5271 = !DILocation(line: 326, column: 7, scope: !5251)
!5272 = !DILocation(line: 327, column: 2, scope: !5251)
!5273 = distinct !DISubprogram(name: "isdigit", scope: !5053, file: !5053, line: 43, type: !301, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !5274)
!5274 = !{!5275}
!5275 = !DILocalVariable(name: "a", arg: 1, scope: !5273, file: !5053, line: 43, type: !119)
!5276 = !DILocation(line: 0, scope: !5273)
!5277 = !DILocation(line: 45, column: 29, scope: !5273)
!5278 = !DILocation(line: 45, column: 45, scope: !5273)
!5279 = !DILocation(line: 45, column: 2, scope: !5273)
!5280 = distinct !DISubprogram(name: "assert_post_action", scope: !5281, file: !5281, line: 26, type: !5282, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !5284)
!5281 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5282 = !DISubroutineType(types: !5283)
!5283 = !{null, !278, !32}
!5284 = !{!5285, !5286}
!5285 = !DILocalVariable(name: "file", arg: 1, scope: !5280, file: !5281, line: 26, type: !278)
!5286 = !DILocalVariable(name: "line", arg: 2, scope: !5280, file: !5281, line: 26, type: !32)
!5287 = !DILocation(line: 0, scope: !5280)
!5288 = !DILocation(line: 43, column: 2, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5280, file: !5281, line: 43, column: 2)
!5290 = !{i64 2154074875, i64 2154074891, i64 2154074917, i64 2154074945, i64 2154074965}
!5291 = !DILocation(line: 44, column: 1, scope: !5280)
!5292 = distinct !DISubprogram(name: "assert_print", scope: !5281, file: !5281, line: 46, type: !4263, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !5293)
!5293 = !{!5294, !5295}
!5294 = !DILocalVariable(name: "fmt", arg: 1, scope: !5292, file: !5281, line: 46, type: !278)
!5295 = !DILocalVariable(name: "ap", scope: !5292, file: !5281, line: 48, type: !5296)
!5296 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3269, line: 99, baseType: !5297)
!5297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3269, line: 40, baseType: !5298)
!5298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5281, baseType: !5299)
!5299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5300)
!5300 = !{!5301}
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5299, file: !5281, line: 48, baseType: !113, size: 32)
!5302 = !DILocation(line: 0, scope: !5292)
!5303 = !DILocation(line: 48, column: 2, scope: !5292)
!5304 = !DILocation(line: 48, column: 10, scope: !5292)
!5305 = !DILocation(line: 50, column: 2, scope: !5292)
!5306 = !DILocation(line: 52, column: 2, scope: !5292)
!5307 = !DILocation(line: 54, column: 2, scope: !5292)
!5308 = !DILocation(line: 55, column: 1, scope: !5292)
!5309 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5310, file: !5310, line: 9, type: !2936, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2388, retainedNodes: !2000)
!5310 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!5311 = !DILocation(line: 11, column: 1, scope: !5309)
!5312 = !{i64 2147564783, i64 2147564826, i64 2147564866}
!5313 = !DILocation(line: 12, column: 1, scope: !5309)
!5314 = !{i64 2147569010, i64 2147569053, i64 2147569093}
!5315 = !DILocation(line: 13, column: 1, scope: !5309)
!5316 = !{i64 2147569219, i64 2147569262, i64 2147569302}
!5317 = !DILocation(line: 14, column: 1, scope: !5309)
!5318 = !{i64 2147569388, i64 2147569431, i64 2147569471}
!5319 = !DILocation(line: 15, column: 1, scope: !5309)
!5320 = !{i64 2147569551, i64 2147569594, i64 2147569634}
!5321 = !DILocation(line: 16, column: 1, scope: !5309)
!5322 = !{i64 2147569735, i64 2147569778, i64 2147569818}
!5323 = !DILocation(line: 17, column: 1, scope: !5309)
!5324 = !{i64 2147569914, i64 2147569957, i64 2147569997}
!5325 = !DILocation(line: 18, column: 1, scope: !5309)
!5326 = !{i64 2147570156, i64 2147570199, i64 2147570239}
!5327 = !DILocation(line: 19, column: 1, scope: !5309)
!5328 = !{i64 2147570391, i64 2147570434, i64 2147570474}
!5329 = !DILocation(line: 20, column: 1, scope: !5309)
!5330 = !{i64 2147570577, i64 2147570620, i64 2147570660}
!5331 = !DILocation(line: 21, column: 1, scope: !5309)
!5332 = !{i64 2147570793, i64 2147570836, i64 2147570876}
!5333 = !DILocation(line: 22, column: 1, scope: !5309)
!5334 = !{i64 2147570996, i64 2147571039, i64 2147571079}
!5335 = !DILocation(line: 23, column: 1, scope: !5309)
!5336 = !{i64 2147571199, i64 2147571242, i64 2147571282}
!5337 = !DILocation(line: 24, column: 1, scope: !5309)
!5338 = !{i64 2147571374, i64 2147571417, i64 2147571457}
!5339 = !DILocation(line: 25, column: 1, scope: !5309)
!5340 = !{i64 2147571582, i64 2147571625, i64 2147571665}
!5341 = !DILocation(line: 26, column: 1, scope: !5309)
!5342 = !{i64 2147571786, i64 2147571829, i64 2147571869}
!5343 = !DILocation(line: 27, column: 1, scope: !5309)
!5344 = !{i64 2147571979, i64 2147572022, i64 2147572062}
!5345 = !DILocation(line: 28, column: 1, scope: !5309)
!5346 = !{i64 2147572181, i64 2147572224, i64 2147572264}
!5347 = !DILocation(line: 29, column: 1, scope: !5309)
!5348 = !{i64 2147572380, i64 2147572423, i64 2147572463}
!5349 = !DILocation(line: 30, column: 1, scope: !5309)
!5350 = !{i64 2147572607, i64 2147572650, i64 2147572690}
!5351 = !DILocation(line: 31, column: 1, scope: !5309)
!5352 = !{i64 2147572809, i64 2147572852, i64 2147572892}
!5353 = !DILocation(line: 32, column: 1, scope: !5309)
!5354 = !{i64 2147573024, i64 2147573067, i64 2147573107}
!5355 = !DILocation(line: 33, column: 1, scope: !5309)
!5356 = !{i64 2147573241, i64 2147573284, i64 2147573324}
!5357 = !DILocation(line: 34, column: 1, scope: !5309)
!5358 = !{i64 2147573413, i64 2147573456, i64 2147573496}
!5359 = !DILocation(line: 35, column: 1, scope: !5309)
!5360 = !{i64 2147573615, i64 2147573658, i64 2147573698}
!5361 = !DILocation(line: 36, column: 1, scope: !5309)
!5362 = !{i64 2147573841, i64 2147573884, i64 2147573924}
!5363 = !DILocation(line: 37, column: 1, scope: !5309)
!5364 = !{i64 2147574040, i64 2147574083, i64 2147574123}
!5365 = !DILocation(line: 38, column: 1, scope: !5309)
!5366 = !{i64 2147574215, i64 2147574258, i64 2147574298}
!5367 = !DILocation(line: 39, column: 1, scope: !5309)
!5368 = !{i64 2147574468, i64 2147574511, i64 2147574551}
!5369 = !DILocation(line: 40, column: 1, scope: !5309)
!5370 = !{i64 2147574709, i64 2147574752, i64 2147574792}
!5371 = !DILocation(line: 41, column: 1, scope: !5309)
!5372 = !{i64 2147574944, i64 2147574987, i64 2147575027}
!5373 = !DILocation(line: 42, column: 1, scope: !5309)
!5374 = !{i64 2147575176, i64 2147575219, i64 2147575259}
!5375 = !DILocation(line: 43, column: 1, scope: !5309)
!5376 = !{i64 2147575402, i64 2147575445, i64 2147575485}
!5377 = !DILocation(line: 44, column: 1, scope: !5309)
!5378 = !{i64 2147575628, i64 2147575671, i64 2147575711}
!5379 = !DILocation(line: 45, column: 1, scope: !5309)
!5380 = !{i64 2147575854, i64 2147575897, i64 2147575937}
!5381 = !DILocation(line: 46, column: 1, scope: !5309)
!5382 = !{i64 2147576089, i64 2147576132, i64 2147576172}
!5383 = !DILocation(line: 47, column: 1, scope: !5309)
!5384 = !{i64 2147576327, i64 2147576370, i64 2147576410}
!5385 = !DILocation(line: 48, column: 1, scope: !5309)
!5386 = !{i64 2147576601, i64 2147576644, i64 2147576684}
!5387 = !DILocation(line: 49, column: 1, scope: !5309)
!5388 = !{i64 2147576839, i64 2147576882, i64 2147576922}
!5389 = !DILocation(line: 50, column: 1, scope: !5309)
!5390 = !{i64 2147577083, i64 2147577126, i64 2147577166}
!5391 = !DILocation(line: 51, column: 1, scope: !5309)
!5392 = !{i64 2147577333, i64 2147577376, i64 2147577416}
!5393 = !DILocation(line: 52, column: 1, scope: !5309)
!5394 = !{i64 2147577580, i64 2147577623, i64 2147577663}
!5395 = !DILocation(line: 53, column: 1, scope: !5309)
!5396 = !{i64 2147581876, i64 2147581919, i64 2147581959}
!5397 = !DILocation(line: 54, column: 1, scope: !5309)
!5398 = !{i64 2147582111, i64 2147582154, i64 2147582194}
!5399 = !DILocation(line: 55, column: 1, scope: !5309)
!5400 = !{i64 2147582346, i64 2147582389, i64 2147582429}
!5401 = !DILocation(line: 56, column: 1, scope: !5309)
!5402 = !{i64 2147582584, i64 2147582627, i64 2147582667}
!5403 = !DILocation(line: 57, column: 1, scope: !5309)
!5404 = !{i64 2147582825, i64 2147582868, i64 2147582908}
!5405 = !DILocation(line: 58, column: 1, scope: !5309)
!5406 = !{i64 2147583105, i64 2147583148, i64 2147583188}
!5407 = !DILocation(line: 59, column: 1, scope: !5309)
!5408 = !{i64 2147583364, i64 2147583407, i64 2147583447}
!5409 = !DILocation(line: 60, column: 1, scope: !5309)
!5410 = !{i64 2147583590, i64 2147583633, i64 2147583673}
!5411 = !DILocation(line: 61, column: 1, scope: !5309)
!5412 = !{i64 2147583828, i64 2147583871, i64 2147583911}
!5413 = !DILocation(line: 62, column: 1, scope: !5309)
!5414 = !{i64 2147584057, i64 2147584100, i64 2147584140}
!5415 = !DILocation(line: 63, column: 1, scope: !5309)
!5416 = !{i64 2147584265, i64 2147584308, i64 2147584348}
!5417 = !DILocation(line: 64, column: 1, scope: !5309)
!5418 = !{i64 2147584476, i64 2147584519, i64 2147584559}
!5419 = !DILocation(line: 65, column: 1, scope: !5309)
!5420 = !{i64 2147584711, i64 2147584754, i64 2147584794}
!5421 = !DILocation(line: 66, column: 1, scope: !5309)
!5422 = !{i64 2147584940, i64 2147584983, i64 2147585023}
!5423 = !DILocation(line: 67, column: 1, scope: !5309)
!5424 = !{i64 2147585157, i64 2147585200, i64 2147585240}
!5425 = !DILocation(line: 68, column: 1, scope: !5309)
!5426 = !{i64 2147585386, i64 2147585429, i64 2147585469}
!5427 = !DILocation(line: 69, column: 1, scope: !5309)
!5428 = !{i64 2147585624, i64 2147585667, i64 2147585707}
!5429 = !DILocation(line: 70, column: 1, scope: !5309)
!5430 = !{i64 2147585856, i64 2147585899, i64 2147585939}
!5431 = !DILocation(line: 71, column: 1, scope: !5309)
!5432 = !{i64 2147586082, i64 2147586125, i64 2147586165}
!5433 = !DILocation(line: 72, column: 1, scope: !5309)
!5434 = !{i64 2147586299, i64 2147586342, i64 2147586382}
!5435 = !DILocation(line: 73, column: 1, scope: !5309)
!5436 = !{i64 2147586531, i64 2147586574, i64 2147586614}
!5437 = !DILocation(line: 74, column: 1, scope: !5309)
!5438 = !{i64 2147586757, i64 2147586800, i64 2147586840}
!5439 = !DILocation(line: 75, column: 1, scope: !5309)
!5440 = !{i64 2147586971, i64 2147587014, i64 2147587054}
!5441 = !DILocation(line: 76, column: 1, scope: !5309)
!5442 = !{i64 2147587191, i64 2147587234, i64 2147587274}
!5443 = !DILocation(line: 77, column: 1, scope: !5309)
!5444 = !{i64 2147587423, i64 2147587466, i64 2147587506}
!5445 = !DILocation(line: 78, column: 1, scope: !5309)
!5446 = !{i64 2147587631, i64 2147587674, i64 2147587714}
!5447 = !DILocation(line: 79, column: 1, scope: !5309)
!5448 = !{i64 2147587836, i64 2147587879, i64 2147587919}
!5449 = !DILocation(line: 80, column: 1, scope: !5309)
!5450 = !{i64 2147588053, i64 2147588096, i64 2147588136}
!5451 = !DILocation(line: 81, column: 1, scope: !5309)
!5452 = !{i64 2147588267, i64 2147588310, i64 2147588350}
!5453 = !DILocation(line: 82, column: 1, scope: !5309)
!5454 = !{i64 2147588493, i64 2147588536, i64 2147588576}
!5455 = !DILocation(line: 83, column: 1, scope: !5309)
!5456 = !{i64 2147588713, i64 2147588756, i64 2147588796}
!5457 = !DILocation(line: 84, column: 1, scope: !5309)
!5458 = !{i64 2147588918, i64 2147588961, i64 2147589001}
!5459 = !DILocation(line: 85, column: 1, scope: !5309)
!5460 = !{i64 2147589150, i64 2147589193, i64 2147589233}
!5461 = !DILocation(line: 86, column: 1, scope: !5309)
!5462 = !{i64 2147589385, i64 2147589428, i64 2147589468}
!5463 = !DILocation(line: 87, column: 1, scope: !5309)
!5464 = !{i64 2147589635, i64 2147589678, i64 2147589718}
!5465 = !DILocation(line: 88, column: 1, scope: !5309)
!5466 = !{i64 2147589885, i64 2147589928, i64 2147589968}
!5467 = !DILocation(line: 89, column: 1, scope: !5309)
!5468 = !{i64 2147594184, i64 2147594227, i64 2147594267}
!5469 = !DILocation(line: 90, column: 1, scope: !5309)
!5470 = !{i64 2147594395, i64 2147594438, i64 2147594478}
!5471 = !DILocation(line: 91, column: 1, scope: !5309)
!5472 = !{i64 2147594612, i64 2147594655, i64 2147594695}
!5473 = !DILocation(line: 92, column: 1, scope: !5309)
!5474 = !{i64 2147594808, i64 2147594851, i64 2147594891}
!5475 = !DILocation(line: 93, column: 1, scope: !5309)
!5476 = !{i64 2147595010, i64 2147595053, i64 2147595093}
!5477 = !DILocation(line: 94, column: 1, scope: !5309)
!5478 = !{i64 2147595203, i64 2147595246, i64 2147595286}
!5479 = !DILocation(line: 95, column: 1, scope: !5309)
!5480 = !{i64 2147595411, i64 2147595454, i64 2147595494}
!5481 = !DILocation(line: 96, column: 1, scope: !5309)
!5482 = !{i64 2147595607, i64 2147595650, i64 2147595690}
!5483 = !DILocation(line: 97, column: 1, scope: !5309)
!5484 = !{i64 2147595812, i64 2147595855, i64 2147595895}
!5485 = !DILocation(line: 98, column: 1, scope: !5309)
!5486 = !{i64 2147596023, i64 2147596066, i64 2147596106}
!5487 = !DILocation(line: 99, column: 1, scope: !5309)
!5488 = !{i64 2147596222, i64 2147596265, i64 2147596305}
!5489 = !DILocation(line: 100, column: 1, scope: !5309)
!5490 = !{i64 2147596397, i64 2147596440, i64 2147596480}
!5491 = !DILocation(line: 101, column: 1, scope: !5309)
!5492 = !{i64 2147596581, i64 2147596624, i64 2147596664}
!5493 = !DILocation(line: 102, column: 1, scope: !5309)
!5494 = !{i64 2147596783, i64 2147596826, i64 2147596866}
!5495 = !DILocation(line: 103, column: 1, scope: !5309)
!5496 = !{i64 2147596982, i64 2147597025, i64 2147597065}
!5497 = !DILocation(line: 104, column: 1, scope: !5309)
!5498 = !{i64 2147597187, i64 2147597230, i64 2147597270}
!5499 = !DILocation(line: 105, column: 1, scope: !5309)
!5500 = !{i64 2147597380, i64 2147597423, i64 2147597463}
!5501 = !DILocation(line: 106, column: 1, scope: !5309)
!5502 = !{i64 2147597546, i64 2147597589, i64 2147597629}
!5503 = !DILocation(line: 107, column: 1, scope: !5309)
!5504 = !{i64 2147597730, i64 2147597773, i64 2147597813}
!5505 = !DILocation(line: 108, column: 1, scope: !5309)
!5506 = !{i64 2147597920, i64 2147597963, i64 2147598003}
!5507 = !DILocation(line: 109, column: 1, scope: !5309)
!5508 = !{i64 2147598104, i64 2147598147, i64 2147598187}
!5509 = !DILocation(line: 110, column: 1, scope: !5309)
!5510 = !{i64 2147598318, i64 2147598361, i64 2147598401}
!5511 = !DILocation(line: 111, column: 1, scope: !5309)
!5512 = !{i64 2147598529, i64 2147598572, i64 2147598612}
!5513 = !DILocation(line: 112, column: 1, scope: !5309)
!5514 = !{i64 2147598752, i64 2147598795, i64 2147598835}
!5515 = !DILocation(line: 113, column: 1, scope: !5309)
!5516 = !{i64 2147598936, i64 2147598979, i64 2147599019}
!5517 = !DILocation(line: 114, column: 1, scope: !5309)
!5518 = !{i64 2147599150, i64 2147599193, i64 2147599233}
!5519 = !DILocation(line: 115, column: 1, scope: !5309)
!5520 = !{i64 2147599316, i64 2147599359, i64 2147599399}
!5521 = !DILocation(line: 116, column: 1, scope: !5309)
!5522 = !{i64 2147599497, i64 2147599540, i64 2147599580}
!5523 = !DILocation(line: 117, column: 1, scope: !5309)
!5524 = !{i64 2147599690, i64 2147599733, i64 2147599773}
!5525 = !DILocation(line: 118, column: 1, scope: !5309)
!5526 = !{i64 2147599916, i64 2147599959, i64 2147599999}
!5527 = !DILocation(line: 119, column: 1, scope: !5309)
!5528 = !{i64 2147600130, i64 2147600173, i64 2147600213}
!5529 = !DILocation(line: 120, column: 1, scope: !5309)
!5530 = !{i64 2147600356, i64 2147600399, i64 2147600439}
!5531 = !DILocation(line: 121, column: 1, scope: !5309)
!5532 = !{i64 2147600573, i64 2147600616, i64 2147600656}
!5533 = !DILocation(line: 122, column: 1, scope: !5309)
!5534 = !{i64 2147600850, i64 2147600893, i64 2147600933}
!5535 = !DILocation(line: 123, column: 1, scope: !5309)
!5536 = !{i64 2147601076, i64 2147601119, i64 2147601159}
!5537 = !DILocation(line: 124, column: 1, scope: !5309)
!5538 = !{i64 2147601284, i64 2147601327, i64 2147601367}
!5539 = !DILocation(line: 125, column: 1, scope: !5309)
!5540 = !{i64 2147601480, i64 2147601523, i64 2147601563}
!5541 = !DILocation(line: 126, column: 1, scope: !5309)
!5542 = !{i64 2147601745, i64 2147601788, i64 2147601828}
!5543 = !DILocation(line: 127, column: 1, scope: !5309)
!5544 = !{i64 2147601959, i64 2147602002, i64 2147602042}
!5545 = !DILocation(line: 128, column: 1, scope: !5309)
!5546 = !{i64 2147602134, i64 2147602177, i64 2147602217}
!5547 = !DILocation(line: 129, column: 1, scope: !5309)
!5548 = !{i64 2147602388, i64 2147602431, i64 2147602471}
!5549 = !DILocation(line: 130, column: 1, scope: !5309)
!5550 = !{i64 2147602587, i64 2147602630, i64 2147602670}
!5551 = !DILocation(line: 131, column: 1, scope: !5309)
!5552 = !{i64 2147602829, i64 2147602872, i64 2147602912}
!5553 = !DILocation(line: 132, column: 1, scope: !5309)
!5554 = !{i64 2147602992, i64 2147603035, i64 2147603075}
!5555 = !DILocation(line: 133, column: 1, scope: !5309)
!5556 = !{i64 2147603179, i64 2147603222, i64 2147603262}
!5557 = !DILocation(line: 134, column: 1, scope: !5309)
!5558 = !{i64 2147607448, i64 2147607491, i64 2147607531}
!5559 = !DILocation(line: 135, column: 1, scope: !5309)
!5560 = !{i64 2147607644, i64 2147607687, i64 2147607727}
!5561 = !DILocation(line: 136, column: 1, scope: !5309)
!5562 = !{i64 2147607837, i64 2147607880, i64 2147607920}
!5563 = !DILocation(line: 137, column: 1, scope: !5309)
!5564 = !{i64 2147608020, i64 2147608063, i64 2147608103}
!5565 = !DILocation(line: 138, column: 1, scope: !5309)
!5566 = !{i64 2147608234, i64 2147608277, i64 2147608317}
!5567 = !DILocation(line: 139, column: 1, scope: !5309)
!5568 = !{i64 2147608445, i64 2147608488, i64 2147608528}
!5569 = !DILocation(line: 140, column: 1, scope: !5309)
!5570 = !{i64 2147608665, i64 2147608708, i64 2147608748}
!5571 = !DILocation(line: 141, column: 1, scope: !5309)
!5572 = !{i64 2147608872, i64 2147608915, i64 2147608955}
!5573 = !DILocation(line: 142, column: 1, scope: !5309)
!5574 = !{i64 2147609145, i64 2147609188, i64 2147609228}
!5575 = !DILocation(line: 143, column: 1, scope: !5309)
!5576 = !{i64 2147609393, i64 2147609436, i64 2147609476}
!5577 = !DILocation(line: 144, column: 1, scope: !5309)
!5578 = !{i64 2147609592, i64 2147609635, i64 2147609675}
!5579 = !DILocation(line: 145, column: 1, scope: !5309)
!5580 = !{i64 2147609827, i64 2147609870, i64 2147609910}
!5581 = !DILocation(line: 146, column: 1, scope: !5309)
!5582 = !{i64 2147610077, i64 2147610120, i64 2147610160}
!5583 = !DILocation(line: 147, column: 1, scope: !5309)
!5584 = !{i64 2147610279, i64 2147610322, i64 2147610362}
!5585 = !DILocation(line: 148, column: 1, scope: !5309)
!5586 = !{i64 2147610502, i64 2147610545, i64 2147610585}
!5587 = !DILocation(line: 149, column: 1, scope: !5309)
!5588 = !{i64 2147610716, i64 2147610759, i64 2147610799}
!5589 = !DILocation(line: 150, column: 1, scope: !5309)
!5590 = !{i64 2147610960, i64 2147611003, i64 2147611043}
!5591 = !DILocation(line: 151, column: 1, scope: !5309)
!5592 = !{i64 2147611189, i64 2147611232, i64 2147611272}
!5593 = !DILocation(line: 152, column: 1, scope: !5309)
!5594 = !{i64 2147611418, i64 2147611461, i64 2147611501}
!5595 = !DILocation(line: 153, column: 1, scope: !5309)
!5596 = !{i64 2147611626, i64 2147611669, i64 2147611709}
!5597 = !DILocation(line: 154, column: 1, scope: !5309)
!5598 = !{i64 2147611864, i64 2147611907, i64 2147611947}
!5599 = !DILocation(line: 155, column: 1, scope: !5309)
!5600 = !{i64 2147612090, i64 2147612133, i64 2147612173}
!5601 = !DILocation(line: 156, column: 1, scope: !5309)
!5602 = !{i64 2147612349, i64 2147612392, i64 2147612432}
!5603 = !DILocation(line: 157, column: 1, scope: !5309)
!5604 = !{i64 2147612569, i64 2147612612, i64 2147612652}
!5605 = !DILocation(line: 158, column: 1, scope: !5309)
!5606 = !{i64 2147612801, i64 2147612844, i64 2147612884}
!5607 = !DILocation(line: 159, column: 1, scope: !5309)
!5608 = !{i64 2147613042, i64 2147613085, i64 2147613125}
!5609 = !DILocation(line: 160, column: 1, scope: !5309)
!5610 = !{i64 2147613283, i64 2147613326, i64 2147613366}
!5611 = !DILocation(line: 161, column: 1, scope: !5309)
!5612 = !{i64 2147613506, i64 2147613549, i64 2147613589}
!5613 = !DILocation(line: 162, column: 1, scope: !5309)
!5614 = !{i64 2147613723, i64 2147613766, i64 2147613806}
!5615 = !DILocation(line: 163, column: 1, scope: !5309)
!5616 = !{i64 2147613964, i64 2147614007, i64 2147614047}
!5617 = !DILocation(line: 164, column: 1, scope: !5309)
!5618 = !{i64 2147614151, i64 2147614194, i64 2147614234}
!5619 = !DILocation(line: 165, column: 1, scope: !5309)
!5620 = !{i64 2147614338, i64 2147614381, i64 2147614421}
!5621 = !DILocation(line: 166, column: 1, scope: !5309)
!5622 = !{i64 2147614501, i64 2147614544, i64 2147614584}
!5623 = !DILocation(line: 167, column: 1, scope: !5309)
!5624 = !{i64 2147614706, i64 2147614749, i64 2147614789}
!5625 = !DILocation(line: 168, column: 1, scope: !5309)
!5626 = !{i64 2147614899, i64 2147614942, i64 2147614982}
!5627 = !DILocation(line: 169, column: 1, scope: !5309)
!5628 = !{i64 2147615158, i64 2147615201, i64 2147615241}
!5629 = !DILocation(line: 170, column: 1, scope: !5309)
!5630 = !{i64 2147615381, i64 2147615424, i64 2147615464}
!5631 = !DILocation(line: 171, column: 1, scope: !5309)
!5632 = !{i64 2147615610, i64 2147615653, i64 2147615693}
!5633 = !DILocation(line: 172, column: 1, scope: !5309)
!5634 = !{i64 2147615824, i64 2147615867, i64 2147615907}
!5635 = !DILocation(line: 173, column: 1, scope: !5309)
!5636 = !{i64 2147620087, i64 2147620130, i64 2147620170}
!5637 = !DILocation(line: 174, column: 1, scope: !5309)
!5638 = !{i64 2147620283, i64 2147620326, i64 2147620366}
!5639 = !DILocation(line: 175, column: 1, scope: !5309)
!5640 = !{i64 2147620495, i64 2147620538, i64 2147620578}
!5641 = !DILocation(line: 176, column: 1, scope: !5309)
!5642 = !{i64 2147620716, i64 2147620759, i64 2147620799}
!5643 = !DILocation(line: 177, column: 1, scope: !5309)
!5644 = !{i64 2147620931, i64 2147620974, i64 2147621014}
!5645 = !DILocation(line: 178, column: 1, scope: !5309)
!5646 = !{i64 2147621121, i64 2147621164, i64 2147621204}
!5647 = !DILocation(line: 179, column: 1, scope: !5309)
!5648 = !{i64 2147621320, i64 2147621363, i64 2147621403}
!5649 = !DILocation(line: 180, column: 1, scope: !5309)
!5650 = !{i64 2147621525, i64 2147621568, i64 2147621608}
!5651 = !DILocation(line: 181, column: 1, scope: !5309)
!5652 = !{i64 2147621745, i64 2147621788, i64 2147621828}
!5653 = !DILocation(line: 182, column: 1, scope: !5309)
!5654 = !{i64 2147621946, i64 2147621989, i64 2147622029}
!5655 = !DILocation(line: 183, column: 1, scope: !5309)
!5656 = !{i64 2147622145, i64 2147622188, i64 2147622228}
!5657 = !DILocation(line: 184, column: 1, scope: !5309)
!5658 = !{i64 2147622350, i64 2147622393, i64 2147622433}
!5659 = !DILocation(line: 185, column: 1, scope: !5309)
!5660 = !{i64 2147622519, i64 2147622562, i64 2147622602}
!5661 = !DILocation(line: 186, column: 1, scope: !5309)
!5662 = !{i64 2147622703, i64 2147622746, i64 2147622786}
!5663 = !DILocation(line: 187, column: 1, scope: !5309)
!5664 = !{i64 2147622887, i64 2147622930, i64 2147622970}
!5665 = !DILocation(line: 188, column: 1, scope: !5309)
!5666 = !{i64 2147623074, i64 2147623117, i64 2147623157}
!5667 = !DILocation(line: 189, column: 1, scope: !5309)
!5668 = !{i64 2147623258, i64 2147623301, i64 2147623341}
!5669 = !DILocation(line: 190, column: 1, scope: !5309)
!5670 = !{i64 2147623445, i64 2147623488, i64 2147623528}
!5671 = !DILocation(line: 191, column: 1, scope: !5309)
!5672 = !{i64 2147623657, i64 2147623700, i64 2147623740}
!5673 = !DILocation(line: 192, column: 1, scope: !5309)
!5674 = !{i64 2147623895, i64 2147623938, i64 2147623978}
!5675 = !DILocation(line: 193, column: 1, scope: !5309)
!5676 = !{i64 2147624125, i64 2147624168, i64 2147624208}
!5677 = !DILocation(line: 194, column: 1, scope: !5309)
!5678 = !{i64 2147624354, i64 2147624397, i64 2147624437}
!5679 = !DILocation(line: 195, column: 1, scope: !5309)
!5680 = !{i64 2147624541, i64 2147624584, i64 2147624624}
!5681 = !DILocation(line: 196, column: 1, scope: !5309)
!5682 = !{i64 2147624737, i64 2147624780, i64 2147624820}
!5683 = !DILocation(line: 197, column: 1, scope: !5309)
!5684 = !{i64 2147624945, i64 2147624988, i64 2147625028}
!5685 = !DILocation(line: 198, column: 1, scope: !5309)
!5686 = !{i64 2147625157, i64 2147625200, i64 2147625240}
!5687 = !DILocation(line: 199, column: 1, scope: !5309)
!5688 = !{i64 2147625356, i64 2147625399, i64 2147625439}
!5689 = !DILocation(line: 200, column: 1, scope: !5309)
!5690 = !{i64 2147625594, i64 2147625637, i64 2147625677}
!5691 = !DILocation(line: 201, column: 1, scope: !5309)
!5692 = !{i64 2147625790, i64 2147625833, i64 2147625873}
!5693 = !DILocation(line: 202, column: 1, scope: !5309)
!5694 = !{i64 2147625992, i64 2147626035, i64 2147626075}
!5695 = !DILocation(line: 203, column: 1, scope: !5309)
!5696 = !{i64 2147626185, i64 2147626228, i64 2147626268}
!5697 = !DILocation(line: 204, column: 1, scope: !5309)
!5698 = !{i64 2147626419, i64 2147626462, i64 2147626502}
!5699 = !DILocation(line: 205, column: 1, scope: !5309)
!5700 = !{i64 2147626582, i64 2147626625, i64 2147626665}
!5701 = !DILocation(line: 206, column: 1, scope: !5309)
!5702 = !{i64 2147626821, i64 2147626864, i64 2147626904}
!5703 = !DILocation(line: 207, column: 1, scope: !5309)
!5704 = !{i64 2147627060, i64 2147627103, i64 2147627143}
!5705 = !DILocation(line: 208, column: 1, scope: !5309)
!5706 = !{i64 2147627296, i64 2147627339, i64 2147627379}
!5707 = !DILocation(line: 209, column: 1, scope: !5309)
!5708 = !{i64 2147627526, i64 2147627569, i64 2147627609}
!5709 = !DILocation(line: 210, column: 1, scope: !5309)
!5710 = !{i64 2147627713, i64 2147627756, i64 2147627796}
!5711 = !DILocation(line: 211, column: 1, scope: !5309)
!5712 = !{i64 2147627912, i64 2147627955, i64 2147627995}
!5713 = !DILocation(line: 212, column: 1, scope: !5309)
!5714 = !{i64 2147628183, i64 2147628226, i64 2147628266}
!5715 = !DILocation(line: 213, column: 1, scope: !5309)
!5716 = !{i64 2147628358, i64 2147628401, i64 2147628441}
!5717 = !DILocation(line: 214, column: 1, scope: !5309)
!5718 = !{i64 2147628592, i64 2147628635, i64 2147628675}
!5719 = !DILocation(line: 215, column: 1, scope: !5309)
!5720 = !{i64 2147628800, i64 2147628843, i64 2147628883}
!5721 = !DILocation(line: 216, column: 1, scope: !5309)
!5722 = !{i64 2147629018, i64 2147629061, i64 2147629101}
!5723 = !DILocation(line: 217, column: 1, scope: !5309)
!5724 = !{i64 2147629208, i64 2147629251, i64 2147629291}
!5725 = !DILocation(line: 218, column: 1, scope: !5309)
!5726 = !{i64 2147633501, i64 2147633544, i64 2147633584}
!5727 = !DILocation(line: 219, column: 1, scope: !5309)
!5728 = !{i64 2147633721, i64 2147633764, i64 2147633804}
!5729 = !DILocation(line: 220, column: 1, scope: !5309)
!5730 = !{i64 2147633917, i64 2147633960, i64 2147634000}
!5731 = !DILocation(line: 221, column: 1, scope: !5309)
!5732 = !{i64 2147634123, i64 2147634166, i64 2147634206}
!5733 = !DILocation(line: 222, column: 1, scope: !5309)
!5734 = !{i64 2147634328, i64 2147634371, i64 2147634411}
!5735 = !DILocation(line: 223, column: 1, scope: !5309)
!5736 = !{i64 2147634554, i64 2147634597, i64 2147634637}
!5737 = !DILocation(line: 224, column: 1, scope: !5309)
!5738 = !{i64 2147634762, i64 2147634805, i64 2147634845}
!5739 = !DILocation(line: 225, column: 1, scope: !5309)
!5740 = !{i64 2147634958, i64 2147635001, i64 2147635041}
!5741 = !DILocation(line: 226, column: 1, scope: !5309)
!5742 = !{i64 2147635190, i64 2147635233, i64 2147635273}
!5743 = !DILocation(line: 227, column: 1, scope: !5309)
!5744 = !{i64 2147635374, i64 2147635417, i64 2147635457}
!5745 = !DILocation(line: 228, column: 1, scope: !5309)
!5746 = !{i64 2147635583, i64 2147635626, i64 2147635666}
!5747 = !DILocation(line: 229, column: 1, scope: !5309)
!5748 = !{i64 2147635791, i64 2147635834, i64 2147635874}
!5749 = !DILocation(line: 230, column: 1, scope: !5309)
!5750 = !{i64 2147635987, i64 2147636030, i64 2147636070}
!5751 = !DILocation(line: 231, column: 1, scope: !5309)
!5752 = !{i64 2147636171, i64 2147636214, i64 2147636254}
!5753 = !DILocation(line: 232, column: 1, scope: !5309)
!5754 = !{i64 2147636397, i64 2147636440, i64 2147636480}
!5755 = !DILocation(line: 233, column: 1, scope: !5309)
!5756 = !{i64 2147636623, i64 2147636666, i64 2147636706}
!5757 = !DILocation(line: 234, column: 1, scope: !5309)
!5758 = !{i64 2147636849, i64 2147636892, i64 2147636932}
!5759 = !DILocation(line: 235, column: 1, scope: !5309)
!5760 = !{i64 2147637075, i64 2147637118, i64 2147637158}
!5761 = !DILocation(line: 236, column: 1, scope: !5309)
!5762 = !{i64 2147637301, i64 2147637344, i64 2147637384}
!5763 = !DILocation(line: 237, column: 1, scope: !5309)
!5764 = !{i64 2147637533, i64 2147637576, i64 2147637616}
!5765 = !DILocation(line: 238, column: 1, scope: !5309)
!5766 = !{i64 2147637771, i64 2147637814, i64 2147637854}
!5767 = !DILocation(line: 239, column: 1, scope: !5309)
!5768 = !{i64 2147637991, i64 2147638034, i64 2147638074}
!5769 = !DILocation(line: 240, column: 1, scope: !5309)
!5770 = !{i64 2147638235, i64 2147638278, i64 2147638318}
!5771 = !DILocation(line: 241, column: 1, scope: !5309)
!5772 = !{i64 2147638476, i64 2147638519, i64 2147638559}
!5773 = !DILocation(line: 242, column: 1, scope: !5309)
!5774 = !{i64 2147638711, i64 2147638754, i64 2147638794}
!5775 = !DILocation(line: 243, column: 1, scope: !5309)
!5776 = !{i64 2147638943, i64 2147638986, i64 2147639026}
!5777 = !DILocation(line: 244, column: 1, scope: !5309)
!5778 = !{i64 2147639145, i64 2147639188, i64 2147639228}
!5779 = !DILocation(line: 245, column: 1, scope: !5309)
!5780 = !{i64 2147639395, i64 2147639438, i64 2147639478}
!5781 = !DILocation(line: 246, column: 1, scope: !5309)
!5782 = !{i64 2147639633, i64 2147639676, i64 2147639716}
!5783 = !DILocation(line: 247, column: 1, scope: !5309)
!5784 = !{i64 2147639841, i64 2147639884, i64 2147639924}
!5785 = !DILocation(line: 248, column: 1, scope: !5309)
!5786 = !{i64 2147640037, i64 2147640080, i64 2147640120}
!5787 = !DILocation(line: 249, column: 1, scope: !5309)
!5788 = !{i64 2147640221, i64 2147640264, i64 2147640304}
!5789 = !DILocation(line: 250, column: 1, scope: !5309)
!5790 = !{i64 2147640438, i64 2147640481, i64 2147640521}
!5791 = !DILocation(line: 251, column: 1, scope: !5309)
!5792 = !{i64 2147640643, i64 2147640686, i64 2147640726}
!5793 = !DILocation(line: 252, column: 1, scope: !5309)
!5794 = !{i64 2147640878, i64 2147640921, i64 2147640961}
!5795 = !DILocation(line: 253, column: 1, scope: !5309)
!5796 = !{i64 2147641101, i64 2147641144, i64 2147641184}
!5797 = !DILocation(line: 254, column: 1, scope: !5309)
!5798 = !{i64 2147641324, i64 2147641367, i64 2147641407}
!5799 = !DILocation(line: 255, column: 1, scope: !5309)
!5800 = !{i64 2147641562, i64 2147641605, i64 2147641645}
!5801 = !DILocation(line: 256, column: 1, scope: !5309)
!5802 = !{i64 2147641800, i64 2147641843, i64 2147641883}
!5803 = !DILocation(line: 257, column: 1, scope: !5309)
!5804 = !{i64 2147646078, i64 2147646121, i64 2147646161}
!5805 = !DILocation(line: 258, column: 1, scope: !5309)
!5806 = !{i64 2147646283, i64 2147646326, i64 2147646366}
!5807 = !DILocation(line: 259, column: 1, scope: !5309)
!5808 = !{i64 2147646476, i64 2147646519, i64 2147646559}
!5809 = !DILocation(line: 260, column: 1, scope: !5309)
!5810 = !{i64 2147646729, i64 2147646772, i64 2147646812}
!5811 = !DILocation(line: 261, column: 1, scope: !5309)
!5812 = !{i64 2147646937, i64 2147646980, i64 2147647020}
!5813 = !DILocation(line: 262, column: 1, scope: !5309)
!5814 = !{i64 2147647133, i64 2147647176, i64 2147647216}
!5815 = !DILocation(line: 263, column: 1, scope: !5309)
!5816 = !{i64 2147647347, i64 2147647390, i64 2147647430}
!5817 = !DILocation(line: 264, column: 1, scope: !5309)
!5818 = !{i64 2147647555, i64 2147647598, i64 2147647638}
!5819 = !DILocation(line: 265, column: 1, scope: !5309)
!5820 = !{i64 2147647745, i64 2147647788, i64 2147647828}
!5821 = !DILocation(line: 266, column: 1, scope: !5309)
!5822 = !{i64 2147647959, i64 2147648002, i64 2147648042}
!5823 = !DILocation(line: 267, column: 1, scope: !5309)
!5824 = !{i64 2147648221, i64 2147648264, i64 2147648304}
!5825 = !DILocation(line: 268, column: 1, scope: !5309)
!5826 = !{i64 2147648432, i64 2147648475, i64 2147648515}
!5827 = !DILocation(line: 269, column: 1, scope: !5309)
!5828 = !{i64 2147648676, i64 2147648719, i64 2147648759}
!5829 = !DILocation(line: 270, column: 1, scope: !5309)
!5830 = !{i64 2147648887, i64 2147648930, i64 2147648970}
!5831 = !DILocation(line: 271, column: 1, scope: !5309)
!5832 = !{i64 2147649116, i64 2147649159, i64 2147649199}
!5833 = !DILocation(line: 272, column: 1, scope: !5309)
!5834 = !{i64 2147649381, i64 2147649424, i64 2147649464}
!5835 = !DILocation(line: 273, column: 1, scope: !5309)
!5836 = !{i64 2147649586, i64 2147649629, i64 2147649669}
!5837 = !DILocation(line: 274, column: 1, scope: !5309)
!5838 = !{i64 2147649782, i64 2147649825, i64 2147649865}
!5839 = !DILocation(line: 275, column: 1, scope: !5309)
!5840 = !{i64 2147650005, i64 2147650048, i64 2147650088}
!5841 = !DILocation(line: 276, column: 1, scope: !5309)
!5842 = !{i64 2147650168, i64 2147650211, i64 2147650251}
!5843 = !DILocation(line: 277, column: 1, scope: !5309)
!5844 = !{i64 2147650373, i64 2147650416, i64 2147650456}
!5845 = !DILocation(line: 278, column: 1, scope: !5309)
!5846 = !{i64 2147650593, i64 2147650636, i64 2147650676}
!5847 = !DILocation(line: 279, column: 1, scope: !5309)
!5848 = !{i64 2147650807, i64 2147650850, i64 2147650890}
!5849 = !DILocation(line: 280, column: 1, scope: !5309)
!5850 = !{i64 2147651051, i64 2147651094, i64 2147651134}
!5851 = !DILocation(line: 281, column: 1, scope: !5309)
!5852 = !{i64 2147651283, i64 2147651326, i64 2147651366}
!5853 = !DILocation(line: 282, column: 1, scope: !5309)
!5854 = !{i64 2147651497, i64 2147651540, i64 2147651580}
!5855 = !DILocation(line: 283, column: 1, scope: !5309)
!5856 = !{i64 2147651708, i64 2147651751, i64 2147651791}
!5857 = !DILocation(line: 284, column: 1, scope: !5309)
!5858 = !{i64 2147651901, i64 2147651944, i64 2147651984}
!5859 = !DILocation(line: 285, column: 1, scope: !5309)
!5860 = !{i64 2147652100, i64 2147652143, i64 2147652183}
!5861 = !DILocation(line: 286, column: 1, scope: !5309)
!5862 = !{i64 2147652272, i64 2147652315, i64 2147652355}
!5863 = !DILocation(line: 287, column: 1, scope: !5309)
!5864 = !{i64 2147652465, i64 2147652508, i64 2147652548}
!5865 = !DILocation(line: 288, column: 1, scope: !5309)
!5866 = !{i64 2147652637, i64 2147652680, i64 2147652720}
!5867 = !DILocation(line: 289, column: 1, scope: !5309)
!5868 = !{i64 2147652827, i64 2147652870, i64 2147652910}
!5869 = !DILocation(line: 290, column: 1, scope: !5309)
!5870 = !{i64 2147653020, i64 2147653063, i64 2147653103}
!5871 = !DILocation(line: 291, column: 1, scope: !5309)
!5872 = !{i64 2147653216, i64 2147653259, i64 2147653299}
!5873 = !DILocation(line: 292, column: 1, scope: !5309)
!5874 = !{i64 2147653379, i64 2147653422, i64 2147653462}
!5875 = !DILocation(line: 293, column: 1, scope: !5309)
!5876 = !{i64 2147653581, i64 2147653624, i64 2147653664}
!5877 = !DILocation(line: 294, column: 1, scope: !5309)
!5878 = !{i64 2147653792, i64 2147653835, i64 2147653875}
!5879 = !DILocation(line: 295, column: 1, scope: !5309)
!5880 = !{i64 2147653997, i64 2147654040, i64 2147654080}
!5881 = !DILocation(line: 296, column: 1, scope: !5309)
!5882 = !{i64 2147654205, i64 2147654248, i64 2147654288}
!5883 = !DILocation(line: 297, column: 1, scope: !5309)
!5884 = !{i64 2147654398, i64 2147654441, i64 2147654481}
!5885 = !DILocation(line: 298, column: 1, scope: !5309)
!5886 = !{i64 2147654585, i64 2147654628, i64 2147654668}
!5887 = !DILocation(line: 299, column: 1, scope: !5309)
!5888 = !{i64 2147654751, i64 2147654794, i64 2147654834}
!5889 = !DILocation(line: 300, column: 1, scope: !5309)
!5890 = !{i64 2147654978, i64 2147655021, i64 2147655061}
!5891 = !DILocation(line: 301, column: 1, scope: !5309)
!5892 = !{i64 2147659256, i64 2147659299, i64 2147659339}
!5893 = !DILocation(line: 302, column: 1, scope: !5309)
!5894 = !{i64 2147659482, i64 2147659525, i64 2147659565}
!5895 = !DILocation(line: 303, column: 1, scope: !5309)
!5896 = !{i64 2147659687, i64 2147659730, i64 2147659770}
!5897 = !DILocation(line: 304, column: 1, scope: !5309)
!5898 = !{i64 2147659904, i64 2147659947, i64 2147659987}
!5899 = !DILocation(line: 305, column: 1, scope: !5309)
!5900 = !{i64 2147660196, i64 2147660239, i64 2147660279}
!5901 = !DILocation(line: 306, column: 1, scope: !5309)
!5902 = !{i64 2147660428, i64 2147660471, i64 2147660511}
!5903 = !DILocation(line: 307, column: 1, scope: !5309)
!5904 = !{i64 2147660645, i64 2147660688, i64 2147660728}
!5905 = !DILocation(line: 308, column: 1, scope: !5309)
!5906 = !{i64 2147660852, i64 2147660895, i64 2147660935}
!5907 = !DILocation(line: 309, column: 1, scope: !5309)
!5908 = !{i64 2147661053, i64 2147661096, i64 2147661136}
!5909 = !DILocation(line: 310, column: 1, scope: !5309)
!5910 = !{i64 2147661285, i64 2147661328, i64 2147661368}
!5911 = !DILocation(line: 311, column: 1, scope: !5309)
!5912 = !{i64 2147661493, i64 2147661536, i64 2147661576}
!5913 = !DILocation(line: 312, column: 1, scope: !5309)
!5914 = !{i64 2147661683, i64 2147661726, i64 2147661766}
!5915 = !DILocation(line: 313, column: 1, scope: !5309)
!5916 = !{i64 2147661909, i64 2147661952, i64 2147661992}
!5917 = !DILocation(line: 314, column: 1, scope: !5309)
!5918 = !{i64 2147662098, i64 2147662141, i64 2147662181}
!5919 = !DILocation(line: 315, column: 1, scope: !5309)
!5920 = !{i64 2147662369, i64 2147662412, i64 2147662452}
!5921 = !DILocation(line: 316, column: 1, scope: !5309)
!5922 = !{i64 2147662589, i64 2147662632, i64 2147662672}
!5923 = !DILocation(line: 317, column: 1, scope: !5309)
!5924 = !{i64 2147662842, i64 2147662885, i64 2147662925}
!5925 = !DILocation(line: 318, column: 1, scope: !5309)
!5926 = !{i64 2147663050, i64 2147663093, i64 2147663133}
!5927 = !DILocation(line: 319, column: 1, scope: !5309)
!5928 = !{i64 2147663282, i64 2147663325, i64 2147663365}
!5929 = !DILocation(line: 320, column: 1, scope: !5309)
!5930 = !{i64 2147663493, i64 2147663536, i64 2147663576}
!5931 = !DILocation(line: 321, column: 1, scope: !5309)
!5932 = !{i64 2147663683, i64 2147663726, i64 2147663766}
!5933 = !DILocation(line: 322, column: 1, scope: !5309)
!5934 = !{i64 2147663897, i64 2147663940, i64 2147663980}
!5935 = !DILocation(line: 323, column: 1, scope: !5309)
!5936 = !{i64 2147664096, i64 2147664139, i64 2147664179}
!5937 = !DILocation(line: 324, column: 1, scope: !5309)
!5938 = !{i64 2147664283, i64 2147664326, i64 2147664366}
!5939 = !DILocation(line: 325, column: 1, scope: !5309)
!5940 = !{i64 2147664491, i64 2147664534, i64 2147664574}
!5941 = !DILocation(line: 326, column: 1, scope: !5309)
!5942 = !{i64 2147664720, i64 2147664763, i64 2147664803}
!5943 = !DILocation(line: 327, column: 1, scope: !5309)
!5944 = !{i64 2147664922, i64 2147664965, i64 2147665005}
!5945 = !DILocation(line: 328, column: 1, scope: !5309)
!5946 = !{i64 2147665121, i64 2147665164, i64 2147665204}
!5947 = !DILocation(line: 329, column: 1, scope: !5309)
!5948 = !{i64 2147665338, i64 2147665381, i64 2147665421}
!5949 = !DILocation(line: 331, column: 1, scope: !5309)
!5950 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !322, file: !322, line: 30, type: !329, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !5951)
!5951 = !{!5952, !5953}
!5952 = !DILocalVariable(name: "arg", arg: 1, scope: !5950, file: !322, line: 30, type: !331)
!5953 = !DILocalVariable(name: "key", scope: !5950, file: !322, line: 32, type: !118)
!5954 = !DILocation(line: 0, scope: !5950)
!5955 = !DILocation(line: 37, column: 2, scope: !5950)
!5956 = !DILocation(line: 38, column: 2, scope: !5950)
!5957 = !DILocation(line: 55, column: 2, scope: !5958, inlinedAt: !5965)
!5958 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5959, file: !5959, line: 42, type: !5960, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !5962)
!5959 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!32}
!5962 = !{!5963, !5964}
!5963 = !DILocalVariable(name: "key", scope: !5958, file: !5959, line: 44, type: !32)
!5964 = !DILocalVariable(name: "tmp", scope: !5958, file: !5959, line: 53, type: !32)
!5965 = distinct !DILocation(line: 40, column: 8, scope: !5950)
!5966 = !{i64 1835417}
!5967 = !DILocation(line: 0, scope: !5958, inlinedAt: !5965)
!5968 = !DILocalVariable(name: "key", arg: 1, scope: !5969, file: !5959, line: 84, type: !32)
!5969 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5959, file: !5959, line: 84, type: !5970, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !5972)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{null, !32}
!5972 = !{!5968}
!5973 = !DILocation(line: 0, scope: !5969, inlinedAt: !5974)
!5974 = distinct !DILocation(line: 47, column: 2, scope: !5950)
!5975 = !DILocation(line: 95, column: 2, scope: !5969, inlinedAt: !5974)
!5976 = !{i64 1836234}
!5977 = !DILocation(line: 51, column: 18, scope: !5950)
!5978 = !DILocation(line: 53, column: 2, scope: !5950)
!5979 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5980, file: !5980, line: 1609, type: !2936, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2000)
!5980 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5981 = !DILocation(line: 1611, column: 3, scope: !5979)
!5982 = !DILocation(line: 1612, column: 1, scope: !5979)
!5983 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5980, file: !5980, line: 1629, type: !2936, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2000)
!5984 = !DILocation(line: 1631, column: 3, scope: !5983)
!5985 = !DILocation(line: 1632, column: 1, scope: !5983)
!5986 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !359, file: !359, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5987)
!5987 = !{!5988}
!5988 = !DILocalVariable(name: "dev", arg: 1, scope: !5986, file: !359, line: 26, type: !367)
!5989 = !DILocation(line: 0, scope: !5986)
!5990 = !DILocation(line: 68, column: 2, scope: !5986)
!5991 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5992, file: !5992, line: 14, type: !4263, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2390, retainedNodes: !5993)
!5992 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5993 = !{!5994, !5995}
!5994 = !DILocalVariable(name: "fmt", arg: 1, scope: !5991, file: !5992, line: 14, type: !278)
!5995 = !DILocalVariable(name: "ap", scope: !5991, file: !5992, line: 16, type: !5996)
!5996 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3269, line: 99, baseType: !5997)
!5997 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3269, line: 40, baseType: !5998)
!5998 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5992, baseType: !5999)
!5999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6000)
!6000 = !{!6001}
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5999, file: !5992, line: 16, baseType: !113, size: 32)
!6002 = !DILocation(line: 0, scope: !5991)
!6003 = !DILocation(line: 16, column: 2, scope: !5991)
!6004 = !DILocation(line: 16, column: 10, scope: !5991)
!6005 = !DILocation(line: 18, column: 2, scope: !5991)
!6006 = !DILocation(line: 19, column: 2, scope: !5991)
!6007 = !DILocation(line: 20, column: 2, scope: !5991)
!6008 = !DILocation(line: 21, column: 1, scope: !5991)
!6009 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5992, file: !5992, line: 23, type: !6010, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2390, retainedNodes: !6012)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{null, !278, !5996}
!6012 = !{!6013, !6014}
!6013 = !DILocalVariable(name: "fmt", arg: 1, scope: !6009, file: !5992, line: 23, type: !278)
!6014 = !DILocalVariable(name: "ap", arg: 2, scope: !6009, file: !5992, line: 23, type: !5996)
!6015 = !DILocation(line: 0, scope: !6009)
!6016 = !DILocation(line: 25, column: 2, scope: !6009)
!6017 = !DILocation(line: 26, column: 1, scope: !6009)
!6018 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5992, file: !5992, line: 52, type: !6019, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2390, retainedNodes: !6021)
!6019 = !DISubroutineType(types: !6020)
!6020 = !{null, !119, !13, !239}
!6021 = !{!6022, !6023, !6024, !6025}
!6022 = !DILocalVariable(name: "level", arg: 1, scope: !6018, file: !5992, line: 52, type: !119)
!6023 = !DILocalVariable(name: "data", arg: 2, scope: !6018, file: !5992, line: 52, type: !13)
!6024 = !DILocalVariable(name: "size", arg: 3, scope: !6018, file: !5992, line: 52, type: !239)
!6025 = !DILocalVariable(name: "data_buffer", scope: !6018, file: !5992, line: 54, type: !278)
!6026 = !DILocation(line: 0, scope: !6018)
!6027 = !DILocation(line: 55, column: 14, scope: !6018)
!6028 = !DILocation(line: 55, column: 2, scope: !6018)
!6029 = !DILocation(line: 56, column: 3, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6018, file: !5992, line: 55, column: 20)
!6031 = !DILocation(line: 57, column: 3, scope: !6030)
!6032 = !DILocation(line: 59, column: 7, scope: !6030)
!6033 = distinct !{!6033, !6028, !6034}
!6034 = !DILocation(line: 65, column: 2, scope: !6018)
!6035 = !DILocation(line: 66, column: 1, scope: !6018)
!6036 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6037, file: !6037, line: 175, type: !6038, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2390, retainedNodes: !6040)
!6037 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6038 = !DISubroutineType(types: !6039)
!6039 = !{!107, !119}
!6040 = !{!6041}
!6041 = !DILocalVariable(name: "level", arg: 1, scope: !6036, file: !6037, line: 175, type: !119)
!6042 = !DILocation(line: 0, scope: !6036)
!6043 = !DILocation(line: 177, column: 2, scope: !6036)
!6044 = !DILocation(line: 189, column: 1, scope: !6036)
!6045 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5992, file: !5992, line: 28, type: !6046, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2390, retainedNodes: !6048)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{null, !278, !239}
!6048 = !{!6049, !6050, !6051, !6053, !6055}
!6049 = !DILocalVariable(name: "data", arg: 1, scope: !6045, file: !5992, line: 28, type: !278)
!6050 = !DILocalVariable(name: "length", arg: 2, scope: !6045, file: !5992, line: 28, type: !239)
!6051 = !DILocalVariable(name: "i", scope: !6052, file: !5992, line: 30, type: !239)
!6052 = distinct !DILexicalBlock(scope: !6045, file: !5992, line: 30, column: 2)
!6053 = !DILocalVariable(name: "i", scope: !6054, file: !5992, line: 40, type: !239)
!6054 = distinct !DILexicalBlock(scope: !6045, file: !5992, line: 40, column: 2)
!6055 = !DILocalVariable(name: "c", scope: !6056, file: !5992, line: 42, type: !186)
!6056 = distinct !DILexicalBlock(scope: !6057, file: !5992, line: 41, column: 19)
!6057 = distinct !DILexicalBlock(scope: !6058, file: !5992, line: 41, column: 7)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !5992, line: 40, column: 54)
!6059 = distinct !DILexicalBlock(scope: !6054, file: !5992, line: 40, column: 2)
!6060 = !DILocation(line: 0, scope: !6045)
!6061 = !DILocation(line: 0, scope: !6052)
!6062 = !DILocation(line: 30, column: 2, scope: !6052)
!6063 = !DILocation(line: 38, column: 2, scope: !6045)
!6064 = !DILocation(line: 0, scope: !6054)
!6065 = !DILocation(line: 40, column: 2, scope: !6054)
!6066 = !DILocation(line: 31, column: 9, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !5992, line: 31, column: 7)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !5992, line: 30, column: 54)
!6069 = distinct !DILexicalBlock(scope: !6052, file: !5992, line: 30, column: 2)
!6070 = !DILocation(line: 31, column: 7, scope: !6068)
!6071 = !DILocation(line: 32, column: 35, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6067, file: !5992, line: 31, column: 19)
!6073 = !DILocation(line: 32, column: 20, scope: !6072)
!6074 = !DILocation(line: 32, column: 4, scope: !6072)
!6075 = !DILocation(line: 33, column: 3, scope: !6072)
!6076 = !DILocation(line: 34, column: 4, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6067, file: !5992, line: 33, column: 10)
!6078 = !DILocation(line: 30, column: 50, scope: !6069)
!6079 = !DILocation(line: 30, column: 24, scope: !6069)
!6080 = distinct !{!6080, !6062, !6081}
!6081 = !DILocation(line: 36, column: 2, scope: !6052)
!6082 = !DILocation(line: 49, column: 2, scope: !6045)
!6083 = !DILocation(line: 50, column: 1, scope: !6045)
!6084 = !DILocation(line: 41, column: 9, scope: !6057)
!6085 = !DILocation(line: 41, column: 7, scope: !6058)
!6086 = !DILocation(line: 42, column: 22, scope: !6056)
!6087 = !DILocation(line: 0, scope: !6056)
!6088 = !DILocation(line: 44, column: 25, scope: !6056)
!6089 = !DILocation(line: 44, column: 17, scope: !6056)
!6090 = !DILocation(line: 44, column: 33, scope: !6056)
!6091 = !DILocation(line: 44, column: 4, scope: !6056)
!6092 = !DILocation(line: 45, column: 3, scope: !6056)
!6093 = !DILocation(line: 46, column: 4, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6057, file: !5992, line: 45, column: 10)
!6095 = !DILocation(line: 40, column: 50, scope: !6059)
!6096 = !DILocation(line: 40, column: 24, scope: !6059)
!6097 = distinct !{!6097, !6065, !6098}
!6098 = !DILocation(line: 48, column: 2, scope: !6054)
!6099 = distinct !DISubprogram(name: "isprint", scope: !5053, file: !5053, line: 37, type: !301, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2390, retainedNodes: !6100)
!6100 = !{!6101}
!6101 = !DILocalVariable(name: "c", arg: 1, scope: !6099, file: !5053, line: 37, type: !119)
!6102 = !DILocation(line: 0, scope: !6099)
!6103 = !DILocation(line: 39, column: 38, scope: !6099)
!6104 = !DILocation(line: 39, column: 2, scope: !6099)
!6105 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6106, file: !6106, line: 57, type: !6107, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6153)
!6106 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6107 = !DISubroutineType(types: !6108)
!6108 = !{null, !32, !6109}
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6110, size: 32)
!6110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6111)
!6111 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2513, line: 141, baseType: !6112)
!6112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2513, line: 97, size: 256, elements: !6113)
!6113 = !{!6114}
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6112, file: !2513, line: 107, baseType: !6115, size: 256)
!6115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2513, line: 98, size: 256, elements: !6116)
!6116 = !{!6117, !6122, !6127, !6132, !6137, !6142, !6147, !6152}
!6117 = !DIDerivedType(tag: DW_TAG_member, scope: !6115, file: !2513, line: 99, baseType: !6118, size: 32)
!6118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6115, file: !2513, line: 99, size: 32, elements: !6119)
!6119 = !{!6120, !6121}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6118, file: !2513, line: 99, baseType: !118, size: 32)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6118, file: !2513, line: 99, baseType: !118, size: 32)
!6122 = !DIDerivedType(tag: DW_TAG_member, scope: !6115, file: !2513, line: 100, baseType: !6123, size: 32, offset: 32)
!6123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6115, file: !2513, line: 100, size: 32, elements: !6124)
!6124 = !{!6125, !6126}
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6123, file: !2513, line: 100, baseType: !118, size: 32)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6123, file: !2513, line: 100, baseType: !118, size: 32)
!6127 = !DIDerivedType(tag: DW_TAG_member, scope: !6115, file: !2513, line: 101, baseType: !6128, size: 32, offset: 64)
!6128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6115, file: !2513, line: 101, size: 32, elements: !6129)
!6129 = !{!6130, !6131}
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6128, file: !2513, line: 101, baseType: !118, size: 32)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6128, file: !2513, line: 101, baseType: !118, size: 32)
!6132 = !DIDerivedType(tag: DW_TAG_member, scope: !6115, file: !2513, line: 102, baseType: !6133, size: 32, offset: 96)
!6133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6115, file: !2513, line: 102, size: 32, elements: !6134)
!6134 = !{!6135, !6136}
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6133, file: !2513, line: 102, baseType: !118, size: 32)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6133, file: !2513, line: 102, baseType: !118, size: 32)
!6137 = !DIDerivedType(tag: DW_TAG_member, scope: !6115, file: !2513, line: 103, baseType: !6138, size: 32, offset: 128)
!6138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6115, file: !2513, line: 103, size: 32, elements: !6139)
!6139 = !{!6140, !6141}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6138, file: !2513, line: 103, baseType: !118, size: 32)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6138, file: !2513, line: 103, baseType: !118, size: 32)
!6142 = !DIDerivedType(tag: DW_TAG_member, scope: !6115, file: !2513, line: 104, baseType: !6143, size: 32, offset: 160)
!6143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6115, file: !2513, line: 104, size: 32, elements: !6144)
!6144 = !{!6145, !6146}
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6143, file: !2513, line: 104, baseType: !118, size: 32)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6143, file: !2513, line: 104, baseType: !118, size: 32)
!6147 = !DIDerivedType(tag: DW_TAG_member, scope: !6115, file: !2513, line: 105, baseType: !6148, size: 32, offset: 192)
!6148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6115, file: !2513, line: 105, size: 32, elements: !6149)
!6149 = !{!6150, !6151}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6148, file: !2513, line: 105, baseType: !118, size: 32)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6148, file: !2513, line: 105, baseType: !118, size: 32)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6115, file: !2513, line: 106, baseType: !118, size: 32, offset: 224)
!6153 = !{!6154, !6155}
!6154 = !DILocalVariable(name: "reason", arg: 1, scope: !6105, file: !6106, line: 57, type: !32)
!6155 = !DILocalVariable(name: "esf", arg: 2, scope: !6105, file: !6106, line: 57, type: !6109)
!6156 = !DILocation(line: 0, scope: !6105)
!6157 = !DILocation(line: 60, column: 10, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6105, file: !6106, line: 60, column: 6)
!6159 = !DILocation(line: 60, column: 6, scope: !6105)
!6160 = !DILocation(line: 61, column: 3, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6158, file: !6106, line: 60, column: 19)
!6162 = !DILocation(line: 62, column: 2, scope: !6161)
!6163 = !DILocation(line: 63, column: 2, scope: !6105)
!6164 = !DILocation(line: 64, column: 1, scope: !6105)
!6165 = distinct !DISubprogram(name: "esf_dump", scope: !6106, file: !6106, line: 20, type: !6166, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6168)
!6166 = !DISubroutineType(types: !6167)
!6167 = !{null, !6109}
!6168 = !{!6169}
!6169 = !DILocalVariable(name: "esf", arg: 1, scope: !6165, file: !6106, line: 20, type: !6109)
!6170 = !DILocation(line: 0, scope: !6165)
!6171 = !DILocation(line: 22, column: 2, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !6106, line: 22, column: 2)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !6106, line: 22, column: 2)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !6106, line: 22, column: 2)
!6175 = distinct !DILexicalBlock(scope: !6165, file: !6106, line: 22, column: 2)
!6176 = !DILocation(line: 24, column: 2, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !6106, line: 24, column: 2)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !6106, line: 24, column: 2)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !6106, line: 24, column: 2)
!6180 = distinct !DILexicalBlock(scope: !6165, file: !6106, line: 24, column: 2)
!6181 = !DILocation(line: 26, column: 2, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !6106, line: 26, column: 2)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !6106, line: 26, column: 2)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !6106, line: 26, column: 2)
!6185 = distinct !DILexicalBlock(scope: !6165, file: !6106, line: 26, column: 2)
!6186 = !DILocation(line: 53, column: 2, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6188, file: !6106, line: 53, column: 2)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !6106, line: 53, column: 2)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !6106, line: 53, column: 2)
!6190 = distinct !DILexicalBlock(scope: !6165, file: !6106, line: 53, column: 2)
!6191 = !DILocation(line: 55, column: 1, scope: !6165)
!6192 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6106, file: !6106, line: 82, type: !6193, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6208)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{null, !6109, !6195}
!6195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6196, size: 32)
!6196 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6197)
!6197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6198)
!6198 = !{!6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206, !6207}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6197, file: !216, line: 26, baseType: !118, size: 32)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6197, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6197, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6197, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6197, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6197, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6197, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6197, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6197, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6208 = !{!6209, !6210, !6211}
!6209 = !DILocalVariable(name: "esf", arg: 1, scope: !6192, file: !6106, line: 82, type: !6109)
!6210 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6192, file: !6106, line: 82, type: !6195)
!6211 = !DILocalVariable(name: "reason", scope: !6192, file: !6106, line: 88, type: !32)
!6212 = !DILocation(line: 0, scope: !6192)
!6213 = !DILocation(line: 88, column: 35, scope: !6192)
!6214 = !DILocation(line: 108, column: 2, scope: !6192)
!6215 = !DILocation(line: 131, column: 1, scope: !6192)
!6216 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6106, file: !6106, line: 133, type: !6217, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !6219)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{null, !113}
!6219 = !{!6220, !6221, !6222}
!6220 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6216, file: !6106, line: 133, type: !113)
!6221 = !DILocalVariable(name: "ssf_contents", scope: !6216, file: !6106, line: 135, type: !864)
!6222 = !DILocalVariable(name: "oops_esf", scope: !6216, file: !6106, line: 136, type: !6111)
!6223 = !DILocation(line: 0, scope: !6216)
!6224 = !DILocation(line: 136, column: 2, scope: !6216)
!6225 = !DILocation(line: 136, column: 15, scope: !6216)
!6226 = !DILocation(line: 139, column: 22, scope: !6216)
!6227 = !DILocation(line: 139, column: 17, scope: !6216)
!6228 = !DILocation(line: 139, column: 20, scope: !6216)
!6229 = !DILocation(line: 141, column: 2, scope: !6216)
!6230 = !DILocation(line: 142, column: 2, scope: !6216)
!6231 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6232, file: !6232, line: 40, type: !5970, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !6233)
!6232 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6233 = !{!6234}
!6234 = !DILocalVariable(name: "irq", arg: 1, scope: !6231, file: !6232, line: 40, type: !32)
!6235 = !DILocation(line: 0, scope: !6231)
!6236 = !DILocation(line: 42, column: 2, scope: !6231)
!6237 = !DILocation(line: 43, column: 1, scope: !6231)
!6238 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !533, file: !533, line: 1684, type: !6239, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !6241)
!6239 = !DISubroutineType(types: !6240)
!6240 = !{null, !769}
!6241 = !{!6242}
!6242 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6238, file: !533, line: 1684, type: !769)
!6243 = !DILocation(line: 0, scope: !6238)
!6244 = !DILocation(line: 1686, column: 23, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6238, file: !533, line: 1686, column: 7)
!6246 = !DILocation(line: 1686, column: 7, scope: !6238)
!6247 = !DILocation(line: 1688, column: 5, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6245, file: !533, line: 1687, column: 3)
!6249 = !{i64 2150359192}
!6250 = !DILocation(line: 1689, column: 81, scope: !6248)
!6251 = !DILocation(line: 1689, column: 60, scope: !6248)
!6252 = !DILocation(line: 1689, column: 34, scope: !6248)
!6253 = !DILocation(line: 1689, column: 5, scope: !6248)
!6254 = !DILocation(line: 1689, column: 43, scope: !6248)
!6255 = !DILocation(line: 1690, column: 5, scope: !6248)
!6256 = !{i64 2150359306}
!6257 = !DILocation(line: 1691, column: 3, scope: !6248)
!6258 = !DILocation(line: 1692, column: 1, scope: !6238)
!6259 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6232, file: !6232, line: 45, type: !5970, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !6260)
!6260 = !{!6261}
!6261 = !DILocalVariable(name: "irq", arg: 1, scope: !6259, file: !6232, line: 45, type: !32)
!6262 = !DILocation(line: 0, scope: !6259)
!6263 = !DILocation(line: 47, column: 2, scope: !6259)
!6264 = !DILocation(line: 48, column: 1, scope: !6259)
!6265 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !533, file: !533, line: 1722, type: !6239, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !6266)
!6266 = !{!6267}
!6267 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6265, file: !533, line: 1722, type: !769)
!6268 = !DILocation(line: 0, scope: !6265)
!6269 = !DILocation(line: 1724, column: 23, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6265, file: !533, line: 1724, column: 7)
!6271 = !DILocation(line: 1724, column: 7, scope: !6265)
!6272 = !DILocation(line: 1726, column: 81, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6270, file: !533, line: 1725, column: 3)
!6274 = !DILocation(line: 1726, column: 60, scope: !6273)
!6275 = !DILocation(line: 1726, column: 34, scope: !6273)
!6276 = !DILocation(line: 1726, column: 5, scope: !6273)
!6277 = !DILocation(line: 1726, column: 43, scope: !6273)
!6278 = !DILocation(line: 271, column: 3, scope: !6279, inlinedAt: !6281)
!6279 = distinct !DISubprogram(name: "__DSB", scope: !6280, file: !6280, line: 269, type: !2936, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !2000)
!6280 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6281 = distinct !DILocation(line: 1727, column: 5, scope: !6273)
!6282 = !{i64 2813575}
!6283 = !DILocation(line: 260, column: 3, scope: !6284, inlinedAt: !6285)
!6284 = distinct !DISubprogram(name: "__ISB", scope: !6280, file: !6280, line: 258, type: !2936, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !2000)
!6285 = distinct !DILocation(line: 1728, column: 5, scope: !6273)
!6286 = !{i64 2813292}
!6287 = !DILocation(line: 1729, column: 3, scope: !6273)
!6288 = !DILocation(line: 1730, column: 1, scope: !6265)
!6289 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6232, file: !6232, line: 50, type: !6290, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !6292)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{!119, !32}
!6292 = !{!6293}
!6293 = !DILocalVariable(name: "irq", arg: 1, scope: !6289, file: !6232, line: 50, type: !32)
!6294 = !DILocation(line: 0, scope: !6289)
!6295 = !DILocation(line: 52, column: 20, scope: !6289)
!6296 = !DILocation(line: 52, column: 9, scope: !6289)
!6297 = !DILocation(line: 52, column: 41, scope: !6289)
!6298 = !DILocation(line: 52, column: 39, scope: !6289)
!6299 = !DILocation(line: 52, column: 2, scope: !6289)
!6300 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6232, file: !6232, line: 64, type: !6301, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !6303)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{null, !32, !32, !118}
!6303 = !{!6304, !6305, !6306}
!6304 = !DILocalVariable(name: "irq", arg: 1, scope: !6300, file: !6232, line: 64, type: !32)
!6305 = !DILocalVariable(name: "prio", arg: 2, scope: !6300, file: !6232, line: 64, type: !32)
!6306 = !DILocalVariable(name: "flags", arg: 3, scope: !6300, file: !6232, line: 64, type: !118)
!6307 = !DILocation(line: 0, scope: !6300)
!6308 = !DILocation(line: 83, column: 8, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !6232, line: 82, column: 9)
!6310 = distinct !DILexicalBlock(scope: !6300, file: !6232, line: 76, column: 6)
!6311 = !DILocation(line: 91, column: 2, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !6232, line: 91, column: 2)
!6313 = distinct !DILexicalBlock(scope: !6300, file: !6232, line: 91, column: 2)
!6314 = !DILocation(line: 91, column: 2, scope: !6313)
!6315 = !DILocation(line: 91, column: 2, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !6232, line: 91, column: 2)
!6317 = !DILocation(line: 95, column: 2, scope: !6300)
!6318 = !DILocation(line: 96, column: 1, scope: !6300)
!6319 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6320, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !6322)
!6320 = !DISubroutineType(types: !6321)
!6321 = !{null, !769, !118}
!6322 = !{!6323, !6324}
!6323 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6319, file: !533, line: 1814, type: !769)
!6324 = !DILocalVariable(name: "priority", arg: 2, scope: !6319, file: !533, line: 1814, type: !118)
!6325 = !DILocation(line: 0, scope: !6319)
!6326 = !DILocation(line: 0, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6319, file: !533, line: 1816, column: 7)
!6328 = !DILocation(line: 1816, column: 7, scope: !6319)
!6329 = !DILocation(line: 1824, column: 1, scope: !6319)
!6330 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6232, file: !6232, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !6331)
!6331 = !{!6332}
!6332 = !DILocalVariable(name: "unused", arg: 1, scope: !6330, file: !6232, line: 155, type: !13)
!6333 = !DILocation(line: 0, scope: !6330)
!6334 = !DILocation(line: 159, column: 2, scope: !6330)
!6335 = !DILocation(line: 160, column: 1, scope: !6330)
!6336 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6337, file: !6337, line: 87, type: !2936, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !2000)
!6337 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6338 = !DILocation(line: 89, column: 2, scope: !6336)
!6339 = !DILocation(line: 90, column: 2, scope: !6336)
!6340 = !DILocation(line: 91, column: 1, scope: !6336)
!6341 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6337, file: !6337, line: 23, type: !2936, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!6342 = !DISubprogram(name: "z_arm_int_exit", scope: !6343, file: !6343, line: 153, type: !2936, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!6343 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6344 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6345, file: !6345, line: 256, type: !2936, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !2000)
!6345 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6346 = !DILocation(line: 258, column: 2, scope: !6344)
!6347 = !DILocation(line: 260, column: 2, scope: !6344)
!6348 = !DILocation(line: 262, column: 2, scope: !6344)
!6349 = !DILocation(line: 263, column: 2, scope: !6344)
!6350 = !DILocation(line: 267, column: 2, scope: !6344)
!6351 = !DILocation(line: 268, column: 2, scope: !6344)
!6352 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6345, file: !6345, line: 53, type: !2936, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !2000)
!6353 = !DILocation(line: 55, column: 12, scope: !6352)
!6354 = !DILocation(line: 271, column: 3, scope: !6355, inlinedAt: !6356)
!6355 = distinct !DISubprogram(name: "__DSB", scope: !6280, file: !6280, line: 269, type: !2936, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !2000)
!6356 = distinct !DILocation(line: 56, column: 2, scope: !6352)
!6357 = !{i64 2812246}
!6358 = !DILocation(line: 260, column: 3, scope: !6359, inlinedAt: !6360)
!6359 = distinct !DISubprogram(name: "__ISB", scope: !6280, file: !6280, line: 258, type: !2936, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !2000)
!6360 = distinct !DILocation(line: 57, column: 2, scope: !6352)
!6361 = !{i64 2811963}
!6362 = !DILocation(line: 58, column: 1, scope: !6352)
!6363 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6345, file: !6345, line: 96, type: !2936, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !2000)
!6364 = !DILocation(line: 103, column: 13, scope: !6363)
!6365 = !DILocation(line: 975, column: 3, scope: !6366, inlinedAt: !6369)
!6366 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6280, file: !6280, line: 971, type: !3174, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !6367)
!6367 = !{!6368}
!6368 = !DILocalVariable(name: "result", scope: !6366, file: !6280, line: 973, type: !118)
!6369 = distinct !DILocation(line: 189, column: 16, scope: !6363)
!6370 = !{i64 2833076}
!6371 = !DILocation(line: 0, scope: !6366, inlinedAt: !6369)
!6372 = !DILocation(line: 189, column: 32, scope: !6363)
!6373 = !DILocalVariable(name: "control", arg: 1, scope: !6374, file: !6280, line: 1001, type: !118)
!6374 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6280, file: !6280, line: 1001, type: !6375, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !6377)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{null, !118}
!6377 = !{!6373}
!6378 = !DILocation(line: 0, scope: !6374, inlinedAt: !6379)
!6379 = distinct !DILocation(line: 189, column: 2, scope: !6363)
!6380 = !DILocation(line: 1003, column: 3, scope: !6374, inlinedAt: !6379)
!6381 = !{i64 2833796}
!6382 = !DILocation(line: 260, column: 3, scope: !6359, inlinedAt: !6383)
!6383 = distinct !DILocation(line: 1004, column: 3, scope: !6374, inlinedAt: !6379)
!6384 = !DILocation(line: 191, column: 1, scope: !6363)
!6385 = distinct !DISubprogram(name: "arch_swap", scope: !6386, file: !6386, line: 33, type: !6290, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !6387)
!6386 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6387 = !{!6388}
!6388 = !DILocalVariable(name: "key", arg: 1, scope: !6385, file: !6386, line: 33, type: !32)
!6389 = !DILocation(line: 0, scope: !6385)
!6390 = !DILocation(line: 36, column: 2, scope: !6385)
!6391 = !DILocation(line: 36, column: 17, scope: !6385)
!6392 = !DILocation(line: 36, column: 25, scope: !6385)
!6393 = !DILocation(line: 37, column: 37, scope: !6385)
!6394 = !DILocation(line: 37, column: 17, scope: !6385)
!6395 = !DILocation(line: 37, column: 35, scope: !6385)
!6396 = !DILocation(line: 41, column: 12, scope: !6385)
!6397 = !DILocalVariable(name: "key", arg: 1, scope: !6398, file: !5959, line: 84, type: !32)
!6398 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5959, file: !5959, line: 84, type: !5970, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !6399)
!6399 = !{!6397}
!6400 = !DILocation(line: 0, scope: !6398, inlinedAt: !6401)
!6401 = distinct !DILocation(line: 44, column: 2, scope: !6385)
!6402 = !DILocation(line: 95, column: 2, scope: !6398, inlinedAt: !6401)
!6403 = !{i64 1951442}
!6404 = !DILocation(line: 53, column: 9, scope: !6385)
!6405 = !DILocation(line: 53, column: 24, scope: !6385)
!6406 = !DILocation(line: 53, column: 2, scope: !6385)
!6407 = distinct !DISubprogram(name: "arch_new_thread", scope: !6408, file: !6408, line: 56, type: !6409, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2508, retainedNodes: !6519)
!6408 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6409 = !DISubroutineType(types: !6410)
!6410 = !{null, !6411, !6514, !106, !108, !113, !113, !113}
!6411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6412, size: 32)
!6412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !6413)
!6413 = !{!6414, !6472, !6484, !6485, !6486, !6487, !6488, !6494, !6509}
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6412, file: !143, line: 247, baseType: !6415, size: 384)
!6415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !6416)
!6416 = !{!6417, !6441, !6448, !6449, !6450, !6459, !6460, !6461}
!6417 = !DIDerivedType(tag: DW_TAG_member, scope: !6415, file: !143, line: 60, baseType: !6418, size: 64)
!6418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6415, file: !143, line: 60, size: 64, elements: !6419)
!6419 = !{!6420, !6435}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6418, file: !143, line: 61, baseType: !6421, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !6422)
!6422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !6423)
!6423 = !{!6424, !6430}
!6424 = !DIDerivedType(tag: DW_TAG_member, scope: !6422, file: !153, line: 38, baseType: !6425, size: 32)
!6425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6422, file: !153, line: 38, size: 32, elements: !6426)
!6426 = !{!6427, !6429}
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6425, file: !153, line: 39, baseType: !6428, size: 32)
!6428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6422, size: 32)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6425, file: !153, line: 40, baseType: !6428, size: 32)
!6430 = !DIDerivedType(tag: DW_TAG_member, scope: !6422, file: !153, line: 42, baseType: !6431, size: 32, offset: 32)
!6431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6422, file: !153, line: 42, size: 32, elements: !6432)
!6432 = !{!6433, !6434}
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6431, file: !153, line: 43, baseType: !6428, size: 32)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6431, file: !153, line: 44, baseType: !6428, size: 32)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6418, file: !143, line: 62, baseType: !6436, size: 64)
!6436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !6437)
!6437 = !{!6438}
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6436, file: !169, line: 50, baseType: !6439, size: 64)
!6439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6440, size: 64, elements: !174)
!6440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6436, size: 32)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6415, file: !143, line: 68, baseType: !6442, size: 32, offset: 64)
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 32)
!6443 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !6444)
!6444 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !6445)
!6445 = !{!6446}
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6444, file: !179, line: 232, baseType: !6447, size: 64)
!6447 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !6422)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6415, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6415, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!6450 = !DIDerivedType(tag: DW_TAG_member, scope: !6415, file: !143, line: 90, baseType: !6451, size: 16, offset: 112)
!6451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6415, file: !143, line: 90, size: 16, elements: !6452)
!6452 = !{!6453, !6458}
!6453 = !DIDerivedType(tag: DW_TAG_member, scope: !6451, file: !143, line: 91, baseType: !6454, size: 16)
!6454 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6451, file: !143, line: 91, size: 16, elements: !6455)
!6455 = !{!6456, !6457}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6454, file: !143, line: 96, baseType: !195, size: 8)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6454, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6451, file: !143, line: 100, baseType: !199, size: 16)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6415, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6415, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6415, file: !143, line: 131, baseType: !6462, size: 192, offset: 192)
!6462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !6463)
!6463 = !{!6464, !6465, !6471}
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6462, file: !179, line: 245, baseType: !6421, size: 64)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6462, file: !179, line: 246, baseType: !6466, size: 32, offset: 64)
!6466 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !6467)
!6467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6468, size: 32)
!6468 = !DISubroutineType(types: !6469)
!6469 = !{null, !6470}
!6470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6462, size: 32)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6462, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6412, file: !143, line: 250, baseType: !6473, size: 288, offset: 384)
!6473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6474)
!6474 = !{!6475, !6476, !6477, !6478, !6479, !6480, !6481, !6482, !6483}
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6473, file: !216, line: 26, baseType: !118, size: 32)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6473, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6473, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6473, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6473, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6473, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6473, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6473, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6473, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6412, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6412, file: !143, line: 256, baseType: !6443, size: 64, offset: 704)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6412, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6412, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6412, file: !143, line: 300, baseType: !6489, size: 96, offset: 1056)
!6489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !6490)
!6490 = !{!6491, !6492, !6493}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6489, file: !143, line: 153, baseType: !22, size: 32)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6489, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6489, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6412, file: !143, line: 325, baseType: !6495, size: 32, offset: 1152)
!6495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6496, size: 32)
!6496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !6497)
!6497 = !{!6498, !6504, !6505}
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6496, file: !245, line: 5074, baseType: !6499, size: 96)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !6500)
!6500 = !{!6501, !6502, !6503}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6499, file: !249, line: 57, baseType: !252, size: 32)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6499, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6499, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6496, file: !245, line: 5075, baseType: !6443, size: 64, offset: 96)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6496, file: !245, line: 5076, baseType: !6506, size: 32, offset: 160)
!6506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !6507)
!6507 = !{!6508}
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6506, file: !259, line: 52, baseType: !22, size: 32)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6412, file: !143, line: 343, baseType: !6510, size: 64, offset: 1184)
!6510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !6511)
!6511 = !{!6512, !6513}
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6510, file: !216, line: 63, baseType: !118, size: 32)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6510, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!6514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6515, size: 32)
!6515 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !6516)
!6516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !6517)
!6517 = !{!6518}
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6516, file: !128, line: 48, baseType: !107, size: 8)
!6519 = !{!6520, !6521, !6522, !6523, !6524, !6525, !6526, !6527}
!6520 = !DILocalVariable(name: "thread", arg: 1, scope: !6407, file: !6408, line: 56, type: !6411)
!6521 = !DILocalVariable(name: "stack", arg: 2, scope: !6407, file: !6408, line: 56, type: !6514)
!6522 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6407, file: !6408, line: 57, type: !106)
!6523 = !DILocalVariable(name: "entry", arg: 4, scope: !6407, file: !6408, line: 57, type: !108)
!6524 = !DILocalVariable(name: "p1", arg: 5, scope: !6407, file: !6408, line: 58, type: !113)
!6525 = !DILocalVariable(name: "p2", arg: 6, scope: !6407, file: !6408, line: 58, type: !113)
!6526 = !DILocalVariable(name: "p3", arg: 7, scope: !6407, file: !6408, line: 58, type: !113)
!6527 = !DILocalVariable(name: "iframe", scope: !6407, file: !6408, line: 60, type: !2511)
!6528 = !DILocation(line: 0, scope: !6407)
!6529 = !DILocation(line: 85, column: 11, scope: !6407)
!6530 = !DILocation(line: 93, column: 10, scope: !6407)
!6531 = !DILocation(line: 98, column: 13, scope: !6407)
!6532 = !DILocation(line: 100, column: 15, scope: !6407)
!6533 = !DILocation(line: 100, column: 10, scope: !6407)
!6534 = !DILocation(line: 100, column: 13, scope: !6407)
!6535 = !DILocation(line: 101, column: 15, scope: !6407)
!6536 = !DILocation(line: 101, column: 10, scope: !6407)
!6537 = !DILocation(line: 101, column: 13, scope: !6407)
!6538 = !DILocation(line: 102, column: 15, scope: !6407)
!6539 = !DILocation(line: 102, column: 10, scope: !6407)
!6540 = !DILocation(line: 102, column: 13, scope: !6407)
!6541 = !DILocation(line: 103, column: 15, scope: !6407)
!6542 = !DILocation(line: 103, column: 10, scope: !6407)
!6543 = !DILocation(line: 103, column: 13, scope: !6407)
!6544 = !DILocation(line: 106, column: 10, scope: !6407)
!6545 = !DILocation(line: 106, column: 15, scope: !6407)
!6546 = !DILocation(line: 122, column: 29, scope: !6407)
!6547 = !DILocation(line: 122, column: 23, scope: !6407)
!6548 = !DILocation(line: 122, column: 27, scope: !6407)
!6549 = !DILocation(line: 123, column: 15, scope: !6407)
!6550 = !DILocation(line: 123, column: 23, scope: !6407)
!6551 = !DILocation(line: 143, column: 1, scope: !6407)
!6552 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6408, file: !6408, line: 385, type: !6553, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2508, retainedNodes: !6556)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{!118, !6555, !6555}
!6555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!6556 = !{!6557, !6558, !6559, !6562}
!6557 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6552, file: !6408, line: 385, type: !6555)
!6558 = !DILocalVariable(name: "psp", arg: 2, scope: !6552, file: !6408, line: 385, type: !6555)
!6559 = !DILocalVariable(name: "thread", scope: !6552, file: !6408, line: 388, type: !6560)
!6560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6561, size: 32)
!6561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6412)
!6562 = !DILocalVariable(name: "guard_len", scope: !6552, file: !6408, line: 405, type: !118)
!6563 = !DILocation(line: 0, scope: !6552)
!6564 = !DILocation(line: 388, column: 34, scope: !6552)
!6565 = !DILocation(line: 390, column: 13, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6552, file: !6408, line: 390, column: 6)
!6567 = !DILocation(line: 390, column: 6, scope: !6552)
!6568 = !DILocation(line: 438, column: 6, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6552, file: !6408, line: 438, column: 6)
!6570 = !DILocation(line: 438, column: 6, scope: !6552)
!6571 = !DILocation(line: 442, column: 3, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6569, file: !6408, line: 440, column: 22)
!6573 = !DILocation(line: 455, column: 1, scope: !6552)
!6574 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6408, file: !6408, line: 530, type: !6575, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2508, retainedNodes: !6577)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{null, !6411, !106, !108}
!6577 = !{!6578, !6579, !6580}
!6578 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6574, file: !6408, line: 530, type: !6411)
!6579 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6574, file: !6408, line: 530, type: !106)
!6580 = !DILocalVariable(name: "_main", arg: 3, scope: !6574, file: !6408, line: 531, type: !108)
!6581 = !DILocation(line: 0, scope: !6574)
!6582 = !DILocation(line: 535, column: 11, scope: !6574)
!6583 = !DILocation(line: 560, column: 2, scope: !6574)
!6584 = !DILocation(line: 576, column: 2, scope: !6574)
!6585 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6586 = !DILocation(line: 603, column: 2, scope: !6574)
!6587 = distinct !DISubprogram(name: "z_arm_fault", scope: !6588, file: !6588, line: 1036, type: !6589, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !6604)
!6588 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6589 = !DISubroutineType(types: !6590)
!6590 = !{null, !118, !118, !118, !6591}
!6591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6592, size: 32)
!6592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6593)
!6593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6594)
!6594 = !{!6595, !6596, !6597, !6598, !6599, !6600, !6601, !6602, !6603}
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6593, file: !216, line: 26, baseType: !118, size: 32)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6593, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6593, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6593, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6593, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6593, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6593, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6593, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6593, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6604 = !{!6605, !6606, !6607, !6608, !6609, !6610, !6611, !6612, !6613, !6614}
!6605 = !DILocalVariable(name: "msp", arg: 1, scope: !6587, file: !6588, line: 1036, type: !118)
!6606 = !DILocalVariable(name: "psp", arg: 2, scope: !6587, file: !6588, line: 1036, type: !118)
!6607 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6587, file: !6588, line: 1036, type: !118)
!6608 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6587, file: !6588, line: 1037, type: !6591)
!6609 = !DILocalVariable(name: "reason", scope: !6587, file: !6588, line: 1039, type: !118)
!6610 = !DILocalVariable(name: "fault", scope: !6587, file: !6588, line: 1040, type: !119)
!6611 = !DILocalVariable(name: "recoverable", scope: !6587, file: !6588, line: 1041, type: !345)
!6612 = !DILocalVariable(name: "nested_exc", scope: !6587, file: !6588, line: 1041, type: !345)
!6613 = !DILocalVariable(name: "esf", scope: !6587, file: !6588, line: 1042, type: !2579)
!6614 = !DILocalVariable(name: "esf_copy", scope: !6587, file: !6588, line: 1047, type: !2580)
!6615 = !DILocation(line: 0, scope: !6587)
!6616 = !DILocation(line: 1040, column: 19, scope: !6587)
!6617 = !DILocation(line: 1041, column: 2, scope: !6587)
!6618 = !DILocation(line: 1047, column: 2, scope: !6587)
!6619 = !DILocation(line: 1047, column: 15, scope: !6587)
!6620 = !DILocalVariable(name: "key", arg: 1, scope: !6621, file: !5959, line: 84, type: !32)
!6621 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5959, file: !5959, line: 84, type: !5970, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !6622)
!6622 = !{!6620}
!6623 = !DILocation(line: 0, scope: !6621, inlinedAt: !6624)
!6624 = distinct !DILocation(line: 1050, column: 2, scope: !6587)
!6625 = !DILocation(line: 95, column: 2, scope: !6621, inlinedAt: !6624)
!6626 = !{i64 1984686}
!6627 = !DILocation(line: 1055, column: 9, scope: !6587)
!6628 = !DILocation(line: 1056, column: 2, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !6588, line: 1056, column: 2)
!6630 = distinct !DILexicalBlock(scope: !6587, file: !6588, line: 1056, column: 2)
!6631 = !DILocation(line: 1056, column: 2, scope: !6630)
!6632 = !DILocation(line: 1056, column: 2, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6629, file: !6588, line: 1056, column: 2)
!6634 = !DILocation(line: 1040, column: 24, scope: !6587)
!6635 = !DILocation(line: 1063, column: 11, scope: !6587)
!6636 = !DILocation(line: 1064, column: 6, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6587, file: !6588, line: 1064, column: 6)
!6638 = !{i8 0, i8 2}
!6639 = !DILocation(line: 1064, column: 6, scope: !6587)
!6640 = !DILocation(line: 1070, column: 20, scope: !6587)
!6641 = !DILocation(line: 1070, column: 2, scope: !6587)
!6642 = !DILocation(line: 1089, column: 6, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6587, file: !6588, line: 1089, column: 6)
!6644 = !DILocation(line: 0, scope: !6643)
!6645 = !DILocation(line: 1089, column: 6, scope: !6587)
!6646 = !DILocation(line: 1090, column: 28, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !6588, line: 1090, column: 7)
!6648 = distinct !DILexicalBlock(scope: !6643, file: !6588, line: 1089, column: 18)
!6649 = !DILocation(line: 1090, column: 44, scope: !6647)
!6650 = !DILocation(line: 1090, column: 7, scope: !6648)
!6651 = !DILocation(line: 1091, column: 24, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6647, file: !6588, line: 1090, column: 50)
!6653 = !DILocation(line: 1092, column: 3, scope: !6652)
!6654 = !DILocation(line: 1094, column: 23, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6643, file: !6588, line: 1093, column: 9)
!6656 = !DILocation(line: 1097, column: 2, scope: !6587)
!6657 = !DILocation(line: 1098, column: 1, scope: !6587)
!6658 = distinct !DISubprogram(name: "get_esf", scope: !6588, file: !6588, line: 894, type: !6659, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !6662)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!2579, !118, !118, !118, !6661}
!6661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!6662 = !{!6663, !6664, !6665, !6666, !6667, !6668}
!6663 = !DILocalVariable(name: "msp", arg: 1, scope: !6658, file: !6588, line: 894, type: !118)
!6664 = !DILocalVariable(name: "psp", arg: 2, scope: !6658, file: !6588, line: 894, type: !118)
!6665 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6658, file: !6588, line: 894, type: !118)
!6666 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6658, file: !6588, line: 895, type: !6661)
!6667 = !DILocalVariable(name: "alternative_state_exc", scope: !6658, file: !6588, line: 897, type: !345)
!6668 = !DILocalVariable(name: "ptr_esf", scope: !6658, file: !6588, line: 898, type: !2579)
!6669 = !DILocation(line: 0, scope: !6658)
!6670 = !DILocation(line: 900, column: 14, scope: !6658)
!6671 = !DILocation(line: 902, column: 49, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6658, file: !6588, line: 902, column: 6)
!6673 = !DILocation(line: 902, column: 6, scope: !6658)
!6674 = !DILocation(line: 983, column: 44, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6658, file: !6588, line: 983, column: 6)
!6676 = !DILocation(line: 985, column: 3, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !6588, line: 985, column: 3)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !6588, line: 985, column: 3)
!6679 = distinct !DILexicalBlock(scope: !6680, file: !6588, line: 985, column: 3)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !6588, line: 985, column: 3)
!6681 = distinct !DILexicalBlock(scope: !6675, file: !6588, line: 984, column: 47)
!6682 = !DILocation(line: 986, column: 3, scope: !6681)
!6683 = !DILocation(line: 983, column: 18, scope: !6675)
!6684 = !DILocation(line: 991, column: 7, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !6588, line: 990, column: 30)
!6686 = distinct !DILexicalBlock(scope: !6658, file: !6588, line: 990, column: 6)
!6687 = !DILocation(line: 998, column: 16, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !6588, line: 995, column: 10)
!6689 = distinct !DILexicalBlock(scope: !6685, file: !6588, line: 991, column: 7)
!6690 = !DILocation(line: 1002, column: 2, scope: !6658)
!6691 = !DILocation(line: 1003, column: 1, scope: !6658)
!6692 = distinct !DISubprogram(name: "fault_handle", scope: !6588, file: !6588, line: 786, type: !6693, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !6695)
!6693 = !DISubroutineType(types: !6694)
!6694 = !{!118, !2579, !119, !6661}
!6695 = !{!6696, !6697, !6698, !6699}
!6696 = !DILocalVariable(name: "esf", arg: 1, scope: !6692, file: !6588, line: 786, type: !2579)
!6697 = !DILocalVariable(name: "fault", arg: 2, scope: !6692, file: !6588, line: 786, type: !119)
!6698 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6692, file: !6588, line: 786, type: !6661)
!6699 = !DILocalVariable(name: "reason", scope: !6692, file: !6588, line: 788, type: !118)
!6700 = !DILocation(line: 0, scope: !6692)
!6701 = !DILocation(line: 790, column: 15, scope: !6692)
!6702 = !DILocation(line: 792, column: 2, scope: !6692)
!6703 = !DILocation(line: 794, column: 12, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6692, file: !6588, line: 792, column: 17)
!6705 = !DILocation(line: 795, column: 3, scope: !6704)
!6706 = !DILocation(line: 800, column: 12, scope: !6704)
!6707 = !DILocation(line: 801, column: 3, scope: !6704)
!6708 = !DILocation(line: 803, column: 12, scope: !6704)
!6709 = !DILocation(line: 804, column: 3, scope: !6704)
!6710 = !DILocation(line: 806, column: 12, scope: !6704)
!6711 = !DILocation(line: 807, column: 3, scope: !6704)
!6712 = !DILocation(line: 814, column: 3, scope: !6704)
!6713 = !DILocation(line: 815, column: 3, scope: !6704)
!6714 = !DILocation(line: 820, column: 3, scope: !6704)
!6715 = !DILocation(line: 821, column: 3, scope: !6704)
!6716 = !DILocation(line: 829, column: 2, scope: !6692)
!6717 = distinct !DISubprogram(name: "hard_fault", scope: !6588, file: !6588, line: 709, type: !6718, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !6720)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{!118, !2579, !6661}
!6720 = !{!6721, !6722, !6723}
!6721 = !DILocalVariable(name: "esf", arg: 1, scope: !6717, file: !6588, line: 709, type: !2579)
!6722 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6717, file: !6588, line: 709, type: !6661)
!6723 = !DILocalVariable(name: "reason", scope: !6717, file: !6588, line: 711, type: !118)
!6724 = !DILocation(line: 0, scope: !6717)
!6725 = !DILocation(line: 713, column: 2, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !6588, line: 713, column: 2)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !6588, line: 713, column: 2)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !6588, line: 713, column: 2)
!6729 = distinct !DILexicalBlock(scope: !6717, file: !6588, line: 713, column: 2)
!6730 = !DILocation(line: 732, column: 15, scope: !6717)
!6731 = !DILocation(line: 734, column: 12, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6717, file: !6588, line: 734, column: 6)
!6733 = !DILocation(line: 734, column: 17, scope: !6732)
!6734 = !DILocation(line: 734, column: 41, scope: !6732)
!6735 = !DILocation(line: 734, column: 6, scope: !6717)
!6736 = !DILocation(line: 735, column: 3, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !6588, line: 735, column: 3)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6588, line: 735, column: 3)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6588, line: 735, column: 3)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !6588, line: 735, column: 3)
!6741 = distinct !DILexicalBlock(scope: !6732, file: !6588, line: 734, column: 47)
!6742 = !DILocation(line: 736, column: 2, scope: !6741)
!6743 = !DILocation(line: 736, column: 19, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6732, file: !6588, line: 736, column: 13)
!6745 = !DILocation(line: 736, column: 49, scope: !6744)
!6746 = !DILocation(line: 736, column: 13, scope: !6732)
!6747 = !DILocation(line: 737, column: 3, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6588, line: 737, column: 3)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !6588, line: 737, column: 3)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !6588, line: 737, column: 3)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !6588, line: 737, column: 3)
!6752 = distinct !DILexicalBlock(scope: !6744, file: !6588, line: 736, column: 55)
!6753 = !DILocation(line: 738, column: 2, scope: !6752)
!6754 = !DILocation(line: 738, column: 19, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6744, file: !6588, line: 738, column: 13)
!6756 = !DILocation(line: 738, column: 24, scope: !6755)
!6757 = !DILocation(line: 738, column: 47, scope: !6755)
!6758 = !DILocation(line: 738, column: 13, scope: !6744)
!6759 = !DILocation(line: 739, column: 3, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !6588, line: 739, column: 3)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !6588, line: 739, column: 3)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !6588, line: 739, column: 3)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !6588, line: 739, column: 3)
!6764 = distinct !DILexicalBlock(scope: !6755, file: !6588, line: 738, column: 53)
!6765 = !DILocation(line: 740, column: 7, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6764, file: !6588, line: 740, column: 7)
!6767 = !DILocation(line: 740, column: 7, scope: !6764)
!6768 = !DILocation(line: 741, column: 4, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6588, line: 741, column: 4)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !6588, line: 741, column: 4)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !6588, line: 741, column: 4)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !6588, line: 741, column: 4)
!6773 = distinct !DILexicalBlock(scope: !6766, file: !6588, line: 740, column: 38)
!6774 = !DILocation(line: 742, column: 24, scope: !6773)
!6775 = !DILocation(line: 743, column: 3, scope: !6773)
!6776 = !DILocation(line: 743, column: 20, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6766, file: !6588, line: 743, column: 14)
!6778 = !DILocation(line: 743, column: 25, scope: !6777)
!6779 = !DILocation(line: 743, column: 52, scope: !6777)
!6780 = !DILocation(line: 743, column: 14, scope: !6766)
!6781 = !DILocation(line: 744, column: 13, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6777, file: !6588, line: 743, column: 58)
!6783 = !DILocation(line: 745, column: 3, scope: !6782)
!6784 = !DILocation(line: 745, column: 20, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6777, file: !6588, line: 745, column: 14)
!6786 = !DILocation(line: 745, column: 25, scope: !6785)
!6787 = !DILocation(line: 745, column: 52, scope: !6785)
!6788 = !DILocation(line: 745, column: 14, scope: !6777)
!6789 = !DILocation(line: 746, column: 13, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6785, file: !6588, line: 745, column: 58)
!6791 = !DILocation(line: 747, column: 3, scope: !6790)
!6792 = !DILocation(line: 747, column: 20, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6785, file: !6588, line: 747, column: 14)
!6794 = !DILocation(line: 747, column: 52, scope: !6793)
!6795 = !DILocation(line: 747, column: 14, scope: !6785)
!6796 = !DILocation(line: 748, column: 13, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6793, file: !6588, line: 747, column: 58)
!6798 = !DILocation(line: 754, column: 4, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !6588, line: 754, column: 4)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6588, line: 754, column: 4)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6588, line: 754, column: 4)
!6802 = distinct !DILexicalBlock(scope: !6793, file: !6588, line: 753, column: 10)
!6803 = !DILocation(line: 758, column: 3, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6588, line: 758, column: 3)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6588, line: 758, column: 3)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6588, line: 758, column: 3)
!6807 = distinct !DILexicalBlock(scope: !6755, file: !6588, line: 757, column: 9)
!6808 = !DILocation(line: 766, column: 2, scope: !6717)
!6809 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6588, file: !6588, line: 229, type: !6693, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !6810)
!6810 = !{!6811, !6812, !6813, !6814, !6815, !6816, !6819}
!6811 = !DILocalVariable(name: "esf", arg: 1, scope: !6809, file: !6588, line: 229, type: !2579)
!6812 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6809, file: !6588, line: 229, type: !119)
!6813 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6809, file: !6588, line: 230, type: !6661)
!6814 = !DILocalVariable(name: "reason", scope: !6809, file: !6588, line: 232, type: !118)
!6815 = !DILocalVariable(name: "mmfar", scope: !6809, file: !6588, line: 233, type: !118)
!6816 = !DILocalVariable(name: "temp", scope: !6817, file: !6588, line: 254, type: !118)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6588, line: 244, column: 48)
!6818 = distinct !DILexicalBlock(scope: !6809, file: !6588, line: 244, column: 6)
!6819 = !DILocalVariable(name: "min_stack_ptr", scope: !6820, file: !6588, line: 309, type: !118)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6588, line: 308, column: 43)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !6588, line: 308, column: 7)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6588, line: 289, column: 40)
!6823 = distinct !DILexicalBlock(scope: !6809, file: !6588, line: 288, column: 6)
!6824 = !DILocation(line: 0, scope: !6809)
!6825 = !DILocation(line: 235, column: 2, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !6588, line: 235, column: 2)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6588, line: 235, column: 2)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !6588, line: 235, column: 2)
!6829 = distinct !DILexicalBlock(scope: !6809, file: !6588, line: 235, column: 2)
!6830 = !DILocation(line: 237, column: 12, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6809, file: !6588, line: 237, column: 6)
!6832 = !DILocation(line: 237, column: 17, scope: !6831)
!6833 = !DILocation(line: 237, column: 41, scope: !6831)
!6834 = !DILocation(line: 237, column: 6, scope: !6809)
!6835 = !DILocation(line: 238, column: 3, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6588, line: 238, column: 3)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6588, line: 238, column: 3)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6588, line: 238, column: 3)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6588, line: 238, column: 3)
!6840 = distinct !DILexicalBlock(scope: !6831, file: !6588, line: 237, column: 47)
!6841 = !DILocation(line: 240, column: 2, scope: !6840)
!6842 = !DILocation(line: 241, column: 12, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6809, file: !6588, line: 241, column: 6)
!6844 = !DILocation(line: 241, column: 17, scope: !6843)
!6845 = !DILocation(line: 241, column: 43, scope: !6843)
!6846 = !DILocation(line: 241, column: 6, scope: !6809)
!6847 = !DILocation(line: 242, column: 3, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6588, line: 242, column: 3)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6588, line: 242, column: 3)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6588, line: 242, column: 3)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6588, line: 242, column: 3)
!6852 = distinct !DILexicalBlock(scope: !6843, file: !6588, line: 241, column: 49)
!6853 = !DILocation(line: 243, column: 2, scope: !6852)
!6854 = !DILocation(line: 244, column: 12, scope: !6818)
!6855 = !DILocation(line: 244, column: 17, scope: !6818)
!6856 = !DILocation(line: 244, column: 42, scope: !6818)
!6857 = !DILocation(line: 244, column: 6, scope: !6809)
!6858 = !DILocation(line: 245, column: 3, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !6588, line: 245, column: 3)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6588, line: 245, column: 3)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !6588, line: 245, column: 3)
!6862 = distinct !DILexicalBlock(scope: !6817, file: !6588, line: 245, column: 3)
!6863 = !DILocation(line: 254, column: 24, scope: !6817)
!6864 = !DILocation(line: 0, scope: !6817)
!6865 = !DILocation(line: 256, column: 13, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6817, file: !6588, line: 256, column: 7)
!6867 = !DILocation(line: 256, column: 18, scope: !6866)
!6868 = !DILocation(line: 256, column: 44, scope: !6866)
!6869 = !DILocation(line: 256, column: 7, scope: !6817)
!6870 = !DILocation(line: 258, column: 4, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6588, line: 258, column: 4)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6588, line: 258, column: 4)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !6588, line: 258, column: 4)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !6588, line: 258, column: 4)
!6875 = distinct !DILexicalBlock(scope: !6866, file: !6588, line: 256, column: 50)
!6876 = !DILocation(line: 259, column: 24, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6875, file: !6588, line: 259, column: 8)
!6878 = !DILocation(line: 259, column: 8, scope: !6875)
!6879 = !DILocation(line: 261, column: 15, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6877, file: !6588, line: 259, column: 30)
!6881 = !DILocation(line: 262, column: 4, scope: !6880)
!6882 = !DILocation(line: 265, column: 12, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6809, file: !6588, line: 265, column: 6)
!6884 = !DILocation(line: 265, column: 17, scope: !6883)
!6885 = !DILocation(line: 265, column: 42, scope: !6883)
!6886 = !DILocation(line: 265, column: 6, scope: !6809)
!6887 = !DILocation(line: 266, column: 3, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6588, line: 266, column: 3)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !6588, line: 266, column: 3)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !6588, line: 266, column: 3)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6588, line: 266, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6883, file: !6588, line: 265, column: 48)
!6893 = !DILocation(line: 267, column: 2, scope: !6892)
!6894 = !DILocation(line: 269, column: 12, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6809, file: !6588, line: 269, column: 6)
!6896 = !DILocation(line: 269, column: 17, scope: !6895)
!6897 = !DILocation(line: 269, column: 41, scope: !6895)
!6898 = !DILocation(line: 269, column: 6, scope: !6809)
!6899 = !DILocation(line: 270, column: 3, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6588, line: 270, column: 3)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6588, line: 270, column: 3)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6588, line: 270, column: 3)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6588, line: 270, column: 3)
!6904 = distinct !DILexicalBlock(scope: !6895, file: !6588, line: 269, column: 47)
!6905 = !DILocation(line: 272, column: 2, scope: !6904)
!6906 = !DILocation(line: 288, column: 12, scope: !6823)
!6907 = !DILocation(line: 288, column: 17, scope: !6823)
!6908 = !DILocation(line: 288, column: 41, scope: !6823)
!6909 = !DILocation(line: 289, column: 9, scope: !6823)
!6910 = !DILocation(line: 289, column: 14, scope: !6823)
!6911 = !DILocation(line: 288, column: 6, scope: !6809)
!6912 = !DILocation(line: 308, column: 12, scope: !6821)
!6913 = !DILocation(line: 308, column: 17, scope: !6821)
!6914 = !DILocation(line: 308, column: 7, scope: !6822)
!6915 = !DILocation(line: 310, column: 6, scope: !6820)
!6916 = !DILocation(line: 309, column: 29, scope: !6820)
!6917 = !DILocation(line: 0, scope: !6820)
!6918 = !DILocation(line: 312, column: 8, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6820, file: !6588, line: 312, column: 8)
!6920 = !DILocation(line: 312, column: 8, scope: !6820)
!6921 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6922, file: !6280, line: 1099, type: !118)
!6922 = distinct !DISubprogram(name: "__set_PSP", scope: !6280, file: !6280, line: 1099, type: !6375, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !6923)
!6923 = !{!6921}
!6924 = !DILocation(line: 0, scope: !6922, inlinedAt: !6925)
!6925 = distinct !DILocation(line: 338, column: 5, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6919, file: !6588, line: 312, column: 23)
!6927 = !DILocation(line: 1101, column: 3, scope: !6922, inlinedAt: !6925)
!6928 = !{i64 2863215}
!6929 = !DILocation(line: 341, column: 4, scope: !6926)
!6930 = !DILocation(line: 342, column: 5, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6588, line: 342, column: 5)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6588, line: 342, column: 5)
!6933 = distinct !DILexicalBlock(scope: !6919, file: !6588, line: 341, column: 11)
!6934 = !DILocation(line: 342, column: 5, scope: !6932)
!6935 = !DILocation(line: 342, column: 5, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6931, file: !6588, line: 342, column: 5)
!6937 = !DILocation(line: 360, column: 12, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6809, file: !6588, line: 360, column: 6)
!6939 = !DILocation(line: 360, column: 17, scope: !6938)
!6940 = !DILocation(line: 360, column: 41, scope: !6938)
!6941 = !DILocation(line: 360, column: 6, scope: !6809)
!6942 = !DILocation(line: 361, column: 14, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6938, file: !6588, line: 360, column: 47)
!6944 = !DILocation(line: 362, column: 2, scope: !6943)
!6945 = !DILocation(line: 366, column: 12, scope: !6809)
!6946 = !DILocation(line: 369, column: 15, scope: !6809)
!6947 = !DILocation(line: 371, column: 2, scope: !6809)
!6948 = distinct !DISubprogram(name: "bus_fault", scope: !6588, file: !6588, line: 383, type: !6949, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !6951)
!6949 = !DISubroutineType(types: !6950)
!6950 = !{!119, !2579, !119, !6661}
!6951 = !{!6952, !6953, !6954, !6955, !6956}
!6952 = !DILocalVariable(name: "esf", arg: 1, scope: !6948, file: !6588, line: 383, type: !2579)
!6953 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6948, file: !6588, line: 383, type: !119)
!6954 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6948, file: !6588, line: 383, type: !6661)
!6955 = !DILocalVariable(name: "reason", scope: !6948, file: !6588, line: 385, type: !118)
!6956 = !DILocalVariable(name: "bfar", scope: !6957, file: !6588, line: 405, type: !118)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6588, line: 395, column: 42)
!6958 = distinct !DILexicalBlock(scope: !6948, file: !6588, line: 395, column: 6)
!6959 = !DILocation(line: 0, scope: !6948)
!6960 = !DILocation(line: 387, column: 2, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6588, line: 387, column: 2)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6588, line: 387, column: 2)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !6588, line: 387, column: 2)
!6964 = distinct !DILexicalBlock(scope: !6948, file: !6588, line: 387, column: 2)
!6965 = !DILocation(line: 389, column: 11, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6948, file: !6588, line: 389, column: 6)
!6967 = !DILocation(line: 389, column: 16, scope: !6966)
!6968 = !DILocation(line: 389, column: 6, scope: !6948)
!6969 = !DILocation(line: 390, column: 3, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6588, line: 390, column: 3)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6588, line: 390, column: 3)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6588, line: 390, column: 3)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !6588, line: 390, column: 3)
!6974 = distinct !DILexicalBlock(scope: !6966, file: !6588, line: 389, column: 39)
!6975 = !DILocation(line: 391, column: 2, scope: !6974)
!6976 = !DILocation(line: 392, column: 11, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6948, file: !6588, line: 392, column: 6)
!6978 = !DILocation(line: 392, column: 16, scope: !6977)
!6979 = !DILocation(line: 392, column: 6, scope: !6948)
!6980 = !DILocation(line: 393, column: 3, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6588, line: 393, column: 3)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6588, line: 393, column: 3)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !6588, line: 393, column: 3)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !6588, line: 393, column: 3)
!6985 = distinct !DILexicalBlock(scope: !6977, file: !6588, line: 392, column: 41)
!6986 = !DILocation(line: 394, column: 2, scope: !6985)
!6987 = !DILocation(line: 395, column: 11, scope: !6958)
!6988 = !DILocation(line: 395, column: 16, scope: !6958)
!6989 = !DILocation(line: 395, column: 6, scope: !6948)
!6990 = !DILocation(line: 396, column: 3, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !6588, line: 396, column: 3)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !6588, line: 396, column: 3)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !6588, line: 396, column: 3)
!6994 = distinct !DILexicalBlock(scope: !6957, file: !6588, line: 396, column: 3)
!6995 = !DILocation(line: 405, column: 3, scope: !6957)
!6996 = !DILocation(line: 0, scope: !6957)
!6997 = !DILocation(line: 407, column: 13, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6957, file: !6588, line: 407, column: 7)
!6999 = !DILocation(line: 407, column: 18, scope: !6998)
!7000 = !DILocation(line: 407, column: 44, scope: !6998)
!7001 = !DILocation(line: 407, column: 7, scope: !6957)
!7002 = !DILocation(line: 408, column: 4, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !6588, line: 408, column: 4)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6588, line: 408, column: 4)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6588, line: 408, column: 4)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6588, line: 408, column: 4)
!7007 = distinct !DILexicalBlock(scope: !6998, file: !6588, line: 407, column: 50)
!7008 = !DILocation(line: 409, column: 24, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7007, file: !6588, line: 409, column: 8)
!7010 = !DILocation(line: 409, column: 8, scope: !7007)
!7011 = !DILocation(line: 411, column: 15, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7009, file: !6588, line: 409, column: 30)
!7013 = !DILocation(line: 412, column: 4, scope: !7012)
!7014 = !DILocation(line: 415, column: 11, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6948, file: !6588, line: 415, column: 6)
!7016 = !DILocation(line: 415, column: 16, scope: !7015)
!7017 = !DILocation(line: 415, column: 6, scope: !6948)
!7018 = !DILocation(line: 416, column: 3, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !6588, line: 416, column: 3)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !6588, line: 416, column: 3)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !6588, line: 416, column: 3)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !6588, line: 416, column: 3)
!7023 = distinct !DILexicalBlock(scope: !7015, file: !6588, line: 415, column: 44)
!7024 = !DILocation(line: 417, column: 2, scope: !7023)
!7025 = !DILocation(line: 418, column: 12, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6948, file: !6588, line: 418, column: 6)
!7027 = !DILocation(line: 418, column: 17, scope: !7026)
!7028 = !DILocation(line: 418, column: 41, scope: !7026)
!7029 = !DILocation(line: 418, column: 6, scope: !6948)
!7030 = !DILocation(line: 423, column: 18, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7026, file: !6588, line: 423, column: 13)
!7032 = !DILocation(line: 423, column: 23, scope: !7031)
!7033 = !DILocation(line: 423, column: 13, scope: !7026)
!7034 = !DILocation(line: 0, scope: !7026)
!7035 = !DILocation(line: 524, column: 12, scope: !6948)
!7036 = !DILocation(line: 526, column: 15, scope: !6948)
!7037 = !DILocation(line: 528, column: 2, scope: !6948)
!7038 = distinct !DISubprogram(name: "usage_fault", scope: !6588, file: !6588, line: 539, type: !7039, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !7043)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{!118, !7041}
!7041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7042, size: 32)
!7042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2580)
!7043 = !{!7044, !7045}
!7044 = !DILocalVariable(name: "esf", arg: 1, scope: !7038, file: !6588, line: 539, type: !7041)
!7045 = !DILocalVariable(name: "reason", scope: !7038, file: !6588, line: 541, type: !118)
!7046 = !DILocation(line: 0, scope: !7038)
!7047 = !DILocation(line: 543, column: 2, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6588, line: 543, column: 2)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6588, line: 543, column: 2)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !6588, line: 543, column: 2)
!7051 = distinct !DILexicalBlock(scope: !7038, file: !6588, line: 543, column: 2)
!7052 = !DILocation(line: 546, column: 12, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7038, file: !6588, line: 546, column: 6)
!7054 = !DILocation(line: 546, column: 17, scope: !7053)
!7055 = !DILocation(line: 546, column: 43, scope: !7053)
!7056 = !DILocation(line: 546, column: 6, scope: !7038)
!7057 = !DILocation(line: 547, column: 3, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6588, line: 547, column: 3)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6588, line: 547, column: 3)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6588, line: 547, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6588, line: 547, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7053, file: !6588, line: 546, column: 49)
!7063 = !DILocation(line: 548, column: 2, scope: !7062)
!7064 = !DILocation(line: 549, column: 12, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7038, file: !6588, line: 549, column: 6)
!7066 = !DILocation(line: 549, column: 17, scope: !7065)
!7067 = !DILocation(line: 549, column: 43, scope: !7065)
!7068 = !DILocation(line: 549, column: 6, scope: !7038)
!7069 = !DILocation(line: 550, column: 3, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !6588, line: 550, column: 3)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6588, line: 550, column: 3)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6588, line: 550, column: 3)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !6588, line: 550, column: 3)
!7074 = distinct !DILexicalBlock(scope: !7065, file: !6588, line: 549, column: 49)
!7075 = !DILocation(line: 551, column: 2, scope: !7074)
!7076 = !DILocation(line: 567, column: 12, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7038, file: !6588, line: 567, column: 6)
!7078 = !DILocation(line: 567, column: 17, scope: !7077)
!7079 = !DILocation(line: 567, column: 38, scope: !7077)
!7080 = !DILocation(line: 567, column: 6, scope: !7038)
!7081 = !DILocation(line: 568, column: 3, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6588, line: 568, column: 3)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6588, line: 568, column: 3)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !6588, line: 568, column: 3)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !6588, line: 568, column: 3)
!7086 = distinct !DILexicalBlock(scope: !7077, file: !6588, line: 567, column: 44)
!7087 = !DILocation(line: 569, column: 2, scope: !7086)
!7088 = !DILocation(line: 570, column: 12, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7038, file: !6588, line: 570, column: 6)
!7090 = !DILocation(line: 570, column: 17, scope: !7089)
!7091 = !DILocation(line: 570, column: 39, scope: !7089)
!7092 = !DILocation(line: 570, column: 6, scope: !7038)
!7093 = !DILocation(line: 571, column: 3, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6588, line: 571, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6588, line: 571, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6588, line: 571, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6588, line: 571, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7089, file: !6588, line: 570, column: 45)
!7099 = !DILocation(line: 572, column: 2, scope: !7098)
!7100 = !DILocation(line: 573, column: 12, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7038, file: !6588, line: 573, column: 6)
!7102 = !DILocation(line: 573, column: 17, scope: !7101)
!7103 = !DILocation(line: 573, column: 42, scope: !7101)
!7104 = !DILocation(line: 573, column: 6, scope: !7038)
!7105 = !DILocation(line: 574, column: 3, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !6588, line: 574, column: 3)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !6588, line: 574, column: 3)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !6588, line: 574, column: 3)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !6588, line: 574, column: 3)
!7110 = distinct !DILexicalBlock(scope: !7101, file: !6588, line: 573, column: 48)
!7111 = !DILocation(line: 575, column: 2, scope: !7110)
!7112 = !DILocation(line: 576, column: 12, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7038, file: !6588, line: 576, column: 6)
!7114 = !DILocation(line: 576, column: 17, scope: !7113)
!7115 = !DILocation(line: 576, column: 44, scope: !7113)
!7116 = !DILocation(line: 576, column: 6, scope: !7038)
!7117 = !DILocation(line: 577, column: 3, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !6588, line: 577, column: 3)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !6588, line: 577, column: 3)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !6588, line: 577, column: 3)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !6588, line: 577, column: 3)
!7122 = distinct !DILexicalBlock(scope: !7113, file: !6588, line: 576, column: 50)
!7123 = !DILocation(line: 578, column: 2, scope: !7122)
!7124 = !DILocation(line: 581, column: 12, scope: !7038)
!7125 = !DILocation(line: 583, column: 2, scope: !7038)
!7126 = distinct !DISubprogram(name: "debug_monitor", scope: !6588, file: !6588, line: 632, type: !7127, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !7129)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{null, !2579, !6661}
!7129 = !{!7130, !7131}
!7130 = !DILocalVariable(name: "esf", arg: 1, scope: !7126, file: !6588, line: 632, type: !2579)
!7131 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7126, file: !6588, line: 632, type: !6661)
!7132 = !DILocation(line: 0, scope: !7126)
!7133 = !DILocation(line: 634, column: 15, scope: !7126)
!7134 = !DILocation(line: 636, column: 2, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6588, line: 636, column: 2)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6588, line: 636, column: 2)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !6588, line: 636, column: 2)
!7138 = distinct !DILexicalBlock(scope: !7126, file: !6588, line: 636, column: 2)
!7139 = !DILocation(line: 652, column: 1, scope: !7126)
!7140 = distinct !DISubprogram(name: "reserved_exception", scope: !6588, file: !6588, line: 776, type: !7141, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !7143)
!7141 = !DISubroutineType(types: !7142)
!7142 = !{null, !7041, !119}
!7143 = !{!7144, !7145}
!7144 = !DILocalVariable(name: "esf", arg: 1, scope: !7140, file: !6588, line: 776, type: !7041)
!7145 = !DILocalVariable(name: "fault", arg: 2, scope: !7140, file: !6588, line: 776, type: !119)
!7146 = !DILocation(line: 0, scope: !7140)
!7147 = !DILocation(line: 780, column: 2, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !6588, line: 780, column: 2)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !6588, line: 780, column: 2)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !6588, line: 780, column: 2)
!7151 = distinct !DILexicalBlock(scope: !7140, file: !6588, line: 780, column: 2)
!7152 = !DILocation(line: 783, column: 1, scope: !7140)
!7153 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6588, file: !6588, line: 658, type: !7154, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !7156)
!7154 = !DISubroutineType(types: !7155)
!7155 = !{!345, !2579}
!7156 = !{!7157, !7158, !7159}
!7157 = !DILocalVariable(name: "esf", arg: 1, scope: !7153, file: !6588, line: 658, type: !2579)
!7158 = !DILocalVariable(name: "ret_addr", scope: !7153, file: !6588, line: 660, type: !2622)
!7159 = !DILocalVariable(name: "fault_insn", scope: !7153, file: !6588, line: 686, type: !199)
!7160 = !DILocation(line: 0, scope: !7153)
!7161 = !DILocation(line: 660, column: 46, scope: !7153)
!7162 = !DILocation(line: 660, column: 23, scope: !7153)
!7163 = !DILocation(line: 682, column: 11, scope: !7153)
!7164 = !DILocation(line: 271, column: 3, scope: !7165, inlinedAt: !7166)
!7165 = distinct !DISubprogram(name: "__DSB", scope: !6280, file: !6280, line: 269, type: !2936, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !2000)
!7166 = distinct !DILocation(line: 683, column: 2, scope: !7153)
!7167 = !{i64 2839350}
!7168 = !DILocation(line: 260, column: 3, scope: !7169, inlinedAt: !7170)
!7169 = distinct !DISubprogram(name: "__ISB", scope: !6280, file: !6280, line: 258, type: !2936, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !2000)
!7170 = distinct !DILocation(line: 684, column: 2, scope: !7153)
!7171 = !{i64 2839067}
!7172 = !DILocation(line: 686, column: 35, scope: !7153)
!7173 = !DILocation(line: 686, column: 24, scope: !7153)
!7174 = !DILocation(line: 688, column: 11, scope: !7153)
!7175 = !DILocation(line: 271, column: 3, scope: !7165, inlinedAt: !7176)
!7176 = distinct !DILocation(line: 689, column: 2, scope: !7153)
!7177 = !DILocation(line: 260, column: 3, scope: !7169, inlinedAt: !7178)
!7178 = distinct !DILocation(line: 690, column: 2, scope: !7153)
!7179 = !DILocation(line: 693, column: 45, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7153, file: !6588, line: 693, column: 6)
!7181 = !DILocation(line: 699, column: 1, scope: !7153)
!7182 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6588, file: !6588, line: 1107, type: !2936, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !2000)
!7183 = !DILocation(line: 1111, column: 11, scope: !7182)
!7184 = !DILocation(line: 1136, column: 1, scope: !7182)
!7185 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7186, file: !7186, line: 26, type: !2936, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !7187)
!7186 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7187 = !{!7188}
!7188 = !DILocalVariable(name: "irq", scope: !7185, file: !7186, line: 28, type: !119)
!7189 = !DILocation(line: 0, scope: !7185)
!7190 = !DILocation(line: 30, column: 2, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7185, file: !7186, line: 30, column: 2)
!7192 = !DILocation(line: 31, column: 3, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !7186, line: 30, column: 39)
!7194 = distinct !DILexicalBlock(scope: !7191, file: !7186, line: 30, column: 2)
!7195 = !DILocation(line: 30, column: 35, scope: !7194)
!7196 = !DILocation(line: 30, column: 13, scope: !7194)
!7197 = distinct !{!7197, !7190, !7198}
!7198 = !DILocation(line: 32, column: 2, scope: !7191)
!7199 = !DILocation(line: 33, column: 1, scope: !7185)
!7200 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6320, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !7201)
!7201 = !{!7202, !7203}
!7202 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7200, file: !533, line: 1814, type: !769)
!7203 = !DILocalVariable(name: "priority", arg: 2, scope: !7200, file: !533, line: 1814, type: !118)
!7204 = !DILocation(line: 0, scope: !7200)
!7205 = !DILocation(line: 1816, column: 7, scope: !7200)
!7206 = !DILocation(line: 0, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7200, file: !533, line: 1816, column: 7)
!7208 = !DILocation(line: 1824, column: 1, scope: !7200)
!7209 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7210, file: !7210, line: 27, type: !7211, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2668, retainedNodes: !7317)
!7210 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7211 = !DISubroutineType(types: !7212)
!7212 = !{null, !7213}
!7213 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !7214)
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 32)
!7215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !7216)
!7216 = !{!7217, !7275, !7287, !7288, !7289, !7290, !7291, !7297, !7312}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7215, file: !143, line: 247, baseType: !7218, size: 384)
!7218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !7219)
!7219 = !{!7220, !7244, !7251, !7252, !7253, !7262, !7263, !7264}
!7220 = !DIDerivedType(tag: DW_TAG_member, scope: !7218, file: !143, line: 60, baseType: !7221, size: 64)
!7221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7218, file: !143, line: 60, size: 64, elements: !7222)
!7222 = !{!7223, !7238}
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7221, file: !143, line: 61, baseType: !7224, size: 64)
!7224 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !7225)
!7225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !7226)
!7226 = !{!7227, !7233}
!7227 = !DIDerivedType(tag: DW_TAG_member, scope: !7225, file: !153, line: 38, baseType: !7228, size: 32)
!7228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7225, file: !153, line: 38, size: 32, elements: !7229)
!7229 = !{!7230, !7232}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7228, file: !153, line: 39, baseType: !7231, size: 32)
!7231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7225, size: 32)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7228, file: !153, line: 40, baseType: !7231, size: 32)
!7233 = !DIDerivedType(tag: DW_TAG_member, scope: !7225, file: !153, line: 42, baseType: !7234, size: 32, offset: 32)
!7234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7225, file: !153, line: 42, size: 32, elements: !7235)
!7235 = !{!7236, !7237}
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7234, file: !153, line: 43, baseType: !7231, size: 32)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7234, file: !153, line: 44, baseType: !7231, size: 32)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7221, file: !143, line: 62, baseType: !7239, size: 64)
!7239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !7240)
!7240 = !{!7241}
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7239, file: !169, line: 50, baseType: !7242, size: 64)
!7242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7243, size: 64, elements: !174)
!7243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7239, size: 32)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7218, file: !143, line: 68, baseType: !7245, size: 32, offset: 64)
!7245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7246, size: 32)
!7246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !7247)
!7247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !7248)
!7248 = !{!7249}
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7247, file: !179, line: 232, baseType: !7250, size: 64)
!7250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !7225)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7218, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7218, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!7253 = !DIDerivedType(tag: DW_TAG_member, scope: !7218, file: !143, line: 90, baseType: !7254, size: 16, offset: 112)
!7254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7218, file: !143, line: 90, size: 16, elements: !7255)
!7255 = !{!7256, !7261}
!7256 = !DIDerivedType(tag: DW_TAG_member, scope: !7254, file: !143, line: 91, baseType: !7257, size: 16)
!7257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7254, file: !143, line: 91, size: 16, elements: !7258)
!7258 = !{!7259, !7260}
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7257, file: !143, line: 96, baseType: !195, size: 8)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7257, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7254, file: !143, line: 100, baseType: !199, size: 16)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7218, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7218, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7218, file: !143, line: 131, baseType: !7265, size: 192, offset: 192)
!7265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !7266)
!7266 = !{!7267, !7268, !7274}
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7265, file: !179, line: 245, baseType: !7224, size: 64)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7265, file: !179, line: 246, baseType: !7269, size: 32, offset: 64)
!7269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !7270)
!7270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7271, size: 32)
!7271 = !DISubroutineType(types: !7272)
!7272 = !{null, !7273}
!7273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7265, size: 32)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7265, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7215, file: !143, line: 250, baseType: !7276, size: 288, offset: 384)
!7276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !7277)
!7277 = !{!7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285, !7286}
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7276, file: !216, line: 26, baseType: !118, size: 32)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7276, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7276, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7276, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7276, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7276, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7276, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7276, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7276, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7215, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7215, file: !143, line: 256, baseType: !7246, size: 64, offset: 704)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7215, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7215, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7215, file: !143, line: 300, baseType: !7292, size: 96, offset: 1056)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !7293)
!7293 = !{!7294, !7295, !7296}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7292, file: !143, line: 153, baseType: !22, size: 32)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7292, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7292, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7215, file: !143, line: 325, baseType: !7298, size: 32, offset: 1152)
!7298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7299, size: 32)
!7299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !7300)
!7300 = !{!7301, !7307, !7308}
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7299, file: !245, line: 5074, baseType: !7302, size: 96)
!7302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !7303)
!7303 = !{!7304, !7305, !7306}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7302, file: !249, line: 57, baseType: !252, size: 32)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7302, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7302, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7299, file: !245, line: 5075, baseType: !7246, size: 64, offset: 96)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7299, file: !245, line: 5076, baseType: !7309, size: 32, offset: 160)
!7309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !7310)
!7310 = !{!7311}
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7309, file: !259, line: 52, baseType: !22, size: 32)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7215, file: !143, line: 343, baseType: !7313, size: 64, offset: 1184)
!7313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !7314)
!7314 = !{!7315, !7316}
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7313, file: !216, line: 63, baseType: !118, size: 32)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7313, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!7317 = !{!7318}
!7318 = !DILocalVariable(name: "thread", arg: 1, scope: !7209, file: !7210, line: 27, type: !7213)
!7319 = !DILocation(line: 0, scope: !7209)
!7320 = !DILocation(line: 29, column: 6, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7209, file: !7210, line: 29, column: 6)
!7322 = !DILocation(line: 29, column: 15, scope: !7321)
!7323 = !DILocation(line: 29, column: 6, scope: !7209)
!7324 = !DILocation(line: 1031, column: 3, scope: !7325, inlinedAt: !7328)
!7325 = distinct !DISubprogram(name: "__get_IPSR", scope: !6280, file: !6280, line: 1027, type: !3174, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2668, retainedNodes: !7326)
!7326 = !{!7327}
!7327 = !DILocalVariable(name: "result", scope: !7325, file: !6280, line: 1029, type: !118)
!7328 = distinct !DILocation(line: 48, column: 10, scope: !7329, inlinedAt: !7333)
!7329 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7330, file: !7330, line: 46, type: !7331, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2668, retainedNodes: !2000)
!7330 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7331 = !DISubroutineType(types: !7332)
!7332 = !{!345}
!7333 = distinct !DILocation(line: 30, column: 7, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !7210, line: 30, column: 7)
!7335 = distinct !DILexicalBlock(scope: !7321, file: !7210, line: 29, column: 26)
!7336 = !{i64 2828198}
!7337 = !DILocation(line: 0, scope: !7325, inlinedAt: !7328)
!7338 = !DILocation(line: 48, column: 9, scope: !7329, inlinedAt: !7333)
!7339 = !DILocation(line: 30, column: 7, scope: !7335)
!7340 = !DILocation(line: 42, column: 14, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7334, file: !7210, line: 30, column: 25)
!7342 = !DILocation(line: 48, column: 15, scope: !7341)
!7343 = !DILocation(line: 49, column: 3, scope: !7341)
!7344 = !DILocation(line: 52, column: 2, scope: !7209)
!7345 = !DILocation(line: 53, column: 1, scope: !7209)
!7346 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !392, file: !392, line: 127, type: !2936, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !2000)
!7347 = !DILocation(line: 134, column: 2, scope: !7346)
!7348 = !DILocation(line: 156, column: 1, scope: !7346)
!7349 = !DILocation(line: 0, scope: !391)
!7350 = !DILocation(line: 289, column: 36, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !391, file: !392, line: 285, column: 2)
!7352 = !DILocation(line: 289, column: 42, scope: !7351)
!7353 = !DILocation(line: 300, column: 36, scope: !391)
!7354 = !DILocation(line: 301, column: 35, scope: !391)
!7355 = !DILocation(line: 302, column: 37, scope: !391)
!7356 = !DILocation(line: 311, column: 2, scope: !391)
!7357 = !DILocation(line: 316, column: 1, scope: !391)
!7358 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !561, file: !561, line: 180, type: !2936, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2000)
!7359 = !DILocation(line: 188, column: 12, scope: !7358)
!7360 = !DILocation(line: 271, column: 3, scope: !7361, inlinedAt: !7362)
!7361 = distinct !DISubprogram(name: "__DSB", scope: !6280, file: !6280, line: 269, type: !2936, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2000)
!7362 = distinct !DILocation(line: 192, column: 2, scope: !7358)
!7363 = !{i64 2991333}
!7364 = !DILocation(line: 260, column: 3, scope: !7365, inlinedAt: !7366)
!7365 = distinct !DISubprogram(name: "__ISB", scope: !6280, file: !6280, line: 258, type: !2936, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2000)
!7366 = distinct !DILocation(line: 193, column: 2, scope: !7358)
!7367 = !{i64 2991050}
!7368 = !DILocation(line: 194, column: 1, scope: !7358)
!7369 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !561, file: !561, line: 199, type: !2936, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2000)
!7370 = !DILocation(line: 282, column: 3, scope: !7371, inlinedAt: !7372)
!7371 = distinct !DISubprogram(name: "__DMB", scope: !6280, file: !6280, line: 280, type: !2936, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2000)
!7372 = distinct !DILocation(line: 202, column: 2, scope: !7369)
!7373 = !{i64 2991609}
!7374 = !DILocation(line: 205, column: 12, scope: !7369)
!7375 = !DILocation(line: 206, column: 1, scope: !7369)
!7376 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !561, file: !561, line: 275, type: !7377, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7390)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{null, !7379, !1784, !6555, !6555}
!7379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7380, size: 32)
!7380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7381)
!7381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !7382)
!7382 = !{!7383, !7384, !7385}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7381, file: !505, line: 53, baseType: !22, size: 32)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7381, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7381, file: !505, line: 55, baseType: !7386, size: 32, offset: 64)
!7386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !7387)
!7387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !7388)
!7388 = !{!7389}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7387, file: !511, line: 150, baseType: !118, size: 32)
!7390 = !{!7391, !7392, !7393, !7394}
!7391 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7376, file: !561, line: 276, type: !7379)
!7392 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7376, file: !561, line: 276, type: !1784)
!7393 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7376, file: !561, line: 277, type: !6555)
!7394 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7376, file: !561, line: 277, type: !6555)
!7395 = !DILocation(line: 0, scope: !7376)
!7396 = !DILocation(line: 279, column: 6, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7376, file: !561, line: 279, column: 6)
!7398 = !DILocation(line: 280, column: 57, scope: !7397)
!7399 = !DILocation(line: 279, column: 6, scope: !7376)
!7400 = !DILocation(line: 282, column: 3, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !561, line: 282, column: 3)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !561, line: 282, column: 3)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !561, line: 282, column: 3)
!7404 = distinct !DILexicalBlock(scope: !7397, file: !561, line: 280, column: 69)
!7405 = !DILocation(line: 285, column: 1, scope: !7376)
!7406 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7407, file: !7407, line: 220, type: !7408, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7410)
!7407 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!119, !7379, !1784, !6555, !6555}
!7410 = !{!7411, !7412, !7413, !7414, !7415}
!7411 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7406, file: !7407, line: 221, type: !7379)
!7412 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7406, file: !7407, line: 221, type: !1784)
!7413 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7406, file: !7407, line: 222, type: !6555)
!7414 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7406, file: !7407, line: 223, type: !6555)
!7415 = !DILocalVariable(name: "mpu_reg_index", scope: !7406, file: !7407, line: 225, type: !119)
!7416 = !DILocation(line: 0, scope: !7406)
!7417 = !DILocation(line: 225, column: 22, scope: !7406)
!7418 = !DILocation(line: 233, column: 18, scope: !7406)
!7419 = !DILocation(line: 236, column: 23, scope: !7406)
!7420 = !DILocation(line: 236, column: 21, scope: !7406)
!7421 = !DILocation(line: 238, column: 2, scope: !7406)
!7422 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !561, file: !561, line: 105, type: !7423, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7425)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{!119, !7379, !185, !185, !345}
!7425 = !{!7426, !7427, !7428, !7429, !7430, !7431}
!7426 = !DILocalVariable(name: "regions", arg: 1, scope: !7422, file: !561, line: 106, type: !7379)
!7427 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7422, file: !561, line: 106, type: !185)
!7428 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7422, file: !561, line: 106, type: !185)
!7429 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7422, file: !561, line: 107, type: !345)
!7430 = !DILocalVariable(name: "i", scope: !7422, file: !561, line: 109, type: !119)
!7431 = !DILocalVariable(name: "reg_index", scope: !7422, file: !561, line: 110, type: !119)
!7432 = !DILocation(line: 0, scope: !7422)
!7433 = !DILocation(line: 110, column: 18, scope: !7422)
!7434 = !DILocation(line: 112, column: 16, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !561, line: 112, column: 2)
!7436 = distinct !DILexicalBlock(scope: !7422, file: !561, line: 112, column: 2)
!7437 = !DILocation(line: 112, column: 2, scope: !7436)
!7438 = !DILocation(line: 113, column: 7, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !561, line: 113, column: 7)
!7440 = distinct !DILexicalBlock(scope: !7435, file: !561, line: 112, column: 36)
!7441 = !DILocation(line: 113, column: 18, scope: !7439)
!7442 = !DILocation(line: 113, column: 23, scope: !7439)
!7443 = !DILocation(line: 113, column: 7, scope: !7440)
!7444 = !DILocation(line: 118, column: 23, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7440, file: !561, line: 118, column: 7)
!7446 = !DILocation(line: 119, column: 7, scope: !7445)
!7447 = !DILocation(line: 118, column: 7, scope: !7440)
!7448 = !DILocation(line: 120, column: 4, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !561, line: 120, column: 4)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !561, line: 120, column: 4)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !561, line: 120, column: 4)
!7452 = distinct !DILexicalBlock(scope: !7453, file: !561, line: 120, column: 4)
!7453 = distinct !DILexicalBlock(scope: !7445, file: !561, line: 119, column: 45)
!7454 = !DILocation(line: 121, column: 4, scope: !7453)
!7455 = !DILocation(line: 124, column: 36, scope: !7440)
!7456 = !DILocation(line: 124, column: 15, scope: !7440)
!7457 = !DILocation(line: 126, column: 17, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7440, file: !561, line: 126, column: 7)
!7459 = !DILocation(line: 126, column: 7, scope: !7440)
!7460 = !DILocation(line: 131, column: 12, scope: !7440)
!7461 = !DILocation(line: 132, column: 2, scope: !7440)
!7462 = !DILocation(line: 112, column: 32, scope: !7435)
!7463 = distinct !{!7463, !7437, !7464}
!7464 = !DILocation(line: 132, column: 2, scope: !7436)
!7465 = !DILocation(line: 135, column: 1, scope: !7422)
!7466 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7407, file: !7407, line: 63, type: !7467, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7469)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!119, !7379}
!7469 = !{!7470, !7471}
!7470 = !DILocalVariable(name: "part", arg: 1, scope: !7466, file: !7407, line: 63, type: !7379)
!7471 = !DILocalVariable(name: "partition_is_valid", scope: !7466, file: !7407, line: 70, type: !119)
!7472 = !DILocation(line: 0, scope: !7466)
!7473 = !DILocation(line: 71, column: 11, scope: !7466)
!7474 = !DILocation(line: 71, column: 37, scope: !7466)
!7475 = !{i32 0, i32 33}
!7476 = !DILocation(line: 72, column: 3, scope: !7466)
!7477 = !DILocation(line: 71, column: 30, scope: !7466)
!7478 = !DILocation(line: 75, column: 11, scope: !7466)
!7479 = !DILocation(line: 75, column: 17, scope: !7466)
!7480 = !DILocation(line: 75, column: 38, scope: !7466)
!7481 = !DILocation(line: 77, column: 2, scope: !7466)
!7482 = distinct !DISubprogram(name: "mpu_configure_region", scope: !561, file: !561, line: 79, type: !7483, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7485)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!119, !1784, !7379}
!7485 = !{!7486, !7487, !7488}
!7486 = !DILocalVariable(name: "index", arg: 1, scope: !7482, file: !561, line: 79, type: !1784)
!7487 = !DILocalVariable(name: "new_region", arg: 2, scope: !7482, file: !561, line: 80, type: !7379)
!7488 = !DILocalVariable(name: "region_conf", scope: !7482, file: !561, line: 82, type: !550)
!7489 = !DILocation(line: 0, scope: !7482)
!7490 = !DILocation(line: 82, column: 2, scope: !7482)
!7491 = !DILocation(line: 82, column: 24, scope: !7482)
!7492 = !DILocation(line: 87, column: 33, scope: !7482)
!7493 = !DILocation(line: 87, column: 14, scope: !7482)
!7494 = !DILocation(line: 87, column: 19, scope: !7482)
!7495 = !DILocation(line: 91, column: 55, scope: !7482)
!7496 = !DILocation(line: 92, column: 16, scope: !7482)
!7497 = !DILocation(line: 92, column: 53, scope: !7482)
!7498 = !DILocation(line: 91, column: 2, scope: !7482)
!7499 = !DILocation(line: 95, column: 9, scope: !7482)
!7500 = !DILocation(line: 97, column: 1, scope: !7482)
!7501 = !DILocation(line: 95, column: 2, scope: !7482)
!7502 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7407, file: !7407, line: 113, type: !7503, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7508)
!7503 = !DISubroutineType(types: !7504)
!7504 = !{null, !7505, !7506, !118, !118}
!7505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!7506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7507, size: 32)
!7507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7386)
!7508 = !{!7509, !7510, !7511, !7512}
!7509 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7502, file: !7407, line: 114, type: !7505)
!7510 = !DILocalVariable(name: "attr", arg: 2, scope: !7502, file: !7407, line: 115, type: !7506)
!7511 = !DILocalVariable(name: "base", arg: 3, scope: !7502, file: !7407, line: 115, type: !118)
!7512 = !DILocalVariable(name: "size", arg: 4, scope: !7502, file: !7407, line: 115, type: !118)
!7513 = !DILocation(line: 0, scope: !7502)
!7514 = !DILocation(line: 127, column: 23, scope: !7502)
!7515 = !DILocation(line: 127, column: 35, scope: !7502)
!7516 = !DILocation(line: 127, column: 33, scope: !7502)
!7517 = !DILocation(line: 127, column: 10, scope: !7502)
!7518 = !DILocation(line: 127, column: 15, scope: !7502)
!7519 = !DILocation(line: 129, column: 1, scope: !7502)
!7520 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !561, file: !561, line: 57, type: !7521, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7523)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{!119, !1784, !548}
!7523 = !{!7524, !7525}
!7524 = !DILocalVariable(name: "index", arg: 1, scope: !7520, file: !561, line: 57, type: !1784)
!7525 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7520, file: !561, line: 58, type: !548)
!7526 = !DILocation(line: 0, scope: !7520)
!7527 = !DILocation(line: 61, column: 6, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7520, file: !561, line: 61, column: 6)
!7529 = !DILocation(line: 61, column: 12, scope: !7528)
!7530 = !DILocation(line: 61, column: 6, scope: !7520)
!7531 = !DILocation(line: 64, column: 3, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !561, line: 64, column: 3)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !561, line: 64, column: 3)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !561, line: 64, column: 3)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !561, line: 64, column: 3)
!7536 = distinct !DILexicalBlock(scope: !7528, file: !561, line: 61, column: 40)
!7537 = !DILocation(line: 65, column: 3, scope: !7536)
!7538 = !DILocation(line: 71, column: 2, scope: !7520)
!7539 = !DILocation(line: 73, column: 2, scope: !7520)
!7540 = !DILocation(line: 74, column: 1, scope: !7520)
!7541 = distinct !DISubprogram(name: "region_init", scope: !7407, file: !7407, line: 29, type: !7542, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7544)
!7542 = !DISubroutineType(types: !7543)
!7543 = !{null, !6555, !548}
!7544 = !{!7545, !7546}
!7545 = !DILocalVariable(name: "index", arg: 1, scope: !7541, file: !7407, line: 29, type: !6555)
!7546 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7541, file: !7407, line: 30, type: !548)
!7547 = !DILocation(line: 0, scope: !7541)
!7548 = !DILocation(line: 33, column: 2, scope: !7541)
!7549 = !DILocation(line: 47, column: 28, scope: !7541)
!7550 = !DILocation(line: 47, column: 33, scope: !7541)
!7551 = !DILocation(line: 48, column: 26, scope: !7541)
!7552 = !DILocation(line: 47, column: 12, scope: !7541)
!7553 = !DILocation(line: 49, column: 32, scope: !7541)
!7554 = !DILocation(line: 49, column: 37, scope: !7541)
!7555 = !DILocation(line: 49, column: 12, scope: !7541)
!7556 = !DILocation(line: 53, column: 1, scope: !7541)
!7557 = distinct !DISubprogram(name: "set_region_number", scope: !7558, file: !7558, line: 32, type: !6375, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7559)
!7558 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7559 = !{!7560}
!7560 = !DILocalVariable(name: "index", arg: 1, scope: !7557, file: !7558, line: 32, type: !118)
!7561 = !DILocation(line: 0, scope: !7557)
!7562 = !DILocation(line: 34, column: 11, scope: !7557)
!7563 = !DILocation(line: 35, column: 1, scope: !7557)
!7564 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7407, file: !7407, line: 88, type: !7565, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7567)
!7565 = !DISubroutineType(types: !7566)
!7566 = !{!118, !118}
!7567 = !{!7568}
!7568 = !DILocalVariable(name: "size", arg: 1, scope: !7564, file: !7407, line: 88, type: !118)
!7569 = !DILocation(line: 0, scope: !7564)
!7570 = !DILocation(line: 91, column: 11, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7564, file: !7407, line: 91, column: 6)
!7572 = !DILocation(line: 91, column: 6, scope: !7564)
!7573 = !DILocation(line: 100, column: 11, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7564, file: !7407, line: 100, column: 6)
!7575 = !DILocation(line: 100, column: 6, scope: !7564)
!7576 = !DILocation(line: 104, column: 35, scope: !7564)
!7577 = !DILocation(line: 104, column: 16, scope: !7564)
!7578 = !DILocation(line: 104, column: 50, scope: !7564)
!7579 = !DILocation(line: 104, column: 72, scope: !7564)
!7580 = !DILocation(line: 104, column: 2, scope: !7564)
!7581 = !DILocation(line: 106, column: 1, scope: !7564)
!7582 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !561, file: !561, line: 307, type: !7583, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7585)
!7583 = !DISubroutineType(types: !7584)
!7584 = !{null, !7379, !185}
!7585 = !{!7586, !7587}
!7586 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7582, file: !561, line: 308, type: !7379)
!7587 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7582, file: !561, line: 308, type: !185)
!7588 = !DILocation(line: 0, scope: !7582)
!7589 = !DILocation(line: 310, column: 6, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7582, file: !561, line: 310, column: 6)
!7591 = !DILocation(line: 311, column: 3, scope: !7590)
!7592 = !DILocation(line: 310, column: 6, scope: !7582)
!7593 = !DILocation(line: 313, column: 3, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !561, line: 313, column: 3)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !561, line: 313, column: 3)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !561, line: 313, column: 3)
!7597 = distinct !DILexicalBlock(scope: !7590, file: !561, line: 311, column: 15)
!7598 = !DILocation(line: 316, column: 1, scope: !7582)
!7599 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7407, file: !7407, line: 249, type: !7600, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7602)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{!119, !7379, !185}
!7602 = !{!7603, !7604, !7605, !7606}
!7603 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7599, file: !7407, line: 250, type: !7379)
!7604 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7599, file: !7407, line: 250, type: !185)
!7605 = !DILocalVariable(name: "mpu_reg_index", scope: !7599, file: !7407, line: 252, type: !119)
!7606 = !DILocalVariable(name: "i", scope: !7607, file: !7407, line: 264, type: !119)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !7407, line: 264, column: 3)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !7407, line: 261, column: 32)
!7609 = distinct !DILexicalBlock(scope: !7599, file: !7407, line: 261, column: 6)
!7610 = !DILocation(line: 0, scope: !7599)
!7611 = !DILocation(line: 252, column: 22, scope: !7599)
!7612 = !DILocation(line: 258, column: 18, scope: !7599)
!7613 = !DILocation(line: 261, column: 20, scope: !7609)
!7614 = !DILocation(line: 261, column: 6, scope: !7599)
!7615 = !DILocation(line: 0, scope: !7607)
!7616 = !DILocation(line: 265, column: 4, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7618, file: !7407, line: 264, column: 59)
!7618 = distinct !DILexicalBlock(scope: !7607, file: !7407, line: 264, column: 3)
!7619 = !DILocation(line: 264, column: 55, scope: !7618)
!7620 = !DILocation(line: 264, column: 33, scope: !7618)
!7621 = !DILocation(line: 264, column: 3, scope: !7607)
!7622 = distinct !{!7622, !7621, !7623}
!7623 = !DILocation(line: 266, column: 3, scope: !7607)
!7624 = !DILocation(line: 269, column: 2, scope: !7599)
!7625 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7626, file: !7626, line: 218, type: !6375, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7627)
!7626 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7627 = !{!7628}
!7628 = !DILocalVariable(name: "rnr", arg: 1, scope: !7625, file: !7626, line: 218, type: !118)
!7629 = !DILocation(line: 0, scope: !7625)
!7630 = !DILocation(line: 220, column: 12, scope: !7625)
!7631 = !DILocation(line: 221, column: 13, scope: !7625)
!7632 = !DILocation(line: 222, column: 1, scope: !7625)
!7633 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !561, file: !561, line: 326, type: !7634, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7636)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{!119}
!7636 = !{!7637}
!7637 = !DILocalVariable(name: "r_index", scope: !7633, file: !561, line: 328, type: !118)
!7638 = !DILocation(line: 330, column: 17, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7633, file: !561, line: 330, column: 6)
!7640 = !DILocation(line: 330, column: 29, scope: !7639)
!7641 = !DILocation(line: 330, column: 6, scope: !7633)
!7642 = !DILocation(line: 337, column: 3, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !561, line: 337, column: 3)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !561, line: 337, column: 3)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !561, line: 337, column: 3)
!7646 = distinct !DILexicalBlock(scope: !7639, file: !561, line: 330, column: 50)
!7647 = !DILocation(line: 347, column: 2, scope: !7633)
!7648 = !DILocation(line: 0, scope: !7633)
!7649 = !DILocation(line: 364, column: 29, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !561, line: 364, column: 2)
!7651 = distinct !DILexicalBlock(scope: !7633, file: !561, line: 364, column: 2)
!7652 = !DILocation(line: 364, column: 2, scope: !7651)
!7653 = !DILocation(line: 365, column: 25, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7650, file: !561, line: 364, column: 66)
!7655 = !DILocation(line: 365, column: 3, scope: !7654)
!7656 = !DILocation(line: 364, column: 62, scope: !7650)
!7657 = distinct !{!7657, !7652, !7658}
!7658 = !DILocation(line: 366, column: 2, scope: !7651)
!7659 = !DILocation(line: 369, column: 23, scope: !7633)
!7660 = !DILocation(line: 369, column: 21, scope: !7633)
!7661 = !DILocation(line: 372, column: 2, scope: !7633)
!7662 = !DILocation(line: 433, column: 2, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !561, line: 433, column: 2)
!7664 = distinct !DILexicalBlock(scope: !7633, file: !561, line: 433, column: 2)
!7665 = !DILocation(line: 433, column: 2, scope: !7664)
!7666 = !DILocation(line: 433, column: 2, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7663, file: !561, line: 433, column: 2)
!7668 = !DILocation(line: 444, column: 1, scope: !7633)
!7669 = distinct !DISubprogram(name: "strcpy", scope: !7670, file: !7670, line: 20, type: !7671, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7675)
!7670 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!106, !7673, !7674}
!7673 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7674 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !278)
!7675 = !{!7676, !7677, !7678}
!7676 = !DILocalVariable(name: "d", arg: 1, scope: !7669, file: !7670, line: 20, type: !7673)
!7677 = !DILocalVariable(name: "s", arg: 2, scope: !7669, file: !7670, line: 20, type: !7674)
!7678 = !DILocalVariable(name: "dest", scope: !7669, file: !7670, line: 22, type: !106)
!7679 = !DILocation(line: 0, scope: !7669)
!7680 = !DILocation(line: 24, column: 9, scope: !7669)
!7681 = !DILocation(line: 24, column: 12, scope: !7669)
!7682 = !DILocation(line: 24, column: 2, scope: !7669)
!7683 = !DILocation(line: 25, column: 6, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7669, file: !7670, line: 24, column: 21)
!7685 = !DILocation(line: 26, column: 4, scope: !7684)
!7686 = !DILocation(line: 27, column: 4, scope: !7684)
!7687 = distinct !{!7687, !7682, !7688}
!7688 = !DILocation(line: 28, column: 2, scope: !7669)
!7689 = !DILocation(line: 30, column: 5, scope: !7669)
!7690 = !DILocation(line: 32, column: 2, scope: !7669)
!7691 = distinct !DISubprogram(name: "strncpy", scope: !7670, file: !7670, line: 42, type: !7692, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7694)
!7692 = !DISubroutineType(types: !7693)
!7693 = !{!106, !7673, !7674, !239}
!7694 = !{!7695, !7696, !7697, !7698}
!7695 = !DILocalVariable(name: "d", arg: 1, scope: !7691, file: !7670, line: 42, type: !7673)
!7696 = !DILocalVariable(name: "s", arg: 2, scope: !7691, file: !7670, line: 42, type: !7674)
!7697 = !DILocalVariable(name: "n", arg: 3, scope: !7691, file: !7670, line: 42, type: !239)
!7698 = !DILocalVariable(name: "dest", scope: !7691, file: !7670, line: 44, type: !106)
!7699 = !DILocation(line: 0, scope: !7691)
!7700 = !DILocation(line: 46, column: 12, scope: !7691)
!7701 = !DILocation(line: 46, column: 17, scope: !7691)
!7702 = !DILocation(line: 46, column: 20, scope: !7691)
!7703 = !DILocation(line: 46, column: 23, scope: !7691)
!7704 = !DILocation(line: 46, column: 2, scope: !7691)
!7705 = !DILocation(line: 47, column: 6, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7691, file: !7670, line: 46, column: 32)
!7707 = !DILocation(line: 48, column: 4, scope: !7706)
!7708 = !DILocation(line: 49, column: 4, scope: !7706)
!7709 = !DILocation(line: 50, column: 4, scope: !7706)
!7710 = distinct !{!7710, !7704, !7711}
!7711 = !DILocation(line: 51, column: 2, scope: !7691)
!7712 = !DILocation(line: 54, column: 6, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7691, file: !7670, line: 53, column: 16)
!7714 = !DILocation(line: 55, column: 4, scope: !7713)
!7715 = !DILocation(line: 56, column: 4, scope: !7713)
!7716 = !DILocation(line: 53, column: 11, scope: !7691)
!7717 = !DILocation(line: 53, column: 2, scope: !7691)
!7718 = distinct !{!7718, !7717, !7719}
!7719 = !DILocation(line: 57, column: 2, scope: !7691)
!7720 = !DILocation(line: 59, column: 2, scope: !7691)
!7721 = distinct !DISubprogram(name: "strchr", scope: !7670, file: !7670, line: 69, type: !7722, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7724)
!7722 = !DISubroutineType(types: !7723)
!7723 = !{!106, !278, !119}
!7724 = !{!7725, !7726, !7727}
!7725 = !DILocalVariable(name: "s", arg: 1, scope: !7721, file: !7670, line: 69, type: !278)
!7726 = !DILocalVariable(name: "c", arg: 2, scope: !7721, file: !7670, line: 69, type: !119)
!7727 = !DILocalVariable(name: "tmp", scope: !7721, file: !7670, line: 71, type: !107)
!7728 = !DILocation(line: 0, scope: !7721)
!7729 = !DILocation(line: 73, column: 2, scope: !7721)
!7730 = !DILocation(line: 73, column: 10, scope: !7721)
!7731 = !DILocation(line: 73, column: 13, scope: !7721)
!7732 = !DILocation(line: 73, column: 21, scope: !7721)
!7733 = !DILocation(line: 74, column: 4, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7721, file: !7670, line: 73, column: 38)
!7735 = distinct !{!7735, !7729, !7736}
!7736 = !DILocation(line: 75, column: 2, scope: !7721)
!7737 = !DILocation(line: 77, column: 9, scope: !7721)
!7738 = !DILocation(line: 77, column: 2, scope: !7721)
!7739 = distinct !DISubprogram(name: "strrchr", scope: !7670, file: !7670, line: 87, type: !7722, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7740)
!7740 = !{!7741, !7742, !7743}
!7741 = !DILocalVariable(name: "s", arg: 1, scope: !7739, file: !7670, line: 87, type: !278)
!7742 = !DILocalVariable(name: "c", arg: 2, scope: !7739, file: !7670, line: 87, type: !119)
!7743 = !DILocalVariable(name: "match", scope: !7739, file: !7670, line: 89, type: !106)
!7744 = !DILocation(line: 0, scope: !7739)
!7745 = !DILocation(line: 91, column: 2, scope: !7739)
!7746 = !DILocation(line: 92, column: 7, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7670, line: 92, column: 7)
!7748 = distinct !DILexicalBlock(scope: !7739, file: !7670, line: 91, column: 5)
!7749 = !DILocation(line: 92, column: 10, scope: !7747)
!7750 = !DILocation(line: 92, column: 7, scope: !7748)
!7751 = !DILocation(line: 95, column: 13, scope: !7739)
!7752 = !DILocation(line: 95, column: 2, scope: !7748)
!7753 = distinct !{!7753, !7745, !7754}
!7754 = !DILocation(line: 95, column: 15, scope: !7739)
!7755 = !DILocation(line: 97, column: 2, scope: !7739)
!7756 = distinct !DISubprogram(name: "strlen", scope: !7670, file: !7670, line: 107, type: !7757, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7759)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{!239, !278}
!7759 = !{!7760, !7761}
!7760 = !DILocalVariable(name: "s", arg: 1, scope: !7756, file: !7670, line: 107, type: !278)
!7761 = !DILocalVariable(name: "n", scope: !7756, file: !7670, line: 109, type: !239)
!7762 = !DILocation(line: 0, scope: !7756)
!7763 = !DILocation(line: 111, column: 9, scope: !7756)
!7764 = !DILocation(line: 111, column: 12, scope: !7756)
!7765 = !DILocation(line: 111, column: 2, scope: !7756)
!7766 = !DILocation(line: 112, column: 4, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7756, file: !7670, line: 111, column: 21)
!7768 = !DILocation(line: 113, column: 4, scope: !7767)
!7769 = distinct !{!7769, !7765, !7770}
!7770 = !DILocation(line: 114, column: 2, scope: !7756)
!7771 = !DILocation(line: 116, column: 2, scope: !7756)
!7772 = distinct !DISubprogram(name: "strnlen", scope: !7670, file: !7670, line: 126, type: !7773, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7775)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!239, !278, !239}
!7775 = !{!7776, !7777, !7778}
!7776 = !DILocalVariable(name: "s", arg: 1, scope: !7772, file: !7670, line: 126, type: !278)
!7777 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7772, file: !7670, line: 126, type: !239)
!7778 = !DILocalVariable(name: "n", scope: !7772, file: !7670, line: 128, type: !239)
!7779 = !DILocation(line: 0, scope: !7772)
!7780 = !DILocation(line: 130, column: 9, scope: !7772)
!7781 = !DILocation(line: 130, column: 12, scope: !7772)
!7782 = !DILocation(line: 130, column: 20, scope: !7772)
!7783 = !DILocation(line: 130, column: 2, scope: !7772)
!7784 = !DILocation(line: 131, column: 4, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7772, file: !7670, line: 130, column: 35)
!7786 = !DILocation(line: 132, column: 4, scope: !7785)
!7787 = distinct !{!7787, !7783, !7788}
!7788 = !DILocation(line: 133, column: 2, scope: !7772)
!7789 = !DILocation(line: 135, column: 2, scope: !7772)
!7790 = distinct !DISubprogram(name: "strcmp", scope: !7670, file: !7670, line: 145, type: !7791, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!119, !278, !278}
!7793 = !{!7794, !7795}
!7794 = !DILocalVariable(name: "s1", arg: 1, scope: !7790, file: !7670, line: 145, type: !278)
!7795 = !DILocalVariable(name: "s2", arg: 2, scope: !7790, file: !7670, line: 145, type: !278)
!7796 = !DILocation(line: 0, scope: !7790)
!7797 = !DILocation(line: 147, column: 10, scope: !7790)
!7798 = !DILocation(line: 147, column: 17, scope: !7790)
!7799 = !DILocation(line: 147, column: 14, scope: !7790)
!7800 = !DILocation(line: 147, column: 22, scope: !7790)
!7801 = !DILocation(line: 148, column: 5, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7790, file: !7670, line: 147, column: 40)
!7803 = !DILocation(line: 149, column: 5, scope: !7802)
!7804 = distinct !{!7804, !7805, !7806}
!7805 = !DILocation(line: 147, column: 2, scope: !7790)
!7806 = !DILocation(line: 150, column: 2, scope: !7790)
!7807 = !DILocation(line: 152, column: 9, scope: !7790)
!7808 = !DILocation(line: 152, column: 15, scope: !7790)
!7809 = !DILocation(line: 152, column: 13, scope: !7790)
!7810 = !DILocation(line: 152, column: 2, scope: !7790)
!7811 = distinct !DISubprogram(name: "strncmp", scope: !7670, file: !7670, line: 162, type: !7812, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7814)
!7812 = !DISubroutineType(types: !7813)
!7813 = !{!119, !278, !278, !239}
!7814 = !{!7815, !7816, !7817}
!7815 = !DILocalVariable(name: "s1", arg: 1, scope: !7811, file: !7670, line: 162, type: !278)
!7816 = !DILocalVariable(name: "s2", arg: 2, scope: !7811, file: !7670, line: 162, type: !278)
!7817 = !DILocalVariable(name: "n", arg: 3, scope: !7811, file: !7670, line: 162, type: !239)
!7818 = !DILocation(line: 0, scope: !7811)
!7819 = !DILocation(line: 164, column: 17, scope: !7811)
!7820 = !DILocation(line: 164, column: 21, scope: !7811)
!7821 = !DILocation(line: 164, column: 28, scope: !7811)
!7822 = !DILocation(line: 164, column: 25, scope: !7811)
!7823 = !DILocation(line: 164, column: 33, scope: !7811)
!7824 = !DILocation(line: 165, column: 5, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7811, file: !7670, line: 164, column: 51)
!7826 = !DILocation(line: 166, column: 5, scope: !7825)
!7827 = !DILocation(line: 167, column: 4, scope: !7825)
!7828 = distinct !{!7828, !7829, !7830}
!7829 = !DILocation(line: 164, column: 2, scope: !7811)
!7830 = !DILocation(line: 168, column: 2, scope: !7811)
!7831 = !DILocation(line: 170, column: 25, scope: !7811)
!7832 = !DILocation(line: 170, column: 31, scope: !7811)
!7833 = !DILocation(line: 170, column: 29, scope: !7811)
!7834 = !DILocation(line: 170, column: 9, scope: !7811)
!7835 = !DILocation(line: 170, column: 2, scope: !7811)
!7836 = distinct !DISubprogram(name: "strtok_r", scope: !7670, file: !7670, line: 180, type: !7837, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7839)
!7837 = !DISubroutineType(types: !7838)
!7838 = !{!106, !106, !278, !283}
!7839 = !{!7840, !7841, !7842, !7843, !7844}
!7840 = !DILocalVariable(name: "str", arg: 1, scope: !7836, file: !7670, line: 180, type: !106)
!7841 = !DILocalVariable(name: "sep", arg: 2, scope: !7836, file: !7670, line: 180, type: !278)
!7842 = !DILocalVariable(name: "state", arg: 3, scope: !7836, file: !7670, line: 180, type: !283)
!7843 = !DILocalVariable(name: "start", scope: !7836, file: !7670, line: 182, type: !106)
!7844 = !DILocalVariable(name: "end", scope: !7836, file: !7670, line: 182, type: !106)
!7845 = !DILocation(line: 0, scope: !7836)
!7846 = !DILocation(line: 184, column: 10, scope: !7836)
!7847 = !DILocation(line: 184, column: 22, scope: !7836)
!7848 = !DILocation(line: 187, column: 9, scope: !7836)
!7849 = !DILocation(line: 187, column: 16, scope: !7836)
!7850 = !DILocation(line: 187, column: 19, scope: !7836)
!7851 = !DILocation(line: 187, column: 2, scope: !7836)
!7852 = !DILocation(line: 188, column: 8, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7836, file: !7670, line: 187, column: 40)
!7854 = distinct !{!7854, !7851, !7855}
!7855 = !DILocation(line: 189, column: 2, scope: !7836)
!7856 = !DILocation(line: 198, column: 9, scope: !7836)
!7857 = !DILocation(line: 198, column: 18, scope: !7836)
!7858 = !DILocation(line: 198, column: 17, scope: !7836)
!7859 = !DILocation(line: 198, column: 2, scope: !7836)
!7860 = !DILocation(line: 199, column: 6, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7836, file: !7670, line: 198, column: 37)
!7862 = !DILocation(line: 198, column: 14, scope: !7836)
!7863 = distinct !{!7863, !7859, !7864}
!7864 = !DILocation(line: 200, column: 2, scope: !7836)
!7865 = !DILocation(line: 203, column: 8, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !7670, line: 202, column: 20)
!7867 = distinct !DILexicalBlock(scope: !7836, file: !7670, line: 202, column: 6)
!7868 = !DILocation(line: 204, column: 16, scope: !7866)
!7869 = !DILocation(line: 205, column: 2, scope: !7866)
!7870 = !DILocation(line: 210, column: 1, scope: !7836)
!7871 = distinct !DISubprogram(name: "strcat", scope: !7670, file: !7670, line: 212, type: !7671, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7872)
!7872 = !{!7873, !7874}
!7873 = !DILocalVariable(name: "dest", arg: 1, scope: !7871, file: !7670, line: 212, type: !7673)
!7874 = !DILocalVariable(name: "src", arg: 2, scope: !7871, file: !7670, line: 212, type: !7674)
!7875 = !DILocation(line: 0, scope: !7871)
!7876 = !DILocation(line: 214, column: 16, scope: !7871)
!7877 = !DILocation(line: 214, column: 14, scope: !7871)
!7878 = !DILocation(line: 214, column: 2, scope: !7871)
!7879 = !DILocation(line: 215, column: 2, scope: !7871)
!7880 = distinct !DISubprogram(name: "strncat", scope: !7670, file: !7670, line: 218, type: !7692, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7881)
!7881 = !{!7882, !7883, !7884, !7885, !7886}
!7882 = !DILocalVariable(name: "dest", arg: 1, scope: !7880, file: !7670, line: 218, type: !7673)
!7883 = !DILocalVariable(name: "src", arg: 2, scope: !7880, file: !7670, line: 218, type: !7674)
!7884 = !DILocalVariable(name: "n", arg: 3, scope: !7880, file: !7670, line: 219, type: !239)
!7885 = !DILocalVariable(name: "orig_dest", scope: !7880, file: !7670, line: 221, type: !106)
!7886 = !DILocalVariable(name: "len", scope: !7880, file: !7670, line: 222, type: !239)
!7887 = !DILocation(line: 0, scope: !7880)
!7888 = !DILocation(line: 222, column: 15, scope: !7880)
!7889 = !DILocation(line: 224, column: 7, scope: !7880)
!7890 = !DILocation(line: 225, column: 14, scope: !7880)
!7891 = !DILocation(line: 225, column: 19, scope: !7880)
!7892 = !DILocation(line: 225, column: 11, scope: !7880)
!7893 = !DILocation(line: 225, column: 23, scope: !7880)
!7894 = !DILocation(line: 225, column: 28, scope: !7880)
!7895 = !DILocation(line: 225, column: 2, scope: !7880)
!7896 = !DILocation(line: 226, column: 17, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7880, file: !7670, line: 225, column: 38)
!7898 = !DILocation(line: 226, column: 8, scope: !7897)
!7899 = !DILocation(line: 226, column: 11, scope: !7897)
!7900 = distinct !{!7900, !7895, !7901}
!7901 = !DILocation(line: 227, column: 2, scope: !7880)
!7902 = !DILocation(line: 228, column: 8, scope: !7880)
!7903 = !DILocation(line: 230, column: 2, scope: !7880)
!7904 = distinct !DISubprogram(name: "memcmp", scope: !7670, file: !7670, line: 239, type: !7905, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7907)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{!119, !13, !13, !239}
!7907 = !{!7908, !7909, !7910, !7911, !7912}
!7908 = !DILocalVariable(name: "m1", arg: 1, scope: !7904, file: !7670, line: 239, type: !13)
!7909 = !DILocalVariable(name: "m2", arg: 2, scope: !7904, file: !7670, line: 239, type: !13)
!7910 = !DILocalVariable(name: "n", arg: 3, scope: !7904, file: !7670, line: 239, type: !239)
!7911 = !DILocalVariable(name: "c1", scope: !7904, file: !7670, line: 241, type: !278)
!7912 = !DILocalVariable(name: "c2", scope: !7904, file: !7670, line: 242, type: !278)
!7913 = !DILocation(line: 0, scope: !7904)
!7914 = !DILocation(line: 244, column: 7, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7904, file: !7670, line: 244, column: 6)
!7916 = !DILocation(line: 244, column: 6, scope: !7904)
!7917 = !DILocation(line: 248, column: 10, scope: !7904)
!7918 = !DILocation(line: 248, column: 14, scope: !7904)
!7919 = !DILocation(line: 248, column: 19, scope: !7904)
!7920 = !DILocation(line: 248, column: 2, scope: !7904)
!7921 = !DILocation(line: 248, column: 23, scope: !7904)
!7922 = !DILocation(line: 248, column: 30, scope: !7904)
!7923 = !DILocation(line: 248, column: 27, scope: !7904)
!7924 = !DILocation(line: 249, column: 5, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7904, file: !7670, line: 248, column: 36)
!7926 = !DILocation(line: 250, column: 5, scope: !7925)
!7927 = distinct !{!7927, !7920, !7928}
!7928 = !DILocation(line: 251, column: 2, scope: !7904)
!7929 = !DILocation(line: 253, column: 9, scope: !7904)
!7930 = !DILocation(line: 253, column: 15, scope: !7904)
!7931 = !DILocation(line: 253, column: 13, scope: !7904)
!7932 = !DILocation(line: 253, column: 2, scope: !7904)
!7933 = !DILocation(line: 254, column: 1, scope: !7904)
!7934 = distinct !DISubprogram(name: "memmove", scope: !7670, file: !7670, line: 263, type: !7935, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7937)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!113, !113, !13, !239}
!7937 = !{!7938, !7939, !7940, !7941, !7942}
!7938 = !DILocalVariable(name: "d", arg: 1, scope: !7934, file: !7670, line: 263, type: !113)
!7939 = !DILocalVariable(name: "s", arg: 2, scope: !7934, file: !7670, line: 263, type: !13)
!7940 = !DILocalVariable(name: "n", arg: 3, scope: !7934, file: !7670, line: 263, type: !239)
!7941 = !DILocalVariable(name: "dest", scope: !7934, file: !7670, line: 265, type: !106)
!7942 = !DILocalVariable(name: "src", scope: !7934, file: !7670, line: 266, type: !278)
!7943 = !DILocation(line: 0, scope: !7934)
!7944 = !DILocation(line: 268, column: 21, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7934, file: !7670, line: 268, column: 6)
!7946 = !DILocation(line: 268, column: 28, scope: !7945)
!7947 = !DILocation(line: 268, column: 6, scope: !7934)
!7948 = !DILocation(line: 280, column: 12, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !7670, line: 278, column: 9)
!7950 = !DILocation(line: 280, column: 3, scope: !7949)
!7951 = !DILocation(line: 275, column: 5, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7953, file: !7670, line: 274, column: 17)
!7953 = distinct !DILexicalBlock(scope: !7945, file: !7670, line: 268, column: 33)
!7954 = !DILocation(line: 276, column: 14, scope: !7952)
!7955 = !DILocation(line: 276, column: 4, scope: !7952)
!7956 = !DILocation(line: 276, column: 12, scope: !7952)
!7957 = !DILocation(line: 274, column: 12, scope: !7953)
!7958 = !DILocation(line: 274, column: 3, scope: !7953)
!7959 = distinct !{!7959, !7958, !7960}
!7960 = !DILocation(line: 277, column: 3, scope: !7953)
!7961 = !DILocation(line: 281, column: 12, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7949, file: !7670, line: 280, column: 17)
!7963 = !DILocation(line: 281, column: 10, scope: !7962)
!7964 = !DILocation(line: 282, column: 8, scope: !7962)
!7965 = !DILocation(line: 283, column: 7, scope: !7962)
!7966 = !DILocation(line: 284, column: 5, scope: !7962)
!7967 = distinct !{!7967, !7950, !7968}
!7968 = !DILocation(line: 285, column: 3, scope: !7949)
!7969 = !DILocation(line: 288, column: 2, scope: !7934)
!7970 = distinct !DISubprogram(name: "memcpy", scope: !7670, file: !7670, line: 298, type: !7971, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7975)
!7971 = !DISubroutineType(types: !7972)
!7972 = !{!113, !7973, !7974, !239}
!7973 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !113)
!7974 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7975 = !{!7976, !7977, !7978, !7979, !7980}
!7976 = !DILocalVariable(name: "d", arg: 1, scope: !7970, file: !7670, line: 298, type: !7973)
!7977 = !DILocalVariable(name: "s", arg: 2, scope: !7970, file: !7670, line: 298, type: !7974)
!7978 = !DILocalVariable(name: "n", arg: 3, scope: !7970, file: !7670, line: 298, type: !239)
!7979 = !DILocalVariable(name: "d_byte", scope: !7970, file: !7670, line: 302, type: !969)
!7980 = !DILocalVariable(name: "s_byte", scope: !7970, file: !7670, line: 303, type: !2699)
!7981 = !DILocation(line: 0, scope: !7970)
!7982 = !DILocation(line: 337, column: 11, scope: !7970)
!7983 = !DILocation(line: 337, column: 2, scope: !7970)
!7984 = !DILocation(line: 338, column: 25, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7970, file: !7670, line: 337, column: 16)
!7986 = !DILocation(line: 338, column: 17, scope: !7985)
!7987 = !DILocation(line: 338, column: 11, scope: !7985)
!7988 = !DILocation(line: 338, column: 15, scope: !7985)
!7989 = !DILocation(line: 339, column: 4, scope: !7985)
!7990 = distinct !{!7990, !7983, !7991}
!7991 = !DILocation(line: 340, column: 2, scope: !7970)
!7992 = !DILocation(line: 342, column: 2, scope: !7970)
!7993 = distinct !DISubprogram(name: "memset", scope: !7670, file: !7670, line: 352, type: !7994, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7996)
!7994 = !DISubroutineType(types: !7995)
!7995 = !{!113, !113, !119, !239}
!7996 = !{!7997, !7998, !7999, !8000, !8001}
!7997 = !DILocalVariable(name: "buf", arg: 1, scope: !7993, file: !7670, line: 352, type: !113)
!7998 = !DILocalVariable(name: "c", arg: 2, scope: !7993, file: !7670, line: 352, type: !119)
!7999 = !DILocalVariable(name: "n", arg: 3, scope: !7993, file: !7670, line: 352, type: !239)
!8000 = !DILocalVariable(name: "d_byte", scope: !7993, file: !7670, line: 356, type: !969)
!8001 = !DILocalVariable(name: "c_byte", scope: !7993, file: !7670, line: 357, type: !186)
!8002 = !DILocation(line: 0, scope: !7993)
!8003 = !DILocation(line: 357, column: 25, scope: !7993)
!8004 = !DILocation(line: 389, column: 11, scope: !7993)
!8005 = !DILocation(line: 389, column: 2, scope: !7993)
!8006 = !DILocation(line: 390, column: 11, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7993, file: !7670, line: 389, column: 16)
!8008 = !DILocation(line: 390, column: 15, scope: !8007)
!8009 = !DILocation(line: 391, column: 4, scope: !8007)
!8010 = distinct !{!8010, !8005, !8011}
!8011 = !DILocation(line: 392, column: 2, scope: !7993)
!8012 = !DILocation(line: 394, column: 2, scope: !7993)
!8013 = distinct !DISubprogram(name: "memchr", scope: !7670, file: !7670, line: 404, type: !8014, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !8016)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!113, !13, !119, !239}
!8016 = !{!8017, !8018, !8019, !8020}
!8017 = !DILocalVariable(name: "s", arg: 1, scope: !8013, file: !7670, line: 404, type: !13)
!8018 = !DILocalVariable(name: "c", arg: 2, scope: !8013, file: !7670, line: 404, type: !119)
!8019 = !DILocalVariable(name: "n", arg: 3, scope: !8013, file: !7670, line: 404, type: !239)
!8020 = !DILocalVariable(name: "p", scope: !8021, file: !7670, line: 407, type: !2699)
!8021 = distinct !DILexicalBlock(scope: !8022, file: !7670, line: 406, column: 14)
!8022 = distinct !DILexicalBlock(scope: !8013, file: !7670, line: 406, column: 6)
!8023 = !DILocation(line: 0, scope: !8013)
!8024 = !DILocation(line: 406, column: 8, scope: !8022)
!8025 = !DILocation(line: 406, column: 6, scope: !8013)
!8026 = !DILocation(line: 409, column: 3, scope: !8021)
!8027 = !DILocation(line: 0, scope: !8021)
!8028 = !DILocation(line: 410, column: 8, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !7670, line: 410, column: 8)
!8030 = distinct !DILexicalBlock(scope: !8021, file: !7670, line: 409, column: 6)
!8031 = !DILocation(line: 410, column: 13, scope: !8029)
!8032 = !DILocation(line: 410, column: 8, scope: !8030)
!8033 = distinct !{!8033, !8026, !8034}
!8034 = !DILocation(line: 414, column: 20, scope: !8021)
!8035 = !DILocation(line: 417, column: 2, scope: !8013)
!8036 = !DILocation(line: 418, column: 1, scope: !8013)
!8037 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !571, file: !571, line: 23, type: !4185, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8038)
!8038 = !{!8039}
!8039 = !DILocalVariable(name: "hook", arg: 1, scope: !8037, file: !571, line: 23, type: !300)
!8040 = !DILocation(line: 0, scope: !8037)
!8041 = !DILocation(line: 25, column: 15, scope: !8037)
!8042 = !DILocation(line: 26, column: 1, scope: !8037)
!8043 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !571, file: !571, line: 14, type: !301, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8044)
!8044 = !{!8045}
!8045 = !DILocalVariable(name: "c", arg: 1, scope: !8043, file: !571, line: 14, type: !119)
!8046 = !DILocation(line: 0, scope: !8043)
!8047 = !DILocation(line: 18, column: 2, scope: !8043)
!8048 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !571, file: !571, line: 28, type: !8049, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8051)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!119, !119, !567}
!8051 = !{!8052, !8053}
!8052 = !DILocalVariable(name: "c", arg: 1, scope: !8048, file: !571, line: 28, type: !119)
!8053 = !DILocalVariable(name: "stream", arg: 2, scope: !8048, file: !571, line: 28, type: !567)
!8054 = !DILocation(line: 0, scope: !8048)
!8055 = !DILocation(line: 30, column: 27, scope: !8048)
!8056 = !DILocation(line: 30, column: 50, scope: !8048)
!8057 = !DILocation(line: 30, column: 9, scope: !8048)
!8058 = !DILocation(line: 30, column: 2, scope: !8048)
!8059 = distinct !DISubprogram(name: "fputc", scope: !571, file: !571, line: 41, type: !8049, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8060)
!8060 = !{!8061, !8062}
!8061 = !DILocalVariable(name: "c", arg: 1, scope: !8059, file: !571, line: 41, type: !119)
!8062 = !DILocalVariable(name: "stream", arg: 2, scope: !8059, file: !571, line: 41, type: !567)
!8063 = !DILocation(line: 0, scope: !8059)
!8064 = !DILocation(line: 43, column: 9, scope: !8059)
!8065 = !DILocation(line: 43, column: 2, scope: !8059)
!8066 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8067, file: !8067, line: 72, type: !8049, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8068)
!8067 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!8068 = !{!8069, !8070}
!8069 = !DILocalVariable(name: "c", arg: 1, scope: !8066, file: !8067, line: 72, type: !119)
!8070 = !DILocalVariable(name: "stream", arg: 2, scope: !8066, file: !8067, line: 72, type: !567)
!8071 = !DILocation(line: 0, scope: !8066)
!8072 = !DILocation(line: 81, column: 2, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8066, file: !8067, line: 81, column: 2)
!8074 = !{i64 2154135080}
!8075 = !DILocation(line: 82, column: 9, scope: !8066)
!8076 = !DILocation(line: 82, column: 2, scope: !8066)
!8077 = distinct !DISubprogram(name: "fputs", scope: !571, file: !571, line: 46, type: !8078, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8081)
!8078 = !DISubroutineType(types: !8079)
!8079 = !{!119, !7674, !8080}
!8080 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !567)
!8081 = !{!8082, !8083, !8084, !8085}
!8082 = !DILocalVariable(name: "s", arg: 1, scope: !8077, file: !571, line: 46, type: !7674)
!8083 = !DILocalVariable(name: "stream", arg: 2, scope: !8077, file: !571, line: 46, type: !8080)
!8084 = !DILocalVariable(name: "len", scope: !8077, file: !571, line: 48, type: !119)
!8085 = !DILocalVariable(name: "ret", scope: !8077, file: !571, line: 49, type: !119)
!8086 = !DILocation(line: 0, scope: !8077)
!8087 = !DILocation(line: 48, column: 12, scope: !8077)
!8088 = !DILocation(line: 51, column: 8, scope: !8077)
!8089 = !DILocation(line: 53, column: 13, scope: !8077)
!8090 = !DILocation(line: 53, column: 9, scope: !8077)
!8091 = !DILocation(line: 53, column: 2, scope: !8077)
!8092 = distinct !DISubprogram(name: "fwrite", scope: !571, file: !571, line: 99, type: !8093, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8095)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!239, !7974, !239, !239, !8080}
!8095 = !{!8096, !8097, !8098, !8099}
!8096 = !DILocalVariable(name: "ptr", arg: 1, scope: !8092, file: !571, line: 99, type: !7974)
!8097 = !DILocalVariable(name: "size", arg: 2, scope: !8092, file: !571, line: 99, type: !239)
!8098 = !DILocalVariable(name: "nitems", arg: 3, scope: !8092, file: !571, line: 99, type: !239)
!8099 = !DILocalVariable(name: "stream", arg: 4, scope: !8092, file: !571, line: 100, type: !8080)
!8100 = !DILocation(line: 0, scope: !8092)
!8101 = !DILocation(line: 102, column: 9, scope: !8092)
!8102 = !DILocation(line: 102, column: 2, scope: !8092)
!8103 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8067, file: !8067, line: 96, type: !8093, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8104)
!8104 = !{!8105, !8106, !8107, !8108}
!8105 = !DILocalVariable(name: "ptr", arg: 1, scope: !8103, file: !8067, line: 96, type: !7974)
!8106 = !DILocalVariable(name: "size", arg: 2, scope: !8103, file: !8067, line: 96, type: !239)
!8107 = !DILocalVariable(name: "nitems", arg: 3, scope: !8103, file: !8067, line: 96, type: !239)
!8108 = !DILocalVariable(name: "stream", arg: 4, scope: !8103, file: !8067, line: 96, type: !8080)
!8109 = !DILocation(line: 0, scope: !8103)
!8110 = !DILocation(line: 107, column: 2, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8103, file: !8067, line: 107, column: 2)
!8112 = !{i64 2154135184}
!8113 = !DILocation(line: 108, column: 9, scope: !8103)
!8114 = !DILocation(line: 108, column: 2, scope: !8103)
!8115 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !571, file: !571, line: 56, type: !8093, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8116)
!8116 = !{!8117, !8118, !8119, !8120, !8121, !8122, !8123, !8124}
!8117 = !DILocalVariable(name: "ptr", arg: 1, scope: !8115, file: !571, line: 56, type: !7974)
!8118 = !DILocalVariable(name: "size", arg: 2, scope: !8115, file: !571, line: 56, type: !239)
!8119 = !DILocalVariable(name: "nitems", arg: 3, scope: !8115, file: !571, line: 57, type: !239)
!8120 = !DILocalVariable(name: "stream", arg: 4, scope: !8115, file: !571, line: 57, type: !8080)
!8121 = !DILocalVariable(name: "i", scope: !8115, file: !571, line: 59, type: !239)
!8122 = !DILocalVariable(name: "j", scope: !8115, file: !571, line: 60, type: !239)
!8123 = !DILocalVariable(name: "p", scope: !8115, file: !571, line: 61, type: !2699)
!8124 = !DILabel(scope: !8115, name: "done", file: !571, line: 82)
!8125 = !DILocation(line: 0, scope: !8115)
!8126 = !DILocation(line: 63, column: 14, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8115, file: !571, line: 63, column: 6)
!8128 = !DILocation(line: 63, column: 24, scope: !8127)
!8129 = !DILocation(line: 72, column: 3, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8115, file: !571, line: 70, column: 5)
!8131 = !DILocation(line: 0, scope: !8130)
!8132 = !DILocation(line: 73, column: 8, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !571, line: 73, column: 8)
!8134 = distinct !DILexicalBlock(scope: !8130, file: !571, line: 72, column: 6)
!8135 = !DILocation(line: 73, column: 29, scope: !8133)
!8136 = !DILocation(line: 73, column: 27, scope: !8133)
!8137 = !DILocation(line: 73, column: 21, scope: !8133)
!8138 = !DILocation(line: 73, column: 33, scope: !8133)
!8139 = !DILocation(line: 73, column: 8, scope: !8134)
!8140 = !DILocation(line: 76, column: 5, scope: !8134)
!8141 = !DILocation(line: 77, column: 14, scope: !8130)
!8142 = !DILocation(line: 77, column: 3, scope: !8134)
!8143 = distinct !{!8143, !8129, !8144}
!8144 = !DILocation(line: 77, column: 17, scope: !8130)
!8145 = !DILocation(line: 79, column: 4, scope: !8130)
!8146 = !DILocation(line: 80, column: 13, scope: !8115)
!8147 = !DILocation(line: 80, column: 2, scope: !8130)
!8148 = distinct !{!8148, !8149, !8150}
!8149 = !DILocation(line: 70, column: 2, scope: !8115)
!8150 = !DILocation(line: 80, column: 16, scope: !8115)
!8151 = !DILocation(line: 82, column: 1, scope: !8115)
!8152 = !DILocation(line: 83, column: 17, scope: !8115)
!8153 = !DILocation(line: 83, column: 2, scope: !8115)
!8154 = !DILocation(line: 84, column: 1, scope: !8115)
!8155 = distinct !DISubprogram(name: "puts", scope: !571, file: !571, line: 106, type: !8156, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8158)
!8156 = !DISubroutineType(types: !8157)
!8157 = !{!119, !278}
!8158 = !{!8159}
!8159 = !DILocalVariable(name: "s", arg: 1, scope: !8155, file: !571, line: 106, type: !278)
!8160 = !DILocation(line: 0, scope: !8155)
!8161 = !DILocation(line: 108, column: 6, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8155, file: !571, line: 108, column: 6)
!8163 = !DILocation(line: 108, column: 23, scope: !8162)
!8164 = !DILocation(line: 108, column: 6, scope: !8155)
!8165 = !DILocation(line: 112, column: 9, scope: !8155)
!8166 = !DILocation(line: 112, column: 29, scope: !8155)
!8167 = !DILocation(line: 112, column: 2, scope: !8155)
!8168 = !DILocation(line: 113, column: 1, scope: !8155)
!8169 = distinct !DISubprogram(name: "snprintf", scope: !8170, file: !8170, line: 28, type: !8171, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !8173)
!8170 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8171 = !DISubroutineType(types: !8172)
!8172 = !{!119, !7673, !239, !7674, null}
!8173 = !{!8174, !8175, !8176, !8177, !8184, !8189, !8190}
!8174 = !DILocalVariable(name: "str", arg: 1, scope: !8169, file: !8170, line: 28, type: !7673)
!8175 = !DILocalVariable(name: "len", arg: 2, scope: !8169, file: !8170, line: 28, type: !239)
!8176 = !DILocalVariable(name: "format", arg: 3, scope: !8169, file: !8170, line: 29, type: !7674)
!8177 = !DILocalVariable(name: "vargs", scope: !8169, file: !8170, line: 31, type: !8178)
!8178 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3269, line: 99, baseType: !8179)
!8179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3269, line: 40, baseType: !8180)
!8180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !8170, baseType: !8181)
!8181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !8182)
!8182 = !{!8183}
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !8181, file: !8170, line: 31, baseType: !113, size: 32)
!8184 = !DILocalVariable(name: "p", scope: !8169, file: !8170, line: 33, type: !8185)
!8185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emitter", file: !8170, line: 13, size: 64, elements: !8186)
!8186 = !{!8187, !8188}
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8185, file: !8170, line: 14, baseType: !106, size: 32)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8185, file: !8170, line: 15, baseType: !119, size: 32, offset: 32)
!8189 = !DILocalVariable(name: "r", scope: !8169, file: !8170, line: 34, type: !119)
!8190 = !DILocalVariable(name: "dummy", scope: !8169, file: !8170, line: 35, type: !107)
!8191 = !DILocation(line: 0, scope: !8169)
!8192 = !DILocation(line: 31, column: 2, scope: !8169)
!8193 = !DILocation(line: 31, column: 10, scope: !8169)
!8194 = !DILocation(line: 33, column: 2, scope: !8169)
!8195 = !DILocation(line: 33, column: 17, scope: !8169)
!8196 = !DILocation(line: 35, column: 2, scope: !8169)
!8197 = !DILocation(line: 37, column: 10, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8169, file: !8170, line: 37, column: 6)
!8199 = !DILocation(line: 37, column: 6, scope: !8169)
!8200 = !DILocation(line: 41, column: 4, scope: !8169)
!8201 = !DILocation(line: 41, column: 8, scope: !8169)
!8202 = !DILocation(line: 42, column: 4, scope: !8169)
!8203 = !DILocation(line: 42, column: 8, scope: !8169)
!8204 = !DILocation(line: 44, column: 2, scope: !8169)
!8205 = !DILocation(line: 45, column: 6, scope: !8169)
!8206 = !DILocation(line: 46, column: 2, scope: !8169)
!8207 = !DILocation(line: 48, column: 6, scope: !8169)
!8208 = !DILocation(line: 48, column: 11, scope: !8169)
!8209 = !DILocation(line: 50, column: 1, scope: !8169)
!8210 = !DILocation(line: 49, column: 2, scope: !8169)
!8211 = distinct !DISubprogram(name: "cbvprintf", scope: !3301, file: !3301, line: 739, type: !8212, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !8214)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{!119, !3651, !113, !278, !8178}
!8214 = !{!8215, !8216, !8217, !8218}
!8215 = !DILocalVariable(name: "out", arg: 1, scope: !8211, file: !3301, line: 739, type: !3651)
!8216 = !DILocalVariable(name: "ctx", arg: 2, scope: !8211, file: !3301, line: 739, type: !113)
!8217 = !DILocalVariable(name: "format", arg: 3, scope: !8211, file: !3301, line: 739, type: !278)
!8218 = !DILocalVariable(name: "ap", arg: 4, scope: !8211, file: !3301, line: 739, type: !8178)
!8219 = !DILocation(line: 0, scope: !8211)
!8220 = !DILocation(line: 741, column: 9, scope: !8211)
!8221 = !DILocation(line: 741, column: 2, scope: !8211)
!8222 = distinct !DISubprogram(name: "sprintf_out", scope: !8170, file: !8170, line: 18, type: !8223, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !8226)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!119, !119, !8225}
!8225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8185, size: 32)
!8226 = !{!8227, !8228}
!8227 = !DILocalVariable(name: "c", arg: 1, scope: !8222, file: !8170, line: 18, type: !119)
!8228 = !DILocalVariable(name: "p", arg: 2, scope: !8222, file: !8170, line: 18, type: !8225)
!8229 = !DILocation(line: 0, scope: !8222)
!8230 = !DILocation(line: 20, column: 9, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8222, file: !8170, line: 20, column: 6)
!8232 = !DILocation(line: 20, column: 13, scope: !8231)
!8233 = !DILocation(line: 20, column: 6, scope: !8222)
!8234 = !DILocation(line: 21, column: 15, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8231, file: !8170, line: 20, column: 18)
!8236 = !DILocation(line: 21, column: 8, scope: !8235)
!8237 = !DILocation(line: 21, column: 13, scope: !8235)
!8238 = !DILocation(line: 22, column: 10, scope: !8235)
!8239 = !DILocation(line: 23, column: 10, scope: !8235)
!8240 = !DILocation(line: 24, column: 2, scope: !8235)
!8241 = !DILocation(line: 25, column: 2, scope: !8222)
!8242 = distinct !DISubprogram(name: "sprintf", scope: !8170, file: !8170, line: 52, type: !8243, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !8245)
!8243 = !DISubroutineType(types: !8244)
!8244 = !{!119, !7673, !7674, null}
!8245 = !{!8246, !8247, !8248, !8249, !8250}
!8246 = !DILocalVariable(name: "str", arg: 1, scope: !8242, file: !8170, line: 52, type: !7673)
!8247 = !DILocalVariable(name: "format", arg: 2, scope: !8242, file: !8170, line: 52, type: !7674)
!8248 = !DILocalVariable(name: "vargs", scope: !8242, file: !8170, line: 54, type: !8178)
!8249 = !DILocalVariable(name: "p", scope: !8242, file: !8170, line: 56, type: !8185)
!8250 = !DILocalVariable(name: "r", scope: !8242, file: !8170, line: 57, type: !119)
!8251 = !DILocation(line: 0, scope: !8242)
!8252 = !DILocation(line: 54, column: 2, scope: !8242)
!8253 = !DILocation(line: 54, column: 10, scope: !8242)
!8254 = !DILocation(line: 56, column: 2, scope: !8242)
!8255 = !DILocation(line: 56, column: 17, scope: !8242)
!8256 = !DILocation(line: 59, column: 4, scope: !8242)
!8257 = !DILocation(line: 59, column: 8, scope: !8242)
!8258 = !DILocation(line: 60, column: 4, scope: !8242)
!8259 = !DILocation(line: 60, column: 8, scope: !8242)
!8260 = !DILocation(line: 62, column: 2, scope: !8242)
!8261 = !DILocation(line: 63, column: 6, scope: !8242)
!8262 = !DILocation(line: 64, column: 2, scope: !8242)
!8263 = !DILocation(line: 66, column: 6, scope: !8242)
!8264 = !DILocation(line: 66, column: 11, scope: !8242)
!8265 = !DILocation(line: 68, column: 1, scope: !8242)
!8266 = !DILocation(line: 67, column: 2, scope: !8242)
!8267 = distinct !DISubprogram(name: "vsnprintf", scope: !8170, file: !8170, line: 70, type: !8268, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !8270)
!8268 = !DISubroutineType(types: !8269)
!8269 = !{!119, !7673, !239, !7674, !8178}
!8270 = !{!8271, !8272, !8273, !8274, !8275, !8276, !8277}
!8271 = !DILocalVariable(name: "str", arg: 1, scope: !8267, file: !8170, line: 70, type: !7673)
!8272 = !DILocalVariable(name: "len", arg: 2, scope: !8267, file: !8170, line: 70, type: !239)
!8273 = !DILocalVariable(name: "format", arg: 3, scope: !8267, file: !8170, line: 71, type: !7674)
!8274 = !DILocalVariable(name: "vargs", arg: 4, scope: !8267, file: !8170, line: 71, type: !8178)
!8275 = !DILocalVariable(name: "p", scope: !8267, file: !8170, line: 73, type: !8185)
!8276 = !DILocalVariable(name: "r", scope: !8267, file: !8170, line: 74, type: !119)
!8277 = !DILocalVariable(name: "dummy", scope: !8267, file: !8170, line: 75, type: !107)
!8278 = !DILocation(line: 0, scope: !8267)
!8279 = !DILocation(line: 73, column: 2, scope: !8267)
!8280 = !DILocation(line: 73, column: 17, scope: !8267)
!8281 = !DILocation(line: 75, column: 2, scope: !8267)
!8282 = !DILocation(line: 77, column: 10, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8267, file: !8170, line: 77, column: 6)
!8284 = !DILocation(line: 77, column: 6, scope: !8267)
!8285 = !DILocation(line: 81, column: 4, scope: !8267)
!8286 = !DILocation(line: 81, column: 8, scope: !8267)
!8287 = !DILocation(line: 82, column: 4, scope: !8267)
!8288 = !DILocation(line: 82, column: 8, scope: !8267)
!8289 = !DILocation(line: 84, column: 6, scope: !8267)
!8290 = !DILocation(line: 86, column: 6, scope: !8267)
!8291 = !DILocation(line: 86, column: 11, scope: !8267)
!8292 = !DILocation(line: 88, column: 1, scope: !8267)
!8293 = !DILocation(line: 87, column: 2, scope: !8267)
!8294 = distinct !DISubprogram(name: "vsprintf", scope: !8170, file: !8170, line: 90, type: !8295, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !8297)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{!119, !7673, !7674, !8178}
!8297 = !{!8298, !8299, !8300, !8301, !8302}
!8298 = !DILocalVariable(name: "str", arg: 1, scope: !8294, file: !8170, line: 90, type: !7673)
!8299 = !DILocalVariable(name: "format", arg: 2, scope: !8294, file: !8170, line: 90, type: !7674)
!8300 = !DILocalVariable(name: "vargs", arg: 3, scope: !8294, file: !8170, line: 91, type: !8178)
!8301 = !DILocalVariable(name: "p", scope: !8294, file: !8170, line: 93, type: !8185)
!8302 = !DILocalVariable(name: "r", scope: !8294, file: !8170, line: 94, type: !119)
!8303 = !DILocation(line: 0, scope: !8294)
!8304 = !DILocation(line: 93, column: 2, scope: !8294)
!8305 = !DILocation(line: 93, column: 17, scope: !8294)
!8306 = !DILocation(line: 96, column: 4, scope: !8294)
!8307 = !DILocation(line: 96, column: 8, scope: !8294)
!8308 = !DILocation(line: 97, column: 4, scope: !8294)
!8309 = !DILocation(line: 97, column: 8, scope: !8294)
!8310 = !DILocation(line: 99, column: 6, scope: !8294)
!8311 = !DILocation(line: 101, column: 6, scope: !8294)
!8312 = !DILocation(line: 101, column: 11, scope: !8294)
!8313 = !DILocation(line: 103, column: 1, scope: !8294)
!8314 = !DILocation(line: 102, column: 2, scope: !8294)
!8315 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !683, file: !683, line: 368, type: !736, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8316)
!8316 = !{!8317}
!8317 = !DILocalVariable(name: "dev", arg: 1, scope: !8315, file: !683, line: 368, type: !712)
!8318 = !DILocation(line: 0, scope: !8315)
!8319 = !DILocation(line: 370, column: 2, scope: !8315)
!8320 = !DILocation(line: 371, column: 1, scope: !8315)
!8321 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !683, file: !683, line: 243, type: !8322, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8324)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{null, !119, !119, !712}
!8324 = !{!8325, !8326, !8327, !8328, !8330}
!8325 = !DILocalVariable(name: "min", arg: 1, scope: !8321, file: !683, line: 243, type: !119)
!8326 = !DILocalVariable(name: "max", arg: 2, scope: !8321, file: !683, line: 243, type: !119)
!8327 = !DILocalVariable(name: "dev", arg: 3, scope: !8321, file: !683, line: 243, type: !712)
!8328 = !DILocalVariable(name: "data", scope: !8321, file: !683, line: 245, type: !8329)
!8329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 32)
!8330 = !DILocalVariable(name: "line", scope: !8321, file: !683, line: 246, type: !119)
!8331 = !DILocation(line: 0, scope: !8321)
!8332 = !DILocation(line: 245, column: 38, scope: !8321)
!8333 = !DILocation(line: 249, column: 24, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !683, line: 249, column: 2)
!8335 = distinct !DILexicalBlock(scope: !8321, file: !683, line: 249, column: 2)
!8336 = !DILocation(line: 249, column: 2, scope: !8335)
!8337 = !DILocation(line: 251, column: 7, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !683, line: 251, column: 7)
!8339 = distinct !DILexicalBlock(scope: !8334, file: !683, line: 249, column: 39)
!8340 = !DILocation(line: 251, column: 7, scope: !8339)
!8341 = !DILocation(line: 253, column: 4, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8338, file: !683, line: 251, column: 36)
!8343 = !DILocation(line: 256, column: 24, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8342, file: !683, line: 256, column: 8)
!8345 = !DILocation(line: 256, column: 9, scope: !8344)
!8346 = !DILocation(line: 256, column: 8, scope: !8342)
!8347 = !DILocation(line: 260, column: 43, scope: !8342)
!8348 = !DILocation(line: 260, column: 4, scope: !8342)
!8349 = !DILocation(line: 261, column: 3, scope: !8342)
!8350 = !DILocation(line: 249, column: 35, scope: !8334)
!8351 = distinct !{!8351, !8336, !8352}
!8352 = !DILocation(line: 262, column: 2, scope: !8335)
!8353 = !DILocation(line: 263, column: 1, scope: !8321)
!8354 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !683, file: !683, line: 158, type: !301, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8355)
!8355 = !{!8356}
!8356 = !DILocalVariable(name: "line", arg: 1, scope: !8354, file: !683, line: 158, type: !119)
!8357 = !DILocation(line: 0, scope: !8354)
!8358 = !DILocation(line: 170, column: 38, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !683, line: 160, column: 17)
!8360 = distinct !DILexicalBlock(scope: !8354, file: !683, line: 160, column: 6)
!8361 = !DILocation(line: 170, column: 10, scope: !8359)
!8362 = !DILocation(line: 176, column: 1, scope: !8354)
!8363 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !683, file: !683, line: 183, type: !8364, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8366)
!8364 = !DISubroutineType(types: !8365)
!8365 = !{null, !119}
!8366 = !{!8367}
!8367 = !DILocalVariable(name: "line", arg: 1, scope: !8363, file: !683, line: 183, type: !119)
!8368 = !DILocation(line: 0, scope: !8363)
!8369 = !DILocation(line: 195, column: 28, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !683, line: 185, column: 17)
!8371 = distinct !DILexicalBlock(scope: !8363, file: !683, line: 185, column: 6)
!8372 = !DILocation(line: 195, column: 3, scope: !8370)
!8373 = !DILocation(line: 200, column: 1, scope: !8363)
!8374 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8375, file: !8375, line: 910, type: !6375, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8376)
!8375 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8376 = !{!8377}
!8377 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8374, file: !8375, line: 910, type: !118)
!8378 = !DILocation(line: 0, scope: !8374)
!8379 = !DILocation(line: 912, column: 3, scope: !8374)
!8380 = !DILocation(line: 913, column: 1, scope: !8374)
!8381 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8375, file: !8375, line: 834, type: !7565, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8382)
!8382 = !{!8383}
!8383 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8381, file: !8375, line: 834, type: !118)
!8384 = !DILocation(line: 0, scope: !8381)
!8385 = !DILocation(line: 836, column: 11, scope: !8381)
!8386 = !DILocation(line: 836, column: 40, scope: !8381)
!8387 = !DILocation(line: 836, column: 3, scope: !8381)
!8388 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !683, file: !683, line: 304, type: !736, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8389)
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "dev", arg: 1, scope: !8388, file: !683, line: 304, type: !712)
!8391 = !DILocation(line: 0, scope: !8388)
!8392 = !DILocation(line: 306, column: 2, scope: !8388)
!8393 = !DILocation(line: 307, column: 1, scope: !8388)
!8394 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !683, file: !683, line: 299, type: !736, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8395)
!8395 = !{!8396}
!8396 = !DILocalVariable(name: "dev", arg: 1, scope: !8394, file: !683, line: 299, type: !712)
!8397 = !DILocation(line: 0, scope: !8394)
!8398 = !DILocation(line: 301, column: 2, scope: !8394)
!8399 = !DILocation(line: 302, column: 1, scope: !8394)
!8400 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !683, file: !683, line: 294, type: !736, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8401)
!8401 = !{!8402}
!8402 = !DILocalVariable(name: "dev", arg: 1, scope: !8400, file: !683, line: 294, type: !712)
!8403 = !DILocation(line: 0, scope: !8400)
!8404 = !DILocation(line: 296, column: 2, scope: !8400)
!8405 = !DILocation(line: 297, column: 1, scope: !8400)
!8406 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !683, file: !683, line: 397, type: !736, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8407)
!8407 = !{!8408}
!8408 = !DILocalVariable(name: "dev", arg: 1, scope: !8406, file: !683, line: 397, type: !712)
!8409 = !DILocation(line: 0, scope: !8406)
!8410 = !DILocation(line: 399, column: 2, scope: !8406)
!8411 = !DILocation(line: 400, column: 1, scope: !8406)
!8412 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !683, file: !683, line: 392, type: !736, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8413)
!8413 = !{!8414}
!8414 = !DILocalVariable(name: "dev", arg: 1, scope: !8412, file: !683, line: 392, type: !712)
!8415 = !DILocation(line: 0, scope: !8412)
!8416 = !DILocation(line: 394, column: 2, scope: !8412)
!8417 = !DILocation(line: 395, column: 1, scope: !8412)
!8418 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !683, file: !683, line: 289, type: !736, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8419)
!8419 = !{!8420}
!8420 = !DILocalVariable(name: "dev", arg: 1, scope: !8418, file: !683, line: 289, type: !712)
!8421 = !DILocation(line: 0, scope: !8418)
!8422 = !DILocation(line: 291, column: 2, scope: !8418)
!8423 = !DILocation(line: 292, column: 1, scope: !8418)
!8424 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !683, file: !683, line: 387, type: !736, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8425)
!8425 = !{!8426}
!8426 = !DILocalVariable(name: "dev", arg: 1, scope: !8424, file: !683, line: 387, type: !712)
!8427 = !DILocation(line: 0, scope: !8424)
!8428 = !DILocation(line: 389, column: 2, scope: !8424)
!8429 = !DILocation(line: 390, column: 1, scope: !8424)
!8430 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !683, file: !683, line: 382, type: !736, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8431)
!8431 = !{!8432}
!8432 = !DILocalVariable(name: "dev", arg: 1, scope: !8430, file: !683, line: 382, type: !712)
!8433 = !DILocation(line: 0, scope: !8430)
!8434 = !DILocation(line: 384, column: 2, scope: !8430)
!8435 = !DILocation(line: 385, column: 1, scope: !8430)
!8436 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !683, file: !683, line: 373, type: !736, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8437)
!8437 = !{!8438}
!8438 = !DILocalVariable(name: "dev", arg: 1, scope: !8436, file: !683, line: 373, type: !712)
!8439 = !DILocation(line: 0, scope: !8436)
!8440 = !DILocation(line: 375, column: 2, scope: !8436)
!8441 = !DILocation(line: 376, column: 1, scope: !8436)
!8442 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !683, file: !683, line: 284, type: !736, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8443)
!8443 = !{!8444}
!8444 = !DILocalVariable(name: "dev", arg: 1, scope: !8442, file: !683, line: 284, type: !712)
!8445 = !DILocation(line: 0, scope: !8442)
!8446 = !DILocation(line: 286, column: 2, scope: !8442)
!8447 = !DILocation(line: 287, column: 1, scope: !8442)
!8448 = distinct !DISubprogram(name: "stm32_exti_init", scope: !683, file: !683, line: 416, type: !710, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8449)
!8449 = !{!8450}
!8450 = !DILocalVariable(name: "dev", arg: 1, scope: !8448, file: !683, line: 416, type: !712)
!8451 = !DILocation(line: 0, scope: !8448)
!8452 = !DILocation(line: 418, column: 2, scope: !8448)
!8453 = !DILocation(line: 420, column: 2, scope: !8448)
!8454 = !DILocation(line: 0, scope: !735)
!8455 = !DILocation(line: 493, column: 2, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !735, file: !683, line: 493, column: 2)
!8457 = !DILocation(line: 497, column: 2, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !735, file: !683, line: 497, column: 2)
!8459 = !DILocation(line: 507, column: 2, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !735, file: !683, line: 507, column: 2)
!8461 = !DILocation(line: 512, column: 2, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !735, file: !683, line: 512, column: 2)
!8463 = !DILocation(line: 516, column: 2, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !735, file: !683, line: 516, column: 2)
!8465 = !DILocation(line: 523, column: 2, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !735, file: !683, line: 523, column: 2)
!8467 = !DILocation(line: 527, column: 2, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !735, file: !683, line: 527, column: 2)
!8469 = !DILocation(line: 581, column: 2, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !735, file: !683, line: 581, column: 2)
!8471 = !DILocation(line: 586, column: 2, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !735, file: !683, line: 586, column: 2)
!8473 = !DILocation(line: 591, column: 2, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !735, file: !683, line: 591, column: 2)
!8475 = !DILocation(line: 595, column: 2, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !735, file: !683, line: 595, column: 2)
!8477 = !DILocation(line: 607, column: 1, scope: !735)
!8478 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !683, file: !683, line: 112, type: !8364, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8479)
!8479 = !{!8480, !8481}
!8480 = !DILocalVariable(name: "line", arg: 1, scope: !8478, file: !683, line: 112, type: !119)
!8481 = !DILocalVariable(name: "irqnum", scope: !8478, file: !683, line: 114, type: !119)
!8482 = !DILocation(line: 0, scope: !8478)
!8483 = !DILocation(line: 122, column: 13, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8478, file: !683, line: 122, column: 6)
!8485 = !DILocation(line: 122, column: 6, scope: !8478)
!8486 = !DILocation(line: 123, column: 3, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !683, line: 123, column: 3)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !683, line: 123, column: 3)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !683, line: 123, column: 3)
!8490 = distinct !DILexicalBlock(scope: !8484, file: !683, line: 122, column: 22)
!8491 = !DILocation(line: 121, column: 11, scope: !8478)
!8492 = !DILocation(line: 130, column: 26, scope: !8478)
!8493 = !DILocation(line: 130, column: 2, scope: !8478)
!8494 = !DILocation(line: 134, column: 2, scope: !8478)
!8495 = !DILocation(line: 135, column: 1, scope: !8478)
!8496 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8375, file: !8375, line: 268, type: !6375, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8497)
!8497 = !{!8498}
!8498 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8496, file: !8375, line: 268, type: !118)
!8499 = !DILocation(line: 0, scope: !8496)
!8500 = !DILocation(line: 270, column: 3, scope: !8496)
!8501 = !DILocation(line: 271, column: 1, scope: !8496)
!8502 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !683, file: !683, line: 137, type: !8364, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8503)
!8503 = !{!8504}
!8504 = !DILocalVariable(name: "line", arg: 1, scope: !8502, file: !683, line: 137, type: !119)
!8505 = !DILocation(line: 0, scope: !8502)
!8506 = !DILocation(line: 141, column: 11, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8502, file: !683, line: 141, column: 6)
!8508 = !DILocation(line: 141, column: 6, scope: !8502)
!8509 = !DILocation(line: 145, column: 28, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8507, file: !683, line: 141, column: 17)
!8511 = !DILocation(line: 145, column: 3, scope: !8510)
!8512 = !DILocation(line: 147, column: 2, scope: !8510)
!8513 = !DILocation(line: 151, column: 1, scope: !8502)
!8514 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8375, file: !8375, line: 309, type: !6375, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8515)
!8515 = !{!8516}
!8516 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8514, file: !8375, line: 309, type: !118)
!8517 = !DILocation(line: 0, scope: !8514)
!8518 = !DILocation(line: 311, column: 3, scope: !8514)
!8519 = !DILocation(line: 312, column: 1, scope: !8514)
!8520 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !683, file: !683, line: 202, type: !8521, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8523)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{null, !119, !119}
!8523 = !{!8524, !8525}
!8524 = !DILocalVariable(name: "line", arg: 1, scope: !8520, file: !683, line: 202, type: !119)
!8525 = !DILocalVariable(name: "trigger", arg: 2, scope: !8520, file: !683, line: 202, type: !119)
!8526 = !DILocation(line: 0, scope: !8520)
!8527 = !DILocation(line: 211, column: 2, scope: !8520)
!8528 = !DILocation(line: 213, column: 36, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8520, file: !683, line: 211, column: 19)
!8530 = !DILocation(line: 213, column: 3, scope: !8529)
!8531 = !DILocation(line: 214, column: 3, scope: !8529)
!8532 = !DILocation(line: 215, column: 3, scope: !8529)
!8533 = !DILocation(line: 217, column: 35, scope: !8529)
!8534 = !DILocation(line: 217, column: 3, scope: !8529)
!8535 = !DILocation(line: 218, column: 3, scope: !8529)
!8536 = !DILocation(line: 219, column: 3, scope: !8529)
!8537 = !DILocation(line: 221, column: 36, scope: !8529)
!8538 = !DILocation(line: 221, column: 3, scope: !8529)
!8539 = !DILocation(line: 222, column: 3, scope: !8529)
!8540 = !DILocation(line: 223, column: 3, scope: !8529)
!8541 = !DILocation(line: 225, column: 35, scope: !8529)
!8542 = !DILocation(line: 225, column: 3, scope: !8529)
!8543 = !DILocation(line: 226, column: 3, scope: !8529)
!8544 = !DILocation(line: 227, column: 3, scope: !8529)
!8545 = !DILocation(line: 232, column: 1, scope: !8520)
!8546 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8375, file: !8375, line: 573, type: !6375, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8547)
!8547 = !{!8548}
!8548 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8546, file: !8375, line: 573, type: !118)
!8549 = !DILocation(line: 0, scope: !8546)
!8550 = !DILocation(line: 575, column: 3, scope: !8546)
!8551 = !DILocation(line: 577, column: 1, scope: !8546)
!8552 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8375, file: !8375, line: 703, type: !6375, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8553)
!8553 = !{!8554}
!8554 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8552, file: !8375, line: 703, type: !118)
!8555 = !DILocation(line: 0, scope: !8552)
!8556 = !DILocation(line: 705, column: 3, scope: !8552)
!8557 = !DILocation(line: 706, column: 1, scope: !8552)
!8558 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8375, file: !8375, line: 529, type: !6375, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8559)
!8559 = !{!8560}
!8560 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8558, file: !8375, line: 529, type: !118)
!8561 = !DILocation(line: 0, scope: !8558)
!8562 = !DILocation(line: 531, column: 3, scope: !8558)
!8563 = !DILocation(line: 533, column: 1, scope: !8558)
!8564 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8375, file: !8375, line: 661, type: !6375, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8565)
!8565 = !{!8566}
!8566 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8564, file: !8375, line: 661, type: !118)
!8567 = !DILocation(line: 0, scope: !8564)
!8568 = !DILocation(line: 663, column: 3, scope: !8564)
!8569 = !DILocation(line: 664, column: 1, scope: !8564)
!8570 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !683, file: !683, line: 433, type: !8571, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8573)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{!119, !119, !723, !113}
!8573 = !{!8574, !8575, !8576, !8577, !8579}
!8574 = !DILocalVariable(name: "line", arg: 1, scope: !8570, file: !683, line: 433, type: !119)
!8575 = !DILocalVariable(name: "cb", arg: 2, scope: !8570, file: !683, line: 433, type: !723)
!8576 = !DILocalVariable(name: "arg", arg: 3, scope: !8570, file: !683, line: 433, type: !113)
!8577 = !DILocalVariable(name: "dev", scope: !8570, file: !683, line: 435, type: !8578)
!8578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!8579 = !DILocalVariable(name: "data", scope: !8570, file: !683, line: 436, type: !8329)
!8580 = !DILocation(line: 0, scope: !8570)
!8581 = !DILocation(line: 438, column: 21, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8570, file: !683, line: 438, column: 6)
!8583 = !DILocation(line: 438, column: 6, scope: !8582)
!8584 = !DILocation(line: 438, column: 6, scope: !8570)
!8585 = !DILocation(line: 442, column: 20, scope: !8570)
!8586 = !DILocation(line: 443, column: 17, scope: !8570)
!8587 = !DILocation(line: 443, column: 22, scope: !8570)
!8588 = !DILocation(line: 445, column: 2, scope: !8570)
!8589 = !DILocation(line: 446, column: 1, scope: !8570)
!8590 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !683, file: !683, line: 448, type: !8364, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8591)
!8591 = !{!8592, !8593, !8594}
!8592 = !DILocalVariable(name: "line", arg: 1, scope: !8590, file: !683, line: 448, type: !119)
!8593 = !DILocalVariable(name: "dev", scope: !8590, file: !683, line: 450, type: !8578)
!8594 = !DILocalVariable(name: "data", scope: !8590, file: !683, line: 451, type: !8329)
!8595 = !DILocation(line: 0, scope: !8590)
!8596 = !DILocation(line: 453, column: 17, scope: !8590)
!8597 = !DILocation(line: 453, column: 20, scope: !8590)
!8598 = !DILocation(line: 454, column: 17, scope: !8590)
!8599 = !DILocation(line: 454, column: 22, scope: !8590)
!8600 = !DILocation(line: 455, column: 1, scope: !8590)
!8601 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !868, file: !868, line: 183, type: !906, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8602)
!8602 = !{!8603, !8604, !8605, !8606, !8607}
!8603 = !DILocalVariable(name: "dev", arg: 1, scope: !8601, file: !868, line: 183, type: !897)
!8604 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8601, file: !868, line: 184, type: !908)
!8605 = !DILocalVariable(name: "pclken", scope: !8601, file: !868, line: 186, type: !858)
!8606 = !DILocalVariable(name: "reg", scope: !8601, file: !868, line: 187, type: !1446)
!8607 = !DILocalVariable(name: "reg_val", scope: !8601, file: !868, line: 188, type: !118)
!8608 = !DILocation(line: 0, scope: !8601)
!8609 = !DILocation(line: 192, column: 6, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8601, file: !868, line: 192, column: 6)
!8611 = !DILocation(line: 192, column: 6, scope: !8601)
!8612 = !DILocation(line: 197, column: 52, scope: !8601)
!8613 = !DILocation(line: 197, column: 8, scope: !8601)
!8614 = !DILocation(line: 198, column: 12, scope: !8601)
!8615 = !DILocation(line: 199, column: 21, scope: !8601)
!8616 = !DILocation(line: 199, column: 10, scope: !8601)
!8617 = !DILocation(line: 200, column: 7, scope: !8601)
!8618 = !DILocation(line: 202, column: 2, scope: !8601)
!8619 = !DILocation(line: 203, column: 1, scope: !8601)
!8620 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !868, file: !868, line: 205, type: !906, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8621)
!8621 = !{!8622, !8623, !8624, !8625, !8626}
!8622 = !DILocalVariable(name: "dev", arg: 1, scope: !8620, file: !868, line: 205, type: !897)
!8623 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8620, file: !868, line: 206, type: !908)
!8624 = !DILocalVariable(name: "pclken", scope: !8620, file: !868, line: 208, type: !858)
!8625 = !DILocalVariable(name: "reg", scope: !8620, file: !868, line: 209, type: !1446)
!8626 = !DILocalVariable(name: "reg_val", scope: !8620, file: !868, line: 210, type: !118)
!8627 = !DILocation(line: 0, scope: !8620)
!8628 = !DILocation(line: 214, column: 6, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8620, file: !868, line: 214, column: 6)
!8630 = !DILocation(line: 214, column: 6, scope: !8620)
!8631 = !DILocation(line: 219, column: 52, scope: !8620)
!8632 = !DILocation(line: 219, column: 8, scope: !8620)
!8633 = !DILocation(line: 220, column: 12, scope: !8620)
!8634 = !DILocation(line: 221, column: 22, scope: !8620)
!8635 = !DILocation(line: 221, column: 13, scope: !8620)
!8636 = !DILocation(line: 221, column: 10, scope: !8620)
!8637 = !DILocation(line: 222, column: 7, scope: !8620)
!8638 = !DILocation(line: 224, column: 2, scope: !8620)
!8639 = !DILocation(line: 225, column: 1, scope: !8620)
!8640 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !868, file: !868, line: 262, type: !922, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8641)
!8641 = !{!8642, !8643, !8644, !8645, !8646, !8647, !8648, !8649}
!8642 = !DILocalVariable(name: "clock", arg: 1, scope: !8640, file: !868, line: 262, type: !897)
!8643 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8640, file: !868, line: 263, type: !908)
!8644 = !DILocalVariable(name: "rate", arg: 3, scope: !8640, file: !868, line: 264, type: !864)
!8645 = !DILocalVariable(name: "pclken", scope: !8640, file: !868, line: 266, type: !858)
!8646 = !DILocalVariable(name: "ahb_clock", scope: !8640, file: !868, line: 273, type: !118)
!8647 = !DILocalVariable(name: "apb1_clock", scope: !8640, file: !868, line: 274, type: !118)
!8648 = !DILocalVariable(name: "apb2_clock", scope: !8640, file: !868, line: 276, type: !118)
!8649 = !DILocalVariable(name: "ahb3_clock", scope: !8640, file: !868, line: 286, type: !118)
!8650 = !DILocation(line: 0, scope: !8640)
!8651 = !DILocation(line: 273, column: 23, scope: !8640)
!8652 = !DILocation(line: 299, column: 18, scope: !8640)
!8653 = !DILocation(line: 299, column: 2, scope: !8640)
!8654 = !DILocation(line: 274, column: 24, scope: !8640)
!8655 = !DILocation(line: 319, column: 3, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8640, file: !868, line: 299, column: 23)
!8657 = !DILocation(line: 276, column: 24, scope: !8640)
!8658 = !DILocation(line: 323, column: 3, scope: !8656)
!8659 = !DILocation(line: 346, column: 33, scope: !8656)
!8660 = !DILocation(line: 346, column: 11, scope: !8656)
!8661 = !DILocation(line: 350, column: 3, scope: !8656)
!8662 = !DILocation(line: 374, column: 3, scope: !8656)
!8663 = !DILocation(line: 379, column: 3, scope: !8656)
!8664 = !DILocation(line: 0, scope: !8656)
!8665 = !DILocation(line: 396, column: 1, scope: !8640)
!8666 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !868, file: !868, line: 227, type: !938, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8667)
!8667 = !{!8668, !8669, !8670, !8671, !8672, !8673, !8674, !8675}
!8668 = !DILocalVariable(name: "dev", arg: 1, scope: !8666, file: !868, line: 227, type: !897)
!8669 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8666, file: !868, line: 228, type: !908)
!8670 = !DILocalVariable(name: "data", arg: 3, scope: !8666, file: !868, line: 229, type: !113)
!8671 = !DILocalVariable(name: "pclken", scope: !8666, file: !868, line: 233, type: !858)
!8672 = !DILocalVariable(name: "reg", scope: !8666, file: !868, line: 234, type: !1446)
!8673 = !DILocalVariable(name: "reg_val", scope: !8666, file: !868, line: 235, type: !118)
!8674 = !DILocalVariable(name: "dt_val", scope: !8666, file: !868, line: 235, type: !118)
!8675 = !DILocalVariable(name: "err", scope: !8666, file: !868, line: 236, type: !119)
!8676 = !DILocation(line: 0, scope: !8666)
!8677 = !DILocation(line: 241, column: 30, scope: !8666)
!8678 = !DILocation(line: 241, column: 8, scope: !8666)
!8679 = !DILocation(line: 242, column: 10, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8666, file: !868, line: 242, column: 6)
!8681 = !DILocation(line: 242, column: 6, scope: !8666)
!8682 = !DILocation(line: 247, column: 11, scope: !8666)
!8683 = !DILocation(line: 248, column: 6, scope: !8666)
!8684 = !DILocation(line: 247, column: 44, scope: !8666)
!8685 = !DILocation(line: 250, column: 6, scope: !8666)
!8686 = !DILocation(line: 249, column: 52, scope: !8666)
!8687 = !DILocation(line: 249, column: 8, scope: !8666)
!8688 = !DILocation(line: 251, column: 12, scope: !8666)
!8689 = !DILocation(line: 252, column: 10, scope: !8666)
!8690 = !DILocation(line: 253, column: 7, scope: !8666)
!8691 = !DILocation(line: 255, column: 2, scope: !8666)
!8692 = !DILocation(line: 260, column: 1, scope: !8666)
!8693 = distinct !DISubprogram(name: "enabled_clock", scope: !868, file: !868, line: 100, type: !8694, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8696)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{!119, !118}
!8696 = !{!8697, !8698}
!8697 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8693, file: !868, line: 100, type: !118)
!8698 = !DILocalVariable(name: "r", scope: !8693, file: !868, line: 102, type: !119)
!8699 = !DILocation(line: 0, scope: !8693)
!8700 = !DILocation(line: 104, column: 2, scope: !8693)
!8701 = !DILocation(line: 180, column: 2, scope: !8693)
!8702 = !DILocation(line: 181, column: 1, scope: !8693)
!8703 = distinct !DISubprogram(name: "get_bus_clock", scope: !868, file: !868, line: 79, type: !8704, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8706)
!8704 = !DISubroutineType(types: !8705)
!8705 = !{!118, !118, !118}
!8706 = !{!8707, !8708}
!8707 = !DILocalVariable(name: "clock", arg: 1, scope: !8703, file: !868, line: 79, type: !118)
!8708 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8703, file: !868, line: 79, type: !118)
!8709 = !DILocation(line: 0, scope: !8703)
!8710 = !DILocation(line: 81, column: 15, scope: !8703)
!8711 = !DILocation(line: 81, column: 2, scope: !8703)
!8712 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !868, file: !868, line: 68, type: !8713, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8715)
!8713 = !DISubroutineType(types: !8714)
!8714 = !{!118, !118, !119, !119, !119}
!8715 = !{!8716, !8717, !8718, !8719}
!8716 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8712, file: !868, line: 68, type: !118)
!8717 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8712, file: !868, line: 69, type: !119)
!8718 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8712, file: !868, line: 70, type: !119)
!8719 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8712, file: !868, line: 71, type: !119)
!8720 = !DILocation(line: 0, scope: !8712)
!8721 = !DILocation(line: 75, column: 22, scope: !8712)
!8722 = !DILocation(line: 75, column: 34, scope: !8712)
!8723 = !DILocation(line: 75, column: 2, scope: !8712)
!8724 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !868, file: !868, line: 641, type: !895, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8725)
!8725 = !{!8726, !8727, !8728}
!8726 = !DILocalVariable(name: "dev", arg: 1, scope: !8724, file: !868, line: 641, type: !897)
!8727 = !DILocalVariable(name: "old_flash_freq", scope: !8724, file: !868, line: 664, type: !118)
!8728 = !DILocalVariable(name: "new_flash_freq", scope: !8724, file: !868, line: 665, type: !118)
!8729 = !DILocation(line: 0, scope: !8724)
!8730 = !DILocation(line: 646, column: 2, scope: !8724)
!8731 = !DILocation(line: 667, column: 19, scope: !8724)
!8732 = !DILocation(line: 674, column: 21, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8724, file: !868, line: 674, column: 6)
!8734 = !DILocation(line: 674, column: 6, scope: !8724)
!8735 = !DILocation(line: 675, column: 3, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8733, file: !868, line: 674, column: 59)
!8737 = !DILocation(line: 676, column: 2, scope: !8736)
!8738 = !DILocation(line: 680, column: 2, scope: !8724)
!8739 = !DILocation(line: 683, column: 2, scope: !8724)
!8740 = !DILocation(line: 690, column: 3, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !868, line: 689, column: 9)
!8742 = distinct !DILexicalBlock(scope: !8724, file: !868, line: 685, column: 6)
!8743 = !DILocation(line: 695, column: 2, scope: !8724)
!8744 = !DILocation(line: 696, column: 2, scope: !8724)
!8745 = !DILocation(line: 696, column: 9, scope: !8724)
!8746 = !DILocation(line: 696, column: 34, scope: !8724)
!8747 = distinct !{!8747, !8744, !8748}
!8748 = !DILocation(line: 697, column: 2, scope: !8724)
!8749 = !DILocation(line: 720, column: 21, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8724, file: !868, line: 720, column: 6)
!8751 = !DILocation(line: 720, column: 6, scope: !8724)
!8752 = !DILocation(line: 721, column: 3, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8750, file: !868, line: 720, column: 60)
!8754 = !DILocation(line: 722, column: 2, scope: !8753)
!8755 = !DILocation(line: 725, column: 18, scope: !8724)
!8756 = !DILocation(line: 728, column: 2, scope: !8724)
!8757 = !DILocation(line: 730, column: 2, scope: !8724)
!8758 = !DILocation(line: 745, column: 2, scope: !8724)
!8759 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8760, file: !8760, line: 3275, type: !3174, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8760 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8761 = !DILocation(line: 3277, column: 21, scope: !8759)
!8762 = !DILocation(line: 3277, column: 3, scope: !8759)
!8763 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !868, file: !868, line: 507, type: !2936, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8764 = !DILocation(line: 534, column: 7, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !868, line: 534, column: 7)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !868, line: 532, column: 37)
!8767 = distinct !DILexicalBlock(scope: !8763, file: !868, line: 532, column: 6)
!8768 = !DILocation(line: 534, column: 28, scope: !8765)
!8769 = !DILocation(line: 534, column: 7, scope: !8766)
!8770 = !DILocation(line: 536, column: 4, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8765, file: !868, line: 534, column: 34)
!8772 = !DILocation(line: 537, column: 4, scope: !8771)
!8773 = !DILocation(line: 537, column: 11, scope: !8771)
!8774 = !DILocation(line: 537, column: 32, scope: !8771)
!8775 = distinct !{!8775, !8772, !8776}
!8776 = !DILocation(line: 539, column: 4, scope: !8771)
!8777 = !DILocation(line: 583, column: 3, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !868, line: 577, column: 37)
!8779 = distinct !DILexicalBlock(scope: !8763, file: !868, line: 577, column: 6)
!8780 = !DILocation(line: 584, column: 3, scope: !8778)
!8781 = !DILocation(line: 584, column: 10, scope: !8778)
!8782 = !DILocation(line: 584, column: 31, scope: !8778)
!8783 = distinct !{!8783, !8780, !8784}
!8784 = !DILocation(line: 585, column: 3, scope: !8778)
!8785 = !DILocation(line: 627, column: 1, scope: !8763)
!8786 = distinct !DISubprogram(name: "set_up_plls", scope: !868, file: !868, line: 448, type: !2936, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8787 = !DILocation(line: 460, column: 6, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8786, file: !868, line: 460, column: 6)
!8789 = !DILocation(line: 460, column: 31, scope: !8788)
!8790 = !DILocation(line: 460, column: 6, scope: !8786)
!8791 = !DILocation(line: 461, column: 3, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8788, file: !868, line: 460, column: 67)
!8793 = !DILocation(line: 462, column: 3, scope: !8792)
!8794 = !DILocation(line: 463, column: 2, scope: !8792)
!8795 = !DILocation(line: 464, column: 2, scope: !8786)
!8796 = !DILocation(line: 488, column: 2, scope: !8786)
!8797 = !DILocation(line: 496, column: 2, scope: !8786)
!8798 = !DILocation(line: 499, column: 2, scope: !8786)
!8799 = !DILocation(line: 500, column: 2, scope: !8786)
!8800 = !DILocation(line: 500, column: 9, scope: !8786)
!8801 = !DILocation(line: 500, column: 30, scope: !8786)
!8802 = distinct !{!8802, !8799, !8803}
!8803 = !DILocation(line: 502, column: 2, scope: !8786)
!8804 = !DILocation(line: 505, column: 1, scope: !8786)
!8805 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8760, file: !8760, line: 3224, type: !6375, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8806)
!8806 = !{!8807}
!8807 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8805, file: !8760, line: 3224, type: !118)
!8808 = !DILocation(line: 0, scope: !8805)
!8809 = !DILocation(line: 3226, column: 3, scope: !8805)
!8810 = !DILocation(line: 3227, column: 1, scope: !8805)
!8811 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8760, file: !8760, line: 3188, type: !6375, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8812)
!8812 = !{!8813}
!8813 = !DILocalVariable(name: "Source", arg: 1, scope: !8811, file: !8760, line: 3188, type: !118)
!8814 = !DILocation(line: 0, scope: !8811)
!8815 = !DILocation(line: 3190, column: 3, scope: !8811)
!8816 = !DILocation(line: 3191, column: 1, scope: !8811)
!8817 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8760, file: !8760, line: 3204, type: !3174, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8818 = !DILocation(line: 3206, column: 21, scope: !8817)
!8819 = !DILocation(line: 3206, column: 3, scope: !8817)
!8820 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8760, file: !8760, line: 3240, type: !6375, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8821)
!8821 = !{!8822}
!8822 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8820, file: !8760, line: 3240, type: !118)
!8823 = !DILocation(line: 0, scope: !8820)
!8824 = !DILocation(line: 3242, column: 3, scope: !8820)
!8825 = !DILocation(line: 3243, column: 1, scope: !8820)
!8826 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8760, file: !8760, line: 3256, type: !6375, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8827)
!8827 = !{!8828}
!8828 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8826, file: !8760, line: 3256, type: !118)
!8829 = !DILocation(line: 0, scope: !8826)
!8830 = !DILocation(line: 3258, column: 3, scope: !8826)
!8831 = !DILocation(line: 3259, column: 1, scope: !8826)
!8832 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !868, file: !868, line: 409, type: !2936, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8833 = !DILocation(line: 412, column: 6, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8832, file: !868, line: 412, column: 6)
!8835 = !DILocation(line: 412, column: 27, scope: !8834)
!8836 = !DILocation(line: 412, column: 6, scope: !8832)
!8837 = !DILocation(line: 414, column: 3, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8834, file: !868, line: 412, column: 33)
!8839 = !DILocation(line: 415, column: 3, scope: !8838)
!8840 = !DILocation(line: 415, column: 10, scope: !8838)
!8841 = !DILocation(line: 415, column: 31, scope: !8838)
!8842 = distinct !{!8842, !8839, !8843}
!8843 = !DILocation(line: 417, column: 3, scope: !8838)
!8844 = !DILocation(line: 421, column: 2, scope: !8832)
!8845 = !DILocation(line: 422, column: 2, scope: !8832)
!8846 = !DILocation(line: 422, column: 9, scope: !8832)
!8847 = !DILocation(line: 422, column: 34, scope: !8832)
!8848 = distinct !{!8848, !8845, !8849}
!8849 = !DILocation(line: 423, column: 2, scope: !8832)
!8850 = !DILocation(line: 424, column: 1, scope: !8832)
!8851 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8760, file: !8760, line: 4195, type: !2936, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8852 = !DILocation(line: 4197, column: 3, scope: !8851)
!8853 = !DILocation(line: 4198, column: 1, scope: !8851)
!8854 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8760, file: !8760, line: 4184, type: !2936, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8855 = !DILocation(line: 4186, column: 3, scope: !8854)
!8856 = !DILocation(line: 4187, column: 1, scope: !8854)
!8857 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8760, file: !8760, line: 4205, type: !3174, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8858 = !DILocation(line: 4207, column: 11, scope: !8857)
!8859 = !DILocation(line: 4207, column: 44, scope: !8857)
!8860 = !DILocation(line: 4207, column: 3, scope: !8857)
!8861 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8760, file: !8760, line: 3007, type: !3174, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8862 = !DILocation(line: 3009, column: 11, scope: !8861)
!8863 = !DILocation(line: 3009, column: 44, scope: !8861)
!8864 = !DILocation(line: 3009, column: 3, scope: !8861)
!8865 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8760, file: !8760, line: 2987, type: !2936, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8866 = !DILocation(line: 2989, column: 3, scope: !8865)
!8867 = !DILocation(line: 2990, column: 1, scope: !8865)
!8868 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8760, file: !8760, line: 3143, type: !2936, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8869 = !DILocation(line: 3145, column: 3, scope: !8868)
!8870 = !DILocation(line: 3146, column: 1, scope: !8868)
!8871 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8760, file: !8760, line: 3163, type: !3174, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2000)
!8872 = !DILocation(line: 3165, column: 11, scope: !8871)
!8873 = !DILocation(line: 3165, column: 46, scope: !8871)
!8874 = !DILocation(line: 3165, column: 3, scope: !8871)
!8875 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8876, file: !8876, line: 40, type: !3174, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !2000)
!8876 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8877 = !DILocation(line: 43, column: 3, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !8876, line: 42, column: 37)
!8879 = distinct !DILexicalBlock(scope: !8875, file: !8876, line: 42, column: 6)
!8880 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8876, file: !8876, line: 56, type: !2936, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !2000)
!8881 = !DILocation(line: 58, column: 2, scope: !8880)
!8882 = !DILocation(line: 62, column: 1, scope: !8880)
!8883 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8760, file: !8760, line: 4304, type: !8884, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !8886)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{null, !118, !118, !118, !118}
!8886 = !{!8887, !8888, !8889, !8890}
!8887 = !DILocalVariable(name: "Source", arg: 1, scope: !8883, file: !8760, line: 4304, type: !118)
!8888 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8883, file: !8760, line: 4304, type: !118)
!8889 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8883, file: !8760, line: 4304, type: !118)
!8890 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8883, file: !8760, line: 4304, type: !118)
!8891 = !DILocation(line: 0, scope: !8883)
!8892 = !DILocation(line: 4306, column: 3, scope: !8883)
!8893 = !DILocation(line: 4308, column: 3, scope: !8883)
!8894 = !DILocation(line: 4312, column: 1, scope: !8883)
!8895 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8876, file: !8876, line: 69, type: !2936, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !2000)
!8896 = !DILocation(line: 72, column: 2, scope: !8895)
!8897 = !DILocation(line: 73, column: 1, scope: !8895)
!8898 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8899, file: !8899, line: 1185, type: !6375, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !8900)
!8899 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8900 = !{!8901, !8902}
!8901 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8898, file: !8899, line: 1185, type: !118)
!8902 = !DILocalVariable(name: "tmpreg", scope: !8898, file: !8899, line: 1187, type: !314)
!8903 = !DILocation(line: 0, scope: !8898)
!8904 = !DILocation(line: 1187, column: 3, scope: !8898)
!8905 = !DILocation(line: 1187, column: 17, scope: !8898)
!8906 = !DILocation(line: 1188, column: 3, scope: !8898)
!8907 = !DILocation(line: 1190, column: 12, scope: !8898)
!8908 = !DILocation(line: 1190, column: 10, scope: !8898)
!8909 = !DILocation(line: 1191, column: 9, scope: !8898)
!8910 = !DILocation(line: 1192, column: 1, scope: !8898)
!8911 = distinct !DISubprogram(name: "uart_console_init", scope: !999, file: !999, line: 588, type: !976, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8912)
!8912 = !{!8913}
!8913 = !DILocalVariable(name: "arg", arg: 1, scope: !8911, file: !999, line: 588, type: !954)
!8914 = !DILocation(line: 0, scope: !8911)
!8915 = !DILocation(line: 593, column: 7, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8911, file: !999, line: 593, column: 6)
!8917 = !DILocation(line: 593, column: 6, scope: !8911)
!8918 = !DILocation(line: 597, column: 2, scope: !8911)
!8919 = !DILocation(line: 599, column: 2, scope: !8911)
!8920 = !DILocation(line: 600, column: 1, scope: !8911)
!8921 = distinct !DISubprogram(name: "device_is_ready", scope: !8922, file: !8922, line: 47, type: !8923, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8925)
!8922 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!8923 = !DISubroutineType(types: !8924)
!8924 = !{!345, !954}
!8925 = !{!8926}
!8926 = !DILocalVariable(name: "dev", arg: 1, scope: !8921, file: !8922, line: 47, type: !954)
!8927 = !DILocation(line: 0, scope: !8921)
!8928 = !DILocation(line: 55, column: 2, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8921, file: !8922, line: 55, column: 2)
!8930 = !{i64 2154277467}
!8931 = !DILocation(line: 56, column: 9, scope: !8921)
!8932 = !DILocation(line: 56, column: 2, scope: !8921)
!8933 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !999, file: !999, line: 573, type: !2936, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !2000)
!8934 = !DILocation(line: 576, column: 2, scope: !8933)
!8935 = !DILocation(line: 579, column: 2, scope: !8933)
!8936 = !DILocation(line: 581, column: 1, scope: !8933)
!8937 = distinct !DISubprogram(name: "console_out", scope: !999, file: !999, line: 77, type: !301, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8938)
!8938 = !{!8939}
!8939 = !DILocalVariable(name: "c", arg: 1, scope: !8937, file: !999, line: 77, type: !119)
!8940 = !DILocation(line: 0, scope: !8937)
!8941 = !DILocation(line: 89, column: 11, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8937, file: !999, line: 89, column: 6)
!8943 = !DILocation(line: 89, column: 6, scope: !8937)
!8944 = !DILocation(line: 90, column: 3, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8942, file: !999, line: 89, column: 17)
!8946 = !DILocation(line: 91, column: 2, scope: !8945)
!8947 = !DILocation(line: 92, column: 34, scope: !8937)
!8948 = !DILocation(line: 92, column: 2, scope: !8937)
!8949 = !DILocation(line: 94, column: 2, scope: !8937)
!8950 = distinct !DISubprogram(name: "uart_poll_out", scope: !8951, file: !8951, line: 95, type: !972, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8952)
!8951 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pi")
!8952 = !{!8953, !8954}
!8953 = !DILocalVariable(name: "dev", arg: 1, scope: !8950, file: !8951, line: 95, type: !954)
!8954 = !DILocalVariable(name: "out_char", arg: 2, scope: !8950, file: !8951, line: 95, type: !186)
!8955 = !DILocation(line: 0, scope: !8950)
!8956 = !DILocation(line: 105, column: 2, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8950, file: !8951, line: 105, column: 2)
!8958 = !{i64 2154360858}
!8959 = !DILocation(line: 106, column: 2, scope: !8950)
!8960 = !DILocation(line: 107, column: 1, scope: !8950)
!8961 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !948, file: !948, line: 574, type: !972, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8962)
!8962 = !{!8963, !8964, !8965}
!8963 = !DILocalVariable(name: "dev", arg: 1, scope: !8961, file: !948, line: 574, type: !954)
!8964 = !DILocalVariable(name: "out_char", arg: 2, scope: !8961, file: !948, line: 575, type: !186)
!8965 = !DILocalVariable(name: "api", scope: !8961, file: !948, line: 577, type: !945)
!8966 = !DILocation(line: 0, scope: !8961)
!8967 = !DILocation(line: 578, column: 40, scope: !8961)
!8968 = !DILocation(line: 580, column: 7, scope: !8961)
!8969 = !DILocation(line: 580, column: 2, scope: !8961)
!8970 = !DILocation(line: 581, column: 1, scope: !8961)
!8971 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !8923, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8972)
!8972 = !{!8973}
!8973 = !DILocalVariable(name: "dev", arg: 1, scope: !8971, file: !334, line: 730, type: !954)
!8974 = !DILocation(line: 0, scope: !8971)
!8975 = !DILocation(line: 732, column: 9, scope: !8971)
!8976 = !DILocation(line: 732, column: 2, scope: !8971)
!8977 = distinct !DISubprogram(name: "uart_register_input", scope: !999, file: !999, line: 560, type: !8978, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !9025)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{null, !8980, !8980, !9022}
!8980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8981, size: 32)
!8981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !245, line: 2208, size: 160, elements: !8982)
!8982 = !{!8983}
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8981, file: !245, line: 2209, baseType: !8984, size: 160)
!8984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !245, line: 1709, size: 160, elements: !8985)
!8985 = !{!8986, !8999, !9003}
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8984, file: !245, line: 1710, baseType: !8987, size: 64)
!8987 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8988, line: 46, baseType: !8989)
!8988 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8988, line: 41, size: 64, elements: !8990)
!8990 = !{!8991, !8998}
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8989, file: !8988, line: 42, baseType: !8992, size: 32)
!8992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8993, size: 32)
!8993 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8988, line: 39, baseType: !8994)
!8994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8988, line: 35, size: 32, elements: !8995)
!8995 = !{!8996}
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8994, file: !8988, line: 36, baseType: !8997, size: 32)
!8997 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8988, line: 32, baseType: !118)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8989, file: !8988, line: 43, baseType: !8992, size: 32, offset: 32)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8984, file: !245, line: 1711, baseType: !9000, size: 32, offset: 64)
!9000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !9001)
!9001 = !{!9002}
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9000, file: !259, line: 52, baseType: !22, size: 32)
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8984, file: !245, line: 1712, baseType: !9004, size: 64, offset: 96)
!9004 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !9005)
!9005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !9006)
!9006 = !{!9007}
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9005, file: !179, line: 232, baseType: !9008, size: 64)
!9008 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !9009)
!9009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !9010)
!9010 = !{!9011, !9017}
!9011 = !DIDerivedType(tag: DW_TAG_member, scope: !9009, file: !153, line: 38, baseType: !9012, size: 32)
!9012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9009, file: !153, line: 38, size: 32, elements: !9013)
!9013 = !{!9014, !9016}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9012, file: !153, line: 39, baseType: !9015, size: 32)
!9015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9009, size: 32)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9012, file: !153, line: 40, baseType: !9015, size: 32)
!9017 = !DIDerivedType(tag: DW_TAG_member, scope: !9009, file: !153, line: 42, baseType: !9018, size: 32, offset: 32)
!9018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9009, file: !153, line: 42, size: 32, elements: !9019)
!9019 = !{!9020, !9021}
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9018, file: !153, line: 43, baseType: !9015, size: 32)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9018, file: !153, line: 44, baseType: !9015, size: 32)
!9022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9023, size: 32)
!9023 = !DISubroutineType(types: !9024)
!9024 = !{!185, !106, !185}
!9025 = !{!9026, !9027, !9028}
!9026 = !DILocalVariable(name: "avail", arg: 1, scope: !8977, file: !999, line: 560, type: !8980)
!9027 = !DILocalVariable(name: "lines", arg: 2, scope: !8977, file: !999, line: 560, type: !8980)
!9028 = !DILocalVariable(name: "completion", arg: 3, scope: !8977, file: !999, line: 561, type: !9022)
!9029 = !DILocation(line: 0, scope: !8977)
!9030 = !DILocation(line: 566, column: 1, scope: !8977)
!9031 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1177, file: !1177, line: 523, type: !1035, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9032)
!9032 = !{!9033, !9034, !9035, !9036, !9037}
!9033 = !DILocalVariable(name: "dev", arg: 1, scope: !9031, file: !1177, line: 523, type: !1037)
!9034 = !DILocalVariable(name: "pin", arg: 2, scope: !9031, file: !1177, line: 524, type: !1052)
!9035 = !DILocalVariable(name: "flags", arg: 3, scope: !9031, file: !1177, line: 524, type: !1053)
!9036 = !DILocalVariable(name: "err", scope: !9031, file: !1177, line: 526, type: !119)
!9037 = !DILocalVariable(name: "pincfg", scope: !9031, file: !1177, line: 527, type: !119)
!9038 = !DILocation(line: 0, scope: !9031)
!9039 = !DILocation(line: 527, column: 2, scope: !9031)
!9040 = !DILocation(line: 532, column: 8, scope: !9031)
!9041 = !DILocation(line: 533, column: 10, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9031, file: !1177, line: 533, column: 6)
!9043 = !DILocation(line: 533, column: 6, scope: !9031)
!9044 = !DILocation(line: 543, column: 13, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9031, file: !1177, line: 543, column: 6)
!9046 = !DILocation(line: 543, column: 28, scope: !9045)
!9047 = !DILocation(line: 543, column: 6, scope: !9031)
!9048 = !DILocation(line: 544, column: 14, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !1177, line: 544, column: 7)
!9050 = distinct !DILexicalBlock(scope: !9045, file: !1177, line: 543, column: 34)
!9051 = !DILocation(line: 544, column: 39, scope: !9049)
!9052 = !DILocation(line: 544, column: 7, scope: !9050)
!9053 = !DILocation(line: 545, column: 38, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9049, file: !1177, line: 544, column: 45)
!9055 = !DILocation(line: 545, column: 4, scope: !9054)
!9056 = !DILocation(line: 546, column: 3, scope: !9054)
!9057 = !DILocation(line: 546, column: 21, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9049, file: !1177, line: 546, column: 14)
!9059 = !DILocation(line: 546, column: 45, scope: !9058)
!9060 = !DILocation(line: 546, column: 14, scope: !9049)
!9061 = !DILocation(line: 547, column: 40, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9058, file: !1177, line: 546, column: 51)
!9063 = !DILocation(line: 547, column: 4, scope: !9062)
!9064 = !DILocation(line: 548, column: 3, scope: !9062)
!9065 = !DILocation(line: 551, column: 32, scope: !9031)
!9066 = !DILocation(line: 551, column: 37, scope: !9031)
!9067 = !DILocation(line: 551, column: 2, scope: !9031)
!9068 = !DILocation(line: 554, column: 6, scope: !9031)
!9069 = !DILocation(line: 562, column: 1, scope: !9031)
!9070 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1177, file: !1177, line: 410, type: !9071, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9073)
!9071 = !DISubroutineType(types: !9072)
!9072 = !{!119, !1037, !864}
!9073 = !{!9074, !9075, !9076, !9078}
!9074 = !DILocalVariable(name: "dev", arg: 1, scope: !9070, file: !1177, line: 410, type: !1037)
!9075 = !DILocalVariable(name: "value", arg: 2, scope: !9070, file: !1177, line: 410, type: !864)
!9076 = !DILocalVariable(name: "cfg", scope: !9070, file: !1177, line: 412, type: !9077)
!9077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!9078 = !DILocalVariable(name: "gpio", scope: !9070, file: !1177, line: 413, type: !1110)
!9079 = !DILocation(line: 0, scope: !9070)
!9080 = !DILocation(line: 412, column: 45, scope: !9070)
!9081 = !DILocation(line: 413, column: 44, scope: !9070)
!9082 = !DILocation(line: 415, column: 11, scope: !9070)
!9083 = !DILocation(line: 415, column: 9, scope: !9070)
!9084 = !DILocation(line: 417, column: 2, scope: !9070)
!9085 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1177, file: !1177, line: 420, type: !1062, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9086)
!9086 = !{!9087, !9088, !9089, !9090, !9091, !9092}
!9087 = !DILocalVariable(name: "dev", arg: 1, scope: !9085, file: !1177, line: 420, type: !1037)
!9088 = !DILocalVariable(name: "mask", arg: 2, scope: !9085, file: !1177, line: 421, type: !1064)
!9089 = !DILocalVariable(name: "value", arg: 3, scope: !9085, file: !1177, line: 422, type: !1059)
!9090 = !DILocalVariable(name: "cfg", scope: !9085, file: !1177, line: 424, type: !9077)
!9091 = !DILocalVariable(name: "gpio", scope: !9085, file: !1177, line: 425, type: !1110)
!9092 = !DILocalVariable(name: "port_value", scope: !9085, file: !1177, line: 426, type: !118)
!9093 = !DILocation(line: 0, scope: !9085)
!9094 = !DILocation(line: 424, column: 45, scope: !9085)
!9095 = !DILocation(line: 425, column: 44, scope: !9085)
!9096 = !DILocation(line: 430, column: 15, scope: !9085)
!9097 = !DILocation(line: 431, column: 46, scope: !9085)
!9098 = !DILocation(line: 431, column: 44, scope: !9085)
!9099 = !DILocation(line: 431, column: 61, scope: !9085)
!9100 = !DILocation(line: 431, column: 53, scope: !9085)
!9101 = !DILocation(line: 431, column: 2, scope: !9085)
!9102 = !DILocation(line: 435, column: 2, scope: !9085)
!9103 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1177, file: !1177, line: 438, type: !1067, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9104)
!9104 = !{!9105, !9106, !9107, !9108}
!9105 = !DILocalVariable(name: "dev", arg: 1, scope: !9103, file: !1177, line: 438, type: !1037)
!9106 = !DILocalVariable(name: "pins", arg: 2, scope: !9103, file: !1177, line: 439, type: !1064)
!9107 = !DILocalVariable(name: "cfg", scope: !9103, file: !1177, line: 441, type: !9077)
!9108 = !DILocalVariable(name: "gpio", scope: !9103, file: !1177, line: 442, type: !1110)
!9109 = !DILocation(line: 0, scope: !9103)
!9110 = !DILocation(line: 441, column: 45, scope: !9103)
!9111 = !DILocation(line: 442, column: 44, scope: !9103)
!9112 = !DILocation(line: 448, column: 2, scope: !9103)
!9113 = !DILocation(line: 450, column: 2, scope: !9103)
!9114 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1177, file: !1177, line: 453, type: !1067, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9115)
!9115 = !{!9116, !9117, !9118, !9119}
!9116 = !DILocalVariable(name: "dev", arg: 1, scope: !9114, file: !1177, line: 453, type: !1037)
!9117 = !DILocalVariable(name: "pins", arg: 2, scope: !9114, file: !1177, line: 454, type: !1064)
!9118 = !DILocalVariable(name: "cfg", scope: !9114, file: !1177, line: 456, type: !9077)
!9119 = !DILocalVariable(name: "gpio", scope: !9114, file: !1177, line: 457, type: !1110)
!9120 = !DILocation(line: 0, scope: !9114)
!9121 = !DILocation(line: 456, column: 45, scope: !9114)
!9122 = !DILocation(line: 457, column: 44, scope: !9114)
!9123 = !DILocation(line: 467, column: 2, scope: !9114)
!9124 = !DILocation(line: 470, column: 2, scope: !9114)
!9125 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1177, file: !1177, line: 473, type: !1067, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9126)
!9126 = !{!9127, !9128, !9129, !9130}
!9127 = !DILocalVariable(name: "dev", arg: 1, scope: !9125, file: !1177, line: 473, type: !1037)
!9128 = !DILocalVariable(name: "pins", arg: 2, scope: !9125, file: !1177, line: 474, type: !1064)
!9129 = !DILocalVariable(name: "cfg", scope: !9125, file: !1177, line: 476, type: !9077)
!9130 = !DILocalVariable(name: "gpio", scope: !9125, file: !1177, line: 477, type: !1110)
!9131 = !DILocation(line: 0, scope: !9125)
!9132 = !DILocation(line: 476, column: 45, scope: !9125)
!9133 = !DILocation(line: 477, column: 44, scope: !9125)
!9134 = !DILocation(line: 484, column: 2, scope: !9125)
!9135 = !DILocation(line: 487, column: 2, scope: !9125)
!9136 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1177, file: !1177, line: 594, type: !1073, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9137)
!9137 = !{!9138, !9139, !9140, !9141, !9142, !9143, !9145, !9146, !9147}
!9138 = !DILocalVariable(name: "dev", arg: 1, scope: !9136, file: !1177, line: 594, type: !1037)
!9139 = !DILocalVariable(name: "pin", arg: 2, scope: !9136, file: !1177, line: 595, type: !1052)
!9140 = !DILocalVariable(name: "mode", arg: 3, scope: !9136, file: !1177, line: 596, type: !1011)
!9141 = !DILocalVariable(name: "trig", arg: 4, scope: !9136, file: !1177, line: 597, type: !1017)
!9142 = !DILocalVariable(name: "cfg", scope: !9136, file: !1177, line: 599, type: !9077)
!9143 = !DILocalVariable(name: "data", scope: !9136, file: !1177, line: 600, type: !9144)
!9144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!9145 = !DILocalVariable(name: "edge", scope: !9136, file: !1177, line: 601, type: !119)
!9146 = !DILocalVariable(name: "err", scope: !9136, file: !1177, line: 602, type: !119)
!9147 = !DILabel(scope: !9136, name: "exit", file: !1177, line: 643)
!9148 = !DILocation(line: 0, scope: !9136)
!9149 = !DILocation(line: 599, column: 45, scope: !9136)
!9150 = !DILocation(line: 604, column: 6, scope: !9136)
!9151 = !DILocation(line: 605, column: 34, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9153, file: !1177, line: 605, column: 7)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !1177, line: 604, column: 38)
!9154 = distinct !DILexicalBlock(scope: !9136, file: !1177, line: 604, column: 6)
!9155 = !DILocation(line: 605, column: 7, scope: !9152)
!9156 = !DILocation(line: 605, column: 47, scope: !9152)
!9157 = !DILocation(line: 605, column: 39, scope: !9152)
!9158 = !DILocation(line: 605, column: 7, scope: !9153)
!9159 = !DILocation(line: 606, column: 4, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9152, file: !1177, line: 605, column: 53)
!9161 = !DILocation(line: 607, column: 4, scope: !9160)
!9162 = !DILocation(line: 608, column: 4, scope: !9160)
!9163 = !DILocation(line: 609, column: 3, scope: !9160)
!9164 = !DILocation(line: 600, column: 38, scope: !9136)
!9165 = !DILocation(line: 620, column: 30, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9136, file: !1177, line: 620, column: 6)
!9167 = !DILocation(line: 620, column: 6, scope: !9166)
!9168 = !DILocation(line: 620, column: 57, scope: !9166)
!9169 = !DILocation(line: 620, column: 6, scope: !9136)
!9170 = !DILocation(line: 625, column: 29, scope: !9136)
!9171 = !DILocation(line: 625, column: 2, scope: !9136)
!9172 = !DILocation(line: 627, column: 2, scope: !9136)
!9173 = !DILocation(line: 630, column: 3, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9136, file: !1177, line: 627, column: 16)
!9175 = !DILocation(line: 633, column: 3, scope: !9174)
!9176 = !DILocation(line: 636, column: 3, scope: !9174)
!9177 = !DILocation(line: 639, column: 2, scope: !9136)
!9178 = !DILocation(line: 641, column: 2, scope: !9136)
!9179 = !DILocation(line: 643, column: 1, scope: !9136)
!9180 = !DILocation(line: 644, column: 2, scope: !9136)
!9181 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1177, file: !1177, line: 647, type: !1077, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9182)
!9182 = !{!9183, !9184, !9185, !9186}
!9183 = !DILocalVariable(name: "dev", arg: 1, scope: !9181, file: !1177, line: 647, type: !1037)
!9184 = !DILocalVariable(name: "callback", arg: 2, scope: !9181, file: !1177, line: 648, type: !1079)
!9185 = !DILocalVariable(name: "set", arg: 3, scope: !9181, file: !1177, line: 649, type: !345)
!9186 = !DILocalVariable(name: "data", scope: !9181, file: !1177, line: 651, type: !9144)
!9187 = !DILocation(line: 0, scope: !9181)
!9188 = !DILocation(line: 651, column: 38, scope: !9181)
!9189 = !DILocation(line: 653, column: 37, scope: !9181)
!9190 = !DILocation(line: 653, column: 9, scope: !9181)
!9191 = !DILocation(line: 653, column: 2, scope: !9181)
!9192 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9193, file: !9193, line: 38, type: !9194, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9197)
!9193 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!119, !9196, !1079, !345}
!9196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!9197 = !{!9198, !9199, !9200}
!9198 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9192, file: !9193, line: 38, type: !9196)
!9199 = !DILocalVariable(name: "callback", arg: 2, scope: !9192, file: !9193, line: 39, type: !1079)
!9200 = !DILocalVariable(name: "set", arg: 3, scope: !9192, file: !9193, line: 40, type: !345)
!9201 = !DILocation(line: 0, scope: !9192)
!9202 = !DILocation(line: 42, column: 2, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9204, file: !9193, line: 42, column: 2)
!9204 = distinct !DILexicalBlock(scope: !9192, file: !9193, line: 42, column: 2)
!9205 = !DILocation(line: 42, column: 2, scope: !9204)
!9206 = !DILocation(line: 42, column: 2, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9203, file: !9193, line: 42, column: 2)
!9208 = !DILocation(line: 43, column: 2, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !9193, line: 43, column: 2)
!9210 = distinct !DILexicalBlock(scope: !9192, file: !9193, line: 43, column: 2)
!9211 = !DILocation(line: 43, column: 2, scope: !9210)
!9212 = !DILocation(line: 43, column: 2, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9209, file: !9193, line: 43, column: 2)
!9214 = !DILocation(line: 45, column: 7, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9192, file: !9193, line: 45, column: 6)
!9216 = !DILocation(line: 45, column: 6, scope: !9192)
!9217 = !DILocation(line: 46, column: 56, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !9193, line: 46, column: 7)
!9219 = distinct !DILexicalBlock(scope: !9215, file: !9193, line: 45, column: 38)
!9220 = !DILocation(line: 46, column: 8, scope: !9218)
!9221 = !DILocation(line: 46, column: 7, scope: !9219)
!9222 = !DILocation(line: 51, column: 13, scope: !9215)
!9223 = !DILocation(line: 56, column: 43, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !9193, line: 55, column: 11)
!9225 = distinct !DILexicalBlock(scope: !9192, file: !9193, line: 55, column: 6)
!9226 = !DILocation(line: 56, column: 3, scope: !9224)
!9227 = !DILocation(line: 57, column: 2, scope: !9224)
!9228 = !DILocation(line: 60, column: 1, scope: !9192)
!9229 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1084, file: !1084, line: 261, type: !9230, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9232)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{!345, !9196}
!9232 = !{!9233}
!9233 = !DILocalVariable(name: "list", arg: 1, scope: !9229, file: !1084, line: 261, type: !9196)
!9234 = !DILocation(line: 0, scope: !9229)
!9235 = !DILocation(line: 261, column: 1, scope: !9229)
!9236 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1084, file: !1084, line: 417, type: !9237, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9239)
!9237 = !DISubroutineType(types: !9238)
!9238 = !{!345, !9196, !1250}
!9239 = !{!9240, !9241, !9242, !9243}
!9240 = !DILocalVariable(name: "list", arg: 1, scope: !9236, file: !1084, line: 417, type: !9196)
!9241 = !DILocalVariable(name: "node", arg: 2, scope: !9236, file: !1084, line: 417, type: !1250)
!9242 = !DILocalVariable(name: "prev", scope: !9236, file: !1084, line: 417, type: !1250)
!9243 = !DILocalVariable(name: "test", scope: !9236, file: !1084, line: 417, type: !1250)
!9244 = !DILocation(line: 0, scope: !9236)
!9245 = !DILocation(line: 417, column: 1, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9236, file: !1084, line: 417, column: 1)
!9247 = !DILocation(line: 417, column: 1, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9246, file: !1084, line: 417, column: 1)
!9249 = !DILocation(line: 417, column: 1, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9251, file: !1084, line: 417, column: 1)
!9251 = distinct !DILexicalBlock(scope: !9248, file: !1084, line: 417, column: 1)
!9252 = !DILocation(line: 417, column: 1, scope: !9251)
!9253 = distinct !{!9253, !9245, !9245}
!9254 = !DILocation(line: 417, column: 1, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9250, file: !1084, line: 417, column: 1)
!9256 = !DILocation(line: 417, column: 1, scope: !9236)
!9257 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1084, file: !1084, line: 298, type: !9258, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9260)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{null, !9196, !1250}
!9260 = !{!9261, !9262}
!9261 = !DILocalVariable(name: "list", arg: 1, scope: !9257, file: !1084, line: 298, type: !9196)
!9262 = !DILocalVariable(name: "node", arg: 2, scope: !9257, file: !1084, line: 298, type: !1250)
!9263 = !DILocation(line: 0, scope: !9257)
!9264 = !DILocation(line: 298, column: 1, scope: !9257)
!9265 = !DILocation(line: 298, column: 1, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9257, file: !1084, line: 298, column: 1)
!9267 = !DILocation(line: 298, column: 1, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9266, file: !1084, line: 298, column: 1)
!9269 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1084, file: !1084, line: 231, type: !9270, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9272)
!9270 = !DISubroutineType(types: !9271)
!9271 = !{!1250, !9196}
!9272 = !{!9273}
!9273 = !DILocalVariable(name: "list", arg: 1, scope: !9269, file: !1084, line: 231, type: !9196)
!9274 = !DILocation(line: 0, scope: !9269)
!9275 = !DILocation(line: 233, column: 15, scope: !9269)
!9276 = !DILocation(line: 233, column: 2, scope: !9269)
!9277 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1084, file: !1084, line: 209, type: !9278, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{null, !1250, !1250}
!9280 = !{!9281, !9282}
!9281 = !DILocalVariable(name: "parent", arg: 1, scope: !9277, file: !1084, line: 209, type: !1250)
!9282 = !DILocalVariable(name: "child", arg: 2, scope: !9277, file: !1084, line: 209, type: !1250)
!9283 = !DILocation(line: 0, scope: !9277)
!9284 = !DILocation(line: 211, column: 10, scope: !9277)
!9285 = !DILocation(line: 211, column: 15, scope: !9277)
!9286 = !DILocation(line: 212, column: 1, scope: !9277)
!9287 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1084, file: !1084, line: 214, type: !9258, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9288)
!9288 = !{!9289, !9290}
!9289 = !DILocalVariable(name: "list", arg: 1, scope: !9287, file: !1084, line: 214, type: !9196)
!9290 = !DILocalVariable(name: "node", arg: 2, scope: !9287, file: !1084, line: 214, type: !1250)
!9291 = !DILocation(line: 0, scope: !9287)
!9292 = !DILocation(line: 216, column: 8, scope: !9287)
!9293 = !DILocation(line: 216, column: 13, scope: !9287)
!9294 = !DILocation(line: 217, column: 1, scope: !9287)
!9295 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1084, file: !1084, line: 243, type: !9270, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9296)
!9296 = !{!9297}
!9297 = !DILocalVariable(name: "list", arg: 1, scope: !9295, file: !1084, line: 243, type: !9196)
!9298 = !DILocation(line: 0, scope: !9295)
!9299 = !DILocation(line: 245, column: 15, scope: !9295)
!9300 = !DILocation(line: 245, column: 2, scope: !9295)
!9301 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1084, file: !1084, line: 219, type: !9258, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9302)
!9302 = !{!9303, !9304}
!9303 = !DILocalVariable(name: "list", arg: 1, scope: !9301, file: !1084, line: 219, type: !9196)
!9304 = !DILocalVariable(name: "node", arg: 2, scope: !9301, file: !1084, line: 219, type: !1250)
!9305 = !DILocation(line: 0, scope: !9301)
!9306 = !DILocation(line: 221, column: 8, scope: !9301)
!9307 = !DILocation(line: 221, column: 13, scope: !9301)
!9308 = !DILocation(line: 222, column: 1, scope: !9301)
!9309 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1084, file: !1084, line: 401, type: !9310, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9312)
!9310 = !DISubroutineType(types: !9311)
!9311 = !{null, !9196, !1250, !1250}
!9312 = !{!9313, !9314, !9315}
!9313 = !DILocalVariable(name: "list", arg: 1, scope: !9309, file: !1084, line: 401, type: !9196)
!9314 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9309, file: !1084, line: 401, type: !1250)
!9315 = !DILocalVariable(name: "node", arg: 3, scope: !9309, file: !1084, line: 401, type: !1250)
!9316 = !DILocation(line: 0, scope: !9309)
!9317 = !DILocation(line: 401, column: 1, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9309, file: !1084, line: 401, column: 1)
!9319 = !DILocation(line: 0, scope: !9318)
!9320 = !DILocation(line: 401, column: 1, scope: !9309)
!9321 = !DILocation(line: 401, column: 1, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9318, file: !1084, line: 401, column: 1)
!9323 = !DILocation(line: 401, column: 1, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9322, file: !1084, line: 401, column: 1)
!9325 = !DILocation(line: 401, column: 1, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9324, file: !1084, line: 401, column: 1)
!9327 = !DILocation(line: 401, column: 1, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9318, file: !1084, line: 401, column: 1)
!9329 = !DILocation(line: 401, column: 1, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9328, file: !1084, line: 401, column: 1)
!9331 = !DILocation(line: 401, column: 1, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9330, file: !1084, line: 401, column: 1)
!9333 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1084, file: !1084, line: 285, type: !9334, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9336)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!1250, !1250}
!9336 = !{!9337}
!9337 = !DILocalVariable(name: "node", arg: 1, scope: !9333, file: !1084, line: 285, type: !1250)
!9338 = !DILocation(line: 0, scope: !9333)
!9339 = !DILocation(line: 285, column: 1, scope: !9333)
!9340 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1084, file: !1084, line: 274, type: !9334, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9341)
!9341 = !{!9342}
!9342 = !DILocalVariable(name: "node", arg: 1, scope: !9340, file: !1084, line: 274, type: !1250)
!9343 = !DILocation(line: 0, scope: !9340)
!9344 = !DILocation(line: 274, column: 1, scope: !9340)
!9345 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1084, file: !1084, line: 204, type: !9334, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9346)
!9346 = !{!9347}
!9347 = !DILocalVariable(name: "node", arg: 1, scope: !9345, file: !1084, line: 204, type: !1250)
!9348 = !DILocation(line: 0, scope: !9345)
!9349 = !DILocation(line: 206, column: 15, scope: !9345)
!9350 = !DILocation(line: 206, column: 2, scope: !9345)
!9351 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1177, file: !1177, line: 342, type: !301, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9352)
!9352 = !{!9353, !9354, !9355}
!9353 = !DILocalVariable(name: "pin", arg: 1, scope: !9351, file: !1177, line: 342, type: !119)
!9354 = !DILocalVariable(name: "line", scope: !9351, file: !1177, line: 344, type: !118)
!9355 = !DILocalVariable(name: "port", scope: !9351, file: !1177, line: 345, type: !119)
!9356 = !DILocation(line: 0, scope: !9351)
!9357 = !DILocation(line: 344, column: 18, scope: !9351)
!9358 = !{i32 983040, i32 0}
!9359 = !DILocation(line: 356, column: 9, scope: !9351)
!9360 = !DILocation(line: 370, column: 2, scope: !9351)
!9361 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1177, file: !1177, line: 37, type: !726, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9362)
!9362 = !{!9363, !9364, !9365}
!9363 = !DILocalVariable(name: "line", arg: 1, scope: !9361, file: !1177, line: 37, type: !119)
!9364 = !DILocalVariable(name: "arg", arg: 2, scope: !9361, file: !1177, line: 37, type: !113)
!9365 = !DILocalVariable(name: "data", scope: !9361, file: !1177, line: 39, type: !9144)
!9366 = !DILocation(line: 0, scope: !9361)
!9367 = !DILocation(line: 41, column: 29, scope: !9361)
!9368 = !DILocation(line: 41, column: 39, scope: !9361)
!9369 = !DILocation(line: 41, column: 44, scope: !9361)
!9370 = !DILocation(line: 41, column: 2, scope: !9361)
!9371 = !DILocation(line: 42, column: 1, scope: !9361)
!9372 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1177, file: !1177, line: 376, type: !9373, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9375)
!9373 = !DISubroutineType(types: !9374)
!9374 = !{!119, !119, !119}
!9375 = !{!9376, !9377, !9378, !9380, !9381}
!9376 = !DILocalVariable(name: "port", arg: 1, scope: !9372, file: !1177, line: 376, type: !119)
!9377 = !DILocalVariable(name: "pin", arg: 2, scope: !9372, file: !1177, line: 376, type: !119)
!9378 = !DILocalVariable(name: "clk", scope: !9372, file: !1177, line: 386, type: !9379)
!9379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!9380 = !DILocalVariable(name: "pclken", scope: !9372, file: !1177, line: 387, type: !1293)
!9381 = !DILocalVariable(name: "ret", scope: !9372, file: !1177, line: 396, type: !119)
!9382 = !DILocation(line: 0, scope: !9372)
!9383 = !DILocation(line: 387, column: 2, scope: !9372)
!9384 = !DILocation(line: 387, column: 22, scope: !9372)
!9385 = !DILocation(line: 399, column: 8, scope: !9372)
!9386 = !DILocation(line: 400, column: 10, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9372, file: !1177, line: 400, column: 6)
!9388 = !DILocation(line: 400, column: 6, scope: !9372)
!9389 = !DILocation(line: 405, column: 2, scope: !9372)
!9390 = !DILocation(line: 407, column: 2, scope: !9372)
!9391 = !DILocation(line: 408, column: 1, scope: !9372)
!9392 = distinct !DISubprogram(name: "clock_control_on", scope: !813, file: !813, line: 123, type: !1142, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9393)
!9393 = !{!9394, !9395, !9396}
!9394 = !DILocalVariable(name: "dev", arg: 1, scope: !9392, file: !813, line: 123, type: !1037)
!9395 = !DILocalVariable(name: "sys", arg: 2, scope: !9392, file: !813, line: 124, type: !908)
!9396 = !DILocalVariable(name: "api", scope: !9392, file: !813, line: 126, type: !1135)
!9397 = !DILocation(line: 0, scope: !9392)
!9398 = !DILocation(line: 127, column: 49, scope: !9392)
!9399 = !DILocation(line: 129, column: 14, scope: !9392)
!9400 = !DILocation(line: 129, column: 9, scope: !9392)
!9401 = !DILocation(line: 129, column: 2, scope: !9392)
!9402 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1177, file: !1177, line: 311, type: !8521, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9403)
!9403 = !{!9404, !9405, !9406}
!9404 = !DILocalVariable(name: "port", arg: 1, scope: !9402, file: !1177, line: 311, type: !119)
!9405 = !DILocalVariable(name: "pin", arg: 2, scope: !9402, file: !1177, line: 311, type: !119)
!9406 = !DILocalVariable(name: "line", scope: !9402, file: !1177, line: 313, type: !118)
!9407 = !DILocation(line: 0, scope: !9402)
!9408 = !DILocation(line: 313, column: 18, scope: !9402)
!9409 = !DILocation(line: 337, column: 2, scope: !9402)
!9410 = !DILocation(line: 340, column: 1, scope: !9402)
!9411 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1177, file: !1177, line: 295, type: !9412, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9414)
!9412 = !DISubroutineType(types: !9413)
!9413 = !{!118, !119}
!9414 = !{!9415}
!9415 = !DILocalVariable(name: "pin", arg: 1, scope: !9411, file: !1177, line: 295, type: !119)
!9416 = !DILocation(line: 0, scope: !9411)
!9417 = !DILocation(line: 307, column: 46, scope: !9411)
!9418 = !DILocation(line: 307, column: 27, scope: !9411)
!9419 = !DILocation(line: 307, column: 32, scope: !9411)
!9420 = !DILocation(line: 307, column: 14, scope: !9411)
!9421 = !DILocation(line: 307, column: 39, scope: !9411)
!9422 = !DILocation(line: 307, column: 2, scope: !9411)
!9423 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5980, file: !5980, line: 671, type: !9424, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9426)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{null, !118, !118}
!9426 = !{!9427, !9428}
!9427 = !DILocalVariable(name: "Port", arg: 1, scope: !9423, file: !5980, line: 671, type: !118)
!9428 = !DILocalVariable(name: "Line", arg: 2, scope: !9423, file: !5980, line: 671, type: !118)
!9429 = !DILocation(line: 0, scope: !9423)
!9430 = !DILocation(line: 673, column: 3, scope: !9423)
!9431 = !DILocalVariable(name: "value", arg: 1, scope: !9432, file: !6280, line: 373, type: !118)
!9432 = distinct !DISubprogram(name: "__RBIT", scope: !6280, file: !6280, line: 373, type: !7565, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9433)
!9433 = !{!9431, !9434}
!9434 = !DILocalVariable(name: "result", scope: !9432, file: !6280, line: 375, type: !118)
!9435 = !DILocation(line: 0, scope: !9432, inlinedAt: !9436)
!9436 = distinct !DILocation(line: 673, column: 3, scope: !9423)
!9437 = !DILocation(line: 380, column: 4, scope: !9432, inlinedAt: !9436)
!9438 = !{i64 2835498}
!9439 = !DILocalVariable(name: "value", arg: 1, scope: !9440, file: !6280, line: 403, type: !118)
!9440 = distinct !DISubprogram(name: "__CLZ", scope: !6280, file: !6280, line: 403, type: !9441, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!185, !118}
!9443 = !{!9439}
!9444 = !DILocation(line: 0, scope: !9440, inlinedAt: !9445)
!9445 = distinct !DILocation(line: 673, column: 3, scope: !9423)
!9446 = !DILocation(line: 414, column: 7, scope: !9440, inlinedAt: !9445)
!9447 = !DILocation(line: 674, column: 1, scope: !9423)
!9448 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9193, file: !9193, line: 69, type: !9449, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9451)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{null, !9196, !1037, !118}
!9451 = !{!9452, !9453, !9454, !9455, !9456}
!9452 = !DILocalVariable(name: "list", arg: 1, scope: !9448, file: !9193, line: 69, type: !9196)
!9453 = !DILocalVariable(name: "port", arg: 2, scope: !9448, file: !9193, line: 70, type: !1037)
!9454 = !DILocalVariable(name: "pins", arg: 3, scope: !9448, file: !9193, line: 71, type: !118)
!9455 = !DILocalVariable(name: "cb", scope: !9448, file: !9193, line: 73, type: !1079)
!9456 = !DILocalVariable(name: "tmp", scope: !9448, file: !9193, line: 73, type: !1079)
!9457 = !DILocation(line: 0, scope: !9448)
!9458 = !DILocation(line: 75, column: 2, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9448, file: !9193, line: 75, column: 2)
!9460 = !DILocation(line: 0, scope: !9459)
!9461 = !DILocation(line: 76, column: 11, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !9193, line: 76, column: 7)
!9463 = distinct !DILexicalBlock(scope: !9464, file: !9193, line: 75, column: 57)
!9464 = distinct !DILexicalBlock(scope: !9459, file: !9193, line: 75, column: 2)
!9465 = !DILocation(line: 76, column: 20, scope: !9462)
!9466 = !DILocation(line: 76, column: 7, scope: !9463)
!9467 = !DILocation(line: 77, column: 4, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9469, file: !9193, line: 77, column: 4)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !9193, line: 77, column: 4)
!9470 = distinct !DILexicalBlock(scope: !9462, file: !9193, line: 76, column: 28)
!9471 = !DILocation(line: 77, column: 4, scope: !9469)
!9472 = !DILocation(line: 77, column: 4, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9468, file: !9193, line: 77, column: 4)
!9474 = !DILocation(line: 78, column: 4, scope: !9470)
!9475 = !DILocation(line: 79, column: 3, scope: !9470)
!9476 = !DILocation(line: 75, column: 2, scope: !9464)
!9477 = !DILocation(line: 81, column: 1, scope: !9448)
!9478 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5980, file: !5980, line: 710, type: !7565, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9479)
!9479 = !{!9480}
!9480 = !DILocalVariable(name: "Line", arg: 1, scope: !9478, file: !5980, line: 710, type: !118)
!9481 = !DILocation(line: 0, scope: !9478)
!9482 = !DILocation(line: 712, column: 21, scope: !9478)
!9483 = !DILocation(line: 0, scope: !9432, inlinedAt: !9484)
!9484 = distinct !DILocation(line: 712, column: 76, scope: !9478)
!9485 = !DILocation(line: 380, column: 4, scope: !9432, inlinedAt: !9484)
!9486 = !DILocation(line: 0, scope: !9440, inlinedAt: !9487)
!9487 = distinct !DILocation(line: 712, column: 76, scope: !9478)
!9488 = !DILocation(line: 414, column: 7, scope: !9440, inlinedAt: !9487)
!9489 = !DILocation(line: 712, column: 73, scope: !9478)
!9490 = !DILocation(line: 712, column: 3, scope: !9478)
!9491 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9492, file: !9492, line: 910, type: !9493, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9495)
!9492 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9493 = !DISubroutineType(types: !9494)
!9494 = !{null, !1110, !118}
!9495 = !{!9496, !9497}
!9496 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9491, file: !9492, line: 910, type: !1110)
!9497 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9491, file: !9492, line: 910, type: !118)
!9498 = !DILocation(line: 0, scope: !9491)
!9499 = !DILocation(line: 912, column: 3, scope: !9491)
!9500 = !DILocation(line: 913, column: 1, scope: !9491)
!9501 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9492, file: !9492, line: 823, type: !9502, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9504)
!9502 = !DISubroutineType(types: !9503)
!9503 = !{!118, !1110}
!9504 = !{!9505}
!9505 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9501, file: !9492, line: 823, type: !1110)
!9506 = !DILocation(line: 0, scope: !9501)
!9507 = !DILocation(line: 825, column: 21, scope: !9501)
!9508 = !DILocation(line: 825, column: 3, scope: !9501)
!9509 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9492, file: !9492, line: 812, type: !9493, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9510)
!9510 = !{!9511, !9512}
!9511 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9509, file: !9492, line: 812, type: !1110)
!9512 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9509, file: !9492, line: 812, type: !118)
!9513 = !DILocation(line: 0, scope: !9509)
!9514 = !DILocation(line: 814, column: 3, scope: !9509)
!9515 = !DILocation(line: 815, column: 1, scope: !9509)
!9516 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9492, file: !9492, line: 771, type: !9502, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9517)
!9517 = !{!9518}
!9518 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9516, file: !9492, line: 771, type: !1110)
!9519 = !DILocation(line: 0, scope: !9516)
!9520 = !DILocation(line: 773, column: 21, scope: !9516)
!9521 = !DILocation(line: 773, column: 3, scope: !9516)
!9522 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1177, file: !1177, line: 47, type: !9523, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9525)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{!119, !1053, !280}
!9525 = !{!9526, !9527}
!9526 = !DILocalVariable(name: "flags", arg: 1, scope: !9522, file: !1177, line: 47, type: !1053)
!9527 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9522, file: !1177, line: 47, type: !280)
!9528 = !DILocation(line: 0, scope: !9522)
!9529 = !DILocation(line: 50, column: 13, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9522, file: !1177, line: 50, column: 6)
!9531 = !DILocation(line: 50, column: 28, scope: !9530)
!9532 = !DILocation(line: 50, column: 6, scope: !9522)
!9533 = !DILocation(line: 53, column: 11, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9530, file: !1177, line: 50, column: 34)
!9535 = !DILocation(line: 55, column: 14, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9534, file: !1177, line: 55, column: 7)
!9537 = !DILocation(line: 55, column: 35, scope: !9536)
!9538 = !DILocation(line: 55, column: 7, scope: !9534)
!9539 = !DILocation(line: 56, column: 14, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !1177, line: 56, column: 8)
!9541 = distinct !DILexicalBlock(scope: !9536, file: !1177, line: 55, column: 41)
!9542 = !DILocation(line: 56, column: 8, scope: !9541)
!9543 = !DILocation(line: 0, scope: !9536)
!9544 = !DILocation(line: 66, column: 14, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9534, file: !1177, line: 66, column: 7)
!9546 = !DILocation(line: 66, column: 30, scope: !9545)
!9547 = !DILocation(line: 66, column: 7, scope: !9534)
!9548 = !DILocation(line: 67, column: 12, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9545, file: !1177, line: 66, column: 36)
!9550 = !DILocation(line: 68, column: 3, scope: !9549)
!9551 = !DILocation(line: 68, column: 21, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9545, file: !1177, line: 68, column: 14)
!9553 = !DILocation(line: 68, column: 39, scope: !9552)
!9554 = !DILocation(line: 68, column: 14, scope: !9545)
!9555 = !DILocation(line: 69, column: 12, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9552, file: !1177, line: 68, column: 45)
!9557 = !DILocation(line: 70, column: 3, scope: !9556)
!9558 = !DILocation(line: 72, column: 21, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9530, file: !1177, line: 72, column: 14)
!9560 = !DILocation(line: 72, column: 35, scope: !9559)
!9561 = !DILocation(line: 72, column: 14, scope: !9530)
!9562 = !DILocation(line: 77, column: 14, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !1177, line: 77, column: 7)
!9564 = distinct !DILexicalBlock(scope: !9559, file: !1177, line: 72, column: 41)
!9565 = !DILocation(line: 77, column: 30, scope: !9563)
!9566 = !DILocation(line: 77, column: 7, scope: !9564)
!9567 = !DILocation(line: 0, scope: !9530)
!9568 = !DILocation(line: 90, column: 1, scope: !9522)
!9569 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1177, file: !1177, line: 157, type: !9570, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9572)
!9570 = !DISubroutineType(types: !9571)
!9571 = !{null, !1037, !119, !119, !119}
!9572 = !{!9573, !9574, !9575, !9576, !9577, !9578, !9579, !9580, !9581, !9582, !9583}
!9573 = !DILocalVariable(name: "dev", arg: 1, scope: !9569, file: !1177, line: 157, type: !1037)
!9574 = !DILocalVariable(name: "pin", arg: 2, scope: !9569, file: !1177, line: 157, type: !119)
!9575 = !DILocalVariable(name: "conf", arg: 3, scope: !9569, file: !1177, line: 158, type: !119)
!9576 = !DILocalVariable(name: "func", arg: 4, scope: !9569, file: !1177, line: 158, type: !119)
!9577 = !DILocalVariable(name: "cfg", scope: !9569, file: !1177, line: 160, type: !9077)
!9578 = !DILocalVariable(name: "gpio", scope: !9569, file: !1177, line: 161, type: !1110)
!9579 = !DILocalVariable(name: "pin_ll", scope: !9569, file: !1177, line: 163, type: !119)
!9580 = !DILocalVariable(name: "mode", scope: !9569, file: !1177, line: 227, type: !32)
!9581 = !DILocalVariable(name: "otype", scope: !9569, file: !1177, line: 227, type: !32)
!9582 = !DILocalVariable(name: "ospeed", scope: !9569, file: !1177, line: 227, type: !32)
!9583 = !DILocalVariable(name: "pupd", scope: !9569, file: !1177, line: 227, type: !32)
!9584 = !DILocation(line: 0, scope: !9569)
!9585 = !DILocation(line: 160, column: 45, scope: !9569)
!9586 = !DILocation(line: 161, column: 44, scope: !9569)
!9587 = !DILocation(line: 163, column: 15, scope: !9569)
!9588 = !DILocation(line: 229, column: 14, scope: !9569)
!9589 = !DILocation(line: 246, column: 47, scope: !9569)
!9590 = !DILocation(line: 246, column: 2, scope: !9569)
!9591 = !DILocation(line: 248, column: 43, scope: !9569)
!9592 = !DILocation(line: 248, column: 2, scope: !9569)
!9593 = !DILocation(line: 250, column: 40, scope: !9569)
!9594 = !DILocation(line: 250, column: 2, scope: !9569)
!9595 = !DILocation(line: 252, column: 11, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9569, file: !1177, line: 252, column: 6)
!9597 = !DILocation(line: 252, column: 6, scope: !9569)
!9598 = !DILocation(line: 253, column: 11, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9600, file: !1177, line: 253, column: 7)
!9600 = distinct !DILexicalBlock(scope: !9596, file: !1177, line: 252, column: 36)
!9601 = !DILocation(line: 253, column: 7, scope: !9600)
!9602 = !DILocation(line: 254, column: 4, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9599, file: !1177, line: 253, column: 16)
!9604 = !DILocation(line: 255, column: 3, scope: !9603)
!9605 = !DILocation(line: 256, column: 4, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9599, file: !1177, line: 255, column: 10)
!9607 = !DILocation(line: 260, column: 40, scope: !9569)
!9608 = !DILocation(line: 260, column: 2, scope: !9569)
!9609 = !DILocation(line: 265, column: 1, scope: !9569)
!9610 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1177, file: !1177, line: 137, type: !9412, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9611)
!9611 = !{!9612, !9613}
!9612 = !DILocalVariable(name: "pin", arg: 1, scope: !9610, file: !1177, line: 137, type: !119)
!9613 = !DILocalVariable(name: "pinval", scope: !9610, file: !1177, line: 139, type: !118)
!9614 = !DILocation(line: 0, scope: !9610)
!9615 = !DILocation(line: 149, column: 13, scope: !9610)
!9616 = !DILocation(line: 151, column: 2, scope: !9610)
!9617 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9492, file: !9492, line: 342, type: !9618, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9620)
!9618 = !DISubroutineType(types: !9619)
!9619 = !{null, !1110, !118, !118}
!9620 = !{!9621, !9622, !9623}
!9621 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9617, file: !9492, line: 342, type: !1110)
!9622 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9617, file: !9492, line: 342, type: !118)
!9623 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9617, file: !9492, line: 342, type: !118)
!9624 = !DILocation(line: 0, scope: !9617)
!9625 = !DILocation(line: 344, column: 3, scope: !9617)
!9626 = !DILocation(line: 345, column: 1, scope: !9617)
!9627 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9492, file: !9492, line: 413, type: !9618, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9628)
!9628 = !{!9629, !9630, !9631}
!9629 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9627, file: !9492, line: 413, type: !1110)
!9630 = !DILocalVariable(name: "Pin", arg: 2, scope: !9627, file: !9492, line: 413, type: !118)
!9631 = !DILocalVariable(name: "Speed", arg: 3, scope: !9627, file: !9492, line: 413, type: !118)
!9632 = !DILocation(line: 0, scope: !9627)
!9633 = !DILocation(line: 415, column: 3, scope: !9627)
!9634 = !DILocation(line: 0, scope: !9432, inlinedAt: !9635)
!9635 = distinct !DILocation(line: 415, column: 3, scope: !9627)
!9636 = !DILocation(line: 380, column: 4, scope: !9432, inlinedAt: !9635)
!9637 = !DILocation(line: 0, scope: !9440, inlinedAt: !9638)
!9638 = distinct !DILocation(line: 415, column: 3, scope: !9627)
!9639 = !DILocation(line: 414, column: 7, scope: !9440, inlinedAt: !9638)
!9640 = !DILocation(line: 0, scope: !9432, inlinedAt: !9641)
!9641 = distinct !DILocation(line: 415, column: 3, scope: !9627)
!9642 = !DILocation(line: 0, scope: !9440, inlinedAt: !9643)
!9643 = distinct !DILocation(line: 415, column: 3, scope: !9627)
!9644 = !DILocation(line: 417, column: 1, scope: !9627)
!9645 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9492, file: !9492, line: 484, type: !9618, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9646)
!9646 = !{!9647, !9648, !9649}
!9647 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9645, file: !9492, line: 484, type: !1110)
!9648 = !DILocalVariable(name: "Pin", arg: 2, scope: !9645, file: !9492, line: 484, type: !118)
!9649 = !DILocalVariable(name: "Pull", arg: 3, scope: !9645, file: !9492, line: 484, type: !118)
!9650 = !DILocation(line: 0, scope: !9645)
!9651 = !DILocation(line: 486, column: 3, scope: !9645)
!9652 = !DILocation(line: 0, scope: !9432, inlinedAt: !9653)
!9653 = distinct !DILocation(line: 486, column: 3, scope: !9645)
!9654 = !DILocation(line: 380, column: 4, scope: !9432, inlinedAt: !9653)
!9655 = !DILocation(line: 0, scope: !9440, inlinedAt: !9656)
!9656 = distinct !DILocation(line: 486, column: 3, scope: !9645)
!9657 = !DILocation(line: 414, column: 7, scope: !9440, inlinedAt: !9656)
!9658 = !DILocation(line: 0, scope: !9432, inlinedAt: !9659)
!9659 = distinct !DILocation(line: 486, column: 3, scope: !9645)
!9660 = !DILocation(line: 0, scope: !9440, inlinedAt: !9661)
!9661 = distinct !DILocation(line: 486, column: 3, scope: !9645)
!9662 = !DILocation(line: 487, column: 1, scope: !9645)
!9663 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9492, file: !9492, line: 556, type: !9618, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9664)
!9664 = !{!9665, !9666, !9667}
!9665 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9663, file: !9492, line: 556, type: !1110)
!9666 = !DILocalVariable(name: "Pin", arg: 2, scope: !9663, file: !9492, line: 556, type: !118)
!9667 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9663, file: !9492, line: 556, type: !118)
!9668 = !DILocation(line: 0, scope: !9663)
!9669 = !DILocation(line: 558, column: 3, scope: !9663)
!9670 = !DILocation(line: 0, scope: !9432, inlinedAt: !9671)
!9671 = distinct !DILocation(line: 558, column: 3, scope: !9663)
!9672 = !DILocation(line: 380, column: 4, scope: !9432, inlinedAt: !9671)
!9673 = !DILocation(line: 0, scope: !9440, inlinedAt: !9674)
!9674 = distinct !DILocation(line: 558, column: 3, scope: !9663)
!9675 = !DILocation(line: 414, column: 7, scope: !9440, inlinedAt: !9674)
!9676 = !DILocation(line: 0, scope: !9432, inlinedAt: !9677)
!9677 = distinct !DILocation(line: 558, column: 3, scope: !9663)
!9678 = !DILocation(line: 0, scope: !9440, inlinedAt: !9679)
!9679 = distinct !DILocation(line: 558, column: 3, scope: !9663)
!9680 = !DILocation(line: 560, column: 1, scope: !9663)
!9681 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9492, file: !9492, line: 633, type: !9618, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9682)
!9682 = !{!9683, !9684, !9685}
!9683 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9681, file: !9492, line: 633, type: !1110)
!9684 = !DILocalVariable(name: "Pin", arg: 2, scope: !9681, file: !9492, line: 633, type: !118)
!9685 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9681, file: !9492, line: 633, type: !118)
!9686 = !DILocation(line: 0, scope: !9681)
!9687 = !DILocation(line: 635, column: 3, scope: !9681)
!9688 = !DILocation(line: 0, scope: !9432, inlinedAt: !9689)
!9689 = distinct !DILocation(line: 635, column: 3, scope: !9681)
!9690 = !DILocation(line: 380, column: 4, scope: !9432, inlinedAt: !9689)
!9691 = !DILocation(line: 0, scope: !9440, inlinedAt: !9692)
!9692 = distinct !DILocation(line: 635, column: 3, scope: !9681)
!9693 = !DILocation(line: 414, column: 7, scope: !9440, inlinedAt: !9692)
!9694 = !DILocation(line: 0, scope: !9432, inlinedAt: !9695)
!9695 = distinct !DILocation(line: 635, column: 3, scope: !9681)
!9696 = !DILocation(line: 0, scope: !9440, inlinedAt: !9697)
!9697 = distinct !DILocation(line: 635, column: 3, scope: !9681)
!9698 = !DILocation(line: 637, column: 1, scope: !9681)
!9699 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9492, file: !9492, line: 273, type: !9618, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9700)
!9700 = !{!9701, !9702, !9703}
!9701 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9699, file: !9492, line: 273, type: !1110)
!9702 = !DILocalVariable(name: "Pin", arg: 2, scope: !9699, file: !9492, line: 273, type: !118)
!9703 = !DILocalVariable(name: "Mode", arg: 3, scope: !9699, file: !9492, line: 273, type: !118)
!9704 = !DILocation(line: 0, scope: !9699)
!9705 = !DILocation(line: 275, column: 3, scope: !9699)
!9706 = !DILocation(line: 0, scope: !9432, inlinedAt: !9707)
!9707 = distinct !DILocation(line: 275, column: 3, scope: !9699)
!9708 = !DILocation(line: 380, column: 4, scope: !9432, inlinedAt: !9707)
!9709 = !DILocation(line: 0, scope: !9440, inlinedAt: !9710)
!9710 = distinct !DILocation(line: 275, column: 3, scope: !9699)
!9711 = !DILocation(line: 414, column: 7, scope: !9440, inlinedAt: !9710)
!9712 = !DILocation(line: 0, scope: !9432, inlinedAt: !9713)
!9713 = distinct !DILocation(line: 275, column: 3, scope: !9699)
!9714 = !DILocation(line: 0, scope: !9440, inlinedAt: !9715)
!9715 = distinct !DILocation(line: 275, column: 3, scope: !9699)
!9716 = !DILocation(line: 276, column: 1, scope: !9699)
!9717 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1177, file: !1177, line: 698, type: !1190, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9718)
!9718 = !{!9719, !9720, !9721}
!9719 = !DILocalVariable(name: "dev", arg: 1, scope: !9717, file: !1177, line: 698, type: !1037)
!9720 = !DILocalVariable(name: "data", scope: !9717, file: !1177, line: 700, type: !9144)
!9721 = !DILocalVariable(name: "ret", scope: !9717, file: !1177, line: 701, type: !119)
!9722 = !DILocation(line: 0, scope: !9717)
!9723 = !DILocation(line: 700, column: 38, scope: !9717)
!9724 = !DILocation(line: 703, column: 8, scope: !9717)
!9725 = !DILocation(line: 703, column: 12, scope: !9717)
!9726 = !DILocation(line: 705, column: 7, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9717, file: !1177, line: 705, column: 6)
!9728 = !DILocation(line: 705, column: 6, scope: !9717)
!9729 = !DILocation(line: 722, column: 8, scope: !9717)
!9730 = !DILocation(line: 723, column: 10, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9717, file: !1177, line: 723, column: 6)
!9732 = !DILocation(line: 723, column: 6, scope: !9717)
!9733 = !DILocation(line: 731, column: 1, scope: !9717)
!9734 = distinct !DISubprogram(name: "device_is_ready", scope: !8922, file: !8922, line: 47, type: !9735, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9737)
!9735 = !DISubroutineType(types: !9736)
!9736 = !{!345, !1037}
!9737 = !{!9738}
!9738 = !DILocalVariable(name: "dev", arg: 1, scope: !9734, file: !8922, line: 47, type: !1037)
!9739 = !DILocation(line: 0, scope: !9734)
!9740 = !DILocation(line: 55, column: 2, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9734, file: !8922, line: 55, column: 2)
!9742 = !{i64 2154268674}
!9743 = !DILocation(line: 56, column: 9, scope: !9734)
!9744 = !DILocation(line: 56, column: 2, scope: !9734)
!9745 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1177, file: !1177, line: 270, type: !9746, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9748)
!9746 = !DISubroutineType(types: !9747)
!9747 = !{!119, !1037, !345}
!9748 = !{!9749, !9750, !9751, !9752, !9753}
!9749 = !DILocalVariable(name: "dev", arg: 1, scope: !9745, file: !1177, line: 270, type: !1037)
!9750 = !DILocalVariable(name: "on", arg: 2, scope: !9745, file: !1177, line: 270, type: !345)
!9751 = !DILocalVariable(name: "cfg", scope: !9745, file: !1177, line: 272, type: !9077)
!9752 = !DILocalVariable(name: "ret", scope: !9745, file: !1177, line: 273, type: !119)
!9753 = !DILocalVariable(name: "clk", scope: !9745, file: !1177, line: 278, type: !9379)
!9754 = !DILocation(line: 0, scope: !9745)
!9755 = !DILocation(line: 272, column: 45, scope: !9745)
!9756 = !DILocation(line: 282, column: 38, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9758, file: !1177, line: 280, column: 10)
!9758 = distinct !DILexicalBlock(scope: !9745, file: !1177, line: 280, column: 6)
!9759 = !DILocation(line: 282, column: 6, scope: !9757)
!9760 = !DILocation(line: 281, column: 9, scope: !9757)
!9761 = !DILocation(line: 293, column: 1, scope: !9745)
!9762 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9735, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9763)
!9763 = !{!9764}
!9764 = !DILocalVariable(name: "dev", arg: 1, scope: !9762, file: !334, line: 730, type: !1037)
!9765 = !DILocation(line: 0, scope: !9762)
!9766 = !DILocation(line: 732, column: 9, scope: !9762)
!9767 = !DILocation(line: 732, column: 2, scope: !9762)
!9768 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1177, file: !1177, line: 496, type: !9769, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9771)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{!119, !1037, !119, !119, !119}
!9771 = !{!9772, !9773, !9774, !9775, !9776, !9777}
!9772 = !DILocalVariable(name: "dev", arg: 1, scope: !9768, file: !1177, line: 496, type: !1037)
!9773 = !DILocalVariable(name: "pin", arg: 2, scope: !9768, file: !1177, line: 496, type: !119)
!9774 = !DILocalVariable(name: "conf", arg: 3, scope: !9768, file: !1177, line: 496, type: !119)
!9775 = !DILocalVariable(name: "func", arg: 4, scope: !9768, file: !1177, line: 496, type: !119)
!9776 = !DILocalVariable(name: "ret", scope: !9768, file: !1177, line: 498, type: !119)
!9777 = !DILocalVariable(name: "gpio_out", scope: !9778, file: !1177, line: 508, type: !118)
!9778 = distinct !DILexicalBlock(scope: !9779, file: !1177, line: 507, column: 27)
!9779 = distinct !DILexicalBlock(scope: !9768, file: !1177, line: 507, column: 6)
!9780 = !DILocation(line: 0, scope: !9768)
!9781 = !DILocation(line: 505, column: 2, scope: !9768)
!9782 = !DILocation(line: 507, column: 11, scope: !9779)
!9783 = !DILocation(line: 507, column: 6, scope: !9768)
!9784 = !DILocation(line: 508, column: 28, scope: !9778)
!9785 = !DILocation(line: 0, scope: !9778)
!9786 = !DILocation(line: 510, column: 16, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9778, file: !1177, line: 510, column: 7)
!9788 = !DILocation(line: 0, scope: !9787)
!9789 = !DILocation(line: 510, column: 7, scope: !9778)
!9790 = !DILocation(line: 511, column: 4, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9787, file: !1177, line: 510, column: 32)
!9792 = !DILocation(line: 512, column: 3, scope: !9791)
!9793 = !DILocation(line: 513, column: 4, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9795, file: !1177, line: 512, column: 39)
!9795 = distinct !DILexicalBlock(scope: !9787, file: !1177, line: 512, column: 14)
!9796 = !DILocation(line: 514, column: 3, scope: !9794)
!9797 = !DILocation(line: 518, column: 1, scope: !9768)
!9798 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1450, file: !1450, line: 526, type: !1353, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9799)
!9799 = !{!9800, !9801, !9802}
!9800 = !DILocalVariable(name: "dev", arg: 1, scope: !9798, file: !1450, line: 526, type: !1355)
!9801 = !DILocalVariable(name: "c", arg: 2, scope: !9798, file: !1450, line: 526, type: !969)
!9802 = !DILocalVariable(name: "config", scope: !9798, file: !1450, line: 528, type: !9803)
!9803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!9804 = !DILocation(line: 0, scope: !9798)
!9805 = !DILocation(line: 528, column: 48, scope: !9798)
!9806 = !DILocation(line: 531, column: 40, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9798, file: !1450, line: 531, column: 6)
!9808 = !DILocation(line: 531, column: 6, scope: !9807)
!9809 = !DILocation(line: 531, column: 6, scope: !9798)
!9810 = !DILocation(line: 532, column: 34, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9807, file: !1450, line: 531, column: 48)
!9812 = !DILocation(line: 532, column: 3, scope: !9811)
!9813 = !DILocation(line: 533, column: 2, scope: !9811)
!9814 = !DILocation(line: 539, column: 42, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9798, file: !1450, line: 539, column: 6)
!9816 = !DILocation(line: 539, column: 7, scope: !9815)
!9817 = !DILocation(line: 539, column: 6, scope: !9798)
!9818 = !DILocation(line: 543, column: 52, scope: !9798)
!9819 = !DILocation(line: 543, column: 22, scope: !9798)
!9820 = !DILocation(line: 543, column: 5, scope: !9798)
!9821 = !DILocation(line: 545, column: 2, scope: !9798)
!9822 = !DILocation(line: 546, column: 1, scope: !9798)
!9823 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1450, file: !1450, line: 548, type: !1372, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9824)
!9824 = !{!9825, !9826, !9827, !9828}
!9825 = !DILocalVariable(name: "dev", arg: 1, scope: !9823, file: !1450, line: 548, type: !1355)
!9826 = !DILocalVariable(name: "c", arg: 2, scope: !9823, file: !1450, line: 549, type: !186)
!9827 = !DILocalVariable(name: "config", scope: !9823, file: !1450, line: 551, type: !9803)
!9828 = !DILocalVariable(name: "key", scope: !9823, file: !1450, line: 555, type: !32)
!9829 = !DILocation(line: 0, scope: !9823)
!9830 = !DILocation(line: 551, column: 48, scope: !9823)
!9831 = !DILocation(line: 562, column: 2, scope: !9823)
!9832 = !DILocation(line: 563, column: 41, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9834, file: !1450, line: 563, column: 7)
!9834 = distinct !DILexicalBlock(scope: !9823, file: !1450, line: 562, column: 12)
!9835 = !DILocation(line: 563, column: 7, scope: !9833)
!9836 = !DILocation(line: 563, column: 7, scope: !9834)
!9837 = !DILocation(line: 55, column: 2, scope: !9838, inlinedAt: !9842)
!9838 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5959, file: !5959, line: 42, type: !5960, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9839)
!9839 = !{!9840, !9841}
!9840 = !DILocalVariable(name: "key", scope: !9838, file: !5959, line: 44, type: !32)
!9841 = !DILocalVariable(name: "tmp", scope: !9838, file: !5959, line: 53, type: !32)
!9842 = distinct !DILocation(line: 564, column: 10, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9833, file: !1450, line: 563, column: 49)
!9844 = !{i64 2001043}
!9845 = !DILocation(line: 0, scope: !9838, inlinedAt: !9842)
!9846 = !DILocation(line: 565, column: 42, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9843, file: !1450, line: 565, column: 8)
!9848 = !DILocation(line: 565, column: 8, scope: !9847)
!9849 = !DILocation(line: 565, column: 8, scope: !9843)
!9850 = !DILocalVariable(name: "key", arg: 1, scope: !9851, file: !5959, line: 84, type: !32)
!9851 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5959, file: !5959, line: 84, type: !5970, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9852)
!9852 = !{!9850}
!9853 = !DILocation(line: 0, scope: !9851, inlinedAt: !9854)
!9854 = distinct !DILocation(line: 568, column: 4, scope: !9843)
!9855 = !DILocation(line: 95, column: 2, scope: !9851, inlinedAt: !9854)
!9856 = !{i64 2001860}
!9857 = !DILocation(line: 569, column: 3, scope: !9843)
!9858 = distinct !{!9858, !9831, !9859}
!9859 = !DILocation(line: 570, column: 2, scope: !9823)
!9860 = !DILocation(line: 592, column: 33, scope: !9823)
!9861 = !DILocation(line: 592, column: 2, scope: !9823)
!9862 = !DILocation(line: 0, scope: !9851, inlinedAt: !9863)
!9863 = distinct !DILocation(line: 593, column: 2, scope: !9823)
!9864 = !DILocation(line: 95, column: 2, scope: !9851, inlinedAt: !9863)
!9865 = !DILocation(line: 594, column: 1, scope: !9823)
!9866 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1450, file: !1450, line: 596, type: !1376, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9867)
!9867 = !{!9868, !9869, !9870}
!9868 = !DILocalVariable(name: "dev", arg: 1, scope: !9866, file: !1450, line: 596, type: !1355)
!9869 = !DILocalVariable(name: "config", scope: !9866, file: !1450, line: 598, type: !9803)
!9870 = !DILocalVariable(name: "err", scope: !9866, file: !1450, line: 599, type: !118)
!9871 = !DILocation(line: 0, scope: !9866)
!9872 = !DILocation(line: 598, column: 48, scope: !9866)
!9873 = !DILocation(line: 606, column: 40, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9866, file: !1450, line: 606, column: 6)
!9875 = !DILocation(line: 606, column: 6, scope: !9874)
!9876 = !DILocation(line: 606, column: 6, scope: !9866)
!9877 = !DILocation(line: 610, column: 39, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9866, file: !1450, line: 610, column: 6)
!9879 = !DILocation(line: 610, column: 6, scope: !9878)
!9880 = !DILocation(line: 610, column: 6, scope: !9866)
!9881 = !DILocation(line: 614, column: 39, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9866, file: !1450, line: 614, column: 6)
!9883 = !DILocation(line: 614, column: 6, scope: !9882)
!9884 = !DILocation(line: 614, column: 6, scope: !9866)
!9885 = !DILocation(line: 619, column: 40, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9866, file: !1450, line: 619, column: 6)
!9887 = !DILocation(line: 619, column: 6, scope: !9886)
!9888 = !DILocation(line: 619, column: 6, scope: !9866)
!9889 = !DILocation(line: 623, column: 10, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9866, file: !1450, line: 623, column: 6)
!9891 = !DILocation(line: 623, column: 6, scope: !9866)
!9892 = !DILocation(line: 624, column: 34, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9890, file: !1450, line: 623, column: 24)
!9894 = !DILocation(line: 624, column: 3, scope: !9893)
!9895 = !DILocation(line: 625, column: 2, scope: !9893)
!9896 = !DILocation(line: 632, column: 10, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9866, file: !1450, line: 632, column: 6)
!9898 = !DILocation(line: 632, column: 6, scope: !9866)
!9899 = !DILocation(line: 633, column: 34, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9897, file: !1450, line: 632, column: 32)
!9901 = !DILocation(line: 633, column: 3, scope: !9900)
!9902 = !DILocation(line: 634, column: 2, scope: !9900)
!9903 = !DILocation(line: 636, column: 10, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9866, file: !1450, line: 636, column: 6)
!9905 = !DILocation(line: 636, column: 6, scope: !9866)
!9906 = !DILocation(line: 637, column: 33, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9904, file: !1450, line: 636, column: 31)
!9908 = !DILocation(line: 637, column: 3, scope: !9907)
!9909 = !DILocation(line: 638, column: 2, scope: !9907)
!9910 = !DILocation(line: 640, column: 10, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9866, file: !1450, line: 640, column: 6)
!9912 = !DILocation(line: 640, column: 6, scope: !9866)
!9913 = !DILocation(line: 641, column: 33, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9911, file: !1450, line: 640, column: 32)
!9915 = !DILocation(line: 641, column: 3, scope: !9914)
!9916 = !DILocation(line: 642, column: 2, scope: !9914)
!9917 = !DILocation(line: 646, column: 32, scope: !9866)
!9918 = !DILocation(line: 646, column: 2, scope: !9866)
!9919 = !DILocation(line: 648, column: 2, scope: !9866)
!9920 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1450, file: !1450, line: 419, type: !1380, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9921)
!9921 = !{!9922, !9923, !9924, !9925, !9927, !9928, !9929, !9930}
!9922 = !DILocalVariable(name: "dev", arg: 1, scope: !9920, file: !1450, line: 419, type: !1355)
!9923 = !DILocalVariable(name: "cfg", arg: 2, scope: !9920, file: !1450, line: 420, type: !1382)
!9924 = !DILocalVariable(name: "config", scope: !9920, file: !1450, line: 422, type: !9803)
!9925 = !DILocalVariable(name: "data", scope: !9920, file: !1450, line: 423, type: !9926)
!9926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!9927 = !DILocalVariable(name: "parity", scope: !9920, file: !1450, line: 424, type: !6555)
!9928 = !DILocalVariable(name: "stopbits", scope: !9920, file: !1450, line: 425, type: !6555)
!9929 = !DILocalVariable(name: "databits", scope: !9920, file: !1450, line: 426, type: !6555)
!9930 = !DILocalVariable(name: "flowctrl", scope: !9920, file: !1450, line: 428, type: !6555)
!9931 = !DILocation(line: 0, scope: !9920)
!9932 = !DILocation(line: 422, column: 48, scope: !9920)
!9933 = !DILocation(line: 423, column: 38, scope: !9920)
!9934 = !DILocation(line: 424, column: 56, scope: !9920)
!9935 = !DILocation(line: 424, column: 51, scope: !9920)
!9936 = !DILocation(line: 424, column: 26, scope: !9920)
!9937 = !DILocation(line: 425, column: 60, scope: !9920)
!9938 = !DILocation(line: 425, column: 55, scope: !9920)
!9939 = !DILocation(line: 425, column: 28, scope: !9920)
!9940 = !DILocation(line: 426, column: 60, scope: !9920)
!9941 = !DILocation(line: 426, column: 55, scope: !9920)
!9942 = !DILocation(line: 426, column: 28, scope: !9920)
!9943 = !DILocation(line: 428, column: 58, scope: !9920)
!9944 = !DILocation(line: 428, column: 53, scope: !9920)
!9945 = !DILocation(line: 428, column: 28, scope: !9920)
!9946 = !DILocation(line: 431, column: 44, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 431, column: 6)
!9948 = !DILocation(line: 438, column: 22, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 437, column: 6)
!9950 = !DILocation(line: 437, column: 6, scope: !9920)
!9951 = !DILocation(line: 448, column: 6, scope: !9920)
!9952 = !DILocation(line: 465, column: 47, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 465, column: 6)
!9954 = !DILocation(line: 475, column: 21, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 475, column: 6)
!9956 = !DILocation(line: 475, column: 6, scope: !9920)
!9957 = !DILocation(line: 476, column: 8, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !1450, line: 476, column: 7)
!9959 = distinct !DILexicalBlock(scope: !9955, file: !1450, line: 475, column: 49)
!9960 = !DILocation(line: 477, column: 34, scope: !9958)
!9961 = !DILocation(line: 476, column: 7, scope: !9959)
!9962 = !DILocation(line: 482, column: 27, scope: !9920)
!9963 = !DILocation(line: 482, column: 2, scope: !9920)
!9964 = !DILocation(line: 484, column: 16, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 484, column: 6)
!9966 = !DILocation(line: 484, column: 13, scope: !9965)
!9967 = !DILocation(line: 484, column: 6, scope: !9920)
!9968 = !DILocation(line: 485, column: 3, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9965, file: !1450, line: 484, column: 44)
!9970 = !DILocation(line: 486, column: 2, scope: !9969)
!9971 = !DILocation(line: 488, column: 18, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 488, column: 6)
!9973 = !DILocation(line: 488, column: 15, scope: !9972)
!9974 = !DILocation(line: 488, column: 6, scope: !9920)
!9975 = !DILocation(line: 489, column: 3, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !1450, line: 488, column: 48)
!9977 = !DILocation(line: 490, column: 2, scope: !9976)
!9978 = !DILocation(line: 492, column: 18, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 492, column: 6)
!9980 = !DILocation(line: 492, column: 15, scope: !9979)
!9981 = !DILocation(line: 492, column: 6, scope: !9920)
!9982 = !DILocation(line: 493, column: 3, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9979, file: !1450, line: 492, column: 48)
!9984 = !DILocation(line: 494, column: 2, scope: !9983)
!9985 = !DILocation(line: 496, column: 18, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 496, column: 6)
!9987 = !DILocation(line: 496, column: 15, scope: !9986)
!9988 = !DILocation(line: 496, column: 6, scope: !9920)
!9989 = !DILocation(line: 497, column: 3, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9986, file: !1450, line: 496, column: 46)
!9991 = !DILocation(line: 498, column: 2, scope: !9990)
!9992 = !DILocation(line: 500, column: 11, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9920, file: !1450, line: 500, column: 6)
!9994 = !DILocation(line: 500, column: 29, scope: !9993)
!9995 = !DILocation(line: 500, column: 20, scope: !9993)
!9996 = !DILocation(line: 500, column: 6, scope: !9920)
!9997 = !DILocation(line: 501, column: 3, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9993, file: !1450, line: 500, column: 40)
!9999 = !DILocation(line: 502, column: 26, scope: !9998)
!10000 = !DILocation(line: 502, column: 19, scope: !9998)
!10001 = !DILocation(line: 503, column: 2, scope: !9998)
!10002 = !DILocation(line: 505, column: 26, scope: !9920)
!10003 = !DILocation(line: 505, column: 2, scope: !9920)
!10004 = !DILocation(line: 506, column: 2, scope: !9920)
!10005 = !DILocation(line: 507, column: 1, scope: !9920)
!10006 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1450, file: !1450, line: 509, type: !1393, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10007)
!10007 = !{!10008, !10009, !10010}
!10008 = !DILocalVariable(name: "dev", arg: 1, scope: !10006, file: !1450, line: 509, type: !1355)
!10009 = !DILocalVariable(name: "cfg", arg: 2, scope: !10006, file: !1450, line: 510, type: !1395)
!10010 = !DILocalVariable(name: "data", scope: !10006, file: !1450, line: 512, type: !9926)
!10011 = !DILocation(line: 0, scope: !10006)
!10012 = !DILocation(line: 512, column: 38, scope: !10006)
!10013 = !DILocation(line: 514, column: 24, scope: !10006)
!10014 = !DILocation(line: 514, column: 7, scope: !10006)
!10015 = !DILocation(line: 514, column: 16, scope: !10006)
!10016 = !DILocation(line: 515, column: 41, scope: !10006)
!10017 = !{i32 0, i32 1537}
!10018 = !DILocation(line: 515, column: 16, scope: !10006)
!10019 = !DILocation(line: 515, column: 7, scope: !10006)
!10020 = !DILocation(line: 515, column: 14, scope: !10006)
!10021 = !DILocation(line: 517, column: 3, scope: !10006)
!10022 = !{i32 0, i32 12289}
!10023 = !DILocation(line: 516, column: 19, scope: !10006)
!10024 = !DILocation(line: 516, column: 7, scope: !10006)
!10025 = !DILocation(line: 516, column: 17, scope: !10006)
!10026 = !DILocation(line: 519, column: 3, scope: !10006)
!10027 = !DILocation(line: 519, column: 33, scope: !10006)
!10028 = !DILocation(line: 518, column: 19, scope: !10006)
!10029 = !DILocation(line: 518, column: 7, scope: !10006)
!10030 = !DILocation(line: 518, column: 17, scope: !10006)
!10031 = !DILocation(line: 521, column: 3, scope: !10006)
!10032 = !{i32 0, i32 769}
!10033 = !DILocation(line: 520, column: 19, scope: !10006)
!10034 = !DILocation(line: 520, column: 7, scope: !10006)
!10035 = !DILocation(line: 520, column: 17, scope: !10006)
!10036 = !DILocation(line: 522, column: 2, scope: !10006)
!10037 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1450, file: !1450, line: 205, type: !10038, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10040)
!10038 = !DISubroutineType(types: !10039)
!10039 = !{!118, !1355}
!10040 = !{!10041, !10042}
!10041 = !DILocalVariable(name: "dev", arg: 1, scope: !10037, file: !1450, line: 205, type: !1355)
!10042 = !DILocalVariable(name: "config", scope: !10037, file: !1450, line: 207, type: !9803)
!10043 = !DILocation(line: 0, scope: !10037)
!10044 = !DILocation(line: 207, column: 48, scope: !10037)
!10045 = !DILocation(line: 209, column: 36, scope: !10037)
!10046 = !DILocation(line: 209, column: 9, scope: !10037)
!10047 = !DILocation(line: 209, column: 2, scope: !10037)
!10048 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1450, file: !1450, line: 270, type: !10049, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10051)
!10049 = !DISubroutineType(types: !10050)
!10050 = !{!1321, !118}
!10051 = !{!10052}
!10052 = !DILocalVariable(name: "parity", arg: 1, scope: !10048, file: !1450, line: 270, type: !118)
!10053 = !DILocation(line: 0, scope: !10048)
!10054 = !DILocation(line: 272, column: 2, scope: !10048)
!10055 = !DILocation(line: 281, column: 1, scope: !10048)
!10056 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1450, file: !1450, line: 220, type: !10038, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10057)
!10057 = !{!10058, !10059}
!10058 = !DILocalVariable(name: "dev", arg: 1, scope: !10056, file: !1450, line: 220, type: !1355)
!10059 = !DILocalVariable(name: "config", scope: !10056, file: !1450, line: 222, type: !9803)
!10060 = !DILocation(line: 0, scope: !10056)
!10061 = !DILocation(line: 222, column: 48, scope: !10056)
!10062 = !DILocation(line: 224, column: 44, scope: !10056)
!10063 = !DILocation(line: 224, column: 9, scope: !10056)
!10064 = !DILocation(line: 224, column: 2, scope: !10056)
!10065 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1450, file: !1450, line: 304, type: !10066, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10068)
!10066 = !DISubroutineType(types: !10067)
!10067 = !{!1335, !118}
!10068 = !{!10069}
!10069 = !DILocalVariable(name: "sb", arg: 1, scope: !10065, file: !1450, line: 304, type: !118)
!10070 = !DILocation(line: 0, scope: !10065)
!10071 = !DILocation(line: 306, column: 2, scope: !10065)
!10072 = !DILocation(line: 0, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10065, file: !1450, line: 306, column: 14)
!10074 = !DILocation(line: 323, column: 1, scope: !10065)
!10075 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1450, file: !1450, line: 235, type: !10038, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10076)
!10076 = !{!10077, !10078}
!10077 = !DILocalVariable(name: "dev", arg: 1, scope: !10075, file: !1450, line: 235, type: !1355)
!10078 = !DILocalVariable(name: "config", scope: !10075, file: !1450, line: 237, type: !9803)
!10079 = !DILocation(line: 0, scope: !10075)
!10080 = !DILocation(line: 237, column: 48, scope: !10075)
!10081 = !DILocation(line: 239, column: 39, scope: !10075)
!10082 = !DILocation(line: 239, column: 9, scope: !10075)
!10083 = !DILocation(line: 239, column: 2, scope: !10075)
!10084 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1450, file: !1450, line: 355, type: !10085, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10087)
!10085 = !DISubroutineType(types: !10086)
!10086 = !{!1328, !118, !118}
!10087 = !{!10088, !10089}
!10088 = !DILocalVariable(name: "db", arg: 1, scope: !10084, file: !1450, line: 355, type: !118)
!10089 = !DILocalVariable(name: "p", arg: 2, scope: !10084, file: !1450, line: 356, type: !118)
!10090 = !DILocation(line: 0, scope: !10084)
!10091 = !DILocation(line: 358, column: 2, scope: !10084)
!10092 = !DILocation(line: 384, column: 1, scope: !10084)
!10093 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1450, file: !1450, line: 250, type: !10038, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10094)
!10094 = !{!10095, !10096}
!10095 = !DILocalVariable(name: "dev", arg: 1, scope: !10093, file: !1450, line: 250, type: !1355)
!10096 = !DILocalVariable(name: "config", scope: !10093, file: !1450, line: 252, type: !9803)
!10097 = !DILocation(line: 0, scope: !10093)
!10098 = !DILocation(line: 252, column: 48, scope: !10093)
!10099 = !DILocation(line: 254, column: 40, scope: !10093)
!10100 = !DILocation(line: 254, column: 9, scope: !10093)
!10101 = !DILocation(line: 254, column: 2, scope: !10093)
!10102 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1450, file: !1450, line: 409, type: !10103, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10105)
!10103 = !DISubroutineType(types: !10104)
!10104 = !{!1341, !118}
!10105 = !{!10106}
!10106 = !DILocalVariable(name: "fc", arg: 1, scope: !10102, file: !1450, line: 409, type: !118)
!10107 = !DILocation(line: 0, scope: !10102)
!10108 = !DILocation(line: 411, column: 9, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10102, file: !1450, line: 411, column: 6)
!10110 = !DILocation(line: 416, column: 1, scope: !10102)
!10111 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10112, file: !10112, line: 967, type: !10113, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10115)
!10112 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10113 = !DISubroutineType(types: !10114)
!10114 = !{!118, !1396}
!10115 = !{!10116}
!10116 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10111, file: !10112, line: 967, type: !1396)
!10117 = !DILocation(line: 0, scope: !10111)
!10118 = !DILocation(line: 969, column: 21, scope: !10111)
!10119 = !DILocation(line: 969, column: 3, scope: !10111)
!10120 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10112, file: !10112, line: 601, type: !10113, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10121)
!10121 = !{!10122}
!10122 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10120, file: !10112, line: 601, type: !1396)
!10123 = !DILocation(line: 0, scope: !10120)
!10124 = !DILocation(line: 603, column: 21, scope: !10120)
!10125 = !DILocation(line: 603, column: 3, scope: !10120)
!10126 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10112, file: !10112, line: 820, type: !10113, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10127)
!10127 = !{!10128}
!10128 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10126, file: !10112, line: 820, type: !1396)
!10129 = !DILocation(line: 0, scope: !10126)
!10130 = !DILocation(line: 822, column: 21, scope: !10126)
!10131 = !DILocation(line: 822, column: 3, scope: !10126)
!10132 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10112, file: !10112, line: 547, type: !10113, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10133)
!10133 = !{!10134}
!10134 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10132, file: !10112, line: 547, type: !1396)
!10135 = !DILocation(line: 0, scope: !10132)
!10136 = !DILocation(line: 549, column: 21, scope: !10132)
!10137 = !DILocation(line: 549, column: 3, scope: !10132)
!10138 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1450, file: !1450, line: 257, type: !10139, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10141)
!10139 = !DISubroutineType(types: !10140)
!10140 = !{!118, !1321}
!10141 = !{!10142}
!10142 = !DILocalVariable(name: "parity", arg: 1, scope: !10138, file: !1450, line: 257, type: !1321)
!10143 = !DILocation(line: 0, scope: !10138)
!10144 = !DILocation(line: 259, column: 2, scope: !10138)
!10145 = !DILocation(line: 268, column: 1, scope: !10138)
!10146 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1450, file: !1450, line: 283, type: !10147, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10149)
!10147 = !DISubroutineType(types: !10148)
!10148 = !{!118, !1335}
!10149 = !{!10150}
!10150 = !DILocalVariable(name: "sb", arg: 1, scope: !10146, file: !1450, line: 283, type: !1335)
!10151 = !DILocation(line: 0, scope: !10146)
!10152 = !DILocation(line: 285, column: 2, scope: !10146)
!10153 = !DILocation(line: 0, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10146, file: !1450, line: 285, column: 14)
!10155 = !DILocation(line: 302, column: 1, scope: !10146)
!10156 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1450, file: !1450, line: 325, type: !10157, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10159)
!10157 = !DISubroutineType(types: !10158)
!10158 = !{!118, !1328, !1321}
!10159 = !{!10160, !10161}
!10160 = !DILocalVariable(name: "db", arg: 1, scope: !10156, file: !1450, line: 325, type: !1328)
!10161 = !DILocalVariable(name: "p", arg: 2, scope: !10156, file: !1450, line: 326, type: !1321)
!10162 = !DILocation(line: 0, scope: !10156)
!10163 = !DILocation(line: 328, column: 2, scope: !10156)
!10164 = !DILocation(line: 353, column: 1, scope: !10156)
!10165 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1450, file: !1450, line: 393, type: !10166, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10168)
!10166 = !DISubroutineType(types: !10167)
!10167 = !{!118, !1341}
!10168 = !{!10169}
!10169 = !DILocalVariable(name: "fc", arg: 1, scope: !10165, file: !1450, line: 393, type: !1341)
!10170 = !DILocation(line: 0, scope: !10165)
!10171 = !DILocation(line: 395, column: 9, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10165, file: !1450, line: 395, column: 6)
!10173 = !DILocation(line: 400, column: 1, scope: !10165)
!10174 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10112, file: !10112, line: 424, type: !10175, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10177)
!10175 = !DISubroutineType(types: !10176)
!10176 = !{null, !1396}
!10177 = !{!10178}
!10178 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10174, file: !10112, line: 424, type: !1396)
!10179 = !DILocation(line: 0, scope: !10174)
!10180 = !DILocation(line: 426, column: 3, scope: !10174)
!10181 = !DILocation(line: 427, column: 1, scope: !10174)
!10182 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1450, file: !1450, line: 197, type: !10183, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10185)
!10183 = !DISubroutineType(types: !10184)
!10184 = !{null, !1355, !118}
!10185 = !{!10186, !10187, !10188}
!10186 = !DILocalVariable(name: "dev", arg: 1, scope: !10182, file: !1450, line: 197, type: !1355)
!10187 = !DILocalVariable(name: "parity", arg: 2, scope: !10182, file: !1450, line: 198, type: !118)
!10188 = !DILocalVariable(name: "config", scope: !10182, file: !1450, line: 200, type: !9803)
!10189 = !DILocation(line: 0, scope: !10182)
!10190 = !DILocation(line: 200, column: 48, scope: !10182)
!10191 = !DILocation(line: 202, column: 29, scope: !10182)
!10192 = !DILocation(line: 202, column: 2, scope: !10182)
!10193 = !DILocation(line: 203, column: 1, scope: !10182)
!10194 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1450, file: !1450, line: 212, type: !10183, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10195)
!10195 = !{!10196, !10197, !10198}
!10196 = !DILocalVariable(name: "dev", arg: 1, scope: !10194, file: !1450, line: 212, type: !1355)
!10197 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10194, file: !1450, line: 213, type: !118)
!10198 = !DILocalVariable(name: "config", scope: !10194, file: !1450, line: 215, type: !9803)
!10199 = !DILocation(line: 0, scope: !10194)
!10200 = !DILocation(line: 215, column: 48, scope: !10194)
!10201 = !DILocation(line: 217, column: 37, scope: !10194)
!10202 = !DILocation(line: 217, column: 2, scope: !10194)
!10203 = !DILocation(line: 218, column: 1, scope: !10194)
!10204 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1450, file: !1450, line: 227, type: !10183, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10205)
!10205 = !{!10206, !10207, !10208}
!10206 = !DILocalVariable(name: "dev", arg: 1, scope: !10204, file: !1450, line: 227, type: !1355)
!10207 = !DILocalVariable(name: "databits", arg: 2, scope: !10204, file: !1450, line: 228, type: !118)
!10208 = !DILocalVariable(name: "config", scope: !10204, file: !1450, line: 230, type: !9803)
!10209 = !DILocation(line: 0, scope: !10204)
!10210 = !DILocation(line: 230, column: 48, scope: !10204)
!10211 = !DILocation(line: 232, column: 32, scope: !10204)
!10212 = !DILocation(line: 232, column: 2, scope: !10204)
!10213 = !DILocation(line: 233, column: 1, scope: !10204)
!10214 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1450, file: !1450, line: 242, type: !10183, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10215)
!10215 = !{!10216, !10217, !10218}
!10216 = !DILocalVariable(name: "dev", arg: 1, scope: !10214, file: !1450, line: 242, type: !1355)
!10217 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10214, file: !1450, line: 243, type: !118)
!10218 = !DILocalVariable(name: "config", scope: !10214, file: !1450, line: 245, type: !9803)
!10219 = !DILocation(line: 0, scope: !10214)
!10220 = !DILocation(line: 245, column: 48, scope: !10214)
!10221 = !DILocation(line: 247, column: 33, scope: !10214)
!10222 = !DILocation(line: 247, column: 2, scope: !10214)
!10223 = !DILocation(line: 248, column: 1, scope: !10214)
!10224 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1450, file: !1450, line: 107, type: !10183, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10225)
!10225 = !{!10226, !10227, !10228, !10229, !10230}
!10226 = !DILocalVariable(name: "dev", arg: 1, scope: !10224, file: !1450, line: 107, type: !1355)
!10227 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10224, file: !1450, line: 107, type: !118)
!10228 = !DILocalVariable(name: "config", scope: !10224, file: !1450, line: 109, type: !9803)
!10229 = !DILocalVariable(name: "data", scope: !10224, file: !1450, line: 110, type: !9926)
!10230 = !DILocalVariable(name: "clock_rate", scope: !10224, file: !1450, line: 112, type: !118)
!10231 = !DILocation(line: 0, scope: !10224)
!10232 = !DILocation(line: 109, column: 48, scope: !10224)
!10233 = !DILocation(line: 110, column: 38, scope: !10224)
!10234 = !DILocation(line: 112, column: 2, scope: !10224)
!10235 = !DILocation(line: 123, column: 36, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10237, file: !1450, line: 123, column: 7)
!10237 = distinct !DILexicalBlock(scope: !10238, file: !1450, line: 122, column: 9)
!10238 = distinct !DILexicalBlock(scope: !10224, file: !1450, line: 115, column: 6)
!10239 = !DILocation(line: 124, column: 42, scope: !10236)
!10240 = !DILocation(line: 123, column: 7, scope: !10236)
!10241 = !DILocation(line: 125, column: 22, scope: !10236)
!10242 = !DILocation(line: 123, column: 7, scope: !10237)
!10243 = !DILocation(line: 126, column: 4, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10245, file: !1450, line: 126, column: 4)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !1450, line: 126, column: 4)
!10246 = distinct !DILexicalBlock(scope: !10247, file: !1450, line: 126, column: 4)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !1450, line: 126, column: 4)
!10248 = distinct !DILexicalBlock(scope: !10236, file: !1450, line: 125, column: 27)
!10249 = !DILocation(line: 127, column: 4, scope: !10248)
!10250 = !DILocation(line: 176, column: 36, scope: !10224)
!10251 = !DILocation(line: 176, column: 3, scope: !10224)
!10252 = !DILocation(line: 179, column: 32, scope: !10224)
!10253 = !DILocation(line: 180, column: 10, scope: !10224)
!10254 = !DILocation(line: 179, column: 3, scope: !10224)
!10255 = !DILocation(line: 189, column: 3, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10257, file: !1450, line: 189, column: 3)
!10257 = distinct !DILexicalBlock(scope: !10224, file: !1450, line: 189, column: 3)
!10258 = !DILocation(line: 189, column: 3, scope: !10257)
!10259 = !DILocation(line: 189, column: 3, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10256, file: !1450, line: 189, column: 3)
!10261 = !DILocation(line: 195, column: 1, scope: !10224)
!10262 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10112, file: !10112, line: 410, type: !10175, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10263)
!10263 = !{!10264}
!10264 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10262, file: !10112, line: 410, type: !1396)
!10265 = !DILocation(line: 0, scope: !10262)
!10266 = !DILocation(line: 412, column: 3, scope: !10262)
!10267 = !DILocation(line: 413, column: 1, scope: !10262)
!10268 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !813, file: !813, line: 216, type: !1429, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10269)
!10269 = !{!10270, !10271, !10272, !10273}
!10270 = !DILocalVariable(name: "dev", arg: 1, scope: !10268, file: !813, line: 216, type: !1355)
!10271 = !DILocalVariable(name: "sys", arg: 2, scope: !10268, file: !813, line: 217, type: !908)
!10272 = !DILocalVariable(name: "rate", arg: 3, scope: !10268, file: !813, line: 218, type: !864)
!10273 = !DILocalVariable(name: "api", scope: !10268, file: !813, line: 220, type: !1407)
!10274 = !DILocation(line: 0, scope: !10268)
!10275 = !DILocation(line: 221, column: 49, scope: !10268)
!10276 = !DILocation(line: 223, column: 11, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10268, file: !813, line: 223, column: 6)
!10278 = !DILocation(line: 223, column: 20, scope: !10277)
!10279 = !DILocation(line: 223, column: 6, scope: !10268)
!10280 = !DILocation(line: 227, column: 9, scope: !10268)
!10281 = !DILocation(line: 227, column: 2, scope: !10268)
!10282 = !DILocation(line: 228, column: 1, scope: !10268)
!10283 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6037, file: !6037, line: 175, type: !6038, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10284)
!10284 = !{!10285}
!10285 = !DILocalVariable(name: "level", arg: 1, scope: !10283, file: !6037, line: 175, type: !119)
!10286 = !DILocation(line: 0, scope: !10283)
!10287 = !DILocation(line: 177, column: 2, scope: !10283)
!10288 = !DILocation(line: 189, column: 1, scope: !10283)
!10289 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10112, file: !10112, line: 615, type: !10290, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10292)
!10290 = !DISubroutineType(types: !10291)
!10291 = !{null, !1396, !118}
!10292 = !{!10293, !10294}
!10293 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10289, file: !10112, line: 615, type: !1396)
!10294 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10289, file: !10112, line: 615, type: !118)
!10295 = !DILocation(line: 0, scope: !10289)
!10296 = !DILocation(line: 617, column: 3, scope: !10289)
!10297 = !DILocation(line: 618, column: 1, scope: !10289)
!10298 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10112, file: !10112, line: 1020, type: !10299, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10301)
!10299 = !DISubroutineType(types: !10300)
!10300 = !{null, !1396, !118, !118, !118}
!10301 = !{!10302, !10303, !10304, !10305}
!10302 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10298, file: !10112, line: 1020, type: !1396)
!10303 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10298, file: !10112, line: 1020, type: !118)
!10304 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10298, file: !10112, line: 1020, type: !118)
!10305 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10298, file: !10112, line: 1021, type: !118)
!10306 = !DILocation(line: 0, scope: !10298)
!10307 = !DILocation(line: 1029, column: 30, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !10112, line: 1028, column: 3)
!10309 = distinct !DILexicalBlock(scope: !10298, file: !10112, line: 1023, column: 7)
!10310 = !DILocation(line: 1029, column: 19, scope: !10308)
!10311 = !DILocation(line: 1029, column: 13, scope: !10308)
!10312 = !DILocation(line: 1029, column: 17, scope: !10308)
!10313 = !DILocation(line: 1031, column: 1, scope: !10298)
!10314 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10112, file: !10112, line: 949, type: !10290, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10315)
!10315 = !{!10316, !10317}
!10316 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10314, file: !10112, line: 949, type: !1396)
!10317 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10314, file: !10112, line: 949, type: !118)
!10318 = !DILocation(line: 0, scope: !10314)
!10319 = !DILocation(line: 951, column: 3, scope: !10314)
!10320 = !DILocation(line: 952, column: 1, scope: !10314)
!10321 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10112, file: !10112, line: 588, type: !10290, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10322)
!10322 = !{!10323, !10324}
!10323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10321, file: !10112, line: 588, type: !1396)
!10324 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10321, file: !10112, line: 588, type: !118)
!10325 = !DILocation(line: 0, scope: !10321)
!10326 = !DILocation(line: 590, column: 3, scope: !10321)
!10327 = !DILocation(line: 591, column: 1, scope: !10321)
!10328 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10112, file: !10112, line: 805, type: !10290, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10329)
!10329 = !{!10330, !10331}
!10330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10328, file: !10112, line: 805, type: !1396)
!10331 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10328, file: !10112, line: 805, type: !118)
!10332 = !DILocation(line: 0, scope: !10328)
!10333 = !DILocation(line: 807, column: 3, scope: !10328)
!10334 = !DILocation(line: 808, column: 1, scope: !10328)
!10335 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10112, file: !10112, line: 532, type: !10290, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10336)
!10336 = !{!10337, !10338}
!10337 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10335, file: !10112, line: 532, type: !1396)
!10338 = !DILocalVariable(name: "Parity", arg: 2, scope: !10335, file: !10112, line: 532, type: !118)
!10339 = !DILocation(line: 0, scope: !10335)
!10340 = !DILocation(line: 534, column: 3, scope: !10335)
!10341 = !DILocation(line: 535, column: 1, scope: !10335)
!10342 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10112, file: !10112, line: 1770, type: !10113, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10343)
!10343 = !{!10344}
!10344 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10342, file: !10112, line: 1770, type: !1396)
!10345 = !DILocation(line: 0, scope: !10342)
!10346 = !DILocation(line: 1772, column: 11, scope: !10342)
!10347 = !DILocation(line: 1772, column: 46, scope: !10342)
!10348 = !DILocation(line: 1772, column: 3, scope: !10342)
!10349 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10112, file: !10112, line: 1737, type: !10113, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10350)
!10350 = !{!10351}
!10351 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10349, file: !10112, line: 1737, type: !1396)
!10352 = !DILocation(line: 0, scope: !10349)
!10353 = !DILocation(line: 1739, column: 11, scope: !10349)
!10354 = !DILocation(line: 1739, column: 3, scope: !10349)
!10355 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10112, file: !10112, line: 1748, type: !10113, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10356)
!10356 = !{!10357}
!10357 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10355, file: !10112, line: 1748, type: !1396)
!10358 = !DILocation(line: 0, scope: !10355)
!10359 = !DILocation(line: 1750, column: 11, scope: !10355)
!10360 = !DILocation(line: 1750, column: 45, scope: !10355)
!10361 = !DILocation(line: 1750, column: 3, scope: !10355)
!10362 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10112, file: !10112, line: 1827, type: !10113, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10363)
!10363 = !{!10364}
!10364 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !10112, line: 1827, type: !1396)
!10365 = !DILocation(line: 0, scope: !10362)
!10366 = !DILocation(line: 1829, column: 11, scope: !10362)
!10367 = !DILocation(line: 1829, column: 46, scope: !10362)
!10368 = !DILocation(line: 1829, column: 3, scope: !10362)
!10369 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10112, file: !10112, line: 1992, type: !10175, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10370)
!10370 = !{!10371}
!10371 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10369, file: !10112, line: 1992, type: !1396)
!10372 = !DILocation(line: 0, scope: !10369)
!10373 = !DILocation(line: 1994, column: 3, scope: !10369)
!10374 = !DILocation(line: 1995, column: 1, scope: !10369)
!10375 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10112, file: !10112, line: 1934, type: !10175, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10376)
!10376 = !{!10377, !10378}
!10377 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10375, file: !10112, line: 1934, type: !1396)
!10378 = !DILocalVariable(name: "tmpreg", scope: !10375, file: !10112, line: 1936, type: !314)
!10379 = !DILocation(line: 0, scope: !10375)
!10380 = !DILocation(line: 1936, column: 3, scope: !10375)
!10381 = !DILocation(line: 1936, column: 17, scope: !10375)
!10382 = !DILocation(line: 1937, column: 20, scope: !10375)
!10383 = !DILocation(line: 1937, column: 10, scope: !10375)
!10384 = !DILocation(line: 1938, column: 10, scope: !10375)
!10385 = !DILocation(line: 1939, column: 20, scope: !10375)
!10386 = !DILocation(line: 1939, column: 10, scope: !10375)
!10387 = !DILocation(line: 1940, column: 10, scope: !10375)
!10388 = !DILocation(line: 1941, column: 1, scope: !10375)
!10389 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10112, file: !10112, line: 1877, type: !10175, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10390)
!10390 = !{!10391, !10392}
!10391 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10389, file: !10112, line: 1877, type: !1396)
!10392 = !DILocalVariable(name: "tmpreg", scope: !10389, file: !10112, line: 1879, type: !314)
!10393 = !DILocation(line: 0, scope: !10389)
!10394 = !DILocation(line: 1879, column: 3, scope: !10389)
!10395 = !DILocation(line: 1879, column: 17, scope: !10389)
!10396 = !DILocation(line: 1880, column: 20, scope: !10389)
!10397 = !DILocation(line: 1880, column: 10, scope: !10389)
!10398 = !DILocation(line: 1881, column: 10, scope: !10389)
!10399 = !DILocation(line: 1882, column: 20, scope: !10389)
!10400 = !DILocation(line: 1882, column: 10, scope: !10389)
!10401 = !DILocation(line: 1883, column: 10, scope: !10389)
!10402 = !DILocation(line: 1884, column: 1, scope: !10389)
!10403 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10112, file: !10112, line: 1896, type: !10175, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10404)
!10404 = !{!10405, !10406}
!10405 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10403, file: !10112, line: 1896, type: !1396)
!10406 = !DILocalVariable(name: "tmpreg", scope: !10403, file: !10112, line: 1898, type: !314)
!10407 = !DILocation(line: 0, scope: !10403)
!10408 = !DILocation(line: 1898, column: 3, scope: !10403)
!10409 = !DILocation(line: 1898, column: 17, scope: !10403)
!10410 = !DILocation(line: 1899, column: 20, scope: !10403)
!10411 = !DILocation(line: 1899, column: 10, scope: !10403)
!10412 = !DILocation(line: 1900, column: 10, scope: !10403)
!10413 = !DILocation(line: 1901, column: 20, scope: !10403)
!10414 = !DILocation(line: 1901, column: 10, scope: !10403)
!10415 = !DILocation(line: 1902, column: 10, scope: !10403)
!10416 = !DILocation(line: 1903, column: 1, scope: !10403)
!10417 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10112, file: !10112, line: 1915, type: !10175, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10418)
!10418 = !{!10419, !10420}
!10419 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10417, file: !10112, line: 1915, type: !1396)
!10420 = !DILocalVariable(name: "tmpreg", scope: !10417, file: !10112, line: 1917, type: !314)
!10421 = !DILocation(line: 0, scope: !10417)
!10422 = !DILocation(line: 1917, column: 3, scope: !10417)
!10423 = !DILocation(line: 1917, column: 17, scope: !10417)
!10424 = !DILocation(line: 1918, column: 20, scope: !10417)
!10425 = !DILocation(line: 1918, column: 10, scope: !10417)
!10426 = !DILocation(line: 1919, column: 10, scope: !10417)
!10427 = !DILocation(line: 1920, column: 20, scope: !10417)
!10428 = !DILocation(line: 1920, column: 10, scope: !10417)
!10429 = !DILocation(line: 1921, column: 10, scope: !10417)
!10430 = !DILocation(line: 1922, column: 1, scope: !10417)
!10431 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10112, file: !10112, line: 1814, type: !10113, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10432)
!10432 = !{!10433}
!10433 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10431, file: !10112, line: 1814, type: !1396)
!10434 = !DILocation(line: 0, scope: !10431)
!10435 = !DILocation(line: 1816, column: 11, scope: !10431)
!10436 = !DILocation(line: 1816, column: 46, scope: !10431)
!10437 = !DILocation(line: 1816, column: 3, scope: !10431)
!10438 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10112, file: !10112, line: 2426, type: !10439, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10441)
!10439 = !DISubroutineType(types: !10440)
!10440 = !{null, !1396, !185}
!10441 = !{!10442, !10443}
!10442 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10438, file: !10112, line: 2426, type: !1396)
!10443 = !DILocalVariable(name: "Value", arg: 2, scope: !10438, file: !10112, line: 2426, type: !185)
!10444 = !DILocation(line: 0, scope: !10438)
!10445 = !DILocation(line: 2428, column: 16, scope: !10438)
!10446 = !DILocation(line: 2428, column: 11, scope: !10438)
!10447 = !DILocation(line: 2428, column: 14, scope: !10438)
!10448 = !DILocation(line: 2429, column: 1, scope: !10438)
!10449 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10112, file: !10112, line: 1792, type: !10113, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10450)
!10450 = !{!10451}
!10451 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10449, file: !10112, line: 1792, type: !1396)
!10452 = !DILocation(line: 0, scope: !10449)
!10453 = !DILocation(line: 1794, column: 11, scope: !10449)
!10454 = !DILocation(line: 1794, column: 47, scope: !10449)
!10455 = !DILocation(line: 1794, column: 3, scope: !10449)
!10456 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10112, file: !10112, line: 2403, type: !10457, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10459)
!10457 = !DISubroutineType(types: !10458)
!10458 = !{!185, !1396}
!10459 = !{!10460}
!10460 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10456, file: !10112, line: 2403, type: !1396)
!10461 = !DILocation(line: 0, scope: !10456)
!10462 = !DILocation(line: 2405, column: 20, scope: !10456)
!10463 = !DILocation(line: 2405, column: 10, scope: !10456)
!10464 = !DILocation(line: 2405, column: 3, scope: !10456)
!10465 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1450, file: !1450, line: 1583, type: !1376, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10466)
!10466 = !{!10467, !10468, !10469, !10470, !10471, !10472}
!10467 = !DILocalVariable(name: "dev", arg: 1, scope: !10465, file: !1450, line: 1583, type: !1355)
!10468 = !DILocalVariable(name: "config", scope: !10465, file: !1450, line: 1585, type: !9803)
!10469 = !DILocalVariable(name: "data", scope: !10465, file: !1450, line: 1586, type: !9926)
!10470 = !DILocalVariable(name: "ll_parity", scope: !10465, file: !1450, line: 1587, type: !118)
!10471 = !DILocalVariable(name: "ll_datawidth", scope: !10465, file: !1450, line: 1588, type: !118)
!10472 = !DILocalVariable(name: "err", scope: !10465, file: !1450, line: 1589, type: !119)
!10473 = !DILocation(line: 0, scope: !10465)
!10474 = !DILocation(line: 1585, column: 48, scope: !10465)
!10475 = !DILocation(line: 1586, column: 38, scope: !10465)
!10476 = !DILocation(line: 1591, column: 2, scope: !10465)
!10477 = !DILocation(line: 1593, column: 29, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10465, file: !1450, line: 1593, column: 6)
!10479 = !DILocation(line: 1593, column: 7, scope: !10478)
!10480 = !DILocation(line: 1593, column: 6, scope: !10465)
!10481 = !DILocation(line: 1594, column: 3, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !1450, line: 1594, column: 3)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !1450, line: 1594, column: 3)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !1450, line: 1594, column: 3)
!10485 = distinct !DILexicalBlock(scope: !10486, file: !1450, line: 1594, column: 3)
!10486 = distinct !DILexicalBlock(scope: !10478, file: !1450, line: 1593, column: 37)
!10487 = !DILocation(line: 1595, column: 3, scope: !10486)
!10488 = !DILocation(line: 1599, column: 31, scope: !10465)
!10489 = !DILocation(line: 1599, column: 71, scope: !10465)
!10490 = !DILocation(line: 1599, column: 8, scope: !10465)
!10491 = !DILocation(line: 1600, column: 10, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10465, file: !1450, line: 1600, column: 6)
!10493 = !DILocation(line: 1600, column: 6, scope: !10465)
!10494 = !DILocation(line: 1601, column: 3, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !1450, line: 1601, column: 3)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !1450, line: 1601, column: 3)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !1450, line: 1601, column: 3)
!10498 = distinct !DILexicalBlock(scope: !10499, file: !1450, line: 1601, column: 3)
!10499 = distinct !DILexicalBlock(scope: !10492, file: !1450, line: 1600, column: 16)
!10500 = !DILocation(line: 1602, column: 3, scope: !10499)
!10501 = !DILocation(line: 1616, column: 36, scope: !10465)
!10502 = !DILocation(line: 1616, column: 8, scope: !10465)
!10503 = !DILocation(line: 1617, column: 10, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10465, file: !1450, line: 1617, column: 6)
!10505 = !DILocation(line: 1617, column: 6, scope: !10465)
!10506 = !DILocation(line: 1621, column: 27, scope: !10465)
!10507 = !DILocation(line: 1621, column: 2, scope: !10465)
!10508 = !DILocation(line: 1624, column: 40, scope: !10465)
!10509 = !DILocation(line: 1624, column: 2, scope: !10465)
!10510 = !DILocation(line: 1630, column: 14, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10465, file: !1450, line: 1630, column: 6)
!10512 = !DILocation(line: 1630, column: 6, scope: !10465)
!10513 = !DILocation(line: 1640, column: 4, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10515, file: !1450, line: 1640, column: 4)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !1450, line: 1640, column: 4)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !1450, line: 1640, column: 4)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !1450, line: 1640, column: 4)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !1450, line: 1639, column: 28)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !1450, line: 1639, column: 7)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !1450, line: 1638, column: 9)
!10521 = distinct !DILexicalBlock(scope: !10511, file: !1450, line: 1634, column: 13)
!10522 = !DILocation(line: 0, scope: !10511)
!10523 = !DILocation(line: 1649, column: 35, scope: !10465)
!10524 = !DILocation(line: 1649, column: 2, scope: !10465)
!10525 = !DILocation(line: 1654, column: 14, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10465, file: !1450, line: 1654, column: 6)
!10527 = !DILocation(line: 1654, column: 6, scope: !10465)
!10528 = !DILocation(line: 1655, column: 3, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10526, file: !1450, line: 1654, column: 31)
!10530 = !DILocation(line: 1656, column: 2, scope: !10529)
!10531 = !DILocation(line: 1659, column: 37, scope: !10465)
!10532 = !DILocation(line: 1659, column: 2, scope: !10465)
!10533 = !DILocation(line: 1662, column: 14, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10465, file: !1450, line: 1662, column: 6)
!10535 = !DILocation(line: 1662, column: 6, scope: !10465)
!10536 = !DILocation(line: 1663, column: 37, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10534, file: !1450, line: 1662, column: 27)
!10538 = !DILocation(line: 1663, column: 3, scope: !10537)
!10539 = !DILocation(line: 1664, column: 2, scope: !10537)
!10540 = !DILocation(line: 1684, column: 26, scope: !10465)
!10541 = !DILocation(line: 1684, column: 2, scope: !10465)
!10542 = !DILocation(line: 1722, column: 2, scope: !10465)
!10543 = !DILocation(line: 1724, column: 1, scope: !10465)
!10544 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1450, file: !1450, line: 651, type: !10545, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10547)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{null, !1355}
!10547 = !{!10548, !10549, !10550}
!10548 = !DILocalVariable(name: "dev", arg: 1, scope: !10544, file: !1450, line: 651, type: !1355)
!10549 = !DILocalVariable(name: "data", scope: !10544, file: !1450, line: 653, type: !9926)
!10550 = !DILocalVariable(name: "clk", scope: !10544, file: !1450, line: 654, type: !10551)
!10551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!10552 = !DILocation(line: 0, scope: !10544)
!10553 = !DILocation(line: 653, column: 38, scope: !10544)
!10554 = !DILocation(line: 656, column: 8, scope: !10544)
!10555 = !DILocation(line: 656, column: 14, scope: !10544)
!10556 = !DILocation(line: 657, column: 1, scope: !10544)
!10557 = distinct !DISubprogram(name: "device_is_ready", scope: !8922, file: !8922, line: 47, type: !10558, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10560)
!10558 = !DISubroutineType(types: !10559)
!10559 = !{!345, !1355}
!10560 = !{!10561}
!10561 = !DILocalVariable(name: "dev", arg: 1, scope: !10557, file: !8922, line: 47, type: !1355)
!10562 = !DILocation(line: 0, scope: !10557)
!10563 = !DILocation(line: 55, column: 2, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10557, file: !8922, line: 55, column: 2)
!10565 = !{i64 2154359837}
!10566 = !DILocation(line: 56, column: 9, scope: !10557)
!10567 = !DILocation(line: 56, column: 2, scope: !10557)
!10568 = distinct !DISubprogram(name: "clock_control_on", scope: !813, file: !813, line: 123, type: !1414, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10569)
!10569 = !{!10570, !10571, !10572}
!10570 = !DILocalVariable(name: "dev", arg: 1, scope: !10568, file: !813, line: 123, type: !1355)
!10571 = !DILocalVariable(name: "sys", arg: 2, scope: !10568, file: !813, line: 124, type: !908)
!10572 = !DILocalVariable(name: "api", scope: !10568, file: !813, line: 126, type: !1407)
!10573 = !DILocation(line: 0, scope: !10568)
!10574 = !DILocation(line: 127, column: 49, scope: !10568)
!10575 = !DILocation(line: 129, column: 14, scope: !10568)
!10576 = !DILocation(line: 129, column: 9, scope: !10568)
!10577 = !DILocation(line: 129, column: 2, scope: !10568)
!10578 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1490, file: !1490, line: 342, type: !10579, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10581)
!10579 = !DISubroutineType(types: !10580)
!10580 = !{!119, !1487, !185}
!10581 = !{!10582, !10583, !10584, !10585}
!10582 = !DILocalVariable(name: "config", arg: 1, scope: !10578, file: !1490, line: 342, type: !1487)
!10583 = !DILocalVariable(name: "id", arg: 2, scope: !10578, file: !1490, line: 343, type: !185)
!10584 = !DILocalVariable(name: "ret", scope: !10578, file: !1490, line: 345, type: !119)
!10585 = !DILocalVariable(name: "state", scope: !10578, file: !1490, line: 346, type: !1493)
!10586 = !DILocation(line: 0, scope: !10578)
!10587 = !DILocation(line: 346, column: 2, scope: !10578)
!10588 = !DILocation(line: 348, column: 8, scope: !10578)
!10589 = !DILocation(line: 349, column: 10, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10578, file: !1490, line: 349, column: 6)
!10591 = !DILocation(line: 349, column: 6, scope: !10578)
!10592 = !DILocation(line: 353, column: 44, scope: !10578)
!10593 = !DILocation(line: 353, column: 9, scope: !10578)
!10594 = !DILocation(line: 353, column: 2, scope: !10578)
!10595 = !DILocation(line: 354, column: 1, scope: !10578)
!10596 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10112, file: !10112, line: 497, type: !10290, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10597)
!10597 = !{!10598, !10599, !10600}
!10598 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10596, file: !10112, line: 497, type: !1396)
!10599 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10596, file: !10112, line: 497, type: !118)
!10600 = !DILocalVariable(name: "val", scope: !10601, file: !10112, line: 499, type: !118)
!10601 = distinct !DILexicalBlock(scope: !10596, file: !10112, line: 499, column: 3)
!10602 = !DILocation(line: 0, scope: !10596)
!10603 = !DILocation(line: 499, column: 3, scope: !10601)
!10604 = !DILocalVariable(name: "addr", arg: 1, scope: !10605, file: !6280, line: 476, type: !1446)
!10605 = distinct !DISubprogram(name: "__LDREXW", scope: !6280, file: !6280, line: 476, type: !10606, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!118, !1446}
!10608 = !{!10604, !10609}
!10609 = !DILocalVariable(name: "result", scope: !10605, file: !6280, line: 478, type: !118)
!10610 = !DILocation(line: 0, scope: !10605, inlinedAt: !10611)
!10611 = distinct !DILocation(line: 499, column: 3, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10601, file: !10112, line: 499, column: 3)
!10613 = !DILocation(line: 480, column: 4, scope: !10605, inlinedAt: !10611)
!10614 = !{i64 2863105}
!10615 = !DILocation(line: 499, column: 3, scope: !10612)
!10616 = !DILocation(line: 0, scope: !10601)
!10617 = !DILocalVariable(name: "value", arg: 1, scope: !10618, file: !6280, line: 527, type: !118)
!10618 = distinct !DISubprogram(name: "__STREXW", scope: !6280, file: !6280, line: 527, type: !10619, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10621)
!10619 = !DISubroutineType(types: !10620)
!10620 = !{!118, !118, !1446}
!10621 = !{!10617, !10622, !10623}
!10622 = !DILocalVariable(name: "addr", arg: 2, scope: !10618, file: !6280, line: 527, type: !1446)
!10623 = !DILocalVariable(name: "result", scope: !10618, file: !6280, line: 529, type: !118)
!10624 = !DILocation(line: 0, scope: !10618, inlinedAt: !10625)
!10625 = distinct !DILocation(line: 499, column: 3, scope: !10601)
!10626 = !DILocation(line: 531, column: 4, scope: !10618, inlinedAt: !10625)
!10627 = !{i64 2864541}
!10628 = distinct !{!10628, !10603, !10603}
!10629 = !DILocation(line: 500, column: 1, scope: !10596)
!10630 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10112, file: !10112, line: 850, type: !10299, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10631)
!10631 = !{!10632, !10633, !10634, !10635}
!10632 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10630, file: !10112, line: 850, type: !1396)
!10633 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10630, file: !10112, line: 850, type: !118)
!10634 = !DILocalVariable(name: "Parity", arg: 3, scope: !10630, file: !10112, line: 850, type: !118)
!10635 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10630, file: !10112, line: 851, type: !118)
!10636 = !DILocation(line: 0, scope: !10630)
!10637 = !DILocation(line: 853, column: 3, scope: !10630)
!10638 = !DILocation(line: 854, column: 3, scope: !10630)
!10639 = !DILocation(line: 855, column: 1, scope: !10630)
!10640 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10112, file: !10112, line: 1337, type: !10175, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10641)
!10641 = !{!10642}
!10642 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10640, file: !10112, line: 1337, type: !1396)
!10643 = !DILocation(line: 0, scope: !10640)
!10644 = !DILocation(line: 1339, column: 3, scope: !10640)
!10645 = !DILocation(line: 1340, column: 1, scope: !10640)
!10646 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1490, file: !1490, line: 316, type: !10647, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{!119, !1487, !1493}
!10649 = !{!10650, !10651, !10652}
!10650 = !DILocalVariable(name: "config", arg: 1, scope: !10646, file: !1490, line: 317, type: !1487)
!10651 = !DILocalVariable(name: "state", arg: 2, scope: !10646, file: !1490, line: 318, type: !1493)
!10652 = !DILocalVariable(name: "reg", scope: !10646, file: !1490, line: 320, type: !22)
!10653 = !DILocation(line: 0, scope: !10646)
!10654 = !DILocation(line: 329, column: 39, scope: !10646)
!10655 = !DILocation(line: 329, column: 52, scope: !10646)
!10656 = !DILocation(line: 329, column: 9, scope: !10646)
!10657 = !DILocation(line: 329, column: 2, scope: !10646)
!10658 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !10558, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10659)
!10659 = !{!10660}
!10660 = !DILocalVariable(name: "dev", arg: 1, scope: !10658, file: !334, line: 730, type: !1355)
!10661 = !DILocation(line: 0, scope: !10658)
!10662 = !DILocation(line: 732, column: 9, scope: !10658)
!10663 = !DILocation(line: 732, column: 2, scope: !10658)
!10664 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1611, file: !1611, line: 270, type: !1617, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10665)
!10665 = !{!10666}
!10666 = !DILocalVariable(name: "dev", arg: 1, scope: !10664, file: !1611, line: 270, type: !1619)
!10667 = !DILocation(line: 0, scope: !10664)
!10668 = !DILocation(line: 274, column: 2, scope: !10664)
!10669 = !DILocation(line: 275, column: 12, scope: !10664)
!10670 = !DILocation(line: 276, column: 15, scope: !10664)
!10671 = !DILocation(line: 277, column: 16, scope: !10664)
!10672 = !DILocation(line: 278, column: 15, scope: !10664)
!10673 = !DILocation(line: 279, column: 16, scope: !10664)
!10674 = !DILocation(line: 282, column: 2, scope: !10664)
!10675 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6320, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10676)
!10676 = !{!10677, !10678}
!10677 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10675, file: !533, line: 1814, type: !769)
!10678 = !DILocalVariable(name: "priority", arg: 2, scope: !10675, file: !533, line: 1814, type: !118)
!10679 = !DILocation(line: 0, scope: !10675)
!10680 = !DILocation(line: 1822, column: 46, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10682, file: !533, line: 1821, column: 3)
!10682 = distinct !DILexicalBlock(scope: !10675, file: !533, line: 1816, column: 7)
!10683 = !DILocation(line: 1824, column: 1, scope: !10675)
!10684 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1611, file: !1611, line: 118, type: !6217, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10685)
!10685 = !{!10686, !10687}
!10686 = !DILocalVariable(name: "arg", arg: 1, scope: !10684, file: !1611, line: 118, type: !113)
!10687 = !DILocalVariable(name: "dticks", scope: !10684, file: !1611, line: 121, type: !118)
!10688 = !DILocation(line: 0, scope: !10684)
!10689 = !DILocation(line: 124, column: 2, scope: !10684)
!10690 = !DILocation(line: 129, column: 17, scope: !10684)
!10691 = !DILocation(line: 129, column: 14, scope: !10684)
!10692 = !DILocation(line: 130, column: 15, scope: !10684)
!10693 = !DILocation(line: 145, column: 27, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10695, file: !1611, line: 132, column: 16)
!10695 = distinct !DILexicalBlock(scope: !10684, file: !1611, line: 132, column: 6)
!10696 = !DILocation(line: 145, column: 25, scope: !10694)
!10697 = !DILocation(line: 145, column: 45, scope: !10694)
!10698 = !DILocation(line: 146, column: 30, scope: !10694)
!10699 = !DILocation(line: 146, column: 20, scope: !10694)
!10700 = !DILocation(line: 147, column: 3, scope: !10694)
!10701 = !DILocation(line: 151, column: 2, scope: !10684)
!10702 = !DILocation(line: 152, column: 1, scope: !10684)
!10703 = distinct !DISubprogram(name: "elapsed", scope: !1611, file: !1611, line: 85, type: !3174, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10704)
!10704 = !{!10705, !10706, !10707}
!10705 = !DILocalVariable(name: "val1", scope: !10703, file: !1611, line: 87, type: !118)
!10706 = !DILocalVariable(name: "ctrl", scope: !10703, file: !1611, line: 88, type: !118)
!10707 = !DILocalVariable(name: "val2", scope: !10703, file: !1611, line: 89, type: !118)
!10708 = !DILocation(line: 87, column: 27, scope: !10703)
!10709 = !DILocation(line: 0, scope: !10703)
!10710 = !DILocation(line: 88, column: 27, scope: !10703)
!10711 = !DILocation(line: 89, column: 27, scope: !10703)
!10712 = !DILocation(line: 105, column: 12, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10703, file: !1611, line: 105, column: 6)
!10714 = !DILocation(line: 106, column: 6, scope: !10713)
!10715 = !DILocation(line: 107, column: 16, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10713, file: !1611, line: 106, column: 24)
!10717 = !DILocation(line: 111, column: 18, scope: !10716)
!10718 = !DILocation(line: 112, column: 2, scope: !10716)
!10719 = !DILocation(line: 114, column: 20, scope: !10703)
!10720 = !DILocation(line: 114, column: 30, scope: !10703)
!10721 = !DILocation(line: 114, column: 28, scope: !10703)
!10722 = !DILocation(line: 114, column: 2, scope: !10703)
!10723 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1611, file: !1611, line: 154, type: !10724, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10726)
!10724 = !DISubroutineType(types: !10725)
!10725 = !{null, !743, !345}
!10726 = !{!10727, !10728, !10729, !10730, !10731, !10732, !10733, !10738, !10739}
!10727 = !DILocalVariable(name: "ticks", arg: 1, scope: !10723, file: !1611, line: 154, type: !743)
!10728 = !DILocalVariable(name: "idle", arg: 2, scope: !10723, file: !1611, line: 154, type: !345)
!10729 = !DILocalVariable(name: "delay", scope: !10723, file: !1611, line: 169, type: !118)
!10730 = !DILocalVariable(name: "val1", scope: !10723, file: !1611, line: 170, type: !118)
!10731 = !DILocalVariable(name: "val2", scope: !10723, file: !1611, line: 170, type: !118)
!10732 = !DILocalVariable(name: "last_load_", scope: !10723, file: !1611, line: 171, type: !118)
!10733 = !DILocalVariable(name: "key", scope: !10723, file: !1611, line: 176, type: !10734)
!10734 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !10735)
!10735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !10736)
!10736 = !{!10737}
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10735, file: !259, line: 33, baseType: !119, size: 32)
!10738 = !DILocalVariable(name: "pending", scope: !10723, file: !1611, line: 178, type: !118)
!10739 = !DILocalVariable(name: "unannounced", scope: !10723, file: !1611, line: 185, type: !118)
!10740 = !DILocation(line: 0, scope: !10723)
!10741 = !DILocation(line: 162, column: 49, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10723, file: !1611, line: 162, column: 6)
!10743 = !DILocation(line: 163, column: 17, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10742, file: !1611, line: 162, column: 78)
!10745 = !DILocation(line: 164, column: 13, scope: !10744)
!10746 = !DILocation(line: 165, column: 3, scope: !10744)
!10747 = !DILocation(line: 171, column: 24, scope: !10723)
!10748 = !DILocation(line: 173, column: 10, scope: !10723)
!10749 = !DILocation(line: 174, column: 10, scope: !10723)
!10750 = !DILocalVariable(name: "l", arg: 1, scope: !10751, file: !259, line: 136, type: !10754)
!10751 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !10752, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10755)
!10752 = !DISubroutineType(types: !10753)
!10753 = !{!10734, !10754}
!10754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!10755 = !{!10750, !10756}
!10756 = !DILocalVariable(name: "k", scope: !10751, file: !259, line: 139, type: !10734)
!10757 = !DILocation(line: 0, scope: !10751, inlinedAt: !10758)
!10758 = distinct !DILocation(line: 176, column: 25, scope: !10723)
!10759 = !DILocation(line: 55, column: 2, scope: !10760, inlinedAt: !10764)
!10760 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5959, file: !5959, line: 42, type: !5960, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10761)
!10761 = !{!10762, !10763}
!10762 = !DILocalVariable(name: "key", scope: !10760, file: !5959, line: 44, type: !32)
!10763 = !DILocalVariable(name: "tmp", scope: !10760, file: !5959, line: 53, type: !32)
!10764 = distinct !DILocation(line: 145, column: 10, scope: !10751, inlinedAt: !10758)
!10765 = !{i64 1925643}
!10766 = !DILocation(line: 0, scope: !10760, inlinedAt: !10764)
!10767 = !DILocation(line: 148, column: 2, scope: !10768, inlinedAt: !10758)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !259, line: 148, column: 2)
!10769 = distinct !DILexicalBlock(scope: !10751, file: !259, line: 148, column: 2)
!10770 = !DILocation(line: 148, column: 2, scope: !10769, inlinedAt: !10758)
!10771 = !DILocation(line: 148, column: 2, scope: !10772, inlinedAt: !10758)
!10772 = distinct !DILexicalBlock(scope: !10768, file: !259, line: 148, column: 2)
!10773 = !DILocation(line: 160, column: 2, scope: !10751, inlinedAt: !10758)
!10774 = !DILocation(line: 178, column: 21, scope: !10723)
!10775 = !DILocation(line: 180, column: 18, scope: !10723)
!10776 = !DILocation(line: 182, column: 14, scope: !10723)
!10777 = !DILocation(line: 183, column: 15, scope: !10723)
!10778 = !DILocation(line: 185, column: 39, scope: !10723)
!10779 = !DILocation(line: 185, column: 37, scope: !10723)
!10780 = !DILocation(line: 187, column: 27, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10723, file: !1611, line: 187, column: 6)
!10782 = !DILocation(line: 187, column: 6, scope: !10723)
!10783 = !DILocation(line: 202, column: 27, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10781, file: !1611, line: 195, column: 9)
!10785 = !DILocation(line: 202, column: 48, scope: !10784)
!10786 = !DILocation(line: 203, column: 9, scope: !10784)
!10787 = !DILocation(line: 204, column: 11, scope: !10784)
!10788 = !DILocation(line: 205, column: 13, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10784, file: !1611, line: 205, column: 7)
!10790 = !DILocation(line: 205, column: 7, scope: !10784)
!10791 = !DILocation(line: 0, scope: !10781)
!10792 = !DILocation(line: 212, column: 18, scope: !10723)
!10793 = !DILocation(line: 214, column: 28, scope: !10723)
!10794 = !DILocation(line: 214, column: 16, scope: !10723)
!10795 = !DILocation(line: 215, column: 15, scope: !10723)
!10796 = !DILocation(line: 227, column: 11, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10723, file: !1611, line: 227, column: 6)
!10798 = !DILocation(line: 227, column: 6, scope: !10723)
!10799 = !DILocation(line: 228, column: 15, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10797, file: !1611, line: 227, column: 19)
!10801 = !DILocation(line: 228, column: 38, scope: !10800)
!10802 = !DILocation(line: 228, column: 24, scope: !10800)
!10803 = !DILocation(line: 229, column: 2, scope: !10800)
!10804 = !DILocation(line: 230, column: 24, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10797, file: !1611, line: 229, column: 9)
!10806 = !DILocation(line: 230, column: 15, scope: !10805)
!10807 = !DILocation(line: 0, scope: !10797)
!10808 = !DILocalVariable(name: "key", arg: 2, scope: !10809, file: !259, line: 190, type: !10734)
!10809 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !10810, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10812)
!10810 = !DISubroutineType(types: !10811)
!10811 = !{null, !10754, !10734}
!10812 = !{!10813, !10808}
!10813 = !DILocalVariable(name: "l", arg: 1, scope: !10809, file: !259, line: 189, type: !10754)
!10814 = !DILocation(line: 0, scope: !10809, inlinedAt: !10815)
!10815 = distinct !DILocation(line: 232, column: 2, scope: !10723)
!10816 = !DILocation(line: 194, column: 2, scope: !10817, inlinedAt: !10815)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !259, line: 194, column: 2)
!10818 = distinct !DILexicalBlock(scope: !10809, file: !259, line: 194, column: 2)
!10819 = !DILocation(line: 194, column: 2, scope: !10818, inlinedAt: !10815)
!10820 = !DILocation(line: 194, column: 2, scope: !10821, inlinedAt: !10815)
!10821 = distinct !DILexicalBlock(scope: !10817, file: !259, line: 194, column: 2)
!10822 = !DILocalVariable(name: "key", arg: 1, scope: !10823, file: !5959, line: 84, type: !32)
!10823 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5959, file: !5959, line: 84, type: !5970, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10824)
!10824 = !{!10822}
!10825 = !DILocation(line: 0, scope: !10823, inlinedAt: !10826)
!10826 = distinct !DILocation(line: 215, column: 2, scope: !10809, inlinedAt: !10815)
!10827 = !DILocation(line: 95, column: 2, scope: !10823, inlinedAt: !10826)
!10828 = !{i64 1926460}
!10829 = !DILocation(line: 234, column: 1, scope: !10723)
!10830 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1611, file: !1611, line: 236, type: !3174, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10831)
!10831 = !{!10832, !10833}
!10832 = !DILocalVariable(name: "key", scope: !10830, file: !1611, line: 242, type: !10734)
!10833 = !DILocalVariable(name: "cyc", scope: !10830, file: !1611, line: 243, type: !118)
!10834 = !DILocation(line: 0, scope: !10751, inlinedAt: !10835)
!10835 = distinct !DILocation(line: 242, column: 25, scope: !10830)
!10836 = !DILocation(line: 55, column: 2, scope: !10760, inlinedAt: !10837)
!10837 = distinct !DILocation(line: 145, column: 10, scope: !10751, inlinedAt: !10835)
!10838 = !DILocation(line: 0, scope: !10760, inlinedAt: !10837)
!10839 = !DILocation(line: 148, column: 2, scope: !10768, inlinedAt: !10835)
!10840 = !DILocation(line: 148, column: 2, scope: !10769, inlinedAt: !10835)
!10841 = !DILocation(line: 148, column: 2, scope: !10772, inlinedAt: !10835)
!10842 = !DILocation(line: 160, column: 2, scope: !10751, inlinedAt: !10835)
!10843 = !DILocation(line: 0, scope: !10830)
!10844 = !DILocation(line: 243, column: 17, scope: !10830)
!10845 = !DILocation(line: 243, column: 29, scope: !10830)
!10846 = !DILocation(line: 243, column: 43, scope: !10830)
!10847 = !DILocation(line: 0, scope: !10809, inlinedAt: !10848)
!10848 = distinct !DILocation(line: 245, column: 2, scope: !10830)
!10849 = !DILocation(line: 194, column: 2, scope: !10817, inlinedAt: !10848)
!10850 = !DILocation(line: 194, column: 2, scope: !10818, inlinedAt: !10848)
!10851 = !DILocation(line: 194, column: 2, scope: !10821, inlinedAt: !10848)
!10852 = !DILocation(line: 243, column: 27, scope: !10830)
!10853 = !DILocation(line: 243, column: 41, scope: !10830)
!10854 = !DILocation(line: 0, scope: !10823, inlinedAt: !10855)
!10855 = distinct !DILocation(line: 215, column: 2, scope: !10809, inlinedAt: !10848)
!10856 = !DILocation(line: 95, column: 2, scope: !10823, inlinedAt: !10855)
!10857 = !DILocation(line: 246, column: 13, scope: !10830)
!10858 = !DILocation(line: 246, column: 2, scope: !10830)
!10859 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1611, file: !1611, line: 249, type: !3174, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10860)
!10860 = !{!10861, !10862}
!10861 = !DILocalVariable(name: "key", scope: !10859, file: !1611, line: 251, type: !10734)
!10862 = !DILocalVariable(name: "ret", scope: !10859, file: !1611, line: 252, type: !118)
!10863 = !DILocation(line: 0, scope: !10751, inlinedAt: !10864)
!10864 = distinct !DILocation(line: 251, column: 25, scope: !10859)
!10865 = !DILocation(line: 55, column: 2, scope: !10760, inlinedAt: !10866)
!10866 = distinct !DILocation(line: 145, column: 10, scope: !10751, inlinedAt: !10864)
!10867 = !DILocation(line: 0, scope: !10760, inlinedAt: !10866)
!10868 = !DILocation(line: 148, column: 2, scope: !10768, inlinedAt: !10864)
!10869 = !DILocation(line: 148, column: 2, scope: !10769, inlinedAt: !10864)
!10870 = !DILocation(line: 148, column: 2, scope: !10772, inlinedAt: !10864)
!10871 = !DILocation(line: 160, column: 2, scope: !10751, inlinedAt: !10864)
!10872 = !DILocation(line: 0, scope: !10859)
!10873 = !DILocation(line: 252, column: 17, scope: !10859)
!10874 = !DILocation(line: 252, column: 29, scope: !10859)
!10875 = !DILocation(line: 0, scope: !10809, inlinedAt: !10876)
!10876 = distinct !DILocation(line: 254, column: 2, scope: !10859)
!10877 = !DILocation(line: 194, column: 2, scope: !10817, inlinedAt: !10876)
!10878 = !DILocation(line: 194, column: 2, scope: !10818, inlinedAt: !10876)
!10879 = !DILocation(line: 194, column: 2, scope: !10821, inlinedAt: !10876)
!10880 = !DILocation(line: 252, column: 27, scope: !10859)
!10881 = !DILocation(line: 0, scope: !10823, inlinedAt: !10882)
!10882 = distinct !DILocation(line: 215, column: 2, scope: !10809, inlinedAt: !10876)
!10883 = !DILocation(line: 95, column: 2, scope: !10823, inlinedAt: !10882)
!10884 = !DILocation(line: 255, column: 2, scope: !10859)
!10885 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1611, file: !1611, line: 258, type: !2936, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !2000)
!10886 = !DILocation(line: 260, column: 6, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10885, file: !1611, line: 260, column: 6)
!10888 = !DILocation(line: 260, column: 16, scope: !10887)
!10889 = !DILocation(line: 260, column: 6, scope: !10885)
!10890 = !DILocation(line: 261, column: 17, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10887, file: !1611, line: 260, column: 34)
!10892 = !DILocation(line: 262, column: 2, scope: !10891)
!10893 = !DILocation(line: 263, column: 1, scope: !10885)
!10894 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1611, file: !1611, line: 265, type: !2936, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !2000)
!10895 = !DILocation(line: 267, column: 16, scope: !10894)
!10896 = !DILocation(line: 268, column: 1, scope: !10894)
!10897 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10898, file: !10898, line: 9, type: !10899, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !10922)
!10898 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10899 = !DISubroutineType(types: !10900)
!10900 = !{!119, !10901, !185, !10921}
!10901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10902, size: 32)
!10902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10903)
!10903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1490, line: 60, size: 64, elements: !10904)
!10904 = !{!10905, !10920}
!10905 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10903, file: !1490, line: 69, baseType: !10906, size: 32)
!10906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10907, size: 32)
!10907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10908)
!10908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1490, line: 50, size: 64, elements: !10909)
!10909 = !{!10910, !10918, !10919}
!10910 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10908, file: !1490, line: 52, baseType: !10911, size: 32)
!10911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10912, size: 32)
!10912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10913)
!10913 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1501, line: 37, baseType: !10914)
!10914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1501, line: 32, size: 64, elements: !10915)
!10915 = !{!10916, !10917}
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10914, file: !1501, line: 34, baseType: !118, size: 32)
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10914, file: !1501, line: 36, baseType: !118, size: 32, offset: 32)
!10918 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10908, file: !1490, line: 54, baseType: !185, size: 8, offset: 32)
!10919 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10908, file: !1490, line: 56, baseType: !185, size: 8, offset: 40)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10903, file: !1490, line: 71, baseType: !185, size: 8, offset: 32)
!10921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10906, size: 32)
!10922 = !{!10923, !10924, !10925}
!10923 = !DILocalVariable(name: "config", arg: 1, scope: !10897, file: !10898, line: 9, type: !10901)
!10924 = !DILocalVariable(name: "id", arg: 2, scope: !10897, file: !10898, line: 9, type: !185)
!10925 = !DILocalVariable(name: "state", arg: 3, scope: !10897, file: !10898, line: 10, type: !10921)
!10926 = !DILocation(line: 0, scope: !10897)
!10927 = !DILocation(line: 12, column: 20, scope: !10897)
!10928 = !DILocation(line: 13, column: 27, scope: !10897)
!10929 = !DILocation(line: 13, column: 42, scope: !10897)
!10930 = !DILocation(line: 13, column: 19, scope: !10897)
!10931 = !DILocation(line: 13, column: 16, scope: !10897)
!10932 = !DILocation(line: 13, column: 2, scope: !10897)
!10933 = distinct !{!10933, !10932, !10934}
!10934 = !DILocation(line: 19, column: 2, scope: !10897)
!10935 = !DILocation(line: 14, column: 23, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !10898, line: 14, column: 7)
!10937 = distinct !DILexicalBlock(scope: !10897, file: !10898, line: 13, column: 54)
!10938 = !DILocation(line: 14, column: 10, scope: !10936)
!10939 = !DILocation(line: 18, column: 11, scope: !10937)
!10940 = !DILocation(line: 14, column: 7, scope: !10937)
!10941 = !DILocation(line: 22, column: 1, scope: !10897)
!10942 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1730, file: !1730, line: 193, type: !10943, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10952)
!10943 = !DISubroutineType(types: !10944)
!10944 = !{!119, !10945, !185, !22}
!10945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10946, size: 32)
!10946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10947)
!10947 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1501, line: 37, baseType: !10948)
!10948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1501, line: 32, size: 64, elements: !10949)
!10949 = !{!10950, !10951}
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10948, file: !1501, line: 34, baseType: !118, size: 32)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10948, file: !1501, line: 36, baseType: !118, size: 32, offset: 32)
!10952 = !{!10953, !10954, !10955, !10956, !10957, !10958, !10959, !10960, !10962}
!10953 = !DILocalVariable(name: "pins", arg: 1, scope: !10942, file: !1730, line: 193, type: !10945)
!10954 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10942, file: !1730, line: 193, type: !185)
!10955 = !DILocalVariable(name: "reg", arg: 3, scope: !10942, file: !1730, line: 194, type: !22)
!10956 = !DILocalVariable(name: "pin", scope: !10942, file: !1730, line: 196, type: !118)
!10957 = !DILocalVariable(name: "mux", scope: !10942, file: !1730, line: 196, type: !118)
!10958 = !DILocalVariable(name: "pin_cgf", scope: !10942, file: !1730, line: 197, type: !118)
!10959 = !DILocalVariable(name: "ret", scope: !10942, file: !1730, line: 198, type: !119)
!10960 = !DILocalVariable(name: "i", scope: !10961, file: !1730, line: 209, type: !185)
!10961 = distinct !DILexicalBlock(scope: !10942, file: !1730, line: 209, column: 2)
!10962 = !DILocalVariable(name: "gpio_out", scope: !10963, file: !1730, line: 239, type: !118)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !1730, line: 238, column: 55)
!10964 = distinct !DILexicalBlock(scope: !10965, file: !1730, line: 238, column: 14)
!10965 = distinct !DILexicalBlock(scope: !10966, file: !1730, line: 236, column: 14)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !1730, line: 234, column: 7)
!10967 = distinct !DILexicalBlock(scope: !10968, file: !1730, line: 209, column: 41)
!10968 = distinct !DILexicalBlock(scope: !10961, file: !1730, line: 209, column: 2)
!10969 = !DILocation(line: 0, scope: !10942)
!10970 = !DILocation(line: 0, scope: !10961)
!10971 = !DILocation(line: 209, column: 25, scope: !10968)
!10972 = !DILocation(line: 209, column: 2, scope: !10961)
!10973 = distinct !{!10973, !10972, !10974}
!10974 = !DILocation(line: 259, column: 2, scope: !10961)
!10975 = !DILocation(line: 210, column: 17, scope: !10967)
!10976 = !DILocation(line: 234, column: 7, scope: !10966)
!10977 = !DILocation(line: 234, column: 33, scope: !10966)
!10978 = !DILocation(line: 234, column: 7, scope: !10967)
!10979 = !DILocation(line: 235, column: 22, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10966, file: !1730, line: 234, column: 49)
!10981 = !DILocation(line: 235, column: 29, scope: !10980)
!10982 = !DILocation(line: 236, column: 3, scope: !10980)
!10983 = !DILocation(line: 236, column: 14, scope: !10966)
!10984 = !DILocation(line: 239, column: 32, scope: !10963)
!10985 = !DILocation(line: 0, scope: !10963)
!10986 = !DILocation(line: 241, column: 8, scope: !10963)
!10987 = !DILocation(line: 246, column: 3, scope: !10963)
!10988 = !DILocation(line: 252, column: 9, scope: !10967)
!10989 = !DILocation(line: 255, column: 9, scope: !10967)
!10990 = !DILocation(line: 256, column: 11, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10967, file: !1730, line: 256, column: 7)
!10992 = !DILocation(line: 209, column: 37, scope: !10968)
!10993 = !DILocation(line: 256, column: 7, scope: !10967)
!10994 = !DILocation(line: 262, column: 1, scope: !10942)
!10995 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1730, file: !1730, line: 176, type: !10996, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10998)
!10996 = !DISubroutineType(types: !10997)
!10997 = !{!119, !118, !118, !118}
!10998 = !{!10999, !11000, !11001, !11002}
!10999 = !DILocalVariable(name: "pin", arg: 1, scope: !10995, file: !1730, line: 176, type: !118)
!11000 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10995, file: !1730, line: 176, type: !118)
!11001 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10995, file: !1730, line: 176, type: !118)
!11002 = !DILocalVariable(name: "port_device", scope: !10995, file: !1730, line: 178, type: !1660)
!11003 = !DILocation(line: 0, scope: !10995)
!11004 = !DILocation(line: 180, column: 22, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10995, file: !1730, line: 180, column: 6)
!11006 = !DILocation(line: 180, column: 6, scope: !10995)
!11007 = !DILocation(line: 180, column: 6, scope: !11005)
!11008 = !DILocation(line: 184, column: 16, scope: !10995)
!11009 = !DILocation(line: 186, column: 19, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !10995, file: !1730, line: 186, column: 6)
!11011 = !DILocation(line: 186, column: 28, scope: !11010)
!11012 = !DILocation(line: 186, column: 33, scope: !11010)
!11013 = !DILocation(line: 186, column: 6, scope: !10995)
!11014 = !DILocation(line: 190, column: 43, scope: !10995)
!11015 = !DILocation(line: 190, column: 9, scope: !10995)
!11016 = !DILocation(line: 190, column: 2, scope: !10995)
!11017 = !DILocation(line: 191, column: 1, scope: !10995)
!11018 = distinct !DISubprogram(name: "device_is_ready", scope: !8922, file: !8922, line: 47, type: !11019, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11021)
!11019 = !DISubroutineType(types: !11020)
!11020 = !{!345, !1660}
!11021 = !{!11022}
!11022 = !DILocalVariable(name: "dev", arg: 1, scope: !11018, file: !8922, line: 47, type: !1660)
!11023 = !DILocation(line: 0, scope: !11018)
!11024 = !DILocation(line: 55, column: 2, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11018, file: !8922, line: 55, column: 2)
!11026 = !{i64 2149163713}
!11027 = !DILocation(line: 56, column: 9, scope: !11018)
!11028 = !DILocation(line: 56, column: 2, scope: !11018)
!11029 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !11019, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11030)
!11030 = !{!11031}
!11031 = !DILocalVariable(name: "dev", arg: 1, scope: !11029, file: !334, line: 730, type: !1660)
!11032 = !DILocation(line: 0, scope: !11029)
!11033 = !DILocation(line: 732, column: 9, scope: !11029)
!11034 = !DILocation(line: 732, column: 2, scope: !11029)
!11035 = distinct !DISubprogram(name: "SystemInit", scope: !1780, file: !1780, line: 167, type: !2936, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !2000)
!11036 = !DILocation(line: 182, column: 1, scope: !11035)
!11037 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1780, file: !1780, line: 220, type: !2936, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !11038)
!11038 = !{!11039, !11040, !11041, !11042, !11043}
!11039 = !DILocalVariable(name: "tmp", scope: !11037, file: !1780, line: 222, type: !118)
!11040 = !DILocalVariable(name: "pllvco", scope: !11037, file: !1780, line: 222, type: !118)
!11041 = !DILocalVariable(name: "pllp", scope: !11037, file: !1780, line: 222, type: !118)
!11042 = !DILocalVariable(name: "pllsource", scope: !11037, file: !1780, line: 222, type: !118)
!11043 = !DILocalVariable(name: "pllm", scope: !11037, file: !1780, line: 222, type: !118)
!11044 = !DILocation(line: 0, scope: !11037)
!11045 = !DILocation(line: 225, column: 14, scope: !11037)
!11046 = !DILocation(line: 225, column: 19, scope: !11037)
!11047 = !DILocation(line: 227, column: 3, scope: !11037)
!11048 = !DILocation(line: 234, column: 7, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11037, file: !1780, line: 228, column: 3)
!11050 = !DILocation(line: 240, column: 25, scope: !11049)
!11051 = !DILocation(line: 241, column: 19, scope: !11049)
!11052 = !DILocation(line: 241, column: 27, scope: !11049)
!11053 = !DILocation(line: 243, column: 21, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11049, file: !1780, line: 243, column: 11)
!11055 = !DILocation(line: 0, scope: !11054)
!11056 = !DILocation(line: 254, column: 22, scope: !11049)
!11057 = !DILocation(line: 254, column: 62, scope: !11049)
!11058 = !DILocation(line: 255, column: 31, scope: !11049)
!11059 = !DILocation(line: 256, column: 7, scope: !11049)
!11060 = !DILocation(line: 0, scope: !11049)
!11061 = !DILocation(line: 263, column: 30, scope: !11037)
!11062 = !DILocation(line: 263, column: 52, scope: !11037)
!11063 = !DILocation(line: 263, column: 9, scope: !11037)
!11064 = !DILocation(line: 265, column: 19, scope: !11037)
!11065 = !DILocation(line: 266, column: 1, scope: !11037)
!11066 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11067, file: !11067, line: 200, type: !11068, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !2000)
!11067 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11068 = !DISubroutineType(types: !11069)
!11069 = !{!11070}
!11070 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2749, line: 44, baseType: !2748)
!11071 = !DILocation(line: 202, column: 3, scope: !11066)
!11072 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11067, file: !11067, line: 219, type: !11073, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !11097)
!11073 = !DISubroutineType(types: !11074)
!11074 = !{!11070, !11075}
!11075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11076, size: 32)
!11076 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11077, line: 70, baseType: !11078)
!11077 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11077, line: 49, size: 384, elements: !11079)
!11079 = !{!11080, !11081, !11082, !11083, !11084, !11085, !11086}
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11078, file: !11077, line: 51, baseType: !118, size: 32)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11078, file: !11077, line: 54, baseType: !118, size: 32, offset: 32)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11078, file: !11077, line: 57, baseType: !118, size: 32, offset: 64)
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11078, file: !11077, line: 60, baseType: !118, size: 32, offset: 96)
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11078, file: !11077, line: 63, baseType: !118, size: 32, offset: 128)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11078, file: !11077, line: 66, baseType: !118, size: 32, offset: 160)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11078, file: !11077, line: 69, baseType: !11087, size: 192, offset: 192)
!11087 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11088, line: 73, baseType: !11089)
!11088 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11088, line: 45, size: 192, elements: !11090)
!11090 = !{!11091, !11092, !11093, !11094, !11095, !11096}
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11089, file: !11088, line: 47, baseType: !118, size: 32)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11089, file: !11088, line: 50, baseType: !118, size: 32, offset: 32)
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11089, file: !11088, line: 53, baseType: !118, size: 32, offset: 64)
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11089, file: !11088, line: 56, baseType: !118, size: 32, offset: 96)
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11089, file: !11088, line: 60, baseType: !118, size: 32, offset: 128)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11089, file: !11088, line: 63, baseType: !118, size: 32, offset: 160)
!11097 = !{!11098, !11099, !11100, !11101, !11105}
!11098 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11072, file: !11067, line: 219, type: !11075)
!11099 = !DILocalVariable(name: "tickstart", scope: !11072, file: !11067, line: 221, type: !118)
!11100 = !DILocalVariable(name: "pll_config", scope: !11072, file: !11067, line: 221, type: !118)
!11101 = !DILocalVariable(name: "pwrclkchanged", scope: !11102, file: !11067, line: 391, type: !11104)
!11102 = distinct !DILexicalBlock(scope: !11103, file: !11067, line: 390, column: 3)
!11103 = distinct !DILexicalBlock(scope: !11072, file: !11067, line: 389, column: 6)
!11104 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !808, line: 188, baseType: !2755)
!11105 = !DILocalVariable(name: "tmpreg", scope: !11106, file: !11067, line: 400, type: !314)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !11067, line: 400, column: 7)
!11107 = distinct !DILexicalBlock(scope: !11108, file: !11067, line: 399, column: 5)
!11108 = distinct !DILexicalBlock(scope: !11102, file: !11067, line: 398, column: 8)
!11109 = !DILocation(line: 0, scope: !11072)
!11110 = !DILocation(line: 224, column: 24, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11072, file: !11067, line: 224, column: 6)
!11112 = !DILocation(line: 224, column: 6, scope: !11072)
!11113 = !DILocation(line: 232, column: 27, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11072, file: !11067, line: 232, column: 6)
!11115 = !DILocation(line: 232, column: 43, scope: !11114)
!11116 = !DILocation(line: 232, column: 69, scope: !11114)
!11117 = !DILocation(line: 232, column: 6, scope: !11072)
!11118 = !DILocation(line: 237, column: 9, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !11067, line: 237, column: 8)
!11120 = distinct !DILexicalBlock(scope: !11114, file: !11067, line: 233, column: 3)
!11121 = !DILocation(line: 237, column: 39, scope: !11119)
!11122 = !DILocation(line: 237, column: 60, scope: !11119)
!11123 = !DILocation(line: 238, column: 9, scope: !11119)
!11124 = !DILocation(line: 238, column: 39, scope: !11119)
!11125 = !DILocation(line: 238, column: 60, scope: !11119)
!11126 = !DILocation(line: 238, column: 70, scope: !11119)
!11127 = !DILocation(line: 238, column: 78, scope: !11119)
!11128 = !DILocation(line: 238, column: 100, scope: !11119)
!11129 = !DILocation(line: 237, column: 8, scope: !11120)
!11130 = !DILocation(line: 240, column: 11, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !11067, line: 240, column: 10)
!11132 = distinct !DILexicalBlock(scope: !11119, file: !11067, line: 239, column: 5)
!11133 = !DILocation(line: 240, column: 57, scope: !11131)
!11134 = !DILocation(line: 240, column: 80, scope: !11131)
!11135 = !DILocation(line: 240, column: 89, scope: !11131)
!11136 = !DILocation(line: 240, column: 10, scope: !11132)
!11137 = !DILocation(line: 248, column: 7, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !11067, line: 248, column: 7)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !11067, line: 248, column: 7)
!11140 = distinct !DILexicalBlock(scope: !11119, file: !11067, line: 246, column: 5)
!11141 = !DILocation(line: 248, column: 7, scope: !11139)
!11142 = !DILocation(line: 248, column: 7, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11138, file: !11067, line: 248, column: 7)
!11144 = !DILocation(line: 248, column: 7, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !11067, line: 248, column: 7)
!11146 = distinct !DILexicalBlock(scope: !11138, file: !11067, line: 248, column: 7)
!11147 = !DILocation(line: 248, column: 7, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11146, file: !11067, line: 248, column: 7)
!11149 = !DILocation(line: 0, scope: !11138)
!11150 = !DILocation(line: 251, column: 30, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11140, file: !11067, line: 251, column: 10)
!11152 = !DILocation(line: 251, column: 40, scope: !11151)
!11153 = !DILocation(line: 0, scope: !11151)
!11154 = !DILocation(line: 251, column: 10, scope: !11140)
!11155 = !DILocation(line: 257, column: 15, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11151, file: !11067, line: 252, column: 7)
!11157 = !DILocation(line: 257, column: 51, scope: !11156)
!11158 = !DILocation(line: 257, column: 9, scope: !11156)
!11159 = !DILocation(line: 259, column: 15, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11161, file: !11067, line: 259, column: 14)
!11161 = distinct !DILexicalBlock(scope: !11156, file: !11067, line: 258, column: 9)
!11162 = !DILocation(line: 259, column: 29, scope: !11160)
!11163 = !DILocation(line: 259, column: 43, scope: !11160)
!11164 = !DILocation(line: 259, column: 14, scope: !11161)
!11165 = distinct !{!11165, !11158, !11166}
!11166 = !DILocation(line: 263, column: 9, scope: !11156)
!11167 = !DILocation(line: 271, column: 15, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11151, file: !11067, line: 266, column: 7)
!11169 = !DILocation(line: 271, column: 9, scope: !11168)
!11170 = !DILocation(line: 273, column: 15, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !11067, line: 273, column: 14)
!11172 = distinct !DILexicalBlock(scope: !11168, file: !11067, line: 272, column: 9)
!11173 = !DILocation(line: 273, column: 29, scope: !11171)
!11174 = !DILocation(line: 273, column: 43, scope: !11171)
!11175 = !DILocation(line: 273, column: 14, scope: !11172)
!11176 = distinct !{!11176, !11169, !11177}
!11177 = !DILocation(line: 277, column: 9, scope: !11168)
!11178 = !DILocation(line: 282, column: 27, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11072, file: !11067, line: 282, column: 6)
!11180 = !DILocation(line: 282, column: 43, scope: !11179)
!11181 = !DILocation(line: 282, column: 69, scope: !11179)
!11182 = !DILocation(line: 282, column: 6, scope: !11072)
!11183 = !DILocation(line: 289, column: 9, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !11067, line: 289, column: 8)
!11185 = distinct !DILexicalBlock(scope: !11179, file: !11067, line: 283, column: 3)
!11186 = !DILocation(line: 289, column: 39, scope: !11184)
!11187 = !DILocation(line: 289, column: 60, scope: !11184)
!11188 = !DILocation(line: 290, column: 9, scope: !11184)
!11189 = !DILocation(line: 290, column: 39, scope: !11184)
!11190 = !DILocation(line: 290, column: 60, scope: !11184)
!11191 = !DILocation(line: 290, column: 70, scope: !11184)
!11192 = !DILocation(line: 290, column: 78, scope: !11184)
!11193 = !DILocation(line: 290, column: 100, scope: !11184)
!11194 = !DILocation(line: 289, column: 8, scope: !11185)
!11195 = !DILocation(line: 293, column: 11, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11197, file: !11067, line: 293, column: 10)
!11197 = distinct !DILexicalBlock(scope: !11184, file: !11067, line: 291, column: 5)
!11198 = !DILocation(line: 293, column: 57, scope: !11196)
!11199 = !DILocation(line: 293, column: 80, scope: !11196)
!11200 = !DILocation(line: 293, column: 89, scope: !11196)
!11201 = !DILocation(line: 293, column: 10, scope: !11197)
!11202 = !DILocation(line: 307, column: 30, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !11067, line: 307, column: 10)
!11204 = distinct !DILexicalBlock(scope: !11184, file: !11067, line: 305, column: 5)
!11205 = !DILocation(line: 307, column: 39, scope: !11203)
!11206 = !DILocation(line: 307, column: 10, scope: !11204)
!11207 = !DILocation(line: 310, column: 9, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11203, file: !11067, line: 308, column: 7)
!11209 = !DILocation(line: 313, column: 21, scope: !11208)
!11210 = !DILocation(line: 316, column: 9, scope: !11208)
!11211 = !DILocation(line: 316, column: 15, scope: !11208)
!11212 = !DILocation(line: 316, column: 51, scope: !11208)
!11213 = !DILocation(line: 318, column: 15, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !11067, line: 318, column: 14)
!11215 = distinct !DILexicalBlock(scope: !11208, file: !11067, line: 317, column: 9)
!11216 = !DILocation(line: 318, column: 29, scope: !11214)
!11217 = !DILocation(line: 318, column: 43, scope: !11214)
!11218 = !DILocation(line: 318, column: 14, scope: !11215)
!11219 = distinct !{!11219, !11210, !11220}
!11220 = !DILocation(line: 322, column: 9, scope: !11208)
!11221 = !DILocation(line: 330, column: 9, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11203, file: !11067, line: 328, column: 7)
!11223 = !DILocation(line: 333, column: 21, scope: !11222)
!11224 = !DILocation(line: 336, column: 9, scope: !11222)
!11225 = !DILocation(line: 336, column: 15, scope: !11222)
!11226 = !DILocation(line: 338, column: 15, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11228, file: !11067, line: 338, column: 14)
!11228 = distinct !DILexicalBlock(scope: !11222, file: !11067, line: 337, column: 9)
!11229 = !DILocation(line: 338, column: 29, scope: !11227)
!11230 = !DILocation(line: 338, column: 43, scope: !11227)
!11231 = !DILocation(line: 338, column: 14, scope: !11228)
!11232 = distinct !{!11232, !11224, !11233}
!11233 = !DILocation(line: 342, column: 9, scope: !11222)
!11234 = !DILocation(line: 0, scope: !11184)
!11235 = !DILocation(line: 347, column: 27, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11072, file: !11067, line: 347, column: 6)
!11237 = !DILocation(line: 347, column: 43, scope: !11236)
!11238 = !DILocation(line: 347, column: 69, scope: !11236)
!11239 = !DILocation(line: 347, column: 6, scope: !11072)
!11240 = !DILocation(line: 353, column: 28, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11242, file: !11067, line: 353, column: 8)
!11242 = distinct !DILexicalBlock(scope: !11236, file: !11067, line: 348, column: 3)
!11243 = !DILocation(line: 353, column: 37, scope: !11241)
!11244 = !DILocation(line: 353, column: 8, scope: !11242)
!11245 = !DILocation(line: 356, column: 7, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11241, file: !11067, line: 354, column: 5)
!11247 = !DILocation(line: 359, column: 19, scope: !11246)
!11248 = !DILocation(line: 362, column: 7, scope: !11246)
!11249 = !DILocation(line: 362, column: 13, scope: !11246)
!11250 = !DILocation(line: 362, column: 49, scope: !11246)
!11251 = !DILocation(line: 364, column: 13, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !11067, line: 364, column: 12)
!11253 = distinct !DILexicalBlock(scope: !11246, file: !11067, line: 363, column: 7)
!11254 = !DILocation(line: 364, column: 27, scope: !11252)
!11255 = !DILocation(line: 364, column: 41, scope: !11252)
!11256 = !DILocation(line: 364, column: 12, scope: !11253)
!11257 = distinct !{!11257, !11248, !11258}
!11258 = !DILocation(line: 368, column: 7, scope: !11246)
!11259 = !DILocation(line: 373, column: 7, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11241, file: !11067, line: 371, column: 5)
!11261 = !DILocation(line: 376, column: 19, scope: !11260)
!11262 = !DILocation(line: 379, column: 7, scope: !11260)
!11263 = !DILocation(line: 379, column: 13, scope: !11260)
!11264 = !DILocation(line: 381, column: 13, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11266, file: !11067, line: 381, column: 12)
!11266 = distinct !DILexicalBlock(scope: !11260, file: !11067, line: 380, column: 7)
!11267 = !DILocation(line: 381, column: 27, scope: !11265)
!11268 = !DILocation(line: 381, column: 41, scope: !11265)
!11269 = !DILocation(line: 381, column: 12, scope: !11266)
!11270 = distinct !{!11270, !11262, !11271}
!11271 = !DILocation(line: 385, column: 7, scope: !11260)
!11272 = !DILocation(line: 389, column: 27, scope: !11103)
!11273 = !DILocation(line: 389, column: 43, scope: !11103)
!11274 = !DILocation(line: 389, column: 69, scope: !11103)
!11275 = !DILocation(line: 389, column: 6, scope: !11072)
!11276 = !DILocation(line: 0, scope: !11102)
!11277 = !DILocation(line: 398, column: 8, scope: !11108)
!11278 = !DILocation(line: 398, column: 8, scope: !11102)
!11279 = !DILocation(line: 400, column: 7, scope: !11106)
!11280 = !DILocation(line: 400, column: 7, scope: !11107)
!11281 = !DILocation(line: 402, column: 5, scope: !11107)
!11282 = !DILocation(line: 404, column: 8, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11102, file: !11067, line: 404, column: 8)
!11284 = !DILocation(line: 404, column: 8, scope: !11102)
!11285 = !DILocation(line: 407, column: 7, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11283, file: !11067, line: 405, column: 5)
!11287 = !DILocation(line: 410, column: 19, scope: !11286)
!11288 = !DILocation(line: 412, column: 7, scope: !11286)
!11289 = !DILocation(line: 412, column: 13, scope: !11286)
!11290 = !DILocation(line: 414, column: 13, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !11067, line: 414, column: 12)
!11292 = distinct !DILexicalBlock(scope: !11286, file: !11067, line: 413, column: 7)
!11293 = !DILocation(line: 414, column: 27, scope: !11291)
!11294 = !DILocation(line: 414, column: 40, scope: !11291)
!11295 = !DILocation(line: 414, column: 12, scope: !11292)
!11296 = distinct !{!11296, !11288, !11297}
!11297 = !DILocation(line: 418, column: 7, scope: !11286)
!11298 = !DILocation(line: 422, column: 5, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !11067, line: 422, column: 5)
!11300 = distinct !DILexicalBlock(scope: !11102, file: !11067, line: 422, column: 5)
!11301 = !DILocation(line: 422, column: 5, scope: !11300)
!11302 = !DILocation(line: 422, column: 5, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11299, file: !11067, line: 422, column: 5)
!11304 = !DILocation(line: 422, column: 5, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11306, file: !11067, line: 422, column: 5)
!11306 = distinct !DILexicalBlock(scope: !11299, file: !11067, line: 422, column: 5)
!11307 = !DILocation(line: 422, column: 5, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11306, file: !11067, line: 422, column: 5)
!11309 = !DILocation(line: 0, scope: !11299)
!11310 = !DILocation(line: 424, column: 28, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11102, file: !11067, line: 424, column: 8)
!11312 = !DILocation(line: 424, column: 38, scope: !11311)
!11313 = !DILocation(line: 0, scope: !11311)
!11314 = !DILocation(line: 424, column: 8, scope: !11102)
!11315 = !DILocation(line: 430, column: 13, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11311, file: !11067, line: 425, column: 5)
!11317 = !DILocation(line: 430, column: 49, scope: !11316)
!11318 = !DILocation(line: 430, column: 7, scope: !11316)
!11319 = !DILocation(line: 432, column: 13, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !11067, line: 432, column: 12)
!11321 = distinct !DILexicalBlock(scope: !11316, file: !11067, line: 431, column: 7)
!11322 = !DILocation(line: 432, column: 27, scope: !11320)
!11323 = !DILocation(line: 432, column: 41, scope: !11320)
!11324 = !DILocation(line: 432, column: 12, scope: !11321)
!11325 = distinct !{!11325, !11318, !11326}
!11326 = !DILocation(line: 436, column: 7, scope: !11316)
!11327 = !DILocation(line: 444, column: 13, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11311, file: !11067, line: 439, column: 5)
!11329 = !DILocation(line: 444, column: 7, scope: !11328)
!11330 = !DILocation(line: 446, column: 13, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !11067, line: 446, column: 12)
!11332 = distinct !DILexicalBlock(scope: !11328, file: !11067, line: 445, column: 7)
!11333 = !DILocation(line: 446, column: 27, scope: !11331)
!11334 = !DILocation(line: 446, column: 41, scope: !11331)
!11335 = !DILocation(line: 446, column: 12, scope: !11332)
!11336 = distinct !{!11336, !11329, !11337}
!11337 = !DILocation(line: 450, column: 7, scope: !11328)
!11338 = !DILocation(line: 454, column: 8, scope: !11102)
!11339 = !DILocation(line: 456, column: 7, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !11067, line: 455, column: 5)
!11341 = distinct !DILexicalBlock(scope: !11102, file: !11067, line: 454, column: 8)
!11342 = !DILocation(line: 457, column: 5, scope: !11340)
!11343 = !DILocation(line: 462, column: 31, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11072, file: !11067, line: 462, column: 7)
!11345 = !DILocation(line: 462, column: 41, scope: !11344)
!11346 = !DILocation(line: 462, column: 7, scope: !11072)
!11347 = !DILocation(line: 465, column: 8, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11349, file: !11067, line: 465, column: 8)
!11349 = distinct !DILexicalBlock(scope: !11344, file: !11067, line: 463, column: 3)
!11350 = !DILocation(line: 465, column: 38, scope: !11348)
!11351 = !DILocation(line: 465, column: 8, scope: !11349)
!11352 = !DILocation(line: 467, column: 44, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11354, file: !11067, line: 467, column: 10)
!11354 = distinct !DILexicalBlock(scope: !11348, file: !11067, line: 466, column: 5)
!11355 = !DILocation(line: 0, scope: !11353)
!11356 = !DILocation(line: 467, column: 10, scope: !11354)
!11357 = !DILocation(line: 483, column: 15, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11353, file: !11067, line: 468, column: 7)
!11359 = !DILocation(line: 483, column: 9, scope: !11358)
!11360 = !DILocation(line: 485, column: 15, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11362, file: !11067, line: 485, column: 14)
!11362 = distinct !DILexicalBlock(scope: !11358, file: !11067, line: 484, column: 9)
!11363 = !DILocation(line: 485, column: 29, scope: !11361)
!11364 = !DILocation(line: 485, column: 43, scope: !11361)
!11365 = !DILocation(line: 485, column: 14, scope: !11362)
!11366 = distinct !{!11366, !11359, !11367}
!11367 = !DILocation(line: 489, column: 9, scope: !11358)
!11368 = !DILocation(line: 492, column: 9, scope: !11358)
!11369 = !DILocation(line: 498, column: 9, scope: !11358)
!11370 = !DILocation(line: 501, column: 21, scope: !11358)
!11371 = !DILocation(line: 504, column: 9, scope: !11358)
!11372 = !DILocation(line: 504, column: 15, scope: !11358)
!11373 = !DILocation(line: 504, column: 51, scope: !11358)
!11374 = !DILocation(line: 506, column: 15, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11376, file: !11067, line: 506, column: 14)
!11376 = distinct !DILexicalBlock(scope: !11358, file: !11067, line: 505, column: 9)
!11377 = !DILocation(line: 506, column: 29, scope: !11375)
!11378 = !DILocation(line: 506, column: 43, scope: !11375)
!11379 = !DILocation(line: 506, column: 14, scope: !11376)
!11380 = distinct !{!11380, !11371, !11381}
!11381 = !DILocation(line: 510, column: 9, scope: !11358)
!11382 = !DILocation(line: 521, column: 15, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11353, file: !11067, line: 513, column: 7)
!11384 = !DILocation(line: 521, column: 9, scope: !11383)
!11385 = !DILocation(line: 523, column: 15, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11387, file: !11067, line: 523, column: 14)
!11387 = distinct !DILexicalBlock(scope: !11383, file: !11067, line: 522, column: 9)
!11388 = !DILocation(line: 523, column: 29, scope: !11386)
!11389 = !DILocation(line: 523, column: 43, scope: !11386)
!11390 = !DILocation(line: 523, column: 14, scope: !11387)
!11391 = distinct !{!11391, !11384, !11392}
!11392 = !DILocation(line: 527, column: 9, scope: !11383)
!11393 = !DILocation(line: 533, column: 44, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !11067, line: 533, column: 10)
!11395 = distinct !DILexicalBlock(scope: !11348, file: !11067, line: 531, column: 5)
!11396 = !DILocation(line: 533, column: 10, scope: !11395)
!11397 = !DILocation(line: 540, column: 27, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11394, file: !11067, line: 538, column: 7)
!11399 = !DILocation(line: 551, column: 14, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11398, file: !11067, line: 550, column: 13)
!11401 = !DILocation(line: 551, column: 81, scope: !11400)
!11402 = !DILocation(line: 551, column: 55, scope: !11400)
!11403 = !DILocation(line: 551, column: 92, scope: !11400)
!11404 = !DILocation(line: 552, column: 14, scope: !11400)
!11405 = !DILocation(line: 552, column: 80, scope: !11400)
!11406 = !DILocation(line: 552, column: 53, scope: !11400)
!11407 = !DILocation(line: 552, column: 111, scope: !11400)
!11408 = !DILocation(line: 553, column: 14, scope: !11400)
!11409 = !DILocation(line: 553, column: 80, scope: !11400)
!11410 = !DILocation(line: 553, column: 86, scope: !11400)
!11411 = !DILocation(line: 553, column: 53, scope: !11400)
!11412 = !DILocation(line: 553, column: 111, scope: !11400)
!11413 = !DILocation(line: 554, column: 14, scope: !11400)
!11414 = !DILocation(line: 554, column: 82, scope: !11400)
!11415 = !DILocation(line: 554, column: 101, scope: !11400)
!11416 = !DILocation(line: 554, column: 53, scope: !11400)
!11417 = !DILocation(line: 554, column: 126, scope: !11400)
!11418 = !DILocation(line: 555, column: 14, scope: !11400)
!11419 = !DILocation(line: 555, column: 80, scope: !11400)
!11420 = !DILocation(line: 555, column: 85, scope: !11400)
!11421 = !DILocation(line: 555, column: 53, scope: !11400)
!11422 = !DILocation(line: 550, column: 13, scope: !11398)
!11423 = !DILocation(line: 563, column: 3, scope: !11072)
!11424 = !DILocation(line: 564, column: 1, scope: !11072)
!11425 = !DISubprogram(name: "HAL_GetTick", scope: !11426, file: !11426, line: 234, type: !3174, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!11426 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11427 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11067, file: !11067, line: 591, type: !11428, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !11439)
!11428 = !DISubroutineType(types: !11429)
!11429 = !{!11070, !11430, !118}
!11430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11431, size: 32)
!11431 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11077, line: 92, baseType: !11432)
!11432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11077, line: 75, size: 160, elements: !11433)
!11433 = !{!11434, !11435, !11436, !11437, !11438}
!11434 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11432, file: !11077, line: 77, baseType: !118, size: 32)
!11435 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11432, file: !11077, line: 80, baseType: !118, size: 32, offset: 32)
!11436 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11432, file: !11077, line: 83, baseType: !118, size: 32, offset: 64)
!11437 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11432, file: !11077, line: 86, baseType: !118, size: 32, offset: 96)
!11438 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11432, file: !11077, line: 89, baseType: !118, size: 32, offset: 128)
!11439 = !{!11440, !11441, !11442}
!11440 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11427, file: !11067, line: 591, type: !11430)
!11441 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11427, file: !11067, line: 591, type: !118)
!11442 = !DILocalVariable(name: "tickstart", scope: !11427, file: !11067, line: 593, type: !118)
!11443 = !DILocation(line: 0, scope: !11427)
!11444 = !DILocation(line: 596, column: 24, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11427, file: !11067, line: 596, column: 6)
!11446 = !DILocation(line: 596, column: 6, scope: !11427)
!11447 = !DILocation(line: 610, column: 17, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11427, file: !11067, line: 610, column: 6)
!11449 = !DILocation(line: 610, column: 15, scope: !11448)
!11450 = !DILocation(line: 610, column: 6, scope: !11427)
!11451 = !DILocation(line: 613, column: 5, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11448, file: !11067, line: 611, column: 3)
!11453 = !DILocation(line: 617, column: 8, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11452, file: !11067, line: 617, column: 8)
!11455 = !DILocation(line: 617, column: 34, scope: !11454)
!11456 = !DILocation(line: 617, column: 8, scope: !11452)
!11457 = !DILocation(line: 624, column: 27, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11427, file: !11067, line: 624, column: 6)
!11459 = !DILocation(line: 624, column: 38, scope: !11458)
!11460 = !DILocation(line: 624, column: 60, scope: !11458)
!11461 = !DILocation(line: 624, column: 6, scope: !11427)
!11462 = !DILocation(line: 628, column: 40, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !11067, line: 628, column: 8)
!11464 = distinct !DILexicalBlock(scope: !11458, file: !11067, line: 625, column: 3)
!11465 = !DILocation(line: 628, column: 63, scope: !11463)
!11466 = !DILocation(line: 628, column: 8, scope: !11464)
!11467 = !DILocation(line: 630, column: 7, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11463, file: !11067, line: 629, column: 5)
!11469 = !DILocation(line: 633, column: 29, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11464, file: !11067, line: 633, column: 8)
!11471 = !DILocation(line: 631, column: 5, scope: !11468)
!11472 = !DILocation(line: 633, column: 40, scope: !11470)
!11473 = !DILocation(line: 633, column: 63, scope: !11470)
!11474 = !DILocation(line: 633, column: 8, scope: !11464)
!11475 = !DILocation(line: 635, column: 7, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11470, file: !11067, line: 634, column: 5)
!11477 = !DILocation(line: 636, column: 5, scope: !11476)
!11478 = !DILocation(line: 639, column: 5, scope: !11464)
!11479 = !DILocation(line: 643, column: 27, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11427, file: !11067, line: 643, column: 6)
!11481 = !DILocation(line: 640, column: 3, scope: !11464)
!11482 = !DILocation(line: 643, column: 38, scope: !11480)
!11483 = !DILocation(line: 643, column: 62, scope: !11480)
!11484 = !DILocation(line: 643, column: 6, scope: !11427)
!11485 = !DILocation(line: 648, column: 27, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11487, file: !11067, line: 648, column: 8)
!11487 = distinct !DILexicalBlock(scope: !11480, file: !11067, line: 644, column: 3)
!11488 = !DILocation(line: 648, column: 8, scope: !11487)
!11489 = !DILocation(line: 651, column: 10, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11491, file: !11067, line: 651, column: 10)
!11491 = distinct !DILexicalBlock(scope: !11486, file: !11067, line: 649, column: 5)
!11492 = !DILocation(line: 651, column: 46, scope: !11490)
!11493 = !DILocation(line: 651, column: 10, scope: !11491)
!11494 = !DILocation(line: 661, column: 10, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11496, file: !11067, line: 661, column: 10)
!11496 = distinct !DILexicalBlock(scope: !11497, file: !11067, line: 659, column: 5)
!11497 = distinct !DILexicalBlock(scope: !11486, file: !11067, line: 657, column: 13)
!11498 = !DILocation(line: 661, column: 46, scope: !11495)
!11499 = !DILocation(line: 661, column: 10, scope: !11496)
!11500 = !DILocation(line: 670, column: 10, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !11067, line: 670, column: 10)
!11502 = distinct !DILexicalBlock(scope: !11497, file: !11067, line: 668, column: 5)
!11503 = !DILocation(line: 670, column: 46, scope: !11501)
!11504 = !DILocation(line: 670, column: 10, scope: !11502)
!11505 = !DILocation(line: 676, column: 5, scope: !11487)
!11506 = !DILocation(line: 679, column: 17, scope: !11487)
!11507 = !DILocation(line: 681, column: 5, scope: !11487)
!11508 = !DILocation(line: 681, column: 12, scope: !11487)
!11509 = !DILocation(line: 681, column: 65, scope: !11487)
!11510 = !DILocation(line: 681, column: 78, scope: !11487)
!11511 = !DILocation(line: 681, column: 42, scope: !11487)
!11512 = !DILocation(line: 683, column: 12, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !11067, line: 683, column: 11)
!11514 = distinct !DILexicalBlock(scope: !11487, file: !11067, line: 682, column: 5)
!11515 = !DILocation(line: 683, column: 26, scope: !11513)
!11516 = !DILocation(line: 683, column: 39, scope: !11513)
!11517 = !DILocation(line: 683, column: 11, scope: !11514)
!11518 = distinct !{!11518, !11507, !11519}
!11519 = !DILocation(line: 687, column: 5, scope: !11487)
!11520 = !DILocation(line: 691, column: 17, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11427, file: !11067, line: 691, column: 6)
!11522 = !DILocation(line: 691, column: 15, scope: !11521)
!11523 = !DILocation(line: 691, column: 6, scope: !11427)
!11524 = !DILocation(line: 694, column: 5, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11521, file: !11067, line: 692, column: 3)
!11526 = !DILocation(line: 698, column: 8, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11525, file: !11067, line: 698, column: 8)
!11528 = !DILocation(line: 698, column: 34, scope: !11527)
!11529 = !DILocation(line: 698, column: 8, scope: !11525)
!11530 = !DILocation(line: 705, column: 27, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11427, file: !11067, line: 705, column: 6)
!11532 = !DILocation(line: 705, column: 38, scope: !11531)
!11533 = !DILocation(line: 705, column: 61, scope: !11531)
!11534 = !DILocation(line: 705, column: 6, scope: !11427)
!11535 = !DILocation(line: 708, column: 5, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11531, file: !11067, line: 706, column: 3)
!11537 = !DILocation(line: 712, column: 27, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11427, file: !11067, line: 712, column: 6)
!11539 = !DILocation(line: 709, column: 3, scope: !11536)
!11540 = !DILocation(line: 712, column: 38, scope: !11538)
!11541 = !DILocation(line: 712, column: 61, scope: !11538)
!11542 = !DILocation(line: 712, column: 6, scope: !11427)
!11543 = !DILocation(line: 715, column: 5, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11538, file: !11067, line: 713, column: 3)
!11545 = !DILocation(line: 716, column: 3, scope: !11544)
!11546 = !DILocation(line: 719, column: 21, scope: !11427)
!11547 = !DILocation(line: 719, column: 70, scope: !11427)
!11548 = !DILocation(line: 719, column: 91, scope: !11427)
!11549 = !DILocation(line: 719, column: 50, scope: !11427)
!11550 = !DILocation(line: 719, column: 47, scope: !11427)
!11551 = !DILocation(line: 719, column: 19, scope: !11427)
!11552 = !DILocation(line: 722, column: 17, scope: !11427)
!11553 = !DILocation(line: 722, column: 3, scope: !11427)
!11554 = !DILocation(line: 724, column: 3, scope: !11427)
!11555 = !DILocation(line: 725, column: 1, scope: !11427)
!11556 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11067, file: !11067, line: 885, type: !3174, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !11557)
!11557 = !{!11558, !11559, !11560, !11561}
!11558 = !DILocalVariable(name: "pllm", scope: !11556, file: !11067, line: 887, type: !118)
!11559 = !DILocalVariable(name: "pllvco", scope: !11556, file: !11067, line: 887, type: !118)
!11560 = !DILocalVariable(name: "pllp", scope: !11556, file: !11067, line: 887, type: !118)
!11561 = !DILocalVariable(name: "sysclockfreq", scope: !11556, file: !11067, line: 888, type: !118)
!11562 = !DILocation(line: 0, scope: !11556)
!11563 = !DILocation(line: 891, column: 16, scope: !11556)
!11564 = !DILocation(line: 891, column: 21, scope: !11556)
!11565 = !DILocation(line: 891, column: 3, scope: !11556)
!11566 = !DILocation(line: 901, column: 7, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !11067, line: 899, column: 5)
!11568 = distinct !DILexicalBlock(scope: !11556, file: !11067, line: 892, column: 3)
!11569 = !DILocation(line: 907, column: 19, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11568, file: !11067, line: 904, column: 5)
!11571 = !DILocation(line: 907, column: 27, scope: !11570)
!11572 = !DILocation(line: 908, column: 10, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11570, file: !11067, line: 908, column: 10)
!11574 = !DILocation(line: 908, column: 40, scope: !11573)
!11575 = !DILocation(line: 0, scope: !11573)
!11576 = !DILocation(line: 908, column: 10, scope: !11570)
!11577 = !DILocation(line: 911, column: 53, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11573, file: !11067, line: 909, column: 7)
!11579 = !DILocation(line: 911, column: 130, scope: !11578)
!11580 = !DILocation(line: 912, column: 7, scope: !11578)
!11581 = !DILocation(line: 916, column: 56, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11573, file: !11067, line: 914, column: 7)
!11583 = !DILocation(line: 916, column: 53, scope: !11582)
!11584 = !DILocation(line: 916, column: 132, scope: !11582)
!11585 = !DILocation(line: 916, column: 130, scope: !11582)
!11586 = !DILocation(line: 916, column: 18, scope: !11582)
!11587 = !DILocation(line: 918, column: 23, scope: !11570)
!11588 = !DILocation(line: 918, column: 82, scope: !11570)
!11589 = !DILocation(line: 920, column: 28, scope: !11570)
!11590 = !DILocation(line: 921, column: 7, scope: !11570)
!11591 = !DILocation(line: 0, scope: !11568)
!11592 = !DILocation(line: 929, column: 3, scope: !11556)
!11593 = !DISubprogram(name: "HAL_InitTick", scope: !11426, file: !11426, line: 223, type: !11594, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!11594 = !DISubroutineType(types: !11595)
!11595 = !{!11070, !118}
!11596 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11067, file: !11067, line: 775, type: !11597, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !11599)
!11597 = !DISubroutineType(types: !11598)
!11598 = !{null, !118, !118, !118}
!11599 = !{!11600, !11601, !11602, !11603, !11613, !11617}
!11600 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11596, file: !11067, line: 775, type: !118)
!11601 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11596, file: !11067, line: 775, type: !118)
!11602 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11596, file: !11067, line: 775, type: !118)
!11603 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11596, file: !11067, line: 777, type: !11604)
!11604 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11605, line: 62, baseType: !11606)
!11605 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11605, line: 46, size: 160, elements: !11607)
!11607 = !{!11608, !11609, !11610, !11611, !11612}
!11608 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11606, file: !11605, line: 48, baseType: !118, size: 32)
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11606, file: !11605, line: 51, baseType: !118, size: 32, offset: 32)
!11610 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11606, file: !11605, line: 54, baseType: !118, size: 32, offset: 64)
!11611 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11606, file: !11605, line: 57, baseType: !118, size: 32, offset: 96)
!11612 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11606, file: !11605, line: 60, baseType: !118, size: 32, offset: 128)
!11613 = !DILocalVariable(name: "tmpreg", scope: !11614, file: !11067, line: 787, type: !314)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !11067, line: 787, column: 5)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !11067, line: 783, column: 3)
!11616 = distinct !DILexicalBlock(scope: !11596, file: !11067, line: 782, column: 6)
!11617 = !DILocalVariable(name: "tmpreg", scope: !11618, file: !11067, line: 811, type: !314)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !11067, line: 811, column: 5)
!11619 = distinct !DILexicalBlock(scope: !11616, file: !11067, line: 807, column: 3)
!11620 = !DILocation(line: 0, scope: !11596)
!11621 = !DILocation(line: 777, column: 3, scope: !11596)
!11622 = !DILocation(line: 777, column: 20, scope: !11596)
!11623 = !DILocation(line: 782, column: 15, scope: !11616)
!11624 = !DILocation(line: 782, column: 6, scope: !11596)
!11625 = !DILocation(line: 787, column: 5, scope: !11614)
!11626 = !DILocation(line: 787, column: 5, scope: !11615)
!11627 = !DILocation(line: 790, column: 21, scope: !11615)
!11628 = !DILocation(line: 790, column: 25, scope: !11615)
!11629 = !DILocation(line: 791, column: 21, scope: !11615)
!11630 = !DILocation(line: 791, column: 26, scope: !11615)
!11631 = !DILocation(line: 792, column: 21, scope: !11615)
!11632 = !DILocation(line: 792, column: 27, scope: !11615)
!11633 = !DILocation(line: 793, column: 21, scope: !11615)
!11634 = !DILocation(line: 793, column: 26, scope: !11615)
!11635 = !DILocation(line: 794, column: 21, scope: !11615)
!11636 = !DILocation(line: 794, column: 31, scope: !11615)
!11637 = !DILocation(line: 795, column: 5, scope: !11615)
!11638 = !DILocation(line: 798, column: 5, scope: !11615)
!11639 = !DILocation(line: 804, column: 3, scope: !11615)
!11640 = !DILocation(line: 811, column: 5, scope: !11618)
!11641 = !DILocation(line: 811, column: 5, scope: !11619)
!11642 = !DILocation(line: 814, column: 21, scope: !11619)
!11643 = !DILocation(line: 814, column: 25, scope: !11619)
!11644 = !DILocation(line: 815, column: 21, scope: !11619)
!11645 = !DILocation(line: 815, column: 26, scope: !11619)
!11646 = !DILocation(line: 816, column: 21, scope: !11619)
!11647 = !DILocation(line: 816, column: 27, scope: !11619)
!11648 = !DILocation(line: 817, column: 21, scope: !11619)
!11649 = !DILocation(line: 817, column: 26, scope: !11619)
!11650 = !DILocation(line: 818, column: 21, scope: !11619)
!11651 = !DILocation(line: 818, column: 31, scope: !11619)
!11652 = !DILocation(line: 819, column: 5, scope: !11619)
!11653 = !DILocation(line: 822, column: 5, scope: !11619)
!11654 = !DILocation(line: 0, scope: !11616)
!11655 = !DILocation(line: 830, column: 1, scope: !11596)
!11656 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11605, file: !11605, line: 224, type: !11657, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!11657 = !DISubroutineType(types: !11658)
!11658 = !{null, !2818, !11659}
!11659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11604, size: 32)
!11660 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11067, file: !11067, line: 841, type: !2936, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !2000)
!11661 = !DILocation(line: 843, column: 38, scope: !11660)
!11662 = !DILocation(line: 844, column: 1, scope: !11660)
!11663 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11067, file: !11067, line: 850, type: !2936, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !2000)
!11664 = !DILocation(line: 852, column: 38, scope: !11663)
!11665 = !DILocation(line: 853, column: 1, scope: !11663)
!11666 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11067, file: !11067, line: 941, type: !3174, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !2000)
!11667 = !DILocation(line: 943, column: 10, scope: !11666)
!11668 = !DILocation(line: 943, column: 3, scope: !11666)
!11669 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11067, file: !11067, line: 952, type: !3174, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !2000)
!11670 = !DILocation(line: 955, column: 11, scope: !11669)
!11671 = !DILocation(line: 955, column: 56, scope: !11669)
!11672 = !DILocation(line: 955, column: 78, scope: !11669)
!11673 = !DILocation(line: 955, column: 36, scope: !11669)
!11674 = !DILocation(line: 955, column: 33, scope: !11669)
!11675 = !DILocation(line: 955, column: 3, scope: !11669)
!11676 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11067, file: !11067, line: 964, type: !3174, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !2000)
!11677 = !DILocation(line: 967, column: 11, scope: !11676)
!11678 = !DILocation(line: 967, column: 55, scope: !11676)
!11679 = !DILocation(line: 967, column: 77, scope: !11676)
!11680 = !DILocation(line: 967, column: 35, scope: !11676)
!11681 = !DILocation(line: 967, column: 32, scope: !11676)
!11682 = !DILocation(line: 967, column: 3, scope: !11676)
!11683 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11067, file: !11067, line: 977, type: !11684, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !11686)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{null, !11075}
!11686 = !{!11687}
!11687 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11683, file: !11067, line: 977, type: !11075)
!11688 = !DILocation(line: 0, scope: !11683)
!11689 = !DILocation(line: 980, column: 22, scope: !11683)
!11690 = !DILocation(line: 980, column: 37, scope: !11683)
!11691 = !DILocation(line: 983, column: 12, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11683, file: !11067, line: 983, column: 6)
!11693 = !DILocation(line: 983, column: 15, scope: !11692)
!11694 = !DILocation(line: 983, column: 31, scope: !11692)
!11695 = !DILocation(line: 983, column: 6, scope: !11683)
!11696 = !DILocation(line: 985, column: 24, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11692, file: !11067, line: 984, column: 3)
!11698 = !DILocation(line: 985, column: 33, scope: !11697)
!11699 = !DILocation(line: 986, column: 3, scope: !11697)
!11700 = !DILocation(line: 987, column: 17, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11692, file: !11067, line: 987, column: 11)
!11702 = !DILocation(line: 987, column: 20, scope: !11701)
!11703 = !DILocation(line: 987, column: 35, scope: !11701)
!11704 = !DILocation(line: 0, scope: !11701)
!11705 = !DILocation(line: 987, column: 11, scope: !11692)
!11706 = !DILocation(line: 989, column: 33, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11701, file: !11067, line: 988, column: 3)
!11708 = !DILocation(line: 990, column: 3, scope: !11707)
!11709 = !DILocation(line: 993, column: 33, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11701, file: !11067, line: 992, column: 3)
!11711 = !DILocation(line: 997, column: 12, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11683, file: !11067, line: 997, column: 6)
!11713 = !DILocation(line: 997, column: 15, scope: !11712)
!11714 = !DILocation(line: 1003, column: 24, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11712, file: !11067, line: 1002, column: 3)
!11716 = !DILocation(line: 1003, column: 33, scope: !11715)
!11717 = !DILocation(line: 1006, column: 61, scope: !11683)
!11718 = !DILocation(line: 1006, column: 81, scope: !11683)
!11719 = !DILocation(line: 1006, column: 22, scope: !11683)
!11720 = !DILocation(line: 1006, column: 42, scope: !11683)
!11721 = !DILocation(line: 1009, column: 12, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11683, file: !11067, line: 1009, column: 6)
!11723 = !DILocation(line: 1009, column: 17, scope: !11722)
!11724 = !DILocation(line: 1009, column: 35, scope: !11722)
!11725 = !DILocation(line: 1009, column: 6, scope: !11683)
!11726 = !DILocation(line: 1011, column: 24, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11722, file: !11067, line: 1010, column: 3)
!11728 = !DILocation(line: 1011, column: 33, scope: !11727)
!11729 = !DILocation(line: 1012, column: 3, scope: !11727)
!11730 = !DILocation(line: 1013, column: 17, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11722, file: !11067, line: 1013, column: 11)
!11732 = !DILocation(line: 1013, column: 22, scope: !11731)
!11733 = !DILocation(line: 1013, column: 39, scope: !11731)
!11734 = !DILocation(line: 0, scope: !11731)
!11735 = !DILocation(line: 1013, column: 11, scope: !11722)
!11736 = !DILocation(line: 1015, column: 33, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11731, file: !11067, line: 1014, column: 3)
!11738 = !DILocation(line: 1016, column: 3, scope: !11737)
!11739 = !DILocation(line: 1019, column: 33, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11731, file: !11067, line: 1018, column: 3)
!11741 = !DILocation(line: 1023, column: 12, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11683, file: !11067, line: 1023, column: 6)
!11743 = !DILocation(line: 1023, column: 16, scope: !11742)
!11744 = !DILocation(line: 1029, column: 24, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11742, file: !11067, line: 1028, column: 3)
!11746 = !DILocation(line: 1029, column: 33, scope: !11745)
!11747 = !DILocation(line: 1033, column: 12, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11683, file: !11067, line: 1033, column: 6)
!11749 = !DILocation(line: 1033, column: 15, scope: !11748)
!11750 = !DILocation(line: 1033, column: 30, scope: !11748)
!11751 = !DILocation(line: 1033, column: 6, scope: !11683)
!11752 = !DILocation(line: 1039, column: 28, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11748, file: !11067, line: 1038, column: 3)
!11754 = !DILocation(line: 1039, column: 37, scope: !11753)
!11755 = !DILocation(line: 1041, column: 54, scope: !11683)
!11756 = !DILocation(line: 1041, column: 62, scope: !11683)
!11757 = !DILocation(line: 1041, column: 26, scope: !11683)
!11758 = !DILocation(line: 1041, column: 36, scope: !11683)
!11759 = !DILocation(line: 1042, column: 49, scope: !11683)
!11760 = !DILocation(line: 1042, column: 57, scope: !11683)
!11761 = !DILocation(line: 1042, column: 26, scope: !11683)
!11762 = !DILocation(line: 1042, column: 31, scope: !11683)
!11763 = !DILocation(line: 1043, column: 50, scope: !11683)
!11764 = !DILocation(line: 1043, column: 78, scope: !11683)
!11765 = !DILocation(line: 1043, column: 26, scope: !11683)
!11766 = !DILocation(line: 1043, column: 31, scope: !11683)
!11767 = !DILocation(line: 1044, column: 52, scope: !11683)
!11768 = !DILocation(line: 1044, column: 102, scope: !11683)
!11769 = !DILocation(line: 1044, column: 109, scope: !11683)
!11770 = !DILocation(line: 1044, column: 26, scope: !11683)
!11771 = !DILocation(line: 1044, column: 31, scope: !11683)
!11772 = !DILocation(line: 1045, column: 50, scope: !11683)
!11773 = !DILocation(line: 1045, column: 78, scope: !11683)
!11774 = !DILocation(line: 1045, column: 26, scope: !11683)
!11775 = !DILocation(line: 1045, column: 31, scope: !11683)
!11776 = !DILocation(line: 1046, column: 1, scope: !11683)
!11777 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11067, file: !11067, line: 1056, type: !11778, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !11780)
!11778 = !DISubroutineType(types: !11779)
!11779 = !{null, !11430, !864}
!11780 = !{!11781, !11782}
!11781 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11777, file: !11067, line: 1056, type: !11430)
!11782 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11777, file: !11067, line: 1056, type: !864)
!11783 = !DILocation(line: 0, scope: !11777)
!11784 = !DILocation(line: 1059, column: 22, scope: !11777)
!11785 = !DILocation(line: 1059, column: 32, scope: !11777)
!11786 = !DILocation(line: 1062, column: 53, scope: !11777)
!11787 = !DILocation(line: 1062, column: 58, scope: !11777)
!11788 = !DILocation(line: 1062, column: 22, scope: !11777)
!11789 = !DILocation(line: 1062, column: 35, scope: !11777)
!11790 = !DILocation(line: 1065, column: 54, scope: !11777)
!11791 = !DILocation(line: 1065, column: 59, scope: !11777)
!11792 = !DILocation(line: 1065, column: 22, scope: !11777)
!11793 = !DILocation(line: 1065, column: 36, scope: !11777)
!11794 = !DILocation(line: 1068, column: 55, scope: !11777)
!11795 = !DILocation(line: 1068, column: 60, scope: !11777)
!11796 = !DILocation(line: 1068, column: 22, scope: !11777)
!11797 = !DILocation(line: 1068, column: 37, scope: !11777)
!11798 = !DILocation(line: 1071, column: 56, scope: !11777)
!11799 = !DILocation(line: 1071, column: 79, scope: !11777)
!11800 = !DILocation(line: 1071, column: 22, scope: !11777)
!11801 = !DILocation(line: 1071, column: 37, scope: !11777)
!11802 = !DILocation(line: 1074, column: 34, scope: !11777)
!11803 = !DILocation(line: 1074, column: 38, scope: !11777)
!11804 = !DILocation(line: 1074, column: 14, scope: !11777)
!11805 = !DILocation(line: 1075, column: 1, scope: !11777)
!11806 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11067, file: !11067, line: 1082, type: !2936, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !2000)
!11807 = !DILocation(line: 1085, column: 6, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11806, file: !11067, line: 1085, column: 6)
!11809 = !DILocation(line: 1085, column: 6, scope: !11806)
!11810 = !DILocation(line: 1088, column: 5, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11808, file: !11067, line: 1086, column: 3)
!11812 = !DILocation(line: 1091, column: 5, scope: !11811)
!11813 = !DILocation(line: 1092, column: 3, scope: !11811)
!11814 = !DILocation(line: 1093, column: 1, scope: !11806)
!11815 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11067, file: !11067, line: 1099, type: !2936, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !2000)
!11816 = !DILocation(line: 1104, column: 1, scope: !11815)
!11817 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11818, file: !11818, line: 257, type: !6375, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !11819)
!11818 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11819 = !{!11820}
!11820 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11817, file: !11818, line: 257, type: !118)
!11821 = !DILocation(line: 0, scope: !11817)
!11822 = !DILocation(line: 260, column: 3, scope: !11817)
!11823 = !DILocation(line: 261, column: 1, scope: !11817)
!11824 = distinct !DISubprogram(name: "LL_InitTick", scope: !11825, file: !11825, line: 260, type: !9424, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !11826)
!11825 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11826 = !{!11827, !11828}
!11827 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11824, file: !11825, line: 260, type: !118)
!11828 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11824, file: !11825, line: 260, type: !118)
!11829 = !DILocation(line: 0, scope: !11824)
!11830 = !DILocation(line: 263, column: 46, scope: !11824)
!11831 = !DILocation(line: 263, column: 55, scope: !11824)
!11832 = !DILocation(line: 263, column: 18, scope: !11824)
!11833 = !DILocation(line: 264, column: 18, scope: !11824)
!11834 = !DILocation(line: 265, column: 18, scope: !11824)
!11835 = !DILocation(line: 267, column: 1, scope: !11824)
!11836 = distinct !DISubprogram(name: "LL_mDelay", scope: !11818, file: !11818, line: 273, type: !6375, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !11837)
!11837 = !{!11838, !11839}
!11838 = !DILocalVariable(name: "Delay", arg: 1, scope: !11836, file: !11818, line: 273, type: !118)
!11839 = !DILocalVariable(name: "tmp", scope: !11836, file: !11818, line: 275, type: !314)
!11840 = !DILocation(line: 0, scope: !11836)
!11841 = !DILocation(line: 275, column: 3, scope: !11836)
!11842 = !DILocation(line: 275, column: 18, scope: !11836)
!11843 = !DILocation(line: 275, column: 33, scope: !11836)
!11844 = !DILocation(line: 277, column: 10, scope: !11836)
!11845 = !DILocation(line: 280, column: 12, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11836, file: !11818, line: 280, column: 6)
!11847 = !DILocation(line: 285, column: 3, scope: !11836)
!11848 = !DILocation(line: 287, column: 18, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !11818, line: 287, column: 8)
!11850 = distinct !DILexicalBlock(scope: !11836, file: !11818, line: 286, column: 3)
!11851 = !DILocation(line: 292, column: 1, scope: !11836)
!11852 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11818, file: !11818, line: 323, type: !6375, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !11853)
!11853 = !{!11854}
!11854 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11852, file: !11818, line: 323, type: !118)
!11855 = !DILocation(line: 0, scope: !11852)
!11856 = !DILocation(line: 326, column: 19, scope: !11852)
!11857 = !DILocation(line: 327, column: 1, scope: !11852)
!11858 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11818, file: !11818, line: 338, type: !11859, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !11862)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!11861, !118}
!11861 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !808, line: 201, baseType: !807)
!11862 = !{!11863, !11864, !11865, !11866, !11867}
!11863 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11858, file: !11818, line: 338, type: !118)
!11864 = !DILocalVariable(name: "timeout", scope: !11858, file: !11818, line: 340, type: !118)
!11865 = !DILocalVariable(name: "getlatency", scope: !11858, file: !11818, line: 341, type: !118)
!11866 = !DILocalVariable(name: "latency", scope: !11858, file: !11818, line: 342, type: !118)
!11867 = !DILocalVariable(name: "status", scope: !11858, file: !11818, line: 343, type: !11861)
!11868 = !DILocation(line: 0, scope: !11858)
!11869 = !DILocation(line: 347, column: 21, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11858, file: !11818, line: 347, column: 6)
!11871 = !DILocation(line: 347, column: 6, scope: !11858)
!11872 = !DILocation(line: 353, column: 8, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11874, file: !11818, line: 353, column: 8)
!11874 = distinct !DILexicalBlock(scope: !11870, file: !11818, line: 352, column: 3)
!11875 = !DILocation(line: 353, column: 40, scope: !11873)
!11876 = !DILocation(line: 353, column: 8, scope: !11874)
!11877 = !DILocation(line: 374, column: 55, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11879, file: !11818, line: 374, column: 10)
!11879 = distinct !DILexicalBlock(scope: !11873, file: !11818, line: 354, column: 5)
!11880 = !DILocation(line: 368, column: 26, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11879, file: !11818, line: 368, column: 10)
!11882 = !DILocation(line: 368, column: 55, scope: !11881)
!11883 = !DILocation(line: 380, column: 57, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !11818, line: 380, column: 12)
!11885 = distinct !DILexicalBlock(scope: !11878, file: !11818, line: 379, column: 7)
!11886 = !DILocation(line: 387, column: 8, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11874, file: !11818, line: 387, column: 8)
!11888 = !DILocation(line: 387, column: 40, scope: !11887)
!11889 = !DILocation(line: 387, column: 8, scope: !11874)
!11890 = !DILocation(line: 407, column: 26, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11892, file: !11818, line: 407, column: 10)
!11892 = distinct !DILexicalBlock(scope: !11887, file: !11818, line: 388, column: 5)
!11893 = !DILocation(line: 407, column: 55, scope: !11891)
!11894 = !DILocation(line: 413, column: 28, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11896, file: !11818, line: 413, column: 12)
!11896 = distinct !DILexicalBlock(scope: !11891, file: !11818, line: 412, column: 7)
!11897 = !DILocation(line: 413, column: 57, scope: !11895)
!11898 = !DILocation(line: 0, scope: !11874)
!11899 = !DILocation(line: 420, column: 8, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11874, file: !11818, line: 420, column: 8)
!11901 = !DILocation(line: 420, column: 40, scope: !11900)
!11902 = !DILocation(line: 420, column: 8, scope: !11874)
!11903 = !DILocation(line: 429, column: 26, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11905, file: !11818, line: 429, column: 10)
!11905 = distinct !DILexicalBlock(scope: !11900, file: !11818, line: 421, column: 5)
!11906 = !DILocation(line: 429, column: 55, scope: !11904)
!11907 = !DILocation(line: 435, column: 28, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !11818, line: 435, column: 12)
!11909 = distinct !DILexicalBlock(scope: !11904, file: !11818, line: 434, column: 7)
!11910 = !DILocation(line: 435, column: 57, scope: !11908)
!11911 = !DILocation(line: 444, column: 5, scope: !11874)
!11912 = !DILocation(line: 448, column: 5, scope: !11874)
!11913 = !DILocation(line: 451, column: 18, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11874, file: !11818, line: 449, column: 5)
!11915 = !DILocation(line: 452, column: 12, scope: !11914)
!11916 = !DILocation(line: 453, column: 26, scope: !11874)
!11917 = !DILocation(line: 453, column: 38, scope: !11874)
!11918 = !DILocation(line: 453, column: 5, scope: !11914)
!11919 = distinct !{!11919, !11912, !11920}
!11920 = !DILocation(line: 453, column: 54, scope: !11874)
!11921 = !DILocation(line: 0, scope: !11870)
!11922 = !DILocation(line: 464, column: 3, scope: !11858)
!11923 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11924, file: !11924, line: 519, type: !3174, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!11924 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11925 = !DILocation(line: 521, column: 21, scope: !11923)
!11926 = !DILocation(line: 521, column: 3, scope: !11923)
!11927 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5980, file: !5980, line: 1543, type: !6375, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !11928)
!11928 = !{!11929}
!11929 = !DILocalVariable(name: "Latency", arg: 1, scope: !11927, file: !5980, line: 1543, type: !118)
!11930 = !DILocation(line: 0, scope: !11927)
!11931 = !DILocation(line: 1545, column: 3, scope: !11927)
!11932 = !DILocation(line: 1546, column: 1, scope: !11927)
!11933 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5980, file: !5980, line: 1569, type: !3174, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!11934 = !DILocation(line: 1571, column: 21, scope: !11933)
!11935 = !DILocation(line: 1571, column: 3, scope: !11933)
!11936 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11818, file: !11818, line: 483, type: !11937, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !11953)
!11937 = !DISubroutineType(types: !11938)
!11938 = !{!11861, !11939, !11946}
!11939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11940, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11825, line: 114, baseType: !11941)
!11941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11825, line: 94, size: 96, elements: !11942)
!11942 = !{!11943, !11944, !11945}
!11943 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11941, file: !11825, line: 96, baseType: !118, size: 32)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11941, file: !11825, line: 102, baseType: !118, size: 32, offset: 32)
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11941, file: !11825, line: 109, baseType: !118, size: 32, offset: 64)
!11946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11947, size: 32)
!11947 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11825, line: 139, baseType: !11948)
!11948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11825, line: 119, size: 96, elements: !11949)
!11949 = !{!11950, !11951, !11952}
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11948, file: !11825, line: 121, baseType: !118, size: 32)
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11948, file: !11825, line: 127, baseType: !118, size: 32, offset: 32)
!11952 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11948, file: !11825, line: 133, baseType: !118, size: 32, offset: 64)
!11953 = !{!11954, !11955, !11956, !11957}
!11954 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11936, file: !11818, line: 483, type: !11939)
!11955 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11936, file: !11818, line: 484, type: !11946)
!11956 = !DILocalVariable(name: "status", scope: !11936, file: !11818, line: 486, type: !11861)
!11957 = !DILocalVariable(name: "pllfreq", scope: !11936, file: !11818, line: 487, type: !118)
!11958 = !DILocation(line: 0, scope: !11936)
!11959 = !DILocation(line: 490, column: 6, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11936, file: !11818, line: 490, column: 6)
!11961 = !DILocation(line: 490, column: 25, scope: !11960)
!11962 = !DILocation(line: 490, column: 6, scope: !11936)
!11963 = !DILocation(line: 493, column: 15, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11960, file: !11818, line: 491, column: 3)
!11965 = !DILocation(line: 496, column: 8, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11964, file: !11818, line: 496, column: 8)
!11967 = !DILocation(line: 496, column: 29, scope: !11966)
!11968 = !DILocation(line: 496, column: 8, scope: !11964)
!11969 = !DILocation(line: 498, column: 7, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11966, file: !11818, line: 497, column: 5)
!11971 = !DILocation(line: 499, column: 7, scope: !11970)
!11972 = !DILocation(line: 499, column: 14, scope: !11970)
!11973 = !DILocation(line: 499, column: 35, scope: !11970)
!11974 = distinct !{!11974, !11971, !11975}
!11975 = !DILocation(line: 502, column: 7, scope: !11970)
!11976 = !DILocation(line: 506, column: 76, scope: !11964)
!11977 = !DILocation(line: 506, column: 103, scope: !11964)
!11978 = !DILocation(line: 507, column: 54, scope: !11964)
!11979 = !DILocation(line: 506, column: 5, scope: !11964)
!11980 = !DILocation(line: 510, column: 14, scope: !11964)
!11981 = !DILocation(line: 511, column: 3, scope: !11964)
!11982 = !DILocation(line: 0, scope: !11960)
!11983 = !DILocation(line: 518, column: 3, scope: !11936)
!11984 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11818, file: !11818, line: 642, type: !11985, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !11987)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{!11861}
!11987 = !{!11988}
!11988 = !DILocalVariable(name: "status", scope: !11984, file: !11818, line: 644, type: !11861)
!11989 = !DILocation(line: 0, scope: !11984)
!11990 = !DILocation(line: 647, column: 6, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11984, file: !11818, line: 647, column: 6)
!11992 = !DILocation(line: 647, column: 27, scope: !11991)
!11993 = !DILocation(line: 663, column: 6, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11984, file: !11818, line: 663, column: 6)
!11995 = !DILocation(line: 663, column: 30, scope: !11994)
!11996 = !DILocation(line: 663, column: 6, scope: !11984)
!11997 = !DILocation(line: 669, column: 3, scope: !11984)
!11998 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11818, file: !11818, line: 611, type: !11999, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !12001)
!11999 = !DISubroutineType(types: !12000)
!12000 = !{!118, !118, !11939}
!12001 = !{!12002, !12003, !12004}
!12002 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11998, file: !11818, line: 611, type: !118)
!12003 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11998, file: !11818, line: 611, type: !11939)
!12004 = !DILocalVariable(name: "pllfreq", scope: !11998, file: !11818, line: 613, type: !118)
!12005 = !DILocation(line: 0, scope: !11998)
!12006 = !DILocation(line: 622, column: 56, scope: !11998)
!12007 = !DILocation(line: 622, column: 61, scope: !11998)
!12008 = !DILocation(line: 622, column: 32, scope: !11998)
!12009 = !DILocation(line: 626, column: 45, scope: !11998)
!12010 = !DILocation(line: 626, column: 50, scope: !11998)
!12011 = !DILocation(line: 626, column: 21, scope: !11998)
!12012 = !DILocation(line: 630, column: 47, scope: !11998)
!12013 = !DILocation(line: 630, column: 82, scope: !11998)
!12014 = !DILocation(line: 630, column: 21, scope: !11998)
!12015 = !DILocation(line: 633, column: 3, scope: !11998)
!12016 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8760, file: !8760, line: 3007, type: !3174, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12017 = !DILocation(line: 3009, column: 11, scope: !12016)
!12018 = !DILocation(line: 3009, column: 44, scope: !12016)
!12019 = !DILocation(line: 3009, column: 3, scope: !12016)
!12020 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8760, file: !8760, line: 2987, type: !2936, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12021 = !DILocation(line: 2989, column: 3, scope: !12020)
!12022 = !DILocation(line: 2990, column: 1, scope: !12020)
!12023 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8760, file: !8760, line: 4304, type: !8884, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !12024)
!12024 = !{!12025, !12026, !12027, !12028}
!12025 = !DILocalVariable(name: "Source", arg: 1, scope: !12023, file: !8760, line: 4304, type: !118)
!12026 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12023, file: !8760, line: 4304, type: !118)
!12027 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12023, file: !8760, line: 4304, type: !118)
!12028 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12023, file: !8760, line: 4304, type: !118)
!12029 = !DILocation(line: 0, scope: !12023)
!12030 = !DILocation(line: 4306, column: 3, scope: !12023)
!12031 = !DILocation(line: 4308, column: 3, scope: !12023)
!12032 = !DILocation(line: 4312, column: 1, scope: !12023)
!12033 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11818, file: !11818, line: 681, type: !12034, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !12036)
!12034 = !DISubroutineType(types: !12035)
!12035 = !{!11861, !118, !11946}
!12036 = !{!12037, !12038, !12039, !12040}
!12037 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12033, file: !11818, line: 681, type: !118)
!12038 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12033, file: !11818, line: 681, type: !11946)
!12039 = !DILocalVariable(name: "status", scope: !12033, file: !11818, line: 683, type: !11861)
!12040 = !DILocalVariable(name: "hclk_frequency", scope: !12033, file: !11818, line: 684, type: !118)
!12041 = !DILocation(line: 0, scope: !12033)
!12042 = !DILocation(line: 691, column: 20, scope: !12033)
!12043 = !DILocation(line: 694, column: 6, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12033, file: !11818, line: 694, column: 6)
!12045 = !DILocation(line: 694, column: 22, scope: !12044)
!12046 = !DILocation(line: 694, column: 6, scope: !12033)
!12047 = !DILocation(line: 697, column: 14, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12044, file: !11818, line: 695, column: 3)
!12049 = !DILocation(line: 701, column: 13, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12033, file: !11818, line: 701, column: 6)
!12051 = !DILocation(line: 701, column: 6, scope: !12033)
!12052 = !DILocation(line: 704, column: 5, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12050, file: !11818, line: 702, column: 3)
!12054 = !DILocation(line: 705, column: 5, scope: !12053)
!12055 = !DILocation(line: 705, column: 12, scope: !12053)
!12056 = !DILocation(line: 705, column: 33, scope: !12053)
!12057 = distinct !{!12057, !12054, !12058}
!12058 = !DILocation(line: 708, column: 5, scope: !12053)
!12059 = !DILocation(line: 711, column: 49, scope: !12053)
!12060 = !DILocation(line: 711, column: 5, scope: !12053)
!12061 = !DILocation(line: 712, column: 5, scope: !12053)
!12062 = !DILocation(line: 713, column: 5, scope: !12053)
!12063 = !DILocation(line: 713, column: 12, scope: !12053)
!12064 = !DILocation(line: 713, column: 37, scope: !12053)
!12065 = distinct !{!12065, !12062, !12066}
!12066 = !DILocation(line: 716, column: 5, scope: !12053)
!12067 = !DILocation(line: 719, column: 50, scope: !12053)
!12068 = !DILocation(line: 719, column: 5, scope: !12053)
!12069 = !DILocation(line: 720, column: 50, scope: !12053)
!12070 = !DILocation(line: 720, column: 5, scope: !12053)
!12071 = !DILocation(line: 721, column: 3, scope: !12053)
!12072 = !DILocation(line: 724, column: 6, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12033, file: !11818, line: 724, column: 6)
!12074 = !DILocation(line: 724, column: 22, scope: !12073)
!12075 = !DILocation(line: 724, column: 6, scope: !12033)
!12076 = !DILocation(line: 727, column: 14, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12073, file: !11818, line: 725, column: 3)
!12078 = !DILocation(line: 728, column: 3, scope: !12077)
!12079 = !DILocation(line: 731, column: 13, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12033, file: !11818, line: 731, column: 6)
!12081 = !DILocation(line: 731, column: 6, scope: !12033)
!12082 = !DILocation(line: 733, column: 5, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12080, file: !11818, line: 732, column: 3)
!12084 = !DILocation(line: 734, column: 3, scope: !12083)
!12085 = !DILocation(line: 736, column: 3, scope: !12033)
!12086 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8760, file: !8760, line: 4184, type: !2936, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12087 = !DILocation(line: 4186, column: 3, scope: !12086)
!12088 = !DILocation(line: 4187, column: 1, scope: !12086)
!12089 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8760, file: !8760, line: 4205, type: !3174, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12090 = !DILocation(line: 4207, column: 11, scope: !12089)
!12091 = !DILocation(line: 4207, column: 44, scope: !12089)
!12092 = !DILocation(line: 4207, column: 3, scope: !12089)
!12093 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8760, file: !8760, line: 3224, type: !6375, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !12094)
!12094 = !{!12095}
!12095 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12093, file: !8760, line: 3224, type: !118)
!12096 = !DILocation(line: 0, scope: !12093)
!12097 = !DILocation(line: 3226, column: 3, scope: !12093)
!12098 = !DILocation(line: 3227, column: 1, scope: !12093)
!12099 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8760, file: !8760, line: 3188, type: !6375, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !12100)
!12100 = !{!12101}
!12101 = !DILocalVariable(name: "Source", arg: 1, scope: !12099, file: !8760, line: 3188, type: !118)
!12102 = !DILocation(line: 0, scope: !12099)
!12103 = !DILocation(line: 3190, column: 3, scope: !12099)
!12104 = !DILocation(line: 3191, column: 1, scope: !12099)
!12105 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8760, file: !8760, line: 3204, type: !3174, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12106 = !DILocation(line: 3206, column: 21, scope: !12105)
!12107 = !DILocation(line: 3206, column: 3, scope: !12105)
!12108 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8760, file: !8760, line: 3240, type: !6375, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !12109)
!12109 = !{!12110}
!12110 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12108, file: !8760, line: 3240, type: !118)
!12111 = !DILocation(line: 0, scope: !12108)
!12112 = !DILocation(line: 3242, column: 3, scope: !12108)
!12113 = !DILocation(line: 3243, column: 1, scope: !12108)
!12114 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8760, file: !8760, line: 3256, type: !6375, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !12115)
!12115 = !{!12116}
!12116 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12114, file: !8760, line: 3256, type: !118)
!12117 = !DILocation(line: 0, scope: !12114)
!12118 = !DILocation(line: 3258, column: 3, scope: !12114)
!12119 = !DILocation(line: 3259, column: 1, scope: !12114)
!12120 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8760, file: !8760, line: 5153, type: !3174, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12121 = !DILocation(line: 5155, column: 11, scope: !12120)
!12122 = !DILocation(line: 5155, column: 47, scope: !12120)
!12123 = !DILocation(line: 5155, column: 3, scope: !12120)
!12124 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11818, file: !11818, line: 540, type: !12125, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !12127)
!12125 = !DISubroutineType(types: !12126)
!12126 = !{!11861, !118, !118, !11939, !11946}
!12127 = !{!12128, !12129, !12130, !12131, !12132, !12133}
!12128 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12124, file: !11818, line: 540, type: !118)
!12129 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12124, file: !11818, line: 540, type: !118)
!12130 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12124, file: !11818, line: 541, type: !11939)
!12131 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12124, file: !11818, line: 541, type: !11946)
!12132 = !DILocalVariable(name: "status", scope: !12124, file: !11818, line: 543, type: !11861)
!12133 = !DILocalVariable(name: "pllfreq", scope: !12124, file: !11818, line: 544, type: !118)
!12134 = !DILocation(line: 0, scope: !12124)
!12135 = !DILocation(line: 551, column: 6, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12124, file: !11818, line: 551, column: 6)
!12137 = !DILocation(line: 551, column: 25, scope: !12136)
!12138 = !DILocation(line: 551, column: 6, scope: !12124)
!12139 = !DILocation(line: 554, column: 15, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12136, file: !11818, line: 552, column: 3)
!12141 = !DILocation(line: 557, column: 8, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12140, file: !11818, line: 557, column: 8)
!12143 = !DILocation(line: 557, column: 29, scope: !12142)
!12144 = !DILocation(line: 557, column: 8, scope: !12140)
!12145 = !DILocation(line: 560, column: 20, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !11818, line: 560, column: 10)
!12147 = distinct !DILexicalBlock(scope: !12142, file: !11818, line: 558, column: 5)
!12148 = !DILocation(line: 560, column: 10, scope: !12147)
!12149 = !DILocation(line: 562, column: 9, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12146, file: !11818, line: 561, column: 7)
!12151 = !DILocation(line: 563, column: 7, scope: !12150)
!12152 = !DILocation(line: 566, column: 9, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12146, file: !11818, line: 565, column: 7)
!12154 = !DILocation(line: 570, column: 7, scope: !12147)
!12155 = !DILocation(line: 571, column: 7, scope: !12147)
!12156 = !DILocation(line: 571, column: 14, scope: !12147)
!12157 = !DILocation(line: 571, column: 35, scope: !12147)
!12158 = distinct !{!12158, !12155, !12159}
!12159 = !DILocation(line: 574, column: 7, scope: !12147)
!12160 = !DILocation(line: 578, column: 76, scope: !12140)
!12161 = !DILocation(line: 578, column: 103, scope: !12140)
!12162 = !DILocation(line: 579, column: 54, scope: !12140)
!12163 = !DILocation(line: 578, column: 5, scope: !12140)
!12164 = !DILocation(line: 582, column: 14, scope: !12140)
!12165 = !DILocation(line: 583, column: 3, scope: !12140)
!12166 = !DILocation(line: 0, scope: !12136)
!12167 = !DILocation(line: 590, column: 3, scope: !12124)
!12168 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8760, file: !8760, line: 2969, type: !3174, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12169 = !DILocation(line: 2971, column: 11, scope: !12168)
!12170 = !DILocation(line: 2971, column: 44, scope: !12168)
!12171 = !DILocation(line: 2971, column: 3, scope: !12168)
!12172 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8760, file: !8760, line: 2929, type: !2936, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12173 = !DILocation(line: 2931, column: 3, scope: !12172)
!12174 = !DILocation(line: 2932, column: 1, scope: !12172)
!12175 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8760, file: !8760, line: 2939, type: !2936, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12176 = !DILocation(line: 2941, column: 3, scope: !12175)
!12177 = !DILocation(line: 2942, column: 1, scope: !12175)
!12178 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8760, file: !8760, line: 2949, type: !2936, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2831, retainedNodes: !2000)
!12179 = !DILocation(line: 2951, column: 3, scope: !12178)
!12180 = !DILocation(line: 2952, column: 1, scope: !12178)
!12181 = distinct !DISubprogram(name: "z_device_state_init", scope: !12182, file: !12182, line: 23, type: !2936, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12183)
!12182 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12183 = !{!12184}
!12184 = !DILocalVariable(name: "dev", scope: !12181, file: !12182, line: 25, type: !12185)
!12185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12186, size: 32)
!12186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12187)
!12187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !12188)
!12188 = !{!12189, !12190, !12191, !12192, !12198, !12199}
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12187, file: !334, line: 380, baseType: !278, size: 32)
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12187, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12187, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!12192 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12187, file: !334, line: 386, baseType: !12193, size: 32, offset: 96)
!12193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12194, size: 32)
!12194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !12195)
!12195 = !{!12196, !12197}
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12194, file: !334, line: 359, baseType: !185, size: 8)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12194, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12187, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12187, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!12200 = !DILocation(line: 0, scope: !12181)
!12201 = !DILocation(line: 31, column: 1, scope: !12181)
!12202 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12182, file: !12182, line: 33, type: !12203, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12205)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{!12185, !278}
!12205 = !{!12206, !12207}
!12206 = !DILocalVariable(name: "name", arg: 1, scope: !12202, file: !12182, line: 33, type: !278)
!12207 = !DILocalVariable(name: "dev", scope: !12202, file: !12182, line: 35, type: !12185)
!12208 = !DILocation(line: 0, scope: !12202)
!12209 = !DILocation(line: 40, column: 12, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 40, column: 6)
!12211 = !DILocation(line: 40, column: 21, scope: !12210)
!12212 = !DILocation(line: 40, column: 25, scope: !12210)
!12213 = !DILocation(line: 40, column: 33, scope: !12210)
!12214 = !DILocation(line: 40, column: 6, scope: !12202)
!12215 = !DILocation(line: 55, column: 2, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 55, column: 2)
!12217 = !DILocation(line: 50, column: 7, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12219, file: !12182, line: 50, column: 7)
!12219 = distinct !DILexicalBlock(scope: !12220, file: !12182, line: 49, column: 57)
!12220 = distinct !DILexicalBlock(scope: !12221, file: !12182, line: 49, column: 2)
!12221 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 49, column: 2)
!12222 = !DILocation(line: 50, column: 30, scope: !12218)
!12223 = !DILocation(line: 50, column: 39, scope: !12218)
!12224 = !DILocation(line: 50, column: 44, scope: !12218)
!12225 = !DILocation(line: 50, column: 7, scope: !12219)
!12226 = !DILocation(line: 49, column: 53, scope: !12220)
!12227 = !DILocation(line: 49, column: 33, scope: !12220)
!12228 = !DILocation(line: 49, column: 2, scope: !12221)
!12229 = distinct !{!12229, !12228, !12230}
!12230 = !DILocation(line: 53, column: 2, scope: !12221)
!12231 = !DILocation(line: 56, column: 7, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !12182, line: 56, column: 7)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !12182, line: 55, column: 57)
!12234 = distinct !DILexicalBlock(scope: !12216, file: !12182, line: 55, column: 2)
!12235 = !DILocation(line: 56, column: 30, scope: !12232)
!12236 = !DILocation(line: 56, column: 52, scope: !12232)
!12237 = !DILocation(line: 56, column: 34, scope: !12232)
!12238 = !DILocation(line: 56, column: 58, scope: !12232)
!12239 = !DILocation(line: 56, column: 7, scope: !12233)
!12240 = !DILocation(line: 55, column: 53, scope: !12234)
!12241 = !DILocation(line: 55, column: 33, scope: !12234)
!12242 = distinct !{!12242, !12215, !12243}
!12243 = !DILocation(line: 59, column: 2, scope: !12216)
!12244 = !DILocation(line: 62, column: 1, scope: !12202)
!12245 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12182, file: !12182, line: 93, type: !12246, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12248)
!12246 = !DISubroutineType(types: !12247)
!12247 = !{!345, !12185}
!12248 = !{!12249}
!12249 = !DILocalVariable(name: "dev", arg: 1, scope: !12245, file: !12182, line: 93, type: !12185)
!12250 = !DILocation(line: 0, scope: !12245)
!12251 = !DILocation(line: 99, column: 10, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12245, file: !12182, line: 99, column: 6)
!12253 = !DILocation(line: 99, column: 6, scope: !12245)
!12254 = !DILocation(line: 103, column: 14, scope: !12245)
!12255 = !DILocation(line: 103, column: 21, scope: !12245)
!12256 = !DILocation(line: 103, column: 33, scope: !12245)
!12257 = !DILocation(line: 103, column: 49, scope: !12245)
!12258 = !DILocation(line: 103, column: 58, scope: !12245)
!12259 = !DILocation(line: 104, column: 1, scope: !12245)
!12260 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12182, file: !12182, line: 87, type: !12261, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12264)
!12261 = !DISubroutineType(types: !12262)
!12262 = !{!239, !12263}
!12263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12185, size: 32)
!12264 = !{!12265}
!12265 = !DILocalVariable(name: "devices", arg: 1, scope: !12260, file: !12182, line: 87, type: !12263)
!12266 = !DILocation(line: 0, scope: !12260)
!12267 = !DILocation(line: 89, column: 11, scope: !12260)
!12268 = !DILocation(line: 90, column: 2, scope: !12260)
!12269 = distinct !DISubprogram(name: "device_required_foreach", scope: !12182, file: !12182, line: 125, type: !12270, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12276)
!12270 = !DISubroutineType(types: !12271)
!12271 = !{!119, !12185, !12272, !113}
!12272 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !334, line: 471, baseType: !12273)
!12273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12274, size: 32)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!119, !12185, !113}
!12276 = !{!12277, !12278, !12279, !12280, !12281}
!12277 = !DILocalVariable(name: "dev", arg: 1, scope: !12269, file: !12182, line: 125, type: !12185)
!12278 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12269, file: !12182, line: 126, type: !12272)
!12279 = !DILocalVariable(name: "context", arg: 3, scope: !12269, file: !12182, line: 127, type: !113)
!12280 = !DILocalVariable(name: "handle_count", scope: !12269, file: !12182, line: 129, type: !239)
!12281 = !DILocalVariable(name: "handles", scope: !12269, file: !12182, line: 130, type: !348)
!12282 = !DILocation(line: 0, scope: !12269)
!12283 = !DILocation(line: 129, column: 2, scope: !12269)
!12284 = !DILocation(line: 129, column: 9, scope: !12269)
!12285 = !DILocation(line: 130, column: 35, scope: !12269)
!12286 = !DILocation(line: 132, column: 33, scope: !12269)
!12287 = !DILocation(line: 132, column: 9, scope: !12269)
!12288 = !DILocation(line: 133, column: 1, scope: !12269)
!12289 = !DILocation(line: 132, column: 2, scope: !12269)
!12290 = distinct !DISubprogram(name: "device_required_handles_get", scope: !334, file: !334, line: 493, type: !12291, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12293)
!12291 = !DISubroutineType(types: !12292)
!12292 = !{!348, !12185, !2383}
!12293 = !{!12294, !12295, !12296, !12297}
!12294 = !DILocalVariable(name: "dev", arg: 1, scope: !12290, file: !334, line: 493, type: !12185)
!12295 = !DILocalVariable(name: "count", arg: 2, scope: !12290, file: !334, line: 493, type: !2383)
!12296 = !DILocalVariable(name: "rv", scope: !12290, file: !334, line: 495, type: !348)
!12297 = !DILocalVariable(name: "i", scope: !12298, file: !334, line: 498, type: !239)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !334, line: 497, column: 18)
!12299 = distinct !DILexicalBlock(scope: !12290, file: !334, line: 497, column: 6)
!12300 = !DILocation(line: 0, scope: !12290)
!12301 = !DILocation(line: 495, column: 35, scope: !12290)
!12302 = !DILocation(line: 497, column: 9, scope: !12299)
!12303 = !DILocation(line: 497, column: 6, scope: !12290)
!12304 = !DILocation(line: 0, scope: !12298)
!12305 = !DILocation(line: 500, column: 11, scope: !12298)
!12306 = !DILocation(line: 500, column: 40, scope: !12298)
!12307 = !DILocation(line: 502, column: 4, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12298, file: !334, line: 501, column: 40)
!12309 = distinct !{!12309, !12310, !12311}
!12310 = !DILocation(line: 500, column: 3, scope: !12298)
!12311 = !DILocation(line: 503, column: 3, scope: !12298)
!12312 = !DILocation(line: 504, column: 10, scope: !12298)
!12313 = !DILocation(line: 505, column: 2, scope: !12298)
!12314 = !DILocation(line: 507, column: 2, scope: !12290)
!12315 = distinct !DISubprogram(name: "device_visitor", scope: !12182, file: !12182, line: 106, type: !12316, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12318)
!12316 = !DISubroutineType(types: !12317)
!12317 = !{!119, !348, !239, !12272, !113}
!12318 = !{!12319, !12320, !12321, !12322, !12323, !12325, !12328, !12329}
!12319 = !DILocalVariable(name: "handles", arg: 1, scope: !12315, file: !12182, line: 106, type: !348)
!12320 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12315, file: !12182, line: 107, type: !239)
!12321 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12315, file: !12182, line: 108, type: !12272)
!12322 = !DILocalVariable(name: "context", arg: 4, scope: !12315, file: !12182, line: 109, type: !113)
!12323 = !DILocalVariable(name: "i", scope: !12324, file: !12182, line: 112, type: !239)
!12324 = distinct !DILexicalBlock(scope: !12315, file: !12182, line: 112, column: 2)
!12325 = !DILocalVariable(name: "dh", scope: !12326, file: !12182, line: 113, type: !350)
!12326 = distinct !DILexicalBlock(scope: !12327, file: !12182, line: 112, column: 44)
!12327 = distinct !DILexicalBlock(scope: !12324, file: !12182, line: 112, column: 2)
!12328 = !DILocalVariable(name: "rdev", scope: !12326, file: !12182, line: 114, type: !12185)
!12329 = !DILocalVariable(name: "rc", scope: !12326, file: !12182, line: 115, type: !119)
!12330 = !DILocation(line: 0, scope: !12315)
!12331 = !DILocation(line: 0, scope: !12324)
!12332 = !DILocation(line: 112, column: 23, scope: !12327)
!12333 = !DILocation(line: 112, column: 2, scope: !12324)
!12334 = distinct !{!12334, !12333, !12335}
!12335 = !DILocation(line: 120, column: 2, scope: !12324)
!12336 = !DILocation(line: 113, column: 24, scope: !12326)
!12337 = !DILocation(line: 0, scope: !12326)
!12338 = !DILocation(line: 114, column: 31, scope: !12326)
!12339 = !DILocation(line: 115, column: 12, scope: !12326)
!12340 = !DILocation(line: 117, column: 10, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12326, file: !12182, line: 117, column: 7)
!12342 = !DILocation(line: 112, column: 39, scope: !12327)
!12343 = !DILocation(line: 123, column: 1, scope: !12315)
!12344 = distinct !DISubprogram(name: "device_from_handle", scope: !334, file: !334, line: 439, type: !12345, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12347)
!12345 = !DISubroutineType(types: !12346)
!12346 = !{!12185, !350}
!12347 = !{!12348, !12349, !12350}
!12348 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12344, file: !334, line: 439, type: !350)
!12349 = !DILocalVariable(name: "dev", scope: !12344, file: !334, line: 443, type: !12185)
!12350 = !DILocalVariable(name: "numdev", scope: !12344, file: !334, line: 444, type: !239)
!12351 = !DILocation(line: 0, scope: !12344)
!12352 = !DILocation(line: 446, column: 7, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12344, file: !334, line: 446, column: 6)
!12354 = !DILocation(line: 446, column: 18, scope: !12353)
!12355 = !DILocation(line: 446, column: 23, scope: !12353)
!12356 = !DILocation(line: 450, column: 2, scope: !12344)
!12357 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12182, file: !12182, line: 135, type: !12270, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12358)
!12358 = !{!12359, !12360, !12361, !12362, !12363}
!12359 = !DILocalVariable(name: "dev", arg: 1, scope: !12357, file: !12182, line: 135, type: !12185)
!12360 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12357, file: !12182, line: 136, type: !12272)
!12361 = !DILocalVariable(name: "context", arg: 3, scope: !12357, file: !12182, line: 137, type: !113)
!12362 = !DILocalVariable(name: "handle_count", scope: !12357, file: !12182, line: 139, type: !239)
!12363 = !DILocalVariable(name: "handles", scope: !12357, file: !12182, line: 140, type: !348)
!12364 = !DILocation(line: 0, scope: !12357)
!12365 = !DILocation(line: 139, column: 2, scope: !12357)
!12366 = !DILocation(line: 139, column: 9, scope: !12357)
!12367 = !DILocation(line: 140, column: 35, scope: !12357)
!12368 = !DILocation(line: 142, column: 33, scope: !12357)
!12369 = !DILocation(line: 142, column: 9, scope: !12357)
!12370 = !DILocation(line: 143, column: 1, scope: !12357)
!12371 = !DILocation(line: 142, column: 2, scope: !12357)
!12372 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !334, file: !334, line: 573, type: !12291, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !12373)
!12373 = !{!12374, !12375, !12376, !12377, !12378}
!12374 = !DILocalVariable(name: "dev", arg: 1, scope: !12372, file: !334, line: 573, type: !12185)
!12375 = !DILocalVariable(name: "count", arg: 2, scope: !12372, file: !334, line: 573, type: !2383)
!12376 = !DILocalVariable(name: "rv", scope: !12372, file: !334, line: 575, type: !348)
!12377 = !DILocalVariable(name: "region", scope: !12372, file: !334, line: 576, type: !239)
!12378 = !DILocalVariable(name: "i", scope: !12372, file: !334, line: 577, type: !239)
!12379 = !DILocation(line: 0, scope: !12372)
!12380 = !DILocation(line: 575, column: 35, scope: !12372)
!12381 = !DILocation(line: 579, column: 9, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12372, file: !334, line: 579, column: 6)
!12383 = !DILocation(line: 579, column: 6, scope: !12372)
!12384 = !DILocation(line: 582, column: 8, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !334, line: 582, column: 8)
!12386 = distinct !DILexicalBlock(scope: !12387, file: !334, line: 581, column: 23)
!12387 = distinct !DILexicalBlock(scope: !12382, file: !334, line: 579, column: 18)
!12388 = !DILocation(line: 582, column: 12, scope: !12385)
!12389 = !DILocation(line: 585, column: 6, scope: !12386)
!12390 = !DILocation(line: 0, scope: !12387)
!12391 = !DILocation(line: 581, column: 17, scope: !12387)
!12392 = !DILocation(line: 581, column: 3, scope: !12387)
!12393 = !DILocation(line: 588, column: 10, scope: !12387)
!12394 = !DILocation(line: 588, column: 16, scope: !12387)
!12395 = !DILocation(line: 589, column: 4, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12387, file: !334, line: 588, column: 39)
!12397 = !DILocation(line: 588, column: 3, scope: !12387)
!12398 = distinct !{!12398, !12397, !12399}
!12399 = !DILocation(line: 590, column: 3, scope: !12387)
!12400 = !DILocation(line: 591, column: 10, scope: !12387)
!12401 = !DILocation(line: 592, column: 2, scope: !12387)
!12402 = !DILocation(line: 575, column: 25, scope: !12372)
!12403 = !DILocation(line: 594, column: 2, scope: !12372)
!12404 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1791, file: !1791, line: 49, type: !12405, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1788, retainedNodes: !2000)
!12405 = !DISubroutineType(types: !12406)
!12406 = !{!280}
!12407 = !DILocation(line: 51, column: 10, scope: !12404)
!12408 = !DILocation(line: 51, column: 20, scope: !12404)
!12409 = !DILocation(line: 51, column: 2, scope: !12404)
!12410 = distinct !DISubprogram(name: "coredump", scope: !2903, file: !2903, line: 209, type: !12411, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12560)
!12411 = !DISubroutineType(types: !12412)
!12412 = !{null, !32, !12413, !12457}
!12413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12414, size: 32)
!12414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12415)
!12415 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2513, line: 141, baseType: !12416)
!12416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2513, line: 97, size: 256, elements: !12417)
!12417 = !{!12418}
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12416, file: !2513, line: 107, baseType: !12419, size: 256)
!12419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2513, line: 98, size: 256, elements: !12420)
!12420 = !{!12421, !12426, !12431, !12436, !12441, !12446, !12451, !12456}
!12421 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2513, line: 99, baseType: !12422, size: 32)
!12422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2513, line: 99, size: 32, elements: !12423)
!12423 = !{!12424, !12425}
!12424 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12422, file: !2513, line: 99, baseType: !118, size: 32)
!12425 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12422, file: !2513, line: 99, baseType: !118, size: 32)
!12426 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2513, line: 100, baseType: !12427, size: 32, offset: 32)
!12427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2513, line: 100, size: 32, elements: !12428)
!12428 = !{!12429, !12430}
!12429 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12427, file: !2513, line: 100, baseType: !118, size: 32)
!12430 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12427, file: !2513, line: 100, baseType: !118, size: 32)
!12431 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2513, line: 101, baseType: !12432, size: 32, offset: 64)
!12432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2513, line: 101, size: 32, elements: !12433)
!12433 = !{!12434, !12435}
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12432, file: !2513, line: 101, baseType: !118, size: 32)
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12432, file: !2513, line: 101, baseType: !118, size: 32)
!12436 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2513, line: 102, baseType: !12437, size: 32, offset: 96)
!12437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2513, line: 102, size: 32, elements: !12438)
!12438 = !{!12439, !12440}
!12439 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12437, file: !2513, line: 102, baseType: !118, size: 32)
!12440 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12437, file: !2513, line: 102, baseType: !118, size: 32)
!12441 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2513, line: 103, baseType: !12442, size: 32, offset: 128)
!12442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2513, line: 103, size: 32, elements: !12443)
!12443 = !{!12444, !12445}
!12444 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12442, file: !2513, line: 103, baseType: !118, size: 32)
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12442, file: !2513, line: 103, baseType: !118, size: 32)
!12446 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2513, line: 104, baseType: !12447, size: 32, offset: 160)
!12447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2513, line: 104, size: 32, elements: !12448)
!12448 = !{!12449, !12450}
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12447, file: !2513, line: 104, baseType: !118, size: 32)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12447, file: !2513, line: 104, baseType: !118, size: 32)
!12451 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2513, line: 105, baseType: !12452, size: 32, offset: 192)
!12452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2513, line: 105, size: 32, elements: !12453)
!12453 = !{!12454, !12455}
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12452, file: !2513, line: 105, baseType: !118, size: 32)
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12452, file: !2513, line: 105, baseType: !118, size: 32)
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12419, file: !2513, line: 106, baseType: !118, size: 32, offset: 224)
!12457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12458, size: 32)
!12458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !12459)
!12459 = !{!12460, !12518, !12530, !12531, !12532, !12533, !12534, !12540, !12555}
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12458, file: !143, line: 247, baseType: !12461, size: 384)
!12461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !12462)
!12462 = !{!12463, !12487, !12494, !12495, !12496, !12505, !12506, !12507}
!12463 = !DIDerivedType(tag: DW_TAG_member, scope: !12461, file: !143, line: 60, baseType: !12464, size: 64)
!12464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12461, file: !143, line: 60, size: 64, elements: !12465)
!12465 = !{!12466, !12481}
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12464, file: !143, line: 61, baseType: !12467, size: 64)
!12467 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !12468)
!12468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !12469)
!12469 = !{!12470, !12476}
!12470 = !DIDerivedType(tag: DW_TAG_member, scope: !12468, file: !153, line: 38, baseType: !12471, size: 32)
!12471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12468, file: !153, line: 38, size: 32, elements: !12472)
!12472 = !{!12473, !12475}
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12471, file: !153, line: 39, baseType: !12474, size: 32)
!12474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12468, size: 32)
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12471, file: !153, line: 40, baseType: !12474, size: 32)
!12476 = !DIDerivedType(tag: DW_TAG_member, scope: !12468, file: !153, line: 42, baseType: !12477, size: 32, offset: 32)
!12477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12468, file: !153, line: 42, size: 32, elements: !12478)
!12478 = !{!12479, !12480}
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12477, file: !153, line: 43, baseType: !12474, size: 32)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12477, file: !153, line: 44, baseType: !12474, size: 32)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12464, file: !143, line: 62, baseType: !12482, size: 64)
!12482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !12483)
!12483 = !{!12484}
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12482, file: !169, line: 50, baseType: !12485, size: 64)
!12485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12486, size: 64, elements: !174)
!12486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12482, size: 32)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12461, file: !143, line: 68, baseType: !12488, size: 32, offset: 64)
!12488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12489, size: 32)
!12489 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !12490)
!12490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !12491)
!12491 = !{!12492}
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12490, file: !179, line: 232, baseType: !12493, size: 64)
!12493 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !12468)
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12461, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!12495 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12461, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!12496 = !DIDerivedType(tag: DW_TAG_member, scope: !12461, file: !143, line: 90, baseType: !12497, size: 16, offset: 112)
!12497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12461, file: !143, line: 90, size: 16, elements: !12498)
!12498 = !{!12499, !12504}
!12499 = !DIDerivedType(tag: DW_TAG_member, scope: !12497, file: !143, line: 91, baseType: !12500, size: 16)
!12500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12497, file: !143, line: 91, size: 16, elements: !12501)
!12501 = !{!12502, !12503}
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12500, file: !143, line: 96, baseType: !195, size: 8)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12500, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12497, file: !143, line: 100, baseType: !199, size: 16)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12461, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12461, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12461, file: !143, line: 131, baseType: !12508, size: 192, offset: 192)
!12508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !12509)
!12509 = !{!12510, !12511, !12517}
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12508, file: !179, line: 245, baseType: !12467, size: 64)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12508, file: !179, line: 246, baseType: !12512, size: 32, offset: 64)
!12512 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !12513)
!12513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12514, size: 32)
!12514 = !DISubroutineType(types: !12515)
!12515 = !{null, !12516}
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12508, size: 32)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12508, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12458, file: !143, line: 250, baseType: !12519, size: 288, offset: 384)
!12519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !12520)
!12520 = !{!12521, !12522, !12523, !12524, !12525, !12526, !12527, !12528, !12529}
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12519, file: !216, line: 26, baseType: !118, size: 32)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12519, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12519, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12519, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12519, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12519, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12519, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12519, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12519, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12458, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12458, file: !143, line: 256, baseType: !12489, size: 64, offset: 704)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12458, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12458, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12458, file: !143, line: 300, baseType: !12535, size: 96, offset: 1056)
!12535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !12536)
!12536 = !{!12537, !12538, !12539}
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12535, file: !143, line: 153, baseType: !22, size: 32)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12535, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12535, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12458, file: !143, line: 325, baseType: !12541, size: 32, offset: 1152)
!12541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12542, size: 32)
!12542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !12543)
!12543 = !{!12544, !12550, !12551}
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12542, file: !245, line: 5074, baseType: !12545, size: 96)
!12545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !12546)
!12546 = !{!12547, !12548, !12549}
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12545, file: !249, line: 57, baseType: !252, size: 32)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12545, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12545, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12542, file: !245, line: 5075, baseType: !12489, size: 64, offset: 96)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12542, file: !245, line: 5076, baseType: !12552, size: 32, offset: 160)
!12552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !12553)
!12553 = !{!12554}
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12552, file: !259, line: 52, baseType: !22, size: 32)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12458, file: !143, line: 343, baseType: !12556, size: 64, offset: 1184)
!12556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !12557)
!12557 = !{!12558, !12559}
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12556, file: !216, line: 63, baseType: !118, size: 32)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12556, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!12560 = !{!12561, !12562, !12563}
!12561 = !DILocalVariable(name: "reason", arg: 1, scope: !12410, file: !2903, line: 209, type: !32)
!12562 = !DILocalVariable(name: "esf", arg: 2, scope: !12410, file: !2903, line: 209, type: !12413)
!12563 = !DILocalVariable(name: "thread", arg: 3, scope: !12410, file: !2903, line: 210, type: !12457)
!12564 = !DILocation(line: 0, scope: !12410)
!12565 = !DILocation(line: 212, column: 1, scope: !12410)
!12566 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2903, file: !2903, line: 214, type: !12567, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12569)
!12567 = !DISubroutineType(types: !12568)
!12568 = !{null, !22, !22}
!12569 = !{!12570, !12571}
!12570 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12566, file: !2903, line: 214, type: !22)
!12571 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12566, file: !2903, line: 214, type: !22)
!12572 = !DILocation(line: 0, scope: !12566)
!12573 = !DILocation(line: 216, column: 1, scope: !12566)
!12574 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2903, file: !2903, line: 218, type: !12575, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12577)
!12575 = !DISubroutineType(types: !12576)
!12576 = !{null, !284, !239}
!12577 = !{!12578, !12579}
!12578 = !DILocalVariable(name: "buf", arg: 1, scope: !12574, file: !2903, line: 218, type: !284)
!12579 = !DILocalVariable(name: "buflen", arg: 2, scope: !12574, file: !2903, line: 218, type: !239)
!12580 = !DILocation(line: 0, scope: !12574)
!12581 = !DILocation(line: 220, column: 1, scope: !12574)
!12582 = distinct !DISubprogram(name: "coredump_query", scope: !2903, file: !2903, line: 222, type: !12583, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12585)
!12583 = !DISubroutineType(types: !12584)
!12584 = !{!119, !2902, !113}
!12585 = !{!12586, !12587}
!12586 = !DILocalVariable(name: "query_id", arg: 1, scope: !12582, file: !2903, line: 222, type: !2902)
!12587 = !DILocalVariable(name: "arg", arg: 2, scope: !12582, file: !2903, line: 222, type: !113)
!12588 = !DILocation(line: 0, scope: !12582)
!12589 = !DILocation(line: 224, column: 2, scope: !12582)
!12590 = distinct !DISubprogram(name: "coredump_cmd", scope: !2903, file: !2903, line: 227, type: !12591, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12593)
!12591 = !DISubroutineType(types: !12592)
!12592 = !{!119, !2909, !113}
!12593 = !{!12594, !12595}
!12594 = !DILocalVariable(name: "query_id", arg: 1, scope: !12590, file: !2903, line: 227, type: !2909)
!12595 = !DILocalVariable(name: "arg", arg: 2, scope: !12590, file: !2903, line: 227, type: !113)
!12596 = !DILocation(line: 0, scope: !12590)
!12597 = !DILocation(line: 229, column: 2, scope: !12590)
!12598 = distinct !DISubprogram(name: "arch_system_halt", scope: !12599, file: !12599, line: 23, type: !5970, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12600)
!12599 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12600 = !{!12601}
!12601 = !DILocalVariable(name: "reason", arg: 1, scope: !12598, file: !12599, line: 23, type: !32)
!12602 = !DILocation(line: 0, scope: !12598)
!12603 = !DILocation(line: 55, column: 2, scope: !12604, inlinedAt: !12608)
!12604 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5959, file: !5959, line: 42, type: !5960, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12605)
!12605 = !{!12606, !12607}
!12606 = !DILocalVariable(name: "key", scope: !12604, file: !5959, line: 44, type: !32)
!12607 = !DILocalVariable(name: "tmp", scope: !12604, file: !5959, line: 53, type: !32)
!12608 = distinct !DILocation(line: 31, column: 8, scope: !12598)
!12609 = !{i64 1953603}
!12610 = !DILocation(line: 0, scope: !12604, inlinedAt: !12608)
!12611 = !DILocation(line: 32, column: 2, scope: !12598)
!12612 = !DILocation(line: 32, column: 2, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !12599, line: 32, column: 2)
!12614 = distinct !DILexicalBlock(scope: !12598, file: !12599, line: 32, column: 2)
!12615 = distinct !{!12615, !12616, !12617}
!12616 = !DILocation(line: 32, column: 2, scope: !12614)
!12617 = !DILocation(line: 34, column: 2, scope: !12614)
!12618 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12599, file: !12599, line: 39, type: !12619, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12621)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{null, !32, !12413}
!12621 = !{!12622, !12623}
!12622 = !DILocalVariable(name: "reason", arg: 1, scope: !12618, file: !12599, line: 39, type: !32)
!12623 = !DILocalVariable(name: "esf", arg: 2, scope: !12618, file: !12599, line: 40, type: !12413)
!12624 = !DILocation(line: 0, scope: !12618)
!12625 = !DILocation(line: 45, column: 2, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12599, line: 45, column: 2)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !12599, line: 45, column: 2)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !12599, line: 45, column: 2)
!12629 = distinct !DILexicalBlock(scope: !12618, file: !12599, line: 45, column: 2)
!12630 = !DILocation(line: 46, column: 2, scope: !12618)
!12631 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12599, file: !12599, line: 81, type: !5970, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12632)
!12632 = !{!12633}
!12633 = !DILocalVariable(name: "reason", arg: 1, scope: !12631, file: !12599, line: 81, type: !32)
!12634 = !DILocation(line: 0, scope: !12631)
!12635 = !DILocation(line: 83, column: 2, scope: !12631)
!12636 = distinct !DISubprogram(name: "z_fatal_error", scope: !12599, file: !12599, line: 96, type: !12619, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12637)
!12637 = !{!12638, !12639, !12640, !12641}
!12638 = !DILocalVariable(name: "reason", arg: 1, scope: !12636, file: !12599, line: 96, type: !32)
!12639 = !DILocalVariable(name: "esf", arg: 2, scope: !12636, file: !12599, line: 96, type: !12413)
!12640 = !DILocalVariable(name: "key", scope: !12636, file: !12599, line: 102, type: !32)
!12641 = !DILocalVariable(name: "thread", scope: !12636, file: !12599, line: 103, type: !12457)
!12642 = !DILocation(line: 0, scope: !12636)
!12643 = !DILocation(line: 55, column: 2, scope: !12604, inlinedAt: !12644)
!12644 = distinct !DILocation(line: 102, column: 21, scope: !12636)
!12645 = !DILocation(line: 0, scope: !12604, inlinedAt: !12644)
!12646 = !DILocation(line: 104, column: 4, scope: !12636)
!12647 = !DILocation(line: 109, column: 2, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12649, file: !12599, line: 109, column: 2)
!12649 = distinct !DILexicalBlock(scope: !12650, file: !12599, line: 109, column: 2)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12599, line: 109, column: 2)
!12651 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 109, column: 2)
!12652 = !DILocation(line: 119, column: 11, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 119, column: 6)
!12654 = !DILocation(line: 119, column: 20, scope: !12653)
!12655 = !DILocalVariable(name: "esf", arg: 1, scope: !12656, file: !7330, line: 71, type: !12413)
!12656 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7330, file: !7330, line: 71, type: !12657, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12659)
!12657 = !DISubroutineType(types: !12658)
!12658 = !{!345, !12413}
!12659 = !{!12655}
!12660 = !DILocation(line: 0, scope: !12656, inlinedAt: !12661)
!12661 = distinct !DILocation(line: 119, column: 23, scope: !12653)
!12662 = !DILocation(line: 73, column: 21, scope: !12656, inlinedAt: !12661)
!12663 = !DILocation(line: 73, column: 26, scope: !12656, inlinedAt: !12661)
!12664 = !DILocation(line: 73, column: 9, scope: !12656, inlinedAt: !12661)
!12665 = !DILocation(line: 119, column: 6, scope: !12636)
!12666 = !DILocation(line: 120, column: 3, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12599, line: 120, column: 3)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !12599, line: 120, column: 3)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !12599, line: 120, column: 3)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !12599, line: 120, column: 3)
!12671 = distinct !DILexicalBlock(scope: !12653, file: !12599, line: 119, column: 57)
!12672 = !DILocation(line: 121, column: 2, scope: !12671)
!12673 = !DILocation(line: 124, column: 2, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12675, file: !12599, line: 124, column: 2)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !12599, line: 124, column: 2)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12599, line: 124, column: 2)
!12677 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 124, column: 2)
!12678 = !DILocation(line: 131, column: 2, scope: !12636)
!12679 = !DILocation(line: 0, scope: !12656, inlinedAt: !12680)
!12680 = distinct !DILocation(line: 163, column: 24, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !12599, line: 163, column: 7)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12599, line: 160, column: 9)
!12683 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 146, column: 6)
!12684 = !DILocation(line: 73, column: 21, scope: !12656, inlinedAt: !12680)
!12685 = !DILocation(line: 73, column: 26, scope: !12656, inlinedAt: !12680)
!12686 = !DILocation(line: 73, column: 9, scope: !12656, inlinedAt: !12680)
!12687 = !DILocation(line: 163, column: 7, scope: !12682)
!12688 = !DILocalVariable(name: "key", arg: 1, scope: !12689, file: !5959, line: 84, type: !32)
!12689 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5959, file: !5959, line: 84, type: !5970, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12690)
!12690 = !{!12688}
!12691 = !DILocation(line: 0, scope: !12689, inlinedAt: !12692)
!12692 = distinct !DILocation(line: 171, column: 4, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12681, file: !12599, line: 163, column: 58)
!12694 = !DILocation(line: 95, column: 2, scope: !12689, inlinedAt: !12692)
!12695 = !{i64 1954420}
!12696 = !DILocation(line: 172, column: 4, scope: !12693)
!12697 = !DILocation(line: 163, column: 21, scope: !12681)
!12698 = !DILocation(line: 178, column: 15, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12700, file: !12599, line: 178, column: 8)
!12700 = distinct !DILexicalBlock(scope: !12681, file: !12599, line: 174, column: 10)
!12701 = !DILocation(line: 0, scope: !12689, inlinedAt: !12702)
!12702 = distinct !DILocation(line: 179, column: 5, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12699, file: !12599, line: 178, column: 38)
!12704 = !DILocation(line: 0, scope: !12689, inlinedAt: !12705)
!12705 = distinct !DILocation(line: 186, column: 2, scope: !12636)
!12706 = !DILocation(line: 178, column: 8, scope: !12700)
!12707 = !DILocation(line: 189, column: 3, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12709, file: !12599, line: 188, column: 41)
!12709 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 188, column: 6)
!12710 = !DILocation(line: 191, column: 1, scope: !12636)
!12711 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !12712, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !2000)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{!12714}
!12714 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !12457)
!12715 = !DILocation(line: 535, column: 9, scope: !12711)
!12716 = !DILocation(line: 535, column: 2, scope: !12711)
!12717 = distinct !DISubprogram(name: "reason_to_str", scope: !12599, file: !12599, line: 62, type: !12718, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12720)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{!278, !32}
!12720 = !{!12721}
!12721 = !DILocalVariable(name: "reason", arg: 1, scope: !12717, file: !12599, line: 62, type: !32)
!12722 = !DILocation(line: 0, scope: !12717)
!12723 = !DILocation(line: 64, column: 2, scope: !12717)
!12724 = !DILocation(line: 0, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12717, file: !12599, line: 64, column: 18)
!12726 = !DILocation(line: 78, column: 1, scope: !12717)
!12727 = distinct !DISubprogram(name: "thread_name_get", scope: !12599, file: !12599, line: 51, type: !12728, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12730)
!12728 = !DISubroutineType(types: !12729)
!12729 = !{!278, !12457}
!12730 = !{!12731, !12732}
!12731 = !DILocalVariable(name: "thread", arg: 1, scope: !12727, file: !12599, line: 51, type: !12457)
!12732 = !DILocalVariable(name: "thread_name", scope: !12727, file: !12599, line: 53, type: !278)
!12733 = !DILocation(line: 0, scope: !12727)
!12734 = !DILocation(line: 53, column: 36, scope: !12727)
!12735 = !DILocation(line: 53, column: 28, scope: !12727)
!12736 = !DILocation(line: 53, column: 47, scope: !12727)
!12737 = !DILocation(line: 55, column: 19, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12727, file: !12599, line: 55, column: 6)
!12739 = !DILocation(line: 55, column: 28, scope: !12738)
!12740 = !DILocation(line: 55, column: 32, scope: !12738)
!12741 = !DILocation(line: 55, column: 47, scope: !12738)
!12742 = !DILocation(line: 55, column: 6, scope: !12727)
!12743 = !DILocation(line: 57, column: 2, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12738, file: !12599, line: 55, column: 57)
!12745 = !DILocation(line: 59, column: 2, scope: !12727)
!12746 = distinct !DISubprogram(name: "k_thread_abort", scope: !3187, file: !3187, line: 188, type: !12747, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !12749)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{null, !12714}
!12749 = !{!12750}
!12750 = !DILocalVariable(name: "thread", arg: 1, scope: !12746, file: !3187, line: 188, type: !12714)
!12751 = !DILocation(line: 0, scope: !12746)
!12752 = !DILocation(line: 197, column: 2, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12746, file: !3187, line: 197, column: 2)
!12754 = !{i64 2154073236}
!12755 = !DILocation(line: 198, column: 2, scope: !12746)
!12756 = !DILocation(line: 199, column: 1, scope: !12746)
!12757 = distinct !DISubprogram(name: "z_current_get", scope: !3187, file: !3187, line: 173, type: !12712, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !2000)
!12758 = !DILocation(line: 180, column: 2, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12757, file: !3187, line: 180, column: 2)
!12760 = !{i64 2154073168}
!12761 = !DILocation(line: 181, column: 9, scope: !12757)
!12762 = !DILocation(line: 181, column: 2, scope: !12757)
!12763 = distinct !DISubprogram(name: "z_early_memset", scope: !1799, file: !1799, line: 108, type: !12764, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12766)
!12764 = !DISubroutineType(types: !12765)
!12765 = !{null, !113, !119, !239}
!12766 = !{!12767, !12768, !12769}
!12767 = !DILocalVariable(name: "dst", arg: 1, scope: !12763, file: !1799, line: 108, type: !113)
!12768 = !DILocalVariable(name: "c", arg: 2, scope: !12763, file: !1799, line: 108, type: !119)
!12769 = !DILocalVariable(name: "n", arg: 3, scope: !12763, file: !1799, line: 108, type: !239)
!12770 = !DILocation(line: 0, scope: !12763)
!12771 = !DILocation(line: 110, column: 9, scope: !12763)
!12772 = !DILocation(line: 111, column: 1, scope: !12763)
!12773 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1799, file: !1799, line: 121, type: !12774, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12776)
!12774 = !DISubroutineType(types: !12775)
!12775 = !{null, !113, !13, !239}
!12776 = !{!12777, !12778, !12779}
!12777 = !DILocalVariable(name: "dst", arg: 1, scope: !12773, file: !1799, line: 121, type: !113)
!12778 = !DILocalVariable(name: "src", arg: 2, scope: !12773, file: !1799, line: 121, type: !13)
!12779 = !DILocalVariable(name: "n", arg: 3, scope: !12773, file: !1799, line: 121, type: !239)
!12780 = !DILocation(line: 0, scope: !12773)
!12781 = !DILocation(line: 123, column: 9, scope: !12773)
!12782 = !DILocation(line: 124, column: 1, scope: !12773)
!12783 = distinct !DISubprogram(name: "z_bss_zero", scope: !1799, file: !1799, line: 132, type: !2936, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2000)
!12784 = !DILocation(line: 143, column: 2, scope: !12783)
!12785 = !DILocation(line: 168, column: 1, scope: !12783)
!12786 = distinct !DISubprogram(name: "z_init_cpu", scope: !1799, file: !1799, line: 372, type: !8364, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12787)
!12787 = !{!12788}
!12788 = !DILocalVariable(name: "id", arg: 1, scope: !12786, file: !1799, line: 372, type: !119)
!12789 = !DILocation(line: 0, scope: !12786)
!12790 = !DILocation(line: 374, column: 2, scope: !12786)
!12791 = !DILocation(line: 375, column: 34, scope: !12786)
!12792 = !DILocation(line: 375, column: 19, scope: !12786)
!12793 = !DILocation(line: 375, column: 31, scope: !12786)
!12794 = !DILocation(line: 376, column: 24, scope: !12786)
!12795 = !DILocation(line: 376, column: 19, scope: !12786)
!12796 = !DILocation(line: 376, column: 22, scope: !12786)
!12797 = !DILocation(line: 378, column: 26, scope: !12786)
!12798 = !DILocation(line: 378, column: 4, scope: !12786)
!12799 = !DILocation(line: 378, column: 50, scope: !12786)
!12800 = !DILocation(line: 377, column: 19, scope: !12786)
!12801 = !DILocation(line: 377, column: 29, scope: !12786)
!12802 = !DILocation(line: 384, column: 1, scope: !12786)
!12803 = distinct !DISubprogram(name: "init_idle_thread", scope: !1799, file: !1799, line: 343, type: !8364, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12804)
!12804 = !{!12805, !12806, !12807, !12810}
!12805 = !DILocalVariable(name: "i", arg: 1, scope: !12803, file: !1799, line: 343, type: !119)
!12806 = !DILocalVariable(name: "thread", scope: !12803, file: !1799, line: 345, type: !1891)
!12807 = !DILocalVariable(name: "stack", scope: !12803, file: !1799, line: 346, type: !12808)
!12808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12809, size: 32)
!12809 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !2009)
!12810 = !DILocalVariable(name: "tname", scope: !12803, file: !1799, line: 354, type: !106)
!12811 = !DILocation(line: 0, scope: !12803)
!12812 = !DILocation(line: 345, column: 29, scope: !12803)
!12813 = !DILocation(line: 346, column: 28, scope: !12803)
!12814 = !DILocation(line: 362, column: 37, scope: !12803)
!12815 = !DILocation(line: 362, column: 36, scope: !12803)
!12816 = !DILocation(line: 361, column: 2, scope: !12803)
!12817 = !DILocation(line: 365, column: 2, scope: !12803)
!12818 = !DILocation(line: 370, column: 1, scope: !12803)
!12819 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !12820, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12822)
!12820 = !DISubroutineType(types: !12821)
!12821 = !{!106, !12808}
!12822 = !{!12823}
!12823 = !DILocalVariable(name: "sym", arg: 1, scope: !12819, file: !128, line: 331, type: !12808)
!12824 = !DILocation(line: 0, scope: !12819)
!12825 = !DILocation(line: 333, column: 21, scope: !12819)
!12826 = !DILocation(line: 333, column: 2, scope: !12819)
!12827 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12828, file: !12828, line: 155, type: !12829, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12831)
!12828 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12829 = !DISubroutineType(types: !12830)
!12830 = !{null, !1891}
!12831 = !{!12832}
!12832 = !DILocalVariable(name: "thread", arg: 1, scope: !12827, file: !12828, line: 155, type: !1891)
!12833 = !DILocation(line: 0, scope: !12827)
!12834 = !DILocation(line: 157, column: 15, scope: !12827)
!12835 = !DILocation(line: 157, column: 28, scope: !12827)
!12836 = !DILocation(line: 158, column: 1, scope: !12827)
!12837 = distinct !DISubprogram(name: "z_cstart", scope: !1799, file: !1799, line: 501, type: !2936, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12838)
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "dummy_thread", scope: !12837, file: !1799, line: 518, type: !1892)
!12840 = !DILocation(line: 507, column: 2, scope: !12837)
!12841 = !DILocation(line: 43, column: 14, scope: !12842, inlinedAt: !12846)
!12842 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12843, file: !12843, line: 40, type: !2936, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12844)
!12843 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12844 = !{!12845}
!12845 = !DILocalVariable(name: "msp", scope: !12842, file: !12843, line: 42, type: !118)
!12846 = distinct !DILocation(line: 44, column: 2, scope: !12847, inlinedAt: !12849)
!12847 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12848, file: !12848, line: 42, type: !2936, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2000)
!12848 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12849 = distinct !DILocation(line: 510, column: 2, scope: !12837)
!12850 = !DILocation(line: 43, column: 3, scope: !12842, inlinedAt: !12846)
!12851 = !DILocation(line: 43, column: 60, scope: !12842, inlinedAt: !12846)
!12852 = !DILocation(line: 0, scope: !12842, inlinedAt: !12846)
!12853 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12854, file: !6280, line: 1153, type: !118)
!12854 = distinct !DISubprogram(name: "__set_MSP", scope: !6280, file: !6280, line: 1153, type: !6375, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12855)
!12855 = !{!12853}
!12856 = !DILocation(line: 0, scope: !12854, inlinedAt: !12857)
!12857 = distinct !DILocation(line: 46, column: 2, scope: !12842, inlinedAt: !12846)
!12858 = !DILocation(line: 1155, column: 3, scope: !12854, inlinedAt: !12857)
!12859 = !{i64 2850847}
!12860 = !DILocation(line: 62, column: 11, scope: !12842, inlinedAt: !12846)
!12861 = !DILocation(line: 102, column: 2, scope: !12862, inlinedAt: !12863)
!12862 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7330, file: !7330, line: 97, type: !2936, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2000)
!12863 = distinct !DILocation(line: 45, column: 2, scope: !12847, inlinedAt: !12849)
!12864 = !DILocation(line: 108, column: 2, scope: !12862, inlinedAt: !12863)
!12865 = !DILocation(line: 112, column: 2, scope: !12862, inlinedAt: !12863)
!12866 = !DILocation(line: 113, column: 2, scope: !12862, inlinedAt: !12863)
!12867 = !DILocation(line: 114, column: 2, scope: !12862, inlinedAt: !12863)
!12868 = !DILocation(line: 116, column: 2, scope: !12862, inlinedAt: !12863)
!12869 = !DILocation(line: 123, column: 13, scope: !12862, inlinedAt: !12863)
!12870 = !DILocation(line: 46, column: 2, scope: !12847, inlinedAt: !12849)
!12871 = !DILocation(line: 47, column: 2, scope: !12847, inlinedAt: !12849)
!12872 = !DILocation(line: 174, column: 12, scope: !12873, inlinedAt: !12874)
!12873 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7330, file: !7330, line: 169, type: !2936, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2000)
!12874 = distinct !DILocation(line: 48, column: 2, scope: !12847, inlinedAt: !12849)
!12875 = !DILocation(line: 179, column: 12, scope: !12873, inlinedAt: !12874)
!12876 = !DILocation(line: 50, column: 2, scope: !12847, inlinedAt: !12849)
!12877 = !DILocation(line: 57, column: 2, scope: !12847, inlinedAt: !12849)
!12878 = !DILocation(line: 518, column: 2, scope: !12837)
!12879 = !DILocation(line: 518, column: 18, scope: !12837)
!12880 = !DILocation(line: 520, column: 2, scope: !12837)
!12881 = !DILocation(line: 523, column: 2, scope: !12837)
!12882 = !DILocation(line: 526, column: 2, scope: !12837)
!12883 = !DILocation(line: 527, column: 2, scope: !12837)
!12884 = !DILocation(line: 543, column: 24, scope: !12837)
!12885 = !DILocation(line: 543, column: 2, scope: !12837)
!12886 = !DILocation(line: 0, scope: !2033)
!12887 = !DILocation(line: 246, column: 15, scope: !2051)
!12888 = !DILocation(line: 246, column: 36, scope: !2050)
!12889 = !DILocation(line: 246, column: 2, scope: !2051)
!12890 = !DILocation(line: 247, column: 37, scope: !2049)
!12891 = !DILocation(line: 0, scope: !2049)
!12892 = !DILocation(line: 248, column: 19, scope: !2049)
!12893 = !DILocation(line: 248, column: 12, scope: !2049)
!12894 = !DILocation(line: 250, column: 11, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !2049, file: !1799, line: 250, column: 7)
!12896 = !DILocation(line: 250, column: 7, scope: !2049)
!12897 = !DILocation(line: 254, column: 11, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12899, file: !1799, line: 254, column: 8)
!12899 = distinct !DILexicalBlock(scope: !12895, file: !1799, line: 250, column: 20)
!12900 = !DILocation(line: 254, column: 8, scope: !12899)
!12901 = !DILocation(line: 255, column: 9, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12898, file: !1799, line: 254, column: 17)
!12903 = !DILocation(line: 258, column: 9, scope: !12902)
!12904 = !DILocation(line: 261, column: 28, scope: !12902)
!12905 = !DILocation(line: 261, column: 10, scope: !12902)
!12906 = !DILocation(line: 261, column: 17, scope: !12902)
!12907 = !DILocation(line: 261, column: 26, scope: !12902)
!12908 = !DILocation(line: 262, column: 4, scope: !12902)
!12909 = !DILocation(line: 263, column: 9, scope: !12899)
!12910 = !DILocation(line: 263, column: 16, scope: !12899)
!12911 = !DILocation(line: 263, column: 28, scope: !12899)
!12912 = !DILocation(line: 264, column: 3, scope: !12899)
!12913 = !DILocation(line: 246, column: 60, scope: !2050)
!12914 = distinct !{!12914, !12889, !12915}
!12915 = !DILocation(line: 265, column: 2, scope: !2051)
!12916 = !DILocation(line: 266, column: 1, scope: !2033)
!12917 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6320, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12918)
!12918 = !{!12919, !12920}
!12919 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12917, file: !533, line: 1814, type: !769)
!12920 = !DILocalVariable(name: "priority", arg: 2, scope: !12917, file: !533, line: 1814, type: !118)
!12921 = !DILocation(line: 0, scope: !12917)
!12922 = !DILocation(line: 1822, column: 48, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12924, file: !533, line: 1821, column: 3)
!12924 = distinct !DILexicalBlock(scope: !12917, file: !533, line: 1816, column: 7)
!12925 = !DILocation(line: 1822, column: 32, scope: !12923)
!12926 = !DILocation(line: 1822, column: 40, scope: !12923)
!12927 = !DILocation(line: 1822, column: 5, scope: !12923)
!12928 = !DILocation(line: 1822, column: 46, scope: !12923)
!12929 = !DILocation(line: 1824, column: 1, scope: !12917)
!12930 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12848, file: !12848, line: 32, type: !2936, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!12931 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12932, file: !12932, line: 215, type: !12829, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12933)
!12932 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12933 = !{!12934}
!12934 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12931, file: !12932, line: 215, type: !1891)
!12935 = !DILocation(line: 0, scope: !12931)
!12936 = !DILocation(line: 217, column: 21, scope: !12931)
!12937 = !DILocation(line: 217, column: 34, scope: !12931)
!12938 = !DILocation(line: 221, column: 21, scope: !12931)
!12939 = !DILocation(line: 221, column: 34, scope: !12931)
!12940 = !DILocation(line: 223, column: 27, scope: !12931)
!12941 = !DILocation(line: 223, column: 33, scope: !12931)
!12942 = !DILocation(line: 224, column: 27, scope: !12931)
!12943 = !DILocation(line: 224, column: 32, scope: !12931)
!12944 = !DILocation(line: 232, column: 16, scope: !12931)
!12945 = !DILocation(line: 232, column: 30, scope: !12931)
!12946 = !DILocation(line: 239, column: 24, scope: !12931)
!12947 = !DILocation(line: 240, column: 1, scope: !12931)
!12948 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1799, file: !1799, line: 399, type: !12949, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12951)
!12949 = !DISubroutineType(types: !12950)
!12950 = !{!106}
!12951 = !{!12952}
!12952 = !DILocalVariable(name: "stack_ptr", scope: !12948, file: !1799, line: 401, type: !106)
!12953 = !DILocation(line: 404, column: 2, scope: !12948)
!12954 = !DILocation(line: 416, column: 24, scope: !12948)
!12955 = !DILocation(line: 418, column: 14, scope: !12948)
!12956 = !DILocation(line: 0, scope: !12948)
!12957 = !DILocation(line: 423, column: 2, scope: !12948)
!12958 = !DILocation(line: 424, column: 2, scope: !12948)
!12959 = !DILocation(line: 426, column: 2, scope: !12948)
!12960 = !DILocation(line: 428, column: 2, scope: !12948)
!12961 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1799, file: !1799, line: 432, type: !12962, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12964)
!12962 = !DISubroutineType(types: !12963)
!12963 = !{null, !106}
!12964 = !{!12965}
!12965 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12961, file: !1799, line: 432, type: !106)
!12966 = !DILocation(line: 0, scope: !12961)
!12967 = !DILocation(line: 435, column: 2, scope: !12961)
!12968 = !DILocation(line: 445, column: 2, scope: !12961)
!12969 = distinct !DISubprogram(name: "bg_thread_main", scope: !1799, file: !1799, line: 277, type: !111, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !12970)
!12970 = !{!12971, !12972, !12973}
!12971 = !DILocalVariable(name: "unused1", arg: 1, scope: !12969, file: !1799, line: 277, type: !113)
!12972 = !DILocalVariable(name: "unused2", arg: 2, scope: !12969, file: !1799, line: 277, type: !113)
!12973 = !DILocalVariable(name: "unused3", arg: 3, scope: !12969, file: !1799, line: 277, type: !113)
!12974 = !DILocation(line: 0, scope: !12969)
!12975 = !DILocation(line: 291, column: 20, scope: !12969)
!12976 = !DILocation(line: 293, column: 2, scope: !12969)
!12977 = !DILocation(line: 297, column: 2, scope: !12969)
!12978 = !DILocation(line: 305, column: 2, scope: !12969)
!12979 = !DILocation(line: 307, column: 2, scope: !12969)
!12980 = !DILocation(line: 330, column: 8, scope: !12969)
!12981 = !DILocation(line: 333, column: 34, scope: !12969)
!12982 = !DILocation(line: 339, column: 1, scope: !12969)
!12983 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2064, file: !2064, line: 45, type: !12984, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !12992)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{null, !12986, !113}
!12986 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !245, line: 103, baseType: !12987)
!12987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12988, size: 32)
!12988 = !DISubroutineType(types: !12989)
!12989 = !{null, !12990, !113}
!12990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12991, size: 32)
!12991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2069)
!12992 = !{!12993, !12994}
!12993 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12983, file: !2064, line: 45, type: !12986)
!12994 = !DILocalVariable(name: "user_data", arg: 2, scope: !12983, file: !2064, line: 45, type: !113)
!12995 = !DILocation(line: 0, scope: !12983)
!12996 = !DILocation(line: 71, column: 1, scope: !12983)
!12997 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2064, file: !2064, line: 73, type: !12984, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !12998)
!12998 = !{!12999, !13000}
!12999 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12997, file: !2064, line: 73, type: !12986)
!13000 = !DILocalVariable(name: "user_data", arg: 2, scope: !12997, file: !2064, line: 73, type: !113)
!13001 = !DILocation(line: 0, scope: !12997)
!13002 = !DILocation(line: 95, column: 1, scope: !12997)
!13003 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2064, file: !2064, line: 97, type: !7331, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !2000)
!13004 = !DILocation(line: 1031, column: 3, scope: !13005, inlinedAt: !13008)
!13005 = distinct !DISubprogram(name: "__get_IPSR", scope: !6280, file: !6280, line: 1027, type: !3174, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13006)
!13006 = !{!13007}
!13007 = !DILocalVariable(name: "result", scope: !13005, file: !6280, line: 1029, type: !118)
!13008 = distinct !DILocation(line: 48, column: 10, scope: !13009, inlinedAt: !13010)
!13009 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7330, file: !7330, line: 46, type: !7331, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !2000)
!13010 = distinct !DILocation(line: 99, column: 9, scope: !13003)
!13011 = !{i64 2856498}
!13012 = !DILocation(line: 0, scope: !13005, inlinedAt: !13008)
!13013 = !DILocation(line: 48, column: 9, scope: !13009, inlinedAt: !13010)
!13014 = !DILocation(line: 99, column: 2, scope: !13003)
!13015 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2064, file: !2064, line: 106, type: !2936, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !2000)
!13016 = !DILocation(line: 108, column: 2, scope: !13015)
!13017 = !DILocation(line: 108, column: 17, scope: !13015)
!13018 = !DILocation(line: 108, column: 30, scope: !13015)
!13019 = !DILocation(line: 109, column: 1, scope: !13015)
!13020 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2064, file: !2064, line: 116, type: !2936, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !2000)
!13021 = !DILocation(line: 118, column: 2, scope: !13020)
!13022 = !DILocation(line: 118, column: 17, scope: !13020)
!13023 = !DILocation(line: 118, column: 30, scope: !13020)
!13024 = !DILocation(line: 119, column: 1, scope: !13020)
!13025 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2064, file: !2064, line: 126, type: !7331, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !2000)
!13026 = !DILocation(line: 128, column: 10, scope: !13025)
!13027 = !DILocation(line: 128, column: 25, scope: !13025)
!13028 = !DILocation(line: 128, column: 38, scope: !13025)
!13029 = !DILocation(line: 128, column: 53, scope: !13025)
!13030 = !DILocation(line: 128, column: 2, scope: !13025)
!13031 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2064, file: !2064, line: 187, type: !13032, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13034)
!13032 = !DISubroutineType(types: !13033)
!13033 = !{!119, !2068, !278}
!13034 = !{!13035, !13036}
!13035 = !DILocalVariable(name: "thread", arg: 1, scope: !13031, file: !2064, line: 187, type: !2068)
!13036 = !DILocalVariable(name: "value", arg: 2, scope: !13031, file: !2064, line: 187, type: !278)
!13037 = !DILocation(line: 0, scope: !13031)
!13038 = !DILocation(line: 190, column: 13, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13031, file: !2064, line: 190, column: 6)
!13040 = !DILocation(line: 190, column: 6, scope: !13031)
!13041 = !DILocation(line: 194, column: 10, scope: !13031)
!13042 = !DILocation(line: 194, column: 2, scope: !13031)
!13043 = !DILocation(line: 195, column: 2, scope: !13031)
!13044 = !DILocation(line: 195, column: 47, scope: !13031)
!13045 = !DILocation(line: 199, column: 2, scope: !13031)
!13046 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2064, file: !2064, line: 238, type: !13047, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13049)
!13047 = !DISubroutineType(types: !13048)
!13048 = !{!278, !2068}
!13049 = !{!13050}
!13050 = !DILocalVariable(name: "thread", arg: 1, scope: !13046, file: !2064, line: 238, type: !2068)
!13051 = !DILocation(line: 0, scope: !13046)
!13052 = !DILocation(line: 241, column: 23, scope: !13046)
!13053 = !DILocation(line: 241, column: 2, scope: !13046)
!13054 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2064, file: !2064, line: 248, type: !13055, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13057)
!13055 = !DISubroutineType(types: !13056)
!13056 = !{!119, !2067, !106, !239}
!13057 = !{!13058, !13059, !13060}
!13058 = !DILocalVariable(name: "thread", arg: 1, scope: !13054, file: !2064, line: 248, type: !2067)
!13059 = !DILocalVariable(name: "buf", arg: 2, scope: !13054, file: !2064, line: 248, type: !106)
!13060 = !DILocalVariable(name: "size", arg: 3, scope: !13054, file: !2064, line: 248, type: !239)
!13061 = !DILocation(line: 0, scope: !13054)
!13062 = !DILocation(line: 251, column: 15, scope: !13054)
!13063 = !DILocation(line: 251, column: 2, scope: !13054)
!13064 = !DILocation(line: 252, column: 2, scope: !13054)
!13065 = !DILocation(line: 0, scope: !2063)
!13066 = !DILocation(line: 281, column: 11, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !2063, file: !2064, line: 281, column: 6)
!13068 = !DILocation(line: 281, column: 20, scope: !13067)
!13069 = !DILocation(line: 275, column: 45, scope: !2063)
!13070 = !DILocation(line: 285, column: 10, scope: !2063)
!13071 = !DILocation(line: 0, scope: !2187)
!13072 = !DILocation(line: 293, column: 39, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !2187, file: !2064, line: 293, column: 2)
!13074 = !DILocation(line: 293, column: 2, scope: !2187)
!13075 = !DILocation(line: 273, column: 14, scope: !2063)
!13076 = !DILocation(line: 309, column: 2, scope: !2063)
!13077 = !DILocation(line: 309, column: 11, scope: !2063)
!13078 = !DILocation(line: 311, column: 2, scope: !2063)
!13079 = !DILocation(line: 293, column: 26, scope: !13073)
!13080 = !DILocation(line: 294, column: 9, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13073, file: !2064, line: 293, column: 54)
!13082 = !DILocation(line: 295, column: 21, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13081, file: !2064, line: 295, column: 7)
!13084 = !DILocation(line: 295, column: 28, scope: !13083)
!13085 = !DILocation(line: 295, column: 7, scope: !13081)
!13086 = !DILocation(line: 299, column: 25, scope: !13081)
!13087 = !DILocation(line: 299, column: 41, scope: !13081)
!13088 = !DILocation(line: 300, column: 7, scope: !13081)
!13089 = !DILocation(line: 300, column: 26, scope: !13081)
!13090 = !DILocation(line: 299, column: 10, scope: !13081)
!13091 = !DILocation(line: 299, column: 7, scope: !13081)
!13092 = !DILocation(line: 302, column: 16, scope: !13081)
!13093 = !DILocation(line: 304, column: 20, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13081, file: !2064, line: 304, column: 7)
!13095 = !DILocation(line: 304, column: 7, scope: !13081)
!13096 = !DILocation(line: 305, column: 26, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13094, file: !2064, line: 304, column: 26)
!13098 = !DILocation(line: 305, column: 42, scope: !13097)
!13099 = !DILocation(line: 305, column: 11, scope: !13097)
!13100 = !DILocation(line: 305, column: 8, scope: !13097)
!13101 = !DILocation(line: 306, column: 3, scope: !13097)
!13102 = !DILocation(line: 293, column: 50, scope: !13073)
!13103 = !DILocation(line: 312, column: 1, scope: !2063)
!13104 = distinct !DISubprogram(name: "copy_bytes", scope: !2064, file: !2064, line: 261, type: !13105, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13107)
!13105 = !DISubroutineType(types: !13106)
!13106 = !{!239, !106, !239, !278, !239}
!13107 = !{!13108, !13109, !13110, !13111, !13112}
!13108 = !DILocalVariable(name: "dest", arg: 1, scope: !13104, file: !2064, line: 261, type: !106)
!13109 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13104, file: !2064, line: 261, type: !239)
!13110 = !DILocalVariable(name: "src", arg: 3, scope: !13104, file: !2064, line: 261, type: !278)
!13111 = !DILocalVariable(name: "src_size", arg: 4, scope: !13104, file: !2064, line: 261, type: !239)
!13112 = !DILocalVariable(name: "bytes_to_copy", scope: !13104, file: !2064, line: 263, type: !239)
!13113 = !DILocation(line: 0, scope: !13104)
!13114 = !DILocation(line: 265, column: 18, scope: !13104)
!13115 = !DILocation(line: 266, column: 2, scope: !13104)
!13116 = !DILocation(line: 268, column: 2, scope: !13104)
!13117 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2064, file: !2064, line: 383, type: !13118, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13120)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{null, !2068}
!13120 = !{!13121}
!13121 = !DILocalVariable(name: "thread", arg: 1, scope: !13117, file: !2064, line: 383, type: !2068)
!13122 = !DILocation(line: 0, scope: !13117)
!13123 = !DILocation(line: 387, column: 2, scope: !13117)
!13124 = !DILocation(line: 388, column: 1, scope: !13117)
!13125 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2064, file: !2064, line: 528, type: !13126, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13133)
!13126 = !DISubroutineType(types: !13127)
!13127 = !{!106, !2068, !13128, !239, !108, !113, !113, !113, !119, !118, !278}
!13128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13129, size: 32)
!13129 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !13130)
!13130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !13131)
!13131 = !{!13132}
!13132 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13130, file: !128, line: 48, baseType: !107, size: 8)
!13133 = !{!13134, !13135, !13136, !13137, !13138, !13139, !13140, !13141, !13142, !13143, !13144}
!13134 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13125, file: !2064, line: 528, type: !2068)
!13135 = !DILocalVariable(name: "stack", arg: 2, scope: !13125, file: !2064, line: 529, type: !13128)
!13136 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13125, file: !2064, line: 529, type: !239)
!13137 = !DILocalVariable(name: "entry", arg: 4, scope: !13125, file: !2064, line: 530, type: !108)
!13138 = !DILocalVariable(name: "p1", arg: 5, scope: !13125, file: !2064, line: 531, type: !113)
!13139 = !DILocalVariable(name: "p2", arg: 6, scope: !13125, file: !2064, line: 531, type: !113)
!13140 = !DILocalVariable(name: "p3", arg: 7, scope: !13125, file: !2064, line: 531, type: !113)
!13141 = !DILocalVariable(name: "prio", arg: 8, scope: !13125, file: !2064, line: 532, type: !119)
!13142 = !DILocalVariable(name: "options", arg: 9, scope: !13125, file: !2064, line: 532, type: !118)
!13143 = !DILocalVariable(name: "name", arg: 10, scope: !13125, file: !2064, line: 532, type: !278)
!13144 = !DILocalVariable(name: "stack_ptr", scope: !13125, file: !2064, line: 534, type: !106)
!13145 = !DILocation(line: 0, scope: !13125)
!13146 = !DILocation(line: 536, column: 2, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !2064, line: 536, column: 2)
!13148 = distinct !DILexicalBlock(scope: !13149, file: !2064, line: 536, column: 2)
!13149 = distinct !DILexicalBlock(scope: !13125, file: !2064, line: 536, column: 2)
!13150 = !DILocation(line: 536, column: 2, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13147, file: !2064, line: 536, column: 2)
!13152 = !DILocation(line: 550, column: 28, scope: !13125)
!13153 = !DILocation(line: 550, column: 2, scope: !13125)
!13154 = !DILocation(line: 553, column: 34, scope: !13125)
!13155 = !DILocation(line: 553, column: 2, scope: !13125)
!13156 = !DILocation(line: 554, column: 14, scope: !13125)
!13157 = !DILocation(line: 564, column: 2, scope: !13125)
!13158 = !DILocation(line: 567, column: 14, scope: !13125)
!13159 = !DILocation(line: 567, column: 24, scope: !13125)
!13160 = !DILocation(line: 594, column: 11, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13125, file: !2064, line: 594, column: 6)
!13162 = !DILocation(line: 0, scope: !13161)
!13163 = !DILocation(line: 594, column: 6, scope: !13125)
!13164 = !DILocation(line: 595, column: 3, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13161, file: !2064, line: 594, column: 20)
!13166 = !DILocation(line: 598, column: 3, scope: !13165)
!13167 = !DILocation(line: 598, column: 52, scope: !13165)
!13168 = !DILocation(line: 599, column: 2, scope: !13165)
!13169 = !DILocation(line: 600, column: 23, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13161, file: !2064, line: 599, column: 9)
!13171 = !DILocation(line: 612, column: 7, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13125, file: !2064, line: 612, column: 6)
!13173 = !DILocation(line: 612, column: 6, scope: !13125)
!13174 = !DILocation(line: 627, column: 40, scope: !13125)
!13175 = !DILocation(line: 637, column: 2, scope: !13125)
!13176 = !DILocation(line: 613, column: 15, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13172, file: !2064, line: 612, column: 17)
!13178 = !DILocation(line: 613, column: 29, scope: !13177)
!13179 = !DILocation(line: 638, column: 1, scope: !13125)
!13180 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12828, file: !12828, line: 78, type: !13181, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13183)
!13181 = !DISubroutineType(types: !13182)
!13182 = !{!345, !113}
!13183 = !{!13184}
!13184 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13180, file: !12828, line: 78, type: !113)
!13185 = !DILocation(line: 0, scope: !13180)
!13186 = !DILocation(line: 80, column: 21, scope: !13180)
!13187 = !DILocation(line: 80, column: 2, scope: !13180)
!13188 = distinct !DISubprogram(name: "z_waitq_init", scope: !13189, file: !13189, line: 47, type: !13190, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13192)
!13189 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13190 = !DISubroutineType(types: !13191)
!13191 = !{null, !2099}
!13192 = !{!13193}
!13193 = !DILocalVariable(name: "w", arg: 1, scope: !13188, file: !13189, line: 47, type: !2099)
!13194 = !DILocation(line: 0, scope: !13188)
!13195 = !DILocation(line: 49, column: 21, scope: !13188)
!13196 = !DILocation(line: 49, column: 2, scope: !13188)
!13197 = !DILocation(line: 50, column: 1, scope: !13188)
!13198 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2064, file: !2064, line: 791, type: !13199, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13202)
!13199 = !DISubroutineType(types: !13200)
!13200 = !{null, !13201, !119, !118, !32}
!13201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!13202 = !{!13203, !13204, !13205, !13206}
!13203 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13198, file: !2064, line: 791, type: !13201)
!13204 = !DILocalVariable(name: "priority", arg: 2, scope: !13198, file: !2064, line: 791, type: !119)
!13205 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13198, file: !2064, line: 792, type: !118)
!13206 = !DILocalVariable(name: "options", arg: 4, scope: !13198, file: !2064, line: 792, type: !32)
!13207 = !DILocation(line: 0, scope: !13198)
!13208 = !DILocation(line: 795, column: 15, scope: !13198)
!13209 = !DILocation(line: 795, column: 25, scope: !13198)
!13210 = !DILocation(line: 796, column: 30, scope: !13198)
!13211 = !DILocation(line: 796, column: 15, scope: !13198)
!13212 = !DILocation(line: 796, column: 28, scope: !13198)
!13213 = !DILocation(line: 797, column: 30, scope: !13198)
!13214 = !DILocation(line: 797, column: 15, scope: !13198)
!13215 = !DILocation(line: 797, column: 28, scope: !13198)
!13216 = !DILocation(line: 799, column: 22, scope: !13198)
!13217 = !DILocation(line: 799, column: 15, scope: !13198)
!13218 = !DILocation(line: 799, column: 20, scope: !13198)
!13219 = !DILocation(line: 801, column: 15, scope: !13198)
!13220 = !DILocation(line: 801, column: 28, scope: !13198)
!13221 = !DILocation(line: 814, column: 2, scope: !13198)
!13222 = !DILocation(line: 815, column: 1, scope: !13198)
!13223 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2064, file: !2064, line: 449, type: !13224, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13226)
!13224 = !DISubroutineType(types: !13225)
!13225 = !{!106, !2068, !13128, !239}
!13226 = !{!13227, !13228, !13229, !13230, !13231, !13232, !13233, !13234}
!13227 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13223, file: !2064, line: 449, type: !2068)
!13228 = !DILocalVariable(name: "stack", arg: 2, scope: !13223, file: !2064, line: 450, type: !13128)
!13229 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13223, file: !2064, line: 450, type: !239)
!13230 = !DILocalVariable(name: "stack_obj_size", scope: !13223, file: !2064, line: 452, type: !239)
!13231 = !DILocalVariable(name: "stack_buf_size", scope: !13223, file: !2064, line: 452, type: !239)
!13232 = !DILocalVariable(name: "stack_ptr", scope: !13223, file: !2064, line: 453, type: !106)
!13233 = !DILocalVariable(name: "stack_buf_start", scope: !13223, file: !2064, line: 453, type: !106)
!13234 = !DILocalVariable(name: "delta", scope: !13223, file: !2064, line: 454, type: !239)
!13235 = !DILocation(line: 0, scope: !13223)
!13236 = !DILocation(line: 465, column: 20, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13223, file: !2064, line: 463, column: 2)
!13238 = !DILocation(line: 466, column: 21, scope: !13237)
!13239 = !DILocation(line: 473, column: 28, scope: !13223)
!13240 = !DILocation(line: 514, column: 33, scope: !13223)
!13241 = !DILocation(line: 514, column: 25, scope: !13223)
!13242 = !DILocation(line: 514, column: 31, scope: !13223)
!13243 = !DILocation(line: 515, column: 25, scope: !13223)
!13244 = !DILocation(line: 515, column: 30, scope: !13223)
!13245 = !DILocation(line: 516, column: 25, scope: !13223)
!13246 = !DILocation(line: 516, column: 31, scope: !13223)
!13247 = !DILocation(line: 520, column: 2, scope: !13223)
!13248 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !13249, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13251)
!13249 = !DISubroutineType(types: !13250)
!13250 = !{!106, !13128}
!13251 = !{!13252}
!13252 = !DILocalVariable(name: "sym", arg: 1, scope: !13248, file: !128, line: 331, type: !13128)
!13253 = !DILocation(line: 0, scope: !13248)
!13254 = !DILocation(line: 333, column: 21, scope: !13248)
!13255 = !DILocation(line: 333, column: 2, scope: !13248)
!13256 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13257, file: !13257, line: 40, type: !13258, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13260)
!13257 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13258 = !DISubroutineType(types: !13259)
!13259 = !{null, !13201}
!13260 = !{!13261}
!13261 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13256, file: !13257, line: 40, type: !13201)
!13262 = !DILocation(line: 0, scope: !13256)
!13263 = !DILocation(line: 42, column: 31, scope: !13256)
!13264 = !DILocation(line: 42, column: 2, scope: !13256)
!13265 = !DILocation(line: 43, column: 1, scope: !13256)
!13266 = distinct !DISubprogram(name: "z_init_timeout", scope: !13257, file: !13257, line: 25, type: !2125, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13267)
!13267 = !{!13268}
!13268 = !DILocalVariable(name: "to", arg: 1, scope: !13266, file: !13257, line: 25, type: !2127)
!13269 = !DILocation(line: 0, scope: !13266)
!13270 = !DILocation(line: 27, column: 22, scope: !13266)
!13271 = !DILocation(line: 27, column: 2, scope: !13266)
!13272 = !DILocation(line: 28, column: 1, scope: !13266)
!13273 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !13274, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{null, !2174}
!13276 = !{!13277}
!13277 = !DILocalVariable(name: "node", arg: 1, scope: !13273, file: !153, line: 211, type: !2174)
!13278 = !DILocation(line: 0, scope: !13273)
!13279 = !DILocation(line: 213, column: 8, scope: !13273)
!13280 = !DILocation(line: 213, column: 13, scope: !13273)
!13281 = !DILocation(line: 214, column: 8, scope: !13273)
!13282 = !DILocation(line: 214, column: 13, scope: !13273)
!13283 = !DILocation(line: 215, column: 1, scope: !13273)
!13284 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !13285, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13288)
!13285 = !DISubroutineType(types: !13286)
!13286 = !{null, !13287}
!13287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!13288 = !{!13289}
!13289 = !DILocalVariable(name: "list", arg: 1, scope: !13284, file: !153, line: 197, type: !13287)
!13290 = !DILocation(line: 0, scope: !13284)
!13291 = !DILocation(line: 199, column: 8, scope: !13284)
!13292 = !DILocation(line: 199, column: 13, scope: !13284)
!13293 = !DILocation(line: 200, column: 8, scope: !13284)
!13294 = !DILocation(line: 200, column: 13, scope: !13284)
!13295 = !DILocation(line: 201, column: 1, scope: !13284)
!13296 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2064, file: !2064, line: 641, type: !13297, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13303)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{!2067, !2068, !13128, !239, !108, !113, !113, !113, !119, !118, !13299}
!13299 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !13300)
!13300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !13301)
!13301 = !{!13302}
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13300, file: !115, line: 66, baseType: !114, size: 64)
!13303 = !{!13304, !13305, !13306, !13307, !13308, !13309, !13310, !13311, !13312, !13313}
!13304 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13296, file: !2064, line: 641, type: !2068)
!13305 = !DILocalVariable(name: "stack", arg: 2, scope: !13296, file: !2064, line: 642, type: !13128)
!13306 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13296, file: !2064, line: 643, type: !239)
!13307 = !DILocalVariable(name: "entry", arg: 4, scope: !13296, file: !2064, line: 643, type: !108)
!13308 = !DILocalVariable(name: "p1", arg: 5, scope: !13296, file: !2064, line: 644, type: !113)
!13309 = !DILocalVariable(name: "p2", arg: 6, scope: !13296, file: !2064, line: 644, type: !113)
!13310 = !DILocalVariable(name: "p3", arg: 7, scope: !13296, file: !2064, line: 644, type: !113)
!13311 = !DILocalVariable(name: "prio", arg: 8, scope: !13296, file: !2064, line: 645, type: !119)
!13312 = !DILocalVariable(name: "options", arg: 9, scope: !13296, file: !2064, line: 645, type: !118)
!13313 = !DILocalVariable(name: "delay", arg: 10, scope: !13296, file: !2064, line: 645, type: !13299)
!13314 = !DILocation(line: 0, scope: !13296)
!13315 = !DILocation(line: 1031, column: 3, scope: !13005, inlinedAt: !13316)
!13316 = distinct !DILocation(line: 48, column: 10, scope: !13009, inlinedAt: !13317)
!13317 = distinct !DILocation(line: 647, column: 2, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13319, file: !2064, line: 647, column: 2)
!13319 = distinct !DILexicalBlock(scope: !13296, file: !2064, line: 647, column: 2)
!13320 = !DILocation(line: 0, scope: !13005, inlinedAt: !13316)
!13321 = !DILocation(line: 48, column: 9, scope: !13009, inlinedAt: !13317)
!13322 = !DILocation(line: 647, column: 2, scope: !13319)
!13323 = !DILocation(line: 647, column: 2, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13318, file: !2064, line: 647, column: 2)
!13325 = !DILocation(line: 649, column: 2, scope: !13296)
!13326 = !DILocation(line: 652, column: 7, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13296, file: !2064, line: 652, column: 6)
!13328 = !DILocation(line: 652, column: 6, scope: !13296)
!13329 = !DILocation(line: 653, column: 3, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13327, file: !2064, line: 652, column: 39)
!13331 = !DILocation(line: 654, column: 2, scope: !13330)
!13332 = !DILocation(line: 656, column: 2, scope: !13296)
!13333 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2064, file: !2064, line: 401, type: !13334, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13336)
!13334 = !DISubroutineType(types: !13335)
!13335 = !{null, !2068, !13299}
!13336 = !{!13337, !13338}
!13337 = !DILocalVariable(name: "thread", arg: 1, scope: !13333, file: !2064, line: 401, type: !2068)
!13338 = !DILocalVariable(name: "delay", arg: 2, scope: !13333, file: !2064, line: 401, type: !13299)
!13339 = !DILocation(line: 0, scope: !13333)
!13340 = !DILocation(line: 404, column: 6, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13333, file: !2064, line: 404, column: 6)
!13342 = !DILocation(line: 404, column: 6, scope: !13333)
!13343 = !DILocation(line: 405, column: 3, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13341, file: !2064, line: 404, column: 38)
!13345 = !DILocation(line: 406, column: 2, scope: !13344)
!13346 = !DILocation(line: 407, column: 3, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13341, file: !2064, line: 406, column: 9)
!13348 = !DILocation(line: 413, column: 1, scope: !13333)
!13349 = distinct !DISubprogram(name: "k_thread_start", scope: !3187, file: !3187, line: 205, type: !13350, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13352)
!13350 = !DISubroutineType(types: !13351)
!13351 = !{null, !2067}
!13352 = !{!13353}
!13353 = !DILocalVariable(name: "thread", arg: 1, scope: !13349, file: !3187, line: 205, type: !2067)
!13354 = !DILocation(line: 0, scope: !13349)
!13355 = !DILocation(line: 214, column: 2, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13349, file: !3187, line: 214, column: 2)
!13357 = !{i64 2154098460}
!13358 = !DILocation(line: 215, column: 2, scope: !13349)
!13359 = !DILocation(line: 216, column: 1, scope: !13349)
!13360 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13257, file: !13257, line: 47, type: !13334, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13361)
!13361 = !{!13362, !13363}
!13362 = !DILocalVariable(name: "thread", arg: 1, scope: !13360, file: !13257, line: 47, type: !2068)
!13363 = !DILocalVariable(name: "ticks", arg: 2, scope: !13360, file: !13257, line: 47, type: !13299)
!13364 = !DILocation(line: 0, scope: !13360)
!13365 = !DILocation(line: 49, column: 30, scope: !13360)
!13366 = !DILocation(line: 49, column: 2, scope: !13360)
!13367 = !DILocation(line: 50, column: 1, scope: !13360)
!13368 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2064, file: !2064, line: 748, type: !2936, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13369)
!13369 = !{!13370, !13388}
!13370 = !DILocalVariable(name: "thread_data", scope: !13371, file: !2064, line: 750, type: !13372)
!13371 = distinct !DILexicalBlock(scope: !13368, file: !2064, line: 750, column: 2)
!13372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13373, size: 32)
!13373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !245, line: 620, size: 384, elements: !13374)
!13374 = !{!13375, !13376, !13377, !13378, !13379, !13380, !13381, !13382, !13383, !13384, !13385, !13387}
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13373, file: !245, line: 621, baseType: !2068, size: 32)
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13373, file: !245, line: 622, baseType: !13128, size: 32, offset: 32)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13373, file: !245, line: 623, baseType: !32, size: 32, offset: 64)
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13373, file: !245, line: 624, baseType: !108, size: 32, offset: 96)
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13373, file: !245, line: 625, baseType: !113, size: 32, offset: 128)
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13373, file: !245, line: 626, baseType: !113, size: 32, offset: 160)
!13381 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13373, file: !245, line: 627, baseType: !113, size: 32, offset: 192)
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13373, file: !245, line: 628, baseType: !119, size: 32, offset: 224)
!13383 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13373, file: !245, line: 629, baseType: !118, size: 32, offset: 256)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13373, file: !245, line: 630, baseType: !743, size: 32, offset: 288)
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13373, file: !245, line: 631, baseType: !13386, size: 32, offset: 320)
!13386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 32)
!13387 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13373, file: !245, line: 632, baseType: !278, size: 32, offset: 352)
!13388 = !DILocalVariable(name: "thread_data", scope: !13389, file: !2064, line: 781, type: !13372)
!13389 = distinct !DILexicalBlock(scope: !13368, file: !2064, line: 781, column: 2)
!13390 = !DILocation(line: 0, scope: !13371)
!13391 = !DILocation(line: 750, column: 2, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13393, file: !2064, line: 750, column: 2)
!13393 = distinct !DILexicalBlock(scope: !13394, file: !2064, line: 750, column: 2)
!13394 = distinct !DILexicalBlock(scope: !13371, file: !2064, line: 750, column: 2)
!13395 = !DILocation(line: 750, column: 2, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13397, file: !2064, line: 750, column: 2)
!13397 = distinct !DILexicalBlock(scope: !13392, file: !2064, line: 750, column: 2)
!13398 = !DILocation(line: 750, column: 2, scope: !13393)
!13399 = !DILocation(line: 750, column: 2, scope: !13371)
!13400 = !DILocation(line: 780, column: 2, scope: !13368)
!13401 = !DILocation(line: 0, scope: !13389)
!13402 = !DILocation(line: 781, column: 2, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !2064, line: 781, column: 2)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !2064, line: 781, column: 2)
!13405 = distinct !DILexicalBlock(scope: !13389, file: !2064, line: 781, column: 2)
!13406 = !DILocation(line: 752, column: 17, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13394, file: !2064, line: 750, column: 38)
!13408 = !DILocation(line: 753, column: 17, scope: !13407)
!13409 = !DILocation(line: 754, column: 17, scope: !13407)
!13410 = !DILocation(line: 755, column: 17, scope: !13407)
!13411 = !DILocation(line: 756, column: 17, scope: !13407)
!13412 = !DILocation(line: 757, column: 17, scope: !13407)
!13413 = !DILocation(line: 758, column: 17, scope: !13407)
!13414 = !DILocation(line: 759, column: 17, scope: !13407)
!13415 = !DILocation(line: 760, column: 17, scope: !13407)
!13416 = !DILocation(line: 761, column: 17, scope: !13407)
!13417 = !DILocation(line: 751, column: 3, scope: !13407)
!13418 = !DILocation(line: 763, column: 16, scope: !13407)
!13419 = !DILocation(line: 763, column: 29, scope: !13407)
!13420 = !DILocation(line: 763, column: 39, scope: !13407)
!13421 = !DILocation(line: 750, column: 2, scope: !13394)
!13422 = !DILocation(line: 750, column: 2, scope: !13397)
!13423 = distinct !{!13423, !13399, !13424}
!13424 = !DILocation(line: 764, column: 2, scope: !13371)
!13425 = !DILocation(line: 781, column: 2, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !2064, line: 781, column: 2)
!13427 = distinct !DILexicalBlock(scope: !13403, file: !2064, line: 781, column: 2)
!13428 = !DILocation(line: 781, column: 2, scope: !13404)
!13429 = !DILocation(line: 781, column: 2, scope: !13389)
!13430 = !DILocation(line: 787, column: 2, scope: !13368)
!13431 = !DILocation(line: 788, column: 1, scope: !13368)
!13432 = !DILocation(line: 782, column: 20, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !2064, line: 782, column: 7)
!13434 = distinct !DILexicalBlock(scope: !13405, file: !2064, line: 781, column: 38)
!13435 = !DILocation(line: 782, column: 31, scope: !13433)
!13436 = !DILocation(line: 782, column: 7, scope: !13434)
!13437 = !DILocation(line: 783, column: 37, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13433, file: !2064, line: 782, column: 51)
!13439 = !DILocation(line: 784, column: 10, scope: !13438)
!13440 = !DILocation(line: 783, column: 4, scope: !13438)
!13441 = !DILocation(line: 785, column: 3, scope: !13438)
!13442 = !DILocation(line: 781, column: 2, scope: !13405)
!13443 = !DILocation(line: 781, column: 2, scope: !13427)
!13444 = distinct !{!13444, !13429, !13445}
!13445 = !DILocation(line: 786, column: 2, scope: !13389)
!13446 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3179, file: !3179, line: 403, type: !3180, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13447)
!13447 = !{!13448}
!13448 = !DILocalVariable(name: "t", arg: 1, scope: !13446, file: !3179, line: 403, type: !120)
!13449 = !DILocation(line: 0, scope: !13446)
!13450 = !DILocalVariable(name: "t", arg: 1, scope: !13451, file: !3179, line: 102, type: !120)
!13451 = distinct !DISubprogram(name: "z_tmcvt", scope: !3179, file: !3179, line: 102, type: !3232, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13452)
!13452 = !{!13450, !13453, !13454, !13455, !13456, !13457, !13458, !13459, !13460, !13461, !13462}
!13453 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13451, file: !3179, line: 102, type: !118)
!13454 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13451, file: !3179, line: 103, type: !118)
!13455 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13451, file: !3179, line: 103, type: !345)
!13456 = !DILocalVariable(name: "result32", arg: 5, scope: !13451, file: !3179, line: 104, type: !345)
!13457 = !DILocalVariable(name: "round_up", arg: 6, scope: !13451, file: !3179, line: 104, type: !345)
!13458 = !DILocalVariable(name: "round_off", arg: 7, scope: !13451, file: !3179, line: 105, type: !345)
!13459 = !DILocalVariable(name: "mul_ratio", scope: !13451, file: !3179, line: 107, type: !345)
!13460 = !DILocalVariable(name: "div_ratio", scope: !13451, file: !3179, line: 109, type: !345)
!13461 = !DILocalVariable(name: "off", scope: !13451, file: !3179, line: 116, type: !120)
!13462 = !DILocalVariable(name: "rdivisor", scope: !13463, file: !3179, line: 119, type: !118)
!13463 = distinct !DILexicalBlock(scope: !13464, file: !3179, line: 118, column: 18)
!13464 = distinct !DILexicalBlock(scope: !13451, file: !3179, line: 118, column: 6)
!13465 = !DILocation(line: 0, scope: !13451, inlinedAt: !13466)
!13466 = distinct !DILocation(line: 406, column: 9, scope: !13446)
!13467 = !DILocation(line: 145, column: 13, scope: !13468, inlinedAt: !13466)
!13468 = distinct !DILexicalBlock(scope: !13469, file: !3179, line: 144, column: 10)
!13469 = distinct !DILexicalBlock(scope: !13470, file: !3179, line: 142, column: 7)
!13470 = distinct !DILexicalBlock(scope: !13471, file: !3179, line: 141, column: 24)
!13471 = distinct !DILexicalBlock(scope: !13472, file: !3179, line: 141, column: 13)
!13472 = distinct !DILexicalBlock(scope: !13451, file: !3179, line: 134, column: 6)
!13473 = !DILocation(line: 406, column: 2, scope: !13446)
!13474 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2064, file: !2064, line: 817, type: !4359, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13475)
!13475 = !{!13476, !13477, !13478, !13479}
!13476 = !DILocalVariable(name: "entry", arg: 1, scope: !13474, file: !2064, line: 817, type: !108)
!13477 = !DILocalVariable(name: "p1", arg: 2, scope: !13474, file: !2064, line: 818, type: !113)
!13478 = !DILocalVariable(name: "p2", arg: 3, scope: !13474, file: !2064, line: 818, type: !113)
!13479 = !DILocalVariable(name: "p3", arg: 4, scope: !13474, file: !2064, line: 818, type: !113)
!13480 = !DILocation(line: 0, scope: !13474)
!13481 = !DILocation(line: 822, column: 2, scope: !13474)
!13482 = !DILocation(line: 822, column: 17, scope: !13474)
!13483 = !DILocation(line: 822, column: 30, scope: !13474)
!13484 = !DILocation(line: 823, column: 2, scope: !13474)
!13485 = !DILocation(line: 845, column: 2, scope: !13474)
!13486 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2064, file: !2064, line: 853, type: !13487, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13490)
!13487 = !DISubroutineType(types: !13488)
!13488 = !{!345, !13489}
!13489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!13490 = !{!13491, !13492}
!13491 = !DILocalVariable(name: "l", arg: 1, scope: !13486, file: !2064, line: 853, type: !13489)
!13492 = !DILocalVariable(name: "thread_cpu", scope: !13486, file: !2064, line: 855, type: !22)
!13493 = !DILocation(line: 0, scope: !13486)
!13494 = !DILocation(line: 855, column: 28, scope: !13486)
!13495 = !DILocation(line: 857, column: 17, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13486, file: !2064, line: 857, column: 6)
!13497 = !DILocation(line: 857, column: 6, scope: !13486)
!13498 = !DILocation(line: 858, column: 19, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13500, file: !2064, line: 858, column: 7)
!13500 = distinct !DILexicalBlock(scope: !13496, file: !2064, line: 857, column: 24)
!13501 = !DILocation(line: 858, column: 42, scope: !13499)
!13502 = !DILocation(line: 858, column: 28, scope: !13499)
!13503 = !DILocation(line: 858, column: 25, scope: !13499)
!13504 = !DILocation(line: 858, column: 7, scope: !13500)
!13505 = !DILocation(line: 862, column: 2, scope: !13486)
!13506 = !DILocation(line: 863, column: 1, scope: !13486)
!13507 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2064, file: !2064, line: 865, type: !13487, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13508)
!13508 = !{!13509}
!13509 = !DILocalVariable(name: "l", arg: 1, scope: !13507, file: !2064, line: 865, type: !13489)
!13510 = !DILocation(line: 0, scope: !13507)
!13511 = !DILocation(line: 867, column: 9, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13507, file: !2064, line: 867, column: 6)
!13513 = !DILocation(line: 867, column: 38, scope: !13512)
!13514 = !DILocation(line: 867, column: 24, scope: !13512)
!13515 = !DILocation(line: 867, column: 54, scope: !13512)
!13516 = !DILocation(line: 867, column: 43, scope: !13512)
!13517 = !DILocation(line: 867, column: 41, scope: !13512)
!13518 = !DILocation(line: 867, column: 20, scope: !13512)
!13519 = !DILocation(line: 867, column: 6, scope: !13507)
!13520 = !DILocation(line: 870, column: 16, scope: !13507)
!13521 = !DILocation(line: 871, column: 2, scope: !13507)
!13522 = !DILocation(line: 872, column: 1, scope: !13507)
!13523 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2064, file: !2064, line: 874, type: !13524, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13526)
!13524 = !DISubroutineType(types: !13525)
!13525 = !{null, !13489}
!13526 = !{!13527}
!13527 = !DILocalVariable(name: "l", arg: 1, scope: !13523, file: !2064, line: 874, type: !13489)
!13528 = !DILocation(line: 0, scope: !13523)
!13529 = !DILocation(line: 876, column: 32, scope: !13523)
!13530 = !DILocation(line: 876, column: 18, scope: !13523)
!13531 = !DILocation(line: 876, column: 48, scope: !13523)
!13532 = !DILocation(line: 876, column: 37, scope: !13523)
!13533 = !DILocation(line: 876, column: 35, scope: !13523)
!13534 = !DILocation(line: 876, column: 5, scope: !13523)
!13535 = !DILocation(line: 876, column: 16, scope: !13523)
!13536 = !DILocation(line: 877, column: 1, scope: !13523)
!13537 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2064, file: !2064, line: 888, type: !13538, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13540)
!13538 = !DISubroutineType(types: !13539)
!13539 = !{!119, !2068}
!13540 = !{!13541}
!13541 = !DILocalVariable(name: "thread", arg: 1, scope: !13537, file: !2064, line: 888, type: !2068)
!13542 = !DILocation(line: 0, scope: !13537)
!13543 = !DILocation(line: 893, column: 2, scope: !13537)
!13544 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2064, file: !2064, line: 897, type: !13545, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13547)
!13545 = !DISubroutineType(types: !13546)
!13546 = !{!119, !2068, !32}
!13547 = !{!13548, !13549}
!13548 = !DILocalVariable(name: "thread", arg: 1, scope: !13544, file: !2064, line: 897, type: !2068)
!13549 = !DILocalVariable(name: "options", arg: 2, scope: !13544, file: !2064, line: 897, type: !32)
!13550 = !DILocation(line: 0, scope: !13544)
!13551 = !DILocation(line: 902, column: 2, scope: !13544)
!13552 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2064, file: !2064, line: 1072, type: !13553, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13558)
!13553 = !DISubroutineType(types: !13554)
!13554 = !{!119, !2067, !13555}
!13555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13556, size: 32)
!13556 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !143, line: 234, baseType: !13557)
!13557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !143, line: 192, elements: !2000)
!13558 = !{!13559, !13560}
!13559 = !DILocalVariable(name: "thread", arg: 1, scope: !13552, file: !2064, line: 1072, type: !2067)
!13560 = !DILocalVariable(name: "stats", arg: 2, scope: !13552, file: !2064, line: 1073, type: !13555)
!13561 = !DILocation(line: 0, scope: !13552)
!13562 = !DILocation(line: 1075, column: 14, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13552, file: !2064, line: 1075, column: 6)
!13564 = !DILocation(line: 1075, column: 23, scope: !13563)
!13565 = !DILocation(line: 1086, column: 1, scope: !13552)
!13566 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2064, file: !2064, line: 1088, type: !13567, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2171, retainedNodes: !13569)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!119, !13555}
!13569 = !{!13570}
!13570 = !DILocalVariable(name: "stats", arg: 1, scope: !13566, file: !2064, line: 1088, type: !13555)
!13571 = !DILocation(line: 0, scope: !13566)
!13572 = !DILocation(line: 1094, column: 12, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13566, file: !2064, line: 1094, column: 6)
!13574 = !DILocation(line: 1120, column: 1, scope: !13566)
!13575 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13576, file: !13576, line: 20, type: !2936, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !2000)
!13576 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13577 = !DILocation(line: 30, column: 2, scope: !13575)
!13578 = !DILocation(line: 31, column: 1, scope: !13575)
!13579 = distinct !DISubprogram(name: "idle", scope: !13576, file: !13576, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !13580)
!13580 = !{!13581, !13582, !13583}
!13581 = !DILocalVariable(name: "unused1", arg: 1, scope: !13579, file: !13576, line: 33, type: !113)
!13582 = !DILocalVariable(name: "unused2", arg: 2, scope: !13579, file: !13576, line: 33, type: !113)
!13583 = !DILocalVariable(name: "unused3", arg: 3, scope: !13579, file: !13576, line: 33, type: !113)
!13584 = !DILocation(line: 0, scope: !13579)
!13585 = !DILocation(line: 39, column: 2, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !13576, line: 39, column: 2)
!13587 = distinct !DILexicalBlock(scope: !13579, file: !13576, line: 39, column: 2)
!13588 = !DILocation(line: 39, column: 2, scope: !13587)
!13589 = !DILocation(line: 39, column: 2, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13586, file: !13576, line: 39, column: 2)
!13591 = !DILocation(line: 55, column: 2, scope: !13592, inlinedAt: !13596)
!13592 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5959, file: !5959, line: 42, type: !5960, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !13593)
!13593 = !{!13594, !13595}
!13594 = !DILocalVariable(name: "key", scope: !13592, file: !5959, line: 44, type: !32)
!13595 = !DILocalVariable(name: "tmp", scope: !13592, file: !5959, line: 53, type: !32)
!13596 = distinct !DILocation(line: 62, column: 10, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13579, file: !13576, line: 41, column: 15)
!13598 = !{i64 1951945}
!13599 = !DILocation(line: 0, scope: !13592, inlinedAt: !13596)
!13600 = !DILocation(line: 86, column: 3, scope: !13597)
!13601 = !DILocation(line: 41, column: 2, scope: !13579)
!13602 = distinct !{!13602, !13601, !13603}
!13603 = !DILocation(line: 105, column: 2, scope: !13579)
!13604 = distinct !DISubprogram(name: "k_cpu_idle", scope: !245, file: !245, line: 5627, type: !2936, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !2000)
!13605 = !DILocation(line: 5629, column: 2, scope: !13604)
!13606 = !DILocation(line: 5630, column: 1, scope: !13604)
!13607 = !DISubprogram(name: "arch_cpu_idle", scope: !109, file: !109, line: 167, type: !2936, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!13608 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2302, file: !2302, line: 93, type: !13609, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13611)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{!743, !2194, !2194}
!13611 = !{!13612, !13613, !13614, !13615}
!13612 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13608, file: !2302, line: 93, type: !2194)
!13613 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13608, file: !2302, line: 94, type: !2194)
!13614 = !DILocalVariable(name: "b1", scope: !13608, file: !2302, line: 97, type: !743)
!13615 = !DILocalVariable(name: "b2", scope: !13608, file: !2302, line: 98, type: !743)
!13616 = !DILocation(line: 0, scope: !13608)
!13617 = !DILocation(line: 97, column: 30, scope: !13608)
!13618 = !DILocation(line: 98, column: 30, scope: !13608)
!13619 = !DILocation(line: 100, column: 9, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13608, file: !2302, line: 100, column: 6)
!13621 = !DILocation(line: 100, column: 6, scope: !13608)
!13622 = !DILocation(line: 125, column: 1, scope: !13608)
!13623 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2302, file: !2302, line: 428, type: !13624, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13626)
!13624 = !DISubroutineType(types: !13625)
!13625 = !{null, !2194}
!13626 = !{!13627}
!13627 = !DILocalVariable(name: "curr", arg: 1, scope: !13623, file: !2302, line: 428, type: !2194)
!13628 = !DILocation(line: 0, scope: !13623)
!13629 = !DILocation(line: 434, column: 6, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13623, file: !2302, line: 434, column: 6)
!13631 = !DILocation(line: 434, column: 23, scope: !13630)
!13632 = !DILocation(line: 434, column: 6, scope: !13623)
!13633 = !DILocation(line: 435, column: 50, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13630, file: !2302, line: 434, column: 29)
!13635 = !DILocation(line: 435, column: 48, scope: !13634)
!13636 = !DILocation(line: 435, column: 29, scope: !13634)
!13637 = !DILocation(line: 436, column: 24, scope: !13634)
!13638 = !DILocation(line: 436, column: 3, scope: !13634)
!13639 = !DILocation(line: 437, column: 2, scope: !13634)
!13640 = !DILocation(line: 438, column: 1, scope: !13623)
!13641 = distinct !DISubprogram(name: "slice_time", scope: !2302, file: !2302, line: 407, type: !13642, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13644)
!13642 = !DISubroutineType(types: !13643)
!13643 = !{!119, !2194}
!13644 = !{!13645, !13646}
!13645 = !DILocalVariable(name: "curr", arg: 1, scope: !13641, file: !2302, line: 407, type: !2194)
!13646 = !DILocalVariable(name: "ret", scope: !13641, file: !2302, line: 409, type: !119)
!13647 = !DILocation(line: 0, scope: !13641)
!13648 = !DILocation(line: 409, column: 12, scope: !13641)
!13649 = !DILocation(line: 416, column: 2, scope: !13641)
!13650 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2302, file: !2302, line: 440, type: !13651, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13653)
!13651 = !DISubroutineType(types: !13652)
!13652 = !{null, !743, !119}
!13653 = !{!13654, !13655, !13656, !13662}
!13654 = !DILocalVariable(name: "slice", arg: 1, scope: !13650, file: !2302, line: 440, type: !743)
!13655 = !DILocalVariable(name: "prio", arg: 2, scope: !13650, file: !2302, line: 440, type: !119)
!13656 = !DILocalVariable(name: "__i", scope: !13657, file: !2302, line: 442, type: !13658)
!13657 = distinct !DILexicalBlock(scope: !13650, file: !2302, line: 442, column: 2)
!13658 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !13659)
!13659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !13660)
!13660 = !{!13661}
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13659, file: !259, line: 33, baseType: !119, size: 32)
!13662 = !DILocalVariable(name: "__key", scope: !13657, file: !2302, line: 442, type: !13658)
!13663 = !DILocation(line: 0, scope: !13650)
!13664 = !DILocation(line: 0, scope: !13657)
!13665 = !DILocalVariable(name: "l", arg: 1, scope: !13666, file: !259, line: 136, type: !13669)
!13666 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !13667, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13670)
!13667 = !DISubroutineType(types: !13668)
!13668 = !{!13658, !13669}
!13669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!13670 = !{!13665, !13671}
!13671 = !DILocalVariable(name: "k", scope: !13666, file: !259, line: 139, type: !13658)
!13672 = !DILocation(line: 0, scope: !13666, inlinedAt: !13673)
!13673 = distinct !DILocation(line: 442, column: 2, scope: !13657)
!13674 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !13679)
!13675 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5959, file: !5959, line: 42, type: !5960, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13676)
!13676 = !{!13677, !13678}
!13677 = !DILocalVariable(name: "key", scope: !13675, file: !5959, line: 44, type: !32)
!13678 = !DILocalVariable(name: "tmp", scope: !13675, file: !5959, line: 53, type: !32)
!13679 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !13673)
!13680 = !{i64 1995916}
!13681 = !DILocation(line: 0, scope: !13675, inlinedAt: !13679)
!13682 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !13673)
!13683 = distinct !DILexicalBlock(scope: !13684, file: !259, line: 148, column: 2)
!13684 = distinct !DILexicalBlock(scope: !13666, file: !259, line: 148, column: 2)
!13685 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !13673)
!13686 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !13673)
!13687 = distinct !DILexicalBlock(scope: !13683, file: !259, line: 148, column: 2)
!13688 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !13673)
!13689 = !DILocation(line: 443, column: 29, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13691, file: !2302, line: 442, column: 26)
!13691 = distinct !DILexicalBlock(scope: !13657, file: !2302, line: 442, column: 2)
!13692 = !DILocation(line: 444, column: 17, scope: !13690)
!13693 = !DILocation(line: 445, column: 51, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13690, file: !2302, line: 445, column: 7)
!13695 = !DILocation(line: 445, column: 7, scope: !13690)
!13696 = !DILocation(line: 0, scope: !13690)
!13697 = !DILocation(line: 451, column: 18, scope: !13690)
!13698 = !DILocation(line: 452, column: 3, scope: !13690)
!13699 = !DILocalVariable(name: "key", arg: 2, scope: !13700, file: !259, line: 190, type: !13658)
!13700 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !13701, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13703)
!13701 = !DISubroutineType(types: !13702)
!13702 = !{null, !13669, !13658}
!13703 = !{!13704, !13699}
!13704 = !DILocalVariable(name: "l", arg: 1, scope: !13700, file: !259, line: 189, type: !13669)
!13705 = !DILocation(line: 0, scope: !13700, inlinedAt: !13706)
!13706 = distinct !DILocation(line: 442, column: 2, scope: !13691)
!13707 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !13706)
!13708 = distinct !DILexicalBlock(scope: !13709, file: !259, line: 194, column: 2)
!13709 = distinct !DILexicalBlock(scope: !13700, file: !259, line: 194, column: 2)
!13710 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !13706)
!13711 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !13706)
!13712 = distinct !DILexicalBlock(scope: !13708, file: !259, line: 194, column: 2)
!13713 = !DILocalVariable(name: "key", arg: 1, scope: !13714, file: !5959, line: 84, type: !32)
!13714 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5959, file: !5959, line: 84, type: !5970, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13715)
!13715 = !{!13713}
!13716 = !DILocation(line: 0, scope: !13714, inlinedAt: !13717)
!13717 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !13706)
!13718 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !13717)
!13719 = !{i64 1996733}
!13720 = !DILocation(line: 454, column: 1, scope: !13650)
!13721 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3179, file: !3179, line: 389, type: !7565, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13722)
!13722 = !{!13723}
!13723 = !DILocalVariable(name: "t", arg: 1, scope: !13721, file: !3179, line: 389, type: !118)
!13724 = !DILocation(line: 0, scope: !13721)
!13725 = !DILocalVariable(name: "t", arg: 1, scope: !13726, file: !3179, line: 102, type: !120)
!13726 = distinct !DISubprogram(name: "z_tmcvt", scope: !3179, file: !3179, line: 102, type: !3232, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13727)
!13727 = !{!13725, !13728, !13729, !13730, !13731, !13732, !13733, !13734, !13735, !13736, !13737}
!13728 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13726, file: !3179, line: 102, type: !118)
!13729 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13726, file: !3179, line: 103, type: !118)
!13730 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13726, file: !3179, line: 103, type: !345)
!13731 = !DILocalVariable(name: "result32", arg: 5, scope: !13726, file: !3179, line: 104, type: !345)
!13732 = !DILocalVariable(name: "round_up", arg: 6, scope: !13726, file: !3179, line: 104, type: !345)
!13733 = !DILocalVariable(name: "round_off", arg: 7, scope: !13726, file: !3179, line: 105, type: !345)
!13734 = !DILocalVariable(name: "mul_ratio", scope: !13726, file: !3179, line: 107, type: !345)
!13735 = !DILocalVariable(name: "div_ratio", scope: !13726, file: !3179, line: 109, type: !345)
!13736 = !DILocalVariable(name: "off", scope: !13726, file: !3179, line: 116, type: !120)
!13737 = !DILocalVariable(name: "rdivisor", scope: !13738, file: !3179, line: 119, type: !118)
!13738 = distinct !DILexicalBlock(scope: !13739, file: !3179, line: 118, column: 18)
!13739 = distinct !DILexicalBlock(scope: !13726, file: !3179, line: 118, column: 6)
!13740 = !DILocation(line: 0, scope: !13726, inlinedAt: !13741)
!13741 = distinct !DILocation(line: 392, column: 9, scope: !13721)
!13742 = !DILocation(line: 143, column: 25, scope: !13743, inlinedAt: !13741)
!13743 = distinct !DILexicalBlock(scope: !13744, file: !3179, line: 142, column: 17)
!13744 = distinct !DILexicalBlock(scope: !13745, file: !3179, line: 142, column: 7)
!13745 = distinct !DILexicalBlock(scope: !13746, file: !3179, line: 141, column: 24)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !3179, line: 141, column: 13)
!13747 = distinct !DILexicalBlock(scope: !13726, file: !3179, line: 134, column: 6)
!13748 = !DILocation(line: 392, column: 2, scope: !13721)
!13749 = distinct !DISubprogram(name: "z_time_slice", scope: !2302, file: !2302, line: 502, type: !8364, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13750)
!13750 = !{!13751, !13752}
!13751 = !DILocalVariable(name: "ticks", arg: 1, scope: !13749, file: !2302, line: 502, type: !119)
!13752 = !DILocalVariable(name: "key", scope: !13749, file: !2302, line: 511, type: !13658)
!13753 = !DILocation(line: 0, scope: !13749)
!13754 = !DILocation(line: 0, scope: !13666, inlinedAt: !13755)
!13755 = distinct !DILocation(line: 511, column: 25, scope: !13749)
!13756 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !13757)
!13757 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !13755)
!13758 = !DILocation(line: 0, scope: !13675, inlinedAt: !13757)
!13759 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !13755)
!13760 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !13755)
!13761 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !13755)
!13762 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !13755)
!13763 = !DILocation(line: 514, column: 6, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13749, file: !2302, line: 514, column: 6)
!13765 = !DILocation(line: 514, column: 25, scope: !13764)
!13766 = !DILocation(line: 514, column: 22, scope: !13764)
!13767 = !DILocation(line: 514, column: 6, scope: !13749)
!13768 = !DILocation(line: 515, column: 3, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13764, file: !2302, line: 514, column: 35)
!13770 = !DILocation(line: 0, scope: !13700, inlinedAt: !13771)
!13771 = distinct !DILocation(line: 516, column: 3, scope: !13769)
!13772 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !13771)
!13773 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !13771)
!13774 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !13771)
!13775 = !DILocation(line: 0, scope: !13714, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !13771)
!13777 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !13776)
!13778 = !DILocation(line: 517, column: 3, scope: !13769)
!13779 = !DILocation(line: 519, column: 18, scope: !13749)
!13780 = !DILocation(line: 522, column: 6, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13749, file: !2302, line: 522, column: 6)
!13782 = !DILocation(line: 522, column: 27, scope: !13781)
!13783 = !DILocation(line: 522, column: 30, scope: !13781)
!13784 = !DILocation(line: 522, column: 6, scope: !13749)
!13785 = !DILocation(line: 523, column: 30, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13787, file: !2302, line: 523, column: 7)
!13787 = distinct !DILexicalBlock(scope: !13781, file: !2302, line: 522, column: 51)
!13788 = !DILocation(line: 523, column: 13, scope: !13786)
!13789 = !DILocation(line: 523, column: 7, scope: !13787)
!13790 = !DILocation(line: 530, column: 10, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13786, file: !2302, line: 523, column: 43)
!13792 = !DILocation(line: 531, column: 3, scope: !13791)
!13793 = !DILocation(line: 532, column: 30, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13786, file: !2302, line: 531, column: 10)
!13795 = !DILocation(line: 535, column: 29, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13781, file: !2302, line: 534, column: 9)
!13797 = !DILocation(line: 0, scope: !13700, inlinedAt: !13798)
!13798 = distinct !DILocation(line: 537, column: 2, scope: !13749)
!13799 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !13798)
!13800 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !13798)
!13801 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !13798)
!13802 = !DILocation(line: 0, scope: !13714, inlinedAt: !13803)
!13803 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !13798)
!13804 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !13803)
!13805 = !DILocation(line: 538, column: 1, scope: !13749)
!13806 = distinct !DISubprogram(name: "sliceable", scope: !2302, file: !2302, line: 468, type: !13807, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13809)
!13807 = !DISubroutineType(types: !13808)
!13808 = !{!345, !2194}
!13809 = !{!13810, !13811}
!13810 = !DILocalVariable(name: "thread", arg: 1, scope: !13806, file: !2302, line: 468, type: !2194)
!13811 = !DILocalVariable(name: "ret", scope: !13806, file: !2302, line: 470, type: !345)
!13812 = !DILocation(line: 0, scope: !13806)
!13813 = !DILocation(line: 470, column: 13, scope: !13806)
!13814 = !DILocation(line: 471, column: 3, scope: !13806)
!13815 = !DILocation(line: 471, column: 7, scope: !13806)
!13816 = !DILocation(line: 472, column: 3, scope: !13806)
!13817 = !DILocation(line: 472, column: 37, scope: !13806)
!13818 = !DILocation(line: 472, column: 24, scope: !13806)
!13819 = !DILocation(line: 472, column: 43, scope: !13806)
!13820 = !DILocation(line: 472, column: 7, scope: !13806)
!13821 = !DILocation(line: 473, column: 3, scope: !13806)
!13822 = !DILocation(line: 473, column: 7, scope: !13806)
!13823 = !DILocation(line: 473, column: 6, scope: !13806)
!13824 = !DILocation(line: 479, column: 2, scope: !13806)
!13825 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2302, file: !2302, line: 482, type: !13826, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13828)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{!13658, !13658}
!13828 = !{!13829, !13830}
!13829 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13825, file: !2302, line: 482, type: !13658)
!13830 = !DILocalVariable(name: "curr", scope: !13825, file: !2302, line: 484, type: !2194)
!13831 = !DILocation(line: 0, scope: !13825)
!13832 = !DILocation(line: 484, column: 26, scope: !13825)
!13833 = !DILocation(line: 493, column: 7, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13825, file: !2302, line: 493, column: 6)
!13835 = !DILocation(line: 493, column: 6, scope: !13825)
!13836 = !DILocation(line: 494, column: 3, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13834, file: !2302, line: 493, column: 49)
!13838 = !DILocation(line: 495, column: 2, scope: !13837)
!13839 = !DILocation(line: 496, column: 2, scope: !13825)
!13840 = !DILocation(line: 499, column: 1, scope: !13825)
!13841 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12828, file: !12828, line: 106, type: !13807, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13842)
!13842 = !{!13843, !13844}
!13843 = !DILocalVariable(name: "thread", arg: 1, scope: !13841, file: !12828, line: 106, type: !2194)
!13844 = !DILocalVariable(name: "state", scope: !13841, file: !12828, line: 108, type: !185)
!13845 = !DILocation(line: 0, scope: !13841)
!13846 = !DILocation(line: 108, column: 31, scope: !13841)
!13847 = !DILocation(line: 110, column: 16, scope: !13841)
!13848 = !DILocation(line: 111, column: 41, scope: !13841)
!13849 = !DILocation(line: 110, column: 2, scope: !13841)
!13850 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2302, file: !2302, line: 393, type: !13624, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13851)
!13851 = !{!13852}
!13852 = !DILocalVariable(name: "thread", arg: 1, scope: !13850, file: !2302, line: 393, type: !2194)
!13853 = !DILocation(line: 0, scope: !13850)
!13854 = !DILocation(line: 395, column: 6, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13850, file: !2302, line: 395, column: 6)
!13856 = !DILocation(line: 395, column: 6, scope: !13850)
!13857 = !DILocalVariable(name: "thread", arg: 1, scope: !13858, file: !2302, line: 264, type: !2194)
!13858 = distinct !DISubprogram(name: "dequeue_thread", scope: !2302, file: !2302, line: 264, type: !13624, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13859)
!13859 = !{!13857}
!13860 = !DILocation(line: 0, scope: !13858, inlinedAt: !13861)
!13861 = distinct !DILocation(line: 396, column: 3, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13855, file: !2302, line: 395, column: 34)
!13863 = !DILocation(line: 266, column: 15, scope: !13858, inlinedAt: !13861)
!13864 = !DILocation(line: 266, column: 28, scope: !13858, inlinedAt: !13861)
!13865 = !DILocalVariable(name: "thread", arg: 1, scope: !13866, file: !2302, line: 232, type: !2194)
!13866 = distinct !DISubprogram(name: "runq_remove", scope: !2302, file: !2302, line: 232, type: !13624, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13867)
!13867 = !{!13865}
!13868 = !DILocation(line: 0, scope: !13866, inlinedAt: !13869)
!13869 = distinct !DILocation(line: 268, column: 3, scope: !13870, inlinedAt: !13861)
!13870 = distinct !DILexicalBlock(scope: !13871, file: !2302, line: 267, column: 35)
!13871 = distinct !DILexicalBlock(scope: !13858, file: !2302, line: 267, column: 6)
!13872 = !DILocation(line: 234, column: 2, scope: !13866, inlinedAt: !13869)
!13873 = !DILocation(line: 397, column: 2, scope: !13862)
!13874 = !DILocalVariable(name: "thread", arg: 1, scope: !13875, file: !2302, line: 250, type: !2194)
!13875 = distinct !DISubprogram(name: "queue_thread", scope: !2302, file: !2302, line: 250, type: !13624, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13876)
!13876 = !{!13874}
!13877 = !DILocation(line: 0, scope: !13875, inlinedAt: !13878)
!13878 = distinct !DILocation(line: 398, column: 2, scope: !13850)
!13879 = !DILocation(line: 252, column: 15, scope: !13875, inlinedAt: !13878)
!13880 = !DILocation(line: 252, column: 28, scope: !13875, inlinedAt: !13878)
!13881 = !DILocalVariable(name: "thread", arg: 1, scope: !13882, file: !2302, line: 227, type: !2194)
!13882 = distinct !DISubprogram(name: "runq_add", scope: !2302, file: !2302, line: 227, type: !13624, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13883)
!13883 = !{!13881}
!13884 = !DILocation(line: 0, scope: !13882, inlinedAt: !13885)
!13885 = distinct !DILocation(line: 254, column: 3, scope: !13886, inlinedAt: !13878)
!13886 = distinct !DILexicalBlock(scope: !13887, file: !2302, line: 253, column: 35)
!13887 = distinct !DILexicalBlock(scope: !13875, file: !2302, line: 253, column: 6)
!13888 = !DILocalVariable(name: "pq", arg: 1, scope: !13889, file: !2302, line: 181, type: !13892)
!13889 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2302, file: !2302, line: 181, type: !13890, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13893)
!13890 = !DISubroutineType(types: !13891)
!13891 = !{null, !13892, !2194}
!13892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!13893 = !{!13888, !13894, !13895}
!13894 = !DILocalVariable(name: "thread", arg: 2, scope: !13889, file: !2302, line: 182, type: !2194)
!13895 = !DILocalVariable(name: "t", scope: !13889, file: !2302, line: 184, type: !2194)
!13896 = !DILocation(line: 0, scope: !13889, inlinedAt: !13897)
!13897 = distinct !DILocation(line: 229, column: 2, scope: !13882, inlinedAt: !13885)
!13898 = !DILocation(line: 186, column: 2, scope: !13899, inlinedAt: !13897)
!13899 = distinct !DILexicalBlock(scope: !13900, file: !2302, line: 186, column: 2)
!13900 = distinct !DILexicalBlock(scope: !13889, file: !2302, line: 186, column: 2)
!13901 = !DILocation(line: 186, column: 2, scope: !13900, inlinedAt: !13897)
!13902 = !DILocation(line: 186, column: 2, scope: !13903, inlinedAt: !13897)
!13903 = distinct !DILexicalBlock(scope: !13899, file: !2302, line: 186, column: 2)
!13904 = !DILocation(line: 188, column: 2, scope: !13905, inlinedAt: !13897)
!13905 = distinct !DILexicalBlock(scope: !13889, file: !2302, line: 188, column: 2)
!13906 = !DILocation(line: 188, column: 2, scope: !13907, inlinedAt: !13897)
!13907 = distinct !DILexicalBlock(scope: !13905, file: !2302, line: 188, column: 2)
!13908 = !DILocation(line: 0, scope: !13905, inlinedAt: !13897)
!13909 = !DILocation(line: 189, column: 7, scope: !13910, inlinedAt: !13897)
!13910 = distinct !DILexicalBlock(scope: !13911, file: !2302, line: 189, column: 7)
!13911 = distinct !DILexicalBlock(scope: !13907, file: !2302, line: 188, column: 56)
!13912 = !DILocation(line: 189, column: 35, scope: !13910, inlinedAt: !13897)
!13913 = !DILocation(line: 189, column: 7, scope: !13911, inlinedAt: !13897)
!13914 = !DILocation(line: 191, column: 21, scope: !13915, inlinedAt: !13897)
!13915 = distinct !DILexicalBlock(scope: !13910, file: !2302, line: 189, column: 40)
!13916 = !DILocation(line: 190, column: 4, scope: !13915, inlinedAt: !13897)
!13917 = !DILocation(line: 192, column: 4, scope: !13915, inlinedAt: !13897)
!13918 = distinct !{!13918, !13904, !13919}
!13919 = !DILocation(line: 194, column: 2, scope: !13905, inlinedAt: !13897)
!13920 = !DILocation(line: 196, column: 37, scope: !13889, inlinedAt: !13897)
!13921 = !DILocation(line: 196, column: 2, scope: !13889, inlinedAt: !13897)
!13922 = !DILocation(line: 197, column: 1, scope: !13889, inlinedAt: !13897)
!13923 = !DILocation(line: 399, column: 25, scope: !13850)
!13924 = !DILocation(line: 399, column: 22, scope: !13850)
!13925 = !DILocation(line: 399, column: 2, scope: !13850)
!13926 = !DILocation(line: 400, column: 1, scope: !13850)
!13927 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12828, file: !12828, line: 136, type: !13807, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13928)
!13928 = !{!13929}
!13929 = !DILocalVariable(name: "thread", arg: 1, scope: !13927, file: !12828, line: 136, type: !2194)
!13930 = !DILocation(line: 0, scope: !13927)
!13931 = !DILocation(line: 138, column: 9, scope: !13927)
!13932 = !DILocation(line: 138, column: 2, scope: !13927)
!13933 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2302, file: !2302, line: 1137, type: !13890, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13934)
!13934 = !{!13935, !13936}
!13935 = !DILocalVariable(name: "pq", arg: 1, scope: !13933, file: !2302, line: 1137, type: !13892)
!13936 = !DILocalVariable(name: "thread", arg: 2, scope: !13933, file: !2302, line: 1137, type: !2194)
!13937 = !DILocation(line: 0, scope: !13933)
!13938 = !DILocation(line: 1139, column: 2, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13940, file: !2302, line: 1139, column: 2)
!13940 = distinct !DILexicalBlock(scope: !13933, file: !2302, line: 1139, column: 2)
!13941 = !DILocation(line: 1139, column: 2, scope: !13940)
!13942 = !DILocation(line: 1139, column: 2, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13939, file: !2302, line: 1139, column: 2)
!13944 = !DILocation(line: 1141, column: 33, scope: !13933)
!13945 = !DILocation(line: 1141, column: 2, scope: !13933)
!13946 = !DILocation(line: 1142, column: 1, scope: !13933)
!13947 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12828, file: !12828, line: 83, type: !13807, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13948)
!13948 = !{!13949}
!13949 = !DILocalVariable(name: "thread", arg: 1, scope: !13947, file: !12828, line: 83, type: !2194)
!13950 = !DILocation(line: 0, scope: !13947)
!13951 = !DILocation(line: 89, column: 16, scope: !13947)
!13952 = !DILocation(line: 89, column: 2, scope: !13947)
!13953 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !13954, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13956)
!13954 = !DISubroutineType(types: !13955)
!13955 = !{!2298, !13892}
!13956 = !{!13957}
!13957 = !DILocalVariable(name: "list", arg: 1, scope: !13953, file: !153, line: 294, type: !13892)
!13958 = !DILocation(line: 0, scope: !13953)
!13959 = !DILocation(line: 296, column: 9, scope: !13953)
!13960 = !DILocation(line: 296, column: 49, scope: !13953)
!13961 = !DILocation(line: 296, column: 2, scope: !13953)
!13962 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !13963, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13965)
!13963 = !DISubroutineType(types: !13964)
!13964 = !{null, !2298, !2298}
!13965 = !{!13966, !13967, !13968}
!13966 = !DILocalVariable(name: "successor", arg: 1, scope: !13962, file: !153, line: 443, type: !2298)
!13967 = !DILocalVariable(name: "node", arg: 2, scope: !13962, file: !153, line: 443, type: !2298)
!13968 = !DILocalVariable(name: "prev", scope: !13962, file: !153, line: 445, type: !13969)
!13969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2298)
!13970 = !DILocation(line: 0, scope: !13962)
!13971 = !DILocation(line: 445, column: 39, scope: !13962)
!13972 = !DILocation(line: 447, column: 8, scope: !13962)
!13973 = !DILocation(line: 447, column: 13, scope: !13962)
!13974 = !DILocation(line: 448, column: 8, scope: !13962)
!13975 = !DILocation(line: 448, column: 13, scope: !13962)
!13976 = !DILocation(line: 449, column: 8, scope: !13962)
!13977 = !DILocation(line: 449, column: 13, scope: !13962)
!13978 = !DILocation(line: 450, column: 18, scope: !13962)
!13979 = !DILocation(line: 451, column: 1, scope: !13962)
!13980 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !13981, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13983)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{!2298, !13892, !2298}
!13983 = !{!13984, !13985}
!13984 = !DILocalVariable(name: "list", arg: 1, scope: !13980, file: !153, line: 341, type: !13892)
!13985 = !DILocalVariable(name: "node", arg: 2, scope: !13980, file: !153, line: 342, type: !2298)
!13986 = !DILocation(line: 0, scope: !13980)
!13987 = !DILocation(line: 344, column: 15, scope: !13980)
!13988 = !DILocation(line: 344, column: 9, scope: !13980)
!13989 = !DILocation(line: 344, column: 26, scope: !13980)
!13990 = !DILocation(line: 344, column: 2, scope: !13980)
!13991 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !13992, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !13994)
!13992 = !DISubroutineType(types: !13993)
!13993 = !{null, !13892, !2298}
!13994 = !{!13995, !13996, !13997}
!13995 = !DILocalVariable(name: "list", arg: 1, scope: !13991, file: !153, line: 404, type: !13892)
!13996 = !DILocalVariable(name: "node", arg: 2, scope: !13991, file: !153, line: 404, type: !2298)
!13997 = !DILocalVariable(name: "tail", scope: !13991, file: !153, line: 406, type: !13969)
!13998 = !DILocation(line: 0, scope: !13991)
!13999 = !DILocation(line: 406, column: 34, scope: !13991)
!14000 = !DILocation(line: 408, column: 8, scope: !13991)
!14001 = !DILocation(line: 408, column: 13, scope: !13991)
!14002 = !DILocation(line: 409, column: 8, scope: !13991)
!14003 = !DILocation(line: 409, column: 13, scope: !13991)
!14004 = !DILocation(line: 411, column: 8, scope: !13991)
!14005 = !DILocation(line: 411, column: 13, scope: !13991)
!14006 = !DILocation(line: 412, column: 13, scope: !13991)
!14007 = !DILocation(line: 413, column: 1, scope: !13991)
!14008 = distinct !DISubprogram(name: "update_cache", scope: !2302, file: !2302, line: 559, type: !8364, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14009)
!14009 = !{!14010, !14011}
!14010 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14008, file: !2302, line: 559, type: !119)
!14011 = !DILocalVariable(name: "thread", scope: !14008, file: !2302, line: 562, type: !2194)
!14012 = !DILocation(line: 0, scope: !14008)
!14013 = !DILocation(line: 239, column: 9, scope: !14014, inlinedAt: !14017)
!14014 = distinct !DISubprogram(name: "runq_best", scope: !2302, file: !2302, line: 237, type: !14015, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!14015 = !DISubroutineType(types: !14016)
!14016 = !{!2194}
!14017 = distinct !DILocation(line: 314, column: 28, scope: !14018, inlinedAt: !14021)
!14018 = distinct !DISubprogram(name: "next_up", scope: !2302, file: !2302, line: 312, type: !14015, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14019)
!14019 = !{!14020}
!14020 = !DILocalVariable(name: "thread", scope: !14018, file: !2302, line: 314, type: !2194)
!14021 = distinct !DILocation(line: 562, column: 28, scope: !14008)
!14022 = !DILocation(line: 0, scope: !14018, inlinedAt: !14021)
!14023 = !DILocation(line: 340, column: 17, scope: !14018, inlinedAt: !14021)
!14024 = !DILocation(line: 340, column: 9, scope: !14018, inlinedAt: !14021)
!14025 = !DILocalVariable(name: "thread", arg: 1, scope: !14026, file: !2302, line: 127, type: !2194)
!14026 = distinct !DISubprogram(name: "should_preempt", scope: !2302, file: !2302, line: 127, type: !14027, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14029)
!14027 = !DISubroutineType(types: !14028)
!14028 = !{!345, !2194, !119}
!14029 = !{!14025, !14030}
!14030 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14026, file: !2302, line: 128, type: !119)
!14031 = !DILocation(line: 0, scope: !14026, inlinedAt: !14032)
!14032 = distinct !DILocation(line: 564, column: 6, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14008, file: !2302, line: 564, column: 6)
!14034 = !DILocation(line: 133, column: 17, scope: !14035, inlinedAt: !14032)
!14035 = distinct !DILexicalBlock(scope: !14026, file: !2302, line: 133, column: 6)
!14036 = !DILocation(line: 0, scope: !14033)
!14037 = !DILocation(line: 133, column: 6, scope: !14026, inlinedAt: !14032)
!14038 = !DILocation(line: 137, column: 2, scope: !14039, inlinedAt: !14032)
!14039 = distinct !DILexicalBlock(scope: !14040, file: !2302, line: 137, column: 2)
!14040 = distinct !DILexicalBlock(scope: !14026, file: !2302, line: 137, column: 2)
!14041 = !DILocation(line: 137, column: 2, scope: !14040, inlinedAt: !14032)
!14042 = !DILocation(line: 137, column: 2, scope: !14043, inlinedAt: !14032)
!14043 = distinct !DILexicalBlock(scope: !14039, file: !2302, line: 137, column: 2)
!14044 = !DILocation(line: 140, column: 6, scope: !14045, inlinedAt: !14032)
!14045 = distinct !DILexicalBlock(scope: !14026, file: !2302, line: 140, column: 6)
!14046 = !DILocation(line: 140, column: 6, scope: !14026, inlinedAt: !14032)
!14047 = !DILocation(line: 150, column: 9, scope: !14048, inlinedAt: !14032)
!14048 = distinct !DILexicalBlock(scope: !14026, file: !2302, line: 149, column: 6)
!14049 = !DILocation(line: 149, column: 6, scope: !14026, inlinedAt: !14032)
!14050 = !DILocation(line: 157, column: 6, scope: !14051, inlinedAt: !14032)
!14051 = distinct !DILexicalBlock(scope: !14026, file: !2302, line: 157, column: 6)
!14052 = !DILocation(line: 564, column: 6, scope: !14008)
!14053 = !DILocation(line: 566, column: 14, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !2302, line: 566, column: 7)
!14055 = distinct !DILexicalBlock(scope: !14033, file: !2302, line: 564, column: 42)
!14056 = !DILocation(line: 566, column: 7, scope: !14055)
!14057 = !DILocation(line: 567, column: 4, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14054, file: !2302, line: 566, column: 27)
!14059 = !DILocation(line: 568, column: 3, scope: !14058)
!14060 = !DILocation(line: 585, column: 1, scope: !14008)
!14061 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2302, file: !2302, line: 1144, type: !14062, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14064)
!14062 = !DISubroutineType(types: !14063)
!14063 = !{!2194, !13892}
!14064 = !{!14065, !14066, !14067}
!14065 = !DILocalVariable(name: "pq", arg: 1, scope: !14061, file: !2302, line: 1144, type: !13892)
!14066 = !DILocalVariable(name: "thread", scope: !14061, file: !2302, line: 1146, type: !2194)
!14067 = !DILocalVariable(name: "n", scope: !14061, file: !2302, line: 1147, type: !2298)
!14068 = !DILocation(line: 0, scope: !14061)
!14069 = !DILocation(line: 1147, column: 19, scope: !14061)
!14070 = !DILocation(line: 1152, column: 2, scope: !14061)
!14071 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12828, file: !12828, line: 115, type: !13807, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14072)
!14072 = !{!14073}
!14073 = !DILocalVariable(name: "thread", arg: 1, scope: !14071, file: !12828, line: 115, type: !2194)
!14074 = !DILocation(line: 0, scope: !14071)
!14075 = !DILocation(line: 117, column: 46, scope: !14071)
!14076 = !DILocation(line: 117, column: 10, scope: !14071)
!14077 = !DILocation(line: 117, column: 9, scope: !14071)
!14078 = !DILocation(line: 117, column: 2, scope: !14071)
!14079 = distinct !DISubprogram(name: "is_preempt", scope: !2302, file: !2302, line: 62, type: !13642, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14080)
!14080 = !{!14081}
!14081 = !DILocalVariable(name: "thread", arg: 1, scope: !14079, file: !2302, line: 62, type: !2194)
!14082 = !DILocation(line: 0, scope: !14079)
!14083 = !DILocation(line: 65, column: 22, scope: !14079)
!14084 = !DILocation(line: 65, column: 30, scope: !14079)
!14085 = !DILocation(line: 65, column: 2, scope: !14079)
!14086 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13257, file: !13257, line: 35, type: !14087, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14091)
!14087 = !DISubroutineType(types: !14088)
!14088 = !{!345, !14089}
!14089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14090, size: 32)
!14090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2245)
!14091 = !{!14092}
!14092 = !DILocalVariable(name: "to", arg: 1, scope: !14086, file: !13257, line: 35, type: !14089)
!14093 = !DILocation(line: 0, scope: !14086)
!14094 = !DILocation(line: 37, column: 35, scope: !14086)
!14095 = !DILocation(line: 37, column: 10, scope: !14086)
!14096 = !DILocation(line: 37, column: 9, scope: !14086)
!14097 = !DILocation(line: 37, column: 2, scope: !14086)
!14098 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !14099, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14103)
!14099 = !DISubroutineType(types: !14100)
!14100 = !{!345, !14101}
!14101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14102, size: 32)
!14102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2204)
!14103 = !{!14104}
!14104 = !DILocalVariable(name: "node", arg: 1, scope: !14098, file: !153, line: 225, type: !14101)
!14105 = !DILocation(line: 0, scope: !14098)
!14106 = !DILocation(line: 227, column: 15, scope: !14098)
!14107 = !DILocation(line: 227, column: 20, scope: !14098)
!14108 = !DILocation(line: 227, column: 2, scope: !14098)
!14109 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !13981, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14110)
!14110 = !{!14111, !14112}
!14111 = !DILocalVariable(name: "list", arg: 1, scope: !14109, file: !153, line: 325, type: !13892)
!14112 = !DILocalVariable(name: "node", arg: 2, scope: !14109, file: !153, line: 326, type: !2298)
!14113 = !DILocation(line: 0, scope: !14109)
!14114 = !DILocation(line: 328, column: 24, scope: !14109)
!14115 = !DILocation(line: 328, column: 15, scope: !14109)
!14116 = !DILocation(line: 328, column: 9, scope: !14109)
!14117 = !DILocation(line: 328, column: 45, scope: !14109)
!14118 = !DILocation(line: 328, column: 2, scope: !14109)
!14119 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !14120, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14122)
!14120 = !DISubroutineType(types: !14121)
!14121 = !{!345, !13892}
!14122 = !{!14123}
!14123 = !DILocalVariable(name: "list", arg: 1, scope: !14119, file: !153, line: 266, type: !13892)
!14124 = !DILocation(line: 0, scope: !14119)
!14125 = !DILocation(line: 268, column: 15, scope: !14119)
!14126 = !DILocation(line: 268, column: 20, scope: !14119)
!14127 = !DILocation(line: 268, column: 2, scope: !14119)
!14128 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !14129, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14131)
!14129 = !DISubroutineType(types: !14130)
!14130 = !{null, !2298}
!14131 = !{!14132, !14133, !14134}
!14132 = !DILocalVariable(name: "node", arg: 1, scope: !14128, file: !153, line: 496, type: !2298)
!14133 = !DILocalVariable(name: "prev", scope: !14128, file: !153, line: 498, type: !13969)
!14134 = !DILocalVariable(name: "next", scope: !14128, file: !153, line: 499, type: !13969)
!14135 = !DILocation(line: 0, scope: !14128)
!14136 = !DILocation(line: 498, column: 34, scope: !14128)
!14137 = !DILocation(line: 499, column: 34, scope: !14128)
!14138 = !DILocation(line: 501, column: 8, scope: !14128)
!14139 = !DILocation(line: 501, column: 13, scope: !14128)
!14140 = !DILocation(line: 502, column: 8, scope: !14128)
!14141 = !DILocation(line: 502, column: 13, scope: !14128)
!14142 = !DILocation(line: 503, column: 2, scope: !14128)
!14143 = !DILocation(line: 504, column: 1, scope: !14128)
!14144 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !14129, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14145)
!14145 = !{!14146}
!14146 = !DILocalVariable(name: "node", arg: 1, scope: !14144, file: !153, line: 211, type: !2298)
!14147 = !DILocation(line: 0, scope: !14144)
!14148 = !DILocation(line: 213, column: 8, scope: !14144)
!14149 = !DILocation(line: 213, column: 13, scope: !14144)
!14150 = !DILocation(line: 214, column: 8, scope: !14144)
!14151 = !DILocation(line: 214, column: 13, scope: !14144)
!14152 = !DILocation(line: 215, column: 1, scope: !14144)
!14153 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12828, file: !12828, line: 131, type: !14154, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14156)
!14154 = !DISubroutineType(types: !14155)
!14155 = !{!345, !2194, !118}
!14156 = !{!14157, !14158}
!14157 = !DILocalVariable(name: "thread", arg: 1, scope: !14153, file: !12828, line: 131, type: !2194)
!14158 = !DILocalVariable(name: "state", arg: 2, scope: !14153, file: !12828, line: 131, type: !118)
!14159 = !DILocation(line: 0, scope: !14153)
!14160 = !DILocation(line: 133, column: 23, scope: !14153)
!14161 = !DILocation(line: 133, column: 10, scope: !14153)
!14162 = !DILocation(line: 133, column: 36, scope: !14153)
!14163 = !DILocation(line: 133, column: 45, scope: !14153)
!14164 = !DILocation(line: 133, column: 2, scope: !14153)
!14165 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12828, file: !12828, line: 211, type: !14166, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14168)
!14166 = !DISubroutineType(types: !14167)
!14167 = !{!345, !119, !119}
!14168 = !{!14169, !14170}
!14169 = !DILocalVariable(name: "prio", arg: 1, scope: !14165, file: !12828, line: 211, type: !119)
!14170 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14165, file: !12828, line: 211, type: !119)
!14171 = !DILocation(line: 0, scope: !14165)
!14172 = !DILocation(line: 213, column: 9, scope: !14165)
!14173 = !DILocation(line: 213, column: 2, scope: !14165)
!14174 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12828, file: !12828, line: 206, type: !14166, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14175)
!14175 = !{!14176, !14177}
!14176 = !DILocalVariable(name: "prio1", arg: 1, scope: !14174, file: !12828, line: 206, type: !119)
!14177 = !DILocalVariable(name: "prio2", arg: 2, scope: !14174, file: !12828, line: 206, type: !119)
!14178 = !DILocation(line: 0, scope: !14174)
!14179 = !DILocation(line: 208, column: 15, scope: !14174)
!14180 = !DILocation(line: 208, column: 2, scope: !14174)
!14181 = distinct !DISubprogram(name: "z_ready_thread", scope: !2302, file: !2302, line: 635, type: !13624, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14182)
!14182 = !{!14183, !14184, !14186}
!14183 = !DILocalVariable(name: "thread", arg: 1, scope: !14181, file: !2302, line: 635, type: !2194)
!14184 = !DILocalVariable(name: "__i", scope: !14185, file: !2302, line: 637, type: !13658)
!14185 = distinct !DILexicalBlock(scope: !14181, file: !2302, line: 637, column: 2)
!14186 = !DILocalVariable(name: "__key", scope: !14185, file: !2302, line: 637, type: !13658)
!14187 = !DILocation(line: 0, scope: !14181)
!14188 = !DILocation(line: 0, scope: !14185)
!14189 = !DILocation(line: 0, scope: !13666, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 637, column: 2, scope: !14185)
!14191 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14192)
!14192 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14190)
!14193 = !DILocation(line: 0, scope: !13675, inlinedAt: !14192)
!14194 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14190)
!14195 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14190)
!14196 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14190)
!14197 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14190)
!14198 = !DILocation(line: 639, column: 4, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14200, file: !2302, line: 638, column: 41)
!14200 = distinct !DILexicalBlock(scope: !14201, file: !2302, line: 638, column: 7)
!14201 = distinct !DILexicalBlock(scope: !14202, file: !2302, line: 637, column: 26)
!14202 = distinct !DILexicalBlock(scope: !14185, file: !2302, line: 637, column: 2)
!14203 = !DILocation(line: 0, scope: !13700, inlinedAt: !14204)
!14204 = distinct !DILocation(line: 637, column: 2, scope: !14202)
!14205 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14204)
!14206 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14204)
!14207 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14204)
!14208 = !DILocation(line: 0, scope: !13714, inlinedAt: !14209)
!14209 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14204)
!14210 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14209)
!14211 = !DILocation(line: 642, column: 1, scope: !14181)
!14212 = distinct !DISubprogram(name: "ready_thread", scope: !2302, file: !2302, line: 617, type: !13624, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14213)
!14213 = !{!14214}
!14214 = !DILocalVariable(name: "thread", arg: 1, scope: !14212, file: !2302, line: 617, type: !2194)
!14215 = !DILocation(line: 0, scope: !14212)
!14216 = !DILocation(line: 626, column: 7, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14212, file: !2302, line: 626, column: 6)
!14218 = !DILocation(line: 626, column: 34, scope: !14217)
!14219 = !DILocation(line: 626, column: 37, scope: !14217)
!14220 = !DILocation(line: 626, column: 6, scope: !14212)
!14221 = !DILocation(line: 0, scope: !13875, inlinedAt: !14222)
!14222 = distinct !DILocation(line: 629, column: 3, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14217, file: !2302, line: 626, column: 64)
!14224 = !DILocation(line: 252, column: 15, scope: !13875, inlinedAt: !14222)
!14225 = !DILocation(line: 252, column: 28, scope: !13875, inlinedAt: !14222)
!14226 = !DILocation(line: 0, scope: !13882, inlinedAt: !14227)
!14227 = distinct !DILocation(line: 254, column: 3, scope: !13886, inlinedAt: !14222)
!14228 = !DILocation(line: 0, scope: !13889, inlinedAt: !14229)
!14229 = distinct !DILocation(line: 229, column: 2, scope: !13882, inlinedAt: !14227)
!14230 = !DILocation(line: 186, column: 2, scope: !13899, inlinedAt: !14229)
!14231 = !DILocation(line: 186, column: 2, scope: !13900, inlinedAt: !14229)
!14232 = !DILocation(line: 186, column: 2, scope: !13903, inlinedAt: !14229)
!14233 = !DILocation(line: 188, column: 2, scope: !13905, inlinedAt: !14229)
!14234 = !DILocation(line: 188, column: 2, scope: !13907, inlinedAt: !14229)
!14235 = !DILocation(line: 0, scope: !13905, inlinedAt: !14229)
!14236 = !DILocation(line: 189, column: 7, scope: !13910, inlinedAt: !14229)
!14237 = !DILocation(line: 189, column: 35, scope: !13910, inlinedAt: !14229)
!14238 = !DILocation(line: 189, column: 7, scope: !13911, inlinedAt: !14229)
!14239 = !DILocation(line: 191, column: 21, scope: !13915, inlinedAt: !14229)
!14240 = !DILocation(line: 190, column: 4, scope: !13915, inlinedAt: !14229)
!14241 = !DILocation(line: 192, column: 4, scope: !13915, inlinedAt: !14229)
!14242 = distinct !{!14242, !14233, !14243}
!14243 = !DILocation(line: 194, column: 2, scope: !13905, inlinedAt: !14229)
!14244 = !DILocation(line: 196, column: 37, scope: !13889, inlinedAt: !14229)
!14245 = !DILocation(line: 196, column: 2, scope: !13889, inlinedAt: !14229)
!14246 = !DILocation(line: 197, column: 1, scope: !13889, inlinedAt: !14229)
!14247 = !DILocation(line: 630, column: 3, scope: !14223)
!14248 = !DILocation(line: 632, column: 2, scope: !14223)
!14249 = !DILocation(line: 633, column: 1, scope: !14212)
!14250 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12828, file: !12828, line: 120, type: !13807, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14251)
!14251 = !{!14252}
!14252 = !DILocalVariable(name: "thread", arg: 1, scope: !14250, file: !12828, line: 120, type: !2194)
!14253 = !DILocation(line: 0, scope: !14250)
!14254 = !DILocation(line: 122, column: 12, scope: !14250)
!14255 = !DILocation(line: 122, column: 62, scope: !14250)
!14256 = !DILocation(line: 123, column: 4, scope: !14250)
!14257 = !DILocation(line: 122, column: 2, scope: !14250)
!14258 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2302, file: !2302, line: 644, type: !13624, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14259)
!14259 = !{!14260, !14261, !14263}
!14260 = !DILocalVariable(name: "thread", arg: 1, scope: !14258, file: !2302, line: 644, type: !2194)
!14261 = !DILocalVariable(name: "__i", scope: !14262, file: !2302, line: 646, type: !13658)
!14262 = distinct !DILexicalBlock(scope: !14258, file: !2302, line: 646, column: 2)
!14263 = !DILocalVariable(name: "__key", scope: !14262, file: !2302, line: 646, type: !13658)
!14264 = !DILocation(line: 0, scope: !14258)
!14265 = !DILocation(line: 0, scope: !14262)
!14266 = !DILocation(line: 0, scope: !13666, inlinedAt: !14267)
!14267 = distinct !DILocation(line: 646, column: 2, scope: !14262)
!14268 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14269)
!14269 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14267)
!14270 = !DILocation(line: 0, scope: !13675, inlinedAt: !14269)
!14271 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14267)
!14272 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14267)
!14273 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14267)
!14274 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14267)
!14275 = !DILocation(line: 647, column: 3, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14277, file: !2302, line: 646, column: 26)
!14277 = distinct !DILexicalBlock(scope: !14262, file: !2302, line: 646, column: 2)
!14278 = !DILocation(line: 0, scope: !13700, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 646, column: 2, scope: !14277)
!14280 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14279)
!14281 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14279)
!14282 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14279)
!14283 = !DILocation(line: 0, scope: !13714, inlinedAt: !14284)
!14284 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14279)
!14285 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14284)
!14286 = !DILocation(line: 649, column: 1, scope: !14258)
!14287 = distinct !DISubprogram(name: "z_sched_start", scope: !2302, file: !2302, line: 651, type: !13624, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14288)
!14288 = !{!14289, !14290}
!14289 = !DILocalVariable(name: "thread", arg: 1, scope: !14287, file: !2302, line: 651, type: !2194)
!14290 = !DILocalVariable(name: "key", scope: !14287, file: !2302, line: 653, type: !13658)
!14291 = !DILocation(line: 0, scope: !14287)
!14292 = !DILocation(line: 0, scope: !13666, inlinedAt: !14293)
!14293 = distinct !DILocation(line: 653, column: 25, scope: !14287)
!14294 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14295)
!14295 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14293)
!14296 = !DILocation(line: 0, scope: !13675, inlinedAt: !14295)
!14297 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14293)
!14298 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14293)
!14299 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14293)
!14300 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14293)
!14301 = !DILocation(line: 655, column: 6, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14287, file: !2302, line: 655, column: 6)
!14303 = !DILocation(line: 655, column: 6, scope: !14287)
!14304 = !DILocation(line: 0, scope: !13700, inlinedAt: !14305)
!14305 = distinct !DILocation(line: 656, column: 3, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14302, file: !2302, line: 655, column: 36)
!14307 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14305)
!14308 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14305)
!14309 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14305)
!14310 = !DILocation(line: 0, scope: !13714, inlinedAt: !14311)
!14311 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14305)
!14312 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14311)
!14313 = !DILocation(line: 657, column: 3, scope: !14306)
!14314 = !DILocation(line: 660, column: 2, scope: !14287)
!14315 = !DILocation(line: 661, column: 2, scope: !14287)
!14316 = !DILocation(line: 662, column: 2, scope: !14287)
!14317 = !DILocation(line: 663, column: 1, scope: !14287)
!14318 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12828, file: !12828, line: 126, type: !13807, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14319)
!14319 = !{!14320}
!14320 = !DILocalVariable(name: "thread", arg: 1, scope: !14318, file: !12828, line: 126, type: !2194)
!14321 = !DILocation(line: 0, scope: !14318)
!14322 = !DILocation(line: 128, column: 23, scope: !14318)
!14323 = !DILocation(line: 128, column: 36, scope: !14318)
!14324 = !DILocation(line: 128, column: 56, scope: !14318)
!14325 = !DILocation(line: 128, column: 2, scope: !14318)
!14326 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12828, file: !12828, line: 155, type: !13624, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14327)
!14327 = !{!14328}
!14328 = !DILocalVariable(name: "thread", arg: 1, scope: !14326, file: !12828, line: 155, type: !2194)
!14329 = !DILocation(line: 0, scope: !14326)
!14330 = !DILocation(line: 157, column: 15, scope: !14326)
!14331 = !DILocation(line: 157, column: 28, scope: !14326)
!14332 = !DILocation(line: 158, column: 1, scope: !14326)
!14333 = distinct !DISubprogram(name: "z_reschedule", scope: !2302, file: !2302, line: 967, type: !13701, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14334)
!14334 = !{!14335, !14336}
!14335 = !DILocalVariable(name: "lock", arg: 1, scope: !14333, file: !2302, line: 967, type: !13669)
!14336 = !DILocalVariable(name: "key", arg: 2, scope: !14333, file: !2302, line: 967, type: !13658)
!14337 = !DILocation(line: 0, scope: !14333)
!14338 = !DILocation(line: 969, column: 6, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14333, file: !2302, line: 969, column: 6)
!14340 = !DILocation(line: 969, column: 23, scope: !14339)
!14341 = !DILocation(line: 969, column: 26, scope: !14339)
!14342 = !DILocation(line: 969, column: 6, scope: !14333)
!14343 = !DILocalVariable(name: "key", arg: 2, scope: !14344, file: !12932, line: 193, type: !13658)
!14344 = distinct !DISubprogram(name: "z_swap", scope: !12932, file: !12932, line: 193, type: !14345, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14347)
!14345 = !DISubroutineType(types: !14346)
!14346 = !{!119, !13669, !13658}
!14347 = !{!14348, !14343}
!14348 = !DILocalVariable(name: "lock", arg: 1, scope: !14344, file: !12932, line: 193, type: !13669)
!14349 = !DILocation(line: 0, scope: !14344, inlinedAt: !14350)
!14350 = distinct !DILocation(line: 970, column: 3, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14339, file: !2302, line: 969, column: 39)
!14352 = !DILocalVariable(name: "l", arg: 1, scope: !14353, file: !259, line: 221, type: !13669)
!14353 = distinct !DISubprogram(name: "k_spin_release", scope: !259, file: !259, line: 221, type: !14354, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14356)
!14354 = !DISubroutineType(types: !14355)
!14355 = !{null, !13669}
!14356 = !{!14352}
!14357 = !DILocation(line: 0, scope: !14353, inlinedAt: !14358)
!14358 = distinct !DILocation(line: 195, column: 2, scope: !14344, inlinedAt: !14350)
!14359 = !DILocation(line: 225, column: 2, scope: !14360, inlinedAt: !14358)
!14360 = distinct !DILexicalBlock(scope: !14361, file: !259, line: 225, column: 2)
!14361 = distinct !DILexicalBlock(scope: !14353, file: !259, line: 225, column: 2)
!14362 = !DILocation(line: 225, column: 2, scope: !14361, inlinedAt: !14358)
!14363 = !DILocation(line: 225, column: 2, scope: !14364, inlinedAt: !14358)
!14364 = distinct !DILexicalBlock(scope: !14360, file: !259, line: 225, column: 2)
!14365 = !DILocation(line: 196, column: 9, scope: !14344, inlinedAt: !14350)
!14366 = !DILocation(line: 971, column: 2, scope: !14351)
!14367 = !DILocation(line: 0, scope: !13700, inlinedAt: !14368)
!14368 = distinct !DILocation(line: 972, column: 3, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14339, file: !2302, line: 971, column: 9)
!14370 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14368)
!14371 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14368)
!14372 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14368)
!14373 = !DILocation(line: 0, scope: !13714, inlinedAt: !14374)
!14374 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14368)
!14375 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14374)
!14376 = !DILocation(line: 975, column: 1, scope: !14333)
!14377 = distinct !DISubprogram(name: "resched", scope: !2302, file: !2302, line: 940, type: !14378, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14380)
!14378 = !DISubroutineType(types: !14379)
!14379 = !{!345, !118}
!14380 = !{!14381}
!14381 = !DILocalVariable(name: "key", arg: 1, scope: !14377, file: !2302, line: 940, type: !118)
!14382 = !DILocation(line: 0, scope: !14377)
!14383 = !DILocalVariable(name: "key", arg: 1, scope: !14384, file: !5959, line: 112, type: !32)
!14384 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5959, file: !5959, line: 112, type: !14385, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14387)
!14385 = !DISubroutineType(types: !14386)
!14386 = !{!345, !32}
!14387 = !{!14383}
!14388 = !DILocation(line: 0, scope: !14384, inlinedAt: !14389)
!14389 = distinct !DILocation(line: 946, column: 9, scope: !14377)
!14390 = !DILocation(line: 115, column: 13, scope: !14384, inlinedAt: !14389)
!14391 = !DILocation(line: 946, column: 32, scope: !14377)
!14392 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !14396)
!14393 = distinct !DISubprogram(name: "__get_IPSR", scope: !6280, file: !6280, line: 1027, type: !3174, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14394)
!14394 = !{!14395}
!14395 = !DILocalVariable(name: "result", scope: !14393, file: !6280, line: 1029, type: !118)
!14396 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !14398)
!14397 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7330, file: !7330, line: 46, type: !7331, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!14398 = distinct !DILocation(line: 946, column: 36, scope: !14377)
!14399 = !{i64 2873655}
!14400 = !DILocation(line: 0, scope: !14393, inlinedAt: !14396)
!14401 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !14398)
!14402 = !DILocation(line: 946, column: 2, scope: !14377)
!14403 = distinct !DISubprogram(name: "need_swap", scope: !2302, file: !2302, line: 953, type: !7331, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14404)
!14404 = !{!14405}
!14405 = !DILocalVariable(name: "new_thread", scope: !14403, file: !2302, line: 959, type: !2194)
!14406 = !DILocation(line: 962, column: 31, scope: !14403)
!14407 = !DILocation(line: 0, scope: !14403)
!14408 = !DILocation(line: 963, column: 23, scope: !14403)
!14409 = !DILocation(line: 963, column: 20, scope: !14403)
!14410 = !DILocation(line: 963, column: 2, scope: !14403)
!14411 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12932, file: !12932, line: 181, type: !6290, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14412)
!14412 = !{!14413, !14414}
!14413 = !DILocalVariable(name: "key", arg: 1, scope: !14411, file: !12932, line: 181, type: !32)
!14414 = !DILocalVariable(name: "ret", scope: !14411, file: !12932, line: 183, type: !119)
!14415 = !DILocation(line: 0, scope: !14411)
!14416 = !DILocation(line: 185, column: 8, scope: !14411)
!14417 = !DILocation(line: 186, column: 2, scope: !14411)
!14418 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2302, file: !2302, line: 665, type: !13624, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14419)
!14419 = !{!14420, !14421, !14423}
!14420 = !DILocalVariable(name: "thread", arg: 1, scope: !14418, file: !2302, line: 665, type: !2194)
!14421 = !DILocalVariable(name: "__i", scope: !14422, file: !2302, line: 671, type: !13658)
!14422 = distinct !DILexicalBlock(scope: !14418, file: !2302, line: 671, column: 2)
!14423 = !DILocalVariable(name: "__key", scope: !14422, file: !2302, line: 671, type: !13658)
!14424 = !DILocation(line: 0, scope: !14418)
!14425 = !DILocation(line: 669, column: 8, scope: !14418)
!14426 = !DILocation(line: 0, scope: !14422)
!14427 = !DILocation(line: 0, scope: !13666, inlinedAt: !14428)
!14428 = distinct !DILocation(line: 671, column: 2, scope: !14422)
!14429 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14430)
!14430 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14428)
!14431 = !DILocation(line: 0, scope: !13675, inlinedAt: !14430)
!14432 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14428)
!14433 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14428)
!14434 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14428)
!14435 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14428)
!14436 = !DILocation(line: 672, column: 7, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14438, file: !2302, line: 672, column: 7)
!14438 = distinct !DILexicalBlock(scope: !14439, file: !2302, line: 671, column: 26)
!14439 = distinct !DILexicalBlock(scope: !14422, file: !2302, line: 671, column: 2)
!14440 = !DILocation(line: 672, column: 7, scope: !14438)
!14441 = !DILocation(line: 0, scope: !13858, inlinedAt: !14442)
!14442 = distinct !DILocation(line: 673, column: 4, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14437, file: !2302, line: 672, column: 35)
!14444 = !DILocation(line: 266, column: 15, scope: !13858, inlinedAt: !14442)
!14445 = !DILocation(line: 266, column: 28, scope: !13858, inlinedAt: !14442)
!14446 = !DILocation(line: 0, scope: !13866, inlinedAt: !14447)
!14447 = distinct !DILocation(line: 268, column: 3, scope: !13870, inlinedAt: !14442)
!14448 = !DILocation(line: 234, column: 2, scope: !13866, inlinedAt: !14447)
!14449 = !DILocation(line: 674, column: 3, scope: !14443)
!14450 = !DILocation(line: 675, column: 3, scope: !14438)
!14451 = !DILocation(line: 676, column: 26, scope: !14438)
!14452 = !DILocation(line: 676, column: 23, scope: !14438)
!14453 = !DILocation(line: 676, column: 3, scope: !14438)
!14454 = !DILocation(line: 0, scope: !13700, inlinedAt: !14455)
!14455 = distinct !DILocation(line: 671, column: 2, scope: !14439)
!14456 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14455)
!14457 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14455)
!14458 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14455)
!14459 = !DILocation(line: 0, scope: !13714, inlinedAt: !14460)
!14460 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14455)
!14461 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14460)
!14462 = !DILocation(line: 679, column: 16, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14418, file: !2302, line: 679, column: 6)
!14464 = !DILocation(line: 679, column: 13, scope: !14463)
!14465 = !DILocation(line: 679, column: 6, scope: !14418)
!14466 = !DILocation(line: 680, column: 3, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14463, file: !2302, line: 679, column: 26)
!14468 = !DILocation(line: 681, column: 2, scope: !14467)
!14469 = !DILocation(line: 684, column: 1, scope: !14418)
!14470 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13257, file: !13257, line: 52, type: !13642, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14471)
!14471 = !{!14472}
!14472 = !DILocalVariable(name: "thread", arg: 1, scope: !14470, file: !13257, line: 52, type: !2194)
!14473 = !DILocation(line: 0, scope: !14470)
!14474 = !DILocation(line: 54, column: 39, scope: !14470)
!14475 = !DILocation(line: 54, column: 9, scope: !14470)
!14476 = !DILocation(line: 54, column: 2, scope: !14470)
!14477 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12828, file: !12828, line: 141, type: !13624, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14478)
!14478 = !{!14479}
!14479 = !DILocalVariable(name: "thread", arg: 1, scope: !14477, file: !12828, line: 141, type: !2194)
!14480 = !DILocation(line: 0, scope: !14477)
!14481 = !DILocation(line: 143, column: 15, scope: !14477)
!14482 = !DILocation(line: 143, column: 28, scope: !14477)
!14483 = !DILocation(line: 146, column: 1, scope: !14477)
!14484 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12828, file: !12828, line: 73, type: !2936, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!14485 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14486)
!14486 = distinct !DILocation(line: 75, column: 30, scope: !14484)
!14487 = !DILocation(line: 0, scope: !13675, inlinedAt: !14486)
!14488 = !DILocation(line: 75, column: 9, scope: !14484)
!14489 = !DILocation(line: 76, column: 1, scope: !14484)
!14490 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2302, file: !2302, line: 977, type: !6375, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14491)
!14491 = !{!14492}
!14492 = !DILocalVariable(name: "key", arg: 1, scope: !14490, file: !2302, line: 977, type: !118)
!14493 = !DILocation(line: 0, scope: !14490)
!14494 = !DILocation(line: 979, column: 6, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14490, file: !2302, line: 979, column: 6)
!14496 = !DILocation(line: 979, column: 6, scope: !14490)
!14497 = !DILocation(line: 980, column: 3, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14495, file: !2302, line: 979, column: 20)
!14499 = !DILocation(line: 981, column: 2, scope: !14498)
!14500 = !DILocation(line: 0, scope: !13714, inlinedAt: !14501)
!14501 = distinct !DILocation(line: 982, column: 3, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14495, file: !2302, line: 981, column: 9)
!14503 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14501)
!14504 = !DILocation(line: 985, column: 1, scope: !14490)
!14505 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2302, file: !2302, line: 695, type: !13624, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14506)
!14506 = !{!14507, !14508}
!14507 = !DILocalVariable(name: "thread", arg: 1, scope: !14505, file: !2302, line: 695, type: !2194)
!14508 = !DILocalVariable(name: "key", scope: !14505, file: !2302, line: 699, type: !13658)
!14509 = !DILocation(line: 0, scope: !14505)
!14510 = !DILocation(line: 0, scope: !13666, inlinedAt: !14511)
!14511 = distinct !DILocation(line: 699, column: 25, scope: !14505)
!14512 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14513)
!14513 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14511)
!14514 = !DILocation(line: 0, scope: !13675, inlinedAt: !14513)
!14515 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14511)
!14516 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14511)
!14517 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14511)
!14518 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14511)
!14519 = !DILocation(line: 702, column: 7, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14505, file: !2302, line: 702, column: 6)
!14521 = !DILocation(line: 702, column: 6, scope: !14505)
!14522 = !DILocation(line: 0, scope: !13700, inlinedAt: !14523)
!14523 = distinct !DILocation(line: 703, column: 3, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14520, file: !2302, line: 702, column: 38)
!14525 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14523)
!14526 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14523)
!14527 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14523)
!14528 = !DILocation(line: 0, scope: !13714, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14523)
!14530 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14529)
!14531 = !DILocation(line: 704, column: 3, scope: !14524)
!14532 = !DILocation(line: 707, column: 2, scope: !14505)
!14533 = !DILocation(line: 708, column: 2, scope: !14505)
!14534 = !DILocation(line: 710, column: 2, scope: !14505)
!14535 = !DILocation(line: 713, column: 1, scope: !14505)
!14536 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12828, file: !12828, line: 96, type: !13807, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14537)
!14537 = !{!14538}
!14538 = !DILocalVariable(name: "thread", arg: 1, scope: !14536, file: !12828, line: 96, type: !2194)
!14539 = !DILocation(line: 0, scope: !14536)
!14540 = !DILocation(line: 98, column: 23, scope: !14536)
!14541 = !DILocation(line: 98, column: 36, scope: !14536)
!14542 = !DILocation(line: 98, column: 57, scope: !14536)
!14543 = !DILocation(line: 98, column: 2, scope: !14536)
!14544 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12828, file: !12828, line: 148, type: !13624, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14545)
!14545 = !{!14546}
!14546 = !DILocalVariable(name: "thread", arg: 1, scope: !14544, file: !12828, line: 148, type: !2194)
!14547 = !DILocation(line: 0, scope: !14544)
!14548 = !DILocation(line: 150, column: 15, scope: !14544)
!14549 = !DILocation(line: 150, column: 28, scope: !14544)
!14550 = !DILocation(line: 153, column: 1, scope: !14544)
!14551 = distinct !DISubprogram(name: "z_pend_thread", scope: !2302, file: !2302, line: 770, type: !14552, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14558)
!14552 = !DISubroutineType(types: !14553)
!14553 = !{null, !2194, !2225, !14554}
!14554 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !14555)
!14555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !14556)
!14556 = !{!14557}
!14557 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14555, file: !115, line: 66, baseType: !114, size: 64)
!14558 = !{!14559, !14560, !14561, !14562, !14564}
!14559 = !DILocalVariable(name: "thread", arg: 1, scope: !14551, file: !2302, line: 770, type: !2194)
!14560 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14551, file: !2302, line: 770, type: !2225)
!14561 = !DILocalVariable(name: "timeout", arg: 3, scope: !14551, file: !2302, line: 771, type: !14554)
!14562 = !DILocalVariable(name: "__i", scope: !14563, file: !2302, line: 774, type: !13658)
!14563 = distinct !DILexicalBlock(scope: !14551, file: !2302, line: 774, column: 2)
!14564 = !DILocalVariable(name: "__key", scope: !14563, file: !2302, line: 774, type: !13658)
!14565 = !DILocation(line: 0, scope: !14551)
!14566 = !DILocation(line: 773, column: 2, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14568, file: !2302, line: 773, column: 2)
!14568 = distinct !DILexicalBlock(scope: !14551, file: !2302, line: 773, column: 2)
!14569 = !DILocation(line: 773, column: 2, scope: !14568)
!14570 = !DILocation(line: 773, column: 2, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14567, file: !2302, line: 773, column: 2)
!14572 = !DILocation(line: 0, scope: !14563)
!14573 = !DILocation(line: 0, scope: !13666, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 774, column: 2, scope: !14563)
!14575 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14574)
!14577 = !DILocation(line: 0, scope: !13675, inlinedAt: !14576)
!14578 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14574)
!14579 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14574)
!14580 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14574)
!14581 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14574)
!14582 = !DILocation(line: 775, column: 3, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14584, file: !2302, line: 774, column: 26)
!14584 = distinct !DILexicalBlock(scope: !14563, file: !2302, line: 774, column: 2)
!14585 = !DILocation(line: 0, scope: !13700, inlinedAt: !14586)
!14586 = distinct !DILocation(line: 774, column: 2, scope: !14584)
!14587 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14586)
!14588 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14586)
!14589 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14586)
!14590 = !DILocation(line: 0, scope: !13714, inlinedAt: !14591)
!14591 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14586)
!14592 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14591)
!14593 = !DILocation(line: 777, column: 1, scope: !14551)
!14594 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2302, file: !2302, line: 79, type: !13807, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14595)
!14595 = !{!14596}
!14596 = !DILocalVariable(name: "thread", arg: 1, scope: !14594, file: !2302, line: 79, type: !2194)
!14597 = !DILocation(line: 0, scope: !14594)
!14598 = !DILocation(line: 81, column: 23, scope: !14594)
!14599 = !DILocation(line: 81, column: 36, scope: !14594)
!14600 = !DILocation(line: 81, column: 53, scope: !14594)
!14601 = !DILocation(line: 81, column: 2, scope: !14594)
!14602 = distinct !DISubprogram(name: "pend_locked", scope: !2302, file: !2302, line: 760, type: !14552, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14603)
!14603 = !{!14604, !14605, !14606}
!14604 = !DILocalVariable(name: "thread", arg: 1, scope: !14602, file: !2302, line: 760, type: !2194)
!14605 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14602, file: !2302, line: 760, type: !2225)
!14606 = !DILocalVariable(name: "timeout", arg: 3, scope: !14602, file: !2302, line: 761, type: !14554)
!14607 = !DILocation(line: 0, scope: !14602)
!14608 = !DILocation(line: 766, column: 2, scope: !14602)
!14609 = !DILocation(line: 767, column: 2, scope: !14602)
!14610 = !DILocation(line: 768, column: 1, scope: !14602)
!14611 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2302, file: !2302, line: 740, type: !14612, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14614)
!14612 = !DISubroutineType(types: !14613)
!14613 = !{null, !2194, !2225}
!14614 = !{!14615, !14616}
!14615 = !DILocalVariable(name: "thread", arg: 1, scope: !14611, file: !2302, line: 740, type: !2194)
!14616 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14611, file: !2302, line: 740, type: !2225)
!14617 = !DILocation(line: 0, scope: !14611)
!14618 = !DILocation(line: 742, column: 2, scope: !14611)
!14619 = !DILocation(line: 743, column: 2, scope: !14611)
!14620 = !DILocation(line: 747, column: 13, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14611, file: !2302, line: 747, column: 6)
!14622 = !DILocation(line: 747, column: 6, scope: !14611)
!14623 = !DILocation(line: 748, column: 16, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14621, file: !2302, line: 747, column: 22)
!14625 = !DILocation(line: 748, column: 26, scope: !14624)
!14626 = !DILocation(line: 749, column: 28, scope: !14624)
!14627 = !DILocation(line: 0, scope: !13889, inlinedAt: !14628)
!14628 = distinct !DILocation(line: 749, column: 3, scope: !14624)
!14629 = !DILocation(line: 186, column: 2, scope: !13899, inlinedAt: !14628)
!14630 = !DILocation(line: 186, column: 2, scope: !13900, inlinedAt: !14628)
!14631 = !DILocation(line: 186, column: 2, scope: !13903, inlinedAt: !14628)
!14632 = !DILocation(line: 188, column: 2, scope: !13905, inlinedAt: !14628)
!14633 = !DILocation(line: 188, column: 2, scope: !13907, inlinedAt: !14628)
!14634 = !DILocation(line: 0, scope: !13905, inlinedAt: !14628)
!14635 = !DILocation(line: 189, column: 7, scope: !13910, inlinedAt: !14628)
!14636 = !DILocation(line: 189, column: 35, scope: !13910, inlinedAt: !14628)
!14637 = !DILocation(line: 189, column: 7, scope: !13911, inlinedAt: !14628)
!14638 = !DILocation(line: 191, column: 21, scope: !13915, inlinedAt: !14628)
!14639 = !DILocation(line: 190, column: 4, scope: !13915, inlinedAt: !14628)
!14640 = !DILocation(line: 192, column: 4, scope: !13915, inlinedAt: !14628)
!14641 = distinct !{!14641, !14632, !14642}
!14642 = !DILocation(line: 194, column: 2, scope: !13905, inlinedAt: !14628)
!14643 = !DILocation(line: 196, column: 37, scope: !13889, inlinedAt: !14628)
!14644 = !DILocation(line: 196, column: 2, scope: !13889, inlinedAt: !14628)
!14645 = !DILocation(line: 197, column: 1, scope: !13889, inlinedAt: !14628)
!14646 = !DILocation(line: 751, column: 1, scope: !14611)
!14647 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2302, file: !2302, line: 753, type: !14648, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14650)
!14648 = !DISubroutineType(types: !14649)
!14649 = !{null, !2194, !14554}
!14650 = !{!14651, !14652}
!14651 = !DILocalVariable(name: "thread", arg: 1, scope: !14647, file: !2302, line: 753, type: !2194)
!14652 = !DILocalVariable(name: "timeout", arg: 2, scope: !14647, file: !2302, line: 753, type: !14554)
!14653 = !DILocation(line: 0, scope: !14647)
!14654 = !DILocation(line: 755, column: 7, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14647, file: !2302, line: 755, column: 6)
!14656 = !DILocation(line: 755, column: 6, scope: !14647)
!14657 = !DILocation(line: 756, column: 3, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14655, file: !2302, line: 755, column: 41)
!14659 = !DILocation(line: 757, column: 2, scope: !14658)
!14660 = !DILocation(line: 758, column: 1, scope: !14647)
!14661 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13257, file: !13257, line: 47, type: !14648, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14662)
!14662 = !{!14663, !14664}
!14663 = !DILocalVariable(name: "thread", arg: 1, scope: !14661, file: !13257, line: 47, type: !2194)
!14664 = !DILocalVariable(name: "ticks", arg: 2, scope: !14661, file: !13257, line: 47, type: !14554)
!14665 = !DILocation(line: 0, scope: !14661)
!14666 = !DILocation(line: 49, column: 30, scope: !14661)
!14667 = !DILocation(line: 49, column: 2, scope: !14661)
!14668 = !DILocation(line: 50, column: 1, scope: !14661)
!14669 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2302, file: !2302, line: 795, type: !2251, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14670)
!14670 = !{!14671, !14672, !14673, !14675, !14676}
!14671 = !DILocalVariable(name: "timeout", arg: 1, scope: !14669, file: !2302, line: 795, type: !2253)
!14672 = !DILocalVariable(name: "thread", scope: !14669, file: !2302, line: 797, type: !2194)
!14673 = !DILocalVariable(name: "__i", scope: !14674, file: !2302, line: 800, type: !13658)
!14674 = distinct !DILexicalBlock(scope: !14669, file: !2302, line: 800, column: 2)
!14675 = !DILocalVariable(name: "__key", scope: !14674, file: !2302, line: 800, type: !13658)
!14676 = !DILocalVariable(name: "killed", scope: !14677, file: !2302, line: 801, type: !345)
!14677 = distinct !DILexicalBlock(scope: !14678, file: !2302, line: 800, column: 26)
!14678 = distinct !DILexicalBlock(scope: !14674, file: !2302, line: 800, column: 2)
!14679 = !DILocation(line: 0, scope: !14669)
!14680 = !DILocation(line: 797, column: 28, scope: !14669)
!14681 = !DILocation(line: 0, scope: !14674)
!14682 = !DILocation(line: 0, scope: !13666, inlinedAt: !14683)
!14683 = distinct !DILocation(line: 800, column: 2, scope: !14674)
!14684 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14683)
!14686 = !DILocation(line: 0, scope: !13675, inlinedAt: !14685)
!14687 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14683)
!14688 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14683)
!14689 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14683)
!14690 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14683)
!14691 = !DILocation(line: 801, column: 27, scope: !14677)
!14692 = !DILocation(line: 801, column: 32, scope: !14677)
!14693 = !DILocation(line: 801, column: 61, scope: !14677)
!14694 = !DILocation(line: 0, scope: !14677)
!14695 = !DILocation(line: 804, column: 7, scope: !14677)
!14696 = !DILocation(line: 805, column: 21, scope: !14697)
!14697 = distinct !DILexicalBlock(scope: !14698, file: !2302, line: 805, column: 8)
!14698 = distinct !DILexicalBlock(scope: !14699, file: !2302, line: 804, column: 16)
!14699 = distinct !DILexicalBlock(scope: !14677, file: !2302, line: 804, column: 7)
!14700 = !DILocation(line: 805, column: 31, scope: !14697)
!14701 = !DILocation(line: 805, column: 8, scope: !14698)
!14702 = !DILocation(line: 806, column: 5, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14697, file: !2302, line: 805, column: 40)
!14704 = !DILocation(line: 807, column: 4, scope: !14703)
!14705 = !DILocation(line: 808, column: 4, scope: !14698)
!14706 = !DILocation(line: 809, column: 4, scope: !14698)
!14707 = !DILocation(line: 810, column: 4, scope: !14698)
!14708 = !DILocation(line: 811, column: 3, scope: !14698)
!14709 = !DILocation(line: 0, scope: !13700, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 800, column: 2, scope: !14678)
!14711 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14710)
!14712 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14710)
!14713 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14710)
!14714 = !DILocation(line: 0, scope: !13714, inlinedAt: !14715)
!14715 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14710)
!14716 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14715)
!14717 = !DILocation(line: 813, column: 1, scope: !14669)
!14718 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2302, file: !2302, line: 779, type: !13624, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14719)
!14719 = !{!14720}
!14720 = !DILocalVariable(name: "thread", arg: 1, scope: !14718, file: !2302, line: 779, type: !2194)
!14721 = !DILocation(line: 0, scope: !14718)
!14722 = !DILocation(line: 781, column: 21, scope: !14718)
!14723 = !DILocation(line: 781, column: 2, scope: !14718)
!14724 = !DILocation(line: 782, column: 2, scope: !14718)
!14725 = !DILocation(line: 783, column: 15, scope: !14718)
!14726 = !DILocation(line: 783, column: 25, scope: !14718)
!14727 = !DILocation(line: 784, column: 1, scope: !14718)
!14728 = distinct !DISubprogram(name: "pended_on_thread", scope: !2302, file: !2302, line: 724, type: !14729, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14731)
!14729 = !DISubroutineType(types: !14730)
!14730 = !{!2225, !2194}
!14731 = !{!14732}
!14732 = !DILocalVariable(name: "thread", arg: 1, scope: !14728, file: !2302, line: 724, type: !2194)
!14733 = !DILocation(line: 0, scope: !14728)
!14734 = !DILocation(line: 726, column: 2, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14736, file: !2302, line: 726, column: 2)
!14736 = distinct !DILexicalBlock(scope: !14728, file: !2302, line: 726, column: 2)
!14737 = !DILocation(line: 726, column: 2, scope: !14736)
!14738 = !DILocation(line: 726, column: 2, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14735, file: !2302, line: 726, column: 2)
!14740 = !DILocation(line: 728, column: 2, scope: !14728)
!14741 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12828, file: !12828, line: 165, type: !13624, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14742)
!14742 = !{!14743}
!14743 = !DILocalVariable(name: "thread", arg: 1, scope: !14741, file: !12828, line: 165, type: !2194)
!14744 = !DILocation(line: 0, scope: !14741)
!14745 = !DILocation(line: 167, column: 15, scope: !14741)
!14746 = !DILocation(line: 167, column: 28, scope: !14741)
!14747 = !DILocation(line: 168, column: 1, scope: !14741)
!14748 = distinct !DISubprogram(name: "unready_thread", scope: !2302, file: !2302, line: 731, type: !13624, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14749)
!14749 = !{!14750}
!14750 = !DILocalVariable(name: "thread", arg: 1, scope: !14748, file: !2302, line: 731, type: !2194)
!14751 = !DILocation(line: 0, scope: !14748)
!14752 = !DILocation(line: 733, column: 6, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14748, file: !2302, line: 733, column: 6)
!14754 = !DILocation(line: 733, column: 6, scope: !14748)
!14755 = !DILocation(line: 0, scope: !13858, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 734, column: 3, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !14753, file: !2302, line: 733, column: 34)
!14758 = !DILocation(line: 266, column: 15, scope: !13858, inlinedAt: !14756)
!14759 = !DILocation(line: 266, column: 28, scope: !13858, inlinedAt: !14756)
!14760 = !DILocation(line: 0, scope: !13866, inlinedAt: !14761)
!14761 = distinct !DILocation(line: 268, column: 3, scope: !13870, inlinedAt: !14756)
!14762 = !DILocation(line: 234, column: 2, scope: !13866, inlinedAt: !14761)
!14763 = !DILocation(line: 735, column: 2, scope: !14757)
!14764 = !DILocation(line: 736, column: 25, scope: !14748)
!14765 = !DILocation(line: 736, column: 22, scope: !14748)
!14766 = !DILocation(line: 736, column: 2, scope: !14748)
!14767 = !DILocation(line: 737, column: 1, scope: !14748)
!14768 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12828, file: !12828, line: 160, type: !13624, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14769)
!14769 = !{!14770}
!14770 = !DILocalVariable(name: "thread", arg: 1, scope: !14768, file: !12828, line: 160, type: !2194)
!14771 = !DILocation(line: 0, scope: !14768)
!14772 = !DILocation(line: 162, column: 15, scope: !14768)
!14773 = !DILocation(line: 162, column: 28, scope: !14768)
!14774 = !DILocation(line: 163, column: 1, scope: !14768)
!14775 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2302, file: !2302, line: 786, type: !13624, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14776)
!14776 = !{!14777, !14778, !14780}
!14777 = !DILocalVariable(name: "thread", arg: 1, scope: !14775, file: !2302, line: 786, type: !2194)
!14778 = !DILocalVariable(name: "__i", scope: !14779, file: !2302, line: 788, type: !13658)
!14779 = distinct !DILexicalBlock(scope: !14775, file: !2302, line: 788, column: 2)
!14780 = !DILocalVariable(name: "__key", scope: !14779, file: !2302, line: 788, type: !13658)
!14781 = !DILocation(line: 0, scope: !14775)
!14782 = !DILocation(line: 0, scope: !14779)
!14783 = !DILocation(line: 0, scope: !13666, inlinedAt: !14784)
!14784 = distinct !DILocation(line: 788, column: 2, scope: !14779)
!14785 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14784)
!14787 = !DILocation(line: 0, scope: !13675, inlinedAt: !14786)
!14788 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14784)
!14789 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14784)
!14790 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14784)
!14791 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14784)
!14792 = !DILocation(line: 789, column: 3, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14794, file: !2302, line: 788, column: 26)
!14794 = distinct !DILexicalBlock(scope: !14779, file: !2302, line: 788, column: 2)
!14795 = !DILocation(line: 0, scope: !13700, inlinedAt: !14796)
!14796 = distinct !DILocation(line: 788, column: 2, scope: !14794)
!14797 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14796)
!14798 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14796)
!14799 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14796)
!14800 = !DILocation(line: 0, scope: !13714, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14796)
!14802 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14801)
!14803 = !DILocation(line: 791, column: 1, scope: !14775)
!14804 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2302, file: !2302, line: 816, type: !14805, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14807)
!14805 = !DISubroutineType(types: !14806)
!14806 = !{!119, !118, !2225, !14554}
!14807 = !{!14808, !14809, !14810, !14811, !14812, !14814}
!14808 = !DILocalVariable(name: "key", arg: 1, scope: !14804, file: !2302, line: 816, type: !118)
!14809 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14804, file: !2302, line: 816, type: !2225)
!14810 = !DILocalVariable(name: "timeout", arg: 3, scope: !14804, file: !2302, line: 816, type: !14554)
!14811 = !DILocalVariable(name: "ret", scope: !14804, file: !2302, line: 828, type: !119)
!14812 = !DILocalVariable(name: "__i", scope: !14813, file: !2302, line: 829, type: !13658)
!14813 = distinct !DILexicalBlock(scope: !14804, file: !2302, line: 829, column: 2)
!14814 = !DILocalVariable(name: "__key", scope: !14813, file: !2302, line: 829, type: !13658)
!14815 = !DILocation(line: 0, scope: !14804)
!14816 = !DILocation(line: 823, column: 14, scope: !14804)
!14817 = !DILocation(line: 823, column: 2, scope: !14804)
!14818 = !DILocation(line: 826, column: 20, scope: !14804)
!14819 = !DILocation(line: 826, column: 18, scope: !14804)
!14820 = !DILocation(line: 828, column: 12, scope: !14804)
!14821 = !DILocation(line: 0, scope: !14813)
!14822 = !DILocation(line: 0, scope: !13666, inlinedAt: !14823)
!14823 = distinct !DILocation(line: 829, column: 2, scope: !14813)
!14824 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14825)
!14825 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14823)
!14826 = !DILocation(line: 0, scope: !13675, inlinedAt: !14825)
!14827 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14823)
!14828 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14823)
!14829 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14823)
!14830 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14823)
!14831 = !DILocation(line: 830, column: 7, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14833, file: !2302, line: 830, column: 7)
!14833 = distinct !DILexicalBlock(scope: !14834, file: !2302, line: 829, column: 26)
!14834 = distinct !DILexicalBlock(scope: !14813, file: !2302, line: 829, column: 2)
!14835 = !DILocation(line: 830, column: 26, scope: !14832)
!14836 = !DILocation(line: 830, column: 23, scope: !14832)
!14837 = !DILocation(line: 830, column: 7, scope: !14833)
!14838 = !DILocation(line: 831, column: 20, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14832, file: !2302, line: 830, column: 36)
!14840 = !DILocation(line: 832, column: 3, scope: !14839)
!14841 = !DILocation(line: 0, scope: !13700, inlinedAt: !14842)
!14842 = distinct !DILocation(line: 829, column: 2, scope: !14834)
!14843 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14842)
!14844 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14842)
!14845 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14842)
!14846 = !DILocation(line: 0, scope: !13714, inlinedAt: !14847)
!14847 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14842)
!14848 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14847)
!14849 = !DILocation(line: 834, column: 2, scope: !14804)
!14850 = distinct !DISubprogram(name: "z_pend_curr", scope: !2302, file: !2302, line: 840, type: !14851, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14853)
!14851 = !DISubroutineType(types: !14852)
!14852 = !{!119, !13669, !13658, !2225, !14554}
!14853 = !{!14854, !14855, !14856, !14857}
!14854 = !DILocalVariable(name: "lock", arg: 1, scope: !14850, file: !2302, line: 840, type: !13669)
!14855 = !DILocalVariable(name: "key", arg: 2, scope: !14850, file: !2302, line: 840, type: !13658)
!14856 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14850, file: !2302, line: 841, type: !2225)
!14857 = !DILocalVariable(name: "timeout", arg: 4, scope: !14850, file: !2302, line: 841, type: !14554)
!14858 = !DILocation(line: 0, scope: !14850)
!14859 = !DILocation(line: 844, column: 20, scope: !14850)
!14860 = !DILocation(line: 844, column: 18, scope: !14850)
!14861 = !DILocation(line: 846, column: 2, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14863, file: !2302, line: 846, column: 2)
!14863 = distinct !DILexicalBlock(scope: !14850, file: !2302, line: 846, column: 2)
!14864 = !DILocation(line: 846, column: 2, scope: !14863)
!14865 = !DILocation(line: 846, column: 2, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14862, file: !2302, line: 846, column: 2)
!14867 = !DILocation(line: 0, scope: !13666, inlinedAt: !14868)
!14868 = distinct !DILocation(line: 856, column: 9, scope: !14850)
!14869 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14868)
!14871 = !DILocation(line: 0, scope: !13675, inlinedAt: !14870)
!14872 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14868)
!14873 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14868)
!14874 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14868)
!14875 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14868)
!14876 = !DILocation(line: 857, column: 14, scope: !14850)
!14877 = !DILocation(line: 857, column: 2, scope: !14850)
!14878 = !DILocation(line: 0, scope: !14353, inlinedAt: !14879)
!14879 = distinct !DILocation(line: 858, column: 2, scope: !14850)
!14880 = !DILocation(line: 225, column: 2, scope: !14360, inlinedAt: !14879)
!14881 = !DILocation(line: 225, column: 2, scope: !14361, inlinedAt: !14879)
!14882 = !DILocation(line: 225, column: 2, scope: !14364, inlinedAt: !14879)
!14883 = !DILocation(line: 0, scope: !14344, inlinedAt: !14884)
!14884 = distinct !DILocation(line: 859, column: 9, scope: !14850)
!14885 = !DILocation(line: 0, scope: !14353, inlinedAt: !14886)
!14886 = distinct !DILocation(line: 195, column: 2, scope: !14344, inlinedAt: !14884)
!14887 = !DILocation(line: 225, column: 2, scope: !14360, inlinedAt: !14886)
!14888 = !DILocation(line: 225, column: 2, scope: !14361, inlinedAt: !14886)
!14889 = !DILocation(line: 225, column: 2, scope: !14364, inlinedAt: !14886)
!14890 = !DILocation(line: 196, column: 9, scope: !14344, inlinedAt: !14884)
!14891 = !DILocation(line: 859, column: 2, scope: !14850)
!14892 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2302, file: !2302, line: 862, type: !14893, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14895)
!14893 = !DISubroutineType(types: !14894)
!14894 = !{!2194, !2225}
!14895 = !{!14896, !14897, !14898, !14900}
!14896 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14892, file: !2302, line: 862, type: !2225)
!14897 = !DILocalVariable(name: "thread", scope: !14892, file: !2302, line: 864, type: !2194)
!14898 = !DILocalVariable(name: "__i", scope: !14899, file: !2302, line: 866, type: !13658)
!14899 = distinct !DILexicalBlock(scope: !14892, file: !2302, line: 866, column: 2)
!14900 = !DILocalVariable(name: "__key", scope: !14899, file: !2302, line: 866, type: !13658)
!14901 = !DILocation(line: 0, scope: !14892)
!14902 = !DILocation(line: 0, scope: !14899)
!14903 = !DILocation(line: 0, scope: !13666, inlinedAt: !14904)
!14904 = distinct !DILocation(line: 866, column: 2, scope: !14899)
!14905 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14906)
!14906 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14904)
!14907 = !DILocation(line: 0, scope: !13675, inlinedAt: !14906)
!14908 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14904)
!14909 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14904)
!14910 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14904)
!14911 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14904)
!14912 = !DILocation(line: 867, column: 12, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14914, file: !2302, line: 866, column: 26)
!14914 = distinct !DILexicalBlock(scope: !14899, file: !2302, line: 866, column: 2)
!14915 = !DILocation(line: 869, column: 14, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14913, file: !2302, line: 869, column: 7)
!14917 = !DILocation(line: 869, column: 7, scope: !14913)
!14918 = !DILocation(line: 870, column: 4, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14916, file: !2302, line: 869, column: 23)
!14920 = !DILocation(line: 871, column: 3, scope: !14919)
!14921 = !DILocation(line: 0, scope: !13700, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 866, column: 2, scope: !14914)
!14923 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14922)
!14924 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14922)
!14925 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14922)
!14926 = !DILocation(line: 0, scope: !13714, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14922)
!14928 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14927)
!14929 = !DILocation(line: 874, column: 2, scope: !14892)
!14930 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2302, file: !2302, line: 877, type: !14893, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14931)
!14931 = !{!14932, !14933, !14934, !14936}
!14932 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14930, file: !2302, line: 877, type: !2225)
!14933 = !DILocalVariable(name: "thread", scope: !14930, file: !2302, line: 879, type: !2194)
!14934 = !DILocalVariable(name: "__i", scope: !14935, file: !2302, line: 881, type: !13658)
!14935 = distinct !DILexicalBlock(scope: !14930, file: !2302, line: 881, column: 2)
!14936 = !DILocalVariable(name: "__key", scope: !14935, file: !2302, line: 881, type: !13658)
!14937 = !DILocation(line: 0, scope: !14930)
!14938 = !DILocation(line: 0, scope: !14935)
!14939 = !DILocation(line: 0, scope: !13666, inlinedAt: !14940)
!14940 = distinct !DILocation(line: 881, column: 2, scope: !14935)
!14941 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14942)
!14942 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14940)
!14943 = !DILocation(line: 0, scope: !13675, inlinedAt: !14942)
!14944 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14940)
!14945 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14940)
!14946 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14940)
!14947 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14940)
!14948 = !DILocation(line: 882, column: 12, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14950, file: !2302, line: 881, column: 26)
!14950 = distinct !DILexicalBlock(scope: !14935, file: !2302, line: 881, column: 2)
!14951 = !DILocation(line: 884, column: 14, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14949, file: !2302, line: 884, column: 7)
!14953 = !DILocation(line: 884, column: 7, scope: !14949)
!14954 = !DILocation(line: 885, column: 4, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14952, file: !2302, line: 884, column: 23)
!14956 = !DILocation(line: 886, column: 10, scope: !14955)
!14957 = !DILocation(line: 887, column: 3, scope: !14955)
!14958 = !DILocation(line: 0, scope: !13700, inlinedAt: !14959)
!14959 = distinct !DILocation(line: 881, column: 2, scope: !14950)
!14960 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14959)
!14961 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14959)
!14962 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14959)
!14963 = !DILocation(line: 0, scope: !13714, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14959)
!14965 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14964)
!14966 = !DILocation(line: 890, column: 2, scope: !14930)
!14967 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2302, file: !2302, line: 893, type: !13624, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14968)
!14968 = !{!14969}
!14969 = !DILocalVariable(name: "thread", arg: 1, scope: !14967, file: !2302, line: 893, type: !2194)
!14970 = !DILocation(line: 0, scope: !14967)
!14971 = !DILocation(line: 0, scope: !14775, inlinedAt: !14972)
!14972 = distinct !DILocation(line: 895, column: 2, scope: !14967)
!14973 = !DILocation(line: 0, scope: !14779, inlinedAt: !14972)
!14974 = !DILocation(line: 0, scope: !13666, inlinedAt: !14975)
!14975 = distinct !DILocation(line: 788, column: 2, scope: !14779, inlinedAt: !14972)
!14976 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !14977)
!14977 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !14975)
!14978 = !DILocation(line: 0, scope: !13675, inlinedAt: !14977)
!14979 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !14975)
!14980 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !14975)
!14981 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !14975)
!14982 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !14975)
!14983 = !DILocation(line: 789, column: 3, scope: !14793, inlinedAt: !14972)
!14984 = !DILocation(line: 0, scope: !13700, inlinedAt: !14985)
!14985 = distinct !DILocation(line: 788, column: 2, scope: !14794, inlinedAt: !14972)
!14986 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !14985)
!14987 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !14985)
!14988 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !14985)
!14989 = !DILocation(line: 0, scope: !13714, inlinedAt: !14990)
!14990 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !14985)
!14991 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !14990)
!14992 = !DILocation(line: 896, column: 8, scope: !14967)
!14993 = !DILocation(line: 897, column: 1, scope: !14967)
!14994 = distinct !DISubprogram(name: "z_set_prio", scope: !2302, file: !2302, line: 902, type: !14027, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !14995)
!14995 = !{!14996, !14997, !14998, !14999, !15001}
!14996 = !DILocalVariable(name: "thread", arg: 1, scope: !14994, file: !2302, line: 902, type: !2194)
!14997 = !DILocalVariable(name: "prio", arg: 2, scope: !14994, file: !2302, line: 902, type: !119)
!14998 = !DILocalVariable(name: "need_sched", scope: !14994, file: !2302, line: 904, type: !345)
!14999 = !DILocalVariable(name: "__i", scope: !15000, file: !2302, line: 906, type: !13658)
!15000 = distinct !DILexicalBlock(scope: !14994, file: !2302, line: 906, column: 2)
!15001 = !DILocalVariable(name: "__key", scope: !15000, file: !2302, line: 906, type: !13658)
!15002 = !DILocation(line: 0, scope: !14994)
!15003 = !DILocation(line: 0, scope: !15000)
!15004 = !DILocation(line: 0, scope: !13666, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 906, column: 2, scope: !15000)
!15006 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !15007)
!15007 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !15005)
!15008 = !DILocation(line: 0, scope: !13675, inlinedAt: !15007)
!15009 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !15005)
!15010 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !15005)
!15011 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !15005)
!15012 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !15005)
!15013 = !DILocation(line: 907, column: 16, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !2302, line: 906, column: 26)
!15015 = distinct !DILexicalBlock(scope: !15000, file: !2302, line: 906, column: 2)
!15016 = !DILocation(line: 909, column: 7, scope: !15014)
!15017 = !DILocation(line: 0, scope: !13858, inlinedAt: !15018)
!15018 = distinct !DILocation(line: 912, column: 5, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15020, file: !2302, line: 911, column: 63)
!15020 = distinct !DILexicalBlock(scope: !15021, file: !2302, line: 911, column: 8)
!15021 = distinct !DILexicalBlock(scope: !15022, file: !2302, line: 909, column: 19)
!15022 = distinct !DILexicalBlock(scope: !15014, file: !2302, line: 909, column: 7)
!15023 = !DILocation(line: 266, column: 28, scope: !13858, inlinedAt: !15018)
!15024 = !DILocation(line: 0, scope: !13866, inlinedAt: !15025)
!15025 = distinct !DILocation(line: 268, column: 3, scope: !13870, inlinedAt: !15018)
!15026 = !DILocation(line: 234, column: 2, scope: !13866, inlinedAt: !15025)
!15027 = !DILocation(line: 913, column: 23, scope: !15019)
!15028 = !DILocation(line: 0, scope: !13875, inlinedAt: !15029)
!15029 = distinct !DILocation(line: 914, column: 5, scope: !15019)
!15030 = !DILocation(line: 252, column: 28, scope: !13875, inlinedAt: !15029)
!15031 = !DILocation(line: 0, scope: !13882, inlinedAt: !15032)
!15032 = distinct !DILocation(line: 254, column: 3, scope: !13886, inlinedAt: !15029)
!15033 = !DILocation(line: 0, scope: !13889, inlinedAt: !15034)
!15034 = distinct !DILocation(line: 229, column: 2, scope: !13882, inlinedAt: !15032)
!15035 = !DILocation(line: 186, column: 2, scope: !13899, inlinedAt: !15034)
!15036 = !DILocation(line: 186, column: 2, scope: !13900, inlinedAt: !15034)
!15037 = !DILocation(line: 186, column: 2, scope: !13903, inlinedAt: !15034)
!15038 = !DILocation(line: 188, column: 2, scope: !13905, inlinedAt: !15034)
!15039 = !DILocation(line: 188, column: 2, scope: !13907, inlinedAt: !15034)
!15040 = !DILocation(line: 0, scope: !13905, inlinedAt: !15034)
!15041 = !DILocation(line: 189, column: 7, scope: !13910, inlinedAt: !15034)
!15042 = !DILocation(line: 189, column: 35, scope: !13910, inlinedAt: !15034)
!15043 = !DILocation(line: 189, column: 7, scope: !13911, inlinedAt: !15034)
!15044 = !DILocation(line: 190, column: 4, scope: !13915, inlinedAt: !15034)
!15045 = !DILocation(line: 192, column: 4, scope: !13915, inlinedAt: !15034)
!15046 = distinct !{!15046, !15038, !15047}
!15047 = !DILocation(line: 194, column: 2, scope: !13905, inlinedAt: !15034)
!15048 = !DILocation(line: 196, column: 2, scope: !13889, inlinedAt: !15034)
!15049 = !DILocation(line: 197, column: 1, scope: !13889, inlinedAt: !15034)
!15050 = !DILocation(line: 918, column: 4, scope: !15021)
!15051 = !DILocation(line: 919, column: 3, scope: !15021)
!15052 = !DILocation(line: 920, column: 22, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15022, file: !2302, line: 919, column: 10)
!15054 = !DILocation(line: 0, scope: !13700, inlinedAt: !15055)
!15055 = distinct !DILocation(line: 906, column: 2, scope: !15015)
!15056 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !15055)
!15057 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !15055)
!15058 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !15055)
!15059 = !DILocation(line: 0, scope: !13714, inlinedAt: !15060)
!15060 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !15055)
!15061 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !15060)
!15062 = !DILocation(line: 926, column: 2, scope: !14994)
!15063 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2302, file: !2302, line: 929, type: !15064, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15066)
!15064 = !DISubroutineType(types: !15065)
!15065 = !{null, !2194, !119}
!15066 = !{!15067, !15068, !15069}
!15067 = !DILocalVariable(name: "thread", arg: 1, scope: !15063, file: !2302, line: 929, type: !2194)
!15068 = !DILocalVariable(name: "prio", arg: 2, scope: !15063, file: !2302, line: 929, type: !119)
!15069 = !DILocalVariable(name: "need_sched", scope: !15063, file: !2302, line: 931, type: !345)
!15070 = !DILocation(line: 0, scope: !15063)
!15071 = !DILocation(line: 931, column: 20, scope: !15063)
!15072 = !DILocation(line: 935, column: 17, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15063, file: !2302, line: 935, column: 6)
!15074 = !DILocation(line: 935, column: 20, scope: !15073)
!15075 = !DILocation(line: 935, column: 35, scope: !15073)
!15076 = !DILocation(line: 935, column: 48, scope: !15073)
!15077 = !DILocation(line: 935, column: 6, scope: !15063)
!15078 = !DILocation(line: 936, column: 3, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15073, file: !2302, line: 935, column: 55)
!15080 = !DILocation(line: 937, column: 2, scope: !15079)
!15081 = !DILocation(line: 938, column: 1, scope: !15063)
!15082 = distinct !DISubprogram(name: "k_sched_lock", scope: !2302, file: !2302, line: 987, type: !2936, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15083)
!15083 = !{!15084, !15086}
!15084 = !DILocalVariable(name: "__i", scope: !15085, file: !2302, line: 989, type: !13658)
!15085 = distinct !DILexicalBlock(scope: !15082, file: !2302, line: 989, column: 2)
!15086 = !DILocalVariable(name: "__key", scope: !15085, file: !2302, line: 989, type: !13658)
!15087 = !DILocation(line: 0, scope: !15085)
!15088 = !DILocation(line: 0, scope: !13666, inlinedAt: !15089)
!15089 = distinct !DILocation(line: 989, column: 2, scope: !15085)
!15090 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !15091)
!15091 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !15089)
!15092 = !DILocation(line: 0, scope: !13675, inlinedAt: !15091)
!15093 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !15089)
!15094 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !15089)
!15095 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !15089)
!15096 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !15089)
!15097 = !DILocation(line: 992, column: 3, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !15099, file: !2302, line: 989, column: 26)
!15099 = distinct !DILexicalBlock(scope: !15085, file: !2302, line: 989, column: 2)
!15100 = !DILocation(line: 0, scope: !13700, inlinedAt: !15101)
!15101 = distinct !DILocation(line: 989, column: 2, scope: !15099)
!15102 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !15101)
!15103 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !15101)
!15104 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !15101)
!15105 = !DILocation(line: 0, scope: !13714, inlinedAt: !15106)
!15106 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !15101)
!15107 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !15106)
!15108 = !DILocation(line: 994, column: 1, scope: !15082)
!15109 = distinct !DISubprogram(name: "z_sched_lock", scope: !12828, file: !12828, line: 251, type: !2936, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!15110 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15111)
!15111 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15112)
!15112 = distinct !DILocation(line: 253, column: 2, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15114, file: !12828, line: 253, column: 2)
!15114 = distinct !DILexicalBlock(scope: !15109, file: !12828, line: 253, column: 2)
!15115 = !DILocation(line: 0, scope: !14393, inlinedAt: !15111)
!15116 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15112)
!15117 = !DILocation(line: 253, column: 2, scope: !15114)
!15118 = !DILocation(line: 253, column: 2, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15113, file: !12828, line: 253, column: 2)
!15120 = !DILocation(line: 254, column: 2, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15122, file: !12828, line: 254, column: 2)
!15122 = distinct !DILexicalBlock(scope: !15109, file: !12828, line: 254, column: 2)
!15123 = !DILocation(line: 254, column: 2, scope: !15122)
!15124 = !DILocation(line: 254, column: 2, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15121, file: !12828, line: 254, column: 2)
!15126 = !DILocation(line: 256, column: 2, scope: !15109)
!15127 = !DILocation(line: 258, column: 2, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15109, file: !12828, line: 258, column: 2)
!15129 = !{i64 2154199867}
!15130 = !DILocation(line: 259, column: 1, scope: !15109)
!15131 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2302, file: !2302, line: 996, type: !2936, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15132)
!15132 = !{!15133, !15135}
!15133 = !DILocalVariable(name: "__i", scope: !15134, file: !2302, line: 998, type: !13658)
!15134 = distinct !DILexicalBlock(scope: !15131, file: !2302, line: 998, column: 2)
!15135 = !DILocalVariable(name: "__key", scope: !15134, file: !2302, line: 998, type: !13658)
!15136 = !DILocation(line: 0, scope: !15134)
!15137 = !DILocation(line: 0, scope: !13666, inlinedAt: !15138)
!15138 = distinct !DILocation(line: 998, column: 2, scope: !15134)
!15139 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !15140)
!15140 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !15138)
!15141 = !DILocation(line: 0, scope: !13675, inlinedAt: !15140)
!15142 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !15138)
!15143 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !15138)
!15144 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !15138)
!15145 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !15138)
!15146 = !DILocation(line: 999, column: 3, scope: !15147)
!15147 = distinct !DILexicalBlock(scope: !15148, file: !2302, line: 999, column: 3)
!15148 = distinct !DILexicalBlock(scope: !15149, file: !2302, line: 999, column: 3)
!15149 = distinct !DILexicalBlock(scope: !15150, file: !2302, line: 998, column: 26)
!15150 = distinct !DILexicalBlock(scope: !15134, file: !2302, line: 998, column: 2)
!15151 = !DILocation(line: 999, column: 3, scope: !15148)
!15152 = !DILocation(line: 999, column: 3, scope: !15153)
!15153 = distinct !DILexicalBlock(scope: !15147, file: !2302, line: 999, column: 3)
!15154 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15155)
!15155 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15156)
!15156 = distinct !DILocation(line: 1000, column: 3, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15158, file: !2302, line: 1000, column: 3)
!15158 = distinct !DILexicalBlock(scope: !15149, file: !2302, line: 1000, column: 3)
!15159 = !DILocation(line: 0, scope: !14393, inlinedAt: !15155)
!15160 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15156)
!15161 = !DILocation(line: 1000, column: 3, scope: !15158)
!15162 = !DILocation(line: 1000, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15157, file: !2302, line: 1000, column: 3)
!15164 = !DILocation(line: 1002, column: 5, scope: !15149)
!15165 = !DILocation(line: 1002, column: 20, scope: !15149)
!15166 = !DILocation(line: 1002, column: 3, scope: !15149)
!15167 = !DILocation(line: 1003, column: 3, scope: !15149)
!15168 = !DILocation(line: 0, scope: !13700, inlinedAt: !15169)
!15169 = distinct !DILocation(line: 998, column: 2, scope: !15150)
!15170 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !15169)
!15171 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !15169)
!15172 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !15169)
!15173 = !DILocation(line: 0, scope: !13714, inlinedAt: !15174)
!15174 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !15169)
!15175 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !15174)
!15176 = !DILocation(line: 1011, column: 2, scope: !15131)
!15177 = !DILocation(line: 1012, column: 1, scope: !15131)
!15178 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2302, file: !2302, line: 1014, type: !14015, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!15179 = !DILocation(line: 1028, column: 25, scope: !15178)
!15180 = !DILocation(line: 1028, column: 2, scope: !15178)
!15181 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2302, file: !2302, line: 1155, type: !15182, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15184)
!15182 = !DISubroutineType(types: !15183)
!15183 = !{!345, !2223, !2223}
!15184 = !{!15185, !15186, !15187, !15188, !15189}
!15185 = !DILocalVariable(name: "a", arg: 1, scope: !15181, file: !2302, line: 1155, type: !2223)
!15186 = !DILocalVariable(name: "b", arg: 2, scope: !15181, file: !2302, line: 1155, type: !2223)
!15187 = !DILocalVariable(name: "thread_a", scope: !15181, file: !2302, line: 1157, type: !2194)
!15188 = !DILocalVariable(name: "thread_b", scope: !15181, file: !2302, line: 1157, type: !2194)
!15189 = !DILocalVariable(name: "cmp", scope: !15181, file: !2302, line: 1158, type: !743)
!15190 = !DILocation(line: 0, scope: !15181)
!15191 = !DILocation(line: 1160, column: 13, scope: !15181)
!15192 = !DILocation(line: 1161, column: 13, scope: !15181)
!15193 = !DILocation(line: 1163, column: 8, scope: !15181)
!15194 = !DILocation(line: 1165, column: 10, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15181, file: !2302, line: 1165, column: 6)
!15196 = !DILocation(line: 1165, column: 6, scope: !15181)
!15197 = !DILocation(line: 1167, column: 17, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15195, file: !2302, line: 1167, column: 13)
!15199 = !DILocation(line: 1167, column: 13, scope: !15195)
!15200 = !DILocation(line: 1170, column: 25, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15198, file: !2302, line: 1169, column: 9)
!15202 = !DILocation(line: 1170, column: 52, scope: !15201)
!15203 = !DILocation(line: 1170, column: 35, scope: !15201)
!15204 = !DILocation(line: 1170, column: 3, scope: !15201)
!15205 = !DILocation(line: 0, scope: !15195)
!15206 = !DILocation(line: 1173, column: 1, scope: !15181)
!15207 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2302, file: !2302, line: 1175, type: !15208, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15223)
!15208 = !DISubroutineType(types: !15209)
!15209 = !{null, !15210, !2194}
!15210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15211, size: 32)
!15211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15212, line: 37, size: 128, elements: !15213)
!15212 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15213 = !{!15214, !15222}
!15214 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15211, file: !15212, line: 38, baseType: !15215, size: 96)
!15215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !169, line: 83, size: 96, elements: !15216)
!15216 = !{!15217, !15218, !15221}
!15217 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15215, file: !169, line: 84, baseType: !2223, size: 32)
!15218 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15215, file: !169, line: 85, baseType: !15219, size: 32, offset: 32)
!15219 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !169, line: 81, baseType: !15220)
!15220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15182, size: 32)
!15221 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15215, file: !169, line: 86, baseType: !119, size: 32, offset: 64)
!15222 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15211, file: !15212, line: 39, baseType: !119, size: 32, offset: 96)
!15223 = !{!15224, !15225, !15226, !15227, !15236}
!15224 = !DILocalVariable(name: "pq", arg: 1, scope: !15207, file: !2302, line: 1175, type: !15210)
!15225 = !DILocalVariable(name: "thread", arg: 2, scope: !15207, file: !2302, line: 1175, type: !2194)
!15226 = !DILocalVariable(name: "t", scope: !15207, file: !2302, line: 1177, type: !2194)
!15227 = !DILocalVariable(name: "__f", scope: !15228, file: !2302, line: 1190, type: !15231)
!15228 = distinct !DILexicalBlock(scope: !15229, file: !2302, line: 1190, column: 3)
!15229 = distinct !DILexicalBlock(scope: !15230, file: !2302, line: 1189, column: 27)
!15230 = distinct !DILexicalBlock(scope: !15207, file: !2302, line: 1189, column: 6)
!15231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !169, line: 155, size: 96, elements: !15232)
!15232 = !{!15233, !15234, !15235}
!15233 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15231, file: !169, line: 156, baseType: !2297, size: 32)
!15234 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15231, file: !169, line: 157, baseType: !284, size: 32, offset: 32)
!15235 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15231, file: !169, line: 158, baseType: !743, size: 32, offset: 64)
!15236 = !DILocalVariable(name: "n", scope: !15237, file: !2302, line: 1190, type: !2223)
!15237 = distinct !DILexicalBlock(scope: !15238, file: !2302, line: 1190, column: 3)
!15238 = distinct !DILexicalBlock(scope: !15228, file: !2302, line: 1190, column: 3)
!15239 = !DILocation(line: 0, scope: !15207)
!15240 = !DILocation(line: 1179, column: 2, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15242, file: !2302, line: 1179, column: 2)
!15242 = distinct !DILexicalBlock(scope: !15207, file: !2302, line: 1179, column: 2)
!15243 = !DILocation(line: 1179, column: 2, scope: !15242)
!15244 = !DILocation(line: 1179, column: 2, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15241, file: !2302, line: 1179, column: 2)
!15246 = !DILocation(line: 1181, column: 31, scope: !15207)
!15247 = !DILocation(line: 1181, column: 45, scope: !15207)
!15248 = !DILocation(line: 1181, column: 15, scope: !15207)
!15249 = !DILocation(line: 1181, column: 25, scope: !15207)
!15250 = !DILocation(line: 1189, column: 11, scope: !15230)
!15251 = !DILocation(line: 1189, column: 7, scope: !15230)
!15252 = !DILocation(line: 1189, column: 6, scope: !15207)
!15253 = !DILocation(line: 1190, column: 3, scope: !15228)
!15254 = !DILocation(line: 1190, column: 3, scope: !15237)
!15255 = !DILocation(line: 0, scope: !15237)
!15256 = !DILocation(line: 1190, column: 3, scope: !15238)
!15257 = !DILocation(line: 1193, column: 2, scope: !15229)
!15258 = !DILocation(line: 1191, column: 42, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15238, file: !2302, line: 1190, column: 54)
!15260 = !DILocation(line: 1191, column: 12, scope: !15259)
!15261 = !DILocation(line: 1191, column: 22, scope: !15259)
!15262 = distinct !{!15262, !15253, !15263}
!15263 = !DILocation(line: 1192, column: 3, scope: !15228)
!15264 = !DILocation(line: 1195, column: 17, scope: !15207)
!15265 = !DILocation(line: 1195, column: 37, scope: !15207)
!15266 = !DILocation(line: 1195, column: 2, scope: !15207)
!15267 = !DILocation(line: 1196, column: 1, scope: !15207)
!15268 = !DISubprogram(name: "z_rb_foreach_next", scope: !169, file: !169, line: 176, type: !15269, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!15269 = !DISubroutineType(types: !15270)
!15270 = !{!2223, !15271, !15272}
!15271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15215, size: 32)
!15272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15231, size: 32)
!15273 = !DISubprogram(name: "rb_insert", scope: !169, file: !169, line: 105, type: !15274, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!15274 = !DISubroutineType(types: !15275)
!15275 = !{null, !15271, !2223}
!15276 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2302, file: !2302, line: 1198, type: !15208, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15277)
!15277 = !{!15278, !15279}
!15278 = !DILocalVariable(name: "pq", arg: 1, scope: !15276, file: !2302, line: 1198, type: !15210)
!15279 = !DILocalVariable(name: "thread", arg: 2, scope: !15276, file: !2302, line: 1198, type: !2194)
!15280 = !DILocation(line: 0, scope: !15276)
!15281 = !DILocation(line: 1200, column: 2, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15283, file: !2302, line: 1200, column: 2)
!15283 = distinct !DILexicalBlock(scope: !15276, file: !2302, line: 1200, column: 2)
!15284 = !DILocation(line: 1200, column: 2, scope: !15283)
!15285 = !DILocation(line: 1200, column: 2, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15282, file: !2302, line: 1200, column: 2)
!15287 = !DILocation(line: 1202, column: 17, scope: !15276)
!15288 = !DILocation(line: 1202, column: 37, scope: !15276)
!15289 = !DILocation(line: 1202, column: 2, scope: !15276)
!15290 = !DILocation(line: 1204, column: 16, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15276, file: !2302, line: 1204, column: 6)
!15292 = !DILocation(line: 1204, column: 7, scope: !15291)
!15293 = !DILocation(line: 1204, column: 6, scope: !15276)
!15294 = !DILocation(line: 1205, column: 7, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15291, file: !2302, line: 1204, column: 22)
!15296 = !DILocation(line: 1205, column: 22, scope: !15295)
!15297 = !DILocation(line: 1206, column: 2, scope: !15295)
!15298 = !DILocation(line: 1207, column: 1, scope: !15276)
!15299 = !DISubprogram(name: "rb_remove", scope: !169, file: !169, line: 110, type: !15274, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!15300 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2302, file: !2302, line: 1209, type: !15301, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15303)
!15301 = !DISubroutineType(types: !15302)
!15302 = !{!2194, !15210}
!15303 = !{!15304, !15305, !15306}
!15304 = !DILocalVariable(name: "pq", arg: 1, scope: !15300, file: !2302, line: 1209, type: !15210)
!15305 = !DILocalVariable(name: "thread", scope: !15300, file: !2302, line: 1211, type: !2194)
!15306 = !DILocalVariable(name: "n", scope: !15300, file: !2302, line: 1212, type: !2223)
!15307 = !DILocation(line: 0, scope: !15300)
!15308 = !DILocation(line: 1212, column: 37, scope: !15300)
!15309 = !DILocation(line: 1212, column: 21, scope: !15300)
!15310 = !DILocation(line: 1217, column: 2, scope: !15300)
!15311 = distinct !DISubprogram(name: "rb_get_min", scope: !169, file: !169, line: 115, type: !15312, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15314)
!15312 = !DISubroutineType(types: !15313)
!15313 = !{!2223, !15271}
!15314 = !{!15315}
!15315 = !DILocalVariable(name: "tree", arg: 1, scope: !15311, file: !169, line: 115, type: !15271)
!15316 = !DILocation(line: 0, scope: !15311)
!15317 = !DILocation(line: 117, column: 9, scope: !15311)
!15318 = !DILocation(line: 117, column: 2, scope: !15311)
!15319 = !DISubprogram(name: "z_rb_get_minmax", scope: !169, file: !169, line: 100, type: !15320, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2000)
!15320 = !DISubroutineType(types: !15321)
!15321 = !{!2223, !15271, !185}
!15322 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2302, file: !2302, line: 1246, type: !15323, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15331)
!15323 = !DISubroutineType(types: !15324)
!15324 = !{!2194, !15325}
!15325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15326, size: 32)
!15326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15212, line: 53, size: 2080, elements: !15327)
!15327 = !{!15328, !15330}
!15328 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15326, file: !15212, line: 54, baseType: !15329, size: 2048)
!15329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2230, size: 2048, elements: !231)
!15330 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15326, file: !15212, line: 55, baseType: !32, size: 32, offset: 2048)
!15331 = !{!15332, !15333, !15334, !15335}
!15332 = !DILocalVariable(name: "pq", arg: 1, scope: !15322, file: !2302, line: 1246, type: !15325)
!15333 = !DILocalVariable(name: "thread", scope: !15322, file: !2302, line: 1252, type: !2194)
!15334 = !DILocalVariable(name: "l", scope: !15322, file: !2302, line: 1253, type: !13892)
!15335 = !DILocalVariable(name: "n", scope: !15322, file: !2302, line: 1254, type: !2298)
!15336 = !DILocation(line: 0, scope: !15322)
!15337 = !DILocation(line: 1248, column: 11, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15322, file: !2302, line: 1248, column: 6)
!15339 = !DILocation(line: 1248, column: 7, scope: !15338)
!15340 = !DILocation(line: 1248, column: 6, scope: !15322)
!15341 = !DILocation(line: 1253, column: 31, scope: !15322)
!15342 = !DILocation(line: 1253, column: 20, scope: !15322)
!15343 = !DILocation(line: 1254, column: 19, scope: !15322)
!15344 = !DILocation(line: 1260, column: 1, scope: !15322)
!15345 = distinct !DISubprogram(name: "z_unpend_all", scope: !2302, file: !2302, line: 1262, type: !15346, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15348)
!15346 = !DISubroutineType(types: !15347)
!15347 = !{!119, !2225}
!15348 = !{!15349, !15350, !15351}
!15349 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15345, file: !2302, line: 1262, type: !2225)
!15350 = !DILocalVariable(name: "need_sched", scope: !15345, file: !2302, line: 1264, type: !119)
!15351 = !DILocalVariable(name: "thread", scope: !15345, file: !2302, line: 1265, type: !2194)
!15352 = !DILocation(line: 0, scope: !15345)
!15353 = !DILocation(line: 1267, column: 19, scope: !15345)
!15354 = !DILocation(line: 1267, column: 41, scope: !15345)
!15355 = !DILocation(line: 1267, column: 2, scope: !15345)
!15356 = !DILocation(line: 1268, column: 3, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15345, file: !2302, line: 1267, column: 50)
!15358 = !DILocation(line: 1269, column: 3, scope: !15357)
!15359 = distinct !{!15359, !15355, !15360}
!15360 = !DILocation(line: 1271, column: 2, scope: !15345)
!15361 = !DILocation(line: 1273, column: 2, scope: !15345)
!15362 = distinct !DISubprogram(name: "z_waitq_head", scope: !13189, file: !13189, line: 52, type: !14893, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15363)
!15363 = !{!15364}
!15364 = !DILocalVariable(name: "w", arg: 1, scope: !15362, file: !13189, line: 52, type: !2225)
!15365 = !DILocation(line: 0, scope: !15362)
!15366 = !DILocation(line: 54, column: 52, scope: !15362)
!15367 = !DILocation(line: 54, column: 28, scope: !15362)
!15368 = !DILocation(line: 54, column: 9, scope: !15362)
!15369 = !DILocation(line: 54, column: 2, scope: !15362)
!15370 = distinct !DISubprogram(name: "init_ready_q", scope: !2302, file: !2302, line: 1276, type: !15371, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15378)
!15371 = !DISubroutineType(types: !15372)
!15372 = !{null, !15373}
!15373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15374, size: 32)
!15374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !15375)
!15375 = !{!15376, !15377}
!15376 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15374, file: !179, line: 86, baseType: !2194, size: 32)
!15377 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15374, file: !179, line: 90, baseType: !2230, size: 64, offset: 32)
!15378 = !{!15379}
!15379 = !DILocalVariable(name: "rq", arg: 1, scope: !15370, file: !2302, line: 1276, type: !15373)
!15380 = !DILocation(line: 0, scope: !15370)
!15381 = !DILocation(line: 1289, column: 22, scope: !15370)
!15382 = !DILocation(line: 1289, column: 2, scope: !15370)
!15383 = !DILocation(line: 1291, column: 1, scope: !15370)
!15384 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !15385, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15387)
!15385 = !DISubroutineType(types: !15386)
!15386 = !{null, !13892}
!15387 = !{!15388}
!15388 = !DILocalVariable(name: "list", arg: 1, scope: !15384, file: !153, line: 197, type: !13892)
!15389 = !DILocation(line: 0, scope: !15384)
!15390 = !DILocation(line: 199, column: 8, scope: !15384)
!15391 = !DILocation(line: 199, column: 13, scope: !15384)
!15392 = !DILocation(line: 200, column: 8, scope: !15384)
!15393 = !DILocation(line: 200, column: 13, scope: !15384)
!15394 = !DILocation(line: 201, column: 1, scope: !15384)
!15395 = distinct !DISubprogram(name: "z_sched_init", scope: !2302, file: !2302, line: 1293, type: !2936, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!15396 = !DILocation(line: 1302, column: 2, scope: !15395)
!15397 = !DILocation(line: 1306, column: 2, scope: !15395)
!15398 = !DILocation(line: 1309, column: 1, scope: !15395)
!15399 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2302, file: !2302, line: 1311, type: !15400, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15403)
!15400 = !DISubroutineType(types: !15401)
!15401 = !{!119, !15402}
!15402 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2194)
!15403 = !{!15404}
!15404 = !DILocalVariable(name: "thread", arg: 1, scope: !15399, file: !2302, line: 1311, type: !15402)
!15405 = !DILocation(line: 0, scope: !15399)
!15406 = !DILocation(line: 1313, column: 22, scope: !15399)
!15407 = !DILocation(line: 1313, column: 9, scope: !15399)
!15408 = !DILocation(line: 1313, column: 2, scope: !15399)
!15409 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2302, file: !2302, line: 1325, type: !15410, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15412)
!15410 = !DISubroutineType(types: !15411)
!15411 = !{null, !15402, !119}
!15412 = !{!15413, !15414, !15415}
!15413 = !DILocalVariable(name: "thread", arg: 1, scope: !15409, file: !2302, line: 1325, type: !15402)
!15414 = !DILocalVariable(name: "prio", arg: 2, scope: !15409, file: !2302, line: 1325, type: !119)
!15415 = !DILocalVariable(name: "th", scope: !15409, file: !2302, line: 1334, type: !2194)
!15416 = !DILocation(line: 0, scope: !15409)
!15417 = !DILocation(line: 1331, column: 2, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15419, file: !2302, line: 1331, column: 2)
!15419 = distinct !DILexicalBlock(scope: !15420, file: !2302, line: 1331, column: 2)
!15420 = distinct !DILexicalBlock(scope: !15409, file: !2302, line: 1331, column: 2)
!15421 = !DILocation(line: 1331, column: 2, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15418, file: !2302, line: 1331, column: 2)
!15423 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15424)
!15424 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15425)
!15425 = distinct !DILocation(line: 1332, column: 2, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15427, file: !2302, line: 1332, column: 2)
!15427 = distinct !DILexicalBlock(scope: !15409, file: !2302, line: 1332, column: 2)
!15428 = !DILocation(line: 0, scope: !14393, inlinedAt: !15424)
!15429 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15425)
!15430 = !DILocation(line: 1332, column: 2, scope: !15427)
!15431 = !DILocation(line: 1332, column: 2, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15426, file: !2302, line: 1332, column: 2)
!15433 = !DILocation(line: 1336, column: 2, scope: !15409)
!15434 = !DILocation(line: 1337, column: 1, scope: !15409)
!15435 = distinct !DISubprogram(name: "k_can_yield", scope: !2302, file: !2302, line: 1384, type: !7331, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!15436 = !DILocation(line: 1386, column: 11, scope: !15435)
!15437 = !DILocation(line: 1386, column: 29, scope: !15435)
!15438 = !DILocation(line: 1386, column: 32, scope: !15435)
!15439 = !DILocation(line: 1386, column: 46, scope: !15435)
!15440 = !DILocation(line: 1387, column: 28, scope: !15435)
!15441 = !DILocation(line: 1387, column: 4, scope: !15435)
!15442 = !DILocation(line: 1386, column: 2, scope: !15435)
!15443 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !245, file: !245, line: 989, type: !7331, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!15444 = !DILocation(line: 993, column: 10, scope: !15443)
!15445 = !DILocation(line: 993, column: 2, scope: !15443)
!15446 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2302, file: !2302, line: 1390, type: !2936, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15447)
!15447 = !{!15448}
!15448 = !DILocalVariable(name: "key", scope: !15446, file: !2302, line: 1396, type: !13658)
!15449 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15450)
!15450 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 1392, column: 2, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15453, file: !2302, line: 1392, column: 2)
!15453 = distinct !DILexicalBlock(scope: !15446, file: !2302, line: 1392, column: 2)
!15454 = !DILocation(line: 0, scope: !14393, inlinedAt: !15450)
!15455 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15451)
!15456 = !DILocation(line: 1392, column: 2, scope: !15453)
!15457 = !DILocation(line: 1392, column: 2, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15452, file: !2302, line: 1392, column: 2)
!15459 = !DILocation(line: 0, scope: !13666, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 1396, column: 25, scope: !15446)
!15461 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !15460)
!15463 = !DILocation(line: 0, scope: !13675, inlinedAt: !15462)
!15464 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !15460)
!15465 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !15460)
!15466 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !15460)
!15467 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !15460)
!15468 = !DILocation(line: 0, scope: !15446)
!15469 = !DILocation(line: 1400, column: 18, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15471, file: !2302, line: 1399, column: 36)
!15471 = distinct !DILexicalBlock(scope: !15446, file: !2302, line: 1398, column: 6)
!15472 = !DILocation(line: 0, scope: !13858, inlinedAt: !15473)
!15473 = distinct !DILocation(line: 1400, column: 3, scope: !15470)
!15474 = !DILocation(line: 266, column: 15, scope: !13858, inlinedAt: !15473)
!15475 = !DILocation(line: 266, column: 28, scope: !13858, inlinedAt: !15473)
!15476 = !DILocation(line: 0, scope: !13866, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 268, column: 3, scope: !13870, inlinedAt: !15473)
!15478 = !DILocation(line: 234, column: 2, scope: !13866, inlinedAt: !15477)
!15479 = !DILocation(line: 1402, column: 15, scope: !15446)
!15480 = !DILocation(line: 0, scope: !13875, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 1402, column: 2, scope: !15446)
!15482 = !DILocation(line: 252, column: 15, scope: !13875, inlinedAt: !15481)
!15483 = !DILocation(line: 252, column: 28, scope: !13875, inlinedAt: !15481)
!15484 = !DILocation(line: 0, scope: !13882, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 254, column: 3, scope: !13886, inlinedAt: !15481)
!15486 = !DILocation(line: 0, scope: !13889, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 229, column: 2, scope: !13882, inlinedAt: !15485)
!15488 = !DILocation(line: 186, column: 2, scope: !13899, inlinedAt: !15487)
!15489 = !DILocation(line: 186, column: 2, scope: !13900, inlinedAt: !15487)
!15490 = !DILocation(line: 186, column: 2, scope: !13903, inlinedAt: !15487)
!15491 = !DILocation(line: 188, column: 2, scope: !13905, inlinedAt: !15487)
!15492 = !DILocation(line: 188, column: 2, scope: !13907, inlinedAt: !15487)
!15493 = !DILocation(line: 0, scope: !13905, inlinedAt: !15487)
!15494 = !DILocation(line: 189, column: 7, scope: !13910, inlinedAt: !15487)
!15495 = !DILocation(line: 189, column: 35, scope: !13910, inlinedAt: !15487)
!15496 = !DILocation(line: 189, column: 7, scope: !13911, inlinedAt: !15487)
!15497 = !DILocation(line: 191, column: 21, scope: !13915, inlinedAt: !15487)
!15498 = !DILocation(line: 190, column: 4, scope: !13915, inlinedAt: !15487)
!15499 = !DILocation(line: 192, column: 4, scope: !13915, inlinedAt: !15487)
!15500 = distinct !{!15500, !15491, !15501}
!15501 = !DILocation(line: 194, column: 2, scope: !13905, inlinedAt: !15487)
!15502 = !DILocation(line: 196, column: 37, scope: !13889, inlinedAt: !15487)
!15503 = !DILocation(line: 196, column: 2, scope: !13889, inlinedAt: !15487)
!15504 = !DILocation(line: 197, column: 1, scope: !13889, inlinedAt: !15487)
!15505 = !DILocation(line: 1403, column: 2, scope: !15446)
!15506 = !DILocation(line: 0, scope: !14344, inlinedAt: !15507)
!15507 = distinct !DILocation(line: 1404, column: 2, scope: !15446)
!15508 = !DILocation(line: 0, scope: !14353, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 195, column: 2, scope: !14344, inlinedAt: !15507)
!15510 = !DILocation(line: 225, column: 2, scope: !14360, inlinedAt: !15509)
!15511 = !DILocation(line: 225, column: 2, scope: !14361, inlinedAt: !15509)
!15512 = !DILocation(line: 225, column: 2, scope: !14364, inlinedAt: !15509)
!15513 = !DILocation(line: 196, column: 9, scope: !14344, inlinedAt: !15507)
!15514 = !DILocation(line: 1405, column: 1, scope: !15446)
!15515 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2302, file: !2302, line: 1459, type: !15516, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15518)
!15516 = !DISubroutineType(types: !15517)
!15517 = !{!743, !14554}
!15518 = !{!15519, !15520, !15521}
!15519 = !DILocalVariable(name: "timeout", arg: 1, scope: !15515, file: !2302, line: 1459, type: !14554)
!15520 = !DILocalVariable(name: "ticks", scope: !15515, file: !2302, line: 1461, type: !114)
!15521 = !DILocalVariable(name: "ret", scope: !15515, file: !2302, line: 1480, type: !743)
!15522 = !DILocation(line: 0, scope: !15515)
!15523 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 1463, column: 2, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !2302, line: 1463, column: 2)
!15527 = distinct !DILexicalBlock(scope: !15515, file: !2302, line: 1463, column: 2)
!15528 = !DILocation(line: 0, scope: !14393, inlinedAt: !15524)
!15529 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15525)
!15530 = !DILocation(line: 1463, column: 2, scope: !15527)
!15531 = !DILocation(line: 1463, column: 2, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15526, file: !2302, line: 1463, column: 2)
!15533 = !DILocation(line: 1468, column: 6, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15515, file: !2302, line: 1468, column: 6)
!15535 = !DILocation(line: 1468, column: 6, scope: !15515)
!15536 = !DILocation(line: 1469, column: 20, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15534, file: !2302, line: 1468, column: 40)
!15538 = !DILocation(line: 1469, column: 3, scope: !15537)
!15539 = !DILocation(line: 1473, column: 3, scope: !15537)
!15540 = !DILocation(line: 1478, column: 10, scope: !15515)
!15541 = !DILocation(line: 1480, column: 16, scope: !15515)
!15542 = !DILocation(line: 1485, column: 1, scope: !15515)
!15543 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3187, file: !3187, line: 310, type: !15544, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15546)
!15544 = !DISubroutineType(types: !15545)
!15545 = !{null, !15402}
!15546 = !{!15547}
!15547 = !DILocalVariable(name: "thread", arg: 1, scope: !15543, file: !3187, line: 310, type: !15402)
!15548 = !DILocation(line: 0, scope: !15543)
!15549 = !DILocation(line: 319, column: 2, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15543, file: !3187, line: 319, column: 2)
!15551 = !{i64 2154116025}
!15552 = !DILocation(line: 320, column: 2, scope: !15543)
!15553 = !DILocation(line: 321, column: 1, scope: !15543)
!15554 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2302, file: !2302, line: 1415, type: !15555, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15557)
!15555 = !DISubroutineType(types: !15556)
!15556 = !{!743, !114}
!15557 = !{!15558, !15559, !15560, !15561}
!15558 = !DILocalVariable(name: "ticks", arg: 1, scope: !15554, file: !2302, line: 1415, type: !114)
!15559 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15554, file: !2302, line: 1418, type: !118)
!15560 = !DILocalVariable(name: "timeout", scope: !15554, file: !2302, line: 1430, type: !14554)
!15561 = !DILocalVariable(name: "key", scope: !15554, file: !2302, line: 1437, type: !13658)
!15562 = !DILocation(line: 0, scope: !15554)
!15563 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15564)
!15564 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 1420, column: 2, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15567, file: !2302, line: 1420, column: 2)
!15567 = distinct !DILexicalBlock(scope: !15554, file: !2302, line: 1420, column: 2)
!15568 = !DILocation(line: 0, scope: !14393, inlinedAt: !15564)
!15569 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15565)
!15570 = !DILocation(line: 1420, column: 2, scope: !15567)
!15571 = !DILocation(line: 1420, column: 2, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15566, file: !2302, line: 1420, column: 2)
!15573 = !DILocation(line: 1425, column: 12, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15554, file: !2302, line: 1425, column: 6)
!15575 = !DILocation(line: 1425, column: 6, scope: !15554)
!15576 = !DILocation(line: 1426, column: 3, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15574, file: !2302, line: 1425, column: 18)
!15578 = !DILocation(line: 1427, column: 3, scope: !15577)
!15579 = !DILocation(line: 1431, column: 24, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15554, file: !2302, line: 1431, column: 6)
!15581 = !DILocation(line: 1431, column: 6, scope: !15554)
!15582 = !DILocation(line: 1432, column: 35, scope: !15583)
!15583 = distinct !DILexicalBlock(scope: !15580, file: !2302, line: 1431, column: 30)
!15584 = !DILocation(line: 1432, column: 27, scope: !15583)
!15585 = !DILocation(line: 1433, column: 2, scope: !15583)
!15586 = !DILocation(line: 1434, column: 27, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15580, file: !2302, line: 1433, column: 9)
!15588 = !DILocation(line: 0, scope: !15580)
!15589 = !DILocation(line: 0, scope: !13666, inlinedAt: !15590)
!15590 = distinct !DILocation(line: 1437, column: 25, scope: !15554)
!15591 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !15592)
!15592 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !15590)
!15593 = !DILocation(line: 0, scope: !13675, inlinedAt: !15592)
!15594 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !15590)
!15595 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !15590)
!15596 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !15590)
!15597 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !15590)
!15598 = !DILocation(line: 1440, column: 20, scope: !15554)
!15599 = !DILocation(line: 1440, column: 18, scope: !15554)
!15600 = !DILocation(line: 1442, column: 2, scope: !15554)
!15601 = !DILocation(line: 1443, column: 23, scope: !15554)
!15602 = !DILocation(line: 1443, column: 2, scope: !15554)
!15603 = !DILocation(line: 1444, column: 29, scope: !15554)
!15604 = !DILocation(line: 1444, column: 2, scope: !15554)
!15605 = !DILocation(line: 0, scope: !14344, inlinedAt: !15606)
!15606 = distinct !DILocation(line: 1446, column: 8, scope: !15554)
!15607 = !DILocation(line: 0, scope: !14353, inlinedAt: !15608)
!15608 = distinct !DILocation(line: 195, column: 2, scope: !14344, inlinedAt: !15606)
!15609 = !DILocation(line: 225, column: 2, scope: !14360, inlinedAt: !15608)
!15610 = !DILocation(line: 225, column: 2, scope: !14361, inlinedAt: !15608)
!15611 = !DILocation(line: 225, column: 2, scope: !14364, inlinedAt: !15608)
!15612 = !DILocation(line: 196, column: 9, scope: !14344, inlinedAt: !15606)
!15613 = !DILocation(line: 1448, column: 2, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15615, file: !2302, line: 1448, column: 2)
!15615 = distinct !DILexicalBlock(scope: !15554, file: !2302, line: 1448, column: 2)
!15616 = !DILocation(line: 1448, column: 2, scope: !15615)
!15617 = !DILocation(line: 1448, column: 2, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15614, file: !2302, line: 1448, column: 2)
!15619 = !DILocation(line: 1450, column: 10, scope: !15554)
!15620 = !DILocation(line: 1450, column: 45, scope: !15554)
!15621 = !DILocation(line: 1450, column: 43, scope: !15554)
!15622 = !DILocation(line: 1451, column: 6, scope: !15554)
!15623 = !DILocation(line: 1457, column: 1, scope: !15554)
!15624 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3179, file: !3179, line: 1103, type: !3180, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15625)
!15625 = !{!15626}
!15626 = !DILocalVariable(name: "t", arg: 1, scope: !15624, file: !3179, line: 1103, type: !120)
!15627 = !DILocation(line: 0, scope: !15624)
!15628 = !DILocation(line: 0, scope: !13726, inlinedAt: !15629)
!15629 = distinct !DILocation(line: 1106, column: 9, scope: !15624)
!15630 = !DILocation(line: 139, column: 13, scope: !15631, inlinedAt: !15629)
!15631 = distinct !DILexicalBlock(scope: !15632, file: !3179, line: 138, column: 10)
!15632 = distinct !DILexicalBlock(scope: !15633, file: !3179, line: 136, column: 7)
!15633 = distinct !DILexicalBlock(scope: !13747, file: !3179, line: 134, column: 17)
!15634 = !DILocation(line: 1106, column: 2, scope: !15624)
!15635 = distinct !DISubprogram(name: "k_yield", scope: !3187, file: !3187, line: 140, type: !2936, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!15636 = !DILocation(line: 148, column: 2, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15635, file: !3187, line: 148, column: 2)
!15638 = !{i64 2154115345}
!15639 = !DILocation(line: 149, column: 2, scope: !15635)
!15640 = !DILocation(line: 150, column: 1, scope: !15635)
!15641 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2302, file: !2302, line: 1495, type: !15642, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15644)
!15642 = !DISubroutineType(types: !15643)
!15643 = !{!743, !119}
!15644 = !{!15645, !15646}
!15645 = !DILocalVariable(name: "us", arg: 1, scope: !15641, file: !2302, line: 1495, type: !119)
!15646 = !DILocalVariable(name: "ticks", scope: !15641, file: !2302, line: 1497, type: !743)
!15647 = !DILocation(line: 0, scope: !15641)
!15648 = !DILocation(line: 1501, column: 31, scope: !15641)
!15649 = !DILocation(line: 1501, column: 10, scope: !15641)
!15650 = !DILocation(line: 1502, column: 23, scope: !15641)
!15651 = !DILocation(line: 1502, column: 10, scope: !15641)
!15652 = !DILocation(line: 1506, column: 31, scope: !15641)
!15653 = !DILocation(line: 1506, column: 9, scope: !15641)
!15654 = !DILocation(line: 1506, column: 2, scope: !15641)
!15655 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3179, file: !3179, line: 571, type: !3180, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15656)
!15656 = !{!15657}
!15657 = !DILocalVariable(name: "t", arg: 1, scope: !15655, file: !3179, line: 571, type: !120)
!15658 = !DILocation(line: 0, scope: !15655)
!15659 = !DILocation(line: 0, scope: !13726, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 574, column: 9, scope: !15655)
!15661 = !DILocation(line: 135, column: 5, scope: !15633, inlinedAt: !15660)
!15662 = !DILocation(line: 139, column: 13, scope: !15631, inlinedAt: !15660)
!15663 = !DILocation(line: 574, column: 2, scope: !15655)
!15664 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3179, file: !3179, line: 1187, type: !3180, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15665)
!15665 = !{!15666}
!15666 = !DILocalVariable(name: "t", arg: 1, scope: !15664, file: !3179, line: 1187, type: !120)
!15667 = !DILocation(line: 0, scope: !15664)
!15668 = !DILocation(line: 0, scope: !13726, inlinedAt: !15669)
!15669 = distinct !DILocation(line: 1190, column: 9, scope: !15664)
!15670 = !DILocation(line: 145, column: 13, scope: !15671, inlinedAt: !15669)
!15671 = distinct !DILexicalBlock(scope: !13744, file: !3179, line: 144, column: 10)
!15672 = !DILocation(line: 1190, column: 2, scope: !15664)
!15673 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2302, file: !2302, line: 1517, type: !15544, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15674)
!15674 = !{!15675}
!15675 = !DILocalVariable(name: "thread", arg: 1, scope: !15673, file: !2302, line: 1517, type: !15402)
!15676 = !DILocation(line: 0, scope: !15673)
!15677 = !DILocation(line: 1521, column: 6, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15673, file: !2302, line: 1521, column: 6)
!15679 = !DILocation(line: 1521, column: 6, scope: !15673)
!15680 = !DILocation(line: 1525, column: 6, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15673, file: !2302, line: 1525, column: 6)
!15682 = !DILocation(line: 1525, column: 37, scope: !15681)
!15683 = !DILocation(line: 1525, column: 6, scope: !15673)
!15684 = !DILocation(line: 1527, column: 20, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15686, file: !2302, line: 1527, column: 7)
!15686 = distinct !DILexicalBlock(scope: !15681, file: !2302, line: 1525, column: 42)
!15687 = !DILocation(line: 1527, column: 33, scope: !15685)
!15688 = !DILocation(line: 1527, column: 7, scope: !15686)
!15689 = !DILocation(line: 1532, column: 2, scope: !15673)
!15690 = !DILocation(line: 1533, column: 2, scope: !15673)
!15691 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15692)
!15692 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15693)
!15693 = distinct !DILocation(line: 1537, column: 7, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15673, file: !2302, line: 1537, column: 6)
!15695 = !DILocation(line: 0, scope: !14393, inlinedAt: !15692)
!15696 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15693)
!15697 = !DILocation(line: 1537, column: 6, scope: !15673)
!15698 = !DILocation(line: 1538, column: 3, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15694, file: !2302, line: 1537, column: 25)
!15700 = !DILocation(line: 1539, column: 2, scope: !15699)
!15701 = !DILocation(line: 1540, column: 1, scope: !15673)
!15702 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12828, file: !12828, line: 101, type: !13807, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15703)
!15703 = !{!15704}
!15704 = !DILocalVariable(name: "thread", arg: 1, scope: !15702, file: !12828, line: 101, type: !2194)
!15705 = !DILocation(line: 0, scope: !15702)
!15706 = !DILocation(line: 103, column: 23, scope: !15702)
!15707 = !DILocation(line: 103, column: 36, scope: !15702)
!15708 = !DILocation(line: 103, column: 55, scope: !15702)
!15709 = !DILocation(line: 103, column: 2, scope: !15702)
!15710 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2302, file: !2302, line: 1567, type: !15711, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15713)
!15711 = !DISubroutineType(types: !15712)
!15712 = !{!15402}
!15713 = !{!15714}
!15714 = !DILocalVariable(name: "ret", scope: !15710, file: !2302, line: 1577, type: !15402)
!15715 = !DILocation(line: 1577, column: 30, scope: !15710)
!15716 = !DILocation(line: 0, scope: !15710)
!15717 = !DILocation(line: 1582, column: 2, scope: !15710)
!15718 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2302, file: !2302, line: 1593, type: !7634, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !2000)
!15719 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15720)
!15720 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15721)
!15721 = distinct !DILocation(line: 1595, column: 10, scope: !15718)
!15722 = !DILocation(line: 0, scope: !14393, inlinedAt: !15720)
!15723 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15721)
!15724 = !DILocation(line: 1595, column: 27, scope: !15718)
!15725 = !DILocation(line: 1595, column: 41, scope: !15718)
!15726 = !DILocation(line: 1595, column: 30, scope: !15718)
!15727 = !DILocation(line: 1595, column: 2, scope: !15718)
!15728 = distinct !DISubprogram(name: "z_thread_abort", scope: !2302, file: !2302, line: 1725, type: !13624, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15729)
!15729 = !{!15730, !15731}
!15730 = !DILocalVariable(name: "thread", arg: 1, scope: !15728, file: !2302, line: 1725, type: !2194)
!15731 = !DILocalVariable(name: "key", scope: !15728, file: !2302, line: 1727, type: !13658)
!15732 = !DILocation(line: 0, scope: !15728)
!15733 = !DILocation(line: 0, scope: !13666, inlinedAt: !15734)
!15734 = distinct !DILocation(line: 1727, column: 25, scope: !15728)
!15735 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !15734)
!15737 = !DILocation(line: 0, scope: !13675, inlinedAt: !15736)
!15738 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !15734)
!15739 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !15734)
!15740 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !15734)
!15741 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !15734)
!15742 = !DILocation(line: 1729, column: 20, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15728, file: !2302, line: 1729, column: 6)
!15744 = !DILocation(line: 1729, column: 33, scope: !15743)
!15745 = !DILocation(line: 1729, column: 48, scope: !15743)
!15746 = !DILocation(line: 1729, column: 6, scope: !15728)
!15747 = !DILocation(line: 0, scope: !13700, inlinedAt: !15748)
!15748 = distinct !DILocation(line: 1730, column: 3, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15743, file: !2302, line: 1729, column: 54)
!15750 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !15748)
!15751 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !15748)
!15752 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !15748)
!15753 = !DILocation(line: 0, scope: !13714, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !15748)
!15755 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !15754)
!15756 = !DILocation(line: 1731, column: 3, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15758, file: !2302, line: 1731, column: 3)
!15758 = distinct !DILexicalBlock(scope: !15759, file: !2302, line: 1731, column: 3)
!15759 = distinct !DILexicalBlock(scope: !15749, file: !2302, line: 1731, column: 3)
!15760 = !DILocation(line: 1736, column: 20, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15728, file: !2302, line: 1736, column: 6)
!15762 = !DILocation(line: 1736, column: 33, scope: !15761)
!15763 = !DILocation(line: 1736, column: 49, scope: !15761)
!15764 = !DILocation(line: 1736, column: 6, scope: !15728)
!15765 = !DILocation(line: 0, scope: !13700, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 1737, column: 3, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15761, file: !2302, line: 1736, column: 56)
!15768 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !15766)
!15769 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !15766)
!15770 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !15766)
!15771 = !DILocation(line: 0, scope: !13714, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !15766)
!15773 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !15772)
!15774 = !DILocation(line: 1738, column: 3, scope: !15767)
!15775 = !DILocation(line: 1775, column: 2, scope: !15728)
!15776 = !DILocation(line: 1776, column: 16, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15728, file: !2302, line: 1776, column: 6)
!15778 = !DILocation(line: 1776, column: 13, scope: !15777)
!15779 = !DILocation(line: 1776, column: 25, scope: !15777)
!15780 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15782)
!15782 = distinct !DILocation(line: 1776, column: 29, scope: !15777)
!15783 = !DILocation(line: 0, scope: !14393, inlinedAt: !15781)
!15784 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15782)
!15785 = !DILocation(line: 1776, column: 6, scope: !15728)
!15786 = !DILocation(line: 0, scope: !14344, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 1777, column: 3, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15777, file: !2302, line: 1776, column: 47)
!15789 = !DILocation(line: 0, scope: !14353, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 195, column: 2, scope: !14344, inlinedAt: !15787)
!15791 = !DILocation(line: 225, column: 2, scope: !14360, inlinedAt: !15790)
!15792 = !DILocation(line: 225, column: 2, scope: !14361, inlinedAt: !15790)
!15793 = !DILocation(line: 225, column: 2, scope: !14364, inlinedAt: !15790)
!15794 = !DILocation(line: 196, column: 9, scope: !14344, inlinedAt: !15787)
!15795 = !DILocation(line: 1778, column: 3, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15797, file: !2302, line: 1778, column: 3)
!15797 = distinct !DILexicalBlock(scope: !15798, file: !2302, line: 1778, column: 3)
!15798 = distinct !DILexicalBlock(scope: !15788, file: !2302, line: 1778, column: 3)
!15799 = !DILocation(line: 0, scope: !13700, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 1780, column: 2, scope: !15728)
!15801 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !15800)
!15802 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !15800)
!15803 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !15800)
!15804 = !DILocation(line: 0, scope: !13714, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !15800)
!15806 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !15805)
!15807 = !DILocation(line: 1781, column: 1, scope: !15728)
!15808 = distinct !DISubprogram(name: "end_thread", scope: !2302, file: !2302, line: 1690, type: !13624, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15809)
!15809 = !{!15810}
!15810 = !DILocalVariable(name: "thread", arg: 1, scope: !15808, file: !2302, line: 1690, type: !2194)
!15811 = !DILocation(line: 0, scope: !15808)
!15812 = !DILocation(line: 1695, column: 20, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !15808, file: !2302, line: 1695, column: 6)
!15814 = !DILocation(line: 1695, column: 33, scope: !15813)
!15815 = !DILocation(line: 1695, column: 49, scope: !15813)
!15816 = !DILocation(line: 1695, column: 6, scope: !15808)
!15817 = !DILocation(line: 1697, column: 29, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15813, file: !2302, line: 1695, column: 56)
!15819 = !DILocation(line: 1698, column: 7, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15818, file: !2302, line: 1698, column: 7)
!15821 = !DILocation(line: 1698, column: 7, scope: !15818)
!15822 = !DILocation(line: 0, scope: !13858, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 1699, column: 4, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15820, file: !2302, line: 1698, column: 35)
!15825 = !DILocation(line: 266, column: 28, scope: !13858, inlinedAt: !15823)
!15826 = !DILocation(line: 0, scope: !13866, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 268, column: 3, scope: !13870, inlinedAt: !15823)
!15828 = !DILocation(line: 234, column: 2, scope: !13866, inlinedAt: !15827)
!15829 = !DILocation(line: 1700, column: 3, scope: !15824)
!15830 = !DILocation(line: 1701, column: 20, scope: !15831)
!15831 = distinct !DILexicalBlock(scope: !15818, file: !2302, line: 1701, column: 7)
!15832 = !DILocation(line: 1701, column: 30, scope: !15831)
!15833 = !DILocation(line: 1701, column: 7, scope: !15818)
!15834 = !DILocation(line: 1702, column: 4, scope: !15835)
!15835 = distinct !DILexicalBlock(scope: !15831, file: !2302, line: 1701, column: 39)
!15836 = !DILocation(line: 1703, column: 3, scope: !15835)
!15837 = !DILocation(line: 1704, column: 9, scope: !15818)
!15838 = !DILocation(line: 1705, column: 23, scope: !15818)
!15839 = !DILocation(line: 1705, column: 3, scope: !15818)
!15840 = !DILocation(line: 1706, column: 3, scope: !15818)
!15841 = !DILocation(line: 1722, column: 2, scope: !15818)
!15842 = !DILocation(line: 1723, column: 1, scope: !15808)
!15843 = distinct !DISubprogram(name: "unpend_all", scope: !2302, file: !2302, line: 1674, type: !15844, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15846)
!15844 = !DISubroutineType(types: !15845)
!15845 = !{null, !2225}
!15846 = !{!15847, !15848}
!15847 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15843, file: !2302, line: 1674, type: !2225)
!15848 = !DILocalVariable(name: "thread", scope: !15843, file: !2302, line: 1676, type: !2194)
!15849 = !DILocation(line: 0, scope: !15843)
!15850 = !DILocation(line: 1678, column: 19, scope: !15843)
!15851 = !DILocation(line: 1678, column: 41, scope: !15843)
!15852 = !DILocation(line: 1678, column: 2, scope: !15843)
!15853 = !DILocation(line: 1679, column: 3, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15843, file: !2302, line: 1678, column: 50)
!15855 = !DILocation(line: 1680, column: 9, scope: !15854)
!15856 = !DILocalVariable(name: "thread", arg: 1, scope: !15857, file: !12848, line: 65, type: !2194)
!15857 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12848, file: !12848, line: 65, type: !15858, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15860)
!15858 = !DISubroutineType(types: !15859)
!15859 = !{null, !2194, !32}
!15860 = !{!15856, !15861}
!15861 = !DILocalVariable(name: "value", arg: 2, scope: !15857, file: !12848, line: 65, type: !32)
!15862 = !DILocation(line: 0, scope: !15857, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 1681, column: 3, scope: !15854)
!15864 = !DILocation(line: 67, column: 15, scope: !15857, inlinedAt: !15863)
!15865 = !DILocation(line: 67, column: 33, scope: !15857, inlinedAt: !15863)
!15866 = !DILocation(line: 1682, column: 3, scope: !15854)
!15867 = distinct !{!15867, !15852, !15868}
!15868 = !DILocation(line: 1683, column: 2, scope: !15843)
!15869 = !DILocation(line: 1684, column: 1, scope: !15843)
!15870 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2302, file: !2302, line: 1794, type: !15871, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15873)
!15871 = !DISubroutineType(types: !15872)
!15872 = !{!119, !2194, !14554}
!15873 = !{!15874, !15875, !15876, !15877}
!15874 = !DILocalVariable(name: "thread", arg: 1, scope: !15870, file: !2302, line: 1794, type: !2194)
!15875 = !DILocalVariable(name: "timeout", arg: 2, scope: !15870, file: !2302, line: 1794, type: !14554)
!15876 = !DILocalVariable(name: "key", scope: !15870, file: !2302, line: 1796, type: !13658)
!15877 = !DILocalVariable(name: "ret", scope: !15870, file: !2302, line: 1797, type: !119)
!15878 = !DILocation(line: 0, scope: !15870)
!15879 = !DILocation(line: 0, scope: !13666, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 1796, column: 25, scope: !15870)
!15881 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !15880)
!15883 = !DILocation(line: 0, scope: !13675, inlinedAt: !15882)
!15884 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !15880)
!15885 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !15880)
!15886 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !15880)
!15887 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !15880)
!15888 = !DILocation(line: 1801, column: 20, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15870, file: !2302, line: 1801, column: 6)
!15890 = !DILocation(line: 1801, column: 33, scope: !15889)
!15891 = !DILocation(line: 1801, column: 49, scope: !15889)
!15892 = !DILocation(line: 1801, column: 6, scope: !15870)
!15893 = !DILocation(line: 1803, column: 13, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15889, file: !2302, line: 1803, column: 13)
!15895 = !DILocation(line: 1803, column: 13, scope: !15889)
!15896 = !DILocation(line: 1805, column: 24, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15894, file: !2302, line: 1805, column: 13)
!15898 = !DILocation(line: 1805, column: 21, scope: !15897)
!15899 = !DILocation(line: 1805, column: 34, scope: !15897)
!15900 = !DILocation(line: 1806, column: 20, scope: !15897)
!15901 = !DILocation(line: 1806, column: 44, scope: !15897)
!15902 = !DILocation(line: 1806, column: 30, scope: !15897)
!15903 = !DILocation(line: 1805, column: 13, scope: !15894)
!15904 = !DILocation(line: 1031, column: 3, scope: !14393, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 48, column: 10, scope: !14397, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 1809, column: 3, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !2302, line: 1809, column: 3)
!15908 = distinct !DILexicalBlock(scope: !15909, file: !2302, line: 1809, column: 3)
!15909 = distinct !DILexicalBlock(scope: !15897, file: !2302, line: 1808, column: 9)
!15910 = !DILocation(line: 0, scope: !14393, inlinedAt: !15905)
!15911 = !DILocation(line: 48, column: 9, scope: !14397, inlinedAt: !15906)
!15912 = !DILocation(line: 1809, column: 3, scope: !15908)
!15913 = !DILocation(line: 1809, column: 3, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15907, file: !2302, line: 1809, column: 3)
!15915 = !DILocation(line: 1810, column: 23, scope: !15909)
!15916 = !DILocation(line: 1810, column: 42, scope: !15909)
!15917 = !DILocation(line: 1810, column: 3, scope: !15909)
!15918 = !DILocation(line: 1811, column: 22, scope: !15909)
!15919 = !DILocation(line: 1811, column: 3, scope: !15909)
!15920 = !DILocation(line: 0, scope: !14344, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 1814, column: 9, scope: !15909)
!15922 = !DILocation(line: 0, scope: !14353, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 195, column: 2, scope: !14344, inlinedAt: !15921)
!15924 = !DILocation(line: 225, column: 2, scope: !14360, inlinedAt: !15923)
!15925 = !DILocation(line: 225, column: 2, scope: !14361, inlinedAt: !15923)
!15926 = !DILocation(line: 225, column: 2, scope: !14364, inlinedAt: !15923)
!15927 = !DILocation(line: 196, column: 9, scope: !14344, inlinedAt: !15921)
!15928 = !DILocation(line: 1817, column: 3, scope: !15909)
!15929 = !DILocation(line: 0, scope: !15889)
!15930 = !DILocation(line: 0, scope: !13700, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 1822, column: 2, scope: !15870)
!15932 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !15931)
!15933 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !15931)
!15934 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !15931)
!15935 = !DILocation(line: 0, scope: !13714, inlinedAt: !15936)
!15936 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !15931)
!15937 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !15936)
!15938 = !DILocation(line: 1823, column: 2, scope: !15870)
!15939 = !DILocation(line: 1824, column: 1, scope: !15870)
!15940 = distinct !DISubprogram(name: "z_sched_wake", scope: !2302, file: !2302, line: 1882, type: !15941, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15943)
!15941 = !DISubroutineType(types: !15942)
!15942 = !{!345, !2225, !119, !113}
!15943 = !{!15944, !15945, !15946, !15947, !15948, !15949, !15951}
!15944 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15940, file: !2302, line: 1882, type: !2225)
!15945 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15940, file: !2302, line: 1882, type: !119)
!15946 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15940, file: !2302, line: 1882, type: !113)
!15947 = !DILocalVariable(name: "thread", scope: !15940, file: !2302, line: 1884, type: !2194)
!15948 = !DILocalVariable(name: "ret", scope: !15940, file: !2302, line: 1885, type: !345)
!15949 = !DILocalVariable(name: "__i", scope: !15950, file: !2302, line: 1887, type: !13658)
!15950 = distinct !DILexicalBlock(scope: !15940, file: !2302, line: 1887, column: 2)
!15951 = !DILocalVariable(name: "__key", scope: !15950, file: !2302, line: 1887, type: !13658)
!15952 = !DILocation(line: 0, scope: !15940)
!15953 = !DILocation(line: 0, scope: !15950)
!15954 = !DILocation(line: 0, scope: !13666, inlinedAt: !15955)
!15955 = distinct !DILocation(line: 1887, column: 2, scope: !15950)
!15956 = !DILocation(line: 55, column: 2, scope: !13675, inlinedAt: !15957)
!15957 = distinct !DILocation(line: 145, column: 10, scope: !13666, inlinedAt: !15955)
!15958 = !DILocation(line: 0, scope: !13675, inlinedAt: !15957)
!15959 = !DILocation(line: 148, column: 2, scope: !13683, inlinedAt: !15955)
!15960 = !DILocation(line: 148, column: 2, scope: !13684, inlinedAt: !15955)
!15961 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !15955)
!15962 = !DILocation(line: 160, column: 2, scope: !13666, inlinedAt: !15955)
!15963 = !DILocation(line: 1888, column: 12, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15965, file: !2302, line: 1887, column: 26)
!15965 = distinct !DILexicalBlock(scope: !15950, file: !2302, line: 1887, column: 2)
!15966 = !DILocation(line: 1890, column: 14, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15964, file: !2302, line: 1890, column: 7)
!15968 = !DILocation(line: 1890, column: 7, scope: !15964)
!15969 = !DILocalVariable(name: "thread", arg: 1, scope: !15970, file: !15971, line: 134, type: !2194)
!15970 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15971, file: !15971, line: 134, type: !15972, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !15974)
!15971 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15972 = !DISubroutineType(types: !15973)
!15973 = !{null, !2194, !32, !113}
!15974 = !{!15969, !15975, !15976}
!15975 = !DILocalVariable(name: "value", arg: 2, scope: !15970, file: !15971, line: 135, type: !32)
!15976 = !DILocalVariable(name: "data", arg: 3, scope: !15970, file: !15971, line: 136, type: !113)
!15977 = !DILocation(line: 0, scope: !15970, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 1891, column: 4, scope: !15979)
!15979 = distinct !DILexicalBlock(scope: !15967, file: !2302, line: 1890, column: 23)
!15980 = !DILocation(line: 0, scope: !15857, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 138, column: 2, scope: !15970, inlinedAt: !15978)
!15982 = !DILocation(line: 67, column: 15, scope: !15857, inlinedAt: !15981)
!15983 = !DILocation(line: 67, column: 33, scope: !15857, inlinedAt: !15981)
!15984 = !DILocation(line: 139, column: 15, scope: !15970, inlinedAt: !15978)
!15985 = !DILocation(line: 139, column: 25, scope: !15970, inlinedAt: !15978)
!15986 = !DILocation(line: 1894, column: 4, scope: !15979)
!15987 = !DILocation(line: 1895, column: 10, scope: !15979)
!15988 = !DILocation(line: 1896, column: 4, scope: !15979)
!15989 = !DILocation(line: 1898, column: 3, scope: !15979)
!15990 = !DILocation(line: 0, scope: !13700, inlinedAt: !15991)
!15991 = distinct !DILocation(line: 1887, column: 2, scope: !15965)
!15992 = !DILocation(line: 194, column: 2, scope: !13708, inlinedAt: !15991)
!15993 = !DILocation(line: 194, column: 2, scope: !13709, inlinedAt: !15991)
!15994 = !DILocation(line: 194, column: 2, scope: !13712, inlinedAt: !15991)
!15995 = !DILocation(line: 0, scope: !13714, inlinedAt: !15996)
!15996 = distinct !DILocation(line: 215, column: 2, scope: !13700, inlinedAt: !15991)
!15997 = !DILocation(line: 95, column: 2, scope: !13714, inlinedAt: !15996)
!15998 = !DILocation(line: 1901, column: 2, scope: !15940)
!15999 = distinct !DISubprogram(name: "z_sched_wait", scope: !2302, file: !2302, line: 1904, type: !16000, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2191, retainedNodes: !16003)
!16000 = !DISubroutineType(types: !16001)
!16001 = !{!119, !13669, !13658, !2225, !14554, !16002}
!16002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!16003 = !{!16004, !16005, !16006, !16007, !16008, !16009}
!16004 = !DILocalVariable(name: "lock", arg: 1, scope: !15999, file: !2302, line: 1904, type: !13669)
!16005 = !DILocalVariable(name: "key", arg: 2, scope: !15999, file: !2302, line: 1904, type: !13658)
!16006 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15999, file: !2302, line: 1905, type: !2225)
!16007 = !DILocalVariable(name: "timeout", arg: 4, scope: !15999, file: !2302, line: 1905, type: !14554)
!16008 = !DILocalVariable(name: "data", arg: 5, scope: !15999, file: !2302, line: 1905, type: !16002)
!16009 = !DILocalVariable(name: "ret", scope: !15999, file: !2302, line: 1907, type: !119)
!16010 = !DILocation(line: 0, scope: !15999)
!16011 = !DILocation(line: 1907, column: 12, scope: !15999)
!16012 = !DILocation(line: 1909, column: 11, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !15999, file: !2302, line: 1909, column: 6)
!16014 = !DILocation(line: 1909, column: 6, scope: !15999)
!16015 = !DILocation(line: 1910, column: 11, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16013, file: !2302, line: 1909, column: 20)
!16017 = !DILocation(line: 1910, column: 26, scope: !16016)
!16018 = !DILocation(line: 1910, column: 9, scope: !16016)
!16019 = !DILocation(line: 1911, column: 2, scope: !16016)
!16020 = !DILocation(line: 1912, column: 2, scope: !15999)
!16021 = distinct !DISubprogram(name: "z_data_copy", scope: !16022, file: !16022, line: 22, type: !2936, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2919, retainedNodes: !2000)
!16022 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16023 = !DILocation(line: 24, column: 2, scope: !16021)
!16024 = !DILocation(line: 27, column: 2, scope: !16021)
!16025 = !DILocation(line: 71, column: 1, scope: !16021)
!16026 = distinct !DISubprogram(name: "z_add_timeout", scope: !2339, file: !2339, line: 88, type: !16027, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16033)
!16027 = !DISubroutineType(types: !16028)
!16028 = !{null, !2312, !2331, !16029}
!16029 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !16030)
!16030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !16031)
!16031 = !{!16032}
!16032 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16030, file: !115, line: 66, baseType: !114, size: 64)
!16033 = !{!16034, !16035, !16036, !16037, !16043, !16044, !16047, !16050}
!16034 = !DILocalVariable(name: "to", arg: 1, scope: !16026, file: !2339, line: 88, type: !2312)
!16035 = !DILocalVariable(name: "fn", arg: 2, scope: !16026, file: !2339, line: 88, type: !2331)
!16036 = !DILocalVariable(name: "timeout", arg: 3, scope: !16026, file: !2339, line: 89, type: !16029)
!16037 = !DILocalVariable(name: "__i", scope: !16038, file: !2339, line: 102, type: !16039)
!16038 = distinct !DILexicalBlock(scope: !16026, file: !2339, line: 102, column: 2)
!16039 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !16040)
!16040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !16041)
!16041 = !{!16042}
!16042 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16040, file: !259, line: 33, baseType: !119, size: 32)
!16043 = !DILocalVariable(name: "__key", scope: !16038, file: !2339, line: 102, type: !16039)
!16044 = !DILocalVariable(name: "t", scope: !16045, file: !2339, line: 103, type: !2312)
!16045 = distinct !DILexicalBlock(scope: !16046, file: !2339, line: 102, column: 24)
!16046 = distinct !DILexicalBlock(scope: !16038, file: !2339, line: 102, column: 2)
!16047 = !DILocalVariable(name: "ticks", scope: !16048, file: !2339, line: 107, type: !114)
!16048 = distinct !DILexicalBlock(scope: !16049, file: !2339, line: 106, column: 39)
!16049 = distinct !DILexicalBlock(scope: !16045, file: !2339, line: 105, column: 7)
!16050 = !DILocalVariable(name: "next_time", scope: !16051, file: !2339, line: 137, type: !743)
!16051 = distinct !DILexicalBlock(scope: !16052, file: !2339, line: 127, column: 22)
!16052 = distinct !DILexicalBlock(scope: !16045, file: !2339, line: 127, column: 7)
!16053 = !DILocation(line: 0, scope: !16026)
!16054 = !DILocation(line: 91, column: 6, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16026, file: !2339, line: 91, column: 6)
!16056 = !DILocation(line: 91, column: 6, scope: !16026)
!16057 = !DILocation(line: 99, column: 2, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16059, file: !2339, line: 99, column: 2)
!16059 = distinct !DILexicalBlock(scope: !16026, file: !2339, line: 99, column: 2)
!16060 = !DILocation(line: 99, column: 2, scope: !16059)
!16061 = !DILocation(line: 99, column: 2, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !16058, file: !2339, line: 99, column: 2)
!16063 = !DILocation(line: 100, column: 6, scope: !16026)
!16064 = !DILocation(line: 100, column: 9, scope: !16026)
!16065 = !DILocation(line: 0, scope: !16038)
!16066 = !DILocalVariable(name: "l", arg: 1, scope: !16067, file: !259, line: 136, type: !16070)
!16067 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !16068, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16071)
!16068 = !DISubroutineType(types: !16069)
!16069 = !{!16039, !16070}
!16070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 32)
!16071 = !{!16066, !16072}
!16072 = !DILocalVariable(name: "k", scope: !16067, file: !259, line: 139, type: !16039)
!16073 = !DILocation(line: 0, scope: !16067, inlinedAt: !16074)
!16074 = distinct !DILocation(line: 102, column: 2, scope: !16038)
!16075 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16080)
!16076 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5959, file: !5959, line: 42, type: !5960, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16077)
!16077 = !{!16078, !16079}
!16078 = !DILocalVariable(name: "key", scope: !16076, file: !5959, line: 44, type: !32)
!16079 = !DILocalVariable(name: "tmp", scope: !16076, file: !5959, line: 53, type: !32)
!16080 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16074)
!16081 = !{i64 1957458}
!16082 = !DILocation(line: 0, scope: !16076, inlinedAt: !16080)
!16083 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16074)
!16084 = distinct !DILexicalBlock(scope: !16085, file: !259, line: 148, column: 2)
!16085 = distinct !DILexicalBlock(scope: !16067, file: !259, line: 148, column: 2)
!16086 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16074)
!16087 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16074)
!16088 = distinct !DILexicalBlock(scope: !16084, file: !259, line: 148, column: 2)
!16089 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16074)
!16090 = !DILocation(line: 106, column: 33, scope: !16049)
!16091 = !DILocation(line: 105, column: 7, scope: !16045)
!16092 = !DILocation(line: 107, column: 50, scope: !16048)
!16093 = !DILocation(line: 107, column: 48, scope: !16048)
!16094 = !DILocation(line: 0, scope: !16048)
!16095 = !DILocation(line: 109, column: 17, scope: !16048)
!16096 = !DILocation(line: 110, column: 3, scope: !16048)
!16097 = !DILocation(line: 111, column: 31, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16049, file: !2339, line: 110, column: 10)
!16099 = !DILocation(line: 111, column: 37, scope: !16098)
!16100 = !DILocation(line: 111, column: 35, scope: !16098)
!16101 = !DILocation(line: 0, scope: !16049)
!16102 = !DILocation(line: 109, column: 8, scope: !16048)
!16103 = !DILocation(line: 109, column: 15, scope: !16048)
!16104 = !DILocation(line: 114, column: 12, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16045, file: !2339, line: 114, column: 3)
!16106 = !DILocation(line: 0, scope: !16045)
!16107 = !DILocation(line: 114, column: 3, scope: !16105)
!16108 = !DILocation(line: 115, column: 24, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16110, file: !2339, line: 115, column: 8)
!16110 = distinct !DILexicalBlock(scope: !16111, file: !2339, line: 114, column: 45)
!16111 = distinct !DILexicalBlock(scope: !16105, file: !2339, line: 114, column: 3)
!16112 = !DILocation(line: 115, column: 11, scope: !16109)
!16113 = !DILocation(line: 115, column: 18, scope: !16109)
!16114 = !DILocation(line: 115, column: 8, scope: !16110)
!16115 = !DILocation(line: 116, column: 15, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16109, file: !2339, line: 115, column: 32)
!16117 = !DILocation(line: 117, column: 26, scope: !16116)
!16118 = !DILocation(line: 117, column: 5, scope: !16116)
!16119 = !DILocation(line: 123, column: 7, scope: !16045)
!16120 = !DILocation(line: 120, column: 15, scope: !16110)
!16121 = !DILocation(line: 114, column: 36, scope: !16111)
!16122 = distinct !{!16122, !16107, !16123}
!16123 = !DILocation(line: 121, column: 3, scope: !16105)
!16124 = !DILocation(line: 124, column: 4, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16126, file: !2339, line: 123, column: 18)
!16126 = distinct !DILexicalBlock(scope: !16045, file: !2339, line: 123, column: 7)
!16127 = !DILocation(line: 125, column: 3, scope: !16125)
!16128 = !DILocation(line: 127, column: 13, scope: !16052)
!16129 = !DILocation(line: 127, column: 10, scope: !16052)
!16130 = !DILocation(line: 127, column: 7, scope: !16045)
!16131 = !DILocation(line: 137, column: 24, scope: !16051)
!16132 = !DILocation(line: 0, scope: !16051)
!16133 = !DILocation(line: 139, column: 18, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16051, file: !2339, line: 139, column: 8)
!16135 = !DILocation(line: 139, column: 23, scope: !16134)
!16136 = !DILocation(line: 141, column: 5, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16134, file: !2339, line: 140, column: 48)
!16138 = !DILocation(line: 142, column: 4, scope: !16137)
!16139 = !DILocalVariable(name: "key", arg: 2, scope: !16140, file: !259, line: 190, type: !16039)
!16140 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !16141, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16143)
!16141 = !DISubroutineType(types: !16142)
!16142 = !{null, !16070, !16039}
!16143 = !{!16144, !16139}
!16144 = !DILocalVariable(name: "l", arg: 1, scope: !16140, file: !259, line: 189, type: !16070)
!16145 = !DILocation(line: 0, scope: !16140, inlinedAt: !16146)
!16146 = distinct !DILocation(line: 102, column: 2, scope: !16046)
!16147 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16146)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !259, line: 194, column: 2)
!16149 = distinct !DILexicalBlock(scope: !16140, file: !259, line: 194, column: 2)
!16150 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16146)
!16151 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16146)
!16152 = distinct !DILexicalBlock(scope: !16148, file: !259, line: 194, column: 2)
!16153 = !DILocalVariable(name: "key", arg: 1, scope: !16154, file: !5959, line: 84, type: !32)
!16154 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5959, file: !5959, line: 84, type: !5970, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16155)
!16155 = !{!16153}
!16156 = !DILocation(line: 0, scope: !16154, inlinedAt: !16157)
!16157 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16146)
!16158 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16157)
!16159 = !{i64 1958275}
!16160 = !DILocation(line: 148, column: 1, scope: !16026)
!16161 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !16162, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16166)
!16162 = !DISubroutineType(types: !16163)
!16163 = !{!345, !16164}
!16164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16165, size: 32)
!16165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2316)
!16166 = !{!16167}
!16167 = !DILocalVariable(name: "node", arg: 1, scope: !16161, file: !153, line: 225, type: !16164)
!16168 = !DILocation(line: 0, scope: !16161)
!16169 = !DILocation(line: 227, column: 15, scope: !16161)
!16170 = !DILocation(line: 227, column: 20, scope: !16161)
!16171 = !DILocation(line: 227, column: 2, scope: !16161)
!16172 = distinct !DISubprogram(name: "elapsed", scope: !2339, file: !2339, line: 62, type: !16173, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !2000)
!16173 = !DISubroutineType(types: !16174)
!16174 = !{!743}
!16175 = !DILocation(line: 64, column: 9, scope: !16172)
!16176 = !DILocation(line: 64, column: 28, scope: !16172)
!16177 = !DILocation(line: 64, column: 35, scope: !16172)
!16178 = !DILocation(line: 64, column: 2, scope: !16172)
!16179 = distinct !DISubprogram(name: "first", scope: !2339, file: !2339, line: 39, type: !16180, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16182)
!16180 = !DISubroutineType(types: !16181)
!16181 = !{!2312}
!16182 = !{!16183}
!16183 = !DILocalVariable(name: "t", scope: !16179, file: !2339, line: 41, type: !16184)
!16184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!16185 = !DILocation(line: 41, column: 19, scope: !16179)
!16186 = !DILocation(line: 0, scope: !16179)
!16187 = !DILocation(line: 43, column: 9, scope: !16179)
!16188 = !DILocation(line: 43, column: 2, scope: !16179)
!16189 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !16190, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16192)
!16190 = !DISubroutineType(types: !16191)
!16191 = !{null, !16184, !16184}
!16192 = !{!16193, !16194, !16195}
!16193 = !DILocalVariable(name: "successor", arg: 1, scope: !16189, file: !153, line: 443, type: !16184)
!16194 = !DILocalVariable(name: "node", arg: 2, scope: !16189, file: !153, line: 443, type: !16184)
!16195 = !DILocalVariable(name: "prev", scope: !16189, file: !153, line: 445, type: !16196)
!16196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16184)
!16197 = !DILocation(line: 0, scope: !16189)
!16198 = !DILocation(line: 445, column: 39, scope: !16189)
!16199 = !DILocation(line: 447, column: 8, scope: !16189)
!16200 = !DILocation(line: 447, column: 13, scope: !16189)
!16201 = !DILocation(line: 448, column: 8, scope: !16189)
!16202 = !DILocation(line: 448, column: 13, scope: !16189)
!16203 = !DILocation(line: 449, column: 8, scope: !16189)
!16204 = !DILocation(line: 449, column: 13, scope: !16189)
!16205 = !DILocation(line: 450, column: 18, scope: !16189)
!16206 = !DILocation(line: 451, column: 1, scope: !16189)
!16207 = distinct !DISubprogram(name: "next", scope: !2339, file: !2339, line: 46, type: !16208, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16210)
!16208 = !DISubroutineType(types: !16209)
!16209 = !{!2312, !2312}
!16210 = !{!16211, !16212}
!16211 = !DILocalVariable(name: "t", arg: 1, scope: !16207, file: !2339, line: 46, type: !2312)
!16212 = !DILocalVariable(name: "n", scope: !16207, file: !2339, line: 48, type: !16184)
!16213 = !DILocation(line: 0, scope: !16207)
!16214 = !DILocation(line: 48, column: 58, scope: !16207)
!16215 = !DILocation(line: 48, column: 19, scope: !16207)
!16216 = !DILocation(line: 50, column: 9, scope: !16207)
!16217 = !DILocation(line: 50, column: 2, scope: !16207)
!16218 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !16219, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16222)
!16219 = !DISubroutineType(types: !16220)
!16220 = !{null, !16221, !16184}
!16221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!16222 = !{!16223, !16224, !16225}
!16223 = !DILocalVariable(name: "list", arg: 1, scope: !16218, file: !153, line: 404, type: !16221)
!16224 = !DILocalVariable(name: "node", arg: 2, scope: !16218, file: !153, line: 404, type: !16184)
!16225 = !DILocalVariable(name: "tail", scope: !16218, file: !153, line: 406, type: !16196)
!16226 = !DILocation(line: 0, scope: !16218)
!16227 = !DILocation(line: 406, column: 34, scope: !16218)
!16228 = !DILocation(line: 408, column: 8, scope: !16218)
!16229 = !DILocation(line: 408, column: 13, scope: !16218)
!16230 = !DILocation(line: 409, column: 8, scope: !16218)
!16231 = !DILocation(line: 409, column: 13, scope: !16218)
!16232 = !DILocation(line: 411, column: 8, scope: !16218)
!16233 = !DILocation(line: 411, column: 13, scope: !16218)
!16234 = !DILocation(line: 412, column: 13, scope: !16218)
!16235 = !DILocation(line: 413, column: 1, scope: !16218)
!16236 = distinct !DISubprogram(name: "next_timeout", scope: !2339, file: !2339, line: 67, type: !16173, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16237)
!16237 = !{!16238, !16239, !16240}
!16238 = !DILocalVariable(name: "to", scope: !16236, file: !2339, line: 69, type: !2312)
!16239 = !DILocalVariable(name: "ticks_elapsed", scope: !16236, file: !2339, line: 70, type: !743)
!16240 = !DILocalVariable(name: "ret", scope: !16236, file: !2339, line: 71, type: !743)
!16241 = !DILocation(line: 69, column: 24, scope: !16236)
!16242 = !DILocation(line: 0, scope: !16236)
!16243 = !DILocation(line: 70, column: 26, scope: !16236)
!16244 = !DILocation(line: 73, column: 10, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16236, file: !2339, line: 73, column: 6)
!16246 = !DILocation(line: 73, column: 19, scope: !16245)
!16247 = !DILocation(line: 74, column: 21, scope: !16245)
!16248 = !DILocation(line: 74, column: 30, scope: !16245)
!16249 = !DILocation(line: 74, column: 28, scope: !16245)
!16250 = !DILocation(line: 74, column: 45, scope: !16245)
!16251 = !DILocation(line: 73, column: 6, scope: !16236)
!16252 = !DILocation(line: 77, column: 9, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16245, file: !2339, line: 76, column: 9)
!16254 = !DILocation(line: 0, scope: !16245)
!16255 = !DILocation(line: 81, column: 20, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16236, file: !2339, line: 81, column: 6)
!16257 = !DILocation(line: 81, column: 6, scope: !16256)
!16258 = !DILocation(line: 81, column: 32, scope: !16256)
!16259 = !DILocation(line: 85, column: 2, scope: !16236)
!16260 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !16261, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16263)
!16261 = !DISubroutineType(types: !16262)
!16262 = !{!16184, !16221, !16184}
!16263 = !{!16264, !16265}
!16264 = !DILocalVariable(name: "list", arg: 1, scope: !16260, file: !153, line: 341, type: !16221)
!16265 = !DILocalVariable(name: "node", arg: 2, scope: !16260, file: !153, line: 342, type: !16184)
!16266 = !DILocation(line: 0, scope: !16260)
!16267 = !DILocation(line: 344, column: 15, scope: !16260)
!16268 = !DILocation(line: 344, column: 9, scope: !16260)
!16269 = !DILocation(line: 344, column: 26, scope: !16260)
!16270 = !DILocation(line: 344, column: 2, scope: !16260)
!16271 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !16261, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16272)
!16272 = !{!16273, !16274}
!16273 = !DILocalVariable(name: "list", arg: 1, scope: !16271, file: !153, line: 325, type: !16221)
!16274 = !DILocalVariable(name: "node", arg: 2, scope: !16271, file: !153, line: 326, type: !16184)
!16275 = !DILocation(line: 0, scope: !16271)
!16276 = !DILocation(line: 328, column: 24, scope: !16271)
!16277 = !DILocation(line: 328, column: 15, scope: !16271)
!16278 = !DILocation(line: 328, column: 9, scope: !16271)
!16279 = !DILocation(line: 328, column: 45, scope: !16271)
!16280 = !DILocation(line: 328, column: 2, scope: !16271)
!16281 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !16282, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16284)
!16282 = !DISubroutineType(types: !16283)
!16283 = !{!16184, !16221}
!16284 = !{!16285}
!16285 = !DILocalVariable(name: "list", arg: 1, scope: !16281, file: !153, line: 294, type: !16221)
!16286 = !DILocation(line: 0, scope: !16281)
!16287 = !DILocation(line: 296, column: 9, scope: !16281)
!16288 = !DILocation(line: 296, column: 2, scope: !16281)
!16289 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !16290, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16292)
!16290 = !DISubroutineType(types: !16291)
!16291 = !{!345, !16221}
!16292 = !{!16293}
!16293 = !DILocalVariable(name: "list", arg: 1, scope: !16289, file: !153, line: 266, type: !16221)
!16294 = !DILocation(line: 0, scope: !16289)
!16295 = !DILocation(line: 268, column: 15, scope: !16289)
!16296 = !DILocation(line: 268, column: 20, scope: !16289)
!16297 = !DILocation(line: 268, column: 2, scope: !16289)
!16298 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2339, file: !2339, line: 150, type: !16299, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16301)
!16299 = !DISubroutineType(types: !16300)
!16300 = !{!119, !2312}
!16301 = !{!16302, !16303, !16304, !16306}
!16302 = !DILocalVariable(name: "to", arg: 1, scope: !16298, file: !2339, line: 150, type: !2312)
!16303 = !DILocalVariable(name: "ret", scope: !16298, file: !2339, line: 152, type: !119)
!16304 = !DILocalVariable(name: "__i", scope: !16305, file: !2339, line: 154, type: !16039)
!16305 = distinct !DILexicalBlock(scope: !16298, file: !2339, line: 154, column: 2)
!16306 = !DILocalVariable(name: "__key", scope: !16305, file: !2339, line: 154, type: !16039)
!16307 = !DILocation(line: 0, scope: !16298)
!16308 = !DILocation(line: 0, scope: !16305)
!16309 = !DILocation(line: 0, scope: !16067, inlinedAt: !16310)
!16310 = distinct !DILocation(line: 154, column: 2, scope: !16305)
!16311 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16312)
!16312 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16310)
!16313 = !DILocation(line: 0, scope: !16076, inlinedAt: !16312)
!16314 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16310)
!16315 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16310)
!16316 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16310)
!16317 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16310)
!16318 = !DILocation(line: 155, column: 7, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16320, file: !2339, line: 155, column: 7)
!16320 = distinct !DILexicalBlock(scope: !16321, file: !2339, line: 154, column: 24)
!16321 = distinct !DILexicalBlock(scope: !16305, file: !2339, line: 154, column: 2)
!16322 = !DILocation(line: 155, column: 7, scope: !16320)
!16323 = !DILocation(line: 156, column: 4, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16319, file: !2339, line: 155, column: 39)
!16325 = !DILocation(line: 158, column: 3, scope: !16324)
!16326 = !DILocation(line: 0, scope: !16140, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 154, column: 2, scope: !16321)
!16328 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16327)
!16329 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16327)
!16330 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16327)
!16331 = !DILocation(line: 0, scope: !16154, inlinedAt: !16332)
!16332 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16327)
!16333 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16332)
!16334 = !DILocation(line: 161, column: 2, scope: !16298)
!16335 = distinct !DISubprogram(name: "remove_timeout", scope: !2339, file: !2339, line: 53, type: !2333, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16336)
!16336 = !{!16337}
!16337 = !DILocalVariable(name: "t", arg: 1, scope: !16335, file: !2339, line: 53, type: !2312)
!16338 = !DILocation(line: 0, scope: !16335)
!16339 = !DILocation(line: 55, column: 6, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16335, file: !2339, line: 55, column: 6)
!16341 = !DILocation(line: 55, column: 14, scope: !16340)
!16342 = !DILocation(line: 55, column: 6, scope: !16335)
!16343 = !DILocation(line: 56, column: 25, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16340, file: !2339, line: 55, column: 23)
!16345 = !DILocation(line: 56, column: 12, scope: !16344)
!16346 = !DILocation(line: 56, column: 19, scope: !16344)
!16347 = !DILocation(line: 57, column: 2, scope: !16344)
!16348 = !DILocation(line: 59, column: 23, scope: !16335)
!16349 = !DILocation(line: 59, column: 2, scope: !16335)
!16350 = !DILocation(line: 60, column: 1, scope: !16335)
!16351 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !16352, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16354)
!16352 = !DISubroutineType(types: !16353)
!16353 = !{null, !16184}
!16354 = !{!16355, !16356, !16357}
!16355 = !DILocalVariable(name: "node", arg: 1, scope: !16351, file: !153, line: 496, type: !16184)
!16356 = !DILocalVariable(name: "prev", scope: !16351, file: !153, line: 498, type: !16196)
!16357 = !DILocalVariable(name: "next", scope: !16351, file: !153, line: 499, type: !16196)
!16358 = !DILocation(line: 0, scope: !16351)
!16359 = !DILocation(line: 498, column: 34, scope: !16351)
!16360 = !DILocation(line: 499, column: 34, scope: !16351)
!16361 = !DILocation(line: 501, column: 8, scope: !16351)
!16362 = !DILocation(line: 501, column: 13, scope: !16351)
!16363 = !DILocation(line: 502, column: 8, scope: !16351)
!16364 = !DILocation(line: 502, column: 13, scope: !16351)
!16365 = !DILocation(line: 503, column: 2, scope: !16351)
!16366 = !DILocation(line: 504, column: 1, scope: !16351)
!16367 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !16352, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16368)
!16368 = !{!16369}
!16369 = !DILocalVariable(name: "node", arg: 1, scope: !16367, file: !153, line: 211, type: !16184)
!16370 = !DILocation(line: 0, scope: !16367)
!16371 = !DILocation(line: 213, column: 8, scope: !16367)
!16372 = !DILocation(line: 213, column: 13, scope: !16367)
!16373 = !DILocation(line: 214, column: 8, scope: !16367)
!16374 = !DILocation(line: 214, column: 13, scope: !16367)
!16375 = !DILocation(line: 215, column: 1, scope: !16367)
!16376 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2339, file: !2339, line: 183, type: !16377, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16381)
!16377 = !DISubroutineType(types: !16378)
!16378 = !{!114, !16379}
!16379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16380, size: 32)
!16380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2313)
!16381 = !{!16382, !16383, !16384, !16386}
!16382 = !DILocalVariable(name: "timeout", arg: 1, scope: !16376, file: !2339, line: 183, type: !16379)
!16383 = !DILocalVariable(name: "ticks", scope: !16376, file: !2339, line: 185, type: !114)
!16384 = !DILocalVariable(name: "__i", scope: !16385, file: !2339, line: 187, type: !16039)
!16385 = distinct !DILexicalBlock(scope: !16376, file: !2339, line: 187, column: 2)
!16386 = !DILocalVariable(name: "__key", scope: !16385, file: !2339, line: 187, type: !16039)
!16387 = !DILocation(line: 0, scope: !16376)
!16388 = !DILocation(line: 0, scope: !16385)
!16389 = !DILocation(line: 0, scope: !16067, inlinedAt: !16390)
!16390 = distinct !DILocation(line: 187, column: 2, scope: !16385)
!16391 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16392)
!16392 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16390)
!16393 = !DILocation(line: 0, scope: !16076, inlinedAt: !16392)
!16394 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16390)
!16395 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16390)
!16396 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16390)
!16397 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16390)
!16398 = !DILocation(line: 188, column: 11, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16400, file: !2339, line: 187, column: 24)
!16400 = distinct !DILexicalBlock(scope: !16385, file: !2339, line: 187, column: 2)
!16401 = !DILocation(line: 0, scope: !16140, inlinedAt: !16402)
!16402 = distinct !DILocation(line: 187, column: 2, scope: !16400)
!16403 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16402)
!16404 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16402)
!16405 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16402)
!16406 = !DILocation(line: 0, scope: !16154, inlinedAt: !16407)
!16407 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16402)
!16408 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16407)
!16409 = !DILocation(line: 191, column: 2, scope: !16376)
!16410 = distinct !DISubprogram(name: "timeout_rem", scope: !2339, file: !2339, line: 165, type: !16377, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16411)
!16411 = !{!16412, !16413, !16414}
!16412 = !DILocalVariable(name: "timeout", arg: 1, scope: !16410, file: !2339, line: 165, type: !16379)
!16413 = !DILocalVariable(name: "ticks", scope: !16410, file: !2339, line: 167, type: !114)
!16414 = !DILocalVariable(name: "t", scope: !16415, file: !2339, line: 173, type: !2312)
!16415 = distinct !DILexicalBlock(scope: !16410, file: !2339, line: 173, column: 2)
!16416 = !DILocation(line: 0, scope: !16410)
!16417 = !DILocation(line: 169, column: 6, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16410, file: !2339, line: 169, column: 6)
!16419 = !DILocation(line: 169, column: 6, scope: !16410)
!16420 = !DILocation(line: 173, column: 28, scope: !16415)
!16421 = !DILocation(line: 0, scope: !16415)
!16422 = !DILocation(line: 173, column: 39, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16415, file: !2339, line: 173, column: 2)
!16424 = !DILocation(line: 173, column: 2, scope: !16415)
!16425 = !DILocation(line: 174, column: 15, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16423, file: !2339, line: 173, column: 61)
!16427 = !DILocation(line: 174, column: 9, scope: !16426)
!16428 = !DILocation(line: 175, column: 15, scope: !16429)
!16429 = distinct !DILexicalBlock(scope: !16426, file: !2339, line: 175, column: 7)
!16430 = !DILocation(line: 175, column: 7, scope: !16426)
!16431 = !DILocation(line: 173, column: 52, scope: !16423)
!16432 = distinct !{!16432, !16424, !16433}
!16433 = !DILocation(line: 178, column: 2, scope: !16415)
!16434 = !DILocation(line: 180, column: 17, scope: !16410)
!16435 = !DILocation(line: 180, column: 15, scope: !16410)
!16436 = !DILocation(line: 180, column: 2, scope: !16410)
!16437 = !DILocation(line: 181, column: 1, scope: !16410)
!16438 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13257, file: !13257, line: 35, type: !16439, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16441)
!16439 = !DISubroutineType(types: !16440)
!16440 = !{!345, !16379}
!16441 = !{!16442}
!16442 = !DILocalVariable(name: "to", arg: 1, scope: !16438, file: !13257, line: 35, type: !16379)
!16443 = !DILocation(line: 0, scope: !16438)
!16444 = !DILocation(line: 37, column: 35, scope: !16438)
!16445 = !DILocation(line: 37, column: 10, scope: !16438)
!16446 = !DILocation(line: 37, column: 9, scope: !16438)
!16447 = !DILocation(line: 37, column: 2, scope: !16438)
!16448 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2339, file: !2339, line: 194, type: !16377, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16449)
!16449 = !{!16450, !16451, !16452, !16454}
!16450 = !DILocalVariable(name: "timeout", arg: 1, scope: !16448, file: !2339, line: 194, type: !16379)
!16451 = !DILocalVariable(name: "ticks", scope: !16448, file: !2339, line: 196, type: !114)
!16452 = !DILocalVariable(name: "__i", scope: !16453, file: !2339, line: 198, type: !16039)
!16453 = distinct !DILexicalBlock(scope: !16448, file: !2339, line: 198, column: 2)
!16454 = !DILocalVariable(name: "__key", scope: !16453, file: !2339, line: 198, type: !16039)
!16455 = !DILocation(line: 0, scope: !16448)
!16456 = !DILocation(line: 0, scope: !16453)
!16457 = !DILocation(line: 0, scope: !16067, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 198, column: 2, scope: !16453)
!16459 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16460)
!16460 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16458)
!16461 = !DILocation(line: 0, scope: !16076, inlinedAt: !16460)
!16462 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16458)
!16463 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16458)
!16464 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16458)
!16465 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16458)
!16466 = !DILocation(line: 199, column: 11, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !16468, file: !2339, line: 198, column: 24)
!16468 = distinct !DILexicalBlock(scope: !16453, file: !2339, line: 198, column: 2)
!16469 = !DILocation(line: 199, column: 23, scope: !16467)
!16470 = !DILocation(line: 0, scope: !16140, inlinedAt: !16471)
!16471 = distinct !DILocation(line: 198, column: 2, scope: !16468)
!16472 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16471)
!16473 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16471)
!16474 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16471)
!16475 = !DILocation(line: 0, scope: !16154, inlinedAt: !16476)
!16476 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16471)
!16477 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16476)
!16478 = !DILocation(line: 199, column: 21, scope: !16467)
!16479 = !DILocation(line: 202, column: 2, scope: !16448)
!16480 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2339, file: !2339, line: 205, type: !16173, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16481)
!16481 = !{!16482, !16483, !16485}
!16482 = !DILocalVariable(name: "ret", scope: !16480, file: !2339, line: 207, type: !743)
!16483 = !DILocalVariable(name: "__i", scope: !16484, file: !2339, line: 209, type: !16039)
!16484 = distinct !DILexicalBlock(scope: !16480, file: !2339, line: 209, column: 2)
!16485 = !DILocalVariable(name: "__key", scope: !16484, file: !2339, line: 209, type: !16039)
!16486 = !DILocation(line: 0, scope: !16480)
!16487 = !DILocation(line: 0, scope: !16484)
!16488 = !DILocation(line: 0, scope: !16067, inlinedAt: !16489)
!16489 = distinct !DILocation(line: 209, column: 2, scope: !16484)
!16490 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16489)
!16492 = !DILocation(line: 0, scope: !16076, inlinedAt: !16491)
!16493 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16489)
!16494 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16489)
!16495 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16489)
!16496 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16489)
!16497 = !DILocation(line: 210, column: 9, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16499, file: !2339, line: 209, column: 24)
!16499 = distinct !DILexicalBlock(scope: !16484, file: !2339, line: 209, column: 2)
!16500 = !DILocation(line: 0, scope: !16140, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 209, column: 2, scope: !16499)
!16502 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16501)
!16503 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16501)
!16504 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16501)
!16505 = !DILocation(line: 0, scope: !16154, inlinedAt: !16506)
!16506 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16501)
!16507 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16506)
!16508 = !DILocation(line: 212, column: 2, scope: !16480)
!16509 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2339, file: !2339, line: 215, type: !10724, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16510)
!16510 = !{!16511, !16512, !16513, !16515, !16516, !16519, !16520}
!16511 = !DILocalVariable(name: "ticks", arg: 1, scope: !16509, file: !2339, line: 215, type: !743)
!16512 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16509, file: !2339, line: 215, type: !345)
!16513 = !DILocalVariable(name: "__i", scope: !16514, file: !2339, line: 217, type: !16039)
!16514 = distinct !DILexicalBlock(scope: !16509, file: !2339, line: 217, column: 2)
!16515 = !DILocalVariable(name: "__key", scope: !16514, file: !2339, line: 217, type: !16039)
!16516 = !DILocalVariable(name: "next_to", scope: !16517, file: !2339, line: 218, type: !119)
!16517 = distinct !DILexicalBlock(scope: !16518, file: !2339, line: 217, column: 24)
!16518 = distinct !DILexicalBlock(scope: !16514, file: !2339, line: 217, column: 2)
!16519 = !DILocalVariable(name: "sooner", scope: !16517, file: !2339, line: 219, type: !345)
!16520 = !DILocalVariable(name: "imminent", scope: !16517, file: !2339, line: 221, type: !345)
!16521 = !DILocation(line: 0, scope: !16509)
!16522 = !DILocation(line: 0, scope: !16514)
!16523 = !DILocation(line: 0, scope: !16067, inlinedAt: !16524)
!16524 = distinct !DILocation(line: 217, column: 2, scope: !16514)
!16525 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16526)
!16526 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16524)
!16527 = !DILocation(line: 0, scope: !16076, inlinedAt: !16526)
!16528 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16524)
!16529 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16524)
!16530 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16524)
!16531 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16524)
!16532 = !DILocation(line: 218, column: 17, scope: !16517)
!16533 = !DILocation(line: 0, scope: !16517)
!16534 = !DILocation(line: 221, column: 27, scope: !16517)
!16535 = !DILocation(line: 233, column: 17, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16517, file: !2339, line: 233, column: 7)
!16537 = !DILocation(line: 234, column: 26, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16536, file: !2339, line: 233, column: 56)
!16539 = !DILocation(line: 234, column: 4, scope: !16538)
!16540 = !DILocation(line: 235, column: 3, scope: !16538)
!16541 = !DILocation(line: 0, scope: !16140, inlinedAt: !16542)
!16542 = distinct !DILocation(line: 217, column: 2, scope: !16518)
!16543 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16542)
!16544 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16542)
!16545 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16542)
!16546 = !DILocation(line: 0, scope: !16154, inlinedAt: !16547)
!16547 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16542)
!16548 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16547)
!16549 = !DILocation(line: 237, column: 1, scope: !16509)
!16550 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2339, file: !2339, line: 239, type: !16551, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16553)
!16551 = !DISubroutineType(types: !16552)
!16552 = !{null, !743}
!16553 = !{!16554, !16555, !16556, !16558}
!16554 = !DILocalVariable(name: "ticks", arg: 1, scope: !16550, file: !2339, line: 239, type: !743)
!16555 = !DILocalVariable(name: "key", scope: !16550, file: !2339, line: 245, type: !16039)
!16556 = !DILocalVariable(name: "t", scope: !16557, file: !2339, line: 262, type: !2312)
!16557 = distinct !DILexicalBlock(scope: !16550, file: !2339, line: 261, column: 67)
!16558 = !DILocalVariable(name: "dt", scope: !16557, file: !2339, line: 263, type: !119)
!16559 = !DILocation(line: 0, scope: !16550)
!16560 = !DILocation(line: 242, column: 2, scope: !16550)
!16561 = !DILocation(line: 0, scope: !16067, inlinedAt: !16562)
!16562 = distinct !DILocation(line: 245, column: 25, scope: !16550)
!16563 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16562)
!16565 = !DILocation(line: 0, scope: !16076, inlinedAt: !16564)
!16566 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16562)
!16567 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16562)
!16568 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16562)
!16569 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16562)
!16570 = !DILocation(line: 261, column: 9, scope: !16550)
!16571 = !DILocation(line: 261, column: 17, scope: !16550)
!16572 = !DILocation(line: 261, column: 25, scope: !16550)
!16573 = !DILocation(line: 261, column: 37, scope: !16550)
!16574 = !DILocation(line: 261, column: 47, scope: !16550)
!16575 = !DILocation(line: 261, column: 44, scope: !16550)
!16576 = !DILocation(line: 261, column: 2, scope: !16550)
!16577 = !DILocation(line: 0, scope: !16557)
!16578 = !DILocation(line: 263, column: 12, scope: !16557)
!16579 = !DILocation(line: 265, column: 16, scope: !16557)
!16580 = !DILocation(line: 265, column: 13, scope: !16557)
!16581 = !DILocation(line: 266, column: 13, scope: !16557)
!16582 = !DILocation(line: 267, column: 3, scope: !16557)
!16583 = !DILocation(line: 0, scope: !16140, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 269, column: 3, scope: !16557)
!16585 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16584)
!16586 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16584)
!16587 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16584)
!16588 = !DILocation(line: 0, scope: !16154, inlinedAt: !16589)
!16589 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16584)
!16590 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16589)
!16591 = !DILocation(line: 270, column: 6, scope: !16557)
!16592 = !DILocation(line: 270, column: 3, scope: !16557)
!16593 = !DILocation(line: 0, scope: !16067, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 271, column: 9, scope: !16557)
!16595 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16594)
!16597 = !DILocation(line: 0, scope: !16076, inlinedAt: !16596)
!16598 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16594)
!16599 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16594)
!16600 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16594)
!16601 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16594)
!16602 = !DILocation(line: 272, column: 22, scope: !16557)
!16603 = distinct !{!16603, !16576, !16604}
!16604 = !DILocation(line: 273, column: 2, scope: !16550)
!16605 = !DILocation(line: 276, column: 19, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16607, file: !2339, line: 275, column: 23)
!16607 = distinct !DILexicalBlock(scope: !16550, file: !2339, line: 275, column: 6)
!16608 = !DILocation(line: 277, column: 2, scope: !16606)
!16609 = !DILocation(line: 279, column: 15, scope: !16550)
!16610 = !DILocation(line: 279, column: 12, scope: !16550)
!16611 = !DILocation(line: 280, column: 21, scope: !16550)
!16612 = !DILocation(line: 282, column: 24, scope: !16550)
!16613 = !DILocation(line: 282, column: 2, scope: !16550)
!16614 = !DILocation(line: 0, scope: !16140, inlinedAt: !16615)
!16615 = distinct !DILocation(line: 284, column: 2, scope: !16550)
!16616 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16615)
!16617 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16615)
!16618 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16615)
!16619 = !DILocation(line: 0, scope: !16154, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16615)
!16621 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16620)
!16622 = !DILocation(line: 285, column: 1, scope: !16550)
!16623 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2339, file: !2339, line: 287, type: !16624, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16626)
!16624 = !DISubroutineType(types: !16625)
!16625 = !{!116}
!16626 = !{!16627, !16628, !16630}
!16627 = !DILocalVariable(name: "t", scope: !16623, file: !2339, line: 289, type: !120)
!16628 = !DILocalVariable(name: "__i", scope: !16629, file: !2339, line: 291, type: !16039)
!16629 = distinct !DILexicalBlock(scope: !16623, file: !2339, line: 291, column: 2)
!16630 = !DILocalVariable(name: "__key", scope: !16629, file: !2339, line: 291, type: !16039)
!16631 = !DILocation(line: 0, scope: !16623)
!16632 = !DILocation(line: 0, scope: !16629)
!16633 = !DILocation(line: 0, scope: !16067, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 291, column: 2, scope: !16629)
!16635 = !DILocation(line: 55, column: 2, scope: !16076, inlinedAt: !16636)
!16636 = distinct !DILocation(line: 145, column: 10, scope: !16067, inlinedAt: !16634)
!16637 = !DILocation(line: 0, scope: !16076, inlinedAt: !16636)
!16638 = !DILocation(line: 148, column: 2, scope: !16084, inlinedAt: !16634)
!16639 = !DILocation(line: 148, column: 2, scope: !16085, inlinedAt: !16634)
!16640 = !DILocation(line: 148, column: 2, scope: !16088, inlinedAt: !16634)
!16641 = !DILocation(line: 160, column: 2, scope: !16067, inlinedAt: !16634)
!16642 = !DILocation(line: 292, column: 7, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16644, file: !2339, line: 291, column: 24)
!16644 = distinct !DILexicalBlock(scope: !16629, file: !2339, line: 291, column: 2)
!16645 = !DILocation(line: 292, column: 19, scope: !16643)
!16646 = !DILocation(line: 0, scope: !16140, inlinedAt: !16647)
!16647 = distinct !DILocation(line: 291, column: 2, scope: !16644)
!16648 = !DILocation(line: 194, column: 2, scope: !16148, inlinedAt: !16647)
!16649 = !DILocation(line: 194, column: 2, scope: !16149, inlinedAt: !16647)
!16650 = !DILocation(line: 194, column: 2, scope: !16152, inlinedAt: !16647)
!16651 = !DILocation(line: 0, scope: !16154, inlinedAt: !16652)
!16652 = distinct !DILocation(line: 215, column: 2, scope: !16140, inlinedAt: !16647)
!16653 = !DILocation(line: 95, column: 2, scope: !16154, inlinedAt: !16652)
!16654 = !DILocation(line: 292, column: 17, scope: !16643)
!16655 = !DILocation(line: 294, column: 2, scope: !16623)
!16656 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2339, file: !2339, line: 297, type: !3174, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !2000)
!16657 = !DILocation(line: 300, column: 19, scope: !16656)
!16658 = !DILocation(line: 300, column: 9, scope: !16656)
!16659 = !DILocation(line: 300, column: 2, scope: !16656)
!16660 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2339, file: !2339, line: 306, type: !16624, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !2000)
!16661 = !DILocation(line: 308, column: 9, scope: !16660)
!16662 = !DILocation(line: 308, column: 2, scope: !16660)
!16663 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2339, file: !2339, line: 319, type: !6375, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16664)
!16664 = !{!16665, !16666, !16667, !16668}
!16665 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16663, file: !2339, line: 319, type: !118)
!16666 = !DILocalVariable(name: "start_cycles", scope: !16663, file: !2339, line: 328, type: !118)
!16667 = !DILocalVariable(name: "cycles_to_wait", scope: !16663, file: !2339, line: 331, type: !118)
!16668 = !DILocalVariable(name: "current_cycles", scope: !16669, file: !2339, line: 338, type: !118)
!16669 = distinct !DILexicalBlock(scope: !16670, file: !2339, line: 337, column: 11)
!16670 = distinct !DILexicalBlock(scope: !16671, file: !2339, line: 337, column: 2)
!16671 = distinct !DILexicalBlock(scope: !16663, file: !2339, line: 337, column: 2)
!16672 = !DILocation(line: 0, scope: !16663)
!16673 = !DILocation(line: 322, column: 19, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !16663, file: !2339, line: 322, column: 6)
!16675 = !DILocation(line: 322, column: 6, scope: !16663)
!16676 = !DILocation(line: 328, column: 26, scope: !16663)
!16677 = !DILocation(line: 333, column: 43, scope: !16663)
!16678 = !DILocation(line: 337, column: 2, scope: !16663)
!16679 = !DILocation(line: 338, column: 29, scope: !16669)
!16680 = !DILocation(line: 0, scope: !16669)
!16681 = !DILocation(line: 341, column: 23, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !16669, file: !2339, line: 341, column: 7)
!16683 = !DILocation(line: 341, column: 39, scope: !16682)
!16684 = !DILocation(line: 349, column: 1, scope: !16663)
!16685 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3174, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !2000)
!16686 = !DILocation(line: 1677, column: 9, scope: !16685)
!16687 = !DILocation(line: 1677, column: 2, scope: !16685)
!16688 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3262, file: !3262, line: 24, type: !3174, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !2000)
!16689 = !DILocation(line: 26, column: 9, scope: !16688)
!16690 = !DILocation(line: 26, column: 2, scope: !16688)
!16691 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2339, file: !2339, line: 364, type: !16692, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2309, retainedNodes: !16694)
!16692 = !DISubroutineType(types: !16693)
!16693 = !{!120, !16029}
!16694 = !{!16695, !16696}
!16695 = !DILocalVariable(name: "timeout", arg: 1, scope: !16691, file: !2339, line: 364, type: !16029)
!16696 = !DILocalVariable(name: "dt", scope: !16691, file: !2339, line: 366, type: !114)
!16697 = !DILocation(line: 0, scope: !16691)
!16698 = !DILocation(line: 368, column: 6, scope: !16691)
!16699 = !DILocation(line: 371, column: 10, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16701, file: !2339, line: 370, column: 47)
!16701 = distinct !DILexicalBlock(scope: !16702, file: !2339, line: 370, column: 13)
!16702 = distinct !DILexicalBlock(scope: !16691, file: !2339, line: 368, column: 6)
!16703 = !DILocation(line: 371, column: 3, scope: !16700)
!16704 = !DILocation(line: 376, column: 58, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16706, file: !2339, line: 376, column: 7)
!16706 = distinct !DILexicalBlock(scope: !16701, file: !2339, line: 372, column: 9)
!16707 = !DILocation(line: 376, column: 7, scope: !16706)
!16708 = !DILocation(line: 376, column: 43, scope: !16705)
!16709 = !DILocation(line: 377, column: 4, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16705, file: !2339, line: 376, column: 64)
!16711 = !DILocation(line: 379, column: 10, scope: !16706)
!16712 = !DILocation(line: 379, column: 33, scope: !16706)
!16713 = !DILocation(line: 379, column: 31, scope: !16706)
!16714 = !DILocation(line: 379, column: 3, scope: !16706)
!16715 = !DILocation(line: 0, scope: !16702)
!16716 = !DILocation(line: 381, column: 1, scope: !16691)
!16717 = distinct !DISubprogram(name: "boot_banner", scope: !16718, file: !16718, line: 26, type: !2936, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !2000)
!16718 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16719 = !DILocation(line: 34, column: 2, scope: !16717)
!16720 = !DILocation(line: 36, column: 1, scope: !16717)
