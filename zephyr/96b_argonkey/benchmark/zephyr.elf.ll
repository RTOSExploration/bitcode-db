; ModuleID = 'build/96b_argonkey/benchmark/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.external_data_msg = type { i8*, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.bm_msg = type { [256 x i8] }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231241 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231221 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231211 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231311 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231301 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231291 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231281 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231271 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231261 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231251 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233400 to i8*), void (i8*)* inttoptr (i32 134231231 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [55 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_bm_channel to i8*), i8* bitcast (%struct.zbus_channel* @bm_channel to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s1, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s2, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s3, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s4, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s5, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s6, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s7, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s8, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_bm_channel = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_bm_channel", align 4, !dbg !25
@_zbus_message_bm_channel = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !350
@_zbus_observers_bm_channel = internal constant [9 x %struct.zbus_observer*] [%struct.zbus_observer* @s1, %struct.zbus_observer* @s2, %struct.zbus_observer* @s3, %struct.zbus_observer* @s4, %struct.zbus_observer* @s5, %struct.zbus_observer* @s6, %struct.zbus_observer* @s7, %struct.zbus_observer* @s8, %struct.zbus_observer* null], align 4, !dbg !357
@bm_channel = dso_local constant %struct.zbus_channel { i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_bm_channel to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_bm_channel, %struct.zbus_observer** getelementptr inbounds ([9 x %struct.zbus_observer*], [9 x %struct.zbus_observer*]* @_zbus_observers_bm_channel, i32 0, i32 0) }, section "._zbus_channel.static.bm_channel", align 4, !dbg !112
@s1 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s1", align 4, !dbg !290
@s2 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s2", align 4, !dbg !292
@s3 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s3", align 4, !dbg !294
@s4 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s4", align 4, !dbg !296
@s5 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s5", align 4, !dbg !298
@s6 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s6", align 4, !dbg !300
@s7 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s7", align 4, !dbg !302
@s8 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s8", align 4, !dbg !304
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !348
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/benchmark.c\22.0", align 64, !dbg !343
@.str = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !306
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !339
@count = internal unnamed_addr global i64 0, align 8, !dbg !362
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Benchmark 1 to %d: Dynamic memory, %sSYNC transmission and message size %u\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"%c: Something wrong. Duration is zero!\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"%c: Bytes sent = %lld, received = %llu\0A\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"%c: Average data rate: %llu.%lluB/s\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"%c: Duration: %ums\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\0A@%u\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !364
@.str.1.10 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !388
@.str.15 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !398
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !448
@.str.21 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.23 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.24 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.22 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.29 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.30 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.31 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.45 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.41 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.42 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.44 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.38 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.39 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.36 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.37 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.35 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.34 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !477
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !608
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !483
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !617
@.str.57 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !653
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.70, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !663
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !668
@.str.69 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.70 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !688
@.str.1.73 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !700
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !892
@.str.81 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !854
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !837
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !810
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !826
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !856
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !869
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !871
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !873
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !875
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !877
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !879
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !881
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !883
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !885
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !887
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !897
@.str.83 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !924
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1019
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1008
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1060
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !917
@.str.92 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1126
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1407
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1377
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1363
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1305
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !915
@.str.1.93 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1409
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1381
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1379
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1319
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !913
@.str.2.94 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1422
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1385
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1383
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1328
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !911
@.str.3.95 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1424
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1389
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1387
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1337
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !909
@.str.4.96 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1426
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1393
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1391
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1343
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !907
@.str.5.97 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1428
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1397
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1395
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1349
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !905
@.str.6.98 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1430
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1401
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1399
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1355
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !903
@.str.7.99 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1432
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1405
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1403
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1361
@.str.103 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1434
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !919
@.str.1.106 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1590
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1645
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1588
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1647
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.106, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1579
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1581
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1634
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1637
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1639
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1642
@.str.2.108 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.111 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.113 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.114 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !992
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1658
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1765
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1767
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1763
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1734
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1769
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1303
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.93, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1317
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.94, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1326
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1335
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.96, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1341
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.97, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1347
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1353
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.99, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1359
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1859
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1900
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1903
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1910
@.str.149 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.153 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.154 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.155 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.159 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.160 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.161 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.162 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.163 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.158 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.157 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.159, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.160, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.161, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.162, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.163, i32 0, i32 0)], align 4
@.str.165 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.165, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1917
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2137
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2126
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2132
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2144
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2149
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.174 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.180, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.181, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.182, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.184, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.178, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.185, i32 0, i32 0)], align 4, !dbg !2177
@.str.179 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.180 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.181 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.182 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.183 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.184 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.178 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.185 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2289
@.str.8.177 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2302
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2410
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2518
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2521
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2523
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2142
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2134
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2525
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2561
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2559
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2564
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2569
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2004
@.str.286 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2604
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3353 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3355, !srcloc !3356
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3357, !srcloc !3358
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3359, !srcloc !3360
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3361, !srcloc !3362
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3363, !srcloc !3364
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3365, !srcloc !3366
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3367, !srcloc !3368
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3369, !srcloc !3370
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3371, !srcloc !3372
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3373, !srcloc !3374
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3375, !srcloc !3376
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3377, !srcloc !3378
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3379, !srcloc !3380
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3381, !srcloc !3382
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3383, !srcloc !3384
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3385, !srcloc !3386
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3387, !srcloc !3388
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3389, !srcloc !3390
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3391, !srcloc !3392
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3393, !srcloc !3394
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3395, !srcloc !3396
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3397, !srcloc !3398
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3403, !srcloc !3404
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3405, !srcloc !3406
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3407, !srcloc !3408
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3409, !srcloc !3412
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3413, !srcloc !3414
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3445, !srcloc !3446
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3447, !srcloc !3448
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3453, !srcloc !3454
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3455, !srcloc !3456
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3457, !srcloc !3458
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3459, !srcloc !3460
  ret void, !dbg !3461
}

; Function Attrs: noinline nounwind optsize
define internal void @s_cb(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3464 {
  %2 = alloca [256 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3466, metadata !DIExpression()), !dbg !3477
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3478
  call void @llvm.dbg.declare(metadata %struct.bm_msg* undef, metadata !3467, metadata !DIExpression()), !dbg !3479
  %4 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #26, !dbg !3480
  call void @llvm.dbg.value(metadata i8* %4, metadata !3474, metadata !DIExpression()), !dbg !3477
  %5 = bitcast i8* %4 to i8**, !dbg !3481
  %6 = load i8*, i8** %5, align 4, !dbg !3481
  %7 = call i8* @memcpy(i8* noundef nonnull %3, i8* noundef %6, i32 noundef 256) #27, !dbg !3482
  %8 = load i64, i64* @count, align 8, !dbg !3483
  %9 = add i64 %8, 256, !dbg !3483
  store i64 %9, i64* @count, align 8, !dbg !3483
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3484
  ret void, !dbg !3484
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3485 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3489, metadata !DIExpression()), !dbg !3490
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3491
  %3 = load i8*, i8** %2, align 4, !dbg !3491
  ret i8* %3, !dbg !3492
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3493 {
  %1 = alloca %struct.bm_msg, align 1
  %2 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3506
  %3 = zext i8 %2 to i32, !dbg !3506
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3, i32 noundef 8, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i32 noundef 256) #27, !dbg !3506
  %4 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 0, !dbg !3511
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3511
  call void @llvm.dbg.declare(metadata %struct.bm_msg* %1, metadata !3495, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.value(metadata i64 255, metadata !3498, metadata !DIExpression()), !dbg !3513
  br label %10, !dbg !3514

5:                                                ; preds = %10
  %6 = tail call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3515
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3496, metadata !DIExpression()), !dbg !3516
  %7 = tail call i8* @k_malloc(i32 noundef 256) #27, !dbg !3517
  store i8* %7, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3518
  store i32 256, i32* getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 1), align 4, !dbg !3519
  %8 = tail call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3520
  %9 = tail call fastcc i32 @k_uptime_get_32() #26, !dbg !3521
  call void @llvm.dbg.value(metadata i32 %9, metadata !3500, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.value(metadata i64 32768, metadata !3501, metadata !DIExpression()), !dbg !3522
  br label %21, !dbg !3523

10:                                               ; preds = %0, %10
  %11 = phi i64 [ 255, %0 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !3498, metadata !DIExpression()), !dbg !3513
  %12 = trunc i64 %11 to i8, !dbg !3524
  %13 = trunc i64 %11 to i32, !dbg !3527
  %14 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 %13, !dbg !3527
  store i8 %12, i8* %14, align 1, !dbg !3528
  %15 = add nsw i64 %11, -1, !dbg !3529
  call void @llvm.dbg.value(metadata i64 %15, metadata !3498, metadata !DIExpression()), !dbg !3513
  %16 = icmp eq i64 %15, 0, !dbg !3530
  br i1 %16, label %5, label %10, !dbg !3514, !llvm.loop !3531

17:                                               ; preds = %21
  %18 = call fastcc i32 @k_uptime_get_32() #26, !dbg !3533
  %19 = sub i32 %18, %9, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %19, metadata !3503, metadata !DIExpression()), !dbg !3516
  %20 = icmp eq i32 %19, 0, !dbg !3535
  br i1 %20, label %32, label %35, !dbg !3537

21:                                               ; preds = %5, %21
  %22 = phi i64 [ 32768, %5 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3501, metadata !DIExpression()), !dbg !3522
  %23 = call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3538
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3496, metadata !DIExpression()), !dbg !3516
  %24 = load i8*, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3541
  %25 = call i8* @memcpy(i8* noundef %24, i8* noundef nonnull %4, i32 noundef 256) #27, !dbg !3542
  %26 = call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3543
  %27 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #26, !dbg !3544
  %28 = insertvalue [1 x i64] poison, i64 %27, 0, !dbg !3545
  %29 = call i32 @zbus_chan_notify(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] %28) #27, !dbg !3545
  %30 = add nsw i64 %22, -256, !dbg !3546
  call void @llvm.dbg.value(metadata i64 %30, metadata !3501, metadata !DIExpression()), !dbg !3522
  %31 = icmp eq i64 %30, 0, !dbg !3547
  br i1 %31, label %17, label %21, !dbg !3523, !llvm.loop !3548

32:                                               ; preds = %17
  %33 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3550
  %34 = zext i8 %33 to i32, !dbg !3550
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0), i32 noundef %34) #27, !dbg !3550
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 3, i32 2) #25, !dbg !3556, !srcloc !3558
  br label %35, !dbg !3559

35:                                               ; preds = %32, %17
  %36 = zext i32 %19 to i64, !dbg !3560
  %37 = udiv i32 262144000, %19, !dbg !3561
  %38 = zext i32 %37 to i64, !dbg !3561
  call void @llvm.dbg.value(metadata i64 %38, metadata !3504, metadata !DIExpression()), !dbg !3516
  %39 = udiv i64 26214400000, %36, !dbg !3562
  %40 = urem i64 %39, 100, !dbg !3563
  call void @llvm.dbg.value(metadata i64 %40, metadata !3505, metadata !DIExpression()), !dbg !3516
  %41 = load i64, i64* @count, align 8, !dbg !3564
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), i32 noundef %3, i64 noundef 262144, i64 noundef %41) #27, !dbg !3564
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), i32 noundef %3, i64 noundef %38, i64 noundef %40) #27, !dbg !3569
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i32 noundef %3, i32 noundef %19) #27, !dbg !3574
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 noundef %19) #27, !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3580
  ret void, !dbg !3580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3586, metadata !DIExpression()), !dbg !3587
  %2 = add i32 %0, -1, !dbg !3588
  %3 = icmp ult i32 %2, 3, !dbg !3588
  %4 = trunc i32 %2 to i24, !dbg !3588
  %5 = shl i24 %4, 3, !dbg !3588
  %6 = lshr i24 4806469, %5, !dbg !3588
  %7 = trunc i24 %6 to i8, !dbg !3588
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3588
  ret i8 %8, !dbg !3589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3590 {
  %1 = tail call fastcc i64 @k_uptime_get() #26, !dbg !3593
  %2 = trunc i64 %1 to i32, !dbg !3594
  ret i32 %2, !dbg !3595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #5 !dbg !3596 {
  call void @llvm.dbg.value(metadata i64 200, metadata !3601, metadata !DIExpression()), !dbg !3602
  ret i64 2000, !dbg !3603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3604 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #26, !dbg !3607
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #26, !dbg !3608
  ret i64 %2, !dbg !3609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3610 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3612, !srcloc !3614
  %1 = tail call i64 @z_impl_k_uptime_ticks() #27, !dbg !3615
  ret i64 %1, !dbg !3616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !3617 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3619, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i64 %0, metadata !3621, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i32 10000, metadata !3626, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i32 1000, metadata !3627, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i8 1, metadata !3628, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i8 0, metadata !3629, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i1 false, metadata !3630, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3638
  call void @llvm.dbg.value(metadata i8 0, metadata !3631, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i1 false, metadata !3632, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3638
  call void @llvm.dbg.value(metadata i1 true, metadata !3633, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3638
  call void @llvm.dbg.value(metadata i64 0, metadata !3634, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i64 0, metadata !3634, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3621, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3638
  call void @llvm.dbg.value(metadata i64 %0, metadata !3621, metadata !DIExpression()), !dbg !3638
  %2 = udiv i64 %0, 10, !dbg !3640
  ret i64 %2, !dbg !3645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3646 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %0, metadata !3657, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %1, metadata !3658, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %2, metadata !3659, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %3, metadata !3660, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %0, metadata !3662, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %0, metadata !3663, metadata !DIExpression()), !dbg !3724
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3725
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3725
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3666, metadata !DIExpression()), !dbg !3726
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3727
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3727
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3668, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i32 0, metadata !3669, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 0, metadata !3670, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 0, metadata !3671, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 -1, metadata !3672, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 0, metadata !3675, metadata !DIExpression()), !dbg !3724
  %12 = and i32 %2, 4, !dbg !3729
  %13 = icmp eq i32 %12, 0, !dbg !3730
  call void @llvm.dbg.value(metadata i1 %13, metadata !3676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3724
  %14 = lshr i32 %2, 3, !dbg !3731
  %15 = and i32 %14, 7, !dbg !3731
  %16 = add nuw nsw i32 %15, 1, !dbg !3732
  call void @llvm.dbg.value(metadata i32 %16, metadata !3677, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 0, metadata !3678, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %0, metadata !3679, metadata !DIExpression()), !dbg !3724
  %17 = ptrtoint i8* %0 to i32, !dbg !3733
  %18 = and i32 %17, 3, !dbg !3735
  %19 = icmp eq i32 %18, 0, !dbg !3735
  br i1 %19, label %20, label %316, !dbg !3736

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3737
  call void @llvm.dbg.value(metadata i8* %21, metadata !3663, metadata !DIExpression()), !dbg !3724
  %22 = icmp eq i8* %0, null, !dbg !3738
  %23 = and i32 %1, 7, !dbg !3740
  %24 = sub nuw nsw i32 8, %23, !dbg !3740
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3740
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3740
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3740
  call void @llvm.dbg.value(metadata i32 %27, metadata !3658, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %26, metadata !3663, metadata !DIExpression()), !dbg !3724
  br i1 %22, label %33, label %28, !dbg !3741

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3743
  %30 = sub i32 4, %17, !dbg !3743
  %31 = add i32 %30, %29, !dbg !3744
  %32 = icmp ugt i32 %31, %27, !dbg !3745
  br i1 %32, label %316, label %33, !dbg !3746

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3747
  call void @llvm.dbg.value(metadata i8* %34, metadata !3660, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %3, metadata !3674, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 4, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 4, metadata !3664, metadata !DIExpression()), !dbg !3724
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3748

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %42, metadata !3660, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %43, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %44, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %45, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %72, metadata !3672, metadata !DIExpression()), !dbg !3724
  br i1 %46, label %73, label %47, !dbg !3749

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3750
  %49 = zext i1 %48 to i32, !dbg !3754
  %50 = add nsw i32 %72, %49, !dbg !3754
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3754
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3754
  call void @llvm.dbg.value(metadata i32 %52, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %51, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3675, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %50, metadata !3672, metadata !DIExpression()), !dbg !3724
  br label %53, !dbg !3755

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %40, metadata !3660, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %58, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %57, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %56, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3675, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %54, metadata !3672, metadata !DIExpression()), !dbg !3724
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3756
  call void @llvm.dbg.value(metadata i8* %60, metadata !3660, metadata !DIExpression()), !dbg !3724
  %61 = load i8, i8* %60, align 1, !dbg !3758
  %62 = icmp eq i8 %61, 0, !dbg !3759
  br i1 %62, label %223, label %63, !dbg !3760, !llvm.loop !3761

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3749

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3764

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3675, metadata !DIExpression()), !dbg !3724
  %75 = add nsw i32 %72, -1, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %75, metadata !3672, metadata !DIExpression()), !dbg !3724
  br label %53, !dbg !3766

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3767

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 4, metadata !3664, metadata !DIExpression()), !dbg !3724
  br label %53, !dbg !3768

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 4, metadata !3664, metadata !DIExpression()), !dbg !3724
  br label %53, !dbg !3769

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3770
  %81 = icmp eq i8 %80, 108, !dbg !3772
  br i1 %81, label %82, label %109, !dbg !3773

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3774
  %84 = load i8, i8* %83, align 1, !dbg !3774
  %85 = icmp eq i8 %84, 108, !dbg !3777
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3778
  %89 = add i32 %88, 7, !dbg !3778
  %90 = and i32 %89, -8, !dbg !3778
  %91 = inttoptr i32 %90 to i8*, !dbg !3778
  %92 = inttoptr i32 %90 to double*, !dbg !3778
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3778
  %94 = load double, double* %92, align 8, !dbg !3778
  call void @llvm.dbg.value(metadata i8* %93, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 8, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 8, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata double %94, metadata !3692, metadata !DIExpression()), !dbg !3780
  %95 = ptrtoint i8* %43 to i32, !dbg !3781
  %96 = add i32 %95, 7, !dbg !3781
  %97 = and i32 %96, -8, !dbg !3781
  %98 = inttoptr i32 %97 to i8*, !dbg !3782
  call void @llvm.dbg.value(metadata i8* %98, metadata !3663, metadata !DIExpression()), !dbg !3724
  br i1 %22, label %104, label %99, !dbg !3783

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3784
  %101 = icmp ugt i32 %100, %194, !dbg !3788
  br i1 %101, label %316, label %102, !dbg !3789

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3790
  store double %94, double* %103, align 8, !dbg !3790
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3793
  call void @llvm.dbg.value(metadata i8* %105, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3675, metadata !DIExpression()), !dbg !3724
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3675, metadata !DIExpression()), !dbg !3724
  br label %53, !dbg !3794

107:                                              ; preds = %73, %73
  br label %109, !dbg !3795

108:                                              ; preds = %73
  br label %109, !dbg !3795

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3724
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3724
  call void @llvm.dbg.value(metadata i32 %113, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %112, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3678, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3675, metadata !DIExpression()), !dbg !3724
  %114 = ptrtoint i8* %43 to i32, !dbg !3795
  %115 = add i32 %114, -1, !dbg !3795
  %116 = add i32 %115, %112, !dbg !3795
  %117 = sub i32 0, %112, !dbg !3795
  %118 = and i32 %116, %117, !dbg !3795
  %119 = inttoptr i32 %118 to i8*, !dbg !3796
  call void @llvm.dbg.value(metadata i8* %119, metadata !3663, metadata !DIExpression()), !dbg !3724
  br i1 %22, label %124, label %120, !dbg !3797

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3799
  %122 = add i32 %121, %118, !dbg !3800
  %123 = icmp ugt i32 %122, %194, !dbg !3801
  br i1 %123, label %316, label %124, !dbg !3802

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3803

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3796
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3804
  call void @llvm.dbg.value(metadata i8* %127, metadata !3661, metadata !DIExpression()), !dbg !3724
  %128 = bitcast i8* %41 to i8**, !dbg !3804
  %129 = load i8*, i8** %128, align 4, !dbg !3804
  call void @llvm.dbg.value(metadata i8* %129, metadata !3674, metadata !DIExpression()), !dbg !3724
  br label %130, !dbg !3805

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3806
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3807
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3724
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3808
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3724
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3809
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3724
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3724
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3724
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3724
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3810
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %142, metadata !3658, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %141, metadata !3660, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %140, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %139, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %138, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %137, metadata !3669, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %136, metadata !3677, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %135, metadata !3670, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3675, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %133, metadata !3674, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %132, metadata !3672, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %131, metadata !3671, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.label(metadata !3723), !dbg !3812
  br i1 %22, label %146, label %144, !dbg !3813

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3814
  store i8* %133, i8** %145, align 4, !dbg !3817
  br label %146, !dbg !3818

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3819
  call void @llvm.dbg.value(metadata i32 %147, metadata !3677, metadata !DIExpression()), !dbg !3724
  %148 = icmp sgt i32 %136, 0, !dbg !3820
  br i1 %148, label %152, label %149, !dbg !3821

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !3822
  %151 = zext i1 %150 to i32, !dbg !3822
  br label %152, !dbg !3821

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3821
  %154 = icmp eq i32 %153, 0, !dbg !3821
  call void @llvm.dbg.value(metadata i1 %154, metadata !3701, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3823
  call void @llvm.dbg.value(metadata i1 %36, metadata !3704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3823
  %155 = or i1 %36, %154, !dbg !3824
  br i1 %155, label %156, label %190, !dbg !3824

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3825
  %158 = sub i32 %157, %17, !dbg !3825
  %159 = lshr i32 %158, 2, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %159, metadata !3705, metadata !DIExpression()), !dbg !3827
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3828
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3828
  br i1 %163, label %316, label %164, !dbg !3828

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3830

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3831
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3834
  store i8 %166, i8* %167, align 1, !dbg !3835
  %168 = trunc i32 %132 to i8, !dbg !3836
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3837
  store i8 %168, i8* %169, align 1, !dbg !3838
  br i1 %154, label %173, label %170, !dbg !3839

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3840
  store i8 %171, i8* %167, align 1, !dbg !3840
  %172 = add i32 %131, 1, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %172, metadata !3671, metadata !DIExpression()), !dbg !3724
  br label %185, !dbg !3844

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3845
  call void @llvm.dbg.value(metadata i32 %174, metadata !3670, metadata !DIExpression()), !dbg !3724
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3847

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3848
  call void @llvm.dbg.value(metadata i32 %177, metadata !3658, metadata !DIExpression()), !dbg !3724
  br label %185, !dbg !3851

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3852

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %180, metadata !3658, metadata !DIExpression()), !dbg !3724
  br label %185, !dbg !3856

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !3857
  %183 = add i32 %142, 2, !dbg !3859
  %184 = add i32 %183, %182, !dbg !3860
  call void @llvm.dbg.value(metadata i32 %184, metadata !3658, metadata !DIExpression()), !dbg !3724
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3724
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3724
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3724
  call void @llvm.dbg.value(metadata i32 %188, metadata !3658, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %187, metadata !3670, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %186, metadata !3671, metadata !DIExpression()), !dbg !3724
  %189 = add nuw nsw i32 %137, 1, !dbg !3861
  call void @llvm.dbg.value(metadata i32 undef, metadata !3658, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 undef, metadata !3669, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 undef, metadata !3670, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 undef, metadata !3671, metadata !DIExpression()), !dbg !3724
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3806
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3808
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3809
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3810
  call void @llvm.dbg.value(metadata i32 %194, metadata !3658, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %193, metadata !3669, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %192, metadata !3670, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %191, metadata !3671, metadata !DIExpression()), !dbg !3724
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3862
  call void @llvm.dbg.value(metadata i8* %195, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %143, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %141, metadata !3660, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %139, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %138, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3678, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3675, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %132, metadata !3672, metadata !DIExpression()), !dbg !3724
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3756
  call void @llvm.dbg.value(metadata i8* %196, metadata !3660, metadata !DIExpression()), !dbg !3724
  %197 = load i8, i8* %196, align 1, !dbg !3758
  %198 = icmp eq i8 %197, 0, !dbg !3759
  br i1 %198, label %223, label %63, !dbg !3760

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3863

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3864
  call void @llvm.dbg.value(metadata i8* %201, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 undef, metadata !3708, metadata !DIExpression()), !dbg !3865
  br i1 %22, label %216, label %202, !dbg !3866

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3864
  %204 = load i32, i32* %203, align 4, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %204, metadata !3708, metadata !DIExpression()), !dbg !3865
  %205 = inttoptr i32 %118 to i32*, !dbg !3867
  store i32 %204, i32* %205, align 4, !dbg !3870
  br label %216, !dbg !3871

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3872
  %208 = add i32 %207, 7, !dbg !3872
  %209 = and i32 %208, -8, !dbg !3872
  %210 = inttoptr i32 %209 to i8*, !dbg !3872
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3872
  call void @llvm.dbg.value(metadata i8* %211, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i64 undef, metadata !3714, metadata !DIExpression()), !dbg !3873
  br i1 %22, label %216, label %212, !dbg !3874

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3872
  %214 = load i64, i64* %213, align 8, !dbg !3872
  call void @llvm.dbg.value(metadata i64 %214, metadata !3714, metadata !DIExpression()), !dbg !3873
  %215 = inttoptr i32 %118 to i64*, !dbg !3875
  store i64 %214, i64* %215, align 8, !dbg !3880
  br label %216, !dbg !3881

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3882
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3882
  call void @llvm.dbg.value(metadata i8* %218, metadata !3661, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %40, metadata !3660, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %219, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %113, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %112, metadata !3665, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3678, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8 poison, metadata !3675, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %72, metadata !3672, metadata !DIExpression()), !dbg !3724
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3756
  call void @llvm.dbg.value(metadata i8* %220, metadata !3660, metadata !DIExpression()), !dbg !3724
  %221 = load i8, i8* %220, align 1, !dbg !3758
  %222 = icmp eq i8 %221, 0, !dbg !3759
  br i1 %222, label %223, label %38, !dbg !3760

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3883
  %225 = ptrtoint i8* %224 to i32, !dbg !3884
  %226 = sub i32 %225, %17, !dbg !3884
  %227 = lshr i32 %226, 2, !dbg !3886
  %228 = icmp ugt i32 %226, 1023, !dbg !3887
  br i1 %228, label %316, label %229, !dbg !3888

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3889

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3890
  %232 = add i32 %231, %226, !dbg !3893
  br label %316, !dbg !3894

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3895
  store i8 %234, i8* %0, align 1, !dbg !3896
  %235 = trunc i32 %192 to i8, !dbg !3897
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3899
  store i8 %236, i8* %238, align 1, !dbg !3901
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3902
  store i8 %237, i8* %239, align 1, !dbg !3903
  %240 = trunc i32 %191 to i8, !dbg !3904
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3905
  store i8 %240, i8* %241, align 1, !dbg !3906
  %242 = icmp eq i32 %191, 0, !dbg !3907
  %243 = xor i1 %242, true, !dbg !3908
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3908
  call void @llvm.dbg.value(metadata i8* %224, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 0, metadata !3673, metadata !DIExpression()), !dbg !3724
  br i1 %245, label %246, label %265, !dbg !3908

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3909

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %250, metadata !3673, metadata !DIExpression()), !dbg !3724
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3910
  %252 = load i8, i8* %251, align 1, !dbg !3910
  %253 = icmp sgt i8 %252, -1, !dbg !3912
  br i1 %253, label %261, label %254, !dbg !3913

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3717, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3914
  %255 = ptrtoint i8* %249 to i32, !dbg !3915
  %256 = add i32 %247, %255, !dbg !3917
  %257 = icmp ugt i32 %256, %194, !dbg !3918
  br i1 %257, label %316, label %258, !dbg !3919

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3920
  call void @llvm.dbg.value(metadata i8 %259, metadata !3717, metadata !DIExpression()), !dbg !3914
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3921
  call void @llvm.dbg.value(metadata i8* %260, metadata !3663, metadata !DIExpression()), !dbg !3724
  store i8 %259, i8* %249, align 1, !dbg !3922
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3862
  call void @llvm.dbg.value(metadata i8* %262, metadata !3663, metadata !DIExpression()), !dbg !3724
  %263 = add nuw i32 %250, 1, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %263, metadata !3673, metadata !DIExpression()), !dbg !3724
  %264 = icmp eq i32 %263, %193, !dbg !3924
  br i1 %264, label %265, label %248, !dbg !3909, !llvm.loop !3925

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3862
  call void @llvm.dbg.value(metadata i8* %266, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 0, metadata !3673, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %133, metadata !3674, metadata !DIExpression()), !dbg !3724
  %267 = icmp eq i32 %193, 0, !dbg !3927
  br i1 %267, label %312, label %268, !dbg !3930

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3930

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %272, metadata !3674, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %273, metadata !3673, metadata !DIExpression()), !dbg !3724
  br i1 %242, label %278, label %274, !dbg !3931

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3934
  %276 = load i8, i8* %275, align 1, !dbg !3934
  %277 = icmp sgt i8 %276, -1, !dbg !3935
  br i1 %277, label %278, label %307, !dbg !3936

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !3937

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3664, metadata !DIExpression()), !dbg !3724
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !3938
  %281 = load i8, i8* %280, align 1, !dbg !3938
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !3941
  call void @llvm.dbg.value(metadata i8* %282, metadata !3663, metadata !DIExpression()), !dbg !3724
  store i8 %281, i8* %271, align 1, !dbg !3942
  br label %293, !dbg !3943

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3944
  %285 = load i8, i8* %284, align 1, !dbg !3944
  %286 = zext i8 %285 to i32, !dbg !3944
  %287 = shl nuw nsw i32 %286, 2, !dbg !3946
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !3947
  %289 = bitcast i8* %288 to i8**, !dbg !3948
  %290 = load i8*, i8** %289, align 4, !dbg !3948
  call void @llvm.dbg.value(metadata i8* %290, metadata !3674, metadata !DIExpression()), !dbg !3724
  store i8* null, i8** %289, align 4, !dbg !3949
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !3950
  %292 = add i32 %291, 1, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %292, metadata !3664, metadata !DIExpression()), !dbg !3724
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3724
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !3952
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3724
  call void @llvm.dbg.value(metadata i8* %296, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %295, metadata !3664, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %294, metadata !3674, metadata !DIExpression()), !dbg !3724
  %297 = ptrtoint i8* %296 to i32, !dbg !3953
  %298 = add i32 %269, %295, !dbg !3955
  %299 = add i32 %298, %297, !dbg !3956
  %300 = icmp ugt i32 %299, %194, !dbg !3957
  br i1 %300, label %316, label %301, !dbg !3958

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3959
  %303 = load i8, i8* %302, align 1, !dbg !3959
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !3960
  call void @llvm.dbg.value(metadata i8* %304, metadata !3663, metadata !DIExpression()), !dbg !3724
  store i8 %303, i8* %296, align 1, !dbg !3961
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !3962
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !3963
  call void @llvm.dbg.value(metadata i8* %306, metadata !3663, metadata !DIExpression()), !dbg !3724
  br label %307, !dbg !3964

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !3965
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3724
  call void @llvm.dbg.value(metadata i8* %309, metadata !3663, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i8* %308, metadata !3674, metadata !DIExpression()), !dbg !3724
  %310 = add nuw i32 %273, 1, !dbg !3966
  call void @llvm.dbg.value(metadata i32 %310, metadata !3673, metadata !DIExpression()), !dbg !3724
  %311 = icmp eq i32 %310, %193, !dbg !3927
  br i1 %311, label %312, label %270, !dbg !3930, !llvm.loop !3967

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3862
  %314 = ptrtoint i8* %313 to i32, !dbg !3969
  %315 = sub i32 %314, %17, !dbg !3969
  br label %316, !dbg !3970

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3724
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3971
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3971
  ret i32 %317, !dbg !3971
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3972 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3976, metadata !DIExpression()), !dbg !3977
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !3978
  ret i1 %2, !dbg !3979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3985, metadata !DIExpression()), !dbg !3986
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3987
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3988
  %4 = and i1 %2, %3, !dbg !3988
  ret i1 %4, !dbg !3989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3990 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3994, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i32 %1, metadata !3995, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i32 %2, metadata !3996, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata i8* %3, metadata !3997, metadata !DIExpression()), !dbg !4000
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4001
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4001
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3998, metadata !DIExpression()), !dbg !4002
  call void @llvm.va_start(i8* nonnull %6), !dbg !4003
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4004
  %8 = load i32, i32* %7, align 4, !dbg !4004
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4004
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %10, metadata !3999, metadata !DIExpression()), !dbg !4000
  call void @llvm.va_end(i8* nonnull %6), !dbg !4005
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4006
  ret i32 %10, !dbg !4007
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4008 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4020, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4021, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i8* %2, metadata !4022, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i8* %3, metadata !4023, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i8* %3, metadata !4024, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i8* %3, metadata !4025, metadata !DIExpression()), !dbg !4039
  %5 = icmp eq i8* %3, null, !dbg !4040
  br i1 %5, label %45, label %6, !dbg !4042

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4034, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4039
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4043
  %8 = load i8, i8* %7, align 1, !dbg !4043
  %9 = zext i8 %8 to i32, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %9, metadata !4035, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i8 undef, metadata !4036, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4039
  call void @llvm.dbg.value(metadata i8 undef, metadata !4037, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  call void @llvm.dbg.value(metadata i32 0, metadata !4033, metadata !DIExpression()), !dbg !4039
  %10 = icmp eq i8 %8, 0, !dbg !4045
  br i1 %10, label %39, label %11, !dbg !4048

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4049
  call void @llvm.dbg.value(metadata i8 %12, metadata !4034, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %13 = zext i8 %12 to i32, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %13, metadata !4034, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %14 = shl nuw nsw i32 %13, 2, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %14, metadata !4034, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4052
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4053
  %17 = load i8, i8* %16, align 1, !dbg !4053
  call void @llvm.dbg.value(metadata i8 %17, metadata !4036, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %18 = zext i8 %17 to i32, !dbg !4054
  call void @llvm.dbg.value(metadata i32 %18, metadata !4036, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4055
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4056
  %21 = load i8, i8* %20, align 1, !dbg !4056
  call void @llvm.dbg.value(metadata i8 %21, metadata !4037, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %22 = zext i8 %21 to i32, !dbg !4057
  call void @llvm.dbg.value(metadata i32 %22, metadata !4037, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %23 = shl nuw nsw i32 %22, 1, !dbg !4058
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4039
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4059
  call void @llvm.dbg.value(metadata i8* %24, metadata !4031, metadata !DIExpression()), !dbg !4039
  br label %25, !dbg !4048

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4031, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 %27, metadata !4033, metadata !DIExpression()), !dbg !4039
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4060
  call void @llvm.dbg.value(metadata i8* %28, metadata !4031, metadata !DIExpression()), !dbg !4039
  %29 = load i8, i8* %26, align 1, !dbg !4062
  %30 = zext i8 %29 to i32, !dbg !4062
  call void @llvm.dbg.value(metadata i32 %30, metadata !4038, metadata !DIExpression()), !dbg !4039
  %31 = shl nuw nsw i32 %30, 2, !dbg !4063
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4064
  %33 = bitcast i8* %32 to i8**, !dbg !4065
  call void @llvm.dbg.value(metadata i8** %33, metadata !4032, metadata !DIExpression()), !dbg !4039
  store i8* %28, i8** %33, align 4, !dbg !4066
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4067
  %35 = add i32 %34, 1, !dbg !4068
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4069
  call void @llvm.dbg.value(metadata i8* %36, metadata !4031, metadata !DIExpression()), !dbg !4039
  %37 = add nuw nsw i32 %27, 1, !dbg !4070
  call void @llvm.dbg.value(metadata i32 %37, metadata !4033, metadata !DIExpression()), !dbg !4039
  %38 = icmp eq i32 %37, %9, !dbg !4045
  br i1 %38, label %39, label %25, !dbg !4048, !llvm.loop !4071

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4073
  call void @llvm.dbg.value(metadata i8* %40, metadata !4024, metadata !DIExpression()), !dbg !4039
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4074
  %42 = bitcast i8* %41 to i8**, !dbg !4074
  %43 = load i8*, i8** %42, align 1, !dbg !4074
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4075
  br label %45, !dbg !4076

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4039
  ret i32 %46, !dbg !4077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4078 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4082, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4083, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i8* %2, metadata !4084, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i8* %3, metadata !4085, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i8* %4, metadata !4086, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i8* %4, metadata !4087, metadata !DIExpression()), !dbg !4092
  %6 = ptrtoint i8* %4 to i32, !dbg !4093
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4093
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4093
  ret i32 %8, !dbg !4094
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !4095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4099, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %1, metadata !4100, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8 0, metadata !4102, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 0, metadata !4103, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8 poison, metadata !4102, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8* %0, metadata !4099, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4104
  %3 = load i8, i8* %0, align 1, !dbg !4105
  call void @llvm.dbg.value(metadata i8 %3, metadata !4101, metadata !DIExpression()), !dbg !4104
  %4 = icmp eq i8 %3, 0, !dbg !4106
  br i1 %4, label %29, label %5, !dbg !4107

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %8, metadata !4103, metadata !DIExpression()), !dbg !4104
  br i1 %9, label %11, label %22, !dbg !4109

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4111
  br i1 %12, label %13, label %17, !dbg !4115

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4116
  br i1 %14, label %29, label %15, !dbg !4119

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4120
  br i1 %16, label %29, label %22, !dbg !4122

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4123
  %19 = xor i1 %18, true, !dbg !4125
  %20 = zext i1 %18 to i32, !dbg !4125
  %21 = add nsw i32 %8, %20, !dbg !4125
  br label %22, !dbg !4125

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4104
  call void @llvm.dbg.value(metadata i32 %24, metadata !4103, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8 poison, metadata !4102, metadata !DIExpression()), !dbg !4104
  %25 = icmp eq i8 %6, 37, !dbg !4126
  %26 = xor i1 %25, %23, !dbg !4128
  call void @llvm.dbg.value(metadata i8* %10, metadata !4099, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i8* %10, metadata !4099, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4104
  %27 = load i8, i8* %10, align 1, !dbg !4105
  call void @llvm.dbg.value(metadata i8 %27, metadata !4101, metadata !DIExpression()), !dbg !4104
  %28 = icmp eq i8 %27, 0, !dbg !4106
  br i1 %28, label %29, label %5, !dbg !4107, !llvm.loop !4129

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4104
  ret i1 %30, !dbg !4131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4132 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4136, metadata !DIExpression()), !dbg !4137
  %2 = add i8 %0, -64, !dbg !4138
  %3 = icmp ult i8 %2, 59, !dbg !4138
  ret i1 %3, !dbg !4139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4140 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4148, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %1, metadata !4149, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4150, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %3, metadata !4151, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %4, metadata !4152, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i16* %5, metadata !4153, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %6, metadata !4154, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %0, metadata !4155, metadata !DIExpression()), !dbg !4217
  %11 = bitcast i8* %0 to i32*, !dbg !4218
  call void @llvm.dbg.value(metadata i32* %11, metadata !4156, metadata !DIExpression()), !dbg !4217
  %12 = and i32 %4, 8, !dbg !4219
  %13 = icmp eq i32 %12, 0, !dbg !4220
  call void @llvm.dbg.value(metadata i1 %13, metadata !4160, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %0, metadata !4163, metadata !DIExpression()), !dbg !4217
  %14 = icmp eq i32 %1, 0, !dbg !4221
  br i1 %14, label %15, label %17, !dbg !4222

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4223
  br label %17, !dbg !4222

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4222
  call void @llvm.dbg.value(metadata i32 %18, metadata !4149, metadata !DIExpression()), !dbg !4217
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4224
  %20 = load i8, i8* %19, align 1, !dbg !4224
  %21 = zext i8 %20 to i32, !dbg !4225
  call void @llvm.dbg.value(metadata i32 %21, metadata !4158, metadata !DIExpression()), !dbg !4217
  %22 = icmp ne i8 %20, 0, !dbg !4226
  %23 = and i32 %4, 1, !dbg !4227
  %24 = icmp ne i32 %23, 0, !dbg !4227
  %25 = and i1 %24, %22, !dbg !4227
  call void @llvm.dbg.value(metadata i1 %25, metadata !4162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4217
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4228
  %27 = load i8, i8* %26, align 1, !dbg !4228
  %28 = zext i8 %27 to i32, !dbg !4229
  call void @llvm.dbg.value(metadata i32 %28, metadata !4159, metadata !DIExpression()), !dbg !4217
  %29 = icmp ne i8 %27, 0, !dbg !4230
  %30 = and i32 %4, 2, !dbg !4231
  %31 = icmp ne i32 %30, 0, !dbg !4231
  %32 = and i1 %31, %29, !dbg !4231
  call void @llvm.dbg.value(metadata i1 %32, metadata !4161, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4217
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4232
  br i1 %33, label %38, label %34, !dbg !4232

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4234
  br i1 %35, label %267, label %36, !dbg !4237

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4238
  br label %267, !dbg !4240

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4241
  %40 = zext i8 %39 to i32, !dbg !4242
  %41 = shl nuw nsw i32 %40, 2, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %41, metadata !4157, metadata !DIExpression()), !dbg !4217
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4244
  %43 = bitcast i8* %42 to i8**, !dbg !4245
  %44 = load i8*, i8** %43, align 4, !dbg !4245
  call void @llvm.dbg.value(metadata i8* %44, metadata !4166, metadata !DIExpression()), !dbg !4217
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4246
  call void @llvm.dbg.value(metadata i8* %45, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 0, metadata !4168, metadata !DIExpression()), !dbg !4217
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4247
  br i1 %46, label %47, label %132, !dbg !4248

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4165, metadata !DIExpression()), !dbg !4217
  br i1 %25, label %48, label %73, !dbg !4249

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %45, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 0, metadata !4168, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 0, metadata !4169, metadata !DIExpression()), !dbg !4250
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4251

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %52, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %53, metadata !4168, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %54, metadata !4169, metadata !DIExpression()), !dbg !4250
  %55 = load i8, i8* %52, align 1, !dbg !4252
  %56 = zext i8 %55 to i32, !dbg !4253
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4253
  %58 = bitcast i32* %57 to i8**, !dbg !4254
  %59 = load i8*, i8** %58, align 4, !dbg !4254
  call void @llvm.dbg.value(metadata i8* %59, metadata !4175, metadata !DIExpression()), !dbg !4255
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %60, metadata !4178, metadata !DIExpression()), !dbg !4255
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4257
  br i1 %62, label %63, label %67, !dbg !4257

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4259
  %65 = add nuw i32 %53, 1, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %65, metadata !4168, metadata !DIExpression()), !dbg !4217
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4262
  store i16 %64, i16* %66, align 2, !dbg !4263
  br label %67, !dbg !4264

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4217
  call void @llvm.dbg.value(metadata i32 %68, metadata !4168, metadata !DIExpression()), !dbg !4217
  %69 = add nsw i32 %60, %51, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %69, metadata !4165, metadata !DIExpression()), !dbg !4217
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4266
  call void @llvm.dbg.value(metadata i8* %70, metadata !4167, metadata !DIExpression()), !dbg !4217
  %71 = add nuw nsw i32 %54, 1, !dbg !4267
  call void @llvm.dbg.value(metadata i32 %71, metadata !4169, metadata !DIExpression()), !dbg !4250
  %72 = icmp eq i32 %71, %21, !dbg !4268
  br i1 %72, label %79, label %50, !dbg !4251, !llvm.loop !4269

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4271
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4271
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4271
  br label %79, !dbg !4271

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4274
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4217
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4275
  call void @llvm.dbg.value(metadata i1 undef, metadata !4179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4276
  call void @llvm.dbg.value(metadata i32 0, metadata !4180, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i32 %82, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %81, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %80, metadata !4168, metadata !DIExpression()), !dbg !4217
  %83 = icmp eq i8 %27, 0, !dbg !4278
  br i1 %83, label %267, label %84, !dbg !4279

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4280
  %86 = icmp eq i32 %85, 0, !dbg !4281
  call void @llvm.dbg.value(metadata i1 %86, metadata !4179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4276
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4279

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %93, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %94, metadata !4168, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %95, metadata !4180, metadata !DIExpression()), !dbg !4277
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4282
  call void @llvm.dbg.value(metadata i8* %96, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 undef, metadata !4182, metadata !DIExpression()), !dbg !4283
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4284
  call void @llvm.dbg.value(metadata i8* %97, metadata !4167, metadata !DIExpression()), !dbg !4217
  %98 = load i8, i8* %96, align 1, !dbg !4285
  call void @llvm.dbg.value(metadata i8 %98, metadata !4185, metadata !DIExpression()), !dbg !4283
  %99 = zext i8 %98 to i32, !dbg !4286
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4286
  %101 = bitcast i32* %100 to i8**, !dbg !4287
  %102 = load i8*, i8** %101, align 4, !dbg !4287
  call void @llvm.dbg.value(metadata i8* %102, metadata !4186, metadata !DIExpression()), !dbg !4283
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4288
  call void @llvm.dbg.value(metadata i1 %103, metadata !4187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4283
  br i1 %13, label %110, label %104, !dbg !4289

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4291
  call void @llvm.dbg.value(metadata i8 %105, metadata !4182, metadata !DIExpression()), !dbg !4283
  %106 = zext i8 %105 to i32, !dbg !4292
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4293
  br i1 %107, label %108, label %110, !dbg !4294

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4295
  %109 = add nsw i32 %92, -2, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %109, metadata !4165, metadata !DIExpression()), !dbg !4217
  br label %127, !dbg !4302

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4303

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4304

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %113, metadata !4165, metadata !DIExpression()), !dbg !4217
  br label %127, !dbg !4309

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4310

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4213), !dbg !4311
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4312
  call void @llvm.dbg.value(metadata i32 %116, metadata !4188, metadata !DIExpression()), !dbg !4283
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4313
  br i1 %118, label %119, label %123, !dbg !4313

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4315
  %121 = add nuw i32 %94, 1, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %121, metadata !4168, metadata !DIExpression()), !dbg !4217
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4318
  store i16 %120, i16* %122, align 2, !dbg !4319
  br label %123, !dbg !4320

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4217
  call void @llvm.dbg.value(metadata i32 %124, metadata !4168, metadata !DIExpression()), !dbg !4217
  %125 = add i32 %92, -1, !dbg !4321
  %126 = add i32 %125, %116, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %126, metadata !4165, metadata !DIExpression()), !dbg !4217
  br label %127, !dbg !4323

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4217
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4283
  call void @llvm.dbg.value(metadata i32 %129, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %128, metadata !4168, metadata !DIExpression()), !dbg !4217
  %130 = add nuw nsw i32 %95, 1, !dbg !4324
  call void @llvm.dbg.value(metadata i8* %97, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %130, metadata !4180, metadata !DIExpression()), !dbg !4277
  %131 = icmp eq i32 %130, %28, !dbg !4278
  br i1 %131, label %267, label %91, !dbg !4279, !llvm.loop !4325

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4190, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4191, metadata !DIExpression()), !dbg !4328
  br i1 %25, label %133, label %135, !dbg !4329

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4192, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 0, metadata !4193, metadata !DIExpression()), !dbg !4217
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4330
  call void @llvm.dbg.value(metadata i8* %134, metadata !4194, metadata !DIExpression()), !dbg !4217
  br label %140, !dbg !4333

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4334
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4334

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4194, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 undef, metadata !4193, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 0, metadata !4192, metadata !DIExpression()), !dbg !4217
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4336
  br label %145, !dbg !4339

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4340
  call void @llvm.dbg.value(metadata i8* %148, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 0, metadata !4196, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.value(metadata i8 %146, metadata !4193, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 %147, metadata !4192, metadata !DIExpression()), !dbg !4217
  %149 = icmp eq i8 %27, 0, !dbg !4342
  br i1 %149, label %150, label %152, !dbg !4343

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4344
  br label %157, !dbg !4343

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4343

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4344
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4345
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4346
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4217
  call void @llvm.dbg.value(metadata i8 undef, metadata !4189, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4217
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4347
  %163 = load i8, i8* %162, align 1, !dbg !4347
  %164 = zext i8 %159 to i32, !dbg !4348
  %165 = add i8 %163, %159, !dbg !4349
  call void @llvm.dbg.value(metadata i8 %165, metadata !4189, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4217
  %166 = icmp eq i32 %30, 0, !dbg !4350
  %167 = lshr i8 %160, 1, !dbg !4351
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4351
  call void @llvm.dbg.value(metadata i8 %168, metadata !4189, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4217
  %169 = icmp eq i32 %23, 0, !dbg !4352
  %170 = icmp eq i32 %158, 0, !dbg !4344
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4344
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4344
  call void @llvm.dbg.value(metadata i8 %172, metadata !4189, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4217
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4204, metadata !DIExpression()), !dbg !4353
  %173 = load i32, i32* %11, align 1, !dbg !4354
  store i8 %165, i8* %162, align 1, !dbg !4355
  store i8 %172, i8* %19, align 1, !dbg !4355
  store i8 %168, i8* %26, align 1, !dbg !4355
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %174, metadata !4195, metadata !DIExpression()), !dbg !4217
  %175 = icmp slt i32 %174, 0, !dbg !4357
  br i1 %175, label %267, label %220, !dbg !4359

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %178, metadata !4196, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.value(metadata i8 %179, metadata !4193, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 %180, metadata !4192, metadata !DIExpression()), !dbg !4217
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4360
  call void @llvm.dbg.value(metadata i8* %181, metadata !4167, metadata !DIExpression()), !dbg !4217
  %182 = load i8, i8* %177, align 1, !dbg !4361
  call void @llvm.dbg.value(metadata i8 %182, metadata !4198, metadata !DIExpression()), !dbg !4362
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4363
  call void @llvm.dbg.value(metadata i8* %183, metadata !4167, metadata !DIExpression()), !dbg !4217
  %184 = load i8, i8* %181, align 1, !dbg !4364
  call void @llvm.dbg.value(metadata i8 %184, metadata !4201, metadata !DIExpression()), !dbg !4362
  %185 = zext i8 %184 to i32, !dbg !4365
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4365
  %187 = bitcast i32* %186 to i8**, !dbg !4366
  %188 = load i8*, i8** %187, align 4, !dbg !4366
  call void @llvm.dbg.value(metadata i8* %188, metadata !4202, metadata !DIExpression()), !dbg !4362
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4367
  call void @llvm.dbg.value(metadata i1 %189, metadata !4203, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4362
  br i1 %13, label %193, label %190, !dbg !4368

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4370
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4371
  br i1 %192, label %215, label %193, !dbg !4372

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4373

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4374

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4377
  call void @llvm.dbg.value(metadata i8 %196, metadata !4192, metadata !DIExpression()), !dbg !4217
  br label %208, !dbg !4380

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4381

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4382
  call void @llvm.dbg.value(metadata i8 %199, metadata !4193, metadata !DIExpression()), !dbg !4217
  br label %208, !dbg !4385

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4386

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4388
  call void @llvm.dbg.value(metadata i8 %202, metadata !4192, metadata !DIExpression()), !dbg !4217
  br label %208, !dbg !4391

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4392
  call void @llvm.dbg.value(metadata i8 %204, metadata !4193, metadata !DIExpression()), !dbg !4217
  %205 = zext i8 %179 to i32, !dbg !4394
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4394
  store i8 %182, i8* %206, align 1, !dbg !4395
  %207 = add i8 %179, 2, !dbg !4396
  call void @llvm.dbg.value(metadata i8 %207, metadata !4193, metadata !DIExpression()), !dbg !4217
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4397
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4397
  store i8 %184, i8* %214, align 1, !dbg !4397
  br label %215, !dbg !4398

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4217
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4346
  call void @llvm.dbg.value(metadata i8 %217, metadata !4193, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 %216, metadata !4192, metadata !DIExpression()), !dbg !4217
  %218 = add nuw nsw i32 %178, 1, !dbg !4398
  call void @llvm.dbg.value(metadata i8* %183, metadata !4167, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %218, metadata !4196, metadata !DIExpression()), !dbg !4341
  %219 = icmp eq i32 %218, %28, !dbg !4342
  br i1 %219, label %157, label %176, !dbg !4343, !llvm.loop !4399

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %174, metadata !4165, metadata !DIExpression()), !dbg !4217
  store i32 %173, i32* %11, align 1, !dbg !4401
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4402
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %223, metadata !4195, metadata !DIExpression()), !dbg !4217
  %224 = icmp slt i32 %223, 0, !dbg !4404
  br i1 %224, label %267, label %225, !dbg !4406

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4165, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4217
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4407
  %228 = add nuw nsw i32 %41, %21, !dbg !4407
  %229 = sub i32 %227, %228, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %229, metadata !4205, metadata !DIExpression()), !dbg !4217
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4408
  call void @llvm.dbg.value(metadata i32 %230, metadata !4195, metadata !DIExpression()), !dbg !4217
  %231 = icmp slt i32 %230, 0, !dbg !4409
  br i1 %231, label %267, label %232, !dbg !4411

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %233, metadata !4165, metadata !DIExpression()), !dbg !4217
  %234 = add nuw nsw i32 %233, %230, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %234, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 0, metadata !4206, metadata !DIExpression()), !dbg !4414
  %235 = icmp eq i8 %159, 0, !dbg !4415
  br i1 %235, label %264, label %236, !dbg !4416

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4416

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4206, metadata !DIExpression()), !dbg !4414
  call void @llvm.dbg.value(metadata i32 %240, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4417
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4418
  %242 = load i8, i8* %241, align 1, !dbg !4418
  call void @llvm.dbg.value(metadata i8 %242, metadata !4208, metadata !DIExpression()), !dbg !4419
  store i8 %242, i8* %10, align 1, !dbg !4420
  %243 = zext i8 %242 to i32, !dbg !4421
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4421
  %245 = bitcast i32* %244 to i8**, !dbg !4422
  %246 = load i8*, i8** %245, align 4, !dbg !4422
  call void @llvm.dbg.value(metadata i8* %246, metadata !4211, metadata !DIExpression()), !dbg !4419
  br i1 %237, label %250, label %247, !dbg !4423

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4424
  %249 = load i16, i16* %248, align 2, !dbg !4424
  br label %250, !dbg !4423

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4423
  call void @llvm.dbg.value(metadata i32 undef, metadata !4212, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4419
  call void @llvm.dbg.value(metadata i8* %10, metadata !4208, metadata !DIExpression(DW_OP_deref)), !dbg !4419
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %252, metadata !4195, metadata !DIExpression()), !dbg !4217
  %253 = icmp slt i32 %252, 0, !dbg !4426
  br i1 %253, label %257, label %254, !dbg !4428

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4212, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4165, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4217
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4429
  call void @llvm.dbg.value(metadata i32 %255, metadata !4195, metadata !DIExpression()), !dbg !4217
  %256 = icmp slt i32 %255, 0, !dbg !4430
  br i1 %256, label %257, label %259, !dbg !4432

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4433
  call void @llvm.dbg.value(metadata i32 undef, metadata !4165, metadata !DIExpression()), !dbg !4217
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %260, metadata !4165, metadata !DIExpression()), !dbg !4217
  %261 = add nsw i32 %260, %255, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %261, metadata !4165, metadata !DIExpression()), !dbg !4217
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4433
  %262 = add nuw nsw i32 %239, 1, !dbg !4436
  call void @llvm.dbg.value(metadata i32 %262, metadata !4206, metadata !DIExpression()), !dbg !4414
  %263 = icmp eq i32 %262, %164, !dbg !4415
  br i1 %263, label %264, label %238, !dbg !4416, !llvm.loop !4437

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4413
  call void @llvm.dbg.value(metadata i32 %265, metadata !4165, metadata !DIExpression()), !dbg !4217
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4439
  br label %267, !dbg !4440

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4217
  ret i32 %268, !dbg !4441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4442 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4446, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.value(metadata i8* %0, metadata !4447, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.value(metadata i8* %0, metadata !4448, metadata !DIExpression()), !dbg !4454
  %2 = load i8, i8* %0, align 1, !dbg !4455
  %3 = zext i8 %2 to i32, !dbg !4455
  %4 = shl nuw nsw i32 %3, 2, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %4, metadata !4449, metadata !DIExpression()), !dbg !4454
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4457
  %6 = load i8, i8* %5, align 1, !dbg !4457
  %7 = zext i8 %6 to i32, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %7, metadata !4450, metadata !DIExpression()), !dbg !4454
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4458
  %9 = load i8, i8* %8, align 1, !dbg !4458
  %10 = zext i8 %9 to i32, !dbg !4458
  call void @llvm.dbg.value(metadata i32 %10, metadata !4451, metadata !DIExpression()), !dbg !4454
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4459
  call void @llvm.dbg.value(metadata i8* %11, metadata !4447, metadata !DIExpression()), !dbg !4454
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4460
  call void @llvm.dbg.value(metadata i8* %12, metadata !4447, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.value(metadata i32 0, metadata !4452, metadata !DIExpression()), !dbg !4461
  %13 = icmp eq i8 %6, 0, !dbg !4462
  br i1 %13, label %14, label %19, !dbg !4464

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4454
  %16 = ptrtoint i8* %15 to i32, !dbg !4465
  %17 = ptrtoint i8* %0 to i32, !dbg !4465
  %18 = sub i32 %16, %17, !dbg !4465
  ret i32 %18, !dbg !4466

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4452, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i8* %21, metadata !4447, metadata !DIExpression()), !dbg !4454
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4467
  call void @llvm.dbg.value(metadata i8* %22, metadata !4447, metadata !DIExpression()), !dbg !4454
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !4469
  %24 = add i32 %23, 1, !dbg !4470
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4471
  call void @llvm.dbg.value(metadata i8* %25, metadata !4447, metadata !DIExpression()), !dbg !4454
  %26 = add nuw nsw i32 %20, 1, !dbg !4472
  call void @llvm.dbg.value(metadata i32 %26, metadata !4452, metadata !DIExpression()), !dbg !4461
  %27 = icmp eq i32 %26, %7, !dbg !4462
  br i1 %27, label %14, label %19, !dbg !4464, !llvm.loop !4473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4475 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4479, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %1, metadata !4480, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %2, metadata !4481, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i16 %3, metadata !4482, metadata !DIExpression()), !dbg !4483
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4484
  br i1 %5, label %6, label %9, !dbg !4486

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4487
  %8 = add i32 %7, 1, !dbg !4489
  br label %20, !dbg !4490

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4491
  br i1 %10, label %13, label %11, !dbg !4492

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4492
  br label %16, !dbg !4492

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4493
  %15 = add i32 %14, 1, !dbg !4494
  br label %16, !dbg !4492

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4492
  %18 = and i32 %17, 65535, !dbg !4495
  call void @llvm.dbg.value(metadata i32 %17, metadata !4482, metadata !DIExpression()), !dbg !4483
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4496
  br label %20, !dbg !4497

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4483
  ret i32 %21, !dbg !4498
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4501, metadata !DIExpression()), !dbg !4502
  ret i32 0, !dbg !4503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !4504 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4508, metadata !DIExpression()), !dbg !4509
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4510
  ret void, !dbg !4511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !4512 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4515
  ret i8* %1, !dbg !4516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4517 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4528, metadata !DIExpression()), !dbg !4537
  call void @llvm.dbg.value(metadata i8* %0, metadata !4527, metadata !DIExpression()), !dbg !4537
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !4538
  ret void, !dbg !4540
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4545, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i8* %1, metadata !4546, metadata !DIExpression()), !dbg !4547
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4548
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4548
  ret i32 %4, !dbg !4549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4550 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4557, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4554, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i8* %1, metadata !4555, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i8* %2, metadata !4556, metadata !DIExpression()), !dbg !4558
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4559
  ret void, !dbg !4560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4561 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4565, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 %1, metadata !4566, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.value(metadata i32 0, metadata !4567, metadata !DIExpression()), !dbg !4568
  %3 = icmp eq i32 %1, 0, !dbg !4569
  br i1 %3, label %13, label %4, !dbg !4572

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4567, metadata !DIExpression()), !dbg !4568
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4573
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4575
  %8 = load i8, i8* %7, align 1, !dbg !4575
  %9 = zext i8 %8 to i32, !dbg !4575
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4573
  %11 = add nuw i32 %5, 1, !dbg !4576
  call void @llvm.dbg.value(metadata i32 %11, metadata !4567, metadata !DIExpression()), !dbg !4568
  %12 = icmp eq i32 %11, %1, !dbg !4569
  br i1 %12, label %13, label %4, !dbg !4572, !llvm.loop !4577

13:                                               ; preds = %4, %2
  ret void, !dbg !4579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4580 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4584, metadata !DIExpression()), !dbg !4586
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4587
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4587
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4585, metadata !DIExpression()), !dbg !4588
  call void @llvm.va_start(i8* nonnull %3), !dbg !4589
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4590
  %5 = load i32, i32* %4, align 4, !dbg !4590
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4590
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !4590
  call void @llvm.va_end(i8* nonnull %3), !dbg !4591
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4592
  ret void, !dbg !4592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4593 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4597, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i32 %1, metadata !4598, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.value(metadata i8* %2, metadata !4599, metadata !DIExpression()), !dbg !4602
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4603
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4603
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4600, metadata !DIExpression()), !dbg !4604
  call void @llvm.va_start(i8* nonnull %5), !dbg !4605
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4606
  %7 = load i32, i32* %6, align 4, !dbg !4606
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4606
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %9, metadata !4601, metadata !DIExpression()), !dbg !4602
  call void @llvm.va_end(i8* nonnull %5), !dbg !4607
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4608
  ret i32 %9, !dbg !4609
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4610 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4617, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %0, metadata !4614, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i32 %1, metadata !4615, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i8* %2, metadata !4616, metadata !DIExpression()), !dbg !4624
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4625
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4625
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4618, metadata !DIExpression()), !dbg !4626
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4627
  store i8* %0, i8** %7, align 4, !dbg !4627
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4627
  store i32 %1, i32* %8, align 4, !dbg !4627
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4627
  store i32 0, i32* %9, align 4, !dbg !4627
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !4628
  %10 = load i32, i32* %9, align 4, !dbg !4629
  %11 = load i32, i32* %8, align 4, !dbg !4631
  %12 = icmp slt i32 %10, %11, !dbg !4632
  br i1 %12, label %13, label %15, !dbg !4633

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4634
  store i8 0, i8* %14, align 1, !dbg !4636
  br label %15, !dbg !4637

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4638
  ret i32 %10, !dbg !4639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4645, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4646, metadata !DIExpression()), !dbg !4647
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4648
  %4 = load i8*, i8** %3, align 4, !dbg !4648
  %5 = icmp eq i8* %4, null, !dbg !4650
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4651
  br i1 %5, label %12, label %8, !dbg !4652

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4653
  %10 = load i32, i32* %9, align 4, !dbg !4653
  %11 = icmp slt i32 %7, %10, !dbg !4654
  br i1 %11, label %15, label %12, !dbg !4655

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4656
  %14 = add nsw i32 %7, 1, !dbg !4658
  store i32 %14, i32* %13, align 4, !dbg !4658
  br label %25, !dbg !4659

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4660
  %17 = icmp eq i32 %7, %16, !dbg !4662
  br i1 %17, label %18, label %21, !dbg !4663

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4664
  store i32 %19, i32* %6, align 4, !dbg !4664
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4666
  store i8 0, i8* %20, align 1, !dbg !4667
  br label %25, !dbg !4668

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4669
  %23 = add nsw i32 %7, 1, !dbg !4671
  store i32 %23, i32* %6, align 4, !dbg !4671
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4672
  store i8 %22, i8* %24, align 1, !dbg !4673
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4674
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4675 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4680, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i8* %1, metadata !4681, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i8* %2, metadata !4682, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i8* %3, metadata !4683, metadata !DIExpression()), !dbg !4684
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !4685
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !4686
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !4687
  unreachable, !dbg !4688
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4689 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !4793
  ret %struct.k_thread* %1, !dbg !4794
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4799, metadata !DIExpression()), !dbg !4800
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4801, !srcloc !4803
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !4804
  ret void, !dbg !4805
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4806 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4807, !srcloc !4809
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !4810
  ret %struct.k_thread* %1, !dbg !4811
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #12 !dbg !4812 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4823, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.value(metadata i8* %1, metadata !4824, metadata !DIExpression()), !dbg !4827
  %3 = icmp eq i8* %1, null, !dbg !4828
  br i1 %3, label %8, label %4, !dbg !4830

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4831
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4831
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4825, metadata !DIExpression()), !dbg !4827
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4832, !range !4833
  call void @llvm.dbg.value(metadata i32 %7, metadata !4826, metadata !DIExpression()), !dbg !4827
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4834
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4835
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4837 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4841, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.value(metadata i8* %1, metadata !4842, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.value(metadata i8* %1, metadata !4843, metadata !DIExpression()), !dbg !4845
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4846
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4844, metadata !DIExpression()), !dbg !4845
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4847
  %5 = ptrtoint i8* %4 to i32, !dbg !4848
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4848
  %7 = sub i32 %5, %6, !dbg !4848
  %8 = lshr i32 %7, 3, !dbg !4849
  ret i32 %8, !dbg !4850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4851 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4855, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.value(metadata i32 %1, metadata !4856, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.value(metadata i1 %2, metadata !4857, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4860
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4861
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4858, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4859, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4860
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4862
  %6 = bitcast i8* %5 to i16*, !dbg !4862
  %7 = load i16, i16* %6, align 2, !dbg !4862
  %8 = and i16 %7, -2, !dbg !4866
  %9 = zext i1 %2 to i16, !dbg !4866
  %10 = or i16 %8, %9, !dbg !4866
  store i16 %10, i16* %6, align 2, !dbg !4862
  ret void, !dbg !4867
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4868 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4872, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i32 %1, metadata !4873, metadata !DIExpression()), !dbg !4874
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4875
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4877
  br i1 %4, label %7, label %5, !dbg !4878

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4879
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4881
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4882
  br label %7, !dbg !4883

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4884, !range !4886
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4887
  br i1 %9, label %13, label %10, !dbg !4888

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4889
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4891, !range !4886
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4892
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %12, metadata !4873, metadata !DIExpression()), !dbg !4874
  br label %13, !dbg !4894

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4873, metadata !DIExpression()), !dbg !4874
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4895
  ret void, !dbg !4896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4897 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4901, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i32 %1, metadata !4902, metadata !DIExpression()), !dbg !4903
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4904
  %4 = add i32 %3, %1, !dbg !4905
  ret i32 %4, !dbg !4906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4907 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4911, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %1, metadata !4912, metadata !DIExpression()), !dbg !4913
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4914
  %4 = and i32 %3, 1, !dbg !4915
  %5 = icmp ne i32 %4, 0, !dbg !4914
  ret i1 %5, !dbg !4916
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4917 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4919, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata i32 %1, metadata !4920, metadata !DIExpression()), !dbg !4924
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4925, !range !4926
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %4, metadata !4921, metadata !DIExpression()), !dbg !4928
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4929
  ret void, !dbg !4930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4931 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4935, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i32 %1, metadata !4936, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i32 %2, metadata !4937, metadata !DIExpression()), !dbg !4940
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4941
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4942
  %6 = add i32 %5, %4, !dbg !4943
  call void @llvm.dbg.value(metadata i32 %6, metadata !4938, metadata !DIExpression()), !dbg !4940
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4944
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4945
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4946
  ret void, !dbg !4947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4948 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4950, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata i32 %1, metadata !4951, metadata !DIExpression()), !dbg !4952
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4953
  %4 = sub i32 %1, %3, !dbg !4954
  ret i32 %4, !dbg !4955
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4956 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4958, metadata !DIExpression()), !dbg !4963
  call void @llvm.dbg.value(metadata i32 %1, metadata !4959, metadata !DIExpression()), !dbg !4963
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4964, !range !4926
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %4, metadata !4960, metadata !DIExpression()), !dbg !4966
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4967
  ret void, !dbg !4968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4969 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4973, metadata !DIExpression()), !dbg !4975
  call void @llvm.dbg.value(metadata i32 %1, metadata !4974, metadata !DIExpression()), !dbg !4975
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4976
  %4 = lshr i32 %3, 1, !dbg !4977
  ret i32 %4, !dbg !4978
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4979 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4983, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i32 %1, metadata !4984, metadata !DIExpression()), !dbg !4986
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4987
  %4 = add i32 %1, 1, !dbg !4988
  %5 = sub i32 %4, %3, !dbg !4989
  call void @llvm.dbg.value(metadata i32 %5, metadata !4985, metadata !DIExpression()), !dbg !4986
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4990, !range !4991
  %7 = sub nsw i32 31, %6, !dbg !4992
  ret i32 %7, !dbg !4993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4994 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4998, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i32 %1, metadata !4999, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i32 %2, metadata !5000, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5001, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5007
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5008
  %5 = load i32, i32* %4, align 4, !dbg !5008
  %6 = icmp eq i32 %5, 0, !dbg !5009
  br i1 %6, label %7, label %12, !dbg !5010

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5011
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5013
  %10 = load i32, i32* %9, align 4, !dbg !5014
  %11 = or i32 %10, %8, !dbg !5014
  store i32 %11, i32* %9, align 4, !dbg !5014
  store i32 %1, i32* %4, align 4, !dbg !5015
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5016
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5017
  br label %14, !dbg !5018

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5003, metadata !DIExpression()), !dbg !5019
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !5020, !range !5021
  call void @llvm.dbg.value(metadata i32 %13, metadata !5006, metadata !DIExpression()), !dbg !5019
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !5022
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5023
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !5024
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !5025
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5027 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5029, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata i32 %1, metadata !5030, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata i32 %2, metadata !5031, metadata !DIExpression()), !dbg !5032
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !5033
  ret void, !dbg !5034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5035 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5037, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i32 %1, metadata !5038, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i32 %2, metadata !5039, metadata !DIExpression()), !dbg !5040
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !5041
  ret void, !dbg !5042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5043 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5045, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i32 %1, metadata !5046, metadata !DIExpression()), !dbg !5047
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !5048
  ret i32 %3, !dbg !5049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !5050 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5054, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i32 %1, metadata !5055, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i32 %2, metadata !5056, metadata !DIExpression()), !dbg !5059
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5060
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5057, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5058, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5059
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5058, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5059
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5061
  call void @llvm.dbg.value(metadata i8* %5, metadata !5058, metadata !DIExpression()), !dbg !5059
  %6 = bitcast i8* %5 to i16*, !dbg !5062
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5065
  %8 = load i16, i16* %7, align 2, !dbg !5065
  %9 = zext i16 %8 to i32, !dbg !5065
  ret i32 %9, !dbg !5066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5067 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5071, metadata !DIExpression()), !dbg !5072
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5073
  ret %struct.chunk_unit_t* %2, !dbg !5074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !5075 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5079, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i32 %1, metadata !5080, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i32 %2, metadata !5081, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i32 %3, metadata !5082, metadata !DIExpression()), !dbg !5085
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5086
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5083, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5084, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5085
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5087
  call void @llvm.dbg.value(metadata i8* %6, metadata !5084, metadata !DIExpression()), !dbg !5085
  %7 = trunc i32 %3 to i16, !dbg !5088
  %8 = bitcast i8* %6 to i16*, !dbg !5091
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5092
  store i16 %7, i16* %9, align 2, !dbg !5093
  ret void, !dbg !5094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5095 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5099, metadata !DIExpression()), !dbg !5100
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !5101
  ret i32 %2, !dbg !5102
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5103 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5107, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i32 %1, metadata !5108, metadata !DIExpression()), !dbg !5109
  %3 = add i32 %1, 4, !dbg !5110
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !5111
  ret i32 %4, !dbg !5112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5117, metadata !DIExpression()), !dbg !5118
  %2 = add i32 %0, 7, !dbg !5119
  %3 = lshr i32 %2, 3, !dbg !5120
  ret i32 %3, !dbg !5121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5122 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5126, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i32 %1, metadata !5127, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i32 %2, metadata !5128, metadata !DIExpression()), !dbg !5129
  %4 = shl i32 %2, 1, !dbg !5130
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !5131
  ret void, !dbg !5132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5133 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5135, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %1, metadata !5136, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %2, metadata !5137, metadata !DIExpression()), !dbg !5138
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !5139
  ret void, !dbg !5140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5141 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5143, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i32 %1, metadata !5144, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i32 %2, metadata !5145, metadata !DIExpression()), !dbg !5151
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5152
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5146, metadata !DIExpression()), !dbg !5151
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5153
  %6 = icmp eq i32 %5, %1, !dbg !5154
  br i1 %6, label %7, label %14, !dbg !5155

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5156
  %9 = xor i32 %8, -1, !dbg !5158
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5159
  %11 = load i32, i32* %10, align 4, !dbg !5160
  %12 = and i32 %11, %9, !dbg !5160
  store i32 %12, i32* %10, align 4, !dbg !5160
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5161
  store i32 0, i32* %13, align 4, !dbg !5162
  br label %17, !dbg !5163

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5164
  call void @llvm.dbg.value(metadata i32 %15, metadata !5147, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.value(metadata i32 %5, metadata !5150, metadata !DIExpression()), !dbg !5165
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5166
  store i32 %5, i32* %16, align 4, !dbg !5167
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !5168
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !5169
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5171 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5173, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.value(metadata i32 %1, metadata !5174, metadata !DIExpression()), !dbg !5175
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !5176
  ret i32 %3, !dbg !5177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #4 !dbg !5178 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5182, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata i8* %1, metadata !5183, metadata !DIExpression()), !dbg !5189
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5190
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5190
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5184, metadata !DIExpression()), !dbg !5189
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %5, metadata !5185, metadata !DIExpression()), !dbg !5189
  %6 = ptrtoint i8* %1 to i32, !dbg !5192
  call void @llvm.dbg.value(metadata i32 %6, metadata !5186, metadata !DIExpression()), !dbg !5189
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !5193
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5193
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5194
  call void @llvm.dbg.value(metadata i32 %9, metadata !5187, metadata !DIExpression()), !dbg !5189
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !5195
  %11 = shl i32 %10, 3, !dbg !5196
  call void @llvm.dbg.value(metadata i32 %11, metadata !5188, metadata !DIExpression()), !dbg !5189
  %12 = sub i32 %9, %6, !dbg !5197
  %13 = add i32 %12, %11, !dbg !5198
  ret i32 %13, !dbg !5199
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5200 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5204, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.value(metadata i32 %1, metadata !5205, metadata !DIExpression()), !dbg !5210
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5211
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5211
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5206, metadata !DIExpression()), !dbg !5210
  %5 = icmp eq i32 %1, 0, !dbg !5212
  br i1 %5, label %19, label %6, !dbg !5214

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5215
  br i1 %7, label %19, label %8, !dbg !5216

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5217, !range !4833
  call void @llvm.dbg.value(metadata i32 %9, metadata !5208, metadata !DIExpression()), !dbg !5210
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !5218
  call void @llvm.dbg.value(metadata i32 %10, metadata !5209, metadata !DIExpression()), !dbg !5210
  %11 = icmp eq i32 %10, 0, !dbg !5219
  br i1 %11, label %19, label %12, !dbg !5221

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5222
  %14 = icmp ugt i32 %13, %9, !dbg !5224
  br i1 %14, label %15, label %17, !dbg !5225

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5226
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !5228
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !5229
  br label %17, !dbg !5230

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !5231
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5232
  call void @llvm.dbg.value(metadata i8* %18, metadata !5207, metadata !DIExpression()), !dbg !5210
  br label %19, !dbg !5233

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5210
  ret i8* %20, !dbg !5234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5235 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5239, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata i32 %1, metadata !5240, metadata !DIExpression()), !dbg !5241
  %3 = lshr i32 %1, 3, !dbg !5242
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5243
  %5 = load i32, i32* %4, align 4, !dbg !5243
  %6 = icmp uge i32 %3, %5, !dbg !5244
  ret i1 %6, !dbg !5245
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5246 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5250, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i32 %1, metadata !5251, metadata !DIExpression()), !dbg !5265
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5266
  call void @llvm.dbg.value(metadata i32 %3, metadata !5252, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5253, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5265
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5267
  %5 = load i32, i32* %4, align 4, !dbg !5267
  %6 = icmp eq i32 %5, 0, !dbg !5268
  br i1 %6, label %19, label %7, !dbg !5269

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5270
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5271
  call void @llvm.dbg.value(metadata i32 %9, metadata !5257, metadata !DIExpression()), !dbg !5271
  call void @llvm.dbg.value(metadata i32 %8, metadata !5258, metadata !DIExpression()), !dbg !5272
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5273
  %11 = icmp ult i32 %10, %1, !dbg !5275
  br i1 %11, label %13, label %12, !dbg !5276

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !5277
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5279
  store i32 %14, i32* %4, align 4, !dbg !5280
  %15 = add nsw i32 %9, -1, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %15, metadata !5257, metadata !DIExpression()), !dbg !5271
  %16 = icmp eq i32 %15, 0, !dbg !5281
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5282
  br i1 %18, label %19, label %7, !dbg !5282, !llvm.loop !5283

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5286
  %21 = load i32, i32* %20, align 4, !dbg !5286
  %22 = add nsw i32 %3, 1, !dbg !5287
  %23 = shl nsw i32 -1, %22, !dbg !5287
  %24 = and i32 %21, %23, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %24, metadata !5260, metadata !DIExpression()), !dbg !5265
  %25 = icmp eq i32 %24, 0, !dbg !5289
  br i1 %25, label %30, label %26, !dbg !5290

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5291, !range !4991
  call void @llvm.dbg.value(metadata i32 %27, metadata !5261, metadata !DIExpression()), !dbg !5292
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5293
  %29 = load i32, i32* %28, align 4, !dbg !5293
  call void @llvm.dbg.value(metadata i32 %29, metadata !5264, metadata !DIExpression()), !dbg !5292
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !5294
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5265
  ret i32 %31, !dbg !5295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5296 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5298, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 %1, metadata !5299, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 %2, metadata !5300, metadata !DIExpression()), !dbg !5304
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5305
  call void @llvm.dbg.value(metadata i32 %4, metadata !5301, metadata !DIExpression()), !dbg !5304
  %5 = sub i32 %2, %1, !dbg !5306
  call void @llvm.dbg.value(metadata i32 %5, metadata !5302, metadata !DIExpression()), !dbg !5304
  %6 = sub i32 %4, %5, !dbg !5307
  call void @llvm.dbg.value(metadata i32 %6, metadata !5303, metadata !DIExpression()), !dbg !5304
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5308
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !5309
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !5310
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5311
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5312
  ret void, !dbg !5313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5314 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5318, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i32 %1, metadata !5319, metadata !DIExpression()), !dbg !5322
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5323
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5320, metadata !DIExpression()), !dbg !5322
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5324
  call void @llvm.dbg.value(metadata i8* %4, metadata !5321, metadata !DIExpression()), !dbg !5322
  ret i8* %4, !dbg !5325
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5326 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5330, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i32 %1, metadata !5331, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i32 %2, metadata !5332, metadata !DIExpression()), !dbg !5342
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5343
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5343
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5333, metadata !DIExpression()), !dbg !5342
  %6 = sub i32 0, %1, !dbg !5344
  %7 = and i32 %6, %1, !dbg !5345
  call void @llvm.dbg.value(metadata i32 %7, metadata !5335, metadata !DIExpression()), !dbg !5342
  %8 = icmp eq i32 %7, %1, !dbg !5346
  br i1 %8, label %13, label %9, !dbg !5348

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %10, metadata !5331, metadata !DIExpression()), !dbg !5342
  %11 = icmp ult i32 %7, 4, !dbg !5351
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5351
  br label %17, !dbg !5351

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5352
  br i1 %14, label %15, label %17, !dbg !5355

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !5356
  br label %57, !dbg !5358

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5342
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5359
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5331, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i32 %19, metadata !5334, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i32 %18, metadata !5335, metadata !DIExpression()), !dbg !5342
  %21 = icmp eq i32 %2, 0, !dbg !5360
  br i1 %21, label %57, label %22, !dbg !5362

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !5363
  br i1 %23, label %57, label %24, !dbg !5364

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5365
  %26 = add i32 %25, %20, !dbg !5366
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !5367, !range !4833
  call void @llvm.dbg.value(metadata i32 %27, metadata !5336, metadata !DIExpression()), !dbg !5342
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !5368
  call void @llvm.dbg.value(metadata i32 %28, metadata !5337, metadata !DIExpression()), !dbg !5342
  %29 = icmp eq i32 %28, 0, !dbg !5369
  br i1 %29, label %57, label %30, !dbg !5371

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5372
  call void @llvm.dbg.value(metadata i8* %31, metadata !5338, metadata !DIExpression()), !dbg !5342
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5373
  %33 = ptrtoint i8* %32 to i32, !dbg !5373
  %34 = add i32 %20, -1, !dbg !5373
  %35 = add i32 %34, %33, !dbg !5373
  %36 = sub i32 0, %20, !dbg !5373
  %37 = and i32 %35, %36, !dbg !5373
  %38 = inttoptr i32 %37 to i8*, !dbg !5374
  %39 = sub i32 0, %18, !dbg !5375
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5375
  call void @llvm.dbg.value(metadata i8* %40, metadata !5338, metadata !DIExpression()), !dbg !5342
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5376
  %42 = ptrtoint i8* %41 to i32, !dbg !5376
  %43 = add i32 %42, 7, !dbg !5376
  %44 = and i32 %43, -8, !dbg !5376
  call void @llvm.dbg.value(metadata i32 %44, metadata !5339, metadata !DIExpression()), !dbg !5342
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !5377
  call void @llvm.dbg.value(metadata i32 %45, metadata !5340, metadata !DIExpression()), !dbg !5342
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !5378
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5379
  %48 = sub i32 %44, %47, !dbg !5379
  %49 = ashr exact i32 %48, 3, !dbg !5379
  call void @llvm.dbg.value(metadata i32 %49, metadata !5341, metadata !DIExpression()), !dbg !5342
  %50 = icmp ugt i32 %45, %28, !dbg !5380
  br i1 %50, label %51, label %52, !dbg !5382

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !5383
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5385
  br label %52, !dbg !5386

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !5387
  %54 = icmp ugt i32 %53, %49, !dbg !5389
  br i1 %54, label %55, label %56, !dbg !5390

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !5391
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !5393
  br label %56, !dbg !5394

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !5395
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5342
  ret i8* %58, !dbg !5396
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5397 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5401, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata i8* %1, metadata !5402, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata i32 %2, metadata !5403, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata i32 %3, metadata !5404, metadata !DIExpression()), !dbg !5420
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5421
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5421
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5405, metadata !DIExpression()), !dbg !5420
  %7 = icmp eq i8* %1, null, !dbg !5422
  br i1 %7, label %8, label %10, !dbg !5424

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5425
  br label %59, !dbg !5427

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5428
  br i1 %11, label %12, label %13, !dbg !5430

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5431
  br label %59, !dbg !5433

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !5434
  br i1 %14, label %59, label %15, !dbg !5436

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5437, !range !4833
  call void @llvm.dbg.value(metadata i32 %16, metadata !5406, metadata !DIExpression()), !dbg !5420
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5438
  call void @llvm.dbg.value(metadata i32 %17, metadata !5407, metadata !DIExpression()), !dbg !5420
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5439
  %19 = ptrtoint i8* %1 to i32, !dbg !5440
  %20 = ptrtoint i8* %18 to i32, !dbg !5440
  %21 = sub i32 %19, %20, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %21, metadata !5408, metadata !DIExpression()), !dbg !5420
  %22 = add i32 %21, %3, !dbg !5441
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5442
  call void @llvm.dbg.value(metadata i32 %23, metadata !5409, metadata !DIExpression()), !dbg !5420
  %24 = icmp eq i32 %2, 0, !dbg !5443
  br i1 %24, label %29, label %25, !dbg !5444

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5445
  %27 = and i32 %26, %19, !dbg !5446
  %28 = icmp eq i32 %27, 0, !dbg !5446
  br i1 %28, label %29, label %49, !dbg !5447

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5448
  %31 = icmp eq i32 %23, %30, !dbg !5449
  br i1 %31, label %59, label %32, !dbg !5450

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5451
  br i1 %33, label %34, label %36, !dbg !5452

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5453
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !5455
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5456
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !5457
  br label %59, !dbg !5458

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5459
  br i1 %37, label %49, label %38, !dbg !5460

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5461
  %40 = add i32 %39, %30, !dbg !5462
  %41 = icmp ult i32 %40, %23, !dbg !5463
  br i1 %41, label %49, label %42, !dbg !5464

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5465
  call void @llvm.dbg.value(metadata i32 %43, metadata !5410, metadata !DIExpression()), !dbg !5466
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5467
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5468
  %45 = icmp ult i32 %43, %44, !dbg !5470
  br i1 %45, label %46, label %48, !dbg !5471

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5472
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !5474
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !5475
  br label %48, !dbg !5476

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !5477
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5478
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5479
  call void @llvm.dbg.value(metadata i8* %50, metadata !5416, metadata !DIExpression()), !dbg !5420
  %51 = icmp eq i8* %50, null, !dbg !5480
  br i1 %51, label %59, label %52, !dbg !5481

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5482, !range !4926
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !5483
  %55 = sub i32 %54, %21, !dbg !5484
  call void @llvm.dbg.value(metadata i32 %55, metadata !5417, metadata !DIExpression()), !dbg !5485
  %56 = icmp ult i32 %55, %3, !dbg !5486
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5486
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !5487
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5488
  br label %59, !dbg !5489

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5420
  ret i8* %60, !dbg !5490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5491 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5495, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.value(metadata i32 %1, metadata !5496, metadata !DIExpression()), !dbg !5497
  %3 = shl i32 %1, 3, !dbg !5498
  %4 = add i32 %3, -4, !dbg !5499
  ret i32 %4, !dbg !5500
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5501 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5505, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8* %1, metadata !5506, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i32 %2, metadata !5507, metadata !DIExpression()), !dbg !5516
  %4 = add i32 %2, -4, !dbg !5517
  call void @llvm.dbg.value(metadata i32 %4, metadata !5507, metadata !DIExpression()), !dbg !5516
  %5 = ptrtoint i8* %1 to i32, !dbg !5518
  %6 = add i32 %5, 7, !dbg !5518
  %7 = and i32 %6, -8, !dbg !5518
  call void @llvm.dbg.value(metadata i32 %7, metadata !5508, metadata !DIExpression()), !dbg !5516
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5519
  %9 = ptrtoint i8* %8 to i32, !dbg !5519
  %10 = and i32 %9, -8, !dbg !5519
  call void @llvm.dbg.value(metadata i32 %10, metadata !5509, metadata !DIExpression()), !dbg !5516
  %11 = sub i32 %10, %7, !dbg !5520
  %12 = lshr exact i32 %11, 3, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %12, metadata !5510, metadata !DIExpression()), !dbg !5516
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5522
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5511, metadata !DIExpression()), !dbg !5516
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5523
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5524
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5525
  store i32 %12, i32* %15, align 8, !dbg !5526
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5527
  store i32 0, i32* %16, align 4, !dbg !5528
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !5529
  call void @llvm.dbg.value(metadata i32 %17, metadata !5512, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5516
  %18 = shl i32 %17, 2, !dbg !5530
  %19 = add i32 %18, 20, !dbg !5531
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !5532
  call void @llvm.dbg.value(metadata i32 %20, metadata !5513, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i32 0, metadata !5514, metadata !DIExpression()), !dbg !5533
  %21 = icmp slt i32 %17, 0, !dbg !5534
  br i1 %21, label %22, label %24, !dbg !5536

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !5537
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !5538
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !5539
  %23 = sub i32 %12, %20, !dbg !5540
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !5541
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !5542
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !5543
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !5544
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !5545
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !5546
  ret void, !dbg !5547

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5514, metadata !DIExpression()), !dbg !5533
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5548
  store i32 0, i32* %26, align 4, !dbg !5550
  %27 = add nuw i32 %25, 1, !dbg !5551
  call void @llvm.dbg.value(metadata i32 %27, metadata !5514, metadata !DIExpression()), !dbg !5533
  %28 = icmp eq i32 %25, %17, !dbg !5534
  br i1 %28, label %22, label %24, !dbg !5536, !llvm.loop !5552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5554 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5567, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5564, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i8* %1, metadata !5565, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i8* %2, metadata !5566, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %4, metadata !5568, metadata !DIExpression()), !dbg !5693
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5694
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5694
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5569, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.value(metadata i32 0, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i1 undef, metadata !5575, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5693
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5696

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5696

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5697
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5567, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i8* %30, metadata !5566, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %29, metadata !5573, metadata !DIExpression()), !dbg !5693
  %31 = load i8, i8* %30, align 1, !dbg !5698
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5696

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5698
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5699
  call void @llvm.dbg.value(metadata i8* %34, metadata !5566, metadata !DIExpression()), !dbg !5693
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5699
  call void @llvm.dbg.value(metadata i32 %35, metadata !5577, metadata !DIExpression()), !dbg !5700
  %36 = icmp slt i32 %35, 0, !dbg !5701
  %37 = add i32 %29, 1, !dbg !5699
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %36, label %365, label %28, !llvm.loop !5703

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5705
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5582, metadata !DIExpression()), !dbg !5706
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5706
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5625, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5628, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8* %30, metadata !5631, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 -1, metadata !5632, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 -1, metadata !5633, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8* null, metadata !5634, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8* %14, metadata !5635, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8 0, metadata !5636, metadata !DIExpression()), !dbg !5707
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5708
  call void @llvm.dbg.value(metadata i8* %39, metadata !5566, metadata !DIExpression()), !dbg !5693
  %40 = load i24, i24* %15, align 8, !dbg !5709
  %41 = and i24 %40, 256, !dbg !5709
  %42 = icmp eq i24 %41, 0, !dbg !5709
  br i1 %42, label %51, label %43, !dbg !5711

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5712
  call void @llvm.dbg.value(metadata i8* %44, metadata !5567, metadata !DIExpression()), !dbg !5693
  %45 = bitcast i8* %27 to i32*, !dbg !5712
  %46 = load i32, i32* %45, align 4, !dbg !5712
  call void @llvm.dbg.value(metadata i32 %46, metadata !5632, metadata !DIExpression()), !dbg !5707
  %47 = icmp slt i32 %46, 0, !dbg !5714
  br i1 %47, label %48, label %56, !dbg !5716

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5717
  store i24 %49, i24* %15, align 8, !dbg !5717
  %50 = sub nsw i32 0, %46, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %50, metadata !5632, metadata !DIExpression()), !dbg !5707
  br label %56, !dbg !5720

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5721
  %53 = icmp eq i24 %52, 0, !dbg !5721
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5723
  br label %56, !dbg !5723

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5724
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5707
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5567, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %58, metadata !5632, metadata !DIExpression()), !dbg !5707
  %60 = and i24 %57, 1024, !dbg !5724
  %61 = icmp eq i24 %60, 0, !dbg !5724
  br i1 %61, label %69, label %62, !dbg !5725

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5726
  call void @llvm.dbg.value(metadata i8* %63, metadata !5567, metadata !DIExpression()), !dbg !5693
  %64 = bitcast i8* %59 to i32*, !dbg !5726
  %65 = load i32, i32* %64, align 4, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %65, metadata !5637, metadata !DIExpression()), !dbg !5727
  %66 = icmp slt i32 %65, 0, !dbg !5728
  br i1 %66, label %67, label %74, !dbg !5730

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5731
  store i24 %68, i24* %15, align 8, !dbg !5731
  br label %74, !dbg !5733

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5734
  %71 = icmp eq i24 %70, 0, !dbg !5734
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5736
  br label %74, !dbg !5736

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5737
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5707
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5707
  call void @llvm.dbg.value(metadata i8* %77, metadata !5567, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %76, metadata !5633, metadata !DIExpression()), !dbg !5707
  store i32 0, i32* %16, align 4, !dbg !5738
  store i32 0, i32* %17, align 8, !dbg !5739
  %78 = lshr i24 %75, 16, !dbg !5737
  call void @llvm.dbg.value(metadata i24 %78, metadata !5640, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5707
  %79 = lshr i24 %75, 11, !dbg !5740
  %80 = and i24 %79, 15, !dbg !5740
  %81 = zext i24 %80 to i32, !dbg !5740
  call void @llvm.dbg.value(metadata i32 %81, metadata !5641, metadata !DIExpression()), !dbg !5707
  %82 = trunc i24 %78 to i3, !dbg !5741
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5741

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5742

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5745
  call void @llvm.dbg.value(metadata i8* %85, metadata !5567, metadata !DIExpression()), !dbg !5693
  %86 = bitcast i8* %77 to i32*, !dbg !5745
  %87 = load i32, i32* %86, align 4, !dbg !5745
  %88 = sext i32 %87 to i64, !dbg !5745
  store i64 %88, i64* %20, align 8, !dbg !5747
  br label %115, !dbg !5748

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5749
  call void @llvm.dbg.value(metadata i8* %90, metadata !5567, metadata !DIExpression()), !dbg !5693
  %91 = bitcast i8* %77 to i32*, !dbg !5749
  %92 = load i32, i32* %91, align 4, !dbg !5749
  %93 = sext i32 %92 to i64, !dbg !5749
  store i64 %93, i64* %20, align 8, !dbg !5752
  br label %115, !dbg !5753

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5754
  %96 = add i32 %95, 7, !dbg !5754
  %97 = and i32 %96, -8, !dbg !5754
  %98 = inttoptr i32 %97 to i8*, !dbg !5754
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5754
  call void @llvm.dbg.value(metadata i8* %99, metadata !5567, metadata !DIExpression()), !dbg !5693
  %100 = inttoptr i32 %97 to i64*, !dbg !5754
  %101 = load i64, i64* %100, align 8, !dbg !5754
  store i64 %101, i64* %20, align 8, !dbg !5755
  br label %115, !dbg !5756

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5757
  %104 = add i32 %103, 7, !dbg !5757
  %105 = and i32 %104, -8, !dbg !5757
  %106 = inttoptr i32 %105 to i8*, !dbg !5757
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5757
  call void @llvm.dbg.value(metadata i8* %107, metadata !5567, metadata !DIExpression()), !dbg !5693
  %108 = inttoptr i32 %105 to i64*, !dbg !5757
  %109 = load i64, i64* %108, align 8, !dbg !5757
  store i64 %109, i64* %20, align 8, !dbg !5758
  br label %115, !dbg !5759

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5760
  call void @llvm.dbg.value(metadata i8* %111, metadata !5567, metadata !DIExpression()), !dbg !5693
  %112 = bitcast i8* %77 to i32*, !dbg !5760
  %113 = load i32, i32* %112, align 4, !dbg !5760
  %114 = sext i32 %113 to i64, !dbg !5761
  store i64 %114, i64* %20, align 8, !dbg !5762
  br label %115, !dbg !5763

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5764
  call void @llvm.dbg.value(metadata i8* %117, metadata !5567, metadata !DIExpression()), !dbg !5693
  %118 = trunc i24 %79 to i4, !dbg !5765
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5765

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5766
  %121 = ashr exact i64 %120, 56, !dbg !5766
  store i64 %121, i64* %20, align 8, !dbg !5769
  br label %177, !dbg !5770

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5771
  %124 = ashr exact i64 %123, 48, !dbg !5771
  store i64 %124, i64* %20, align 8, !dbg !5774
  br label %177, !dbg !5775

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5776

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5779
  call void @llvm.dbg.value(metadata i8* %127, metadata !5567, metadata !DIExpression()), !dbg !5693
  %128 = bitcast i8* %77 to i32*, !dbg !5779
  %129 = load i32, i32* %128, align 4, !dbg !5779
  %130 = zext i32 %129 to i64, !dbg !5779
  store i64 %130, i64* %20, align 8, !dbg !5781
  br label %157, !dbg !5782

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5783
  call void @llvm.dbg.value(metadata i8* %132, metadata !5567, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i8* %132, metadata !5567, metadata !DIExpression()), !dbg !5693
  %133 = bitcast i8* %77 to i32*, !dbg !5783
  %134 = load i32, i32* %133, align 4, !dbg !5783
  %135 = zext i32 %134 to i64, !dbg !5783
  store i64 %135, i64* %20, align 8, !dbg !5783
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5785
  %138 = add i32 %137, 7, !dbg !5785
  %139 = and i32 %138, -8, !dbg !5785
  %140 = inttoptr i32 %139 to i8*, !dbg !5785
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5785
  call void @llvm.dbg.value(metadata i8* %141, metadata !5567, metadata !DIExpression()), !dbg !5693
  %142 = inttoptr i32 %139 to i64*, !dbg !5785
  %143 = load i64, i64* %142, align 8, !dbg !5785
  store i64 %143, i64* %20, align 8, !dbg !5786
  br label %157, !dbg !5787

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5788
  %146 = add i32 %145, 7, !dbg !5788
  %147 = and i32 %146, -8, !dbg !5788
  %148 = inttoptr i32 %147 to i8*, !dbg !5788
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5788
  call void @llvm.dbg.value(metadata i8* %149, metadata !5567, metadata !DIExpression()), !dbg !5693
  %150 = inttoptr i32 %147 to i64*, !dbg !5788
  %151 = load i64, i64* %150, align 8, !dbg !5788
  store i64 %151, i64* %20, align 8, !dbg !5789
  br label %157, !dbg !5790

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5791
  call void @llvm.dbg.value(metadata i8* %153, metadata !5567, metadata !DIExpression()), !dbg !5693
  %154 = bitcast i8* %77 to i32*, !dbg !5791
  %155 = load i32, i32* %154, align 4, !dbg !5791
  %156 = zext i32 %155 to i64, !dbg !5792
  store i64 %156, i64* %20, align 8, !dbg !5793
  br label %157, !dbg !5794

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5795
  call void @llvm.dbg.value(metadata i8* %159, metadata !5567, metadata !DIExpression()), !dbg !5693
  %160 = trunc i24 %79 to i4, !dbg !5796
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5796

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5797
  store i64 %162, i64* %20, align 8, !dbg !5800
  br label %177, !dbg !5801

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5802
  store i64 %164, i64* %20, align 8, !dbg !5805
  br label %177, !dbg !5806

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5807
  %167 = add i32 %166, 7, !dbg !5807
  %168 = and i32 %167, -8, !dbg !5807
  %169 = inttoptr i32 %168 to i8*, !dbg !5807
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5807
  call void @llvm.dbg.value(metadata i8* %170, metadata !5567, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i8* %170, metadata !5567, metadata !DIExpression()), !dbg !5693
  %171 = inttoptr i32 %168 to double*, !dbg !5807
  %172 = load double, double* %171, align 8, !dbg !5807
  store double %172, double* %19, align 8, !dbg !5807
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5811
  call void @llvm.dbg.value(metadata i8* %174, metadata !5567, metadata !DIExpression()), !dbg !5693
  %175 = bitcast i8* %77 to i8**, !dbg !5811
  %176 = load i8*, i8** %175, align 4, !dbg !5811
  store i8* %176, i8** %18, align 8, !dbg !5814
  br label %177, !dbg !5815

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5707
  call void @llvm.dbg.value(metadata i8* %178, metadata !5567, metadata !DIExpression()), !dbg !5693
  %179 = and i24 %75, 3, !dbg !5816
  %180 = icmp eq i24 %179, 0, !dbg !5816
  br i1 %180, label %185, label %181, !dbg !5816

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5817
  call void @llvm.dbg.value(metadata i32 %182, metadata !5642, metadata !DIExpression()), !dbg !5818
  %183 = icmp slt i32 %182, 0, !dbg !5819
  %184 = add i32 %182, %29, !dbg !5817
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5821
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5822

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %188, metadata !5646, metadata !DIExpression()), !dbg !5824
  %189 = icmp slt i32 %188, 0, !dbg !5825
  %190 = add i32 %29, 1, !dbg !5823
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5827
  call void @llvm.dbg.value(metadata i8* %192, metadata !5634, metadata !DIExpression()), !dbg !5707
  %193 = icmp sgt i32 %76, -1, !dbg !5828
  br i1 %193, label %194, label %196, !dbg !5830

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %195, metadata !5649, metadata !DIExpression()), !dbg !5833
  br label %241, !dbg !5834

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5835
  call void @llvm.dbg.value(metadata i32 %197, metadata !5649, metadata !DIExpression()), !dbg !5833
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5634, metadata !DIExpression()), !dbg !5707
  %199 = load i64, i64* %20, align 8, !dbg !5837
  %200 = trunc i64 %199 to i8, !dbg !5838
  store i8 %200, i8* %10, align 1, !dbg !5839
  call void @llvm.dbg.value(metadata i8* %23, metadata !5635, metadata !DIExpression()), !dbg !5707
  br label %245, !dbg !5840

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5841
  %203 = icmp eq i24 %202, 0, !dbg !5841
  %204 = trunc i24 %75 to i8, !dbg !5843
  %205 = shl i8 %204, 1, !dbg !5843
  %206 = and i8 %205, 32, !dbg !5843
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5843
  call void @llvm.dbg.value(metadata i8 %207, metadata !5636, metadata !DIExpression()), !dbg !5707
  %208 = load i64, i64* %20, align 8, !dbg !5844
  call void @llvm.dbg.value(metadata i64 %208, metadata !5574, metadata !DIExpression()), !dbg !5693
  %209 = icmp slt i64 %208, 0, !dbg !5845
  br i1 %209, label %210, label %212, !dbg !5847

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5636, metadata !DIExpression()), !dbg !5707
  %211 = sub nsw i64 0, %208, !dbg !5848
  store i64 %211, i64* %20, align 8, !dbg !5850
  br label %212, !dbg !5851

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5707
  call void @llvm.dbg.value(metadata i8 %213, metadata !5636, metadata !DIExpression()), !dbg !5707
  %214 = load i64, i64* %20, align 8, !dbg !5852
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5853
  call void @llvm.dbg.value(metadata i8* %215, metadata !5634, metadata !DIExpression()), !dbg !5707
  br label %216, !dbg !5854

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5855
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5856
  call void @llvm.dbg.value(metadata i8* %218, metadata !5634, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8 %217, metadata !5636, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.label(metadata !5692), !dbg !5857
  %219 = icmp sgt i32 %76, -1, !dbg !5858
  br i1 %219, label %222, label %220, !dbg !5859

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5860
  br label %245, !dbg !5859

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5862
  %224 = sub i32 %22, %223, !dbg !5862
  call void @llvm.dbg.value(metadata i32 %224, metadata !5651, metadata !DIExpression()), !dbg !5863
  %225 = load i24, i24* %15, align 8, !dbg !5864
  %226 = and i24 %225, -65, !dbg !5864
  store i24 %226, i24* %15, align 8, !dbg !5864
  %227 = icmp ugt i32 %76, %224, !dbg !5865
  br i1 %227, label %228, label %245, !dbg !5867

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5868
  store i32 %229, i32* %16, align 4, !dbg !5870
  br label %245, !dbg !5871

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5872
  %232 = icmp eq i8* %231, null, !dbg !5874
  br i1 %232, label %245, label %233, !dbg !5875

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5876
  %235 = zext i32 %234 to i64, !dbg !5876
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5878
  call void @llvm.dbg.value(metadata i8* %236, metadata !5634, metadata !DIExpression()), !dbg !5707
  %237 = load i24, i24* %15, align 8, !dbg !5879
  %238 = or i24 %237, 1048576, !dbg !5879
  store i24 %238, i24* %15, align 8, !dbg !5879
  store i8 120, i8* %21, align 1, !dbg !5880
  br label %216, !dbg !5881

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5882
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5885
  br label %363, !dbg !5886

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5887
  call void @llvm.dbg.value(metadata i32 %242, metadata !5649, metadata !DIExpression()), !dbg !5833
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5888
  call void @llvm.dbg.value(metadata i32 -1, metadata !5633, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 %29, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i8* %192, metadata !5634, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8* %243, metadata !5635, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8 0, metadata !5636, metadata !DIExpression()), !dbg !5707
  %244 = icmp eq i8* %192, null, !dbg !5889
  br i1 %244, label %363, label %245, !dbg !5891, !llvm.loop !5703

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5860
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5707
  call void @llvm.dbg.value(metadata i32 0, metadata !5655, metadata !DIExpression()), !dbg !5707
  %250 = zext i8 %249 to i32, !dbg !5892
  %251 = icmp eq i8 %249, 0, !dbg !5894
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  call void @llvm.dbg.value(metadata i32 undef, metadata !5654, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  call void @llvm.dbg.value(metadata i32 undef, metadata !5654, metadata !DIExpression()), !dbg !5707
  %252 = icmp sgt i32 %58, 0, !dbg !5895
  br i1 %252, label %253, label %302, !dbg !5896

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5860
  %255 = icmp eq i24 %254, 0, !dbg !5860
  %256 = ptrtoint i8* %248 to i32, !dbg !5897
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  %257 = ptrtoint i8* %247 to i32, !dbg !5897
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  %258 = xor i1 %251, true, !dbg !5898
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  %259 = sext i1 %258 to i32, !dbg !5898
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  %260 = lshr i24 %246, 19, !dbg !5899
  %261 = and i24 %260, 1, !dbg !5899
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5899
  %263 = zext i24 %262 to i32, !dbg !5899
  %264 = add i32 %257, %259, !dbg !5899
  %265 = add i32 %256, %263, !dbg !5899
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  %266 = and i24 %246, 4194304, !dbg !5900
  %267 = icmp eq i24 %266, 0, !dbg !5900
  %268 = load i32, i32* %16, align 4, !dbg !5902
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5707
  call void @llvm.dbg.value(metadata i32 undef, metadata !5654, metadata !DIExpression()), !dbg !5707
  %269 = load i32, i32* %17, align 8, !dbg !5903
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5903
  call void @llvm.dbg.value(metadata i32 undef, metadata !5654, metadata !DIExpression()), !dbg !5707
  %271 = add i32 %264, %58, !dbg !5903
  %272 = add i32 %265, %268, !dbg !5903
  %273 = add i32 %272, %270, !dbg !5904
  %274 = sub i32 %271, %273, !dbg !5904
  call void @llvm.dbg.value(metadata i32 %274, metadata !5632, metadata !DIExpression()), !dbg !5707
  %275 = and i24 %246, 4, !dbg !5905
  %276 = icmp eq i24 %275, 0, !dbg !5905
  br i1 %276, label %277, label %302, !dbg !5906

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5656, metadata !DIExpression()), !dbg !5907
  %278 = and i24 %246, 64, !dbg !5908
  %279 = icmp eq i24 %278, 0, !dbg !5908
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5909
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5909
  %282 = select i1 %279, i32 32, i32 48, !dbg !5909
  br i1 %280, label %287, label %283, !dbg !5909

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5910
  call void @llvm.dbg.value(metadata i32 %284, metadata !5661, metadata !DIExpression()), !dbg !5911
  %285 = icmp slt i32 %284, 0, !dbg !5912
  %286 = add i32 %29, 1, !dbg !5910
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5707
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5697
  call void @llvm.dbg.value(metadata i32 %290, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i8 undef, metadata !5656, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8 %288, metadata !5636, metadata !DIExpression()), !dbg !5707
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5914
  %292 = add i32 %291, -1, !dbg !5914
  br label %293, !dbg !5914

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5915
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5697
  call void @llvm.dbg.value(metadata i32 %295, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %294, metadata !5632, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 %294, metadata !5632, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5707
  %296 = icmp sgt i32 %294, 0, !dbg !5916
  br i1 %296, label %297, label %302, !dbg !5914

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5917
  call void @llvm.dbg.value(metadata i32 %298, metadata !5632, metadata !DIExpression()), !dbg !5707
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %299, metadata !5667, metadata !DIExpression()), !dbg !5919
  %300 = icmp slt i32 %299, 0, !dbg !5920
  %301 = add i32 %295, 1, !dbg !5918
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %300, label %361, label %293, !llvm.loop !5922

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5707
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5707
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5697
  call void @llvm.dbg.value(metadata i32 %305, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %304, metadata !5632, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i8 %303, metadata !5636, metadata !DIExpression()), !dbg !5707
  %306 = icmp eq i8 %303, 0, !dbg !5924
  br i1 %306, label %312, label %307, !dbg !5925

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5926
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %309, metadata !5670, metadata !DIExpression()), !dbg !5928
  %310 = icmp slt i32 %309, 0, !dbg !5929
  %311 = add i32 %305, 1, !dbg !5927
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5697
  call void @llvm.dbg.value(metadata i32 %313, metadata !5573, metadata !DIExpression()), !dbg !5693
  %314 = lshr i24 %246, 20, !dbg !5931
  %315 = lshr i24 %246, 19, !dbg !5932
  %316 = or i24 %314, %315, !dbg !5933
  %317 = and i24 %316, 1, !dbg !5933
  %318 = icmp eq i24 %317, 0, !dbg !5933
  br i1 %318, label %323, label %319, !dbg !5934

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5935
  call void @llvm.dbg.value(metadata i32 %320, metadata !5674, metadata !DIExpression()), !dbg !5936
  %321 = icmp slt i32 %320, 0, !dbg !5937
  %322 = add i32 %313, 1, !dbg !5935
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5697
  call void @llvm.dbg.value(metadata i32 %324, metadata !5573, metadata !DIExpression()), !dbg !5693
  %325 = and i24 %246, 1048576, !dbg !5939
  %326 = icmp eq i24 %325, 0, !dbg !5939
  br i1 %326, label %333, label %327, !dbg !5940

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5941
  %329 = zext i8 %328 to i32, !dbg !5941
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %330, metadata !5680, metadata !DIExpression()), !dbg !5942
  %331 = icmp slt i32 %330, 0, !dbg !5943
  %332 = add i32 %324, 1, !dbg !5941
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5697
  call void @llvm.dbg.value(metadata i32 %334, metadata !5573, metadata !DIExpression()), !dbg !5693
  %335 = load i32, i32* %16, align 4, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %335, metadata !5655, metadata !DIExpression()), !dbg !5707
  br label %336, !dbg !5946

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5947
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5697
  call void @llvm.dbg.value(metadata i32 %338, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %337, metadata !5655, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5707
  %339 = icmp sgt i32 %337, 0, !dbg !5948
  br i1 %339, label %340, label %345, !dbg !5946

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5949
  call void @llvm.dbg.value(metadata i32 %341, metadata !5655, metadata !DIExpression()), !dbg !5707
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5950
  call void @llvm.dbg.value(metadata i32 %342, metadata !5684, metadata !DIExpression()), !dbg !5951
  %343 = icmp slt i32 %342, 0, !dbg !5952
  %344 = add i32 %338, 1, !dbg !5950
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %343, label %361, label %336, !llvm.loop !5954

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %346, metadata !5687, metadata !DIExpression()), !dbg !5957
  %347 = icmp slt i32 %346, 0, !dbg !5958
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %349, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %304, metadata !5632, metadata !DIExpression()), !dbg !5707
  %350 = icmp sgt i32 %304, 0, !dbg !5960
  br i1 %350, label %351, label %363, !dbg !5961

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5961
  %353 = add i32 %352, %338, !dbg !5961
  br label %354, !dbg !5961

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %355, metadata !5632, metadata !DIExpression()), !dbg !5707
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %356, metadata !5689, metadata !DIExpression()), !dbg !5963
  %357 = icmp slt i32 %356, 0, !dbg !5964
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5966
  call void @llvm.dbg.value(metadata i32 undef, metadata !5573, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %359, metadata !5632, metadata !DIExpression()), !dbg !5707
  %360 = icmp sgt i32 %355, 1, !dbg !5960
  br i1 %360, label %354, label %363, !dbg !5961, !llvm.loop !5967

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5704
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5697
  call void @llvm.dbg.value(metadata i32 %364, metadata !5573, metadata !DIExpression()), !dbg !5693
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5704
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5693
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5969
  ret i32 %366, !dbg !5969
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !5970 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5974, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i8* %1, metadata !5975, metadata !DIExpression()), !dbg !5976
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5977
  store i24 0, i24* %3, align 4, !dbg !5977
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5977
  store i8 0, i8* %4, align 1, !dbg !5977
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5977
  store i32 0, i32* %5, align 4, !dbg !5977
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5977
  store i32 0, i32* %6, align 4, !dbg !5977
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5978
  call void @llvm.dbg.value(metadata i8* %7, metadata !5975, metadata !DIExpression()), !dbg !5976
  %8 = load i8, i8* %7, align 1, !dbg !5979
  %9 = icmp eq i8 %8, 37, !dbg !5981
  br i1 %9, label %10, label %12, !dbg !5982

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5983
  call void @llvm.dbg.value(metadata i8* %11, metadata !5975, metadata !DIExpression()), !dbg !5976
  store i8 37, i8* %4, align 1, !dbg !5985
  br label %18, !dbg !5986

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5987
  call void @llvm.dbg.value(metadata i8* %13, metadata !5975, metadata !DIExpression()), !dbg !5976
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5988
  call void @llvm.dbg.value(metadata i8* %14, metadata !5975, metadata !DIExpression()), !dbg !5976
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5989
  call void @llvm.dbg.value(metadata i8* %15, metadata !5975, metadata !DIExpression()), !dbg !5976
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5990
  call void @llvm.dbg.value(metadata i8* %16, metadata !5975, metadata !DIExpression()), !dbg !5976
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5991
  call void @llvm.dbg.value(metadata i8* %17, metadata !5975, metadata !DIExpression()), !dbg !5976
  br label %18, !dbg !5992

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5976
  ret i8* %19, !dbg !5993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5994 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5998, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i8* %1, metadata !5999, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i8* %2, metadata !6000, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i8* %3, metadata !6001, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i32 0, metadata !6002, metadata !DIExpression()), !dbg !6005
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6006

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6007
  call void @llvm.dbg.value(metadata i32 %9, metadata !6002, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i8* %8, metadata !6000, metadata !DIExpression()), !dbg !6005
  %10 = icmp ult i8* %8, %3, !dbg !6008
  br i1 %10, label %11, label %13, !dbg !6009

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6010
  br label %17, !dbg !6009

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6011

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6012
  %16 = icmp eq i8 %15, 0, !dbg !6011
  br i1 %16, label %24, label %17, !dbg !6006

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6010
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6013
  call void @llvm.dbg.value(metadata i8* %19, metadata !6000, metadata !DIExpression()), !dbg !6005
  %20 = zext i8 %18 to i32, !dbg !6014
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6015
  call void @llvm.dbg.value(metadata i32 %21, metadata !6003, metadata !DIExpression()), !dbg !6016
  %22 = icmp slt i32 %21, 0, !dbg !6017
  %23 = add i32 %9, 1, !dbg !6019
  call void @llvm.dbg.value(metadata i32 undef, metadata !6002, metadata !DIExpression()), !dbg !6005
  br i1 %22, label %24, label %7, !llvm.loop !6020

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6005
  ret i32 %25, !dbg !6022
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6023 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6027, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6028, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %2, metadata !6029, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %3, metadata !6030, metadata !DIExpression()), !dbg !6037
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6038
  %6 = load i8, i8* %5, align 1, !dbg !6038
  %7 = zext i8 %6 to i32, !dbg !6039
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !6040
  %9 = icmp eq i32 %8, 0, !dbg !6040
  call void @llvm.dbg.value(metadata i1 %9, metadata !6031, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6037
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %10, metadata !6032, metadata !DIExpression()), !dbg !6037
  %11 = ptrtoint i8* %3 to i32, !dbg !6042
  %12 = ptrtoint i8* %2 to i32, !dbg !6042
  %13 = sub i32 %11, %12, !dbg !6042
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6043
  call void @llvm.dbg.value(metadata i8* %14, metadata !6034, metadata !DIExpression()), !dbg !6037
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6044

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6037
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6027, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i8* %18, metadata !6034, metadata !DIExpression()), !dbg !6037
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6045
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6046
  call void @llvm.dbg.value(metadata i32 %25, metadata !6035, metadata !DIExpression()), !dbg !6047
  %26 = icmp ult i32 %25, 10, !dbg !6048
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6049
  %28 = add i32 %27, %25, !dbg !6047
  %29 = trunc i32 %28 to i8, !dbg !6049
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6050
  call void @llvm.dbg.value(metadata i8* %30, metadata !6034, metadata !DIExpression()), !dbg !6037
  store i8 %29, i8* %30, align 1, !dbg !6051
  call void @llvm.dbg.value(metadata i64 %22, metadata !6027, metadata !DIExpression()), !dbg !6037
  %31 = icmp uge i64 %19, %15, !dbg !6052
  %32 = icmp ugt i8* %30, %2, !dbg !6053
  %33 = and i1 %31, %32, !dbg !6053
  br i1 %33, label %17, label %34, !dbg !6054, !llvm.loop !6055

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6057
  %36 = load i24, i24* %35, align 4, !dbg !6057
  %37 = and i24 %36, 32, !dbg !6057
  %38 = icmp eq i24 %37, 0, !dbg !6057
  br i1 %38, label %44, label %39, !dbg !6059

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6060

40:                                               ; preds = %39
  br label %41, !dbg !6062

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6066
  store i24 %43, i24* %35, align 4, !dbg !6066
  br label %44, !dbg !6067

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6068 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6074, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.value(metadata i8* %1, metadata !6075, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.value(metadata i32 %2, metadata !6076, metadata !DIExpression()), !dbg !6077
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6078
  %5 = load i24, i24* %4, align 4, !dbg !6078
  %6 = lshr i24 %5, 11, !dbg !6078
  %7 = and i24 %6, 15, !dbg !6078
  %8 = zext i24 %7 to i32, !dbg !6078
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6079

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6080
  store i32 %2, i32* %10, align 4, !dbg !6082
  br label %28, !dbg !6083

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6084
  store i8 %12, i8* %1, align 1, !dbg !6085
  br label %28, !dbg !6086

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6087
  %15 = bitcast i8* %1 to i16*, !dbg !6088
  store i16 %14, i16* %15, align 2, !dbg !6089
  br label %28, !dbg !6090

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6091
  store i32 %2, i32* %17, align 4, !dbg !6092
  br label %28, !dbg !6093

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6094
  %20 = bitcast i8* %1 to i64*, !dbg !6095
  store i64 %19, i64* %20, align 8, !dbg !6096
  br label %28, !dbg !6097

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6098
  %23 = bitcast i8* %1 to i64*, !dbg !6099
  store i64 %22, i64* %23, align 8, !dbg !6100
  br label %28, !dbg !6101

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6102
  store i32 %2, i32* %25, align 4, !dbg !6103
  br label %28, !dbg !6104

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6105
  store i32 %2, i32* %27, align 4, !dbg !6106
  br label %28, !dbg !6107

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6108
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6112, metadata !DIExpression()), !dbg !6113
  %2 = add i32 %0, -65, !dbg !6114
  %3 = icmp ult i32 %2, 26, !dbg !6115
  %4 = zext i1 %3 to i32, !dbg !6115
  ret i32 %4, !dbg !6116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6117 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6121, metadata !DIExpression()), !dbg !6122
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6123

2:                                                ; preds = %1
  br label %4, !dbg !6124

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6126

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6127
  ret i32 %5, !dbg !6128
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6129 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6131, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %1, metadata !6132, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 1, metadata !6133, metadata !DIExpression()), !dbg !6134
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6135

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6133, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %5, metadata !6132, metadata !DIExpression()), !dbg !6134
  %6 = load i8, i8* %5, align 1, !dbg !6136
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6138

7:                                                ; preds = %4
  br label %11, !dbg !6139

8:                                                ; preds = %4
  br label %11, !dbg !6141

9:                                                ; preds = %4
  br label %11, !dbg !6142

10:                                               ; preds = %4
  br label %11, !dbg !6143

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6144
  %14 = or i24 %13, %12, !dbg !6144
  store i24 %14, i24* %3, align 4, !dbg !6144
  call void @llvm.dbg.value(metadata i8 poison, metadata !6133, metadata !DIExpression()), !dbg !6134
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6132, metadata !DIExpression()), !dbg !6134
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6133, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %15, metadata !6132, metadata !DIExpression()), !dbg !6134
  %17 = load i24, i24* %3, align 4, !dbg !6145
  %18 = and i24 %17, 68, !dbg !6147
  %19 = icmp eq i24 %18, 68, !dbg !6147
  br i1 %19, label %20, label %22, !dbg !6147

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6148
  store i24 %21, i24* %3, align 4, !dbg !6148
  br label %22, !dbg !6150

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6151
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6152 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6154, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8* %1, metadata !6155, metadata !DIExpression()), !dbg !6158
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6159
  %5 = load i24, i24* %4, align 4, !dbg !6160
  %6 = or i24 %5, 128, !dbg !6160
  store i24 %6, i24* %4, align 4, !dbg !6160
  call void @llvm.dbg.value(metadata i8* %1, metadata !6155, metadata !DIExpression()), !dbg !6158
  %7 = load i8, i8* %1, align 1, !dbg !6161
  %8 = icmp eq i8 %7, 42, !dbg !6163
  br i1 %8, label %9, label %12, !dbg !6164

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6165
  store i24 %10, i24* %4, align 4, !dbg !6165
  call void @llvm.dbg.value(metadata i8* %1, metadata !6155, metadata !DIExpression()), !dbg !6158
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6167
  call void @llvm.dbg.value(metadata i8* %11, metadata !6155, metadata !DIExpression()), !dbg !6158
  store i8* %11, i8** %3, align 4, !dbg !6167
  br label %29, !dbg !6168

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6156, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.value(metadata i8** %3, metadata !6155, metadata !DIExpression(DW_OP_deref)), !dbg !6158
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %13, metadata !6157, metadata !DIExpression()), !dbg !6158
  %14 = load i8*, i8** %3, align 4, !dbg !6170
  call void @llvm.dbg.value(metadata i8* %14, metadata !6155, metadata !DIExpression()), !dbg !6158
  %15 = icmp eq i8* %14, %1, !dbg !6172
  br i1 %15, label %29, label %16, !dbg !6173

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6174
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6176
  store i32 %13, i32* %18, align 4, !dbg !6177
  %19 = lshr i32 %13, 31, !dbg !6178
  %20 = lshr i24 %17, 1, !dbg !6179
  %21 = and i24 %20, 1, !dbg !6179
  %22 = zext i24 %21 to i32, !dbg !6179
  %23 = or i32 %19, %22, !dbg !6179
  %24 = trunc i32 %23 to i24, !dbg !6179
  %25 = shl nuw nsw i24 %24, 1, !dbg !6179
  %26 = and i24 %17, -131, !dbg !6179
  %27 = or i24 %26, 128, !dbg !6179
  %28 = or i24 %25, %27, !dbg !6179
  store i24 %28, i24* %4, align 4, !dbg !6179
  br label %29, !dbg !6180

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6158
  ret i8* %30, !dbg !6181
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6182 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6184, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %1, metadata !6185, metadata !DIExpression()), !dbg !6187
  %4 = load i8, i8* %1, align 1, !dbg !6188
  %5 = icmp eq i8 %4, 46, !dbg !6189
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6190
  %7 = load i24, i24* %6, align 4, !dbg !6191
  %8 = select i1 %5, i24 512, i24 0, !dbg !6191
  %9 = and i24 %7, -513, !dbg !6191
  %10 = or i24 %9, %8, !dbg !6191
  store i24 %10, i24* %6, align 4, !dbg !6191
  br i1 %5, label %11, label %32, !dbg !6192

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6185, metadata !DIExpression()), !dbg !6187
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6193
  call void @llvm.dbg.value(metadata i8* %12, metadata !6185, metadata !DIExpression()), !dbg !6187
  store i8* %12, i8** %3, align 4, !dbg !6193
  %13 = load i8, i8* %12, align 1, !dbg !6194
  %14 = icmp eq i8 %13, 42, !dbg !6196
  br i1 %14, label %15, label %18, !dbg !6197

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6198
  store i24 %16, i24* %6, align 4, !dbg !6198
  call void @llvm.dbg.value(metadata i8* %12, metadata !6185, metadata !DIExpression()), !dbg !6187
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6200
  call void @llvm.dbg.value(metadata i8* %17, metadata !6185, metadata !DIExpression()), !dbg !6187
  store i8* %17, i8** %3, align 4, !dbg !6200
  br label %32, !dbg !6201

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6185, metadata !DIExpression(DW_OP_deref)), !dbg !6187
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %19, metadata !6186, metadata !DIExpression()), !dbg !6187
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6203
  store i32 %19, i32* %20, align 4, !dbg !6204
  %21 = lshr i32 %19, 31, !dbg !6205
  %22 = load i24, i24* %6, align 4, !dbg !6206
  %23 = lshr i24 %22, 1, !dbg !6206
  %24 = and i24 %23, 1, !dbg !6206
  %25 = zext i24 %24 to i32, !dbg !6206
  %26 = or i32 %21, %25, !dbg !6206
  %27 = trunc i32 %26 to i24, !dbg !6206
  %28 = shl nuw nsw i24 %27, 1, !dbg !6206
  %29 = and i24 %22, -3, !dbg !6206
  %30 = or i24 %28, %29, !dbg !6206
  store i24 %30, i24* %6, align 4, !dbg !6206
  %31 = load i8*, i8** %3, align 4, !dbg !6207
  call void @llvm.dbg.value(metadata i8* %31, metadata !6185, metadata !DIExpression()), !dbg !6187
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6187
  ret i8* %33, !dbg !6208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6209 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6211, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata i8* %1, metadata !6212, metadata !DIExpression()), !dbg !6213
  %3 = load i8, i8* %1, align 1, !dbg !6214
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6215

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6216
  call void @llvm.dbg.value(metadata i8* %5, metadata !6212, metadata !DIExpression()), !dbg !6213
  %6 = load i8, i8* %5, align 1, !dbg !6219
  %7 = icmp eq i8 %6, 104, !dbg !6220
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6221
  %9 = load i24, i24* %8, align 4, !dbg !6221
  %10 = and i24 %9, -30721, !dbg !6221
  br i1 %7, label %11, label %14, !dbg !6222

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6223
  store i24 %12, i24* %8, align 4, !dbg !6223
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6225
  call void @llvm.dbg.value(metadata i8* %13, metadata !6212, metadata !DIExpression()), !dbg !6213
  br label %56, !dbg !6226

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6227
  store i24 %15, i24* %8, align 4, !dbg !6227
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6229
  call void @llvm.dbg.value(metadata i8* %17, metadata !6212, metadata !DIExpression()), !dbg !6213
  %18 = load i8, i8* %17, align 1, !dbg !6231
  %19 = icmp eq i8 %18, 108, !dbg !6232
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6233
  %21 = load i24, i24* %20, align 4, !dbg !6233
  %22 = and i24 %21, -30721, !dbg !6233
  br i1 %19, label %23, label %26, !dbg !6234

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6235
  store i24 %24, i24* %20, align 4, !dbg !6235
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6237
  call void @llvm.dbg.value(metadata i8* %25, metadata !6212, metadata !DIExpression()), !dbg !6213
  br label %56, !dbg !6238

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6239
  store i24 %27, i24* %20, align 4, !dbg !6239
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6241
  %30 = load i24, i24* %29, align 4, !dbg !6242
  %31 = and i24 %30, -30721, !dbg !6242
  %32 = or i24 %31, 10240, !dbg !6242
  store i24 %32, i24* %29, align 4, !dbg !6242
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6243
  call void @llvm.dbg.value(metadata i8* %33, metadata !6212, metadata !DIExpression()), !dbg !6213
  br label %56, !dbg !6244

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6245
  %36 = load i24, i24* %35, align 4, !dbg !6246
  %37 = and i24 %36, -30721, !dbg !6246
  %38 = or i24 %37, 12288, !dbg !6246
  store i24 %38, i24* %35, align 4, !dbg !6246
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6247
  call void @llvm.dbg.value(metadata i8* %39, metadata !6212, metadata !DIExpression()), !dbg !6213
  br label %56, !dbg !6248

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6249
  %42 = load i24, i24* %41, align 4, !dbg !6250
  %43 = and i24 %42, -30721, !dbg !6250
  %44 = or i24 %43, 14336, !dbg !6250
  store i24 %44, i24* %41, align 4, !dbg !6250
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6251
  call void @llvm.dbg.value(metadata i8* %45, metadata !6212, metadata !DIExpression()), !dbg !6213
  br label %56, !dbg !6252

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6253
  %48 = load i24, i24* %47, align 4, !dbg !6254
  %49 = and i24 %48, -30723, !dbg !6254
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6255
  call void @llvm.dbg.value(metadata i8* %50, metadata !6212, metadata !DIExpression()), !dbg !6213
  %51 = or i24 %49, 16386, !dbg !6256
  store i24 %51, i24* %47, align 4, !dbg !6256
  br label %56, !dbg !6257

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6258
  %54 = load i24, i24* %53, align 4, !dbg !6259
  %55 = and i24 %54, -30721, !dbg !6259
  store i24 %55, i24* %53, align 4, !dbg !6259
  br label %56, !dbg !6260

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6212, metadata !DIExpression()), !dbg !6213
  ret i8* %57, !dbg !6261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6262 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6264, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.value(metadata i8* %1, metadata !6265, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.value(metadata i8 0, metadata !6266, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.value(metadata i8* %1, metadata !6265, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6269
  %3 = load i8, i8* %1, align 1, !dbg !6270
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6271
  store i8 %3, i8* %4, align 1, !dbg !6272
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6273

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6274

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6275
  %9 = load i24, i24* %8, align 4, !dbg !6275
  %10 = and i24 %9, -458753, !dbg !6275
  %11 = or i24 %10, %7, !dbg !6275
  call void @llvm.dbg.label(metadata !6267), !dbg !6276
  %12 = and i24 %9, 30720, !dbg !6277
  %13 = icmp eq i24 %12, 16384, !dbg !6277
  %14 = zext i1 %13 to i24, !dbg !6279
  %15 = or i24 %11, %14, !dbg !6279
  %16 = icmp eq i8 %3, 99, !dbg !6280
  br i1 %16, label %17, label %43, !dbg !6282

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6283
  %19 = icmp ne i24 %18, 0, !dbg !6283
  call void @llvm.dbg.value(metadata i1 %19, metadata !6266, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6269
  br label %43, !dbg !6285

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6286
  %22 = load i24, i24* %21, align 4, !dbg !6287
  %23 = and i24 %22, -458753, !dbg !6287
  %24 = or i24 %23, 262144, !dbg !6287
  call void @llvm.dbg.value(metadata i8 1, metadata !6266, metadata !DIExpression()), !dbg !6269
  br label %43, !dbg !6288

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6291
  %27 = load i24, i24* %26, align 4, !dbg !6292
  %28 = and i24 %27, -458753, !dbg !6292
  %29 = or i24 %28, 196608, !dbg !6292
  %30 = and i24 %27, 30720, !dbg !6293
  %31 = icmp eq i24 %30, 16384, !dbg !6293
  br label %43, !dbg !6295

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6296
  %34 = load i24, i24* %33, align 4, !dbg !6297
  %35 = and i24 %34, -458753, !dbg !6297
  %36 = or i24 %35, 196608, !dbg !6297
  %37 = and i24 %34, 30720, !dbg !6298
  %38 = icmp ne i24 %37, 0, !dbg !6298
  br label %43, !dbg !6300

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6301
  %41 = load i24, i24* %40, align 4, !dbg !6302
  %42 = or i24 %41, 1, !dbg !6302
  br label %43, !dbg !6303

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6304
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6305
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6306
  call void @llvm.dbg.value(metadata i8* %48, metadata !6265, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.value(metadata i8 poison, metadata !6266, metadata !DIExpression()), !dbg !6269
  %49 = lshr i24 %44, 1, !dbg !6304
  %50 = and i24 %49, 1, !dbg !6304
  %51 = zext i24 %50 to i32, !dbg !6304
  %52 = or i32 %51, %47, !dbg !6304
  %53 = trunc i32 %52 to i24, !dbg !6304
  %54 = shl nuw nsw i24 %53, 1, !dbg !6304
  %55 = and i24 %44, -3, !dbg !6304
  %56 = or i24 %54, %55, !dbg !6304
  store i24 %56, i24* %46, align 4, !dbg !6304
  ret i8* %48, !dbg !6307
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6308 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6312, metadata !DIExpression()), !dbg !6315
  %2 = load i8*, i8** %0, align 4, !dbg !6316
  call void @llvm.dbg.value(metadata i8* %2, metadata !6313, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata i32 0, metadata !6314, metadata !DIExpression()), !dbg !6315
  %3 = load i8, i8* %2, align 1, !dbg !6317
  %4 = zext i8 %3 to i32, !dbg !6318
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6319
  %6 = icmp eq i32 %5, 0, !dbg !6320
  br i1 %6, label %19, label %7, !dbg !6320

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6314, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata i8* %10, metadata !6313, metadata !DIExpression()), !dbg !6315
  %11 = mul i32 %9, 10, !dbg !6321
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6323
  call void @llvm.dbg.value(metadata i8* %12, metadata !6313, metadata !DIExpression()), !dbg !6315
  %13 = add i32 %11, -48, !dbg !6324
  %14 = add i32 %13, %8, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %14, metadata !6314, metadata !DIExpression()), !dbg !6315
  %15 = load i8, i8* %12, align 1, !dbg !6317
  %16 = zext i8 %15 to i32, !dbg !6318
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6319
  %18 = icmp eq i32 %17, 0, !dbg !6320
  br i1 %18, label %19, label %7, !dbg !6320, !llvm.loop !6326

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6315
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6315
  store i8* %20, i8** %0, align 4, !dbg !6328
  ret i32 %21, !dbg !6329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6332, metadata !DIExpression()), !dbg !6333
  %2 = add i32 %0, -48, !dbg !6334
  %3 = icmp ult i32 %2, 10, !dbg !6335
  %4 = zext i1 %3 to i32, !dbg !6335
  ret i32 %4, !dbg !6336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6337 {
  tail call void asm sideeffect ".globl\09CONFIG_BM_MESSAGE_SIZE\0A\09.equ\09CONFIG_BM_MESSAGE_SIZE,256\0A\09.type\09CONFIG_BM_MESSAGE_SIZE,%object", ""() #25, !dbg !6339, !srcloc !6340
  tail call void asm sideeffect ".globl\09CONFIG_BM_ONE_TO\0A\09.equ\09CONFIG_BM_ONE_TO,8\0A\09.type\09CONFIG_BM_ONE_TO,%object", ""() #25, !dbg !6341, !srcloc !6342
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6343, !srcloc !6344
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6345, !srcloc !6346
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6347, !srcloc !6348
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6349, !srcloc !6350
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6351, !srcloc !6352
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6353, !srcloc !6354
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6355, !srcloc !6356
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6357, !srcloc !6358
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6359, !srcloc !6360
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6361, !srcloc !6362
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6363, !srcloc !6364
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6365, !srcloc !6366
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6367, !srcloc !6368
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6369, !srcloc !6370
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6371, !srcloc !6372
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6373, !srcloc !6374
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6375, !srcloc !6376
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6377, !srcloc !6378
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6379, !srcloc !6380
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6381, !srcloc !6382
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6383, !srcloc !6384
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6385, !srcloc !6386
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6387, !srcloc !6388
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6389, !srcloc !6390
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6391, !srcloc !6392
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6393, !srcloc !6394
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6395, !srcloc !6396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6397, !srcloc !6398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6399, !srcloc !6400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6401, !srcloc !6402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !6403, !srcloc !6404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6405, !srcloc !6406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #25, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #25, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #25, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #25, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #25, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6541, !srcloc !6542
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6543, !srcloc !6544
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6545, !srcloc !6546
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6547, !srcloc !6548
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6549, !srcloc !6550
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6551, !srcloc !6552
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6553, !srcloc !6554
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6555, !srcloc !6556
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6559, !srcloc !6560
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6561, !srcloc !6562
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6563, !srcloc !6564
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6565, !srcloc !6566
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6567, !srcloc !6568
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6569, !srcloc !6570
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6571, !srcloc !6572
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6573, !srcloc !6574
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6575, !srcloc !6576
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6577, !srcloc !6578
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6581, !srcloc !6582
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6583, !srcloc !6584
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6585, !srcloc !6586
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6587, !srcloc !6588
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6589, !srcloc !6590
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6591, !srcloc !6592
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6593, !srcloc !6594
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6595, !srcloc !6596
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6597, !srcloc !6598
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6599, !srcloc !6600
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6601, !srcloc !6602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6603, !srcloc !6604
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6605, !srcloc !6606
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6607, !srcloc !6608
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6609, !srcloc !6610
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6611, !srcloc !6612
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6613, !srcloc !6614
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6615, !srcloc !6616
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6617, !srcloc !6618
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6619, !srcloc !6620
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6621, !srcloc !6622
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6623, !srcloc !6624
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6625, !srcloc !6626
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6627, !srcloc !6628
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6629, !srcloc !6630
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6631, !srcloc !6632
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6633, !srcloc !6634
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6635, !srcloc !6636
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6637, !srcloc !6638
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6639, !srcloc !6640
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6641, !srcloc !6642
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6643, !srcloc !6644
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6645, !srcloc !6646
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6647, !srcloc !6648
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6649, !srcloc !6650
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6651, !srcloc !6652
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6653, !srcloc !6654
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6655, !srcloc !6656
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6657, !srcloc !6658
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6659, !srcloc !6660
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6661, !srcloc !6662
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6663, !srcloc !6664
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6665, !srcloc !6666
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6667, !srcloc !6668
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6671, !srcloc !6672
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6673, !srcloc !6674
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6675, !srcloc !6676
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6677, !srcloc !6678
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6679, !srcloc !6680
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6681, !srcloc !6682
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6683, !srcloc !6684
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6685, !srcloc !6686
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6687, !srcloc !6688
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6689, !srcloc !6690
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6691, !srcloc !6692
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6693, !srcloc !6694
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6695, !srcloc !6696
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6697, !srcloc !6698
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6699, !srcloc !6700
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6701, !srcloc !6702
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6703, !srcloc !6704
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6705, !srcloc !6706
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6707, !srcloc !6708
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6709, !srcloc !6710
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6711, !srcloc !6712
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6713, !srcloc !6714
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6715, !srcloc !6716
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6717, !srcloc !6718
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6719, !srcloc !6720
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6721, !srcloc !6722
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6723, !srcloc !6724
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6725, !srcloc !6726
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6727, !srcloc !6728
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6729, !srcloc !6730
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6731, !srcloc !6732
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6733, !srcloc !6734
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6735, !srcloc !6736
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6737, !srcloc !6738
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6739, !srcloc !6740
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6741, !srcloc !6742
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6743, !srcloc !6744
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6745, !srcloc !6746
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6747, !srcloc !6748
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6749, !srcloc !6750
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6751, !srcloc !6752
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6753, !srcloc !6754
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6755, !srcloc !6756
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6757, !srcloc !6758
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6759, !srcloc !6760
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6761, !srcloc !6762
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6763, !srcloc !6764
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6765, !srcloc !6766
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6767, !srcloc !6768
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6769, !srcloc !6770
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6771, !srcloc !6772
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6773, !srcloc !6774
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !6775, !srcloc !6776
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6777, !srcloc !6778
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6779, !srcloc !6780
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6781, !srcloc !6782
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6783, !srcloc !6784
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6785, !srcloc !6786
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6787, !srcloc !6788
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6789, !srcloc !6790
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6791, !srcloc !6792
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6793, !srcloc !6794
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6803, !srcloc !6804
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6805, !srcloc !6806
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6807, !srcloc !6808
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6809, !srcloc !6810
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6811, !srcloc !6812
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6813, !srcloc !6814
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6815, !srcloc !6816
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6817, !srcloc !6818
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6831, !srcloc !6832
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6833, !srcloc !6834
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6835, !srcloc !6836
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6837, !srcloc !6838
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6893, !srcloc !6894
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6895, !srcloc !6896
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6897, !srcloc !6898
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6899, !srcloc !6900
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6901, !srcloc !6902
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6903, !srcloc !6904
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6907, !srcloc !6908
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6909, !srcloc !6910
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6911, !srcloc !6912
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6913, !srcloc !6914
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6915, !srcloc !6916
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6917, !srcloc !6918
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6919, !srcloc !6920
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !6923, !srcloc !6924
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !6925, !srcloc !6926
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !6927, !srcloc !6928
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #25, !dbg !6929, !srcloc !6930
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !6931, !srcloc !6932
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6933, !srcloc !6934
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6935, !srcloc !6936
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6937, !srcloc !6938
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6941, !srcloc !6942
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6943, !srcloc !6944
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6985, !srcloc !6986
  ret void, !dbg !6987
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6990, metadata !DIExpression()), !dbg !6992
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6993
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6994
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6995, !srcloc !7004
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6995
  call void @llvm.dbg.value(metadata i32 %3, metadata !7001, metadata !DIExpression()) #25, !dbg !7005
  call void @llvm.dbg.value(metadata i32 undef, metadata !7002, metadata !DIExpression()) #25, !dbg !7005
  call void @llvm.dbg.value(metadata i32 %3, metadata !6991, metadata !DIExpression()), !dbg !6992
  call void @llvm.dbg.value(metadata i32 %3, metadata !7006, metadata !DIExpression()) #25, !dbg !7011
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !7013, !srcloc !7014
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7015
  ret i32 0, !dbg !7016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #16 !dbg !7017 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7019
  %2 = or i32 %1, 512, !dbg !7019
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7019
  ret void, !dbg !7020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #16 !dbg !7021 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7022
  %2 = or i32 %1, 1024, !dbg !7022
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7022
  ret void, !dbg !7023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7026, metadata !DIExpression()), !dbg !7027
  ret i32 0, !dbg !7028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7029 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7032, metadata !DIExpression()), !dbg !7040
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7041
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7041
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7033, metadata !DIExpression()), !dbg !7042
  call void @llvm.va_start(i8* nonnull %3), !dbg !7043
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7044
  %5 = load i32, i32* %4, align 4, !dbg !7044
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7044
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7044
  call void @llvm.va_end(i8* nonnull %3), !dbg !7045
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7046
  ret void, !dbg !7046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7047 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7052, metadata !DIExpression()), !dbg !7053
  call void @llvm.dbg.value(metadata i8* %0, metadata !7051, metadata !DIExpression()), !dbg !7053
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7054
  ret void, !dbg !7055
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7060, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i8* %1, metadata !7061, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %2, metadata !7062, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i8* %1, metadata !7063, metadata !DIExpression()), !dbg !7064
  %4 = icmp eq i32 %2, 0, !dbg !7065
  br i1 %4, label %14, label %5, !dbg !7066

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) #26, !dbg !7064
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7066

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7063, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %10, metadata !7062, metadata !DIExpression()), !dbg !7064
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 noundef %7) #27, !dbg !7067
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7069
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7070
  call void @llvm.dbg.value(metadata i32 %11, metadata !7062, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i8* %12, metadata !7063, metadata !DIExpression()), !dbg !7064
  br i1 %13, label %14, label %8, !dbg !7070, !llvm.loop !7071

14:                                               ; preds = %8, %3
  ret void, !dbg !7073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) unnamed_addr #5 !dbg !7074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7076, metadata !DIExpression()), !dbg !7077
  %2 = add i32 %0, -1, !dbg !7078
  %3 = icmp ult i32 %2, 4, !dbg !7078
  %4 = shl i32 %2, 3, !dbg !7078
  %5 = lshr i32 1145657157, %4, !dbg !7078
  %6 = trunc i32 %5 to i8, !dbg !7078
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7078
  ret i8 %7, !dbg !7079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7080 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7084, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata i32 %1, metadata !7085, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata i32 0, metadata !7086, metadata !DIExpression()), !dbg !7096
  br label %4, !dbg !7097

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.22, i32 0, i32 0)) #27, !dbg !7098
  call void @llvm.dbg.value(metadata i32 0, metadata !7088, metadata !DIExpression()), !dbg !7099
  br label %16, !dbg !7100

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7086, metadata !DIExpression()), !dbg !7096
  %6 = icmp ult i32 %5, %1, !dbg !7101
  br i1 %6, label %7, label %11, !dbg !7105

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7106
  %9 = load i8, i8* %8, align 1, !dbg !7106
  %10 = zext i8 %9 to i32, !dbg !7108
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.23, i32 0, i32 0), i32 noundef %10) #27, !dbg !7109
  br label %12, !dbg !7110

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.24, i32 0, i32 0)) #27, !dbg !7111
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7113
  call void @llvm.dbg.value(metadata i32 %13, metadata !7086, metadata !DIExpression()), !dbg !7096
  %14 = icmp eq i32 %13, 8, !dbg !7114
  br i1 %14, label %3, label %4, !dbg !7097, !llvm.loop !7115

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.25, i32 0, i32 0)) #27, !dbg !7117
  ret void, !dbg !7118

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7088, metadata !DIExpression()), !dbg !7099
  %18 = icmp ult i32 %17, %1, !dbg !7119
  br i1 %18, label %19, label %26, !dbg !7120

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7121
  %21 = load i8, i8* %20, align 1, !dbg !7121
  call void @llvm.dbg.value(metadata i8 %21, metadata !7090, metadata !DIExpression()), !dbg !7122
  %22 = zext i8 %21 to i32, !dbg !7123
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7124
  %24 = icmp eq i32 %23, 0, !dbg !7125
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7124
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef %25) #27, !dbg !7126
  br label %27, !dbg !7127

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.27, i32 0, i32 0)) #27, !dbg !7128
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7130
  call void @llvm.dbg.value(metadata i32 %28, metadata !7088, metadata !DIExpression()), !dbg !7099
  %29 = icmp eq i32 %28, 8, !dbg !7131
  br i1 %29, label %15, label %16, !dbg !7100, !llvm.loop !7132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7136, metadata !DIExpression()), !dbg !7137
  %2 = add i32 %0, -32, !dbg !7138
  %3 = icmp ult i32 %2, 95, !dbg !7138
  %4 = zext i1 %3 to i32, !dbg !7138
  ret i32 %4, !dbg !7139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7189, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7190, metadata !DIExpression()), !dbg !7191
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7192
  br i1 %3, label %5, label %4, !dbg !7194

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !7195
  br label %5, !dbg !7197

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7198
  ret void, !dbg !7199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7200 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7204, metadata !DIExpression()), !dbg !7205
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7206
  %3 = load i32, i32* %2, align 4, !dbg !7206
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7206
  %5 = load i32, i32* %4, align 4, !dbg !7206
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7206
  %7 = load i32, i32* %6, align 4, !dbg !7206
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7206
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7211
  %9 = load i32, i32* %8, align 4, !dbg !7211
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7211
  %11 = load i32, i32* %10, align 4, !dbg !7211
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7211
  %13 = load i32, i32* %12, align 4, !dbg !7211
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7211
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7216
  %15 = load i32, i32* %14, align 4, !dbg !7216
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.30, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7216
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7221
  %17 = load i32, i32* %16, align 4, !dbg !7221
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.31, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7221
  ret void, !dbg !7226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7227 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7244, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7245, metadata !DIExpression()), !dbg !7247
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7248
  %4 = load i32, i32* %3, align 4, !dbg !7248
  call void @llvm.dbg.value(metadata i32 %4, metadata !7246, metadata !DIExpression()), !dbg !7247
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !7249
  ret void, !dbg !7250
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7251 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7255, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %0, metadata !7256, metadata !DIExpression()), !dbg !7258
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7259
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7259
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7257, metadata !DIExpression()), !dbg !7260
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7260
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7261
  %5 = bitcast i8* %4 to i32*, !dbg !7261
  %6 = load i32, i32* %5, align 4, !dbg !7261
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7262
  store i32 %6, i32* %7, align 4, !dbg !7263
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !7264
  unreachable, !dbg !7265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7269, metadata !DIExpression()), !dbg !7270
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !7271
  ret void, !dbg !7272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7277, metadata !DIExpression()), !dbg !7278
  %2 = icmp sgt i32 %0, -1, !dbg !7279
  br i1 %2, label %3, label %8, !dbg !7281

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7282, !srcloc !7284
  %4 = and i32 %0, 31, !dbg !7285
  %5 = shl nuw i32 1, %4, !dbg !7286
  %6 = lshr i32 %0, 5, !dbg !7287
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7288
  store volatile i32 %5, i32* %7, align 4, !dbg !7289
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7290, !srcloc !7291
  br label %8, !dbg !7292

8:                                                ; preds = %3, %1
  ret void, !dbg !7293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7296, metadata !DIExpression()), !dbg !7297
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !7298
  ret void, !dbg !7299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7302, metadata !DIExpression()), !dbg !7303
  %2 = icmp sgt i32 %0, -1, !dbg !7304
  br i1 %2, label %3, label %8, !dbg !7306

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7307
  %5 = shl nuw i32 1, %4, !dbg !7309
  %6 = lshr i32 %0, 5, !dbg !7310
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7311
  store volatile i32 %5, i32* %7, align 4, !dbg !7312
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7313, !srcloc !7317
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7318, !srcloc !7321
  br label %8, !dbg !7322

8:                                                ; preds = %3, %1
  ret void, !dbg !7323
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7328, metadata !DIExpression()), !dbg !7329
  %2 = lshr i32 %0, 5, !dbg !7330
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7331
  %4 = load volatile i32, i32* %3, align 4, !dbg !7331
  %5 = and i32 %0, 31, !dbg !7332
  %6 = shl nuw i32 1, %5, !dbg !7332
  %7 = and i32 %4, %6, !dbg !7333
  ret i32 %7, !dbg !7334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7339, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 %1, metadata !7340, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 %2, metadata !7341, metadata !DIExpression()), !dbg !7342
  %4 = add i32 %1, 1, !dbg !7343
  call void @llvm.dbg.value(metadata i32 %4, metadata !7340, metadata !DIExpression()), !dbg !7342
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !7346
  ret void, !dbg !7347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i32 %1, metadata !7353, metadata !DIExpression()), !dbg !7354
  %3 = trunc i32 %1 to i8, !dbg !7355
  %4 = shl i8 %3, 4, !dbg !7355
  %5 = and i32 %0, 15, !dbg !7357
  %6 = add nsw i32 %5, -4, !dbg !7357
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7357
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7357
  %9 = icmp slt i32 %0, 0, !dbg !7357
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7357
  store volatile i8 %4, i8* %10, align 1, !dbg !7355
  ret void, !dbg !7358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7359 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7361, metadata !DIExpression()), !dbg !7362
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7363
  ret void, !dbg !7364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7365 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7367
  tail call void @z_arm_int_exit() #27, !dbg !7368
  ret void, !dbg !7369
}

; Function Attrs: optsize
declare !dbg !7370 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7371 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7373 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !7375
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !7376
  tail call void @z_bss_zero() #27, !dbg !7377
  tail call void @z_data_copy() #27, !dbg !7378
  tail call void @z_arm_interrupt_init() #27, !dbg !7379
  tail call void @z_cstart() #29, !dbg !7380
  unreachable, !dbg !7380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7381 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7382
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7383, !srcloc !7386
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7387, !srcloc !7390
  ret void, !dbg !7391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7392 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7393
  %2 = and i32 %1, -15728641, !dbg !7393
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7393
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !7394, !srcloc !7399
  call void @llvm.dbg.value(metadata i32 %3, metadata !7397, metadata !DIExpression()) #25, !dbg !7400
  %4 = and i32 %3, -5, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %4, metadata !7402, metadata !DIExpression()) #25, !dbg !7407
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !7409, !srcloc !7410
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7411, !srcloc !7390
  ret void, !dbg !7413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7417, metadata !DIExpression()), !dbg !7418
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7419
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7420
  store i32 %0, i32* %3, align 4, !dbg !7421
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7422
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7423
  store i32 %4, i32* %5, align 4, !dbg !7424
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7425
  %7 = or i32 %6, 268435456, !dbg !7425
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7425
  call void @llvm.dbg.value(metadata i32 0, metadata !7426, metadata !DIExpression()) #25, !dbg !7429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7431, !srcloc !7432
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7433
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7434
  %10 = load i32, i32* %9, align 4, !dbg !7434
  ret i32 %10, !dbg !7435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #8 !dbg !7436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7546, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7547, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8* %2, metadata !7548, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7549, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8* %4, metadata !7550, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8* %5, metadata !7551, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8* %6, metadata !7552, metadata !DIExpression()), !dbg !7554
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7555
  call void @llvm.dbg.value(metadata i8* %8, metadata !7553, metadata !DIExpression()), !dbg !7554
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7556
  %10 = bitcast i8* %9 to i32*, !dbg !7556
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7557
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7558
  %12 = bitcast i8* %8 to i32*, !dbg !7559
  store i32 %11, i32* %12, align 4, !dbg !7560
  %13 = ptrtoint i8* %4 to i32, !dbg !7561
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7562
  %15 = bitcast i8* %14 to i32*, !dbg !7562
  store i32 %13, i32* %15, align 4, !dbg !7563
  %16 = ptrtoint i8* %5 to i32, !dbg !7564
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7565
  %18 = bitcast i8* %17 to i32*, !dbg !7565
  store i32 %16, i32* %18, align 4, !dbg !7566
  %19 = ptrtoint i8* %6 to i32, !dbg !7567
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7568
  %21 = bitcast i8* %20 to i32*, !dbg !7568
  store i32 %19, i32* %21, align 4, !dbg !7569
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7570
  %23 = bitcast i8* %22 to i32*, !dbg !7570
  store i32 16777216, i32* %23, align 4, !dbg !7571
  %24 = ptrtoint i8* %8 to i32, !dbg !7572
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7573
  store i32 %24, i32* %25, align 8, !dbg !7574
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7575
  store i32 0, i32* %26, align 4, !dbg !7576
  ret void, !dbg !7577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !7578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7583, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 %1, metadata !7584, metadata !DIExpression()), !dbg !7589
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7590
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7585, metadata !DIExpression()), !dbg !7589
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7591
  br i1 %4, label %19, label %5, !dbg !7593

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7588, metadata !DIExpression()), !dbg !7589
  %6 = icmp eq i32 %0, -22, !dbg !7594
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7594
  %8 = load i32, i32* %7, align 4, !dbg !7594
  br i1 %6, label %16, label %9, !dbg !7596

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7594
  %11 = icmp ule i32 %10, %0, !dbg !7594
  %12 = icmp ugt i32 %8, %0, !dbg !7594
  %13 = and i1 %12, %11, !dbg !7594
  %14 = icmp ugt i32 %8, %1, !dbg !7594
  %15 = and i1 %14, %13, !dbg !7594
  br i1 %15, label %18, label %19, !dbg !7594

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7594
  br i1 %17, label %18, label %19, !dbg !7596

18:                                               ; preds = %9, %16
  br label %19, !dbg !7597

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7589
  ret i32 %20, !dbg !7599
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !7600 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7604, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i8* %1, metadata !7605, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7606, metadata !DIExpression()), !dbg !7607
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7608
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !7609
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !7610, !srcloc !7611
  unreachable, !dbg !7612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7613 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7631, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i32 %1, metadata !7632, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i32 %2, metadata !7633, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7634, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i32 0, metadata !7635, metadata !DIExpression()), !dbg !7641
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7642
  %9 = and i32 %8, 511, !dbg !7643
  call void @llvm.dbg.value(metadata i32 %9, metadata !7636, metadata !DIExpression()), !dbg !7641
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7644
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7644
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7645
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7645
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7640, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata i32 0, metadata !7647, metadata !DIExpression()) #25, !dbg !7650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7652, !srcloc !7653
  call void @llvm.dbg.value(metadata i8* %6, metadata !7638, metadata !DIExpression(DW_OP_deref)), !dbg !7641
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7654
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7639, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i8* %5, metadata !7637, metadata !DIExpression(DW_OP_deref)), !dbg !7641
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7655
  call void @llvm.dbg.value(metadata i32 %12, metadata !7635, metadata !DIExpression()), !dbg !7641
  %13 = load i8, i8* %5, align 1, !dbg !7656, !range !7658
  call void @llvm.dbg.value(metadata i8 %13, metadata !7637, metadata !DIExpression()), !dbg !7641
  %14 = icmp eq i8 %13, 0, !dbg !7656
  br i1 %14, label %15, label %32, !dbg !7659

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7660
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !7661
  %18 = load i8, i8* %6, align 1, !dbg !7662, !range !7658
  call void @llvm.dbg.value(metadata i8 %18, metadata !7638, metadata !DIExpression()), !dbg !7641
  %19 = icmp eq i8 %18, 0, !dbg !7662
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7664
  %21 = load i32, i32* %20, align 4, !dbg !7664
  br i1 %19, label %27, label %22, !dbg !7665

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7666
  %24 = icmp eq i32 %23, 0, !dbg !7669
  br i1 %24, label %25, label %31, !dbg !7670

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7671
  br label %29, !dbg !7673

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7674
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7664
  br label %31, !dbg !7676

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !7676
  br label %32, !dbg !7677

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7677
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7677
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7677
  ret void, !dbg !7677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7683, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %1, metadata !7684, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %2, metadata !7685, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i8* %3, metadata !7686, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i8 0, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7688, metadata !DIExpression()), !dbg !7689
  store i8 0, i8* %3, align 1, !dbg !7690
  %5 = icmp ugt i32 %2, -16777217, !dbg !7691
  br i1 %5, label %6, label %17, !dbg !7693

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7694
  %8 = icmp eq i32 %7, 8, !dbg !7694
  br i1 %8, label %9, label %10, !dbg !7694

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.45, i32 0, i32 0), i32 noundef 69) #27, !dbg !7696
  br label %17, !dbg !7702

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7703
  %12 = icmp eq i32 %11, 0, !dbg !7703
  br i1 %12, label %13, label %14, !dbg !7704

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7688, metadata !DIExpression()), !dbg !7689
  store i8 1, i8* %3, align 1, !dbg !7707
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7689
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7688, metadata !DIExpression()), !dbg !7689
  br label %17, !dbg !7710

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7689
  ret %struct.__esf* %18, !dbg !7711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7712 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7716, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i32 %1, metadata !7717, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i8* %2, metadata !7718, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i32 0, metadata !7719, metadata !DIExpression()), !dbg !7720
  store i8 0, i8* %2, align 1, !dbg !7721
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7722

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7723
  call void @llvm.dbg.value(metadata i32 %5, metadata !7719, metadata !DIExpression()), !dbg !7720
  br label %12, !dbg !7725

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7726
  call void @llvm.dbg.value(metadata i32 %7, metadata !7719, metadata !DIExpression()), !dbg !7720
  br label %12, !dbg !7727

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7728
  call void @llvm.dbg.value(metadata i32 0, metadata !7719, metadata !DIExpression()), !dbg !7720
  br label %12, !dbg !7729

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7730
  call void @llvm.dbg.value(metadata i32 0, metadata !7719, metadata !DIExpression()), !dbg !7720
  br label %12, !dbg !7731

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7732
  br label %12, !dbg !7733

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !7734
  br label %12, !dbg !7735

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7720
  call void @llvm.dbg.value(metadata i32 %13, metadata !7719, metadata !DIExpression()), !dbg !7720
  ret i32 %13, !dbg !7736
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7737 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7741, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %1, metadata !7742, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i32 0, metadata !7743, metadata !DIExpression()), !dbg !7744
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 69) #27, !dbg !7745
  store i8 0, i8* %1, align 1, !dbg !7750
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7751
  %4 = and i32 %3, 2, !dbg !7753
  %5 = icmp eq i32 %4, 0, !dbg !7754
  br i1 %5, label %7, label %6, !dbg !7755

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 69) #27, !dbg !7756
  br label %36, !dbg !7762

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7763
  %9 = icmp sgt i32 %8, -1, !dbg !7765
  br i1 %9, label %11, label %10, !dbg !7766

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.42, i32 0, i32 0), i32 noundef 69) #27, !dbg !7767
  br label %36, !dbg !7773

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7774
  %13 = and i32 %12, 1073741824, !dbg !7776
  %14 = icmp eq i32 %13, 0, !dbg !7777
  br i1 %14, label %36, label %15, !dbg !7778

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.43, i32 0, i32 0), i32 noundef 69) #27, !dbg !7779
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7785
  br i1 %16, label %17, label %21, !dbg !7787

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7788
  %19 = load i32, i32* %18, align 4, !dbg !7788
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.44, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !7788
  %20 = load i32, i32* %18, align 4, !dbg !7794
  call void @llvm.dbg.value(metadata i32 %20, metadata !7743, metadata !DIExpression()), !dbg !7744
  br label %36, !dbg !7795

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7796
  %23 = and i32 %22, 255, !dbg !7798
  %24 = icmp eq i32 %23, 0, !dbg !7799
  br i1 %24, label %27, label %25, !dbg !7800

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7801
  call void @llvm.dbg.value(metadata i32 %26, metadata !7743, metadata !DIExpression()), !dbg !7744
  br label %36, !dbg !7803

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7804
  %29 = and i32 %28, 65280, !dbg !7806
  %30 = icmp eq i32 %29, 0, !dbg !7807
  br i1 %30, label %32, label %31, !dbg !7808

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7809
  call void @llvm.dbg.value(metadata i32 0, metadata !7743, metadata !DIExpression()), !dbg !7744
  br label %36, !dbg !7811

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7812
  %34 = icmp ult i32 %33, 65536, !dbg !7814
  br i1 %34, label %36, label %35, !dbg !7815

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !7816
  call void @llvm.dbg.value(metadata i32 0, metadata !7743, metadata !DIExpression()), !dbg !7744
  br label %36, !dbg !7818

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7744
  call void @llvm.dbg.value(metadata i32 %37, metadata !7743, metadata !DIExpression()), !dbg !7744
  ret i32 %37, !dbg !7819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7820 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7822, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 %1, metadata !7823, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8* %2, metadata !7824, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 0, metadata !7825, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 -22, metadata !7826, metadata !DIExpression()), !dbg !7835
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.38, i32 0, i32 0), i32 noundef 69) #27, !dbg !7836
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7841
  %5 = and i32 %4, 16, !dbg !7843
  %6 = icmp eq i32 %5, 0, !dbg !7844
  br i1 %6, label %8, label %7, !dbg !7845

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.39, i32 0, i32 0), i32 noundef 69) #27, !dbg !7846
  br label %8, !dbg !7852

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7853
  %10 = and i32 %9, 8, !dbg !7855
  %11 = icmp eq i32 %10, 0, !dbg !7856
  br i1 %11, label %13, label %12, !dbg !7857

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7858
  br label %13, !dbg !7864

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7865
  %15 = and i32 %14, 2, !dbg !7866
  %16 = icmp eq i32 %15, 0, !dbg !7867
  br i1 %16, label %27, label %17, !dbg !7868

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 noundef 69) #27, !dbg !7869
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %18, metadata !7827, metadata !DIExpression()), !dbg !7875
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7876
  %20 = and i32 %19, 128, !dbg !7878
  %21 = icmp eq i32 %20, 0, !dbg !7879
  br i1 %21, label %27, label %22, !dbg !7880

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7826, metadata !DIExpression()), !dbg !7835
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !7881
  %23 = icmp eq i32 %1, 0, !dbg !7887
  br i1 %23, label %27, label %24, !dbg !7889

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7890
  %26 = and i32 %25, -129, !dbg !7890
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7890
  br label %27, !dbg !7892

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7835
  call void @llvm.dbg.value(metadata i32 %28, metadata !7826, metadata !DIExpression()), !dbg !7835
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7893
  %30 = and i32 %29, 1, !dbg !7895
  %31 = icmp eq i32 %30, 0, !dbg !7896
  br i1 %31, label %33, label %32, !dbg !7897

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #27, !dbg !7898
  br label %33, !dbg !7904

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7905
  %35 = and i32 %34, 32, !dbg !7907
  %36 = icmp eq i32 %35, 0, !dbg !7908
  br i1 %36, label %38, label %37, !dbg !7909

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #27, !dbg !7910
  br label %38, !dbg !7916

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7917
  %40 = and i32 %39, 16, !dbg !7918
  %41 = icmp eq i32 %40, 0, !dbg !7918
  br i1 %41, label %42, label %46, !dbg !7919

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7920
  %44 = and i32 %43, 2, !dbg !7921
  %45 = icmp eq i32 %44, 0, !dbg !7921
  br i1 %45, label %55, label %46, !dbg !7922

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7923
  %48 = and i32 %47, 2048, !dbg !7924
  %49 = icmp eq i32 %48, 0, !dbg !7924
  br i1 %49, label %55, label %50, !dbg !7925

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7926
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %52, metadata !7830, metadata !DIExpression()), !dbg !7928
  %53 = icmp eq i32 %52, 0, !dbg !7929
  br i1 %53, label %55, label %54, !dbg !7931

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7932, metadata !DIExpression()) #25, !dbg !7935
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !7938, !srcloc !7939
  call void @llvm.dbg.value(metadata i32 2, metadata !7825, metadata !DIExpression()), !dbg !7835
  br label %55, !dbg !7940

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7835
  call void @llvm.dbg.value(metadata i32 %56, metadata !7825, metadata !DIExpression()), !dbg !7835
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7941
  %58 = and i32 %57, 32, !dbg !7943
  %59 = icmp eq i32 %58, 0, !dbg !7944
  br i1 %59, label %63, label %60, !dbg !7945

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7946
  %62 = and i32 %61, -8193, !dbg !7946
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7946
  br label %63, !dbg !7948

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7949
  %65 = or i32 %64, 255, !dbg !7949
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7949
  store i8 0, i8* %2, align 1, !dbg !7950
  ret i32 %56, !dbg !7951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7952 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7956, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata i32 %0, metadata !7957, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata i8* %1, metadata !7958, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata i32 0, metadata !7959, metadata !DIExpression()), !dbg !7963
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #27, !dbg !7964
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7969
  %4 = and i32 %3, 4096, !dbg !7971
  %5 = icmp eq i32 %4, 0, !dbg !7971
  br i1 %5, label %7, label %6, !dbg !7972

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #27, !dbg !7973
  br label %7, !dbg !7979

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7980
  %9 = and i32 %8, 2048, !dbg !7982
  %10 = icmp eq i32 %9, 0, !dbg !7982
  br i1 %10, label %12, label %11, !dbg !7983

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7984
  br label %12, !dbg !7990

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7991
  %14 = and i32 %13, 512, !dbg !7992
  %15 = icmp eq i32 %14, 0, !dbg !7992
  br i1 %15, label %26, label %16, !dbg !7993

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.37, i32 0, i32 0), i32 noundef 69) #27, !dbg !7994
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7999
  call void @llvm.dbg.value(metadata i32 %17, metadata !7960, metadata !DIExpression()), !dbg !8000
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8001
  %19 = and i32 %18, 32768, !dbg !8003
  %20 = icmp eq i32 %19, 0, !dbg !8004
  br i1 %20, label %26, label %21, !dbg !8005

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8006
  %22 = icmp eq i32 %0, 0, !dbg !8012
  br i1 %22, label %26, label %23, !dbg !8014

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8015
  %25 = and i32 %24, -32769, !dbg !8015
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8015
  br label %26, !dbg !8017

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8018
  %28 = and i32 %27, 1024, !dbg !8020
  %29 = icmp eq i32 %28, 0, !dbg !8020
  br i1 %29, label %31, label %30, !dbg !8021

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #27, !dbg !8022
  br label %31, !dbg !8028

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8029
  %33 = and i32 %32, 256, !dbg !8031
  %34 = icmp eq i32 %33, 0, !dbg !8032
  br i1 %34, label %35, label %39, !dbg !8033

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8034
  %37 = and i32 %36, 8192, !dbg !8036
  %38 = icmp eq i32 %37, 0, !dbg !8036
  br i1 %38, label %41, label %39, !dbg !8037

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8038
  br label %41, !dbg !8039

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8039
  %43 = or i32 %42, 65280, !dbg !8039
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8039
  store i8 0, i8* %1, align 1, !dbg !8040
  ret void, !dbg !8041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8042 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 0, metadata !8049, metadata !DIExpression()), !dbg !8050
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8051
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8056
  %2 = and i32 %1, 33554432, !dbg !8058
  %3 = icmp eq i32 %2, 0, !dbg !8059
  br i1 %3, label %5, label %4, !dbg !8060

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #27, !dbg !8061
  br label %5, !dbg !8067

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8068
  %7 = and i32 %6, 16777216, !dbg !8070
  %8 = icmp eq i32 %7, 0, !dbg !8071
  br i1 %8, label %10, label %9, !dbg !8072

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8073
  br label %10, !dbg !8079

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8080
  %12 = and i32 %11, 524288, !dbg !8082
  %13 = icmp eq i32 %12, 0, !dbg !8083
  br i1 %13, label %15, label %14, !dbg !8084

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8085
  br label %15, !dbg !8091

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8092
  %17 = and i32 %16, 262144, !dbg !8094
  %18 = icmp eq i32 %17, 0, !dbg !8095
  br i1 %18, label %20, label %19, !dbg !8096

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8097
  br label %20, !dbg !8103

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8104
  %22 = and i32 %21, 131072, !dbg !8106
  %23 = icmp eq i32 %22, 0, !dbg !8107
  br i1 %23, label %25, label %24, !dbg !8108

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8109
  br label %25, !dbg !8115

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8116
  %27 = and i32 %26, 65536, !dbg !8118
  %28 = icmp eq i32 %27, 0, !dbg !8119
  br i1 %28, label %30, label %29, !dbg !8120

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #27, !dbg !8121
  br label %30, !dbg !8127

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8128
  %32 = or i32 %31, -65536, !dbg !8128
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8128
  ret void, !dbg !8129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8130 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8134, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %0, metadata !8135, metadata !DIExpression()), !dbg !8136
  store i8 0, i8* %0, align 1, !dbg !8137
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8138
  ret void, !dbg !8143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8144 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8148, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %0, metadata !8149, metadata !DIExpression()), !dbg !8150
  %2 = icmp slt i32 %0, 16, !dbg !8151
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.34, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8151
  %4 = add nsw i32 %0, -16, !dbg !8151
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8151
  ret void, !dbg !8156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8157 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8161, metadata !DIExpression()), !dbg !8164
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8165
  %3 = load i32, i32* %2, align 4, !dbg !8165
  %4 = inttoptr i32 %3 to i16*, !dbg !8166
  call void @llvm.dbg.value(metadata i16* %4, metadata !8162, metadata !DIExpression()), !dbg !8164
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8167
  %6 = or i32 %5, 256, !dbg !8167
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8167
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8168, !srcloc !8171
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8172, !srcloc !8175
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8176
  %8 = load i16, i16* %7, align 2, !dbg !8177
  call void @llvm.dbg.value(metadata i16 %8, metadata !8163, metadata !DIExpression()), !dbg !8164
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8178
  %10 = and i32 %9, -257, !dbg !8178
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8178
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8179, !srcloc !8171
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8181, !srcloc !8175
  %11 = icmp eq i16 %8, -8446, !dbg !8183
  ret i1 %11, !dbg !8185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8186 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8187
  %2 = or i32 %1, 16, !dbg !8187
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8187
  ret void, !dbg !8188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8189 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8192, metadata !DIExpression()), !dbg !8193
  br label %1, !dbg !8194

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8192, metadata !DIExpression()), !dbg !8193
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #26, !dbg !8196
  %3 = add nuw nsw i32 %2, 1, !dbg !8199
  call void @llvm.dbg.value(metadata i32 %3, metadata !8192, metadata !DIExpression()), !dbg !8193
  %4 = icmp eq i32 %3, 97, !dbg !8200
  br i1 %4, label %5, label %1, !dbg !8194, !llvm.loop !8201

5:                                                ; preds = %1
  ret void, !dbg !8203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #16 !dbg !8204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8206, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.value(metadata i32 1, metadata !8207, metadata !DIExpression()), !dbg !8208
  %2 = and i32 %0, 15, !dbg !8209
  %3 = add nsw i32 %2, -4, !dbg !8209
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8209
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8209
  %6 = icmp slt i32 %0, 0, !dbg !8209
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8209
  store volatile i8 16, i8* %7, align 1, !dbg !8210
  ret void, !dbg !8212
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8213 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8319, metadata !DIExpression()), !dbg !8320
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8321
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8323
  br i1 %3, label %4, label %12, !dbg !8324

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8325, !srcloc !8337
  call void @llvm.dbg.value(metadata i32 %5, metadata !8328, metadata !DIExpression()) #25, !dbg !8338
  %6 = icmp eq i32 %5, 0, !dbg !8339
  br i1 %6, label %12, label %7, !dbg !8340

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8341
  %9 = or i32 %8, 268435456, !dbg !8341
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8341
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8343
  %11 = and i32 %10, -32769, !dbg !8343
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8343
  br label %12, !dbg !8344

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8345
  ret void, !dbg !8346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8347 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8348
  ret void, !dbg !8349
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !590, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.value(metadata i8 0, metadata !591, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.value(metadata i32 64, metadata !593, metadata !DIExpression()), !dbg !8350
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8351
  %3 = load i32, i32* %2, align 4, !dbg !8351
  %4 = add i32 %3, -64, !dbg !8353
  call void @llvm.dbg.value(metadata i32 %4, metadata !592, metadata !DIExpression()), !dbg !8350
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8354
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8355
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8356
  call void @llvm.dbg.value(metadata i8 1, metadata !591, metadata !DIExpression()), !dbg !8350
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8357
  ret void, !dbg !8358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8359 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8360
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8361, !srcloc !8364
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8365, !srcloc !8368
  ret void, !dbg !8369
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8370 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !8371, !srcloc !8374
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8375
  ret void, !dbg !8376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8377 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8392, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i8 %1, metadata !8393, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32 %2, metadata !8394, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32 %3, metadata !8395, metadata !DIExpression()), !dbg !8396
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8397
  ret void, !dbg !8399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8400 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8405, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.value(metadata i8 %1, metadata !8406, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.value(metadata i32 undef, metadata !8407, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.value(metadata i32 undef, metadata !8408, metadata !DIExpression()), !dbg !8410
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8411
  call void @llvm.dbg.value(metadata i8 %3, metadata !8409, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8410
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !8412
  call void @llvm.dbg.value(metadata i32 %4, metadata !8409, metadata !DIExpression()), !dbg !8410
  %5 = trunc i32 %4 to i8, !dbg !8413
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8414
  ret void, !dbg !8415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8416 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8420, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i8 %1, metadata !8421, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i8 %2, metadata !8422, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i1 %3, metadata !8423, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8426
  %5 = zext i8 %2 to i32, !dbg !8427
  call void @llvm.dbg.value(metadata i32 %5, metadata !8425, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i32 0, metadata !8424, metadata !DIExpression()), !dbg !8426
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8425, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i32 0, metadata !8424, metadata !DIExpression()), !dbg !8426
  %7 = icmp eq i8 %1, 0, !dbg !8428
  br i1 %7, label %30, label %8, !dbg !8431

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8425, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata i32 %10, metadata !8424, metadata !DIExpression()), !dbg !8426
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8432
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8435
  %13 = load i32, i32* %12, align 4, !dbg !8435
  %14 = icmp eq i32 %13, 0, !dbg !8436
  br i1 %14, label %26, label %15, !dbg !8437

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8438

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8440
  %18 = icmp eq i32 %17, 0, !dbg !8440
  br i1 %18, label %19, label %20, !dbg !8441

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.57, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8442
  br label %30, !dbg !8448

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8449
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8450
  call void @llvm.dbg.value(metadata i32 %22, metadata !8425, metadata !DIExpression()), !dbg !8426
  %23 = icmp eq i32 %22, -22, !dbg !8451
  br i1 %23, label %30, label %24, !dbg !8453

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8454
  call void @llvm.dbg.value(metadata i32 %25, metadata !8425, metadata !DIExpression()), !dbg !8426
  br label %26, !dbg !8455

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8426
  call void @llvm.dbg.value(metadata i32 %27, metadata !8425, metadata !DIExpression()), !dbg !8426
  %28 = add nuw nsw i32 %10, 1, !dbg !8456
  call void @llvm.dbg.value(metadata i32 %28, metadata !8424, metadata !DIExpression()), !dbg !8426
  %29 = icmp eq i32 %28, %6, !dbg !8428
  br i1 %29, label %30, label %8, !dbg !8431, !llvm.loop !8457

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8426
  ret i32 %31, !dbg !8459
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !8460 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8464, metadata !DIExpression()), !dbg !8466
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8467
  %3 = load i32, i32* %2, align 4, !dbg !8467
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8468, !range !4991
  %5 = icmp ult i32 %4, 2, !dbg !8468
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8469
  br i1 %7, label %8, label %15, !dbg !8469

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8470
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8471
  %11 = load i32, i32* %10, align 4, !dbg !8471
  %12 = and i32 %11, %9, !dbg !8472
  %13 = icmp eq i32 %12, 0, !dbg !8473
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8465, metadata !DIExpression()), !dbg !8466
  ret i32 %16, !dbg !8474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8475 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8479, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8480, metadata !DIExpression()), !dbg !8482
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8483
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8483
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8481, metadata !DIExpression()), !dbg !8484
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8485
  %6 = load i32, i32* %5, align 4, !dbg !8485
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8486
  store i32 %6, i32* %7, align 4, !dbg !8487
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8488
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8489
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8490
  %11 = load i32, i32* %10, align 4, !dbg !8490
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !8491
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !8492
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8493
  ret i32 %12, !dbg !8494
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !8495 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8502, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8503, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata i32 undef, metadata !8504, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata i32 %2, metadata !8505, metadata !DIExpression()), !dbg !8506
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8507
  %5 = load i32, i32* %4, align 4, !dbg !8507
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !8508
  %7 = or i32 %6, %5, !dbg !8509
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8510
  store i32 %7, i32* %8, align 4, !dbg !8511
  ret void, !dbg !8512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8513 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8517, metadata !DIExpression()), !dbg !8519
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8518, metadata !DIExpression()), !dbg !8519
  %3 = zext i8 %0 to i32, !dbg !8520
  %4 = icmp ugt i8 %0, 7, !dbg !8522
  br i1 %4, label %5, label %6, !dbg !8523

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !8524
  br label %7, !dbg !8530

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !8531
  br label %7, !dbg !8532

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8519
  ret i32 %8, !dbg !8533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !8534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8538, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8539, metadata !DIExpression()), !dbg !8540
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !8541
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8542
  %4 = load i32, i32* %3, align 4, !dbg !8542
  %5 = and i32 %4, -32, !dbg !8543
  %6 = or i32 %5, %0, !dbg !8544
  %7 = or i32 %6, 16, !dbg !8544
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8545
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8546
  %9 = load i32, i32* %8, align 4, !dbg !8546
  %10 = or i32 %9, 1, !dbg !8547
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !8550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8553, metadata !DIExpression()), !dbg !8554
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !8557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8561, metadata !DIExpression()), !dbg !8562
  %2 = icmp ult i32 %0, 33, !dbg !8563
  br i1 %2, label %11, label %3, !dbg !8565

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8566
  br i1 %4, label %11, label %5, !dbg !8568

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8569
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8570, !range !4991
  %8 = mul nsw i32 %7, -2, !dbg !8571
  %9 = add nsw i32 %8, 62, !dbg !8571
  %10 = and i32 %9, 62, !dbg !8572
  br label %11, !dbg !8573

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8562
  ret i32 %12, !dbg !8574
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8575 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8579, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i8 %1, metadata !8580, metadata !DIExpression()), !dbg !8581
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8582
  ret void, !dbg !8584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8585 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8589, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata i8 %1, metadata !8590, metadata !DIExpression()), !dbg !8596
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8597
  call void @llvm.dbg.value(metadata i8 %3, metadata !8591, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8596
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !8598
  call void @llvm.dbg.value(metadata i32 %4, metadata !8591, metadata !DIExpression()), !dbg !8596
  %5 = icmp ne i32 %4, -22, !dbg !8599
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8600
  call void @llvm.dbg.value(metadata i32 %4, metadata !8592, metadata !DIExpression()), !dbg !8601
  br i1 %7, label %8, label %12, !dbg !8600

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8592, metadata !DIExpression()), !dbg !8601
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !8602
  %10 = add i32 %9, 1, !dbg !8605
  call void @llvm.dbg.value(metadata i32 %10, metadata !8592, metadata !DIExpression()), !dbg !8601
  %11 = icmp eq i32 %10, 8, !dbg !8606
  br i1 %11, label %12, label %8, !dbg !8607, !llvm.loop !8608

12:                                               ; preds = %8, %2
  ret void, !dbg !8610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !8611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8614, metadata !DIExpression()), !dbg !8615
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8616
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8617
  ret void, !dbg !8618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8619 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8624
  %2 = icmp ugt i32 %1, 8, !dbg !8626
  br i1 %2, label %14, label %3, !dbg !8627

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !8628
  call void @llvm.dbg.value(metadata i32 0, metadata !8623, metadata !DIExpression()), !dbg !8629
  %4 = icmp eq i32 %1, 0, !dbg !8630
  br i1 %4, label %12, label %5, !dbg !8633

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8633

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8623, metadata !DIExpression()), !dbg !8629
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8634
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !8636
  %10 = add nuw i32 %8, 1, !dbg !8637
  call void @llvm.dbg.value(metadata i32 %10, metadata !8623, metadata !DIExpression()), !dbg !8629
  %11 = icmp eq i32 %10, %1, !dbg !8630
  br i1 %11, label %12, label %7, !dbg !8633, !llvm.loop !8638

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8640
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8641
  tail call void @arm_core_mpu_enable() #26, !dbg !8642
  br label %14, !dbg !8643

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8629
  ret i32 %15, !dbg !8644
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8645 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8652, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.value(metadata i8* %1, metadata !8653, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.value(metadata i8* %0, metadata !8654, metadata !DIExpression()), !dbg !8655
  %3 = load i8, i8* %1, align 1, !dbg !8656
  %4 = icmp eq i8 %3, 0, !dbg !8657
  br i1 %4, label %13, label %5, !dbg !8658

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8652, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.value(metadata i8* %8, metadata !8653, metadata !DIExpression()), !dbg !8655
  store i8 %6, i8* %7, align 1, !dbg !8659
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8661
  call void @llvm.dbg.value(metadata i8* %9, metadata !8652, metadata !DIExpression()), !dbg !8655
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8662
  call void @llvm.dbg.value(metadata i8* %10, metadata !8653, metadata !DIExpression()), !dbg !8655
  %11 = load i8, i8* %10, align 1, !dbg !8656
  %12 = icmp eq i8 %11, 0, !dbg !8657
  br i1 %12, label %13, label %5, !dbg !8658, !llvm.loop !8663

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8665
  ret i8* %0, !dbg !8666
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8667 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8671, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i8* %1, metadata !8672, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i32 %2, metadata !8673, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i8* %0, metadata !8674, metadata !DIExpression()), !dbg !8675
  %4 = icmp eq i32 %2, 0, !dbg !8676
  br i1 %4, label %22, label %5, !dbg !8677

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8671, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i32 %7, metadata !8673, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i8* %8, metadata !8672, metadata !DIExpression()), !dbg !8675
  %9 = load i8, i8* %8, align 1, !dbg !8678
  %10 = icmp eq i8 %9, 0, !dbg !8679
  br i1 %10, label %16, label %11, !dbg !8680

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8681
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8683
  call void @llvm.dbg.value(metadata i8* %12, metadata !8672, metadata !DIExpression()), !dbg !8675
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8684
  call void @llvm.dbg.value(metadata i8* %13, metadata !8671, metadata !DIExpression()), !dbg !8675
  %14 = add i32 %7, -1, !dbg !8685
  call void @llvm.dbg.value(metadata i32 %14, metadata !8673, metadata !DIExpression()), !dbg !8675
  %15 = icmp eq i32 %14, 0, !dbg !8676
  br i1 %15, label %22, label %5, !dbg !8677, !llvm.loop !8686

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8671, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i32 %18, metadata !8673, metadata !DIExpression()), !dbg !8675
  store i8 0, i8* %17, align 1, !dbg !8688
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8690
  call void @llvm.dbg.value(metadata i8* %19, metadata !8671, metadata !DIExpression()), !dbg !8675
  %20 = add i32 %18, -1, !dbg !8691
  call void @llvm.dbg.value(metadata i32 %20, metadata !8673, metadata !DIExpression()), !dbg !8675
  %21 = icmp eq i32 %20, 0, !dbg !8692
  br i1 %21, label %22, label %16, !dbg !8693, !llvm.loop !8694

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8696
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8697 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8701, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 %1, metadata !8702, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 %1, metadata !8703, metadata !DIExpression()), !dbg !8704
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8705

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8701, metadata !DIExpression()), !dbg !8704
  %6 = load i8, i8* %5, align 1, !dbg !8706
  %7 = icmp eq i8 %6, %3, !dbg !8707
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8708
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8709
  call void @llvm.dbg.value(metadata i8* %10, metadata !8701, metadata !DIExpression()), !dbg !8704
  br i1 %9, label %11, label %4, !dbg !8708, !llvm.loop !8711

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8713
  ret i8* %12, !dbg !8714
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8715 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8717, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 %1, metadata !8718, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i8* null, metadata !8719, metadata !DIExpression()), !dbg !8720
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8721

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8720
  call void @llvm.dbg.value(metadata i8* %6, metadata !8719, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i8* %5, metadata !8717, metadata !DIExpression()), !dbg !8720
  %7 = load i8, i8* %5, align 1, !dbg !8722
  %8 = icmp eq i8 %7, %3, !dbg !8725
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8726
  call void @llvm.dbg.value(metadata i8* %9, metadata !8719, metadata !DIExpression()), !dbg !8720
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8727
  call void @llvm.dbg.value(metadata i8* %10, metadata !8717, metadata !DIExpression()), !dbg !8720
  %11 = icmp eq i8 %7, 0, !dbg !8728
  br i1 %11, label %12, label %4, !dbg !8728, !llvm.loop !8729

12:                                               ; preds = %4
  ret i8* %9, !dbg !8731
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !8732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8736, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i32 0, metadata !8737, metadata !DIExpression()), !dbg !8738
  %2 = load i8, i8* %0, align 1, !dbg !8739
  %3 = icmp eq i8 %2, 0, !dbg !8740
  br i1 %3, label %11, label %4, !dbg !8741

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8737, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata i8* %6, metadata !8736, metadata !DIExpression()), !dbg !8738
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8742
  call void @llvm.dbg.value(metadata i8* %7, metadata !8736, metadata !DIExpression()), !dbg !8738
  %8 = add i32 %5, 1, !dbg !8744
  call void @llvm.dbg.value(metadata i32 %8, metadata !8737, metadata !DIExpression()), !dbg !8738
  %9 = load i8, i8* %7, align 1, !dbg !8739
  %10 = icmp eq i8 %9, 0, !dbg !8740
  br i1 %10, label %11, label %4, !dbg !8741, !llvm.loop !8745

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8738
  ret i32 %12, !dbg !8747
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8748 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8752, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32 %1, metadata !8753, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32 0, metadata !8754, metadata !DIExpression()), !dbg !8755
  %3 = load i8, i8* %0, align 1, !dbg !8756
  %4 = icmp ne i8 %3, 0, !dbg !8757
  %5 = icmp ne i32 %1, 0, !dbg !8758
  %6 = and i1 %4, %5, !dbg !8758
  br i1 %6, label %7, label %16, !dbg !8759

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8754, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i8* %9, metadata !8752, metadata !DIExpression()), !dbg !8755
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8760
  call void @llvm.dbg.value(metadata i8* %10, metadata !8752, metadata !DIExpression()), !dbg !8755
  %11 = add nuw i32 %8, 1, !dbg !8762
  call void @llvm.dbg.value(metadata i32 %11, metadata !8754, metadata !DIExpression()), !dbg !8755
  %12 = load i8, i8* %10, align 1, !dbg !8756
  %13 = icmp ne i8 %12, 0, !dbg !8757
  %14 = icmp ult i32 %11, %1, !dbg !8758
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8758
  br i1 %15, label %7, label %16, !dbg !8759, !llvm.loop !8763

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8755
  ret i32 %17, !dbg !8765
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !8766 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8770, metadata !DIExpression()), !dbg !8772
  call void @llvm.dbg.value(metadata i8* %1, metadata !8771, metadata !DIExpression()), !dbg !8772
  %3 = load i8, i8* %0, align 1, !dbg !8773
  %4 = load i8, i8* %1, align 1, !dbg !8774
  %5 = icmp ne i8 %3, %4, !dbg !8775
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8776
  br i1 %7, label %18, label %8, !dbg !8776

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8771, metadata !DIExpression()), !dbg !8772
  call void @llvm.dbg.value(metadata i8* %10, metadata !8770, metadata !DIExpression()), !dbg !8772
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8777
  call void @llvm.dbg.value(metadata i8* %11, metadata !8770, metadata !DIExpression()), !dbg !8772
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8779
  call void @llvm.dbg.value(metadata i8* %12, metadata !8771, metadata !DIExpression()), !dbg !8772
  %13 = load i8, i8* %11, align 1, !dbg !8773
  %14 = load i8, i8* %12, align 1, !dbg !8774
  %15 = icmp ne i8 %13, %14, !dbg !8775
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8776
  br i1 %17, label %18, label %8, !dbg !8776, !llvm.loop !8780

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8773
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8774
  %21 = zext i8 %19 to i32, !dbg !8783
  %22 = zext i8 %20 to i32, !dbg !8784
  %23 = sub nsw i32 %21, %22, !dbg !8785
  ret i32 %23, !dbg !8786
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8787 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8791, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %1, metadata !8792, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32 %2, metadata !8793, metadata !DIExpression()), !dbg !8794
  %4 = icmp eq i32 %2, 0, !dbg !8795
  br i1 %4, label %23, label %5, !dbg !8795

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8793, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %7, metadata !8792, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i8* %8, metadata !8791, metadata !DIExpression()), !dbg !8794
  %9 = load i8, i8* %8, align 1, !dbg !8796
  %10 = load i8, i8* %7, align 1, !dbg !8797
  %11 = icmp ne i8 %9, %10, !dbg !8798
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8799
  br i1 %13, label %19, label %14, !dbg !8799

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8800
  call void @llvm.dbg.value(metadata i8* %15, metadata !8791, metadata !DIExpression()), !dbg !8794
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8802
  call void @llvm.dbg.value(metadata i8* %16, metadata !8792, metadata !DIExpression()), !dbg !8794
  %17 = add i32 %6, -1, !dbg !8803
  call void @llvm.dbg.value(metadata i32 %17, metadata !8793, metadata !DIExpression()), !dbg !8794
  %18 = icmp eq i32 %17, 0, !dbg !8795
  br i1 %18, label %23, label %5, !dbg !8795, !llvm.loop !8804

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8807
  %21 = zext i8 %10 to i32, !dbg !8808
  %22 = sub nsw i32 %20, %21, !dbg !8809
  br label %23, !dbg !8810

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8810
  ret i32 %24, !dbg !8811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8816, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i8* %1, metadata !8817, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i8** %2, metadata !8818, metadata !DIExpression()), !dbg !8821
  %4 = icmp eq i8* %0, null, !dbg !8822
  br i1 %4, label %5, label %7, !dbg !8822

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8823
  br label %7, !dbg !8822

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8822
  call void @llvm.dbg.value(metadata i8* %8, metadata !8819, metadata !DIExpression()), !dbg !8821
  %9 = load i8, i8* %8, align 1, !dbg !8824
  %10 = icmp eq i8 %9, 0, !dbg !8824
  br i1 %10, label %33, label %11, !dbg !8825

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8819, metadata !DIExpression()), !dbg !8821
  %14 = zext i8 %12 to i32, !dbg !8824
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8826
  %16 = icmp eq i8* %15, null, !dbg !8825
  br i1 %16, label %21, label %17, !dbg !8827

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8828
  call void @llvm.dbg.value(metadata i8* %18, metadata !8819, metadata !DIExpression()), !dbg !8821
  %19 = load i8, i8* %18, align 1, !dbg !8824
  %20 = icmp eq i8 %19, 0, !dbg !8824
  br i1 %20, label %33, label %11, !dbg !8825, !llvm.loop !8830

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8820, metadata !DIExpression()), !dbg !8821
  %24 = zext i8 %22 to i32, !dbg !8832
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8833
  %26 = icmp eq i8* %25, null, !dbg !8834
  br i1 %26, label %27, label %31, !dbg !8835

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8836
  call void @llvm.dbg.value(metadata i8* %28, metadata !8820, metadata !DIExpression()), !dbg !8821
  %29 = load i8, i8* %28, align 1, !dbg !8832
  %30 = icmp eq i8 %29, 0, !dbg !8832
  br i1 %30, label %33, label %21, !dbg !8838, !llvm.loop !8839

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8841
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8844
  br label %33, !dbg !8845

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8821
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8821
  store i8* %34, i8** %2, align 4, !dbg !8821
  ret i8* %35, !dbg !8846
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8849, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %1, metadata !8850, metadata !DIExpression()), !dbg !8851
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8852
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8853
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8854
  ret i8* %0, !dbg !8855
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8856 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8858, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i8* %1, metadata !8859, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 %2, metadata !8860, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i8* %0, metadata !8861, metadata !DIExpression()), !dbg !8863
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8864
  call void @llvm.dbg.value(metadata i32 %4, metadata !8862, metadata !DIExpression()), !dbg !8863
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8865
  call void @llvm.dbg.value(metadata i8* %5, metadata !8858, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i8* %1, metadata !8859, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 %2, metadata !8860, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 %2, metadata !8860, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8863
  %6 = icmp eq i32 %2, 0, !dbg !8866
  br i1 %6, label %18, label %7, !dbg !8867

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8868
  call void @llvm.dbg.value(metadata i8* %9, metadata !8858, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i8* %10, metadata !8859, metadata !DIExpression()), !dbg !8863
  %12 = load i8, i8* %10, align 1, !dbg !8869
  %13 = icmp eq i8 %12, 0, !dbg !8870
  br i1 %13, label %18, label %14, !dbg !8871

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8872
  call void @llvm.dbg.value(metadata i8* %15, metadata !8859, metadata !DIExpression()), !dbg !8863
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8874
  call void @llvm.dbg.value(metadata i8* %16, metadata !8858, metadata !DIExpression()), !dbg !8863
  store i8 %12, i8* %9, align 1, !dbg !8875
  call void @llvm.dbg.value(metadata i32 %11, metadata !8860, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 %11, metadata !8860, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8863
  %17 = icmp eq i32 %11, 0, !dbg !8866
  br i1 %17, label %18, label %7, !dbg !8867, !llvm.loop !8876

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8863
  store i8 0, i8* %19, align 1, !dbg !8878
  ret i8* %0, !dbg !8879
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8880 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8884, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i8* %1, metadata !8885, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i32 %2, metadata !8886, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i8* %0, metadata !8887, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i8* %1, metadata !8888, metadata !DIExpression()), !dbg !8889
  %4 = icmp eq i32 %2, 0, !dbg !8890
  br i1 %4, label %31, label %5, !dbg !8892

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8888, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i8* %0, metadata !8887, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i32 %2, metadata !8886, metadata !DIExpression()), !dbg !8889
  %6 = add i32 %2, -1, !dbg !8893
  call void @llvm.dbg.value(metadata i32 %6, metadata !8886, metadata !DIExpression()), !dbg !8889
  %7 = icmp eq i32 %6, 0, !dbg !8894
  br i1 %7, label %23, label %8, !dbg !8895

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8896
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8896
  br label %11, !dbg !8896

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8888, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i8* %14, metadata !8887, metadata !DIExpression()), !dbg !8889
  %15 = load i8, i8* %14, align 1, !dbg !8897
  %16 = load i8, i8* %13, align 1, !dbg !8898
  %17 = icmp eq i8 %15, %16, !dbg !8899
  br i1 %17, label %18, label %23, !dbg !8896

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8900
  call void @llvm.dbg.value(metadata i8* %19, metadata !8887, metadata !DIExpression()), !dbg !8889
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8902
  call void @llvm.dbg.value(metadata i8* %20, metadata !8888, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i32 %12, metadata !8886, metadata !DIExpression()), !dbg !8889
  %21 = add i32 %12, -1, !dbg !8893
  call void @llvm.dbg.value(metadata i32 %21, metadata !8886, metadata !DIExpression()), !dbg !8889
  %22 = icmp eq i32 %21, 0, !dbg !8894
  br i1 %22, label %23, label %11, !dbg !8895, !llvm.loop !8903

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8889
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8889
  %26 = load i8, i8* %24, align 1, !dbg !8905
  %27 = zext i8 %26 to i32, !dbg !8905
  %28 = load i8, i8* %25, align 1, !dbg !8906
  %29 = zext i8 %28 to i32, !dbg !8906
  %30 = sub nsw i32 %27, %29, !dbg !8907
  br label %31, !dbg !8908

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8889
  ret i32 %32, !dbg !8909
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8910 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8914, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i8* %1, metadata !8915, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i32 %2, metadata !8916, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i8* %0, metadata !8917, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i8* %1, metadata !8918, metadata !DIExpression()), !dbg !8919
  %4 = ptrtoint i8* %0 to i32, !dbg !8920
  %5 = ptrtoint i8* %1 to i32, !dbg !8920
  %6 = sub i32 %4, %5, !dbg !8920
  %7 = icmp ult i32 %6, %2, !dbg !8922
  br i1 %7, label %10, label %8, !dbg !8923

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8918, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i8* %0, metadata !8917, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i32 %2, metadata !8916, metadata !DIExpression()), !dbg !8919
  %9 = icmp eq i32 %2, 0, !dbg !8924
  br i1 %9, label %26, label %17, !dbg !8926

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8916, metadata !DIExpression()), !dbg !8919
  %12 = add i32 %11, -1, !dbg !8927
  call void @llvm.dbg.value(metadata i32 %12, metadata !8916, metadata !DIExpression()), !dbg !8919
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8930
  %14 = load i8, i8* %13, align 1, !dbg !8930
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8931
  store i8 %14, i8* %15, align 1, !dbg !8932
  %16 = icmp eq i32 %12, 0, !dbg !8933
  br i1 %16, label %26, label %10, !dbg !8934, !llvm.loop !8935

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8918, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i8* %19, metadata !8917, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i32 %20, metadata !8916, metadata !DIExpression()), !dbg !8919
  %21 = load i8, i8* %18, align 1, !dbg !8937
  store i8 %21, i8* %19, align 1, !dbg !8939
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8940
  call void @llvm.dbg.value(metadata i8* %22, metadata !8917, metadata !DIExpression()), !dbg !8919
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8941
  call void @llvm.dbg.value(metadata i8* %23, metadata !8918, metadata !DIExpression()), !dbg !8919
  %24 = add i32 %20, -1, !dbg !8942
  call void @llvm.dbg.value(metadata i32 %24, metadata !8916, metadata !DIExpression()), !dbg !8919
  %25 = icmp eq i32 %24, 0, !dbg !8924
  br i1 %25, label %26, label %17, !dbg !8926, !llvm.loop !8943

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8945
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8946 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8952, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i8* %1, metadata !8953, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i32 %2, metadata !8954, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i8* %0, metadata !8955, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i8* %1, metadata !8956, metadata !DIExpression()), !dbg !8957
  %4 = icmp eq i32 %2, 0, !dbg !8958
  br i1 %4, label %14, label %5, !dbg !8959

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8956, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i8* %7, metadata !8955, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i32 %8, metadata !8954, metadata !DIExpression()), !dbg !8957
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8960
  call void @llvm.dbg.value(metadata i8* %9, metadata !8956, metadata !DIExpression()), !dbg !8957
  %10 = load i8, i8* %6, align 1, !dbg !8962
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8963
  call void @llvm.dbg.value(metadata i8* %11, metadata !8955, metadata !DIExpression()), !dbg !8957
  store i8 %10, i8* %7, align 1, !dbg !8964
  %12 = add i32 %8, -1, !dbg !8965
  call void @llvm.dbg.value(metadata i32 %12, metadata !8954, metadata !DIExpression()), !dbg !8957
  %13 = icmp eq i32 %12, 0, !dbg !8958
  br i1 %13, label %14, label %5, !dbg !8959, !llvm.loop !8966

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8973, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i32 %1, metadata !8974, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i32 %2, metadata !8975, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i8* %0, metadata !8976, metadata !DIExpression()), !dbg !8978
  %4 = trunc i32 %1 to i8, !dbg !8979
  call void @llvm.dbg.value(metadata i8 %4, metadata !8977, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i32 %2, metadata !8975, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i8* %0, metadata !8976, metadata !DIExpression()), !dbg !8978
  %5 = icmp eq i32 %2, 0, !dbg !8980
  br i1 %5, label %12, label %6, !dbg !8981

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8975, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i8* %8, metadata !8976, metadata !DIExpression()), !dbg !8978
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8982
  call void @llvm.dbg.value(metadata i8* %9, metadata !8976, metadata !DIExpression()), !dbg !8978
  store i8 %4, i8* %8, align 1, !dbg !8984
  %10 = add i32 %7, -1, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %10, metadata !8975, metadata !DIExpression()), !dbg !8978
  %11 = icmp eq i32 %10, 0, !dbg !8980
  br i1 %11, label %12, label %6, !dbg !8981, !llvm.loop !8986

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8988
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8989 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8993, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 %1, metadata !8994, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 %2, metadata !8995, metadata !DIExpression()), !dbg !8999
  %4 = icmp eq i32 %2, 0, !dbg !9000
  br i1 %4, label %17, label %5, !dbg !9001

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9002

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9003
  call void @llvm.dbg.value(metadata i8* %9, metadata !8996, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i32 %8, metadata !8995, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i8* %9, metadata !8996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9003
  %10 = load i8, i8* %9, align 1, !dbg !9004
  %11 = icmp eq i8 %10, %6, !dbg !9007
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9008
  call void @llvm.dbg.value(metadata i8* %12, metadata !8996, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i32 %13, metadata !8995, metadata !DIExpression()), !dbg !8999
  br i1 %15, label %16, label %7, !dbg !9008, !llvm.loop !9009

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9011

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8999
  ret i8* %19, !dbg !9012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !9013 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9015, metadata !DIExpression()), !dbg !9016
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9017
  ret void, !dbg !9018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9021, metadata !DIExpression()), !dbg !9022
  ret i32 -1, !dbg !9023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9028, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i32* %1, metadata !9029, metadata !DIExpression()), !dbg !9030
  %3 = ptrtoint i32* %1 to i32, !dbg !9031
  %4 = and i32 %3, -2, !dbg !9031
  %5 = icmp eq i32 %4, 2, !dbg !9031
  br i1 %5, label %6, label %9, !dbg !9031

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9032
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9032
  br label %9, !dbg !9033

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9033
  ret i32 %10, !dbg !9034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9037, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i32* %1, metadata !9038, metadata !DIExpression()), !dbg !9039
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9040
  ret i32 %3, !dbg !9041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9045, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32* %1, metadata !9046, metadata !DIExpression()), !dbg !9047
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9048, !srcloc !9050
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9051
  ret i32 %3, !dbg !9052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9053 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9058, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata i32* %1, metadata !9059, metadata !DIExpression()), !dbg !9062
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9063
  call void @llvm.dbg.value(metadata i32 %3, metadata !9060, metadata !DIExpression()), !dbg !9062
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !9064
  call void @llvm.dbg.value(metadata i32 %4, metadata !9061, metadata !DIExpression()), !dbg !9062
  %5 = icmp ne i32 %3, %4, !dbg !9065
  %6 = sext i1 %5 to i32, !dbg !9066
  ret i32 %6, !dbg !9067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9068 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9072, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %1, metadata !9073, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %2, metadata !9074, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32* %3, metadata !9075, metadata !DIExpression()), !dbg !9076
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9077
  ret i32 %5, !dbg !9078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9081, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.value(metadata i32 %1, metadata !9082, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.value(metadata i32 %2, metadata !9083, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.value(metadata i32* %3, metadata !9084, metadata !DIExpression()), !dbg !9085
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9086, !srcloc !9088
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9089
  ret i32 %5, !dbg !9090
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9091 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9093, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 %1, metadata !9094, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 %2, metadata !9095, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32* %3, metadata !9096, metadata !DIExpression()), !dbg !9101
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9102
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9104
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9104
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9104
  br i1 %11, label %33, label %12, !dbg !9104

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9101
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9101
  call void @llvm.dbg.value(metadata i8* %14, metadata !9099, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 %13, metadata !9097, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 %1, metadata !9098, metadata !DIExpression()), !dbg !9101
  br label %15, !dbg !9105

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9107
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9101
  call void @llvm.dbg.value(metadata i8* %17, metadata !9099, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 %16, metadata !9098, metadata !DIExpression()), !dbg !9101
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9108
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9111
  call void @llvm.dbg.value(metadata i8* %19, metadata !9099, metadata !DIExpression()), !dbg !9101
  %20 = load i8, i8* %17, align 1, !dbg !9112
  %21 = zext i8 %20 to i32, !dbg !9113
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9108
  %23 = icmp eq i32 %22, -1, !dbg !9114
  br i1 %23, label %30, label %24, !dbg !9115

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9116
  call void @llvm.dbg.value(metadata i32 %25, metadata !9098, metadata !DIExpression()), !dbg !9101
  %26 = icmp eq i32 %25, 0, !dbg !9117
  br i1 %26, label %27, label %15, !dbg !9118, !llvm.loop !9119

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9121
  call void @llvm.dbg.value(metadata i32 %28, metadata !9097, metadata !DIExpression()), !dbg !9101
  %29 = icmp eq i32 %28, 0, !dbg !9122
  br i1 %29, label %30, label %12, !dbg !9123, !llvm.loop !9124

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9101
  call void @llvm.dbg.value(metadata i32 %31, metadata !9097, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.label(metadata !9100), !dbg !9127
  %32 = sub i32 %2, %31, !dbg !9128
  br label %33, !dbg !9129

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9101
  ret i32 %34, !dbg !9130
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9135, metadata !DIExpression()), !dbg !9136
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9137
  %3 = icmp eq i32 %2, -1, !dbg !9139
  br i1 %3, label %8, label %4, !dbg !9140

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9141
  %6 = icmp eq i32 %5, -1, !dbg !9142
  %7 = sext i1 %6 to i32, !dbg !9141
  br label %8, !dbg !9143

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9136
  ret i32 %9, !dbg !9144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9145 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9153, metadata !DIExpression()), !dbg !9155
  %3 = tail call i64 @sys_clock_tick_get() #27, !dbg !9156
  call void @llvm.dbg.value(metadata i64 %3, metadata !9154, metadata !DIExpression()), !dbg !9155
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9157
  %5 = sub i64 %1, %3, !dbg !9157
  store i64 %5, i64* %4, align 8, !dbg !9157
  ret void, !dbg !9158
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9159 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9309, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9307, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8* %1, metadata !9308, metadata !DIExpression()), !dbg !9312
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #27, !dbg !9313
  call void @llvm.dbg.value(metadata i64 %4, metadata !9311, metadata !DIExpression()), !dbg !9312
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9314
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9314
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9316
  br i1 %7, label %13, label %8, !dbg !9317

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9318
  %10 = load i16, i16* %9, align 4, !dbg !9318
  %11 = zext i16 %10 to i32, !dbg !9319
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #27, !dbg !9320
  br i1 %12, label %13, label %28, !dbg !9321

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9322
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9322
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #26, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %16, metadata !9310, metadata !DIExpression()), !dbg !9312
  %17 = icmp eq i32 %16, 0, !dbg !9324
  br i1 %17, label %18, label %28, !dbg !9326

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9327
  %20 = load i8*, i8** %19, align 4, !dbg !9327
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9328
  %22 = load i16, i16* %21, align 4, !dbg !9328
  %23 = zext i16 %22 to i32, !dbg !9329
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #27, !dbg !9330
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #26, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %25, metadata !9310, metadata !DIExpression()), !dbg !9312
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9332
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #26, !dbg !9333
  br label %28, !dbg !9334

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9312
  ret i32 %29, !dbg !9335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9336 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9341, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9340, metadata !DIExpression()), !dbg !9342
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9343, !srcloc !9345
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #27, !dbg !9346
  ret i32 %3, !dbg !9347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9348 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9352, metadata !DIExpression()), !dbg !9360
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9353, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 0, metadata !9354, metadata !DIExpression()), !dbg !9360
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9361
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9361
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9356, metadata !DIExpression()), !dbg !9362
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9363
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9365
  br i1 %8, label %31, label %16, !dbg !9366

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9367
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9368
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9352, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9358, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 0, metadata !9354, metadata !DIExpression()), !dbg !9360
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9371
  br i1 %12, label %31, label %13, !dbg !9372

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9372

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9356, metadata !DIExpression()), !dbg !9362
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 0, !dbg !9373
  %20 = load i8, i8* %19, align 4, !dbg !9373, !range !7658
  %21 = icmp eq i8 %20, 0, !dbg !9373
  br i1 %21, label %27, label %22, !dbg !9376

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 2, !dbg !9377
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9377
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9378
  br i1 %25, label %27, label %26, !dbg !9379

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9352, metadata !DIExpression()), !dbg !9360
  tail call void %24(%struct.zbus_channel* noundef %0) #27, !dbg !9380
  br label %27, !dbg !9382

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9383
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9356, metadata !DIExpression()), !dbg !9362
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9363
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9365
  br i1 %30, label %9, label %16, !dbg !9366, !llvm.loop !9384

31:                                               ; preds = %51, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %52, %51 ], !dbg !9360
  ret i32 %32, !dbg !9386

33:                                               ; preds = %13, %51
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %54, %51 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %53, %51 ]
  %36 = phi i32 [ 0, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9358, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 %36, metadata !9354, metadata !DIExpression()), !dbg !9360
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 0, !dbg !9387
  %38 = load i8, i8* %37, align 4, !dbg !9387, !range !7658
  %39 = icmp eq i8 %38, 0, !dbg !9387
  br i1 %39, label %51, label %40, !dbg !9390

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9391
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9391
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9392
  br i1 %43, label %51, label %44, !dbg !9393

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #26, !dbg !9394
  %45 = load i64, i64* %15, align 8, !dbg !9396
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9396
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9352, metadata !DIExpression(DW_OP_deref)), !dbg !9360
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #26, !dbg !9396
  call void @llvm.dbg.value(metadata i32 %47, metadata !9355, metadata !DIExpression()), !dbg !9360
  %48 = icmp eq i32 %47, 0, !dbg !9397
  br i1 %48, label %51, label %49, !dbg !9399

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9400
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.74, i32 0, i32 0), %struct.zbus_observer* noundef %50, i32 noundef %47) #27, !dbg !9400
  call void @llvm.dbg.value(metadata i32 %47, metadata !9354, metadata !DIExpression()), !dbg !9360
  br label %51, !dbg !9406

51:                                               ; preds = %33, %40, %49, %44
  %52 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9360
  call void @llvm.dbg.value(metadata i32 %52, metadata !9354, metadata !DIExpression()), !dbg !9360
  %53 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9407
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %53, metadata !9358, metadata !DIExpression()), !dbg !9370
  %54 = load %struct.zbus_observer*, %struct.zbus_observer** %53, align 4, !dbg !9368
  %55 = icmp eq %struct.zbus_observer* %54, null, !dbg !9371
  br i1 %55, label %31, label %33, !dbg !9372, !llvm.loop !9408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9410 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9414, metadata !DIExpression()), !dbg !9415
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9416, !srcloc !9418
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #27, !dbg !9419
  ret i32 %2, !dbg !9420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9421 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9427, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9425, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.value(metadata i8* %1, metadata !9426, metadata !DIExpression()), !dbg !9428
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9429, !srcloc !9431
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9432
  ret i32 %4, !dbg !9433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9434 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9440, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9438, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i8* %1, metadata !9439, metadata !DIExpression()), !dbg !9442
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9443
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9443
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #26, !dbg !9444
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()), !dbg !9442
  %7 = icmp eq i32 %6, 0, !dbg !9445
  br i1 %7, label %8, label %17, !dbg !9447

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9448
  %10 = load i8*, i8** %9, align 4, !dbg !9448
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9449
  %12 = load i16, i16* %11, align 4, !dbg !9449
  %13 = zext i16 %12 to i32, !dbg !9450
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #27, !dbg !9451
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9452
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #26, !dbg !9453
  br label %17, !dbg !9454

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9442
  ret i32 %18, !dbg !9455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9456 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9461, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9460, metadata !DIExpression()), !dbg !9464
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #27, !dbg !9465
  call void @llvm.dbg.value(metadata i64 %3, metadata !9463, metadata !DIExpression()), !dbg !9464
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9466
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9466
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #26, !dbg !9467
  call void @llvm.dbg.value(metadata i32 %6, metadata !9462, metadata !DIExpression()), !dbg !9464
  %7 = icmp eq i32 %6, 0, !dbg !9468
  br i1 %7, label %8, label %12, !dbg !9470

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #26, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %9, metadata !9462, metadata !DIExpression()), !dbg !9464
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9472
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #26, !dbg !9473
  br label %12, !dbg !9474

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9464
  ret i32 %13, !dbg !9475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9476 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9479, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9478, metadata !DIExpression()), !dbg !9481
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9482
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9482
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #26, !dbg !9483
  call void @llvm.dbg.value(metadata i32 %5, metadata !9480, metadata !DIExpression()), !dbg !9481
  ret i32 %5, !dbg !9484
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9485 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9489, metadata !DIExpression()), !dbg !9491
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9492
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9492
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #26, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %4, metadata !9490, metadata !DIExpression()), !dbg !9491
  ret i32 %4, !dbg !9494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9495 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9502, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9500, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9501, metadata !DIExpression()), !dbg !9503
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 1, !dbg !9504
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9504
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9506
  br i1 %6, label %10, label %7, !dbg !9507

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9508
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #26, !dbg !9509
  br label %10, !dbg !9510

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9503
  ret i32 %11, !dbg !9511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9512 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9518, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9516, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.value(metadata i8* %1, metadata !9517, metadata !DIExpression()), !dbg !9519
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9520, !srcloc !9522
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9523
  ret i32 %4, !dbg !9524
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9525 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9527, metadata !DIExpression()), !dbg !9528
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !9529
  ret void, !dbg !9530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9535, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.value(metadata i32 %1, metadata !9536, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9537, metadata !DIExpression()), !dbg !9541
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9542
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9542
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9542
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9538, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.value(metadata i32 %0, metadata !9540, metadata !DIExpression()), !dbg !9541
  %7 = icmp slt i32 %0, %1, !dbg !9543
  br i1 %7, label %8, label %22, !dbg !9546

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9540, metadata !DIExpression()), !dbg !9541
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !9547
  %11 = icmp eq i32 %10, 0, !dbg !9547
  br i1 %11, label %19, label %12, !dbg !9550

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !9551
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9553
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9553
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9555
  br i1 %15, label %19, label %16, !dbg !9556

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9557
  %18 = load i8*, i8** %17, align 4, !dbg !9557
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9558
  br label %19, !dbg !9559

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %20, metadata !9540, metadata !DIExpression()), !dbg !9541
  %21 = icmp eq i32 %20, %1, !dbg !9543
  br i1 %21, label %22, label %8, !dbg !9546, !llvm.loop !9561

22:                                               ; preds = %19, %3
  ret void, !dbg !9563
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !9564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9566, metadata !DIExpression()), !dbg !9567
  %2 = shl nuw i32 1, %0, !dbg !9568
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !9571
  ret i32 %3, !dbg !9572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !9573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9577, metadata !DIExpression()), !dbg !9578
  %2 = shl nuw i32 1, %0, !dbg !9579
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !9582
  ret void, !dbg !9583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9587, metadata !DIExpression()), !dbg !9588
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9589
  ret void, !dbg !9590
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9593, metadata !DIExpression()), !dbg !9594
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9595
  %3 = and i32 %2, %0, !dbg !9595
  %4 = icmp eq i32 %3, %0, !dbg !9596
  %5 = zext i1 %4 to i32, !dbg !9596
  ret i32 %5, !dbg !9597
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9598 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9600, metadata !DIExpression()), !dbg !9601
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !9602
  ret void, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9604 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9606, metadata !DIExpression()), !dbg !9607
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !9608
  ret void, !dbg !9609
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9610 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9612, metadata !DIExpression()), !dbg !9613
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !9614
  ret void, !dbg !9615
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9618, metadata !DIExpression()), !dbg !9619
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !9620
  ret void, !dbg !9621
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9622 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9624, metadata !DIExpression()), !dbg !9625
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !9626
  ret void, !dbg !9627
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9630, metadata !DIExpression()), !dbg !9631
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !9632
  ret void, !dbg !9633
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9634 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9636, metadata !DIExpression()), !dbg !9637
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !9638
  ret void, !dbg !9639
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9642, metadata !DIExpression()), !dbg !9643
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !9644
  ret void, !dbg !9645
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9646 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9648, metadata !DIExpression()), !dbg !9649
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !9650
  ret void, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9652 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9654, metadata !DIExpression()), !dbg !9655
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !9656
  ret void, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9660, metadata !DIExpression()), !dbg !9661
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !9662
  ret i32 0, !dbg !9663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !858 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !862, metadata !DIExpression()), !dbg !9664
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9665
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9667
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9669
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9671
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9673
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9675
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9677
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9679
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9681
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9683
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9685
  ret void, !dbg !9687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9690, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 0, metadata !9691, metadata !DIExpression()), !dbg !9692
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9693
  %3 = load i32, i32* %2, align 4, !dbg !9693
  call void @llvm.dbg.value(metadata i32 %3, metadata !9691, metadata !DIExpression()), !dbg !9692
  %4 = shl nuw i32 1, %0, !dbg !9694
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !9695
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !9696
  ret void, !dbg !9697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9700, metadata !DIExpression()), !dbg !9701
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9702
  %3 = or i32 %2, %0, !dbg !9702
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !9704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9706, metadata !DIExpression()), !dbg !9707
  %2 = icmp slt i32 %0, 32, !dbg !9708
  br i1 %2, label %3, label %5, !dbg !9710

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9711
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !9713
  br label %5, !dbg !9714

5:                                                ; preds = %1, %3
  ret void, !dbg !9715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9718, metadata !DIExpression()), !dbg !9719
  %2 = xor i32 %0, -1, !dbg !9720
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9720
  %4 = and i32 %3, %2, !dbg !9720
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9720
  ret void, !dbg !9721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !9722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9726, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 %1, metadata !9727, metadata !DIExpression()), !dbg !9728
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9729

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9730
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !9732
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !9733
  br label %11, !dbg !9734

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9735
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !9736
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !9737
  br label %11, !dbg !9738

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9739
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !9740
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !9741
  br label %11, !dbg !9742

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9743
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !9744
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !9745
  br label %11, !dbg !9746

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9750, metadata !DIExpression()), !dbg !9751
  %2 = xor i32 %0, -1, !dbg !9752
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9752
  %4 = and i32 %3, %2, !dbg !9752
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9752
  ret void, !dbg !9753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9756, metadata !DIExpression()), !dbg !9757
  %2 = xor i32 %0, -1, !dbg !9758
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9758
  %4 = and i32 %3, %2, !dbg !9758
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9758
  ret void, !dbg !9759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9762, metadata !DIExpression()), !dbg !9763
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9764
  %3 = or i32 %2, %0, !dbg !9764
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9764
  ret void, !dbg !9765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9768, metadata !DIExpression()), !dbg !9769
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9770
  %3 = or i32 %2, %0, !dbg !9770
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9770
  ret void, !dbg !9771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9776, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9777, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i8* %2, metadata !9778, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9779, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9781, metadata !DIExpression()), !dbg !9782
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9783
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9783
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9785
  br i1 %6, label %7, label %9, !dbg !9786

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9787
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9788
  store i8* %2, i8** %8, align 4, !dbg !9789
  br label %9, !dbg !9790

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9782
  ret i32 %10, !dbg !9791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #8 !dbg !9792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9794, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9795, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9796, metadata !DIExpression()), !dbg !9797
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9798
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9799
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9800
  store i8* null, i8** %3, align 4, !dbg !9801
  ret void, !dbg !9802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9805, metadata !DIExpression()), !dbg !9810
  call void @llvm.dbg.value(metadata i8* %1, metadata !9806, metadata !DIExpression()), !dbg !9810
  call void @llvm.dbg.value(metadata i8* %1, metadata !9807, metadata !DIExpression()), !dbg !9810
  %3 = bitcast i8* %1 to i32*, !dbg !9811
  %4 = load i32, i32* %3, align 4, !dbg !9811
  %5 = add i32 %4, -169, !dbg !9811
  %6 = icmp ult i32 %5, -121, !dbg !9811
  br i1 %6, label %15, label %7, !dbg !9813

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9814
  %9 = inttoptr i32 %8 to i32*, !dbg !9815
  call void @llvm.dbg.value(metadata i32* %9, metadata !9808, metadata !DIExpression()), !dbg !9810
  %10 = load volatile i32, i32* %9, align 4, !dbg !9816
  call void @llvm.dbg.value(metadata i32 %10, metadata !9809, metadata !DIExpression()), !dbg !9810
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9817
  %12 = bitcast i8* %11 to i32*, !dbg !9817
  %13 = load i32, i32* %12, align 4, !dbg !9817
  %14 = or i32 %13, %10, !dbg !9818
  call void @llvm.dbg.value(metadata i32 %14, metadata !9809, metadata !DIExpression()), !dbg !9810
  store volatile i32 %14, i32* %9, align 4, !dbg !9819
  br label %15, !dbg !9820

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9810
  ret i32 %16, !dbg !9821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9822 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9824, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i8* %1, metadata !9825, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i8* %1, metadata !9826, metadata !DIExpression()), !dbg !9829
  %3 = bitcast i8* %1 to i32*, !dbg !9830
  %4 = load i32, i32* %3, align 4, !dbg !9830
  %5 = add i32 %4, -169, !dbg !9830
  %6 = icmp ult i32 %5, -121, !dbg !9830
  br i1 %6, label %16, label %7, !dbg !9832

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9833
  %9 = inttoptr i32 %8 to i32*, !dbg !9834
  call void @llvm.dbg.value(metadata i32* %9, metadata !9827, metadata !DIExpression()), !dbg !9829
  %10 = load volatile i32, i32* %9, align 4, !dbg !9835
  call void @llvm.dbg.value(metadata i32 %10, metadata !9828, metadata !DIExpression()), !dbg !9829
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9836
  %12 = bitcast i8* %11 to i32*, !dbg !9836
  %13 = load i32, i32* %12, align 4, !dbg !9836
  %14 = xor i32 %13, -1, !dbg !9837
  %15 = and i32 %10, %14, !dbg !9838
  call void @llvm.dbg.value(metadata i32 %15, metadata !9828, metadata !DIExpression()), !dbg !9829
  store volatile i32 %15, i32* %9, align 4, !dbg !9839
  br label %16, !dbg !9840

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9829
  ret i32 %17, !dbg !9841
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9842 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9844, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i8* %1, metadata !9845, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32* %2, metadata !9846, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i8* %1, metadata !9847, metadata !DIExpression()), !dbg !9852
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9853
  call void @llvm.dbg.value(metadata i32 %4, metadata !9848, metadata !DIExpression()), !dbg !9852
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #26, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %5, metadata !9849, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 %5, metadata !9850, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 %4, metadata !9851, metadata !DIExpression()), !dbg !9852
  %6 = bitcast i8* %1 to i32*, !dbg !9855
  %7 = load i32, i32* %6, align 4, !dbg !9855
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !9856

8:                                                ; preds = %3
  br label %18, !dbg !9857

9:                                                ; preds = %3
  br label %18, !dbg !9859

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9860
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #26, !dbg !9861
  br label %18, !dbg !9862

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9863
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #26, !dbg !9864
  br label %18, !dbg !9865

16:                                               ; preds = %3
  br label %18, !dbg !9866

17:                                               ; preds = %3
  br label %18, !dbg !9867

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !9868
  br label %20, !dbg !9869

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !9852
  ret i32 %21, !dbg !9869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !9870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9872, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9873, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %2, metadata !9874, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9875, metadata !DIExpression()), !dbg !9880
  %4 = bitcast i8* %1 to i32*, !dbg !9881
  %5 = load i32, i32* %4, align 4, !dbg !9881
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !9882
  call void @llvm.dbg.value(metadata i32 %6, metadata !9879, metadata !DIExpression()), !dbg !9880
  %7 = icmp slt i32 %6, 0, !dbg !9883
  br i1 %7, label %22, label %8, !dbg !9885

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9875, metadata !DIExpression()), !dbg !9880
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9886
  %10 = bitcast i8* %9 to i32*, !dbg !9886
  %11 = load i32, i32* %10, align 4, !dbg !9886
  %12 = lshr i32 %11, 16, !dbg !9886
  %13 = and i32 %12, 7, !dbg !9886
  %14 = lshr i32 %11, 8, !dbg !9887
  %15 = and i32 %14, 31, !dbg !9887
  %16 = shl i32 %13, %15, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %16, metadata !9878, metadata !DIExpression()), !dbg !9880
  %17 = and i32 %11, 255, !dbg !9889
  %18 = or i32 %17, 1073887232, !dbg !9890
  %19 = inttoptr i32 %18 to i32*, !dbg !9891
  call void @llvm.dbg.value(metadata i32* %19, metadata !9876, metadata !DIExpression()), !dbg !9880
  %20 = load volatile i32, i32* %19, align 4, !dbg !9892
  call void @llvm.dbg.value(metadata i32 %20, metadata !9877, metadata !DIExpression()), !dbg !9880
  %21 = or i32 %16, %20, !dbg !9893
  call void @llvm.dbg.value(metadata i32 %21, metadata !9877, metadata !DIExpression()), !dbg !9880
  store volatile i32 %21, i32* %19, align 4, !dbg !9894
  br label %22, !dbg !9895

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9880
  ret i32 %23, !dbg !9896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !9897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9901, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i32 0, metadata !9902, metadata !DIExpression()), !dbg !9903
  %2 = add i32 %0, -1, !dbg !9904
  %3 = icmp ult i32 %2, 6, !dbg !9904
  br i1 %3, label %4, label %7, !dbg !9904

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9904
  %6 = load i32, i32* %5, align 4, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %6, metadata !9902, metadata !DIExpression()), !dbg !9903
  br label %7, !dbg !9905

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9903
  ret i32 %8, !dbg !9906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #5 !dbg !9907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9911, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i32 2, metadata !9912, metadata !DIExpression()), !dbg !9913
  %2 = lshr i32 %0, 1, !dbg !9914
  ret i32 %2, !dbg !9915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !9916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9920, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.value(metadata i32 8, metadata !9921, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.value(metadata i32 84, metadata !9922, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.value(metadata i32 %1, metadata !9923, metadata !DIExpression()), !dbg !9924
  %3 = mul i32 %0, 84, !dbg !9925
  %4 = shl nsw i32 %1, 3, !dbg !9926
  %5 = udiv i32 %3, %4, !dbg !9927
  ret i32 %5, !dbg !9928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9929 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9931, metadata !DIExpression()), !dbg !9934
  tail call void @config_enable_default_clocks() #27, !dbg !9935
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !9936
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !9936
  %4 = lshr i32 %3, 4, !dbg !9936
  %5 = and i32 %4, 15, !dbg !9936
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9936
  %7 = load i8, i8* %6, align 1, !dbg !9936
  %8 = zext i8 %7 to i32, !dbg !9936
  %9 = lshr i32 %2, %8, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %9, metadata !9932, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9934
  %10 = icmp ult i32 %9, 84000000, !dbg !9937
  br i1 %10, label %11, label %13, !dbg !9939

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !9940
  br label %13, !dbg !9942

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !9943
  tail call fastcc void @set_up_plls() #26, !dbg !9944
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9945
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !9948
  br label %14, !dbg !9949

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9950
  %16 = icmp eq i32 %15, 8, !dbg !9951
  br i1 %16, label %17, label %14, !dbg !9949, !llvm.loop !9952

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9954
  br i1 %18, label %19, label %21, !dbg !9956

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !9957
  br label %21, !dbg !9959

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9960
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !9961
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !9962
  ret i32 0, !dbg !9963
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !9964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9966
  %2 = and i32 %1, 240, !dbg !9966
  ret i32 %2, !dbg !9967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !9968 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !9969
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !9974
  br label %1, !dbg !9975

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !9976
  %3 = icmp eq i32 %2, 1, !dbg !9977
  br i1 %3, label %4, label %1, !dbg !9975, !llvm.loop !9978

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !9980
  br label %5, !dbg !9983

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !9984
  %7 = icmp eq i32 %6, 1, !dbg !9985
  br i1 %7, label %8, label %5, !dbg !9983, !llvm.loop !9986

8:                                                ; preds = %5
  ret void, !dbg !9988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9989 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9990
  %2 = icmp eq i32 %1, 8, !dbg !9992
  br i1 %2, label %3, label %4, !dbg !9993

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9994
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !9996
  br label %4, !dbg !9997

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !9998
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9999
  %6 = and i32 %5, -196609, !dbg !9999
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9999
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10000
  %8 = and i32 %7, -251658241, !dbg !10000
  %9 = or i32 %8, 134217728, !dbg !10000
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10000
  tail call void @config_pll_sysclock() #27, !dbg !10001
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10002
  br label %10, !dbg !10003

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10004
  %12 = icmp eq i32 %11, 1, !dbg !10005
  br i1 %12, label %13, label %10, !dbg !10003, !llvm.loop !10006

13:                                               ; preds = %10
  ret void, !dbg !10008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !10009 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10011, metadata !DIExpression()), !dbg !10012
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10013
  %2 = and i32 %1, -241, !dbg !10013
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10013
  ret void, !dbg !10014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !10015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10017, metadata !DIExpression()), !dbg !10018
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10019
  %3 = and i32 %2, -4, !dbg !10019
  %4 = or i32 %3, %0, !dbg !10019
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10019
  ret void, !dbg !10020
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10021 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10022
  %2 = and i32 %1, 12, !dbg !10022
  ret i32 %2, !dbg !10023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !10024 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10026, metadata !DIExpression()), !dbg !10027
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10028
  %2 = and i32 %1, -7169, !dbg !10028
  %3 = or i32 %2, 4096, !dbg !10028
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10028
  ret void, !dbg !10029
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !10030 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10032, metadata !DIExpression()), !dbg !10033
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10034
  %2 = and i32 %1, -57345, !dbg !10034
  %3 = or i32 %2, 32768, !dbg !10034
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10034
  ret void, !dbg !10035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !10036 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10037
  %2 = icmp eq i32 %1, 1, !dbg !10039
  br i1 %2, label %7, label %3, !dbg !10040

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10041
  br label %4, !dbg !10043

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10044
  %6 = icmp eq i32 %5, 1, !dbg !10045
  br i1 %6, label %7, label %4, !dbg !10043, !llvm.loop !10046

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10048
  br label %8, !dbg !10049

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10050
  %10 = icmp eq i32 %9, 0, !dbg !10051
  br i1 %10, label %11, label %8, !dbg !10049, !llvm.loop !10052

11:                                               ; preds = %8
  ret void, !dbg !10054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10055 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10056
  %2 = and i32 %1, -16777217, !dbg !10056
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10056
  ret void, !dbg !10057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10058 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10059
  %2 = or i32 %1, 16777216, !dbg !10059
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10059
  ret void, !dbg !10060
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10061 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10062
  %2 = lshr i32 %1, 25, !dbg !10063
  %3 = and i32 %2, 1, !dbg !10063
  ret i32 %3, !dbg !10064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10065 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10066
  %2 = lshr i32 %1, 1, !dbg !10067
  %3 = and i32 %2, 1, !dbg !10067
  ret i32 %3, !dbg !10068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10069 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10070
  %2 = or i32 %1, 1, !dbg !10070
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10070
  ret void, !dbg !10071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !10072 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10073
  %2 = and i32 %1, -262145, !dbg !10073
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10073
  ret void, !dbg !10074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !10075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10076
  %2 = or i32 %1, 65536, !dbg !10076
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10076
  ret void, !dbg !10077
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10078 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10079
  %2 = lshr i32 %1, 17, !dbg !10080
  %3 = and i32 %2, 1, !dbg !10080
  ret i32 %3, !dbg !10081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10083
  %2 = or i32 %1, 1, !dbg !10083
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10086
  %2 = lshr i32 %1, 1, !dbg !10087
  %3 = and i32 %2, 1, !dbg !10087
  ret i32 %3, !dbg !10088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10089 {
  ret i32 16000000, !dbg !10091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10095 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10096
  ret void, !dbg !10097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10098 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10102, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 8, metadata !10103, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 84, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 0, metadata !10105, metadata !DIExpression()), !dbg !10106
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10107
  %2 = and i32 %1, -4227072, !dbg !10107
  %3 = or i32 %2, 4199688, !dbg !10107
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10107
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10108
  %5 = and i32 %4, -196609, !dbg !10108
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10108
  ret void, !dbg !10109
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #20 !dbg !10110 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10111
  ret void, !dbg !10112
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #20 !dbg !10113 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10116, metadata !DIExpression()), !dbg !10118
  %2 = bitcast i32* %1 to i8*, !dbg !10119
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10119
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10117, metadata !DIExpression()), !dbg !10120
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10121
  %4 = or i32 %3, 268435456, !dbg !10121
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10121
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10122
  %6 = and i32 %5, 268435456, !dbg !10122
  store volatile i32 %6, i32* %1, align 4, !dbg !10123
  %7 = load volatile i32, i32* %1, align 4, !dbg !10124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10125
  ret void, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10128, metadata !DIExpression()), !dbg !10129
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10130
  br i1 %2, label %3, label %4, !dbg !10132

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10133
  br label %4, !dbg !10134

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10129
  ret i32 %5, !dbg !10135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10136 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10141, metadata !DIExpression()), !dbg !10142
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10143, !srcloc !10145
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10146
  ret i1 %1, !dbg !10147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10148 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10149
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10150
  ret void, !dbg !10151
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = icmp eq i32 %0, 10, !dbg !10156
  br i1 %2, label %3, label %4, !dbg !10158

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10159
  br label %4, !dbg !10161

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10162
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10163
  ret i32 %0, !dbg !10164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10165 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10168, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i8 %0, metadata !10169, metadata !DIExpression()), !dbg !10170
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10171, !srcloc !10173
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10174
  ret void, !dbg !10175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10176 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10178, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata i8 %0, metadata !10179, metadata !DIExpression()), !dbg !10181
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10182
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10180, metadata !DIExpression()), !dbg !10181
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10183
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10183
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #27, !dbg !10184
  ret void, !dbg !10185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10186 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10188, metadata !DIExpression()), !dbg !10189
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !10190
  ret i1 %1, !dbg !10191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10192 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10239, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10240, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10241, metadata !DIExpression()), !dbg !10242
  ret void, !dbg !10243
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10244 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10246, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.value(metadata i8 %1, metadata !10247, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.value(metadata i32 %2, metadata !10248, metadata !DIExpression()), !dbg !10251
  %5 = bitcast i32* %4 to i8*, !dbg !10252
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10252
  call void @llvm.dbg.value(metadata i32* %4, metadata !10250, metadata !DIExpression(DW_OP_deref)), !dbg !10251
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !10253
  call void @llvm.dbg.value(metadata i32 %6, metadata !10249, metadata !DIExpression()), !dbg !10251
  %7 = icmp eq i32 %6, 0, !dbg !10254
  br i1 %7, label %8, label %31, !dbg !10256

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10249, metadata !DIExpression()), !dbg !10251
  %9 = and i32 %2, 131072, !dbg !10257
  %10 = icmp eq i32 %9, 0, !dbg !10259
  br i1 %10, label %28, label %11, !dbg !10260

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10261
  %13 = icmp eq i32 %12, 0, !dbg !10264
  br i1 %13, label %18, label %14, !dbg !10265

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10266
  %16 = shl nuw i32 1, %15, !dbg !10266
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !10268
  br label %25, !dbg !10269

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10270
  %20 = icmp eq i32 %19, 0, !dbg !10272
  %21 = zext i8 %1 to i32, !dbg !10251
  br i1 %20, label %25, label %22, !dbg !10273

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10274
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !10276
  br label %25, !dbg !10277

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10278
  %27 = load i32, i32* %4, align 4, !dbg !10279
  call void @llvm.dbg.value(metadata i32 %30, metadata !10250, metadata !DIExpression()), !dbg !10251
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !10280
  br label %31, !dbg !10281

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10278
  %30 = load i32, i32* %4, align 4, !dbg !10279
  call void @llvm.dbg.value(metadata i32 %30, metadata !10250, metadata !DIExpression()), !dbg !10251
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !10280
  call void @llvm.dbg.value(metadata i32 0, metadata !10249, metadata !DIExpression()), !dbg !10251
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10282
  ret i32 %6, !dbg !10282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10287, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32* %1, metadata !10288, metadata !DIExpression()), !dbg !10292
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10293
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10293
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10289, metadata !DIExpression()), !dbg !10292
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10294
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10294
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10294
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10291, metadata !DIExpression()), !dbg !10292
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !10295
  store i32 %9, i32* %1, align 4, !dbg !10296
  ret i32 0, !dbg !10297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10300, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 %1, metadata !10301, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 %2, metadata !10302, metadata !DIExpression()), !dbg !10306
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10307
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10307
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10307
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10303, metadata !DIExpression()), !dbg !10306
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10308
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10308
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10308
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10304, metadata !DIExpression()), !dbg !10306
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !10309
  call void @llvm.dbg.value(metadata i32 %10, metadata !10305, metadata !DIExpression()), !dbg !10306
  %11 = xor i32 %1, -1, !dbg !10310
  %12 = and i32 %10, %11, !dbg !10311
  %13 = and i32 %2, %1, !dbg !10312
  %14 = or i32 %12, %13, !dbg !10313
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !10314
  ret i32 0, !dbg !10315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10318, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32 %1, metadata !10319, metadata !DIExpression()), !dbg !10322
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10323
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10323
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10323
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10320, metadata !DIExpression()), !dbg !10322
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10324
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10324
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10324
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10321, metadata !DIExpression()), !dbg !10322
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10325
  store volatile i32 %1, i32* %9, align 4, !dbg !10325
  ret i32 0, !dbg !10326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10327 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10329, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 %1, metadata !10330, metadata !DIExpression()), !dbg !10333
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10334
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10334
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10334
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10331, metadata !DIExpression()), !dbg !10333
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10335
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10335
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10335
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10332, metadata !DIExpression()), !dbg !10333
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !10336
  ret i32 0, !dbg !10337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10340, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %1, metadata !10341, metadata !DIExpression()), !dbg !10344
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10345
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10345
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10345
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10342, metadata !DIExpression()), !dbg !10344
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10346
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10346
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10346
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10343, metadata !DIExpression()), !dbg !10344
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10347
  %10 = load volatile i32, i32* %9, align 4, !dbg !10347
  %11 = xor i32 %10, %1, !dbg !10347
  store volatile i32 %11, i32* %9, align 4, !dbg !10347
  ret i32 0, !dbg !10348
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10351, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i8 %1, metadata !10352, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %2, metadata !10353, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %3, metadata !10354, metadata !DIExpression()), !dbg !10361
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10362
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10362
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10362
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10355, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i8* undef, metadata !10356, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 0, metadata !10358, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 0, metadata !10359, metadata !DIExpression()), !dbg !10361
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10363

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10364
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !10368
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10369
  %12 = load i32, i32* %11, align 4, !dbg !10369
  %13 = icmp eq i32 %10, %12, !dbg !10370
  br i1 %13, label %14, label %29, !dbg !10371

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10372
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10374
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10375
  br label %29, !dbg !10376

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10377
  %17 = load i8*, i8** %16, align 4, !dbg !10377
  call void @llvm.dbg.value(metadata i8* %17, metadata !10356, metadata !DIExpression()), !dbg !10361
  %18 = zext i8 %1 to i32, !dbg !10378
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10380
  %20 = icmp eq i32 %19, 0, !dbg !10381
  br i1 %20, label %21, label %29, !dbg !10382

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10383
  %23 = load i32, i32* %22, align 4, !dbg !10383
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !10384
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10385

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10358, metadata !DIExpression()), !dbg !10361
  br label %27, !dbg !10386

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10358, metadata !DIExpression()), !dbg !10361
  br label %27, !dbg !10388

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10358, metadata !DIExpression()), !dbg !10361
  br label %27, !dbg !10389

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10361
  call void @llvm.dbg.value(metadata i32 %28, metadata !10358, metadata !DIExpression()), !dbg !10361
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10390
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10391
  br label %29, !dbg !10391

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10361
  call void @llvm.dbg.value(metadata i32 %30, metadata !10359, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.label(metadata !10360), !dbg !10392
  ret i32 %30, !dbg !10393
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #15 !dbg !10394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10396, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10397, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i1 %2, metadata !10398, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10400
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10401
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10401
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10401
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10399, metadata !DIExpression()), !dbg !10400
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10402
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !10403
  ret i32 %8, !dbg !10404
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #15 !dbg !10405 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10411, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10412, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i1 %2, metadata !10413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10414
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !10415
  br i1 %4, label %10, label %5, !dbg !10417

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10418
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !10421
  %8 = or i1 %7, %2, !dbg !10422
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10422
  br i1 %2, label %11, label %13, !dbg !10422

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10423

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10424
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !10427
  br label %13, !dbg !10428

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10414
  ret i32 %14, !dbg !10429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10430 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10434, metadata !DIExpression()), !dbg !10435
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10436
  %3 = icmp eq %struct._snode* %2, null, !dbg !10436
  ret i1 %3, !dbg !10436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10441, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10442, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10443, metadata !DIExpression()), !dbg !10445
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10446
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10443, metadata !DIExpression()), !dbg !10445
  %4 = icmp eq %struct._snode* %3, null, !dbg !10448
  br i1 %4, label %15, label %5, !dbg !10446

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10443, metadata !DIExpression()), !dbg !10445
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10450
  br i1 %6, label %9, label %11, !dbg !10453

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10443, metadata !DIExpression()), !dbg !10445
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10450
  br i1 %8, label %9, label %11, !dbg !10453, !llvm.loop !10454

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !10455
  br label %15, !dbg !10455

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10443, metadata !DIExpression()), !dbg !10445
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !10448
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10444, metadata !DIExpression()), !dbg !10445
  %14 = icmp eq %struct._snode* %13, null, !dbg !10448
  br i1 %14, label %15, label %7, !dbg !10446, !llvm.loop !10454

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10458 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10462, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10463, metadata !DIExpression()), !dbg !10464
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10465
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !10465
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !10465
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10466
  %5 = icmp eq %struct._snode* %4, null, !dbg !10466
  br i1 %5, label %6, label %8, !dbg !10465

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10468
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !10468
  br label %8, !dbg !10468

8:                                                ; preds = %6, %2
  ret void, !dbg !10465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10470 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10474, metadata !DIExpression()), !dbg !10475
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10476
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10476
  ret %struct._snode* %3, !dbg !10477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10478 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10483, metadata !DIExpression()), !dbg !10484
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10485
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10486
  ret void, !dbg !10487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10488 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10490, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10491, metadata !DIExpression()), !dbg !10492
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10493
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10494
  ret void, !dbg !10495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10496 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10498, metadata !DIExpression()), !dbg !10499
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10500
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10500
  ret %struct._snode* %3, !dbg !10501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10502 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10504, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10505, metadata !DIExpression()), !dbg !10506
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10507
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10508
  ret void, !dbg !10509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10510 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10514, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10516, metadata !DIExpression()), !dbg !10517
  %4 = icmp eq %struct._snode* %1, null, !dbg !10518
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10520
  br i1 %4, label %6, label %11, !dbg !10521

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10522
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10524
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10524
  br i1 %8, label %9, label %15, !dbg !10522

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10526
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10526
  br label %15, !dbg !10526

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10528
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10530
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10530
  br i1 %13, label %14, label %15, !dbg !10528

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10532
  br label %15, !dbg !10532

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10521
  ret void, !dbg !10521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10538, metadata !DIExpression()), !dbg !10539
  %2 = icmp eq %struct._snode* %0, null, !dbg !10540
  br i1 %2, label %5, label %3, !dbg !10540

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10540
  br label %5, !dbg !10540

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10540
  ret %struct._snode* %6, !dbg !10540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10541 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10543, metadata !DIExpression()), !dbg !10544
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10545
  ret %struct._snode* %2, !dbg !10545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10546 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10548, metadata !DIExpression()), !dbg !10549
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10550
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10550
  ret %struct._snode* %3, !dbg !10551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10554, metadata !DIExpression()), !dbg !10557
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10558, !range !10559
  call void @llvm.dbg.value(metadata i32 %2, metadata !10555, metadata !DIExpression()), !dbg !10557
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10560
  call void @llvm.dbg.value(metadata i32 %3, metadata !10556, metadata !DIExpression()), !dbg !10557
  ret i32 %3, !dbg !10561
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10564, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i8* %1, metadata !10565, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i8* %1, metadata !10566, metadata !DIExpression()), !dbg !10567
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10568
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10568
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10569
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10569
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10569
  %8 = shl nuw i32 1, %0, !dbg !10570
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10571
  ret void, !dbg !10572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10573 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10577, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i32 %1, metadata !10578, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10579, metadata !DIExpression()), !dbg !10583
  %4 = bitcast i64* %3 to i8*, !dbg !10584
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10584
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10581, metadata !DIExpression()), !dbg !10583
  store i64 70368744177732, i64* %3, align 8, !dbg !10585
  call void @llvm.dbg.value(metadata i64* %3, metadata !10581, metadata !DIExpression(DW_OP_deref)), !dbg !10583
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %5, metadata !10582, metadata !DIExpression()), !dbg !10583
  %6 = icmp eq i32 %5, 0, !dbg !10587
  br i1 %6, label %7, label %8, !dbg !10589

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10590
  br label %8, !dbg !10591

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10592
  ret void, !dbg !10592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10593 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10595, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i8* %0, metadata !10596, metadata !DIExpression()), !dbg !10598
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10599
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10597, metadata !DIExpression()), !dbg !10598
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10600
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10600
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !10601
  ret i32 %5, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10605, metadata !DIExpression()), !dbg !10608
  call void @llvm.dbg.value(metadata i32 %1, metadata !10606, metadata !DIExpression()), !dbg !10608
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %3, metadata !10607, metadata !DIExpression()), !dbg !10608
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10610
  ret void, !dbg !10611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10616, metadata !DIExpression()), !dbg !10617
  %2 = sdiv i32 %0, 4, !dbg !10618
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10619
  %6 = add nsw i32 %5, 16, !dbg !10620
  %7 = shl i32 15, %6, !dbg !10621
  %8 = or i32 %7, %2, !dbg !10622
  ret i32 %8, !dbg !10623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10628, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.value(metadata i32 %1, metadata !10629, metadata !DIExpression()), !dbg !10630
  %3 = and i32 %1, 255, !dbg !10631
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10631
  %5 = load volatile i32, i32* %4, align 4, !dbg !10631
  %6 = lshr i32 %1, 16, !dbg !10631
  %7 = xor i32 %6, -1, !dbg !10631
  %8 = and i32 %5, %7, !dbg !10631
  call void @llvm.dbg.value(metadata i32 %6, metadata !10632, metadata !DIExpression()) #25, !dbg !10636
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10638, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %9, metadata !10635, metadata !DIExpression()) #25, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %9, metadata !10640, metadata !DIExpression()) #25, !dbg !10645
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !10647, !range !4991
  %11 = shl i32 %0, %10, !dbg !10631
  %12 = or i32 %11, %8, !dbg !10631
  store volatile i32 %12, i32* %4, align 4, !dbg !10631
  ret void, !dbg !10648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10649 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10653, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10654, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %2, metadata !10655, metadata !DIExpression()), !dbg !10658
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10659
  %5 = icmp eq %struct._snode* %4, null, !dbg !10659
  br i1 %5, label %21, label %6, !dbg !10659

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10661
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10656, metadata !DIExpression()), !dbg !10658
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10662
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10662
  %11 = load i32, i32* %10, align 4, !dbg !10662
  %12 = and i32 %11, %2, !dbg !10666
  %13 = icmp eq i32 %12, 0, !dbg !10666
  br i1 %13, label %19, label %14, !dbg !10667

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10656, metadata !DIExpression()), !dbg !10658
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10668
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10668
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10668
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !10670
  br label %19, !dbg !10671

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10656, metadata !DIExpression()), !dbg !10658
  %20 = icmp eq %struct._snode* %8, null, !dbg !10672
  br i1 %20, label %21, label %6, !dbg !10672

21:                                               ; preds = %19, %3
  ret void, !dbg !10673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10676, metadata !DIExpression()), !dbg !10677
  %2 = and i32 %0, 255, !dbg !10678
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10678
  %4 = load volatile i32, i32* %3, align 4, !dbg !10678
  %5 = lshr i32 %0, 16, !dbg !10678
  %6 = and i32 %4, %5, !dbg !10678
  call void @llvm.dbg.value(metadata i32 %5, metadata !10632, metadata !DIExpression()) #25, !dbg !10679
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !10681, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %7, metadata !10635, metadata !DIExpression()) #25, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %7, metadata !10640, metadata !DIExpression()) #25, !dbg !10682
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10684, !range !4991
  %9 = lshr i32 %6, %8, !dbg !10685
  ret i32 %9, !dbg !10686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10687 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10692, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i32 %1, metadata !10693, metadata !DIExpression()), !dbg !10694
  %3 = shl i32 %1, 16, !dbg !10695
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10695
  store volatile i32 %3, i32* %4, align 4, !dbg !10695
  ret void, !dbg !10696
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10697 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10701, metadata !DIExpression()), !dbg !10702
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10703
  %3 = load volatile i32, i32* %2, align 4, !dbg !10703
  ret i32 %3, !dbg !10704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10705 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10707, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %1, metadata !10708, metadata !DIExpression()), !dbg !10709
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10710
  store volatile i32 %1, i32* %3, align 4, !dbg !10710
  ret void, !dbg !10711
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10712 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10714, metadata !DIExpression()), !dbg !10715
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10716
  %3 = load volatile i32, i32* %2, align 4, !dbg !10716
  ret i32 %3, !dbg !10717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10722, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32* %1, metadata !10723, metadata !DIExpression()), !dbg !10724
  %3 = and i32 %0, 131072, !dbg !10725
  %4 = icmp eq i32 %3, 0, !dbg !10727
  br i1 %4, label %22, label %5, !dbg !10728

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10729
  %6 = and i32 %0, 2, !dbg !10731
  %7 = icmp eq i32 %6, 0, !dbg !10733
  br i1 %7, label %11, label %8, !dbg !10734

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10735
  %10 = icmp eq i32 %9, 0, !dbg !10735
  br i1 %10, label %33, label %11, !dbg !10738

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10739
  store i32 %12, i32* %1, align 4, !dbg !10739
  %13 = and i32 %0, 16, !dbg !10740
  %14 = icmp eq i32 %13, 0, !dbg !10742
  br i1 %14, label %17, label %15, !dbg !10743

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10744
  br label %31, !dbg !10746

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10747
  %19 = icmp eq i32 %18, 0, !dbg !10749
  br i1 %19, label %33, label %20, !dbg !10750

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10751
  br label %31, !dbg !10753

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10754
  %24 = icmp eq i32 %23, 0, !dbg !10756
  br i1 %24, label %31, label %25, !dbg !10757

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10758
  %27 = icmp eq i32 %26, 0, !dbg !10761
  br i1 %27, label %28, label %31, !dbg !10762

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10763
  br label %33, !dbg !10764

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10724
  ret i32 %34, !dbg !10764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10769, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %1, metadata !10770, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10771, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %3, metadata !10772, metadata !DIExpression()), !dbg !10780
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10781
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10781
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10781
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10773, metadata !DIExpression()), !dbg !10780
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10782
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10782
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10782
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10774, metadata !DIExpression()), !dbg !10780
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10783
  call void @llvm.dbg.value(metadata i32 %11, metadata !10775, metadata !DIExpression()), !dbg !10780
  %12 = and i32 %2, 48, !dbg !10784
  call void @llvm.dbg.value(metadata i32 %12, metadata !10776, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10777, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10778, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10779, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10780
  %13 = lshr i32 %2, 6, !dbg !10785
  %14 = and i32 %13, 1, !dbg !10785
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10786
  %15 = lshr i32 %2, 7, !dbg !10787
  %16 = and i32 %15, 3, !dbg !10787
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10788
  %17 = lshr i32 %2, 9, !dbg !10789
  %18 = and i32 %17, 3, !dbg !10789
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10790
  %19 = icmp eq i32 %12, 32, !dbg !10791
  br i1 %19, label %20, label %24, !dbg !10793

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10794
  br i1 %21, label %22, label %23, !dbg !10797

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10798
  br label %24, !dbg !10800

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10801
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10803
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10804
  ret void, !dbg !10805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10808, metadata !DIExpression()), !dbg !10810
  %2 = shl nuw i32 1, %0, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %2, metadata !10809, metadata !DIExpression()), !dbg !10810
  ret i32 %2, !dbg !10812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10813 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10817, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 %2, metadata !10819, metadata !DIExpression()), !dbg !10820
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10821
  %5 = load volatile i32, i32* %4, align 4, !dbg !10821
  %6 = xor i32 %1, -1, !dbg !10821
  %7 = and i32 %5, %6, !dbg !10821
  %8 = mul i32 %2, %1, !dbg !10821
  %9 = or i32 %7, %8, !dbg !10821
  store volatile i32 %9, i32* %4, align 4, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %1, metadata !10826, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %2, metadata !10827, metadata !DIExpression()), !dbg !10828
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10829
  %5 = load volatile i32, i32* %4, align 4, !dbg !10829
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10830
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10832, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10830
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10833
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10835, !range !4991
  %8 = shl nuw nsw i32 %7, 1, !dbg !10829
  %9 = shl i32 3, %8, !dbg !10829
  %10 = xor i32 %9, -1, !dbg !10829
  %11 = and i32 %5, %10, !dbg !10829
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10838
  %12 = shl i32 %2, %8, !dbg !10829
  %13 = or i32 %11, %12, !dbg !10829
  store volatile i32 %13, i32* %4, align 4, !dbg !10829
  ret void, !dbg !10840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10841 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10843, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.value(metadata i32 %1, metadata !10844, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.value(metadata i32 %2, metadata !10845, metadata !DIExpression()), !dbg !10846
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10847
  %5 = load volatile i32, i32* %4, align 4, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10848
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10850, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10848
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10851
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10853, !range !4991
  %8 = shl nuw nsw i32 %7, 1, !dbg !10847
  %9 = shl i32 3, %8, !dbg !10847
  %10 = xor i32 %9, -1, !dbg !10847
  %11 = and i32 %5, %10, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10856
  %12 = shl i32 %2, %8, !dbg !10847
  %13 = or i32 %11, %12, !dbg !10847
  store volatile i32 %13, i32* %4, align 4, !dbg !10847
  ret void, !dbg !10858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10859 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10861, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.value(metadata i32 %1, metadata !10862, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.value(metadata i32 %2, metadata !10863, metadata !DIExpression()), !dbg !10864
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10865
  %5 = load volatile i32, i32* %4, align 4, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10866
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10868, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10866
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10869
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10871, !range !4991
  %8 = shl nuw nsw i32 %7, 2, !dbg !10865
  %9 = shl i32 15, %8, !dbg !10865
  %10 = xor i32 %9, -1, !dbg !10865
  %11 = and i32 %5, %10, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10874
  %12 = shl i32 %2, %8, !dbg !10865
  %13 = or i32 %11, %12, !dbg !10865
  store volatile i32 %13, i32* %4, align 4, !dbg !10865
  ret void, !dbg !10876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10877 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10879, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %1, metadata !10880, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %2, metadata !10881, metadata !DIExpression()), !dbg !10882
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10883
  %5 = load volatile i32, i32* %4, align 4, !dbg !10883
  %6 = lshr i32 %1, 8, !dbg !10883
  call void @llvm.dbg.value(metadata i32 %6, metadata !10632, metadata !DIExpression()) #25, !dbg !10884
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10886, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %7, metadata !10635, metadata !DIExpression()) #25, !dbg !10884
  call void @llvm.dbg.value(metadata i32 %7, metadata !10640, metadata !DIExpression()) #25, !dbg !10887
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10889, !range !4991
  %9 = shl nuw nsw i32 %8, 2, !dbg !10883
  %10 = shl i32 15, %9, !dbg !10883
  %11 = xor i32 %10, -1, !dbg !10883
  %12 = and i32 %5, %11, !dbg !10883
  call void @llvm.dbg.value(metadata i32 %6, metadata !10632, metadata !DIExpression()) #25, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %7, metadata !10635, metadata !DIExpression()) #25, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %7, metadata !10640, metadata !DIExpression()) #25, !dbg !10892
  %13 = shl i32 %2, %9, !dbg !10883
  %14 = or i32 %12, %13, !dbg !10883
  store volatile i32 %14, i32* %4, align 4, !dbg !10883
  ret void, !dbg !10894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10895 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10897, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %1, metadata !10898, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %2, metadata !10899, metadata !DIExpression()), !dbg !10900
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10901
  %5 = load volatile i32, i32* %4, align 4, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10902
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10904, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10905
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10907, !range !4991
  %8 = shl nuw nsw i32 %7, 1, !dbg !10901
  %9 = shl i32 3, %8, !dbg !10901
  %10 = xor i32 %9, -1, !dbg !10901
  %11 = and i32 %5, %10, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10910
  %12 = shl i32 %2, %8, !dbg !10901
  %13 = or i32 %11, %12, !dbg !10901
  store volatile i32 %13, i32* %4, align 4, !dbg !10901
  ret void, !dbg !10912
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10915, metadata !DIExpression()), !dbg !10918
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10919
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10919
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10919
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10916, metadata !DIExpression()), !dbg !10918
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10920
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10921
  %6 = tail call fastcc zeroext i1 @device_is_ready.101() #26, !dbg !10922
  br i1 %6, label %7, label %11, !dbg !10924

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10925
  call void @llvm.dbg.value(metadata i32 %8, metadata !10917, metadata !DIExpression()), !dbg !10918
  %9 = icmp slt i32 %8, 0, !dbg !10926
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10928
  br label %11, !dbg !10928

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10918
  ret i32 %12, !dbg !10929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.101() unnamed_addr #1 !dbg !10930 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10934, metadata !DIExpression()), !dbg !10935
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10936, !srcloc !10938
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.102() #26, !dbg !10939
  ret i1 %1, !dbg !10940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10941 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10945, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i8 1, metadata !10946, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10947, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 0, metadata !10948, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10949, metadata !DIExpression()), !dbg !10950
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10951
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10951
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10951
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10947, metadata !DIExpression()), !dbg !10950
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10952
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10955
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %7, metadata !10948, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 %7, metadata !10948, metadata !DIExpression()), !dbg !10950
  ret i32 %7, !dbg !10957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.102() unnamed_addr #1 !dbg !10958 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10960, metadata !DIExpression()), !dbg !10961
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !10962
  ret i1 %1, !dbg !10963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10964 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10968, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %1, metadata !10969, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %2, metadata !10970, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %3, metadata !10971, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 0, metadata !10972, metadata !DIExpression()), !dbg !10976
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10977
  %5 = icmp eq i32 %3, 17, !dbg !10978
  br i1 %5, label %6, label %14, !dbg !10979

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10980
  call void @llvm.dbg.value(metadata i32 %7, metadata !10973, metadata !DIExpression()), !dbg !10981
  %8 = icmp eq i32 %7, 0, !dbg !10982
  %9 = shl nuw i32 1, %1, !dbg !10984
  br i1 %8, label %12, label %10, !dbg !10985

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10986
  br label %14, !dbg !10988

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10989
  br label %14, !dbg !10992

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10993
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #20 !dbg !10994 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10996, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.value(metadata i8* %1, metadata !10997, metadata !DIExpression()), !dbg !11000
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11001
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11001
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11001
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10998, metadata !DIExpression()), !dbg !11000
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11002
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11002
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !11004
  %9 = icmp eq i32 %8, 0, !dbg !11004
  br i1 %9, label %12, label %10, !dbg !11005

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11006
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !11008
  br label %12, !dbg !11009

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11010
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11012
  %15 = icmp eq i32 %14, 0, !dbg !11012
  br i1 %15, label %19, label %16, !dbg !11013

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11014
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !11015
  store i8 %18, i8* %1, align 1, !dbg !11016
  br label %19, !dbg !11017

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11000
  ret i32 %20, !dbg !11018
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11021, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i8 %1, metadata !11022, metadata !DIExpression()), !dbg !11025
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11026
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11026
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11026
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11023, metadata !DIExpression()), !dbg !11025
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11027

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11028
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !11031
  %10 = icmp eq i32 %9, 0, !dbg !11031
  br i1 %10, label %18, label %11, !dbg !11032

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11033, !srcloc !11040
  call void @llvm.dbg.value(metadata i32 undef, metadata !11036, metadata !DIExpression()) #25, !dbg !11041
  call void @llvm.dbg.value(metadata i32 undef, metadata !11037, metadata !DIExpression()) #25, !dbg !11041
  call void @llvm.dbg.value(metadata i32 undef, metadata !11024, metadata !DIExpression()), !dbg !11025
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11042
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11044
  %15 = icmp eq i32 %14, 0, !dbg !11044
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11033
  br i1 %15, label %17, label %19, !dbg !11045

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11036, metadata !DIExpression()) #25, !dbg !11041
  call void @llvm.dbg.value(metadata i32 %16, metadata !11024, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 undef, metadata !11046, metadata !DIExpression()) #25, !dbg !11049
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11051, !srcloc !11052
  br label %18, !dbg !11053

18:                                               ; preds = %17, %7
  br label %7, !dbg !11028, !llvm.loop !11054

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11033
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11056
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %20, metadata !11046, metadata !DIExpression()) #25, !dbg !11058
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11060, !srcloc !11052
  ret void, !dbg !11061
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #20 !dbg !11062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11064, metadata !DIExpression()), !dbg !11067
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11068
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11068
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11068
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11065, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 0, metadata !11066, metadata !DIExpression()), !dbg !11067
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11069
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11069
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !11071
  %8 = icmp ne i32 %7, 0, !dbg !11071
  %9 = zext i1 %8 to i32, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %9, metadata !11066, metadata !DIExpression()), !dbg !11067
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11073
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !11075
  %12 = icmp eq i32 %11, 0, !dbg !11075
  %13 = or i32 %9, 2, !dbg !11076
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11076
  call void @llvm.dbg.value(metadata i32 %14, metadata !11066, metadata !DIExpression()), !dbg !11067
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11077
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !11079
  %17 = icmp eq i32 %16, 0, !dbg !11079
  %18 = or i32 %14, 4, !dbg !11080
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11080
  call void @llvm.dbg.value(metadata i32 %19, metadata !11066, metadata !DIExpression()), !dbg !11067
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11081
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !11083
  %22 = icmp eq i32 %21, 0, !dbg !11083
  %23 = or i32 %19, 8, !dbg !11084
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11084
  call void @llvm.dbg.value(metadata i32 %24, metadata !11066, metadata !DIExpression()), !dbg !11067
  %25 = and i32 %24, 8, !dbg !11085
  %26 = icmp eq i32 %25, 0, !dbg !11085
  br i1 %26, label %29, label %27, !dbg !11087

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11088
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !11090
  br label %29, !dbg !11091

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11092
  %31 = icmp eq i32 %30, 0, !dbg !11092
  br i1 %31, label %34, label %32, !dbg !11094

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11095
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !11097
  br label %34, !dbg !11098

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11099
  %36 = icmp eq i32 %35, 0, !dbg !11099
  br i1 %36, label %39, label %37, !dbg !11101

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11102
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !11104
  br label %39, !dbg !11105

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11106
  %41 = icmp eq i32 %40, 0, !dbg !11106
  br i1 %41, label %44, label %42, !dbg !11108

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11109
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !11111
  br label %44, !dbg !11112

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11113
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !11114
  ret i32 %24, !dbg !11115
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11116 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11118, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11119, metadata !DIExpression()), !dbg !11127
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11128
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11128
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11128
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11120, metadata !DIExpression()), !dbg !11127
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11129
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11129
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11129
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11121, metadata !DIExpression()), !dbg !11127
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11130
  %10 = load i8, i8* %9, align 4, !dbg !11130
  %11 = zext i8 %10 to i32, !dbg !11131
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !11132
  call void @llvm.dbg.value(metadata i32 %12, metadata !11123, metadata !DIExpression()), !dbg !11127
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11133
  %14 = load i8, i8* %13, align 1, !dbg !11133
  %15 = zext i8 %14 to i32, !dbg !11134
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !11135
  call void @llvm.dbg.value(metadata i32 %16, metadata !11124, metadata !DIExpression()), !dbg !11127
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11136
  %18 = load i8, i8* %17, align 2, !dbg !11136
  %19 = zext i8 %18 to i32, !dbg !11137
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !11138
  call void @llvm.dbg.value(metadata i32 %20, metadata !11125, metadata !DIExpression()), !dbg !11127
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11139
  %22 = load i8, i8* %21, align 1, !dbg !11139
  %23 = zext i8 %22 to i32, !dbg !11140
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !11141
  call void @llvm.dbg.value(metadata i32 %24, metadata !11126, metadata !DIExpression()), !dbg !11127
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11142

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11144
  br i1 %26, label %69, label %27, !dbg !11146

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11147

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11148
  br i1 %29, label %65, label %30, !dbg !11148

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11150
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11127
  br i1 %31, label %38, label %34, !dbg !11152

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11153
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !11153

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11156
  br i1 %37, label %38, label %69, !dbg !11157

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11158
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !11159
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !11160
  %41 = icmp eq i32 %12, %40, !dbg !11162
  br i1 %41, label %43, label %42, !dbg !11163

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !11164
  br label %43, !dbg !11166

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !11167
  %45 = icmp eq i32 %16, %44, !dbg !11169
  br i1 %45, label %47, label %46, !dbg !11170

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !11171
  br label %47, !dbg !11173

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !11174
  %49 = icmp eq i32 %20, %48, !dbg !11176
  br i1 %49, label %51, label %50, !dbg !11177

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !11178
  br label %51, !dbg !11180

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !11181
  %53 = icmp eq i32 %24, %52, !dbg !11183
  br i1 %53, label %55, label %54, !dbg !11184

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !11185
  br label %55, !dbg !11187

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11188
  %57 = load i32, i32* %56, align 4, !dbg !11188
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11190
  %59 = load i32, i32* %58, align 4, !dbg !11190
  %60 = icmp eq i32 %57, %59, !dbg !11191
  br i1 %60, label %63, label %61, !dbg !11192

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !11193
  %62 = load i32, i32* %56, align 4, !dbg !11195
  store i32 %62, i32* %58, align 4, !dbg !11196
  br label %63, !dbg !11197

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11198
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !11199
  br label %69, !dbg !11200

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11148
  %67 = and i8 %66, 1, !dbg !11148
  %68 = icmp eq i8 %67, 0, !dbg !11148
  br i1 %68, label %30, label %69, !dbg !11148

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11127
  ret i32 %70, !dbg !11201
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11204, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11205, metadata !DIExpression()), !dbg !11207
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11208
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11208
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11208
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11206, metadata !DIExpression()), !dbg !11207
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11209
  %7 = load i32, i32* %6, align 4, !dbg !11209
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11210
  store i32 %7, i32* %8, align 4, !dbg !11211
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11212, !range !11213
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !11214
  %11 = trunc i32 %10 to i8, !dbg !11214
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11215
  store i8 %11, i8* %12, align 4, !dbg !11216
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !11217, !range !11218
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !11219
  %15 = trunc i32 %14 to i8, !dbg !11219
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11220
  store i8 %15, i8* %16, align 1, !dbg !11221
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !11222
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11223, !range !11213
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !11224
  %20 = trunc i32 %19 to i8, !dbg !11224
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11225
  store i8 %20, i8* %21, align 2, !dbg !11226
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !11227, !range !11228
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !11229
  %24 = trunc i32 %23 to i8, !dbg !11229
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11230
  store i8 %24, i8* %25, align 1, !dbg !11231
  ret i32 0, !dbg !11232
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11237, metadata !DIExpression()), !dbg !11239
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11240
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11240
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11240
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11238, metadata !DIExpression()), !dbg !11239
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11241
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11241
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11242
  ret i32 %7, !dbg !11243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11248, metadata !DIExpression()), !dbg !11249
  %2 = icmp eq i32 %0, 1024, !dbg !11250
  %3 = select i1 %2, i32 2, i32 0, !dbg !11250
  %4 = icmp eq i32 %0, 1536, !dbg !11250
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11250
  ret i32 %5, !dbg !11251
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11254, metadata !DIExpression()), !dbg !11256
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11257
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11257
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11257
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11255, metadata !DIExpression()), !dbg !11256
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11258
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11258
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11259
  ret i32 %7, !dbg !11260
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11265, metadata !DIExpression()), !dbg !11266
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11267
  %3 = icmp ult i32 %2, 4, !dbg !11267
  br i1 %3, label %4, label %7, !dbg !11267

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11267
  %6 = load i32, i32* %5, align 4, !dbg !11267
  br label %7, !dbg !11267

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11268
  ret i32 %8, !dbg !11270
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11273, metadata !DIExpression()), !dbg !11275
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11276
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11276
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11276
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11274, metadata !DIExpression()), !dbg !11275
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11277
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11277
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11278
  ret i32 %7, !dbg !11279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11284, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 %1, metadata !11285, metadata !DIExpression()), !dbg !11286
  %3 = icmp eq i32 %0, 4096, !dbg !11287
  %4 = icmp eq i32 %1, 0, !dbg !11287
  %5 = select i1 %4, i32 4, i32 3, !dbg !11287
  %6 = select i1 %4, i32 3, i32 2, !dbg !11287
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11287
  ret i32 %7, !dbg !11288
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11291, metadata !DIExpression()), !dbg !11293
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11294
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11294
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11294
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11292, metadata !DIExpression()), !dbg !11293
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11295
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11295
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11296
  ret i32 %7, !dbg !11297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11302, metadata !DIExpression()), !dbg !11303
  %2 = icmp eq i32 %0, 768, !dbg !11304
  %3 = zext i1 %2 to i32, !dbg !11303
  ret i32 %3, !dbg !11306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11307 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11312, metadata !DIExpression()), !dbg !11313
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11314
  %3 = load volatile i32, i32* %2, align 4, !dbg !11314
  %4 = and i32 %3, 768, !dbg !11314
  ret i32 %4, !dbg !11315
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11316 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11320
  %3 = load volatile i32, i32* %2, align 4, !dbg !11320
  %4 = and i32 %3, 4096, !dbg !11320
  ret i32 %4, !dbg !11321
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11322 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11326
  %3 = load volatile i32, i32* %2, align 4, !dbg !11326
  %4 = and i32 %3, 12288, !dbg !11326
  ret i32 %4, !dbg !11327
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11328 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11330, metadata !DIExpression()), !dbg !11331
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11332
  %3 = load volatile i32, i32* %2, align 4, !dbg !11332
  %4 = and i32 %3, 1536, !dbg !11332
  ret i32 %4, !dbg !11333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11338, metadata !DIExpression()), !dbg !11339
  %2 = icmp eq i32 %0, 2, !dbg !11340
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11340
  %4 = icmp eq i32 %0, 1, !dbg !11340
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11340
  ret i32 %5, !dbg !11341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11346, metadata !DIExpression()), !dbg !11347
  %2 = icmp ult i32 %0, 3, !dbg !11348
  br i1 %2, label %3, label %6, !dbg !11348

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11348
  %5 = load i32, i32* %4, align 4, !dbg !11348
  br label %6, !dbg !11348

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11349
  ret i32 %7, !dbg !11351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11356, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32 %1, metadata !11357, metadata !DIExpression()), !dbg !11358
  %3 = icmp eq i32 %0, 4, !dbg !11359
  %4 = icmp eq i32 %1, 0, !dbg !11359
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11359
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11359
  ret i32 %6, !dbg !11360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11365, metadata !DIExpression()), !dbg !11366
  %2 = icmp eq i32 %0, 1, !dbg !11367
  %3 = select i1 %2, i32 768, i32 0, !dbg !11366
  ret i32 %3, !dbg !11369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11370 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11374, metadata !DIExpression()), !dbg !11375
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11376
  %3 = load volatile i32, i32* %2, align 4, !dbg !11376
  %4 = and i32 %3, -8193, !dbg !11376
  store volatile i32 %4, i32* %2, align 4, !dbg !11376
  ret void, !dbg !11377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11378 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11382, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i32 %1, metadata !11383, metadata !DIExpression()), !dbg !11385
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11386
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11386
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11386
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11384, metadata !DIExpression()), !dbg !11385
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11387
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11387
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11388
  ret void, !dbg !11389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11392, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.value(metadata i32 %1, metadata !11393, metadata !DIExpression()), !dbg !11395
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11396
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11396
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11396
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11394, metadata !DIExpression()), !dbg !11395
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11397
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11397
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11398
  ret void, !dbg !11399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11400 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11402, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.value(metadata i32 %1, metadata !11403, metadata !DIExpression()), !dbg !11405
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11406
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11406
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11406
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11404, metadata !DIExpression()), !dbg !11405
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11407
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11407
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11408
  ret void, !dbg !11409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11410 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11412, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i32 %1, metadata !11413, metadata !DIExpression()), !dbg !11415
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11416
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11416
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11416
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11414, metadata !DIExpression()), !dbg !11415
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11417
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11417
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11418
  ret void, !dbg !11419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11420 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11422, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 %1, metadata !11423, metadata !DIExpression()), !dbg !11427
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11428
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11428
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11428
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11424, metadata !DIExpression()), !dbg !11427
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11429
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11429
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11429
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11425, metadata !DIExpression()), !dbg !11427
  %10 = bitcast i32* %3 to i8*, !dbg !11430
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11430
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11431
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11431
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11435
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11435
  %15 = load i8*, i8** %14, align 4, !dbg !11435
  call void @llvm.dbg.value(metadata i32* %3, metadata !11426, metadata !DIExpression(DW_OP_deref)), !dbg !11427
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11436
  %17 = icmp slt i32 %16, 0, !dbg !11437
  br i1 %17, label %18, label %21, !dbg !11438

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11439
  %20 = zext i8 %19 to i32, !dbg !11439
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.108, i32 0, i32 0), i32 noundef %20) #27, !dbg !11439
  br label %26, !dbg !11445

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11446
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11446
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !11447
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11448
  %25 = load i32, i32* %3, align 4, !dbg !11449
  call void @llvm.dbg.value(metadata i32 %25, metadata !11426, metadata !DIExpression()), !dbg !11427
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !11450
  br label %26, !dbg !11451

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11451
  ret void, !dbg !11451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11452 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11454, metadata !DIExpression()), !dbg !11455
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11456
  %3 = load volatile i32, i32* %2, align 4, !dbg !11456
  %4 = or i32 %3, 8192, !dbg !11456
  store volatile i32 %4, i32* %2, align 4, !dbg !11456
  ret void, !dbg !11457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11460, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8* %1, metadata !11461, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i32* %2, metadata !11462, metadata !DIExpression()), !dbg !11464
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11465
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11465
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11465
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11463, metadata !DIExpression()), !dbg !11464
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11466
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11466
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11468
  br i1 %9, label %12, label %10, !dbg !11469

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11470
  br label %12, !dbg !11471

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11464
  ret i32 %13, !dbg !11472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef %0) unnamed_addr #5 !dbg !11473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11475, metadata !DIExpression()), !dbg !11476
  %2 = icmp eq i32 %0, 2, !dbg !11477
  %3 = select i1 %2, i8 87, i8 63, !dbg !11477
  %4 = icmp eq i32 %0, 1, !dbg !11477
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11477
  ret i8 %5, !dbg !11478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11479 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11483, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.value(metadata i32 0, metadata !11484, metadata !DIExpression()), !dbg !11485
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11486
  %3 = load volatile i32, i32* %2, align 4, !dbg !11486
  %4 = and i32 %3, -32769, !dbg !11486
  store volatile i32 %4, i32* %2, align 4, !dbg !11486
  ret void, !dbg !11487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11488 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11492, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32 %1, metadata !11493, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32 0, metadata !11494, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32 %2, metadata !11495, metadata !DIExpression()), !dbg !11496
  %4 = zext i32 %1 to i64, !dbg !11497
  %5 = mul nuw nsw i64 %4, 25, !dbg !11497
  %6 = zext i32 %2 to i64, !dbg !11497
  %7 = shl nuw nsw i64 %6, 2, !dbg !11497
  %8 = udiv i64 %5, %7, !dbg !11497
  %9 = trunc i64 %8 to i32, !dbg !11497
  %10 = udiv i32 %9, 100, !dbg !11497
  %11 = shl nuw nsw i32 %10, 4, !dbg !11497
  %12 = mul i32 %10, -100, !dbg !11497
  %13 = add i32 %12, %9, !dbg !11497
  %14 = shl i32 %13, 4, !dbg !11497
  %15 = add i32 %14, 50, !dbg !11497
  %16 = udiv i32 %15, 100, !dbg !11497
  %17 = and i32 %16, 240, !dbg !11497
  %18 = add nuw nsw i32 %17, %11, !dbg !11497
  %19 = and i32 %16, 15, !dbg !11497
  %20 = and i32 %18, 65520, !dbg !11500
  %21 = or i32 %20, %19, !dbg !11500
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11501
  store volatile i32 %21, i32* %22, align 4, !dbg !11502
  ret void, !dbg !11503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11504 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11506, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %1, metadata !11507, metadata !DIExpression()), !dbg !11508
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11509
  %4 = load volatile i32, i32* %3, align 4, !dbg !11509
  %5 = and i32 %4, -769, !dbg !11509
  %6 = or i32 %5, %1, !dbg !11509
  store volatile i32 %6, i32* %3, align 4, !dbg !11509
  ret void, !dbg !11510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11511 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11513, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.value(metadata i32 %1, metadata !11514, metadata !DIExpression()), !dbg !11515
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11516
  %4 = load volatile i32, i32* %3, align 4, !dbg !11516
  %5 = and i32 %4, -4097, !dbg !11516
  %6 = or i32 %5, %1, !dbg !11516
  store volatile i32 %6, i32* %3, align 4, !dbg !11516
  ret void, !dbg !11517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11518 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11520, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i32 %1, metadata !11521, metadata !DIExpression()), !dbg !11522
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11523
  %4 = load volatile i32, i32* %3, align 4, !dbg !11523
  %5 = and i32 %4, -12289, !dbg !11523
  %6 = or i32 %5, %1, !dbg !11523
  store volatile i32 %6, i32* %3, align 4, !dbg !11523
  ret void, !dbg !11524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11525 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11527, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata i32 %1, metadata !11528, metadata !DIExpression()), !dbg !11529
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11530
  %4 = load volatile i32, i32* %3, align 4, !dbg !11530
  %5 = and i32 %4, -1537, !dbg !11530
  %6 = or i32 %5, %1, !dbg !11530
  store volatile i32 %6, i32* %3, align 4, !dbg !11530
  ret void, !dbg !11531
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11532 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11534, metadata !DIExpression()), !dbg !11535
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11536
  %3 = load volatile i32, i32* %2, align 4, !dbg !11536
  %4 = lshr i32 %3, 3, !dbg !11537
  %5 = and i32 %4, 1, !dbg !11537
  ret i32 %5, !dbg !11538
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11539 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11541, metadata !DIExpression()), !dbg !11542
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11543
  %3 = load volatile i32, i32* %2, align 4, !dbg !11543
  %4 = and i32 %3, 1, !dbg !11543
  ret i32 %4, !dbg !11544
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11545 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11547, metadata !DIExpression()), !dbg !11548
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11549
  %3 = load volatile i32, i32* %2, align 4, !dbg !11549
  %4 = lshr i32 %3, 1, !dbg !11550
  %5 = and i32 %4, 1, !dbg !11550
  ret i32 %5, !dbg !11551
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11552 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11554, metadata !DIExpression()), !dbg !11555
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11556
  %3 = load volatile i32, i32* %2, align 4, !dbg !11556
  %4 = lshr i32 %3, 8, !dbg !11557
  %5 = and i32 %4, 1, !dbg !11557
  ret i32 %5, !dbg !11558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11559 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11561, metadata !DIExpression()), !dbg !11562
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11563
  store volatile i32 -257, i32* %2, align 4, !dbg !11563
  ret void, !dbg !11564
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11565 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11567, metadata !DIExpression()), !dbg !11569
  %3 = bitcast i32* %2 to i8*, !dbg !11570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11570
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11568, metadata !DIExpression()), !dbg !11571
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11572
  %5 = load volatile i32, i32* %4, align 4, !dbg !11572
  store volatile i32 %5, i32* %2, align 4, !dbg !11573
  %6 = load volatile i32, i32* %2, align 4, !dbg !11574
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11575
  %8 = load volatile i32, i32* %7, align 4, !dbg !11575
  store volatile i32 %8, i32* %2, align 4, !dbg !11576
  %9 = load volatile i32, i32* %2, align 4, !dbg !11577
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11578
  ret void, !dbg !11578
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11579 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11581, metadata !DIExpression()), !dbg !11583
  %3 = bitcast i32* %2 to i8*, !dbg !11584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11584
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11582, metadata !DIExpression()), !dbg !11585
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11586
  %5 = load volatile i32, i32* %4, align 4, !dbg !11586
  store volatile i32 %5, i32* %2, align 4, !dbg !11587
  %6 = load volatile i32, i32* %2, align 4, !dbg !11588
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11589
  %8 = load volatile i32, i32* %7, align 4, !dbg !11589
  store volatile i32 %8, i32* %2, align 4, !dbg !11590
  %9 = load volatile i32, i32* %2, align 4, !dbg !11591
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11592
  ret void, !dbg !11592
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11593 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11595, metadata !DIExpression()), !dbg !11597
  %3 = bitcast i32* %2 to i8*, !dbg !11598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11598
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11596, metadata !DIExpression()), !dbg !11599
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11600
  %5 = load volatile i32, i32* %4, align 4, !dbg !11600
  store volatile i32 %5, i32* %2, align 4, !dbg !11601
  %6 = load volatile i32, i32* %2, align 4, !dbg !11602
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11603
  %8 = load volatile i32, i32* %7, align 4, !dbg !11603
  store volatile i32 %8, i32* %2, align 4, !dbg !11604
  %9 = load volatile i32, i32* %2, align 4, !dbg !11605
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11606
  ret void, !dbg !11606
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11607 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11609, metadata !DIExpression()), !dbg !11611
  %3 = bitcast i32* %2 to i8*, !dbg !11612
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11612
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11610, metadata !DIExpression()), !dbg !11613
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11614
  %5 = load volatile i32, i32* %4, align 4, !dbg !11614
  store volatile i32 %5, i32* %2, align 4, !dbg !11615
  %6 = load volatile i32, i32* %2, align 4, !dbg !11616
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11617
  %8 = load volatile i32, i32* %7, align 4, !dbg !11617
  store volatile i32 %8, i32* %2, align 4, !dbg !11618
  %9 = load volatile i32, i32* %2, align 4, !dbg !11619
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11620
  ret void, !dbg !11620
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11621 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11623, metadata !DIExpression()), !dbg !11624
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11625
  %3 = load volatile i32, i32* %2, align 4, !dbg !11625
  %4 = lshr i32 %3, 7, !dbg !11626
  %5 = and i32 %4, 1, !dbg !11626
  ret i32 %5, !dbg !11627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !11628 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11632, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i8 %1, metadata !11633, metadata !DIExpression()), !dbg !11634
  %3 = zext i8 %1 to i32, !dbg !11635
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11636
  store volatile i32 %3, i32* %4, align 4, !dbg !11637
  ret void, !dbg !11638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11639 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11641, metadata !DIExpression()), !dbg !11642
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11643
  %3 = load volatile i32, i32* %2, align 4, !dbg !11643
  %4 = lshr i32 %3, 5, !dbg !11644
  %5 = and i32 %4, 1, !dbg !11644
  ret i32 %5, !dbg !11645
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11646 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11650, metadata !DIExpression()), !dbg !11651
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11652
  %3 = load volatile i32, i32* %2, align 4, !dbg !11652
  %4 = trunc i32 %3 to i8, !dbg !11653
  ret i8 %4, !dbg !11654
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11657, metadata !DIExpression()), !dbg !11663
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11664
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11664
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11664
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11658, metadata !DIExpression()), !dbg !11663
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11665
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11665
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11665
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11659, metadata !DIExpression()), !dbg !11663
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11666
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11667
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11667
  %10 = tail call fastcc zeroext i1 @device_is_ready.110(%struct.device* noundef %9) #26, !dbg !11669
  br i1 %10, label %14, label %11, !dbg !11670

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11671
  %13 = zext i8 %12 to i32, !dbg !11671
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.111, i32 0, i32 0), i32 noundef %13) #27, !dbg !11671
  br label %62, !dbg !11677

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11678
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11679
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11679
  %18 = load i8*, i8** %17, align 4, !dbg !11679
  %19 = tail call fastcc i32 @clock_control_on.112(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %19, metadata !11662, metadata !DIExpression()), !dbg !11663
  %20 = icmp eq i32 %19, 0, !dbg !11681
  br i1 %20, label %24, label %21, !dbg !11683

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 1) #26, !dbg !11684
  %23 = zext i8 %22 to i32, !dbg !11684
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.113, i32 0, i32 0), i32 noundef %23) #27, !dbg !11684
  br label %62, !dbg !11690

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11691
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11691
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !11692
  call void @llvm.dbg.value(metadata i32 %27, metadata !11662, metadata !DIExpression()), !dbg !11663
  %28 = icmp slt i32 %27, 0, !dbg !11693
  br i1 %28, label %62, label %29, !dbg !11695

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11696
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11696
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !11697
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11698
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !11699
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11700
  %34 = load i32, i32* %33, align 4, !dbg !11700
  %35 = icmp ult i32 %34, 3, !dbg !11702
  br i1 %35, label %39, label %36, !dbg !11702

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.107(i32 noundef 2) #26, !dbg !11703
  %38 = zext i8 %37 to i32, !dbg !11703
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.114, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11703
  call void @llvm.dbg.value(metadata i32 0, metadata !11660, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.value(metadata i32 0, metadata !11661, metadata !DIExpression()), !dbg !11663
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11702
  %41 = load i32, i32* %40, align 4, !dbg !11702
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !11702
  %43 = load i32, i32* %42, align 4, !dbg !11702
  br label %44, !dbg !11702

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11712
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11712
  call void @llvm.dbg.value(metadata i32 %46, metadata !11661, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.value(metadata i32 %45, metadata !11660, metadata !DIExpression()), !dbg !11663
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11713
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !11714
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11715
  %49 = load i8, i8* %48, align 4, !dbg !11715, !range !7658
  %50 = icmp eq i8 %49, 0, !dbg !11715
  br i1 %50, label %52, label %51, !dbg !11717

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11718
  br label %52, !dbg !11720

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11721
  %54 = load i32, i32* %53, align 4, !dbg !11721
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !11722
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11723
  %56 = load i8, i8* %55, align 4, !dbg !11723, !range !7658
  %57 = icmp eq i8 %56, 0, !dbg !11723
  br i1 %57, label %60, label %58, !dbg !11725

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11726
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !11728
  br label %60, !dbg !11729

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11730
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !11731
  br label %62, !dbg !11732

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11663
  ret i32 %63, !dbg !11733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11734 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11738, metadata !DIExpression()), !dbg !11742
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11743
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11743
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11743
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11739, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11740, metadata !DIExpression()), !dbg !11742
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11744
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11745
  ret void, !dbg !11746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.110(%struct.device* noundef %0) unnamed_addr #1 !dbg !11747 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11751, metadata !DIExpression()), !dbg !11752
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11753, !srcloc !11755
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.115(%struct.device* noundef %0) #26, !dbg !11756
  ret i1 %2, !dbg !11757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.112(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11758 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11760, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.value(metadata i8* %1, metadata !11761, metadata !DIExpression()), !dbg !11763
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11764
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11764
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11764
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11762, metadata !DIExpression()), !dbg !11763
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11765
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11765
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11766
  ret i32 %8, !dbg !11767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11768 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11772, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i8 0, metadata !11773, metadata !DIExpression()), !dbg !11776
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11777
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11775, metadata !DIExpression(DW_OP_deref)), !dbg !11776
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11778
  call void @llvm.dbg.value(metadata i32 %4, metadata !11774, metadata !DIExpression()), !dbg !11776
  %5 = icmp slt i32 %4, 0, !dbg !11779
  br i1 %5, label %9, label %6, !dbg !11781

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11782
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11775, metadata !DIExpression()), !dbg !11776
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11783
  br label %9, !dbg !11784

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11776
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11785
  ret i32 %10, !dbg !11785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11786 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11788, metadata !DIExpression()), !dbg !11792
  call void @llvm.dbg.value(metadata i32 12, metadata !11789, metadata !DIExpression()), !dbg !11792
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11793

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11794, metadata !DIExpression()) #25, !dbg !11800
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !11803, !srcloc !11804
  call void @llvm.dbg.value(metadata i32 %4, metadata !11799, metadata !DIExpression()) #25, !dbg !11800
  %5 = or i32 %4, 12, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %5, metadata !11790, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 %5, metadata !11807, metadata !DIExpression()) #25, !dbg !11814
  call void @llvm.dbg.value(metadata i32* %2, metadata !11812, metadata !DIExpression()) #25, !dbg !11814
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !11816, !srcloc !11817
  call void @llvm.dbg.value(metadata i32 %6, metadata !11813, metadata !DIExpression()) #25, !dbg !11814
  %7 = icmp eq i32 %6, 0, !dbg !11793
  br i1 %7, label %8, label %3, !dbg !11805, !llvm.loop !11818

8:                                                ; preds = %3
  ret void, !dbg !11819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11820 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11822, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 %1, metadata !11823, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 %2, metadata !11824, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 0, metadata !11825, metadata !DIExpression()), !dbg !11826
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11827
  %5 = load volatile i32, i32* %4, align 4, !dbg !11827
  %6 = and i32 %5, -5633, !dbg !11827
  %7 = or i32 %2, %1, !dbg !11827
  %8 = or i32 %7, %6, !dbg !11827
  store volatile i32 %8, i32* %4, align 4, !dbg !11827
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11828
  %10 = load volatile i32, i32* %9, align 4, !dbg !11828
  %11 = and i32 %10, -12289, !dbg !11828
  store volatile i32 %11, i32* %9, align 4, !dbg !11828
  ret void, !dbg !11829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11830 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11832, metadata !DIExpression()), !dbg !11833
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11834
  %3 = load volatile i32, i32* %2, align 4, !dbg !11834
  %4 = or i32 %3, 8, !dbg !11834
  store volatile i32 %4, i32* %2, align 4, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11836 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11840, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11841, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i32 0, metadata !11842, metadata !DIExpression()), !dbg !11843
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11844
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11844
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11845
  %5 = load i8, i8* %4, align 4, !dbg !11845
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !11846
  ret i32 %6, !dbg !11847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.115(%struct.device* noundef %0) unnamed_addr #1 !dbg !11848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11850, metadata !DIExpression()), !dbg !11851
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !11852
  ret i1 %2, !dbg !11853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11856, metadata !DIExpression()), !dbg !11857
  tail call fastcc void @__NVIC_SetPriority.117() #26, !dbg !11858
  store i32 8399, i32* @last_load, align 4, !dbg !11859
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11860
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11861
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11862
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11863
  %3 = or i32 %2, 7, !dbg !11863
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11863
  ret i32 0, !dbg !11864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.117() unnamed_addr #16 !dbg !11865 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11867, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata i32 1, metadata !11868, metadata !DIExpression()), !dbg !11869
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11870
  ret void, !dbg !11873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11876, metadata !DIExpression()), !dbg !11878
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11879
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11880
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11881
  %5 = add i32 %4, %3, !dbg !11881
  store i32 %5, i32* @cycle_count, align 4, !dbg !11881
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11882
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11883
  %7 = sub i32 %5, %6, !dbg !11886
  %8 = udiv i32 %7, 8400, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %8, metadata !11877, metadata !DIExpression()), !dbg !11878
  %9 = mul nuw i32 %8, 8400, !dbg !11888
  %10 = add i32 %9, %6, !dbg !11889
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11889
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !11890
  tail call void @z_arm_int_exit() #27, !dbg !11891
  ret void, !dbg !11892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11893 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %1, metadata !11895, metadata !DIExpression()), !dbg !11899
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11900
  call void @llvm.dbg.value(metadata i32 %2, metadata !11896, metadata !DIExpression()), !dbg !11899
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %3, metadata !11897, metadata !DIExpression()), !dbg !11899
  %4 = and i32 %2, 65536, !dbg !11902
  %5 = icmp ne i32 %4, 0, !dbg !11902
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11904
  %8 = load i32, i32* @last_load, align 4, !dbg !11899
  br i1 %7, label %9, label %13, !dbg !11904

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11905
  %11 = add i32 %10, %8, !dbg !11905
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11905
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11907
  br label %13, !dbg !11908

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11909
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11910
  %16 = add i32 %14, %15, !dbg !11911
  ret i32 %16, !dbg !11912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11917, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i1 %1, metadata !11918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11930
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11931
  br i1 %4, label %5, label %8, !dbg !11931

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11933
  %7 = and i32 %6, -2, !dbg !11933
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11933
  store i32 -16777216, i32* @last_load, align 4, !dbg !11935
  br label %54, !dbg !11936

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %9, metadata !11922, metadata !DIExpression()), !dbg !11930
  br i1 %3, label %18, label %10, !dbg !11938

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11938
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()), !dbg !11930
  %12 = icmp slt i32 %11, 1, !dbg !11939
  br i1 %12, label %18, label %13, !dbg !11939

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11939
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11939
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11939
  %17 = add nuw nsw i32 %16, 8399, !dbg !11939
  br label %18, !dbg !11939

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11940, metadata !DIExpression()) #25, !dbg !11947
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11949, !srcloc !11955
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11949
  call void @llvm.dbg.value(metadata i32 %21, metadata !11952, metadata !DIExpression()) #25, !dbg !11956
  call void @llvm.dbg.value(metadata i32 undef, metadata !11953, metadata !DIExpression()) #25, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %21, metadata !11946, metadata !DIExpression()) #25, !dbg !11947
  call void @llvm.dbg.value(metadata i32 %21, metadata !11923, metadata !DIExpression()), !dbg !11930
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %22, metadata !11928, metadata !DIExpression()), !dbg !11930
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11958
  call void @llvm.dbg.value(metadata i32 %23, metadata !11920, metadata !DIExpression()), !dbg !11930
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11959
  %25 = add i32 %24, %22, !dbg !11959
  store i32 %25, i32* @cycle_count, align 4, !dbg !11959
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11960
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11961
  %27 = sub i32 %25, %26, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %27, metadata !11929, metadata !DIExpression()), !dbg !11930
  %28 = icmp slt i32 %27, 0, !dbg !11963
  br i1 %28, label %38, label %29, !dbg !11965

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11919, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 undef, metadata !11919, metadata !DIExpression()), !dbg !11930
  %30 = add nuw i32 %19, %27, !dbg !11966
  %31 = urem i32 %30, 8400, !dbg !11968
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11919, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11930
  %32 = sub nuw nsw i32 %19, %31, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %32, metadata !11919, metadata !DIExpression()), !dbg !11930
  %33 = icmp ugt i32 %32, 1024, !dbg !11970
  br i1 %33, label %34, label %36, !dbg !11970

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11919, metadata !DIExpression()), !dbg !11930
  %35 = icmp ugt i32 %32, 16766400, !dbg !11971
  br i1 %35, label %38, label %36, !dbg !11973

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11974
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %40, metadata !11921, metadata !DIExpression()), !dbg !11930
  %41 = add nsw i32 %39, -1, !dbg !11976
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11977
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11978
  %42 = icmp ult i32 %23, %40, !dbg !11979
  br i1 %42, label %43, label %48, !dbg !11981

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11982
  %45 = add i32 %23, %9, !dbg !11984
  %46 = sub i32 %45, %40, !dbg !11985
  %47 = add i32 %46, %44, !dbg !11982
  br label %52, !dbg !11986

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11987
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11989
  %51 = add i32 %49, %50, !dbg !11989
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11990
  store i32 %53, i32* @cycle_count, align 4, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %21, metadata !11991, metadata !DIExpression()) #25, !dbg !11997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11996, metadata !DIExpression()) #25, !dbg !11997
  call void @llvm.dbg.value(metadata i32 %21, metadata !11999, metadata !DIExpression()) #25, !dbg !12002
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !12004, !srcloc !12005
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12007 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11940, metadata !DIExpression()) #25, !dbg !12011
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12013, !srcloc !11955
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12013
  call void @llvm.dbg.value(metadata i32 %2, metadata !11952, metadata !DIExpression()) #25, !dbg !12015
  call void @llvm.dbg.value(metadata i32 undef, metadata !11953, metadata !DIExpression()) #25, !dbg !12015
  call void @llvm.dbg.value(metadata i32 %2, metadata !11946, metadata !DIExpression()) #25, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %2, metadata !12009, metadata !DIExpression()), !dbg !12016
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !12017
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12018
  %5 = add i32 %4, %3, !dbg !12019
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12020
  %7 = sub i32 %5, %6, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %7, metadata !12010, metadata !DIExpression()), !dbg !12016
  call void @llvm.dbg.value(metadata i32 %2, metadata !11991, metadata !DIExpression()) #25, !dbg !12022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11996, metadata !DIExpression()) #25, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %2, metadata !11999, metadata !DIExpression()) #25, !dbg !12024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !12026, !srcloc !12005
  %8 = udiv i32 %7, 8400, !dbg !12027
  ret i32 %8, !dbg !12028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12029 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11940, metadata !DIExpression()) #25, !dbg !12033
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12035, !srcloc !11955
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12035
  call void @llvm.dbg.value(metadata i32 %2, metadata !11952, metadata !DIExpression()) #25, !dbg !12037
  call void @llvm.dbg.value(metadata i32 undef, metadata !11953, metadata !DIExpression()) #25, !dbg !12037
  call void @llvm.dbg.value(metadata i32 %2, metadata !11946, metadata !DIExpression()) #25, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %2, metadata !12031, metadata !DIExpression()), !dbg !12038
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !12039
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12040
  %5 = add i32 %4, %3, !dbg !12041
  call void @llvm.dbg.value(metadata i32 %5, metadata !12032, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.value(metadata i32 %2, metadata !11991, metadata !DIExpression()) #25, !dbg !12042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11996, metadata !DIExpression()) #25, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %2, metadata !11999, metadata !DIExpression()) #25, !dbg !12044
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !12046, !srcloc !12005
  ret i32 %5, !dbg !12047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !12048 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12049
  %2 = icmp eq i32 %1, -16777216, !dbg !12051
  br i1 %2, label %3, label %6, !dbg !12052

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12053
  %5 = or i32 %4, 1, !dbg !12053
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12053
  br label %6, !dbg !12055

6:                                                ; preds = %3, %0
  ret void, !dbg !12056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !12057 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12058
  %2 = and i32 %1, -2, !dbg !12058
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12058
  ret void, !dbg !12059
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !12060 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12086, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i8 %1, metadata !12087, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12088, metadata !DIExpression()), !dbg !12089
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12090
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12090
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12089
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12091
  %8 = load i8, i8* %6, align 4, !dbg !12092
  %9 = zext i8 %8 to i32, !dbg !12093
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12093
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12094
  br i1 %11, label %18, label %24, !dbg !12095

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12089
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12091
  %14 = load i8, i8* %6, align 4, !dbg !12092
  %15 = zext i8 %14 to i32, !dbg !12093
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12093
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12094
  br i1 %17, label %18, label %24, !dbg !12095, !llvm.loop !12096

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12098
  %21 = load i8, i8* %20, align 1, !dbg !12098
  %22 = icmp eq i8 %21, %1, !dbg !12101
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12102
  br i1 %22, label %24, label %12, !dbg !12103

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12089
  ret i32 %25, !dbg !12104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12105 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12116, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i8 %1, metadata !12117, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i32 %2, metadata !12118, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i32 0, metadata !12121, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i32 0, metadata !12122, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i8 0, metadata !12123, metadata !DIExpression()), !dbg !12133
  %4 = icmp eq i8 %1, 0, !dbg !12134
  br i1 %4, label %35, label %5, !dbg !12135

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12134
  br label %9, !dbg !12135

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12123, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.value(metadata i32 %29, metadata !12121, metadata !DIExpression()), !dbg !12132
  %8 = icmp eq i32 %34, %6, !dbg !12134
  br i1 %8, label %35, label %9, !dbg !12135, !llvm.loop !12136

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12123, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.value(metadata i32 %11, metadata !12121, metadata !DIExpression()), !dbg !12132
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12138
  %13 = load i32, i32* %12, align 4, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %13, metadata !12120, metadata !DIExpression()), !dbg !12132
  %14 = and i32 %13, 31, !dbg !12139
  %15 = icmp ult i32 %14, 16, !dbg !12140
  br i1 %15, label %16, label %20, !dbg !12141

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12142
  %18 = load i32, i32* %17, align 4, !dbg !12142
  %19 = or i32 %18, 32, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %19, metadata !12121, metadata !DIExpression()), !dbg !12132
  br label %28, !dbg !12145

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12146

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12147
  %23 = load i32, i32* %22, align 4, !dbg !12147
  call void @llvm.dbg.value(metadata i32 %23, metadata !12125, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12148
  %24 = lshr i32 %23, 7, !dbg !12149
  %25 = and i32 %24, 16, !dbg !12149
  %26 = or i32 %25, %23, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %26, metadata !12121, metadata !DIExpression()), !dbg !12132
  br label %28, !dbg !12150

27:                                               ; preds = %20
  br label %28, !dbg !12151

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12132
  call void @llvm.dbg.value(metadata i32 %29, metadata !12121, metadata !DIExpression()), !dbg !12132
  %30 = lshr i32 %13, 5, !dbg !12151
  %31 = and i32 %30, 255, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %31, metadata !12119, metadata !DIExpression()), !dbg !12132
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12152
  call void @llvm.dbg.value(metadata i32 %32, metadata !12122, metadata !DIExpression()), !dbg !12132
  %33 = icmp slt i32 %32, 0, !dbg !12153
  %34 = add nuw nsw i32 %10, 1, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %34, metadata !12123, metadata !DIExpression()), !dbg !12133
  br i1 %33, label %35, label %7, !dbg !12156

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12162, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.value(metadata i32 %1, metadata !12163, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.value(metadata i32 %2, metadata !12164, metadata !DIExpression()), !dbg !12166
  %4 = icmp ugt i32 %0, 175, !dbg !12167
  br i1 %4, label %16, label %5, !dbg !12169

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12170
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12171
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12171
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12165, metadata !DIExpression()), !dbg !12166
  %9 = add nsw i32 %6, -8, !dbg !12172
  %10 = icmp ult i32 %9, 3, !dbg !12172
  br i1 %10, label %16, label %11, !dbg !12174

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.122(%struct.device* noundef %8) #26, !dbg !12175
  br i1 %12, label %13, label %16, !dbg !12176

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12177
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12178
  br label %16, !dbg !12179

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12166
  ret i32 %17, !dbg !12180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122(%struct.device* noundef %0) unnamed_addr #1 !dbg !12181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12185, metadata !DIExpression()), !dbg !12186
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12187, !srcloc !12189
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123(%struct.device* noundef %0) #26, !dbg !12190
  ret i1 %2, !dbg !12191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123(%struct.device* noundef %0) unnamed_addr #1 !dbg !12192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12194, metadata !DIExpression()), !dbg !12195
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12196
  ret i1 %2, !dbg !12197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12198 {
  ret void, !dbg !12199
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !12200 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12202, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 0, metadata !12203, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 2, metadata !12204, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 0, metadata !12205, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 2, metadata !12206, metadata !DIExpression()), !dbg !12207
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12208
  %2 = and i32 %1, 12, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %2, metadata !12202, metadata !DIExpression()), !dbg !12207
  %3 = icmp eq i32 %2, 8, !dbg !12210
  br i1 %3, label %4, label %18, !dbg !12210

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12211
  call void @llvm.dbg.value(metadata i32 %5, metadata !12205, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12207
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12213
  %7 = and i32 %6, 63, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %7, metadata !12206, metadata !DIExpression()), !dbg !12207
  %8 = udiv i32 16000000, %7, !dbg !12215
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12215
  %10 = lshr i32 %9, 6, !dbg !12215
  %11 = and i32 %10, 511, !dbg !12215
  %12 = mul i32 %11, %8, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %12, metadata !12203, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 %12, metadata !12203, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 %12, metadata !12203, metadata !DIExpression()), !dbg !12207
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12217
  %14 = lshr i32 %13, 15, !dbg !12218
  %15 = and i32 %14, 6, !dbg !12218
  %16 = add nuw nsw i32 %15, 2, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %16, metadata !12204, metadata !DIExpression()), !dbg !12207
  %17 = udiv i32 %12, %16, !dbg !12219
  br label %18, !dbg !12220

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12221
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12222
  %21 = lshr i32 %20, 4, !dbg !12223
  %22 = and i32 %21, 15, !dbg !12223
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12224
  %24 = load i8, i8* %23, align 1, !dbg !12224
  %25 = zext i8 %24 to i32, !dbg !12224
  call void @llvm.dbg.value(metadata i32 %25, metadata !12202, metadata !DIExpression()), !dbg !12207
  %26 = lshr i32 %19, %25, !dbg !12225
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12225
  ret void, !dbg !12226
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12227 {
  ret i32 0, !dbg !12232
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12233 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12260, metadata !DIExpression()), !dbg !12271
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12272
  br i1 %3, label %317, label %4, !dbg !12274

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12275
  %6 = load i32, i32* %5, align 4, !dbg !12275
  %7 = and i32 %6, 1, !dbg !12277
  %8 = icmp eq i32 %7, 0, !dbg !12278
  br i1 %8, label %66, label %9, !dbg !12279

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12280
  %11 = and i32 %10, 12, !dbg !12280
  %12 = icmp eq i32 %11, 4, !dbg !12283
  br i1 %12, label %21, label %13, !dbg !12284

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12285
  %15 = and i32 %14, 12, !dbg !12285
  %16 = icmp eq i32 %15, 8, !dbg !12286
  br i1 %16, label %17, label %29, !dbg !12287

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12288
  %19 = and i32 %18, 4194304, !dbg !12289
  %20 = icmp eq i32 %19, 0, !dbg !12290
  br i1 %20, label %29, label %21, !dbg !12291

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12292
  %23 = and i32 %22, 131072, !dbg !12292
  %24 = icmp eq i32 %23, 0, !dbg !12292
  br i1 %24, label %66, label %25, !dbg !12295

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12296
  %27 = load i32, i32* %26, align 4, !dbg !12296
  %28 = icmp eq i32 %27, 0, !dbg !12297
  br i1 %28, label %317, label %66, !dbg !12298

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12299
  %31 = load i32, i32* %30, align 4, !dbg !12299
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12303

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12304
  %34 = or i32 %33, 65536, !dbg !12304
  br label %45, !dbg !12304

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12306
  %37 = or i32 %36, 262144, !dbg !12306
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12306
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12306
  %39 = or i32 %38, 65536, !dbg !12306
  br label %45, !dbg !12306

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12309
  %42 = and i32 %41, -65537, !dbg !12309
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12309
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12309
  %44 = and i32 %43, -262145, !dbg !12309
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12311
  %47 = load i32, i32* %30, align 4, !dbg !12312
  %48 = icmp eq i32 %47, 0, !dbg !12314
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %49, metadata !12261, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %49, metadata !12261, metadata !DIExpression()), !dbg !12271
  br i1 %48, label %58, label %50, !dbg !12316

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12317
  %52 = and i32 %51, 131072, !dbg !12319
  %53 = icmp eq i32 %52, 0, !dbg !12319
  br i1 %53, label %54, label %66, !dbg !12320

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !12321
  %56 = sub i32 %55, %49, !dbg !12324
  %57 = icmp ugt i32 %56, 100, !dbg !12325
  br i1 %57, label %317, label %50, !dbg !12326, !llvm.loop !12327

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12329
  %60 = and i32 %59, 131072, !dbg !12329
  %61 = icmp eq i32 %60, 0, !dbg !12329
  br i1 %61, label %66, label %62, !dbg !12331

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !12332
  %64 = sub i32 %63, %49, !dbg !12335
  %65 = icmp ugt i32 %64, 100, !dbg !12336
  br i1 %65, label %317, label %58, !dbg !12337, !llvm.loop !12338

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12340
  %68 = and i32 %67, 2, !dbg !12342
  %69 = icmp eq i32 %68, 0, !dbg !12343
  br i1 %69, label %121, label %70, !dbg !12344

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12345
  %72 = and i32 %71, 12, !dbg !12345
  %73 = icmp eq i32 %72, 0, !dbg !12348
  br i1 %73, label %82, label %74, !dbg !12349

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12350
  %76 = and i32 %75, 12, !dbg !12350
  %77 = icmp eq i32 %76, 8, !dbg !12351
  br i1 %77, label %78, label %90, !dbg !12352

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12353
  %80 = and i32 %79, 4194304, !dbg !12354
  %81 = icmp eq i32 %80, 0, !dbg !12355
  br i1 %81, label %82, label %90, !dbg !12356

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12357
  %84 = and i32 %83, 2, !dbg !12357
  %85 = icmp eq i32 %84, 0, !dbg !12357
  br i1 %85, label %114, label %86, !dbg !12360

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12361
  %88 = load i32, i32* %87, align 4, !dbg !12361
  %89 = icmp eq i32 %88, 1, !dbg !12362
  br i1 %89, label %114, label %317, !dbg !12363

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12364
  %92 = load i32, i32* %91, align 4, !dbg !12364
  %93 = icmp eq i32 %92, 0, !dbg !12367
  br i1 %93, label %104, label %94, !dbg !12368

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12369
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !12371
  call void @llvm.dbg.value(metadata i32 %95, metadata !12261, metadata !DIExpression()), !dbg !12271
  br label %96, !dbg !12372

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12373
  %98 = and i32 %97, 2, !dbg !12374
  %99 = icmp eq i32 %98, 0, !dbg !12374
  br i1 %99, label %100, label %114, !dbg !12372

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !12375
  %102 = sub i32 %101, %95, !dbg !12378
  %103 = icmp ugt i32 %102, 2, !dbg !12379
  br i1 %103, label %317, label %96, !dbg !12380, !llvm.loop !12381

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12383
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !12385
  call void @llvm.dbg.value(metadata i32 %105, metadata !12261, metadata !DIExpression()), !dbg !12271
  br label %106, !dbg !12386

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12387
  %108 = and i32 %107, 2, !dbg !12387
  %109 = icmp eq i32 %108, 0, !dbg !12387
  br i1 %109, label %121, label %110, !dbg !12386

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !12388
  %112 = sub i32 %111, %105, !dbg !12391
  %113 = icmp ugt i32 %112, 2, !dbg !12392
  br i1 %113, label %317, label %106, !dbg !12393, !llvm.loop !12394

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12396
  %116 = and i32 %115, -249, !dbg !12396
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12396
  %118 = load i32, i32* %117, align 4, !dbg !12396
  %119 = shl i32 %118, 3, !dbg !12396
  %120 = or i32 %119, %116, !dbg !12396
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12396
  br label %121, !dbg !12397

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12397
  %123 = and i32 %122, 8, !dbg !12399
  %124 = icmp eq i32 %123, 0, !dbg !12400
  br i1 %124, label %149, label %125, !dbg !12401

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12402
  %127 = load i32, i32* %126, align 4, !dbg !12402
  %128 = icmp eq i32 %127, 0, !dbg !12405
  br i1 %128, label %139, label %129, !dbg !12406

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12407
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !12409
  call void @llvm.dbg.value(metadata i32 %130, metadata !12261, metadata !DIExpression()), !dbg !12271
  br label %131, !dbg !12410

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12411
  %133 = and i32 %132, 2, !dbg !12412
  %134 = icmp eq i32 %133, 0, !dbg !12412
  br i1 %134, label %135, label %149, !dbg !12410

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !12413
  %137 = sub i32 %136, %130, !dbg !12416
  %138 = icmp ugt i32 %137, 2, !dbg !12417
  br i1 %138, label %317, label %131, !dbg !12418, !llvm.loop !12419

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12421
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !12423
  call void @llvm.dbg.value(metadata i32 %140, metadata !12261, metadata !DIExpression()), !dbg !12271
  br label %141, !dbg !12424

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12425
  %143 = and i32 %142, 2, !dbg !12425
  %144 = icmp eq i32 %143, 0, !dbg !12425
  br i1 %144, label %149, label %145, !dbg !12424

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !12426
  %147 = sub i32 %146, %140, !dbg !12429
  %148 = icmp ugt i32 %147, 2, !dbg !12430
  br i1 %148, label %317, label %141, !dbg !12431, !llvm.loop !12432

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12434
  %151 = and i32 %150, 4, !dbg !12435
  %152 = icmp eq i32 %151, 0, !dbg !12436
  br i1 %152, label %221, label %153, !dbg !12437

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12263, metadata !DIExpression()), !dbg !12438
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12439
  %155 = and i32 %154, 268435456, !dbg !12439
  %156 = icmp eq i32 %155, 0, !dbg !12439
  br i1 %156, label %157, label %164, !dbg !12440

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12441
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12441
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12267, metadata !DIExpression()), !dbg !12441
  store volatile i32 0, i32* %2, align 4, !dbg !12441
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12441
  %160 = or i32 %159, 268435456, !dbg !12441
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12441
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12441
  %162 = and i32 %161, 268435456, !dbg !12441
  store volatile i32 %162, i32* %2, align 4, !dbg !12441
  %163 = load volatile i32, i32* %2, align 4, !dbg !12441
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12442
  call void @llvm.dbg.value(metadata i32 1, metadata !12263, metadata !DIExpression()), !dbg !12438
  br label %164, !dbg !12443

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()), !dbg !12438
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12444
  %166 = and i32 %165, 256, !dbg !12444
  %167 = icmp eq i32 %166, 0, !dbg !12444
  br i1 %167, label %168, label %180, !dbg !12446

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12447
  %170 = or i32 %169, 256, !dbg !12447
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12447
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !12449
  call void @llvm.dbg.value(metadata i32 %171, metadata !12261, metadata !DIExpression()), !dbg !12271
  br label %172, !dbg !12450

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12451
  %174 = and i32 %173, 256, !dbg !12451
  %175 = icmp eq i32 %174, 0, !dbg !12451
  br i1 %175, label %176, label %180, !dbg !12450

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !12452
  %178 = sub i32 %177, %171, !dbg !12455
  %179 = icmp ugt i32 %178, 2, !dbg !12456
  br i1 %179, label %317, label %172, !dbg !12457, !llvm.loop !12458

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12460
  %182 = load i32, i32* %181, align 4, !dbg !12460
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12463

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12464
  %185 = or i32 %184, 1, !dbg !12464
  br label %196, !dbg !12464

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12466
  %188 = or i32 %187, 4, !dbg !12466
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12466
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12466
  %190 = or i32 %189, 1, !dbg !12466
  br label %196, !dbg !12466

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12469
  %193 = and i32 %192, -2, !dbg !12469
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12469
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12469
  %195 = and i32 %194, -5, !dbg !12469
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12471
  %198 = load i32, i32* %181, align 4, !dbg !12472
  %199 = icmp eq i32 %198, 0, !dbg !12474
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !12475
  call void @llvm.dbg.value(metadata i32 %200, metadata !12261, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %200, metadata !12261, metadata !DIExpression()), !dbg !12271
  br i1 %199, label %209, label %201, !dbg !12476

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12477
  %203 = and i32 %202, 2, !dbg !12479
  %204 = icmp eq i32 %203, 0, !dbg !12479
  br i1 %204, label %205, label %217, !dbg !12480

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12481
  %207 = sub i32 %206, %200, !dbg !12484
  %208 = icmp ugt i32 %207, 5000, !dbg !12485
  br i1 %208, label %317, label %201, !dbg !12486, !llvm.loop !12487

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12489
  %211 = and i32 %210, 2, !dbg !12489
  %212 = icmp eq i32 %211, 0, !dbg !12489
  br i1 %212, label %217, label %213, !dbg !12491

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !12492
  %215 = sub i32 %214, %200, !dbg !12495
  %216 = icmp ugt i32 %215, 5000, !dbg !12496
  br i1 %216, label %317, label %209, !dbg !12497, !llvm.loop !12498

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12500

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12501
  %220 = and i32 %219, -268435457, !dbg !12501
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12501
  br label %221, !dbg !12504

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12505
  %223 = load i32, i32* %222, align 4, !dbg !12505
  %224 = icmp eq i32 %223, 0, !dbg !12507
  br i1 %224, label %316, label %225, !dbg !12508

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12509
  %227 = and i32 %226, 12, !dbg !12509
  %228 = icmp eq i32 %227, 8, !dbg !12512
  br i1 %228, label %277, label %229, !dbg !12513

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12514
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12517
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !12517
  call void @llvm.dbg.value(metadata i32 %231, metadata !12261, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %231, metadata !12261, metadata !DIExpression()), !dbg !12271
  br i1 %230, label %232, label %269, !dbg !12518

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12519
  %234 = and i32 %233, 33554432, !dbg !12519
  %235 = icmp eq i32 %234, 0, !dbg !12519
  br i1 %235, label %240, label %236, !dbg !12521

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !12522
  %238 = sub i32 %237, %231, !dbg !12525
  %239 = icmp ugt i32 %238, 2, !dbg !12526
  br i1 %239, label %317, label %232, !dbg !12527, !llvm.loop !12528

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12530
  %242 = load i32, i32* %241, align 4, !dbg !12530
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12530
  %244 = load i32, i32* %243, align 4, !dbg !12530
  %245 = or i32 %244, %242, !dbg !12530
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12530
  %247 = load i32, i32* %246, align 4, !dbg !12530
  %248 = shl i32 %247, 6, !dbg !12530
  %249 = or i32 %245, %248, !dbg !12530
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12530
  %251 = load i32, i32* %250, align 4, !dbg !12530
  %252 = shl i32 %251, 15, !dbg !12530
  %253 = add i32 %252, -65536, !dbg !12530
  %254 = and i32 %253, -65536, !dbg !12530
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12530
  %256 = load i32, i32* %255, align 4, !dbg !12530
  %257 = shl i32 %256, 24, !dbg !12530
  %258 = or i32 %249, %257, !dbg !12530
  %259 = or i32 %258, %254, !dbg !12530
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12530
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12531
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !12532
  call void @llvm.dbg.value(metadata i32 %260, metadata !12261, metadata !DIExpression()), !dbg !12271
  br label %261, !dbg !12533

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12534
  %263 = and i32 %262, 33554432, !dbg !12535
  %264 = icmp eq i32 %263, 0, !dbg !12535
  br i1 %264, label %265, label %316, !dbg !12533

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !12536
  %267 = sub i32 %266, %260, !dbg !12539
  %268 = icmp ugt i32 %267, 2, !dbg !12540
  br i1 %268, label %317, label %261, !dbg !12541, !llvm.loop !12542

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12544
  %271 = and i32 %270, 33554432, !dbg !12544
  %272 = icmp eq i32 %271, 0, !dbg !12544
  br i1 %272, label %316, label %273, !dbg !12546

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !12547
  %275 = sub i32 %274, %231, !dbg !12550
  %276 = icmp ugt i32 %275, 2, !dbg !12551
  br i1 %276, label %317, label %269, !dbg !12552, !llvm.loop !12553

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12555
  br i1 %278, label %317, label %279, !dbg !12558

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12559
  call void @llvm.dbg.value(metadata i32 %280, metadata !12262, metadata !DIExpression()), !dbg !12271
  %281 = and i32 %280, 4194304, !dbg !12561
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12563
  %283 = load i32, i32* %282, align 4, !dbg !12563
  %284 = icmp eq i32 %281, %283, !dbg !12564
  br i1 %284, label %285, label %317, !dbg !12565

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12566
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12567
  %288 = load i32, i32* %287, align 4, !dbg !12567
  %289 = icmp eq i32 %286, %288, !dbg !12568
  br i1 %289, label %290, label %317, !dbg !12569

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12570
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12571
  %293 = load i32, i32* %292, align 4, !dbg !12571
  %294 = shl i32 %293, 6, !dbg !12572
  %295 = icmp eq i32 %291, %294, !dbg !12573
  br i1 %295, label %296, label %317, !dbg !12574

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12575
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12576
  %299 = load i32, i32* %298, align 4, !dbg !12576
  %300 = shl i32 %299, 15, !dbg !12577
  %301 = add i32 %300, -65536, !dbg !12577
  %302 = and i32 %301, -65536, !dbg !12577
  %303 = icmp eq i32 %297, %302, !dbg !12578
  br i1 %303, label %304, label %317, !dbg !12579

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12580
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12581
  %307 = load i32, i32* %306, align 4, !dbg !12581
  %308 = shl i32 %307, 24, !dbg !12582
  %309 = icmp eq i32 %305, %308, !dbg !12583
  br i1 %309, label %310, label %317, !dbg !12584

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !12585
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12586
  %313 = load i32, i32* %312, align 4, !dbg !12586
  %314 = shl i32 %313, 28, !dbg !12587
  %315 = icmp eq i32 %311, %314, !dbg !12588
  br i1 %315, label %316, label %317, !dbg !12589

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !12590

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12271
  ret i32 %318, !dbg !12591
}

; Function Attrs: optsize
declare !dbg !12592 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12594 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12607, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 %1, metadata !12608, metadata !DIExpression()), !dbg !12610
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12611
  br i1 %3, label %115, label %4, !dbg !12613

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12614
  %6 = and i32 %5, 7, !dbg !12614
  %7 = icmp ult i32 %6, %1, !dbg !12616
  br i1 %7, label %8, label %13, !dbg !12617

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12618
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12618
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12620
  %11 = and i32 %10, 7, !dbg !12620
  %12 = icmp eq i32 %11, %1, !dbg !12622
  br i1 %12, label %13, label %115, !dbg !12623

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12624
  %15 = load i32, i32* %14, align 4, !dbg !12624
  %16 = and i32 %15, 2, !dbg !12626
  %17 = icmp eq i32 %16, 0, !dbg !12627
  br i1 %17, label %39, label %18, !dbg !12628

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12629
  %20 = icmp eq i32 %19, 0, !dbg !12632
  br i1 %20, label %25, label %21, !dbg !12633

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12634
  %23 = or i32 %22, 7168, !dbg !12634
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12634
  %24 = load i32, i32* %14, align 4, !dbg !12636
  br label %25, !dbg !12638

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12636
  %27 = and i32 %26, 8, !dbg !12639
  %28 = icmp eq i32 %27, 0, !dbg !12640
  br i1 %28, label %32, label %29, !dbg !12641

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12642
  %31 = or i32 %30, 57344, !dbg !12642
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12642
  br label %32, !dbg !12644

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12645
  %34 = and i32 %33, -241, !dbg !12645
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12645
  %36 = load i32, i32* %35, align 4, !dbg !12645
  %37 = or i32 %34, %36, !dbg !12645
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12645
  %38 = load i32, i32* %14, align 4, !dbg !12646
  br label %39, !dbg !12648

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12646
  %41 = and i32 %40, 1, !dbg !12649
  %42 = icmp eq i32 %41, 0, !dbg !12650
  br i1 %42, label %73, label %43, !dbg !12651

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12652
  %45 = load i32, i32* %44, align 4, !dbg !12652
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12655

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12656
  %48 = and i32 %47, 131072, !dbg !12659
  %49 = icmp eq i32 %48, 0, !dbg !12659
  br i1 %49, label %115, label %58, !dbg !12660

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12661
  %52 = and i32 %51, 33554432, !dbg !12665
  %53 = icmp eq i32 %52, 0, !dbg !12665
  br i1 %53, label %115, label %58, !dbg !12666

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12667
  %56 = and i32 %55, 2, !dbg !12670
  %57 = icmp eq i32 %56, 0, !dbg !12670
  br i1 %57, label %115, label %58, !dbg !12671

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12672
  %60 = and i32 %59, -4, !dbg !12672
  %61 = or i32 %60, %45, !dbg !12672
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12672
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !12673
  call void @llvm.dbg.value(metadata i32 %62, metadata !12609, metadata !DIExpression()), !dbg !12610
  br label %63, !dbg !12674

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12675
  %65 = and i32 %64, 12, !dbg !12675
  %66 = load i32, i32* %44, align 4, !dbg !12676
  %67 = shl i32 %66, 2, !dbg !12677
  %68 = icmp eq i32 %65, %67, !dbg !12678
  br i1 %68, label %73, label %69, !dbg !12674

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !12679
  %71 = sub i32 %70, %62, !dbg !12682
  %72 = icmp ugt i32 %71, 5000, !dbg !12683
  br i1 %72, label %115, label %63, !dbg !12684, !llvm.loop !12685

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12687
  %75 = and i32 %74, 7, !dbg !12687
  %76 = icmp ugt i32 %75, %1, !dbg !12689
  br i1 %76, label %77, label %82, !dbg !12690

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12691
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12691
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12693
  %80 = and i32 %79, 7, !dbg !12693
  %81 = icmp eq i32 %80, %1, !dbg !12695
  br i1 %81, label %82, label %115, !dbg !12696

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12697
  %84 = and i32 %83, 4, !dbg !12699
  %85 = icmp eq i32 %84, 0, !dbg !12700
  br i1 %85, label %93, label %86, !dbg !12701

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12702
  %88 = and i32 %87, -7169, !dbg !12702
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12702
  %90 = load i32, i32* %89, align 4, !dbg !12702
  %91 = or i32 %88, %90, !dbg !12702
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12702
  %92 = load i32, i32* %14, align 4, !dbg !12704
  br label %93, !dbg !12706

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12704
  %95 = and i32 %94, 8, !dbg !12707
  %96 = icmp eq i32 %95, 0, !dbg !12708
  br i1 %96, label %104, label %97, !dbg !12709

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12710
  %99 = and i32 %98, -57345, !dbg !12710
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12710
  %101 = load i32, i32* %100, align 4, !dbg !12710
  %102 = shl i32 %101, 3, !dbg !12710
  %103 = or i32 %102, %99, !dbg !12710
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12710
  br label %104, !dbg !12712

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12713
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12714
  %107 = lshr i32 %106, 4, !dbg !12715
  %108 = and i32 %107, 15, !dbg !12715
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12716
  %110 = load i8, i8* %109, align 1, !dbg !12716
  %111 = zext i8 %110 to i32, !dbg !12716
  %112 = lshr i32 %105, %111, !dbg !12717
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12718
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12719
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !12720
  br label %115, !dbg !12721

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12610
  ret i32 %116, !dbg !12722
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12723 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12725, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.value(metadata i32 0, metadata !12726, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.value(metadata i32 0, metadata !12727, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.value(metadata i32 0, metadata !12728, metadata !DIExpression()), !dbg !12729
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12730
  %2 = and i32 %1, 12, !dbg !12731
  %3 = icmp eq i32 %2, 8, !dbg !12732
  br i1 %3, label %4, label %21, !dbg !12732

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12733
  %6 = and i32 %5, 63, !dbg !12736
  call void @llvm.dbg.value(metadata i32 %6, metadata !12725, metadata !DIExpression()), !dbg !12729
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12737
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12739
  %9 = lshr i32 %8, 6, !dbg !12739
  %10 = and i32 %9, 511, !dbg !12739
  %11 = zext i32 %10 to i64, !dbg !12739
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12739
  %13 = zext i32 %6 to i64, !dbg !12739
  %14 = udiv i64 %12, %13, !dbg !12739
  %15 = trunc i64 %14 to i32, !dbg !12739
  call void @llvm.dbg.value(metadata i32 %15, metadata !12726, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.value(metadata i32 %15, metadata !12726, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.value(metadata i32 %15, metadata !12726, metadata !DIExpression()), !dbg !12729
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12740
  %17 = lshr i32 %16, 15, !dbg !12741
  %18 = and i32 %17, 6, !dbg !12741
  %19 = add nuw nsw i32 %18, 2, !dbg !12741
  call void @llvm.dbg.value(metadata i32 %19, metadata !12727, metadata !DIExpression()), !dbg !12729
  %20 = udiv i32 %15, %19, !dbg !12742
  call void @llvm.dbg.value(metadata i32 %20, metadata !12728, metadata !DIExpression()), !dbg !12729
  br label %21, !dbg !12743

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12744
  call void @llvm.dbg.value(metadata i32 %22, metadata !12728, metadata !DIExpression()), !dbg !12729
  ret i32 %22, !dbg !12745
}

; Function Attrs: optsize
declare !dbg !12746 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12749 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12753, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %1, metadata !12754, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %2, metadata !12755, metadata !DIExpression()), !dbg !12770
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12771
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !12771
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12756, metadata !DIExpression()), !dbg !12772
  %7 = icmp eq i32 %0, 0, !dbg !12773
  br i1 %7, label %8, label %24, !dbg !12774

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !12775
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !12775
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12766, metadata !DIExpression()), !dbg !12775
  store volatile i32 0, i32* %5, align 4, !dbg !12775
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12775
  %11 = or i32 %10, 1, !dbg !12775
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12775
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12775
  %13 = and i32 %12, 1, !dbg !12775
  store volatile i32 %13, i32* %5, align 4, !dbg !12775
  %14 = load volatile i32, i32* %5, align 4, !dbg !12775
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !12776
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12777
  store i32 256, i32* %15, align 4, !dbg !12778
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12779
  store i32 2, i32* %16, align 4, !dbg !12780
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12781
  store i32 3, i32* %17, align 4, !dbg !12782
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12783
  store i32 0, i32* %18, align 4, !dbg !12784
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12785
  store i32 0, i32* %19, align 4, !dbg !12786
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !12787
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12788
  %21 = and i32 %20, -123731969, !dbg !12788
  %22 = or i32 %2, %1, !dbg !12788
  %23 = or i32 %22, %21, !dbg !12788
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12788
  br label %24, !dbg !12789

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !12790
  ret void, !dbg !12790
}

; Function Attrs: optsize
declare !dbg !12791 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !12795 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12796
  ret void, !dbg !12797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !12798 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12799
  ret void, !dbg !12800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !12801 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12802
  ret i32 %1, !dbg !12803
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !12804 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12805
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12806
  %3 = lshr i32 %2, 10, !dbg !12807
  %4 = and i32 %3, 7, !dbg !12807
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12808
  %6 = load i8, i8* %5, align 1, !dbg !12808
  %7 = zext i8 %6 to i32, !dbg !12808
  %8 = lshr i32 %1, %7, !dbg !12809
  ret i32 %8, !dbg !12810
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !12811 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12812
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12813
  %3 = lshr i32 %2, 13, !dbg !12814
  %4 = and i32 %3, 7, !dbg !12814
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12815
  %6 = load i8, i8* %5, align 1, !dbg !12815
  %7 = zext i8 %6 to i32, !dbg !12815
  %8 = lshr i32 %1, %7, !dbg !12816
  ret i32 %8, !dbg !12817
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12818 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12822, metadata !DIExpression()), !dbg !12823
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12824
  store i32 15, i32* %2, align 4, !dbg !12825
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12826
  %4 = and i32 %3, 262144, !dbg !12828
  %5 = icmp eq i32 %4, 0, !dbg !12829
  br i1 %5, label %8, label %6, !dbg !12830

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12831
  store i32 327680, i32* %7, align 4, !dbg !12833
  br label %15, !dbg !12834

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12835
  %10 = and i32 %9, 65536, !dbg !12837
  %11 = icmp eq i32 %10, 0, !dbg !12838
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12839
  br i1 %11, label %14, label %13, !dbg !12840

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12841
  br label %15, !dbg !12843

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12844
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12846
  %17 = and i32 %16, 1, !dbg !12848
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12849
  store i32 %17, i32* %18, align 4, !dbg !12851
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12852
  %20 = lshr i32 %19, 3, !dbg !12853
  %21 = and i32 %20, 31, !dbg !12853
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12854
  store i32 %21, i32* %22, align 4, !dbg !12855
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12856
  %24 = and i32 %23, 4, !dbg !12858
  %25 = icmp eq i32 %24, 0, !dbg !12859
  br i1 %25, label %28, label %26, !dbg !12860

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12861
  store i32 5, i32* %27, align 4, !dbg !12863
  br label %35, !dbg !12864

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12865
  %30 = and i32 %29, 1, !dbg !12867
  %31 = icmp eq i32 %30, 0, !dbg !12868
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12869
  br i1 %31, label %34, label %33, !dbg !12870

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12871
  br label %35, !dbg !12873

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12874
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12876
  %37 = and i32 %36, 1, !dbg !12878
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12879
  store i32 %37, i32* %38, align 4, !dbg !12881
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12882
  %40 = and i32 %39, 16777216, !dbg !12884
  %41 = icmp eq i32 %40, 0, !dbg !12885
  %42 = select i1 %41, i32 1, i32 2, !dbg !12886
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12887
  store i32 %42, i32* %43, align 4, !dbg !12889
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12890
  %45 = and i32 %44, 4194304, !dbg !12891
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12892
  store i32 %45, i32* %46, align 4, !dbg !12893
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12894
  %48 = and i32 %47, 63, !dbg !12895
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12896
  store i32 %48, i32* %49, align 4, !dbg !12897
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12898
  %51 = lshr i32 %50, 6, !dbg !12899
  %52 = and i32 %51, 511, !dbg !12899
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12900
  store i32 %52, i32* %53, align 4, !dbg !12901
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12902
  %55 = shl i32 %54, 1, !dbg !12903
  %56 = and i32 %55, 393216, !dbg !12903
  %57 = add nuw nsw i32 %56, 131072, !dbg !12903
  %58 = lshr exact i32 %57, 16, !dbg !12904
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12905
  store i32 %58, i32* %59, align 4, !dbg !12906
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12907
  %61 = lshr i32 %60, 24, !dbg !12908
  %62 = and i32 %61, 15, !dbg !12908
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12909
  store i32 %62, i32* %63, align 4, !dbg !12910
  ret void, !dbg !12911
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !12912 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12916, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32* %1, metadata !12917, metadata !DIExpression()), !dbg !12918
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12919
  store i32 15, i32* %3, align 4, !dbg !12920
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12921
  %5 = and i32 %4, 3, !dbg !12922
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12923
  store i32 %5, i32* %6, align 4, !dbg !12924
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12925
  %8 = and i32 %7, 240, !dbg !12926
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12927
  store i32 %8, i32* %9, align 4, !dbg !12928
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12929
  %11 = and i32 %10, 7168, !dbg !12930
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12931
  store i32 %11, i32* %12, align 4, !dbg !12932
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12933
  %14 = lshr i32 %13, 3, !dbg !12934
  %15 = and i32 %14, 7168, !dbg !12934
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12935
  store i32 %15, i32* %16, align 4, !dbg !12936
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12937
  %18 = and i32 %17, 7, !dbg !12938
  store i32 %18, i32* %1, align 4, !dbg !12939
  ret void, !dbg !12940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12941 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12942
  %2 = and i32 %1, 128, !dbg !12942
  %3 = icmp eq i32 %2, 0, !dbg !12942
  br i1 %3, label %5, label %4, !dbg !12944

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12945
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12947
  br label %5, !dbg !12948

5:                                                ; preds = %4, %0
  ret void, !dbg !12949
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12950 {
  ret void, !dbg !12951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !12952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12955, metadata !DIExpression()), !dbg !12956
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12957
  ret void, !dbg !12958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !12959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12962, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i32 1000, metadata !12963, metadata !DIExpression()), !dbg !12964
  %2 = udiv i32 %0, 1000, !dbg !12965
  %3 = add nsw i32 %2, -1, !dbg !12966
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12967
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12968
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12969
  ret void, !dbg !12970
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #20 !dbg !12971 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12973, metadata !DIExpression()), !dbg !12975
  %3 = bitcast i32* %2 to i8*, !dbg !12976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12976
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12974, metadata !DIExpression()), !dbg !12977
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12978
  store volatile i32 %4, i32* %2, align 4, !dbg !12977
  %5 = load volatile i32, i32* %2, align 4, !dbg !12979
  %6 = icmp eq i32 %0, -1, !dbg !12980
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12973, metadata !DIExpression()), !dbg !12975
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %8, metadata !12973, metadata !DIExpression()), !dbg !12975
  br label %9, !dbg !12982

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12973, metadata !DIExpression()), !dbg !12975
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12983
  call void @llvm.dbg.value(metadata i32 undef, metadata !12973, metadata !DIExpression()), !dbg !12975
  %12 = shl i32 %11, 15, !dbg !12975
  %13 = ashr i32 %12, 31, !dbg !12975
  %14 = add i32 %13, %10, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %14, metadata !12973, metadata !DIExpression()), !dbg !12975
  %15 = icmp eq i32 %14, 0, !dbg !12982
  br i1 %15, label %16, label %9, !dbg !12982

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12986
  ret void, !dbg !12986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #8 !dbg !12987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12989, metadata !DIExpression()), !dbg !12990
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12991
  ret void, !dbg !12992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !12993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12998, metadata !DIExpression()), !dbg !13003
  call void @llvm.dbg.value(metadata i32 0, metadata !13001, metadata !DIExpression()), !dbg !13003
  call void @llvm.dbg.value(metadata i32 0, metadata !13002, metadata !DIExpression()), !dbg !13003
  %2 = icmp eq i32 %0, 0, !dbg !13004
  br i1 %2, label %50, label %3, !dbg !13006

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13007
  %5 = icmp eq i32 %4, 49152, !dbg !13010
  br i1 %5, label %6, label %15, !dbg !13011

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13001, metadata !DIExpression()), !dbg !13003
  %7 = add i32 %0, -64000001, !dbg !13012
  %8 = icmp ult i32 %7, 26000000, !dbg !13012
  br i1 %8, label %15, label %9, !dbg !13012

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !13015
  %11 = select i1 %10, i32 0, i32 3, !dbg !13017
  call void @llvm.dbg.value(metadata i32 %11, metadata !13001, metadata !DIExpression()), !dbg !13003
  %12 = add i32 %0, -30000001, !dbg !13018
  %13 = icmp ult i32 %12, 60000000, !dbg !13018
  %14 = select i1 %13, i32 1, i32 %11, !dbg !13018
  call void @llvm.dbg.value(metadata i32 %14, metadata !13001, metadata !DIExpression()), !dbg !13003
  br label %15, !dbg !13018

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !13003
  call void @llvm.dbg.value(metadata i32 %16, metadata !13001, metadata !DIExpression()), !dbg !13003
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13021
  %18 = icmp eq i32 %17, 32768, !dbg !13023
  br i1 %18, label %19, label %27, !dbg !13024

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !13025
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !13028
  br i1 %22, label %27, label %23, !dbg !13028

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !13029
  %25 = and i1 %24, %21, !dbg !13032
  %26 = select i1 %25, i32 1, i32 %16, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %26, metadata !13001, metadata !DIExpression()), !dbg !13003
  br label %27, !dbg !13032

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !13033
  call void @llvm.dbg.value(metadata i32 %28, metadata !13001, metadata !DIExpression()), !dbg !13003
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13034
  %30 = icmp eq i32 %29, 16384, !dbg !13036
  br i1 %30, label %31, label %39, !dbg !13037

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !13038
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !13041
  br i1 %34, label %39, label %35, !dbg !13041

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !13042
  %37 = select i1 %36, i1 %33, i1 false, !dbg !13045
  %38 = select i1 %37, i32 1, i32 %28, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %38, metadata !13001, metadata !DIExpression()), !dbg !13003
  br label %39, !dbg !13045

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !13033
  call void @llvm.dbg.value(metadata i32 %40, metadata !13001, metadata !DIExpression()), !dbg !13003
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !13046
  call void @llvm.dbg.value(metadata i32 2, metadata !12999, metadata !DIExpression()), !dbg !13003
  br label %41, !dbg !13047

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !13033
  call void @llvm.dbg.value(metadata i32 %42, metadata !12999, metadata !DIExpression()), !dbg !13003
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !13048
  call void @llvm.dbg.value(metadata i32 %43, metadata !13000, metadata !DIExpression()), !dbg !13003
  %44 = add nsw i32 %42, -1, !dbg !13050
  call void @llvm.dbg.value(metadata i32 %44, metadata !12999, metadata !DIExpression()), !dbg !13003
  %45 = icmp ne i32 %43, %40, !dbg !13051
  %46 = icmp ne i32 %44, 0, !dbg !13052
  %47 = select i1 %45, i1 %46, i1 false, !dbg !13052
  br i1 %47, label %41, label %48, !dbg !13053, !llvm.loop !13054

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !13056
  call void @llvm.dbg.value(metadata i32 %51, metadata !13002, metadata !DIExpression()), !dbg !13003
  ret i32 %51, !dbg !13057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !13058 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13060
  %2 = and i32 %1, 49152, !dbg !13060
  ret i32 %2, !dbg !13061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !13062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13064, metadata !DIExpression()), !dbg !13065
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13066
  %3 = and i32 %2, -8, !dbg !13066
  %4 = or i32 %3, %0, !dbg !13066
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13066
  ret void, !dbg !13067
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !13068 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13069
  %2 = and i32 %1, 7, !dbg !13069
  ret i32 %2, !dbg !13070
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !13071 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13089, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13090, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i32 0, metadata !13091, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i32 0, metadata !13092, metadata !DIExpression()), !dbg !13093
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13094
  %4 = icmp eq i32 %3, 0, !dbg !13096
  br i1 %4, label %5, label %21, !dbg !13097

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !13098
  call void @llvm.dbg.value(metadata i32 %6, metadata !13092, metadata !DIExpression()), !dbg !13093
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.132() #26, !dbg !13100
  %8 = icmp eq i32 %7, 1, !dbg !13102
  br i1 %8, label %13, label %9, !dbg !13103

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.133() #26, !dbg !13104
  br label %10, !dbg !13106

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.132() #26, !dbg !13107
  %12 = icmp eq i32 %11, 1, !dbg !13108
  br i1 %12, label %13, label %10, !dbg !13106, !llvm.loop !13109

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13111
  %15 = load i32, i32* %14, align 4, !dbg !13111
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13112
  %17 = load i32, i32* %16, align 4, !dbg !13112
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13113
  %19 = load i32, i32* %18, align 4, !dbg !13113
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.134(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !13114
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %20, metadata !13091, metadata !DIExpression()), !dbg !13093
  br label %21, !dbg !13116

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13117
  call void @llvm.dbg.value(metadata i32 %22, metadata !13091, metadata !DIExpression()), !dbg !13093
  ret i32 %22, !dbg !13118
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !13119 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13123, metadata !DIExpression()), !dbg !13124
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.136() #26, !dbg !13125
  %2 = icmp ne i32 %1, 0, !dbg !13127
  call void @llvm.dbg.value(metadata i1 %2, metadata !13123, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13124
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !13128
  %4 = icmp ne i32 %3, 0, !dbg !13130
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13131
  %6 = zext i1 %5 to i32, !dbg !13131
  call void @llvm.dbg.value(metadata i32 %6, metadata !13123, metadata !DIExpression()), !dbg !13124
  ret i32 %6, !dbg !13132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !13133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13137, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13138, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.value(metadata i32 0, metadata !13139, metadata !DIExpression()), !dbg !13140
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13141
  %4 = load i32, i32* %3, align 4, !dbg !13141
  %5 = and i32 %4, 63, !dbg !13142
  %6 = udiv i32 %0, %5, !dbg !13143
  call void @llvm.dbg.value(metadata i32 %6, metadata !13139, metadata !DIExpression()), !dbg !13140
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13144
  %8 = load i32, i32* %7, align 4, !dbg !13144
  %9 = and i32 %8, 511, !dbg !13145
  %10 = mul i32 %9, %6, !dbg !13146
  call void @llvm.dbg.value(metadata i32 %10, metadata !13139, metadata !DIExpression()), !dbg !13140
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13147
  %12 = load i32, i32* %11, align 4, !dbg !13147
  %13 = lshr i32 %12, 15, !dbg !13148
  %14 = and i32 %13, 131070, !dbg !13148
  %15 = add nuw nsw i32 %14, 2, !dbg !13148
  %16 = udiv i32 %10, %15, !dbg !13149
  call void @llvm.dbg.value(metadata i32 %16, metadata !13139, metadata !DIExpression()), !dbg !13140
  ret i32 %16, !dbg !13150
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.132() unnamed_addr #17 !dbg !13151 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13152
  %2 = lshr i32 %1, 1, !dbg !13153
  %3 = and i32 %2, 1, !dbg !13153
  ret i32 %3, !dbg !13154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.133() unnamed_addr #16 !dbg !13155 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13156
  %2 = or i32 %1, 1, !dbg !13156
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13156
  ret void, !dbg !13157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.134(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !13158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13160, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata i32 %1, metadata !13161, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata i32 %2, metadata !13162, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.value(metadata i32 %3, metadata !13163, metadata !DIExpression()), !dbg !13164
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13165
  %6 = and i32 %5, -4227072, !dbg !13165
  %7 = or i32 %1, %0, !dbg !13165
  %8 = shl i32 %2, 6, !dbg !13165
  %9 = or i32 %7, %8, !dbg !13165
  %10 = or i32 %9, %6, !dbg !13165
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13165
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13166
  %12 = and i32 %11, -196609, !dbg !13166
  %13 = or i32 %12, %3, !dbg !13166
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13166
  ret void, !dbg !13167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13172, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13173, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i32 0, metadata !13174, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i32 0, metadata !13175, metadata !DIExpression()), !dbg !13176
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13177
  %4 = load i32, i32* %3, align 4, !dbg !13177
  %5 = lshr i32 %4, 4, !dbg !13177
  %6 = and i32 %5, 15, !dbg !13177
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13177
  %8 = load i8, i8* %7, align 1, !dbg !13177
  %9 = zext i8 %8 to i32, !dbg !13177
  %10 = lshr i32 %0, %9, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %10, metadata !13175, metadata !DIExpression()), !dbg !13176
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13178
  %12 = icmp ult i32 %11, %10, !dbg !13180
  br i1 %12, label %13, label %16, !dbg !13181

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13182
  call void @llvm.dbg.value(metadata i32 %14, metadata !13174, metadata !DIExpression()), !dbg !13176
  %15 = icmp eq i32 %14, 0, !dbg !13184
  br i1 %15, label %16, label %30, !dbg !13186

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.135() #26, !dbg !13187
  br label %17, !dbg !13189

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.136() #26, !dbg !13190
  %19 = icmp eq i32 %18, 1, !dbg !13191
  br i1 %19, label %20, label %17, !dbg !13189, !llvm.loop !13192

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13194
  tail call fastcc void @LL_RCC_SetAHBPrescaler.137(i32 noundef %21) #26, !dbg !13195
  tail call fastcc void @LL_RCC_SetSysClkSource.138() #26, !dbg !13196
  br label %22, !dbg !13197

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.139() #26, !dbg !13198
  %24 = icmp eq i32 %23, 8, !dbg !13199
  br i1 %24, label %25, label %22, !dbg !13197, !llvm.loop !13200

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13202
  %27 = load i32, i32* %26, align 4, !dbg !13202
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.140(i32 noundef %27) #26, !dbg !13203
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13204
  %29 = load i32, i32* %28, align 4, !dbg !13204
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.141(i32 noundef %29) #26, !dbg !13205
  br label %30, !dbg !13206

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13207
  %33 = icmp ugt i32 %32, %10, !dbg !13209
  br i1 %33, label %34, label %36, !dbg !13210

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13211
  call void @llvm.dbg.value(metadata i32 %35, metadata !13174, metadata !DIExpression()), !dbg !13176
  br label %36, !dbg !13213

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13176
  call void @llvm.dbg.value(metadata i32 %37, metadata !13174, metadata !DIExpression()), !dbg !13176
  %38 = icmp eq i32 %37, 0, !dbg !13214
  br i1 %38, label %39, label %40, !dbg !13216

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13217
  br label %40, !dbg !13219

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.135() unnamed_addr #16 !dbg !13221 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13222
  %2 = or i32 %1, 16777216, !dbg !13222
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13222
  ret void, !dbg !13223
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.136() unnamed_addr #17 !dbg !13224 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13225
  %2 = lshr i32 %1, 25, !dbg !13226
  %3 = and i32 %2, 1, !dbg !13226
  ret i32 %3, !dbg !13227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.137(i32 noundef %0) unnamed_addr #16 !dbg !13228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13230, metadata !DIExpression()), !dbg !13231
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13232
  %3 = and i32 %2, -241, !dbg !13232
  %4 = or i32 %3, %0, !dbg !13232
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13232
  ret void, !dbg !13233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.138() unnamed_addr #16 !dbg !13234 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13236, metadata !DIExpression()), !dbg !13237
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13238
  %2 = and i32 %1, -4, !dbg !13238
  %3 = or i32 %2, 2, !dbg !13238
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13238
  ret void, !dbg !13239
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.139() unnamed_addr #17 !dbg !13240 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13241
  %2 = and i32 %1, 12, !dbg !13241
  ret i32 %2, !dbg !13242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.140(i32 noundef %0) unnamed_addr #16 !dbg !13243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13245, metadata !DIExpression()), !dbg !13246
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13247
  %3 = and i32 %2, -7169, !dbg !13247
  %4 = or i32 %3, %0, !dbg !13247
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13247
  ret void, !dbg !13248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.141(i32 noundef %0) unnamed_addr #16 !dbg !13249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13251, metadata !DIExpression()), !dbg !13252
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13253
  %3 = and i32 %2, -57345, !dbg !13253
  %4 = or i32 %3, %0, !dbg !13253
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13253
  ret void, !dbg !13254
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !13255 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13256
  %2 = lshr i32 %1, 27, !dbg !13257
  %3 = and i32 %2, 1, !dbg !13257
  ret i32 %3, !dbg !13258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !13259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13263, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata i32 %1, metadata !13264, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13265, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13266, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata i32 0, metadata !13267, metadata !DIExpression()), !dbg !13269
  call void @llvm.dbg.value(metadata i32 0, metadata !13268, metadata !DIExpression()), !dbg !13269
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13270
  %6 = icmp eq i32 %5, 0, !dbg !13272
  br i1 %6, label %7, label %27, !dbg !13273

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %8, metadata !13268, metadata !DIExpression()), !dbg !13269
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.142() #26, !dbg !13276
  %10 = icmp eq i32 %9, 1, !dbg !13278
  br i1 %10, label %19, label %11, !dbg !13279

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13280
  br i1 %12, label %13, label %14, !dbg !13283

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13284
  br label %15, !dbg !13286

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.143() #26, !dbg !13287
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.144() #26, !dbg !13289
  br label %16, !dbg !13290

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.142() #26, !dbg !13291
  %18 = icmp eq i32 %17, 1, !dbg !13292
  br i1 %18, label %19, label %16, !dbg !13290, !llvm.loop !13293

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13295
  %21 = load i32, i32* %20, align 4, !dbg !13295
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13296
  %23 = load i32, i32* %22, align 4, !dbg !13296
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13297
  %25 = load i32, i32* %24, align 4, !dbg !13297
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.134(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13298
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13299
  call void @llvm.dbg.value(metadata i32 %26, metadata !13267, metadata !DIExpression()), !dbg !13269
  br label %27, !dbg !13300

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13301
  call void @llvm.dbg.value(metadata i32 %28, metadata !13267, metadata !DIExpression()), !dbg !13269
  ret i32 %28, !dbg !13302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.142() unnamed_addr #17 !dbg !13303 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13304
  %2 = lshr i32 %1, 17, !dbg !13305
  %3 = and i32 %2, 1, !dbg !13305
  ret i32 %3, !dbg !13306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !13307 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13308
  %2 = or i32 %1, 262144, !dbg !13308
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13308
  ret void, !dbg !13309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.143() unnamed_addr #16 !dbg !13310 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13311
  %2 = and i32 %1, -262145, !dbg !13311
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13311
  ret void, !dbg !13312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.144() unnamed_addr #16 !dbg !13313 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13314
  %2 = or i32 %1, 65536, !dbg !13314
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13314
  ret void, !dbg !13315
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13316 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13319, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata i32 undef, metadata !13319, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.value(metadata i32 undef, metadata !13319, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13335
  ret void, !dbg !13336
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13337 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13341, metadata !DIExpression()), !dbg !13343
  %2 = icmp eq i8* %0, null, !dbg !13344
  br i1 %2, label %29, label %3, !dbg !13346

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13347
  %5 = icmp eq i8 %4, 0, !dbg !13348
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13349
  br i1 %6, label %29, label %8, !dbg !13349

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13342, metadata !DIExpression()), !dbg !13343
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13350

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13342, metadata !DIExpression()), !dbg !13343
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13352
  br i1 %10, label %11, label %15, !dbg !13357

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13358
  %13 = load i8*, i8** %12, align 4, !dbg !13358
  %14 = icmp eq i8* %13, %0, !dbg !13359
  br i1 %14, label %29, label %15, !dbg !13360

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13361
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13342, metadata !DIExpression()), !dbg !13343
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13362
  br i1 %17, label %7, label %8, !dbg !13363, !llvm.loop !13364

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13342, metadata !DIExpression()), !dbg !13343
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13366
  br i1 %20, label %21, label %26, !dbg !13370

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13371
  %23 = load i8*, i8** %22, align 4, !dbg !13371
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13372
  %25 = icmp eq i32 %24, 0, !dbg !13373
  br i1 %25, label %29, label %26, !dbg !13374

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13375
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13342, metadata !DIExpression()), !dbg !13343
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13376
  br i1 %28, label %29, label %18, !dbg !13350, !llvm.loop !13377

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13343
  ret %struct.device* %30, !dbg !13379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !13380 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13384, metadata !DIExpression()), !dbg !13385
  %2 = icmp eq %struct.device* %0, null, !dbg !13386
  br i1 %2, label %14, label %3, !dbg !13388

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13389
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13389
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13390
  %7 = load i8, i8* %6, align 1, !dbg !13390
  %8 = and i8 %7, 1, !dbg !13390
  %9 = icmp eq i8 %8, 0, !dbg !13390
  br i1 %9, label %14, label %10, !dbg !13391

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13392
  %12 = load i8, i8* %11, align 1, !dbg !13392
  %13 = icmp eq i8 %12, 0, !dbg !13393
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13385
  ret i1 %15, !dbg !13394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !13395 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13400, metadata !DIExpression()), !dbg !13401
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13402
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13404 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13412, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13413, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i8* %2, metadata !13414, metadata !DIExpression()), !dbg !13417
  %5 = bitcast i32* %4 to i8*, !dbg !13418
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13418
  call void @llvm.dbg.value(metadata i32 0, metadata !13415, metadata !DIExpression()), !dbg !13417
  store i32 0, i32* %4, align 4, !dbg !13419
  call void @llvm.dbg.value(metadata i32* %4, metadata !13415, metadata !DIExpression(DW_OP_deref)), !dbg !13417
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13420
  call void @llvm.dbg.value(metadata i16* %6, metadata !13416, metadata !DIExpression()), !dbg !13417
  %7 = load i32, i32* %4, align 4, !dbg !13421
  call void @llvm.dbg.value(metadata i32 %7, metadata !13415, metadata !DIExpression()), !dbg !13417
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13423
  ret i32 %8, !dbg !13424
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13425 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13429, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i32* %1, metadata !13430, metadata !DIExpression()), !dbg !13435
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13436
  %4 = load i16*, i16** %3, align 4, !dbg !13436
  call void @llvm.dbg.value(metadata i16* %4, metadata !13431, metadata !DIExpression()), !dbg !13435
  %5 = icmp eq i16* %4, null, !dbg !13437
  br i1 %5, label %14, label %6, !dbg !13438

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13439
  call void @llvm.dbg.value(metadata i32 %7, metadata !13432, metadata !DIExpression()), !dbg !13439
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13440
  %9 = load i16, i16* %8, align 2, !dbg !13440
  %10 = add i16 %9, -32767, !dbg !13441
  %11 = icmp ult i16 %10, 2, !dbg !13441
  %12 = add i32 %7, 1, !dbg !13442
  call void @llvm.dbg.value(metadata i32 %12, metadata !13432, metadata !DIExpression()), !dbg !13439
  br i1 %11, label %13, label %6, !dbg !13441, !llvm.loop !13444

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13447
  br label %14, !dbg !13448

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13450 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13454, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 %1, metadata !13455, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13456, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8* %3, metadata !13457, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 0, metadata !13458, metadata !DIExpression()), !dbg !13466
  %5 = icmp eq i32 %1, 0, !dbg !13467
  br i1 %5, label %16, label %8, !dbg !13468

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13458, metadata !DIExpression()), !dbg !13466
  %7 = icmp eq i32 %15, %1, !dbg !13467
  br i1 %7, label %16, label %8, !dbg !13468, !llvm.loop !13469

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13458, metadata !DIExpression()), !dbg !13466
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13471
  %11 = load i16, i16* %10, align 2, !dbg !13471
  call void @llvm.dbg.value(metadata i16 %11, metadata !13460, metadata !DIExpression()), !dbg !13472
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13473
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13463, metadata !DIExpression()), !dbg !13472
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %13, metadata !13464, metadata !DIExpression()), !dbg !13472
  %14 = icmp slt i32 %13, 0, !dbg !13475
  %15 = add nuw i32 %9, 1, !dbg !13477
  call void @llvm.dbg.value(metadata i32 %15, metadata !13458, metadata !DIExpression()), !dbg !13466
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13479 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13483, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13484, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13485, metadata !DIExpression()), !dbg !13486
  %2 = sext i16 %0 to i32, !dbg !13487
  %3 = icmp slt i16 %0, 1, !dbg !13489
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13490
  %6 = add nsw i32 %2, -1, !dbg !13490
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13490
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13490
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13484, metadata !DIExpression()), !dbg !13486
  ret %struct.device* %8, !dbg !13491
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13492 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13494, metadata !DIExpression()), !dbg !13499
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13495, metadata !DIExpression()), !dbg !13499
  call void @llvm.dbg.value(metadata i8* %2, metadata !13496, metadata !DIExpression()), !dbg !13499
  %5 = bitcast i32* %4 to i8*, !dbg !13500
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13500
  call void @llvm.dbg.value(metadata i32 0, metadata !13497, metadata !DIExpression()), !dbg !13499
  store i32 0, i32* %4, align 4, !dbg !13501
  call void @llvm.dbg.value(metadata i32* %4, metadata !13497, metadata !DIExpression(DW_OP_deref)), !dbg !13499
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13502
  call void @llvm.dbg.value(metadata i16* %6, metadata !13498, metadata !DIExpression()), !dbg !13499
  %7 = load i32, i32* %4, align 4, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %7, metadata !13497, metadata !DIExpression()), !dbg !13499
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13504
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13505
  ret i32 %8, !dbg !13506
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13507 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13509, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata i32* %1, metadata !13510, metadata !DIExpression()), !dbg !13514
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13515
  %4 = load i16*, i16** %3, align 4, !dbg !13515
  call void @llvm.dbg.value(metadata i16* %4, metadata !13511, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata i32 0, metadata !13512, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata i32 0, metadata !13513, metadata !DIExpression()), !dbg !13514
  %5 = icmp eq i16* %4, null, !dbg !13516
  br i1 %5, label %22, label %6, !dbg !13518

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13512, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata i16* %8, metadata !13511, metadata !DIExpression()), !dbg !13514
  %9 = load i16, i16* %8, align 2, !dbg !13519
  %10 = icmp eq i16 %9, -32768, !dbg !13523
  call void @llvm.dbg.value(metadata i32 undef, metadata !13512, metadata !DIExpression()), !dbg !13514
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13524
  call void @llvm.dbg.value(metadata i16* %11, metadata !13511, metadata !DIExpression()), !dbg !13514
  %12 = zext i1 %10 to i32, !dbg !13525
  %13 = add i32 %7, %12, !dbg !13525
  call void @llvm.dbg.value(metadata i32 %13, metadata !13512, metadata !DIExpression()), !dbg !13514
  %14 = icmp eq i32 %13, 2, !dbg !13526
  br i1 %14, label %15, label %6, !dbg !13527

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13514
  call void @llvm.dbg.value(metadata i32 %16, metadata !13513, metadata !DIExpression()), !dbg !13514
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13528
  %18 = load i16, i16* %17, align 2, !dbg !13528
  %19 = icmp eq i16 %18, 32767, !dbg !13529
  %20 = add i32 %16, 1, !dbg !13530
  call void @llvm.dbg.value(metadata i32 %20, metadata !13513, metadata !DIExpression()), !dbg !13514
  br i1 %19, label %21, label %15, !dbg !13532, !llvm.loop !13533

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13535
  br label %22, !dbg !13536

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13537
  call void @llvm.dbg.value(metadata i16* %23, metadata !13511, metadata !DIExpression()), !dbg !13514
  ret i16* %23, !dbg !13538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !13539 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13542
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13543
  ret i32* %2, !dbg !13544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13545 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13693, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13694, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13695, metadata !DIExpression()), !dbg !13696
  ret void, !dbg !13697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13702, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 %1, metadata !13703, metadata !DIExpression()), !dbg !13704
  ret void, !dbg !13705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13706 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13710, metadata !DIExpression()), !dbg !13712
  call void @llvm.dbg.value(metadata i32 %1, metadata !13711, metadata !DIExpression()), !dbg !13712
  ret void, !dbg !13713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13718, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i8* %1, metadata !13719, metadata !DIExpression()), !dbg !13720
  ret i32 -134, !dbg !13721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13726, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.value(metadata i8* %1, metadata !13727, metadata !DIExpression()), !dbg !13728
  ret i32 -134, !dbg !13729
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13733, metadata !DIExpression()), !dbg !13734
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13735, !srcloc !13741
  call void @llvm.dbg.value(metadata i32 undef, metadata !13738, metadata !DIExpression()) #25, !dbg !13742
  call void @llvm.dbg.value(metadata i32 undef, metadata !13739, metadata !DIExpression()) #25, !dbg !13742
  br label %3, !dbg !13743

3:                                                ; preds = %3, %1
  br label %3, !dbg !13744, !llvm.loop !13747
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13754, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13755, metadata !DIExpression()), !dbg !13756
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.149, i32 0, i32 0), i32 noundef 69) #27, !dbg !13757
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13762
  unreachable, !dbg !13762
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13765, metadata !DIExpression()), !dbg !13766
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13767
  unreachable, !dbg !13767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13770, metadata !DIExpression()), !dbg !13774
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13771, metadata !DIExpression()), !dbg !13774
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13775, !srcloc !13741
  call void @llvm.dbg.value(metadata i32 undef, metadata !13738, metadata !DIExpression()) #25, !dbg !13777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13739, metadata !DIExpression()) #25, !dbg !13777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13772, metadata !DIExpression()), !dbg !13774
  %4 = tail call fastcc %struct.k_thread* @k_current_get.152() #28, !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13773, metadata !DIExpression()), !dbg !13774
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !13779
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.153, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !13779
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13784
  br i1 %6, label %15, label %7, !dbg !13786

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13787, metadata !DIExpression()), !dbg !13792
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13794
  %9 = load i32, i32* %8, align 4, !dbg !13794
  %10 = and i32 %9, 511, !dbg !13795
  %11 = icmp eq i32 %10, 0, !dbg !13796
  br i1 %11, label %13, label %12, !dbg !13797

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.154, i32 0, i32 0), i32 noundef 69) #27, !dbg !13798
  br label %13, !dbg !13804

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13805
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !13805
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13810
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13787, metadata !DIExpression()), !dbg !13811
  br label %17, !dbg !13816

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13805
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !13805
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13810
  br label %17, !dbg !13817

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13775
  call void @llvm.dbg.value(metadata i32 %18, metadata !13738, metadata !DIExpression()) #25, !dbg !13777
  call void @llvm.dbg.value(metadata i32 %18, metadata !13772, metadata !DIExpression()), !dbg !13774
  call void @llvm.dbg.value(metadata i32 undef, metadata !13818, metadata !DIExpression()) #25, !dbg !13821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !13823, !srcloc !13824
  tail call fastcc void @k_thread_abort.156(%struct.k_thread* noundef %4) #26, !dbg !13825
  ret void, !dbg !13828
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.152() unnamed_addr #11 !dbg !13829 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.164() #28, !dbg !13833
  ret %struct.k_thread* %1, !dbg !13834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !13835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13839, metadata !DIExpression()), !dbg !13840
  %2 = icmp ult i32 %0, 5, !dbg !13841
  br i1 %2, label %3, label %6, !dbg !13841

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13841
  %5 = load i8*, i8** %4, align 4, !dbg !13841
  br label %6, !dbg !13841

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.158, i32 0, i32 0), %1 ], !dbg !13842
  ret i8* %7, !dbg !13844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13845 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13849, metadata !DIExpression()), !dbg !13851
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13852
  br i1 %2, label %9, label %3, !dbg !13853

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !13854
  call void @llvm.dbg.value(metadata i8* %4, metadata !13850, metadata !DIExpression()), !dbg !13851
  %5 = icmp eq i8* %4, null, !dbg !13855
  br i1 %5, label %9, label %6, !dbg !13857

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13858
  %8 = icmp eq i8 %7, 0, !dbg !13859
  br i1 %8, label %9, label %10, !dbg !13860

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.157, i32 0, i32 0), metadata !13850, metadata !DIExpression()), !dbg !13851
  br label %10, !dbg !13861

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.157, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13851
  call void @llvm.dbg.value(metadata i8* %11, metadata !13850, metadata !DIExpression()), !dbg !13851
  ret i8* %11, !dbg !13863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.156(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13864 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13868, metadata !DIExpression()), !dbg !13869
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13870, !srcloc !13872
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !13873
  ret void, !dbg !13874
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.164() unnamed_addr #11 !dbg !13875 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13876, !srcloc !13878
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !13879
  ret %struct.k_thread* %1, !dbg !13880
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13881 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13885, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i32 %1, metadata !13886, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i32 %2, metadata !13887, metadata !DIExpression()), !dbg !13888
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !13889
  ret void, !dbg !13890
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13891 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13895, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i8* %1, metadata !13896, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i32 %2, metadata !13897, metadata !DIExpression()), !dbg !13898
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !13899
  ret void, !dbg !13900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13901 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13902
  ret void, !dbg !13903
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13906, metadata !DIExpression()), !dbg !13907
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13908
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13909
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13910
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13911
  %4 = trunc i32 %0 to i8, !dbg !13912
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13913
  store i8 %4, i8* %5, align 4, !dbg !13914
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13915
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13916
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13917
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13918
  store i8* %8, i8** %9, align 4, !dbg !13919
  ret void, !dbg !13920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13923, metadata !DIExpression()), !dbg !13929
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13930
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13924, metadata !DIExpression()), !dbg !13929
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13931
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13925, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata i8* null, metadata !13928, metadata !DIExpression()), !dbg !13929
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13932
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13933
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !13934
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13935
  ret void, !dbg !13936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !13937 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13941, metadata !DIExpression()), !dbg !13942
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13943
  ret i8* %2, !dbg !13944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13950, metadata !DIExpression()), !dbg !13951
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13952
  %3 = load i8, i8* %2, align 1, !dbg !13953
  %4 = and i8 %3, -5, !dbg !13953
  store i8 %4, i8* %2, align 1, !dbg !13953
  ret void, !dbg !13954
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13955 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13958
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !13959
  %3 = ptrtoint i8* %2 to i32, !dbg !13968
  %4 = add i32 %3, 2048, !dbg !13969
  call void @llvm.dbg.value(metadata i32 %4, metadata !13963, metadata !DIExpression()) #25, !dbg !13970
  call void @llvm.dbg.value(metadata i32 %4, metadata !13971, metadata !DIExpression()) #25, !dbg !13974
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !13976, !srcloc !13977
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13978
  %6 = or i32 %5, 512, !dbg !13978
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13978
  tail call fastcc void @__NVIC_SetPriority.173(i32 noundef -2, i32 noundef 255) #27, !dbg !13979
  tail call fastcc void @__NVIC_SetPriority.173(i32 noundef -5, i32 noundef 0) #27, !dbg !13982
  tail call fastcc void @__NVIC_SetPriority.173(i32 noundef -12, i32 noundef 0) #27, !dbg !13983
  tail call fastcc void @__NVIC_SetPriority.173(i32 noundef -11, i32 noundef 0) #27, !dbg !13984
  tail call fastcc void @__NVIC_SetPriority.173(i32 noundef -10, i32 noundef 0) #27, !dbg !13985
  tail call fastcc void @__NVIC_SetPriority.173(i32 noundef -4, i32 noundef 0) #27, !dbg !13986
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13987
  %8 = or i32 %7, 458752, !dbg !13987
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13987
  tail call void @z_arm_fault_init() #27, !dbg !13988
  tail call void @z_arm_cpu_idle_init() #27, !dbg !13989
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13990
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13993
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !13994
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !13995
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13996
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !13996
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13957, metadata !DIExpression()), !dbg !13997
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13998
  call void @z_device_state_init() #27, !dbg !13999
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !14000
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !14001
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !14002
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !14003
  unreachable, !dbg !14003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2155, metadata !DIExpression()), !dbg !14004
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14005
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14005
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2156, metadata !DIExpression()), !dbg !14004
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2156, metadata !DIExpression()), !dbg !14004
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14006
  br i1 %7, label %8, label %35, !dbg !14007

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2156, metadata !DIExpression()), !dbg !14004
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14008
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14008
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2166, metadata !DIExpression()), !dbg !14009
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14010
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14010
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14011
  call void @llvm.dbg.value(metadata i32 %14, metadata !2170, metadata !DIExpression()), !dbg !14009
  %15 = icmp eq %struct.device* %11, null, !dbg !14012
  br i1 %15, label %32, label %16, !dbg !14014

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14015
  br i1 %17, label %26, label %18, !dbg !14018

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14019
  call void @llvm.dbg.value(metadata i32 %19, metadata !2170, metadata !DIExpression()), !dbg !14009
  %20 = icmp ult i32 %19, 255, !dbg !14021
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14021
  call void @llvm.dbg.value(metadata i32 %21, metadata !2170, metadata !DIExpression()), !dbg !14009
  %22 = trunc i32 %21 to i8, !dbg !14022
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14023
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14023
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14024
  store i8 %22, i8* %25, align 1, !dbg !14025
  br label %26, !dbg !14026

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14027
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14027
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14028
  %30 = load i8, i8* %29, align 1, !dbg !14029
  %31 = or i8 %30, 1, !dbg !14029
  store i8 %31, i8* %29, align 1, !dbg !14029
  br label %32, !dbg !14030

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14031
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2156, metadata !DIExpression()), !dbg !14004
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14006
  br i1 %34, label %8, label %35, !dbg !14007, !llvm.loop !14032

35:                                               ; preds = %32, %1
  ret void, !dbg !14034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.173(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !14035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14037, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata i32 %1, metadata !14038, metadata !DIExpression()), !dbg !14039
  %3 = trunc i32 %1 to i8, !dbg !14040
  %4 = shl i8 %3, 4, !dbg !14040
  %5 = and i32 %0, 15, !dbg !14043
  %6 = add nsw i32 %5, -4, !dbg !14044
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14045
  store volatile i8 %4, i8* %7, align 1, !dbg !14046
  ret void, !dbg !14047
}

; Function Attrs: optsize
declare !dbg !14048 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14052, metadata !DIExpression()), !dbg !14053
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14054
  store i8 1, i8* %2, align 1, !dbg !14055
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14056
  store i8 1, i8* %3, align 4, !dbg !14057
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14058
  store i32 0, i32* %4, align 4, !dbg !14059
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14060
  store i32 0, i32* %5, align 4, !dbg !14061
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !14062
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14063
  ret void, !dbg !14064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14065 {
  tail call void @z_sched_init() #27, !dbg !14070
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14071
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.174, i32 0, i32 0)) #27, !dbg !14072
  call void @llvm.dbg.value(metadata i8* %1, metadata !14069, metadata !DIExpression()), !dbg !14073
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14074
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14075
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !14076
  ret i8* %1, !dbg !14077
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14082, metadata !DIExpression()), !dbg !14083
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14084
  unreachable, !dbg !14085
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14086 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14088, metadata !DIExpression()), !dbg !14091
  call void @llvm.dbg.value(metadata i8* %1, metadata !14089, metadata !DIExpression()), !dbg !14091
  call void @llvm.dbg.value(metadata i8* %2, metadata !14090, metadata !DIExpression()), !dbg !14091
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14092
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !14093
  tail call void @boot_banner() #27, !dbg !14094
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !14095
  tail call void @z_init_static_threads() #27, !dbg !14096
  tail call void @main() #27, !dbg !14097
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14098
  %5 = and i8 %4, -2, !dbg !14098
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14098
  ret void, !dbg !14099
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14100 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14110, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata i8* %1, metadata !14111, metadata !DIExpression()), !dbg !14112
  ret void, !dbg !14113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14114 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14116, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i8* %1, metadata !14117, metadata !DIExpression()), !dbg !14118
  ret void, !dbg !14119
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14120 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14121, !srcloc !14128
  call void @llvm.dbg.value(metadata i32 %1, metadata !14124, metadata !DIExpression()) #25, !dbg !14129
  %2 = icmp ne i32 %1, 0, !dbg !14130
  ret i1 %2, !dbg !14131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14132 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14133
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14134
  %3 = load i8, i8* %2, align 4, !dbg !14135
  %4 = or i8 %3, 1, !dbg !14135
  store i8 %4, i8* %2, align 4, !dbg !14135
  ret void, !dbg !14136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14137 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14138
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14139
  %3 = load i8, i8* %2, align 4, !dbg !14140
  %4 = and i8 %3, -2, !dbg !14140
  store i8 %4, i8* %2, align 4, !dbg !14140
  ret void, !dbg !14141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !14142 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14143
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14144
  %3 = load i8, i8* %2, align 4, !dbg !14144
  %4 = and i8 %3, 1, !dbg !14145
  %5 = icmp ne i8 %4, 0, !dbg !14146
  ret i1 %5, !dbg !14147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14152, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i8* %1, metadata !14153, metadata !DIExpression()), !dbg !14154
  ret i32 -88, !dbg !14155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14156 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14160, metadata !DIExpression()), !dbg !14161
  ret i8* null, !dbg !14162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14167, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata i8* %1, metadata !14168, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata i32 %2, metadata !14169, metadata !DIExpression()), !dbg !14170
  ret i32 -88, !dbg !14171
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2179 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2293, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i8* %1, metadata !2294, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 %2, metadata !2295, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 0, metadata !2296, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i8 undef, metadata !2298, metadata !DIExpression()), !dbg !14172
  %4 = icmp eq i8* %1, null, !dbg !14173
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14175
  br i1 %6, label %46, label %7, !dbg !14175

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14176
  %9 = load i8, i8* %8, align 1, !dbg !14176
  call void @llvm.dbg.value(metadata i8 %9, metadata !2298, metadata !DIExpression()), !dbg !14172
  %10 = add i32 %2, -1, !dbg !14177
  call void @llvm.dbg.value(metadata i32 %10, metadata !2295, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i8 0, metadata !2299, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i8 %9, metadata !2298, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 0, metadata !2296, metadata !DIExpression()), !dbg !14172
  %11 = icmp eq i8 %9, 0, !dbg !14179
  br i1 %11, label %12, label %15, !dbg !14181

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14182
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14183
  store i8 0, i8* %14, align 1, !dbg !14184
  br label %46, !dbg !14185

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2299, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i8 %17, metadata !2298, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 %18, metadata !2296, metadata !DIExpression()), !dbg !14172
  %19 = zext i8 %17 to i32, !dbg !14186
  %20 = zext i8 %16 to i32, !dbg !14187
  %21 = shl nuw i32 1, %20, !dbg !14187
  call void @llvm.dbg.value(metadata i32 %21, metadata !2297, metadata !DIExpression()), !dbg !14172
  %22 = and i32 %21, %19, !dbg !14189
  %23 = icmp eq i32 %22, 0, !dbg !14191
  br i1 %23, label %42, label %24, !dbg !14192

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14193
  %26 = sub i32 %10, %18, !dbg !14194
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14195
  %28 = load i8*, i8** %27, align 4, !dbg !14195
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14196
  %30 = load i32, i32* %29, align 4, !dbg !14196
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14197
  %32 = add i32 %31, %18, !dbg !14198
  call void @llvm.dbg.value(metadata i32 %32, metadata !2296, metadata !DIExpression()), !dbg !14172
  %33 = trunc i32 %21 to i8, !dbg !14199
  %34 = xor i8 %33, -1, !dbg !14199
  %35 = and i8 %17, %34, !dbg !14199
  call void @llvm.dbg.value(metadata i8 %35, metadata !2298, metadata !DIExpression()), !dbg !14172
  %36 = icmp eq i8 %35, 0, !dbg !14200
  br i1 %36, label %12, label %37, !dbg !14202

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14203
  %39 = sub i32 %10, %32, !dbg !14205
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.177, i32 0, i32 0), i32 noundef 1) #26, !dbg !14206
  %41 = add i32 %40, %32, !dbg !14207
  call void @llvm.dbg.value(metadata i32 %41, metadata !2296, metadata !DIExpression()), !dbg !14172
  br label %42, !dbg !14208

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14172
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14172
  call void @llvm.dbg.value(metadata i8 %44, metadata !2298, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 %43, metadata !2296, metadata !DIExpression()), !dbg !14172
  %45 = add i8 %16, 1, !dbg !14209
  call void @llvm.dbg.value(metadata i8 %45, metadata !2299, metadata !DIExpression()), !dbg !14178
  br label %15, !dbg !14181

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.178, i32 0, i32 0), %3 ], !dbg !14172
  ret i8* %47, !dbg !14210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14211 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14215, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i32 %1, metadata !14216, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i8* %2, metadata !14217, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i32 %3, metadata !14218, metadata !DIExpression()), !dbg !14220
  %5 = icmp ult i32 %1, %3, !dbg !14221
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14221
  call void @llvm.dbg.value(metadata i32 %6, metadata !14219, metadata !DIExpression()), !dbg !14220
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14222
  ret i32 %6, !dbg !14223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()), !dbg !14229
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14230
  ret void, !dbg !14231
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14241, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14242, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i32 %2, metadata !14243, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14244, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i8* %4, metadata !14245, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i8* %5, metadata !14246, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i8* %6, metadata !14247, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i32 %7, metadata !14248, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i32 %8, metadata !14249, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata i8* undef, metadata !14250, metadata !DIExpression()), !dbg !14252
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14253
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !14254
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14255
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14256
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14257
  call void @llvm.dbg.value(metadata i8* %13, metadata !14251, metadata !DIExpression()), !dbg !14252
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14258
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14259
  store i8* null, i8** %14, align 4, !dbg !14260
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14261
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14261
  br i1 %16, label %20, label %17, !dbg !14263

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14264
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14264
  br label %20, !dbg !14265

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14252
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14266
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14268
  ret i8* %13, !dbg !14269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14270 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14275, metadata !DIExpression()), !dbg !14276
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14277
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14278
  ret void, !dbg !14279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14280 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14285, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i32 %1, metadata !14286, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i32 %2, metadata !14287, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i32 %3, metadata !14288, metadata !DIExpression()), !dbg !14289
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14290
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14291
  %6 = trunc i32 %3 to i8, !dbg !14292
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14293
  store i8 %6, i8* %7, align 4, !dbg !14294
  %8 = trunc i32 %2 to i8, !dbg !14295
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14296
  store i8 %8, i8* %9, align 1, !dbg !14297
  %10 = trunc i32 %1 to i8, !dbg !14298
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14299
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14299
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14299
  store i8 %10, i8* %13, align 2, !dbg !14300
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14301
  store i8 0, i8* %14, align 1, !dbg !14302
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14303
  ret void, !dbg !14304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !14305 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14309, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14310, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata i32 %2, metadata !14311, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata i32 0, metadata !14316, metadata !DIExpression()), !dbg !14317
  %4 = add i32 %2, 7, !dbg !14318
  %5 = and i32 %4, -8, !dbg !14318
  %6 = add i32 %5, 64, !dbg !14318
  call void @llvm.dbg.value(metadata i32 %6, metadata !14312, metadata !DIExpression()), !dbg !14317
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.188(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14320
  call void @llvm.dbg.value(metadata i8* %7, metadata !14315, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata i32 %5, metadata !14313, metadata !DIExpression()), !dbg !14317
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14321
  call void @llvm.dbg.value(metadata i8* %8, metadata !14314, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata i32 0, metadata !14316, metadata !DIExpression()), !dbg !14317
  %9 = ptrtoint i8* %7 to i32, !dbg !14322
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14323
  store i32 %9, i32* %10, align 4, !dbg !14324
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14325
  store i32 %5, i32* %11, align 4, !dbg !14326
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14327
  store i32 0, i32* %12, align 4, !dbg !14328
  call void @llvm.dbg.value(metadata i8* %8, metadata !14314, metadata !DIExpression()), !dbg !14317
  ret i8* %8, !dbg !14329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.188(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14330 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14334, metadata !DIExpression()), !dbg !14335
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14336
  ret i8* %2, !dbg !14337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14338 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14343, metadata !DIExpression()), !dbg !14344
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14345
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14346
  ret void, !dbg !14347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14348 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14350, metadata !DIExpression()), !dbg !14351
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14352
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14353
  ret void, !dbg !14354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14355 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14359, metadata !DIExpression()), !dbg !14360
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14361
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14362
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14363
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14364
  ret void, !dbg !14365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14366 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14371, metadata !DIExpression()), !dbg !14372
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14373
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14374
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14375
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14376
  ret void, !dbg !14377
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14378 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14395, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14386, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14387, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 %2, metadata !14388, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14389, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i8* %4, metadata !14390, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i8* %5, metadata !14391, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i8* %6, metadata !14392, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 %7, metadata !14393, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 %8, metadata !14394, metadata !DIExpression()), !dbg !14396
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14397
  %13 = icmp eq i64 %11, -1, !dbg !14398
  br i1 %13, label %15, label %14, !dbg !14400

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14401
  br label %15, !dbg !14403

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14405 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14410, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14409, metadata !DIExpression()), !dbg !14411
  %4 = icmp eq i64 %3, 0, !dbg !14412
  br i1 %4, label %5, label %6, !dbg !14414

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14415
  br label %7, !dbg !14417

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14418
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14421 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14425, metadata !DIExpression()), !dbg !14426
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14427, !srcloc !14429
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14430
  ret void, !dbg !14431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14432 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14435, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14434, metadata !DIExpression()), !dbg !14436
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14437
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14438
  ret void, !dbg !14439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14440 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14442, metadata !DIExpression()), !dbg !14461
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14462

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14463
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14459, metadata !DIExpression()), !dbg !14464
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14465

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14442, metadata !DIExpression()), !dbg !14461
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14466
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14466
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14469
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14469
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14470
  %9 = load i32, i32* %8, align 4, !dbg !14470
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14471
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14471
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14472
  %13 = load i8*, i8** %12, align 4, !dbg !14472
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14473
  %15 = load i8*, i8** %14, align 4, !dbg !14473
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14474
  %17 = load i8*, i8** %16, align 4, !dbg !14474
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14475
  %19 = load i32, i32* %18, align 4, !dbg !14475
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14476
  %21 = load i32, i32* %20, align 4, !dbg !14476
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14477
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14478
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14479
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14480
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14480
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14481
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14442, metadata !DIExpression()), !dbg !14461
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14482
  br i1 %27, label %2, label %1, !dbg !14462, !llvm.loop !14484

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !14463
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14459, metadata !DIExpression()), !dbg !14464
  br label %29, !dbg !14465

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !14486
  ret void, !dbg !14487

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14459, metadata !DIExpression()), !dbg !14464
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14488
  %33 = load i32, i32* %32, align 4, !dbg !14488
  %34 = icmp eq i32 %33, -1, !dbg !14492
  br i1 %34, label %43, label %35, !dbg !14493

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14494
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14494
  %38 = icmp sgt i32 %33, 0, !dbg !14496
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14496
  %40 = zext i32 %39 to i64, !dbg !14496
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.191(i64 noundef %40) #26, !dbg !14496
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14497
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14497
  br label %43, !dbg !14498

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14499
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14459, metadata !DIExpression()), !dbg !14464
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14500
  br i1 %45, label %30, label %29, !dbg !14465, !llvm.loop !14502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.191(i64 noundef %0) unnamed_addr #5 !dbg !14504 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14506, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata i64 %0, metadata !14508, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i32 1000, metadata !14511, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i32 10000, metadata !14512, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i8 1, metadata !14513, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i8 0, metadata !14514, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i8 1, metadata !14515, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i8 0, metadata !14516, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i8 1, metadata !14517, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i8 0, metadata !14518, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i64 0, metadata !14519, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i64 0, metadata !14519, metadata !DIExpression()), !dbg !14523
  %2 = mul i64 %0, 10, !dbg !14525
  ret i64 %2, !dbg !14531
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14532 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14534, metadata !DIExpression()), !dbg !14538
  call void @llvm.dbg.value(metadata i8* %1, metadata !14535, metadata !DIExpression()), !dbg !14538
  call void @llvm.dbg.value(metadata i8* %2, metadata !14536, metadata !DIExpression()), !dbg !14538
  call void @llvm.dbg.value(metadata i8* %3, metadata !14537, metadata !DIExpression()), !dbg !14538
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14539
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14540
  %7 = load i8, i8* %6, align 4, !dbg !14541
  %8 = or i8 %7, 4, !dbg !14541
  store i8 %8, i8* %6, align 4, !dbg !14541
  tail call void @z_thread_essential_clear() #26, !dbg !14542
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !14543
  unreachable, !dbg !14543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14548, metadata !DIExpression()), !dbg !14549
  ret i32 -134, !dbg !14550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14555, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.value(metadata i32 %1, metadata !14556, metadata !DIExpression()), !dbg !14557
  ret i32 -134, !dbg !14558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !14559 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14566, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14567, metadata !DIExpression()), !dbg !14568
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14569
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14571
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14568
  ret i32 %6, !dbg !14572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !14573 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14577, metadata !DIExpression()), !dbg !14578
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14579
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14578
  ret i32 %3, !dbg !14581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14582 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14584
  ret void, !dbg !14585
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14586 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14588, metadata !DIExpression()), !dbg !14591
  call void @llvm.dbg.value(metadata i8* %1, metadata !14589, metadata !DIExpression()), !dbg !14591
  call void @llvm.dbg.value(metadata i8* %2, metadata !14590, metadata !DIExpression()), !dbg !14591
  br label %4, !dbg !14592

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14593, !srcloc !14600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14596, metadata !DIExpression()) #25, !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14597, metadata !DIExpression()) #25, !dbg !14601
  tail call fastcc void @k_cpu_idle() #26, !dbg !14602
  br label %4, !dbg !14592, !llvm.loop !14603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14605 {
  tail call void @arch_cpu_idle() #27, !dbg !14606
  ret void, !dbg !14607
}

; Function Attrs: optsize
declare !dbg !14608 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14609 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14627, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i8* %1, metadata !14628, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i32 %2, metadata !14629, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i32 %3, metadata !14630, metadata !DIExpression()), !dbg !14631
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14632
  store i32 %2, i32* %5, align 4, !dbg !14633
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14634
  store i32 %3, i32* %6, align 4, !dbg !14635
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14636
  store i8* %1, i8** %7, align 4, !dbg !14637
  %8 = mul i32 %3, %2, !dbg !14638
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14639
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14640
  store i8* %9, i8** %10, align 4, !dbg !14641
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14642
  store i8* %1, i8** %11, align 4, !dbg !14643
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14644
  store i8* %1, i8** %12, align 4, !dbg !14645
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14646
  store i32 0, i32* %13, align 4, !dbg !14647
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14648
  store i8 0, i8* %14, align 4, !dbg !14649
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14650
  tail call fastcc void @z_waitq_init.194(%struct._wait_q_t* noundef %15) #26, !dbg !14651
  ret void, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.194(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14653 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14657, metadata !DIExpression()), !dbg !14658
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14659
  tail call fastcc void @sys_dlist_init.195(%struct._dnode* noundef %2) #26, !dbg !14660
  ret void, !dbg !14661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.195(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14662 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14667, metadata !DIExpression()), !dbg !14668
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14669
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14670
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14671
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14672
  ret void, !dbg !14673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14674 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14678, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata i32 %1, metadata !14679, metadata !DIExpression()), !dbg !14684
  call void @llvm.dbg.value(metadata i32 %2, metadata !14680, metadata !DIExpression()), !dbg !14684
  %5 = bitcast i32* %4 to i8*, !dbg !14685
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14685
  call void @llvm.dbg.value(metadata i32* %4, metadata !14683, metadata !DIExpression(DW_OP_deref)), !dbg !14684
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !14686
  br i1 %6, label %13, label %7, !dbg !14688

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14689
  call void @llvm.dbg.value(metadata i32 %8, metadata !14683, metadata !DIExpression()), !dbg !14684
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !14691
  call void @llvm.dbg.value(metadata i8* %9, metadata !14681, metadata !DIExpression()), !dbg !14684
  %10 = icmp eq i8* %9, null, !dbg !14692
  br i1 %10, label %13, label %11, !dbg !14694

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !14695
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14697
  store i8 1, i8* %12, align 4, !dbg !14698
  call void @llvm.dbg.value(metadata i32 0, metadata !14682, metadata !DIExpression()), !dbg !14684
  br label %13, !dbg !14699

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !14700
  call void @llvm.dbg.value(metadata i32 %14, metadata !14682, metadata !DIExpression()), !dbg !14684
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14701
  ret i32 %14, !dbg !14702
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !14703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14708, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata i32 %1, metadata !14709, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata i32* %2, metadata !14710, metadata !DIExpression()), !dbg !14711
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !14712
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !14712
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !14712
  store i32 %6, i32* %2, align 4, !dbg !14712
  ret i1 %5, !dbg !14713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !14714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14718, metadata !DIExpression()), !dbg !14719
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !14720
  ret i8* %2, !dbg !14721
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14722 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14726, metadata !DIExpression()), !dbg !14727
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14728
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !14728
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14728
  br i1 %4, label %5, label %15, !dbg !14730

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14731
  %7 = load i8, i8* %6, align 4, !dbg !14731
  %8 = and i8 %7, 1, !dbg !14733
  %9 = icmp eq i8 %8, 0, !dbg !14734
  br i1 %9, label %15, label %10, !dbg !14735

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14736
  %12 = load i8*, i8** %11, align 4, !dbg !14736
  tail call void @k_free(i8* noundef %12) #27, !dbg !14738
  %13 = load i8, i8* %6, align 4, !dbg !14739
  %14 = and i8 %13, -2, !dbg !14739
  store i8 %14, i8* %6, align 4, !dbg !14739
  br label %15, !dbg !14740

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !14727
  ret i32 %16, !dbg !14741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !14742 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14746, metadata !DIExpression()), !dbg !14747
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14748
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14749
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14750
  ret %struct.k_thread* %4, !dbg !14751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14752 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14756, metadata !DIExpression()), !dbg !14757
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14758
  br i1 %2, label %6, label %3, !dbg !14758

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14759
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14759
  br label %6, !dbg !14758

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14758
  ret %struct._dnode* %7, !dbg !14760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14761 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14765, metadata !DIExpression()), !dbg !14766
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14767
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14767
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14768
  ret i1 %4, !dbg !14769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14770 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14780, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14778, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i8* %1, metadata !14779, metadata !DIExpression()), !dbg !14788
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14790, metadata !DIExpression()) #25, !dbg !14797
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14799, !srcloc !14805
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14799
  call void @llvm.dbg.value(metadata i32 %6, metadata !14802, metadata !DIExpression()) #25, !dbg !14806
  call void @llvm.dbg.value(metadata i32 undef, metadata !14803, metadata !DIExpression()) #25, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %6, metadata !14796, metadata !DIExpression()) #25, !dbg !14797
  call void @llvm.dbg.value(metadata i32 %6, metadata !14782, metadata !DIExpression()), !dbg !14788
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14807
  %8 = load i32, i32* %7, align 4, !dbg !14807
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14809
  %10 = load i32, i32* %9, align 4, !dbg !14809
  %11 = icmp ult i32 %8, %10, !dbg !14810
  br i1 %11, label %12, label %42, !dbg !14811

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14812
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !14814
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14781, metadata !DIExpression()), !dbg !14788
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !14815
  br i1 %15, label %24, label %16, !dbg !14817

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !14818
  %18 = load i8*, i8** %17, align 4, !dbg !14818
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14820
  %20 = load i32, i32* %19, align 4, !dbg !14820
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !14821
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14822, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i32 0, metadata !14827, metadata !DIExpression()), !dbg !14828
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !14830
  store i32 0, i32* %22, align 4, !dbg !14831
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !14832
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14833
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !14833
  br label %53, !dbg !14834

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14835
  %26 = load i8*, i8** %25, align 4, !dbg !14835
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14837
  %28 = load i32, i32* %27, align 4, !dbg !14837
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !14838
  %30 = load i32, i32* %27, align 4, !dbg !14839
  %31 = load i8*, i8** %25, align 4, !dbg !14840
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !14840
  store i8* %32, i8** %25, align 4, !dbg !14840
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14841
  %34 = load i8*, i8** %33, align 4, !dbg !14841
  %35 = icmp eq i8* %32, %34, !dbg !14843
  br i1 %35, label %36, label %39, !dbg !14844

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14845
  %38 = load i8*, i8** %37, align 4, !dbg !14845
  store i8* %38, i8** %25, align 4, !dbg !14847
  br label %39, !dbg !14848

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !14849
  %41 = add i32 %40, 1, !dbg !14849
  store i32 %41, i32* %7, align 4, !dbg !14849
  call void @llvm.dbg.value(metadata i32 0, metadata !14787, metadata !DIExpression()), !dbg !14788
  br label %51, !dbg !14850

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !14780, metadata !DIExpression()), !dbg !14788
  %44 = icmp eq i64 %43, 0, !dbg !14851
  br i1 %44, label %51, label %45, !dbg !14853

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14854
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !14856
  store i8* %1, i8** %47, align 4, !dbg !14857
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14858
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14859
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !14859
  call void @llvm.dbg.value(metadata i32 %50, metadata !14787, metadata !DIExpression()), !dbg !14788
  br label %53, !dbg !14860

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !14861
  call void @llvm.dbg.value(metadata i32 %52, metadata !14787, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i32 %6, metadata !14862, metadata !DIExpression()) #25, !dbg !14868
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14867, metadata !DIExpression()) #25, !dbg !14868
  call void @llvm.dbg.value(metadata i32 %6, metadata !14870, metadata !DIExpression()) #25, !dbg !14873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14875, !srcloc !14876
  br label %53, !dbg !14877

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !14788
  ret i32 %54, !dbg !14878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !14879 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14889, metadata !DIExpression()), !dbg !14891
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14890, metadata !DIExpression()), !dbg !14891
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14892
  %4 = load i32, i32* %3, align 4, !dbg !14892
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14893
  store i32 %4, i32* %5, align 4, !dbg !14894
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14895
  %7 = load i32, i32* %6, align 4, !dbg !14895
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14896
  store i32 %7, i32* %8, align 4, !dbg !14897
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14898
  %10 = load i32, i32* %9, align 4, !dbg !14898
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14899
  store i32 %10, i32* %11, align 4, !dbg !14900
  ret void, !dbg !14901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14902 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14908, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14906, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.value(metadata i8* %1, metadata !14907, metadata !DIExpression()), !dbg !14912
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14790, metadata !DIExpression()) #25, !dbg !14914
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14916, !srcloc !14805
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14916
  call void @llvm.dbg.value(metadata i32 %6, metadata !14802, metadata !DIExpression()) #25, !dbg !14918
  call void @llvm.dbg.value(metadata i32 undef, metadata !14803, metadata !DIExpression()) #25, !dbg !14918
  call void @llvm.dbg.value(metadata i32 %6, metadata !14796, metadata !DIExpression()) #25, !dbg !14914
  call void @llvm.dbg.value(metadata i32 %6, metadata !14909, metadata !DIExpression()), !dbg !14912
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14919
  %8 = load i32, i32* %7, align 4, !dbg !14919
  %9 = icmp eq i32 %8, 0, !dbg !14921
  br i1 %9, label %51, label %10, !dbg !14922

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14923
  %12 = load i8*, i8** %11, align 4, !dbg !14923
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14925
  %14 = load i32, i32* %13, align 4, !dbg !14925
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !14926
  %16 = load i32, i32* %13, align 4, !dbg !14927
  %17 = load i8*, i8** %11, align 4, !dbg !14928
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !14928
  store i8* %18, i8** %11, align 4, !dbg !14928
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14929
  %20 = load i8*, i8** %19, align 4, !dbg !14929
  %21 = icmp eq i8* %18, %20, !dbg !14931
  br i1 %21, label %22, label %25, !dbg !14932

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14933
  %24 = load i8*, i8** %23, align 4, !dbg !14933
  store i8* %24, i8** %11, align 4, !dbg !14935
  br label %25, !dbg !14936

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !14937
  %27 = add i32 %26, -1, !dbg !14937
  store i32 %27, i32* %7, align 4, !dbg !14937
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14938
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !14939
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14910, metadata !DIExpression()), !dbg !14912
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !14940
  br i1 %30, label %60, label %31, !dbg !14942

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14943
  %33 = load i8*, i8** %32, align 4, !dbg !14943
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !14945
  %35 = load i8*, i8** %34, align 4, !dbg !14945
  %36 = load i32, i32* %13, align 4, !dbg !14946
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !14947
  %38 = load i32, i32* %13, align 4, !dbg !14948
  %39 = load i8*, i8** %32, align 4, !dbg !14949
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !14949
  store i8* %40, i8** %32, align 4, !dbg !14949
  %41 = load i8*, i8** %19, align 4, !dbg !14950
  %42 = icmp eq i8* %40, %41, !dbg !14952
  br i1 %42, label %43, label %46, !dbg !14953

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14954
  %45 = load i8*, i8** %44, align 4, !dbg !14954
  store i8* %45, i8** %32, align 4, !dbg !14956
  br label %46, !dbg !14957

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !14958
  %48 = add i32 %47, 1, !dbg !14958
  store i32 %48, i32* %7, align 4, !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14822, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata i32 0, metadata !14827, metadata !DIExpression()), !dbg !14959
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !14961
  store i32 0, i32* %49, align 4, !dbg !14962
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !14963
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14964
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !14964
  br label %62, !dbg !14965

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !14908, metadata !DIExpression()), !dbg !14912
  %53 = icmp eq i64 %52, 0, !dbg !14966
  br i1 %53, label %60, label %54, !dbg !14968

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14969
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !14971
  store i8* %1, i8** %56, align 4, !dbg !14972
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14973
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14974
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !14974
  call void @llvm.dbg.value(metadata i32 %59, metadata !14911, metadata !DIExpression()), !dbg !14912
  br label %62, !dbg !14975

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !14976
  call void @llvm.dbg.value(metadata i32 %61, metadata !14911, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.value(metadata i32 %6, metadata !14862, metadata !DIExpression()) #25, !dbg !14977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14867, metadata !DIExpression()) #25, !dbg !14977
  call void @llvm.dbg.value(metadata i32 %6, metadata !14870, metadata !DIExpression()) #25, !dbg !14979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14981, !srcloc !14876
  br label %62, !dbg !14982

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !14912
  ret i32 %63, !dbg !14983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14984 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14988, metadata !DIExpression()), !dbg !14992
  call void @llvm.dbg.value(metadata i8* %1, metadata !14989, metadata !DIExpression()), !dbg !14992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14790, metadata !DIExpression()) #25, !dbg !14993
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14995, !srcloc !14805
  call void @llvm.dbg.value(metadata i32 undef, metadata !14802, metadata !DIExpression()) #25, !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14803, metadata !DIExpression()) #25, !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #25, !dbg !14993
  call void @llvm.dbg.value(metadata i32 undef, metadata !14990, metadata !DIExpression()), !dbg !14992
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14998
  %5 = load i32, i32* %4, align 4, !dbg !14998
  %6 = icmp eq i32 %5, 0, !dbg !15000
  br i1 %6, label %13, label %7, !dbg !15001

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15002
  %9 = load i8*, i8** %8, align 4, !dbg !15002
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15004
  %11 = load i32, i32* %10, align 4, !dbg !15004
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !15005
  call void @llvm.dbg.value(metadata i32 0, metadata !14991, metadata !DIExpression()), !dbg !14992
  br label %13, !dbg !15006

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !15007
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14995
  call void @llvm.dbg.value(metadata i32 %15, metadata !14802, metadata !DIExpression()) #25, !dbg !14997
  call void @llvm.dbg.value(metadata i32 %15, metadata !14796, metadata !DIExpression()) #25, !dbg !14993
  call void @llvm.dbg.value(metadata i32 %15, metadata !14990, metadata !DIExpression()), !dbg !14992
  call void @llvm.dbg.value(metadata i32 %14, metadata !14991, metadata !DIExpression()), !dbg !14992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14862, metadata !DIExpression()) #25, !dbg !15008
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14867, metadata !DIExpression()) #25, !dbg !15008
  call void @llvm.dbg.value(metadata i32 undef, metadata !14870, metadata !DIExpression()) #25, !dbg !15010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15012, !srcloc !14876
  ret i32 %14, !dbg !15013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15014 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15018, metadata !DIExpression()), !dbg !15021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14790, metadata !DIExpression()) #25, !dbg !15022
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15024, !srcloc !14805
  call void @llvm.dbg.value(metadata i32 undef, metadata !14802, metadata !DIExpression()) #25, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !14803, metadata !DIExpression()) #25, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #25, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15019, metadata !DIExpression()), !dbg !15021
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15027
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15020, metadata !DIExpression()), !dbg !15021
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15028
  br i1 %5, label %11, label %6, !dbg !15029

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14822, metadata !DIExpression()), !dbg !15030
  call void @llvm.dbg.value(metadata i32 -35, metadata !14827, metadata !DIExpression()), !dbg !15030
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15033
  store i32 -35, i32* %8, align 4, !dbg !15034
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15035
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15027
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15020, metadata !DIExpression()), !dbg !15021
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15028
  br i1 %10, label %11, label %6, !dbg !15029, !llvm.loop !15036

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15024
  call void @llvm.dbg.value(metadata i32 %12, metadata !14802, metadata !DIExpression()) #25, !dbg !15026
  call void @llvm.dbg.value(metadata i32 %12, metadata !14796, metadata !DIExpression()) #25, !dbg !15022
  call void @llvm.dbg.value(metadata i32 %12, metadata !15019, metadata !DIExpression()), !dbg !15021
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15038
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15039
  store i32 0, i32* %14, align 4, !dbg !15040
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15041
  %16 = load i8*, i8** %15, align 4, !dbg !15041
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15042
  store i8* %16, i8** %17, align 4, !dbg !15043
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15044
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !15044
  ret void, !dbg !15045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #8 !dbg !15046 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15057, metadata !DIExpression()), !dbg !15058
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15059
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15060
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15061
  store i32 0, i32* %3, align 4, !dbg !15062
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15063
  tail call fastcc void @z_waitq_init.200(%struct._wait_q_t* noundef %4) #26, !dbg !15064
  ret i32 0, !dbg !15065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.200(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !15066 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15070, metadata !DIExpression()), !dbg !15071
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15072
  tail call fastcc void @sys_dlist_init.201(%struct._dnode* noundef %2) #26, !dbg !15073
  ret void, !dbg !15074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.201(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15075 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15080, metadata !DIExpression()), !dbg !15081
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15082
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15083
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15084
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15085
  ret void, !dbg !15086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15087 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15096, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15095, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata i8 0, metadata !15103, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15109, metadata !DIExpression()) #25, !dbg !15116
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15118, !srcloc !15124
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15118
  call void @llvm.dbg.value(metadata i32 %5, metadata !15121, metadata !DIExpression()) #25, !dbg !15125
  call void @llvm.dbg.value(metadata i32 undef, metadata !15122, metadata !DIExpression()) #25, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %5, metadata !15115, metadata !DIExpression()) #25, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %5, metadata !15098, metadata !DIExpression()), !dbg !15108
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15126
  %7 = load i32, i32* %6, align 4, !dbg !15126
  %8 = icmp eq i32 %7, 0, !dbg !15126
  br i1 %8, label %14, label %9, !dbg !15126

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15126
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15126
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15126
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15126
  br i1 %13, label %20, label %29, !dbg !15128, !prof !15129

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15130
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !15132
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !15132
  %18 = load i8, i8* %17, align 2, !dbg !15132
  %19 = sext i8 %18 to i32, !dbg !15130
  br label %23, !dbg !15133

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15134
  %22 = load i32, i32* %21, align 4, !dbg !15134
  br label %23, !dbg !15133

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !15135
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !15133
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15136
  store i32 %25, i32* %26, align 4, !dbg !15137
  %27 = add i32 %7, 1, !dbg !15138
  store i32 %27, i32* %6, align 4, !dbg !15138
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15139
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !15140
  call void @llvm.dbg.value(metadata i32 %5, metadata !15141, metadata !DIExpression()) #25, !dbg !15147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15146, metadata !DIExpression()) #25, !dbg !15147
  call void @llvm.dbg.value(metadata i32 %5, metadata !15149, metadata !DIExpression()) #25, !dbg !15152
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15154, !srcloc !15155
  br label %78, !dbg !15156

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !15157
  br i1 %30, label %31, label %32, !dbg !15159, !prof !15160

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !15141, metadata !DIExpression()) #25, !dbg !15161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15146, metadata !DIExpression()) #25, !dbg !15161
  call void @llvm.dbg.value(metadata i32 %5, metadata !15149, metadata !DIExpression()) #25, !dbg !15164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15166, !srcloc !15155
  br label %78, !dbg !15167

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !15168
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !15168
  %35 = load i8, i8* %34, align 2, !dbg !15168
  %36 = sext i8 %35 to i32, !dbg !15169
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !15170
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !15170
  %39 = load i8, i8* %38, align 2, !dbg !15170
  %40 = sext i8 %39 to i32, !dbg !15171
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #26, !dbg !15172
  call void @llvm.dbg.value(metadata i32 %41, metadata !15097, metadata !DIExpression()), !dbg !15108
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #26, !dbg !15173
  br i1 %42, label %43, label %45, !dbg !15175

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #26, !dbg !15176
  call void @llvm.dbg.value(metadata i1 %44, metadata !15103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15108
  br label %45, !dbg !15178

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15103, metadata !DIExpression()), !dbg !15108
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15179
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15180
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #27, !dbg !15180
  call void @llvm.dbg.value(metadata i32 %49, metadata !15104, metadata !DIExpression()), !dbg !15108
  %50 = icmp eq i32 %49, 0, !dbg !15181
  br i1 %50, label %78, label %51, !dbg !15183

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15109, metadata !DIExpression()) #25, !dbg !15184
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15186, !srcloc !15124
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !15186
  call void @llvm.dbg.value(metadata i32 %53, metadata !15121, metadata !DIExpression()) #25, !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !15122, metadata !DIExpression()) #25, !dbg !15188
  call void @llvm.dbg.value(metadata i32 %53, metadata !15115, metadata !DIExpression()) #25, !dbg !15184
  call void @llvm.dbg.value(metadata i32 %53, metadata !15098, metadata !DIExpression()), !dbg !15108
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15189
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !15189
  br i1 %55, label %74, label %56, !dbg !15190, !prof !15160

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.204(%struct._wait_q_t* noundef nonnull %47) #26, !dbg !15191
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !15105, metadata !DIExpression()), !dbg !15192
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !15193
  br i1 %58, label %67, label %59, !dbg !15194

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !15195
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !15195
  %62 = load i8, i8* %61, align 2, !dbg !15195
  %63 = sext i8 %62 to i32, !dbg !15196
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15197
  %65 = load i32, i32* %64, align 4, !dbg !15197
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #26, !dbg !15198
  br label %70, !dbg !15194

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15199
  %69 = load i32, i32* %68, align 4, !dbg !15199
  br label %70, !dbg !15194

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !15194
  call void @llvm.dbg.value(metadata i32 %71, metadata !15097, metadata !DIExpression()), !dbg !15108
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #26, !dbg !15200
  %73 = select i1 %72, i1 true, i1 %46, !dbg !15201
  call void @llvm.dbg.value(metadata i1 %73, metadata !15103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15108
  call void @llvm.dbg.value(metadata i8 poison, metadata !15103, metadata !DIExpression()), !dbg !15108
  br i1 %73, label %75, label %77, !dbg !15202

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !15103, metadata !DIExpression()), !dbg !15108
  br i1 %46, label %75, label %77, !dbg !15202

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !15203
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #27, !dbg !15203
  br label %78, !dbg !15206

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !15141, metadata !DIExpression()) #25, !dbg !15207
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15146, metadata !DIExpression()) #25, !dbg !15207
  call void @llvm.dbg.value(metadata i32 %53, metadata !15149, metadata !DIExpression()) #25, !dbg !15210
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #25, !dbg !15212, !srcloc !15155
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !15108
  ret i32 %79, !dbg !15213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15218, metadata !DIExpression()), !dbg !15221
  call void @llvm.dbg.value(metadata i32 %1, metadata !15219, metadata !DIExpression()), !dbg !15221
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #26, !dbg !15222
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15222
  call void @llvm.dbg.value(metadata i32 %4, metadata !15220, metadata !DIExpression()), !dbg !15221
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #26, !dbg !15223
  call void @llvm.dbg.value(metadata i32 %5, metadata !15220, metadata !DIExpression()), !dbg !15221
  ret i32 %5, !dbg !15224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15229, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.value(metadata i32 %1, metadata !15230, metadata !DIExpression()), !dbg !15231
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15232
  ret i1 %3, !dbg !15233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15234 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15238, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata i32 %1, metadata !15239, metadata !DIExpression()), !dbg !15240
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15241
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15241
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15243
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15243
  %7 = load i8, i8* %6, align 2, !dbg !15243
  %8 = sext i8 %7 to i32, !dbg !15244
  %9 = icmp eq i32 %8, %1, !dbg !15245
  br i1 %9, label %12, label %10, !dbg !15246

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #27, !dbg !15247
  br label %12, !dbg !15249

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15240
  ret i1 %13, !dbg !15250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.204(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !15251 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15255, metadata !DIExpression()), !dbg !15256
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15257
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.205(%struct._dnode* noundef %2) #26, !dbg !15258
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15259
  ret %struct.k_thread* %4, !dbg !15260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.205(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15265, metadata !DIExpression()), !dbg !15266
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.206(%struct._dnode* noundef %0) #26, !dbg !15267
  br i1 %2, label %6, label %3, !dbg !15267

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15268
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15268
  br label %6, !dbg !15267

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15267
  ret %struct._dnode* %7, !dbg !15269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.206(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15270 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15274, metadata !DIExpression()), !dbg !15275
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15276
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15276
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15277
  ret i1 %4, !dbg !15278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15281, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata i32 %1, metadata !15282, metadata !DIExpression()), !dbg !15283
  %3 = icmp slt i32 %0, %1, !dbg !15284
  ret i1 %3, !dbg !15285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15288, metadata !DIExpression()), !dbg !15289
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #26, !dbg !15290
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15290
  ret i32 %3, !dbg !15291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15296, metadata !DIExpression()), !dbg !15297
  %2 = icmp sgt i32 %0, -128, !dbg !15298
  ret i1 %2, !dbg !15299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15302, metadata !DIExpression()), !dbg !15306
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15307
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !15307
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15307
  br i1 %4, label %31, label %5, !dbg !15309

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15310
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !15310
  br i1 %7, label %8, label %31, !dbg !15312

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15313
  %10 = load i32, i32* %9, align 4, !dbg !15313
  %11 = icmp ugt i32 %10, 1, !dbg !15315
  br i1 %11, label %12, label %14, !dbg !15316

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !15317
  store i32 %13, i32* %9, align 4, !dbg !15317
  br label %31, !dbg !15319

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15109, metadata !DIExpression()) #25, !dbg !15320
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15322, !srcloc !15124
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15322
  call void @llvm.dbg.value(metadata i32 %16, metadata !15121, metadata !DIExpression()) #25, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !15122, metadata !DIExpression()) #25, !dbg !15324
  call void @llvm.dbg.value(metadata i32 %16, metadata !15115, metadata !DIExpression()) #25, !dbg !15320
  call void @llvm.dbg.value(metadata i32 %16, metadata !15304, metadata !DIExpression()), !dbg !15306
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15325
  %18 = load i32, i32* %17, align 4, !dbg !15325
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #26, !dbg !15326
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15327
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #27, !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15303, metadata !DIExpression()), !dbg !15306
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !15329
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !15330
  br i1 %22, label %30, label %23, !dbg !15332

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !15333
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !15333
  %26 = load i8, i8* %25, align 2, !dbg !15333
  %27 = sext i8 %26 to i32, !dbg !15335
  store i32 %27, i32* %17, align 4, !dbg !15336
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15337, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata i32 0, metadata !15342, metadata !DIExpression()), !dbg !15343
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !15345
  store i32 0, i32* %28, align 4, !dbg !15346
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #27, !dbg !15347
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15348
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #27, !dbg !15348
  br label %31, !dbg !15349

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !15350
  call void @llvm.dbg.value(metadata i32 %16, metadata !15141, metadata !DIExpression()) #25, !dbg !15352
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15146, metadata !DIExpression()) #25, !dbg !15352
  call void @llvm.dbg.value(metadata i32 %16, metadata !15149, metadata !DIExpression()) #25, !dbg !15354
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !15356, !srcloc !15155
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !15306
  ret i32 %32, !dbg !15357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !15358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15362, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15363, metadata !DIExpression()), !dbg !15366
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15367
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15367
  %5 = load i8, i8* %4, align 2, !dbg !15367
  call void @llvm.dbg.value(metadata i8 %5, metadata !15364, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15366
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15368
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15368
  %8 = load i8, i8* %7, align 2, !dbg !15368
  call void @llvm.dbg.value(metadata i8 %8, metadata !15365, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15366
  %9 = icmp eq i8 %8, %5, !dbg !15369
  %10 = sext i8 %5 to i32, !dbg !15371
  %11 = sext i8 %8 to i32, !dbg !15371
  %12 = sub nsw i32 %11, %10, !dbg !15371
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15371
  ret i32 %13, !dbg !15372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15377, metadata !DIExpression()), !dbg !15378
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15379
  %3 = icmp eq i32 %2, 0, !dbg !15381
  br i1 %3, label %8, label %4, !dbg !15382

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15383
  %6 = add i32 %5, %2, !dbg !15385
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15386
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15387
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15388
  br label %8, !dbg !15389

8:                                                ; preds = %4, %1
  ret void, !dbg !15390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !15391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15395, metadata !DIExpression()), !dbg !15397
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15398
  call void @llvm.dbg.value(metadata i32 %1, metadata !15396, metadata !DIExpression()), !dbg !15397
  ret i32 %1, !dbg !15399
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15404, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 %1, metadata !15405, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 0, metadata !15406, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !15422
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15424, !srcloc !15430
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %4, metadata !15427, metadata !DIExpression()) #25, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !15431
  call void @llvm.dbg.value(metadata i32 %4, metadata !15421, metadata !DIExpression()) #25, !dbg !15422
  call void @llvm.dbg.value(metadata i32 %4, metadata !15412, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata i32 undef, metadata !15406, metadata !DIExpression()), !dbg !15414
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15432
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15435
  %6 = icmp sgt i32 %0, 0, !dbg !15436
  %7 = icmp sgt i32 %5, 2, !dbg !15438
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15438
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15438
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15439
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15440
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15441
  call void @llvm.dbg.value(metadata i32 %4, metadata !15442, metadata !DIExpression()) #25, !dbg !15448
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %4, metadata !15450, metadata !DIExpression()) #25, !dbg !15453
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15455, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !15406, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata i32 undef, metadata !15406, metadata !DIExpression()), !dbg !15414
  ret void, !dbg !15457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15460, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i32 %0, metadata !15462, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15477
  call void @llvm.dbg.value(metadata i32 1000, metadata !15465, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i32 10000, metadata !15466, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i8 1, metadata !15467, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i1 true, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15477
  call void @llvm.dbg.value(metadata i1 true, metadata !15469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15477
  call void @llvm.dbg.value(metadata i8 0, metadata !15470, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i1 true, metadata !15471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15477
  call void @llvm.dbg.value(metadata i1 false, metadata !15472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15477
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !15477
  %2 = mul i32 %0, 10, !dbg !15479
  ret i32 %2, !dbg !15485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15488, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !15491
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15493, !srcloc !15430
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15493
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %3, metadata !15421, metadata !DIExpression()) #25, !dbg !15491
  call void @llvm.dbg.value(metadata i32 %3, metadata !15489, metadata !DIExpression()), !dbg !15490
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15496
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15498
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15499
  br i1 %6, label %7, label %8, !dbg !15500

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !15503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !15503
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !15505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15507, !srcloc !15456
  br label %24, !dbg !15508

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15509
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15510
  %10 = icmp eq i32 %9, 0, !dbg !15510
  br i1 %10, label %21, label %11, !dbg !15512

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15513
  br i1 %12, label %13, label %21, !dbg !15514

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15515
  %15 = icmp sgt i32 %14, %0, !dbg !15518
  br i1 %15, label %19, label %16, !dbg !15519

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15520
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %18, metadata !15489, metadata !DIExpression()), !dbg !15490
  br label %22, !dbg !15522

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15523
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15523
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15525
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15490
  call void @llvm.dbg.value(metadata i32 %23, metadata !15489, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.value(metadata i32 %23, metadata !15442, metadata !DIExpression()) #25, !dbg !15527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !15527
  call void @llvm.dbg.value(metadata i32 %23, metadata !15450, metadata !DIExpression()) #25, !dbg !15529
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15531, !srcloc !15456
  br label %24, !dbg !15532

24:                                               ; preds = %22, %7
  ret void, !dbg !15532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !15533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15537, metadata !DIExpression()), !dbg !15539
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15540
  %3 = icmp eq i32 %2, 0, !dbg !15540
  br i1 %3, label %16, label %4, !dbg !15541

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15542
  br i1 %5, label %16, label %6, !dbg !15543

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15544
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15544
  %9 = load i8, i8* %8, align 2, !dbg !15544
  %10 = sext i8 %9 to i32, !dbg !15545
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15546
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.212(i32 noundef %10, i32 noundef %11) #26, !dbg !15547
  br i1 %12, label %16, label %13, !dbg !15548

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15549
  %15 = xor i1 %14, true, !dbg !15550
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15539
  call void @llvm.dbg.value(metadata i1 %17, metadata !15538, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15539
  ret i1 %17, !dbg !15551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15552 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15556, metadata !DIExpression()), !dbg !15558
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15559
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15557, metadata !DIExpression()), !dbg !15558
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15560
  br i1 %3, label %5, label %4, !dbg !15562

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15563
  br label %5, !dbg !15565

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15556, metadata !DIExpression()), !dbg !15558
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15566
  ret i32 %6, !dbg !15567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15570, metadata !DIExpression()), !dbg !15572
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15573
  %3 = load i8, i8* %2, align 1, !dbg !15573
  call void @llvm.dbg.value(metadata i8 %3, metadata !15571, metadata !DIExpression()), !dbg !15572
  %4 = and i8 %3, 31, !dbg !15574
  %5 = icmp ne i8 %4, 0, !dbg !15575
  ret i1 %5, !dbg !15576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15579, metadata !DIExpression()), !dbg !15580
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15581
  br i1 %2, label %3, label %7, !dbg !15583

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15584, metadata !DIExpression()) #25, !dbg !15587
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15590
  %5 = load i8, i8* %4, align 1, !dbg !15591
  %6 = and i8 %5, 127, !dbg !15591
  store i8 %6, i8* %4, align 1, !dbg !15591
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()) #25, !dbg !15595
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15599
  br label %7, !dbg !15600

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15601, metadata !DIExpression()) #25, !dbg !15604
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15606
  %9 = load i8, i8* %8, align 1, !dbg !15607
  %10 = or i8 %9, -128, !dbg !15607
  store i8 %10, i8* %8, align 1, !dbg !15607
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()) #25, !dbg !15611
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15615, metadata !DIExpression()) #25, !dbg !15623
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15621, metadata !DIExpression()) #25, !dbg !15623
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15625
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15622, metadata !DIExpression()) #25, !dbg !15623
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15627
  br i1 %12, label %23, label %13, !dbg !15625

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15622, metadata !DIExpression()) #25, !dbg !15623
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15629
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15622, metadata !DIExpression()) #25, !dbg !15623
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15630
  %17 = icmp sgt i32 %16, 0, !dbg !15633
  br i1 %17, label %18, label %20, !dbg !15634

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15635
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15637
  br label %25, !dbg !15638

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15627
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15622, metadata !DIExpression()) #25, !dbg !15623
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15627
  br i1 %22, label %23, label %13, !dbg !15625, !llvm.loop !15639

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15641
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15642
  br label %25, !dbg !15643

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15644
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15645
  %28 = zext i1 %27 to i32, !dbg !15645
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15646
  ret void, !dbg !15647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15648 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15650, metadata !DIExpression()), !dbg !15651
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15652
  ret i1 %2, !dbg !15653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #9 !dbg !15654 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15656, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15657, metadata !DIExpression()), !dbg !15658
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15659
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15660
  ret void, !dbg !15661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15662 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15666, metadata !DIExpression()), !dbg !15667
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.210(%struct._dnode* noundef %0) #26, !dbg !15668
  br i1 %2, label %6, label %3, !dbg !15668

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15669
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15669
  br label %6, !dbg !15668

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15668
  ret %struct._dnode* %7, !dbg !15670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15671 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15675, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15676, metadata !DIExpression()), !dbg !15679
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15680
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15680
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15677, metadata !DIExpression()), !dbg !15679
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15681
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15682
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15683
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15684
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15685
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15686
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15687
  ret void, !dbg !15688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15689 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15693, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15694, metadata !DIExpression()), !dbg !15695
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15696
  br i1 %3, label %6, label %4, !dbg !15697

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15698
  br label %6, !dbg !15697

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15697
  ret %struct._dnode* %7, !dbg !15699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15700 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15704, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15705, metadata !DIExpression()), !dbg !15707
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15708
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15708
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15706, metadata !DIExpression()), !dbg !15707
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15709
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15710
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15711
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15712
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15713
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15714
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15715
  ret void, !dbg !15716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15719, metadata !DIExpression()), !dbg !15721
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15722
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15729, metadata !DIExpression()) #25, !dbg !15731
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15732
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15733
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15733
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15720, metadata !DIExpression()), !dbg !15721
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15734, metadata !DIExpression()) #25, !dbg !15740
  call void @llvm.dbg.value(metadata i32 %0, metadata !15739, metadata !DIExpression()) #25, !dbg !15740
  %6 = icmp eq i32 %0, 0, !dbg !15743
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15745
  br i1 %6, label %8, label %15, !dbg !15746

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !15747
  br i1 %9, label %15, label %10, !dbg !15749

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !15750
  br i1 %11, label %15, label %12, !dbg !15752

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !15753
  %14 = icmp eq i32 %13, 0, !dbg !15753
  br i1 %14, label %18, label %15, !dbg !15755

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15756
  br i1 %16, label %18, label %17, !dbg !15759

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15760
  br label %18, !dbg !15762

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15745
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15745
  ret void, !dbg !15763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !15764 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15768, metadata !DIExpression()), !dbg !15771
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15769, metadata !DIExpression()), !dbg !15771
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef %0) #26, !dbg !15772
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15770, metadata !DIExpression()), !dbg !15771
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15769, metadata !DIExpression()), !dbg !15771
  ret %struct.k_thread* %3, !dbg !15773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15776, metadata !DIExpression()), !dbg !15777
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15778
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15779
  %4 = xor i1 %3, true, !dbg !15780
  ret i1 %4, !dbg !15781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15784, metadata !DIExpression()), !dbg !15785
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15786
  %3 = load i16, i16* %2, align 2, !dbg !15786
  %4 = icmp ult i16 %3, 128, !dbg !15787
  %5 = zext i1 %4 to i32, !dbg !15787
  ret i32 %5, !dbg !15788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15789 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15795, metadata !DIExpression()), !dbg !15796
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15797
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15798
  %4 = xor i1 %3, true, !dbg !15799
  ret i1 %4, !dbg !15800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15801 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15807, metadata !DIExpression()), !dbg !15808
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15809
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15809
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15810
  ret i1 %4, !dbg !15811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15812 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15814, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15815, metadata !DIExpression()), !dbg !15816
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15817
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15817
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15818
  br i1 %5, label %9, label %6, !dbg !15819

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15820
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15820
  br label %9, !dbg !15819

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15819
  ret %struct._dnode* %10, !dbg !15821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.210(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15822 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15826, metadata !DIExpression()), !dbg !15827
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15828
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15828
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15829
  ret i1 %4, !dbg !15830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15831 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15835, metadata !DIExpression()), !dbg !15838
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15839
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15839
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15836, metadata !DIExpression()), !dbg !15838
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15840
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15840
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15837, metadata !DIExpression()), !dbg !15838
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15841
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15842
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15843
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15844
  tail call fastcc void @sys_dnode_init.211(%struct._dnode* noundef %0) #26, !dbg !15845
  ret void, !dbg !15846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.211(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15847 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15849, metadata !DIExpression()), !dbg !15850
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15851
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15852
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15853
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15854
  ret void, !dbg !15855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15860, metadata !DIExpression()), !dbg !15862
  call void @llvm.dbg.value(metadata i32 128, metadata !15861, metadata !DIExpression()), !dbg !15862
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15863
  %3 = load i8, i8* %2, align 1, !dbg !15863
  %4 = icmp slt i8 %3, 0, !dbg !15864
  ret i1 %4, !dbg !15865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.212(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15868, metadata !DIExpression()), !dbg !15870
  call void @llvm.dbg.value(metadata i32 %1, metadata !15869, metadata !DIExpression()), !dbg !15870
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.213(i32 noundef %0, i32 noundef %1) #26, !dbg !15871
  ret i1 %3, !dbg !15872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !15873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15875, metadata !DIExpression()), !dbg !15876
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15877
  ret i1 %2, !dbg !15878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.213(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15881, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.value(metadata i32 %1, metadata !15882, metadata !DIExpression()), !dbg !15883
  %3 = icmp slt i32 %0, %1, !dbg !15884
  ret i1 %3, !dbg !15885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15888, metadata !DIExpression()), !dbg !15892
  call void @llvm.dbg.value(metadata i32 0, metadata !15889, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !15894
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15896, !srcloc !15430
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15896
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #25, !dbg !15898
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !15898
  call void @llvm.dbg.value(metadata i32 %3, metadata !15421, metadata !DIExpression()) #25, !dbg !15894
  call void @llvm.dbg.value(metadata i32 %3, metadata !15891, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i32 undef, metadata !15889, metadata !DIExpression()), !dbg !15893
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15899
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !15904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !15906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15908, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !15889, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i32 undef, metadata !15889, metadata !DIExpression()), !dbg !15893
  ret void, !dbg !15909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15912, metadata !DIExpression()), !dbg !15913
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15914
  br i1 %2, label %24, label %3, !dbg !15916

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15917
  br i1 %4, label %5, label %24, !dbg !15918

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15601, metadata !DIExpression()) #25, !dbg !15919
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15922
  %7 = load i8, i8* %6, align 1, !dbg !15923
  %8 = or i8 %7, -128, !dbg !15923
  store i8 %8, i8* %6, align 1, !dbg !15923
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()) #25, !dbg !15924
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15615, metadata !DIExpression()) #25, !dbg !15926
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15621, metadata !DIExpression()) #25, !dbg !15926
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15928
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15622, metadata !DIExpression()) #25, !dbg !15926
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15929
  br i1 %10, label %21, label %11, !dbg !15928

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15622, metadata !DIExpression()) #25, !dbg !15926
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15622, metadata !DIExpression()) #25, !dbg !15926
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !15931
  %15 = icmp sgt i32 %14, 0, !dbg !15932
  br i1 %15, label %16, label %18, !dbg !15933

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15934
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !15935
  br label %23, !dbg !15936

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !15929
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15622, metadata !DIExpression()) #25, !dbg !15926
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15929
  br i1 %20, label %21, label %11, !dbg !15928, !llvm.loop !15937

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15939
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !15940
  br label %23, !dbg !15941

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15942
  br label %24, !dbg !15943

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15947, metadata !DIExpression()), !dbg !15948
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15949
  br i1 %2, label %6, label %3, !dbg !15950

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15951
  %5 = xor i1 %4, true, !dbg !15950
  br label %6, !dbg !15950

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15955, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i32 0, metadata !15956, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !15961
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15963, !srcloc !15430
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15963
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #25, !dbg !15965
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %3, metadata !15421, metadata !DIExpression()) #25, !dbg !15961
  call void @llvm.dbg.value(metadata i32 %3, metadata !15958, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 undef, metadata !15956, metadata !DIExpression()), !dbg !15960
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !15971
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15973, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !15956, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 undef, metadata !15956, metadata !DIExpression()), !dbg !15960
  ret void, !dbg !15974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15975 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15977, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !15980
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15982, !srcloc !15430
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #25, !dbg !15984
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %3, metadata !15421, metadata !DIExpression()) #25, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %3, metadata !15978, metadata !DIExpression()), !dbg !15979
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15985
  br i1 %4, label %5, label %6, !dbg !15987

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !15988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !15991
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15993, !srcloc !15456
  br label %8, !dbg !15994

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.218(%struct.k_thread* noundef %0) #26, !dbg !15995
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15996
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15997
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15997
  br label %8, !dbg !15998

8:                                                ; preds = %6, %5
  ret void, !dbg !15998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16001, metadata !DIExpression()), !dbg !16002
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16003
  %3 = load i8, i8* %2, align 1, !dbg !16003
  %4 = and i8 %3, 4, !dbg !16004
  %5 = icmp eq i8 %4, 0, !dbg !16005
  ret i1 %5, !dbg !16006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.218(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16009, metadata !DIExpression()), !dbg !16010
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16011
  %3 = load i8, i8* %2, align 1, !dbg !16012
  %4 = and i8 %3, -5, !dbg !16012
  store i8 %4, i8* %2, align 1, !dbg !16012
  ret void, !dbg !16013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16014 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16017, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16016, metadata !DIExpression()), !dbg !16018
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16019
  br i1 %4, label %5, label %9, !dbg !16021

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16022
  br i1 %6, label %7, label %9, !dbg !16023

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16024, metadata !DIExpression()) #25, !dbg !16030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16029, metadata !DIExpression()) #25, !dbg !16030
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16033
  br label %10, !dbg !16034

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !16035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16035
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !16038
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16040, !srcloc !15456
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16046, metadata !DIExpression()), !dbg !16047
  call void @llvm.dbg.value(metadata i32 %0, metadata !16048, metadata !DIExpression()), !dbg !16053
  %2 = icmp eq i32 %0, 0, !dbg !16055
  br i1 %2, label %3, label %6, !dbg !16056

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16057, !srcloc !16064
  call void @llvm.dbg.value(metadata i32 %4, metadata !16060, metadata !DIExpression()) #25, !dbg !16065
  %5 = icmp eq i32 %4, 0, !dbg !16066
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16047
  ret i1 %7, !dbg !16067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !16068 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16071
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16070, metadata !DIExpression()), !dbg !16072
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16073
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16074
  ret i1 %3, !dbg !16075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16078, metadata !DIExpression()), !dbg !16080
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16081
  call void @llvm.dbg.value(metadata i32 %2, metadata !16079, metadata !DIExpression()), !dbg !16080
  ret i32 %2, !dbg !16082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16085, metadata !DIExpression()), !dbg !16089
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16090
  call void @llvm.dbg.value(metadata i32 0, metadata !16086, metadata !DIExpression()), !dbg !16091
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16092
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16094, !srcloc !15430
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16094
  call void @llvm.dbg.value(metadata i32 %4, metadata !15427, metadata !DIExpression()) #25, !dbg !16096
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16096
  call void @llvm.dbg.value(metadata i32 %4, metadata !15421, metadata !DIExpression()) #25, !dbg !16092
  call void @llvm.dbg.value(metadata i32 %4, metadata !16088, metadata !DIExpression()), !dbg !16091
  call void @llvm.dbg.value(metadata i32 undef, metadata !16086, metadata !DIExpression()), !dbg !16091
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16097
  br i1 %5, label %6, label %10, !dbg !16101

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15584, metadata !DIExpression()) #25, !dbg !16102
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16105
  %8 = load i8, i8* %7, align 1, !dbg !16106
  %9 = and i8 %8, 127, !dbg !16106
  store i8 %9, i8* %7, align 1, !dbg !16106
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()) #25, !dbg !16107
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16109
  br label %10, !dbg !16110

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16111
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16112
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16113
  %13 = zext i1 %12 to i32, !dbg !16113
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16114
  call void @llvm.dbg.value(metadata i32 %4, metadata !15442, metadata !DIExpression()) #25, !dbg !16115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16115
  call void @llvm.dbg.value(metadata i32 %4, metadata !15450, metadata !DIExpression()) #25, !dbg !16117
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16119, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !16086, metadata !DIExpression()), !dbg !16091
  call void @llvm.dbg.value(metadata i32 undef, metadata !16086, metadata !DIExpression()), !dbg !16091
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16120
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16122
  br i1 %15, label %16, label %17, !dbg !16123

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16124
  br label %17, !dbg !16126

17:                                               ; preds = %16, %10
  ret void, !dbg !16127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16128 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16130, metadata !DIExpression()), !dbg !16131
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16132
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16133
  ret i32 %3, !dbg !16134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16137, metadata !DIExpression()), !dbg !16138
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16139
  %3 = load i8, i8* %2, align 1, !dbg !16140
  %4 = or i8 %3, 16, !dbg !16140
  store i8 %4, i8* %2, align 1, !dbg !16140
  ret void, !dbg !16141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16142 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16143, !srcloc !15430
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16143
  call void @llvm.dbg.value(metadata i32 %2, metadata !15427, metadata !DIExpression()) #25, !dbg !16145
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16145
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16146
  ret void, !dbg !16147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16150, metadata !DIExpression()), !dbg !16151
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16152
  br i1 %2, label %3, label %5, !dbg !16154

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16155
  br label %6, !dbg !16157

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15450, metadata !DIExpression()) #25, !dbg !16158
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16161, !srcloc !15456
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16165, metadata !DIExpression()), !dbg !16167
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16168
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16170, !srcloc !15430
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16170
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #25, !dbg !16172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16172
  call void @llvm.dbg.value(metadata i32 %3, metadata !15421, metadata !DIExpression()) #25, !dbg !16168
  call void @llvm.dbg.value(metadata i32 %3, metadata !16166, metadata !DIExpression()), !dbg !16167
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16173
  br i1 %4, label %6, label %5, !dbg !16175

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !16176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16176
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !16179
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16181, !srcloc !15456
  br label %8, !dbg !16182

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16183
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16184
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16185
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16185
  br label %8, !dbg !16186

8:                                                ; preds = %6, %5
  ret void, !dbg !16186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16189, metadata !DIExpression()), !dbg !16190
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16191
  %3 = load i8, i8* %2, align 1, !dbg !16191
  %4 = and i8 %3, 16, !dbg !16192
  %5 = icmp ne i8 %4, 0, !dbg !16193
  ret i1 %5, !dbg !16194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16197, metadata !DIExpression()), !dbg !16198
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16199
  %3 = load i8, i8* %2, align 1, !dbg !16200
  %4 = and i8 %3, -17, !dbg !16200
  store i8 %4, i8* %2, align 1, !dbg !16200
  ret void, !dbg !16201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16202 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16212, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16210, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16211, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.value(metadata i32 0, metadata !16213, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16218
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16220, !srcloc !15430
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16220
  call void @llvm.dbg.value(metadata i32 %5, metadata !15427, metadata !DIExpression()) #25, !dbg !16222
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16222
  call void @llvm.dbg.value(metadata i32 %5, metadata !15421, metadata !DIExpression()) #25, !dbg !16218
  call void @llvm.dbg.value(metadata i32 %5, metadata !16215, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata i32 undef, metadata !16213, metadata !DIExpression()), !dbg !16217
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16223
  call void @llvm.dbg.value(metadata i32 %5, metadata !15442, metadata !DIExpression()) #25, !dbg !16226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16226
  call void @llvm.dbg.value(metadata i32 %5, metadata !15450, metadata !DIExpression()) #25, !dbg !16228
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16230, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !16213, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata i32 undef, metadata !16213, metadata !DIExpression()), !dbg !16217
  ret void, !dbg !16231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16232 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16236, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16234, metadata !DIExpression()), !dbg !16237
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16235, metadata !DIExpression()), !dbg !16237
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !16238
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16239
  ret void, !dbg !16240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16245, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16246, metadata !DIExpression()), !dbg !16247
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16248
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16249
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16250
  br i1 %3, label %21, label %4, !dbg !16252

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16253
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16255
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16256
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15615, metadata !DIExpression()) #25, !dbg !16257
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15621, metadata !DIExpression()) #25, !dbg !16257
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef nonnull %6) #27, !dbg !16259
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15622, metadata !DIExpression()) #25, !dbg !16257
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16260
  br i1 %8, label %19, label %9, !dbg !16259

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15622, metadata !DIExpression()) #25, !dbg !16257
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16261
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15622, metadata !DIExpression()) #25, !dbg !16257
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16262
  %13 = icmp sgt i32 %12, 0, !dbg !16263
  br i1 %13, label %14, label %16, !dbg !16264

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16265
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16266
  br label %21, !dbg !16267

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16260
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15622, metadata !DIExpression()) #25, !dbg !16257
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16260
  br i1 %18, label %19, label %9, !dbg !16259, !llvm.loop !16268

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16270
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16271
  br label %21, !dbg !16272

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16274 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16279, metadata !DIExpression()), !dbg !16280
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16278, metadata !DIExpression()), !dbg !16280
  %4 = icmp eq i64 %3, -1, !dbg !16281
  br i1 %4, label %6, label %5, !dbg !16283

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.221(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16284
  br label %6, !dbg !16286

6:                                                ; preds = %5, %2
  ret void, !dbg !16287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.221(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16288 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16291, metadata !DIExpression()), !dbg !16292
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16290, metadata !DIExpression()), !dbg !16292
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16293
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16294
  ret void, !dbg !16295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16296 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16298, metadata !DIExpression()), !dbg !16306
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16307
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16307
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16299, metadata !DIExpression()), !dbg !16306
  call void @llvm.dbg.value(metadata i32 0, metadata !16300, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16309
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16311, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16313
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16313
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()) #25, !dbg !16309
  call void @llvm.dbg.value(metadata i32 undef, metadata !16302, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata i32 undef, metadata !16300, metadata !DIExpression()), !dbg !16308
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16314
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16315
  %7 = load i8, i8* %6, align 1, !dbg !16315
  %8 = and i8 %7, 40, !dbg !16316
  %9 = icmp eq i8 %8, 0, !dbg !16316
  call void @llvm.dbg.value(metadata i1 %9, metadata !16303, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16317
  br i1 %9, label %10, label %17, !dbg !16318

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16319
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16319
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16319
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16323
  br i1 %14, label %16, label %15, !dbg !16324

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16325
  br label %16, !dbg !16327

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.218(%struct.k_thread* noundef nonnull %3) #26, !dbg !16328
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16329
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16330
  br label %17, !dbg !16331

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16311
  call void @llvm.dbg.value(metadata i32 %18, metadata !15427, metadata !DIExpression()) #25, !dbg !16313
  call void @llvm.dbg.value(metadata i32 %18, metadata !15421, metadata !DIExpression()) #25, !dbg !16309
  call void @llvm.dbg.value(metadata i32 %18, metadata !16302, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16332
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #25, !dbg !16334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16336, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !16300, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata i32 undef, metadata !16300, metadata !DIExpression()), !dbg !16308
  ret void, !dbg !16337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16340, metadata !DIExpression()), !dbg !16341
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16342
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16343
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16344
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !16345
  ret void, !dbg !16346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16347 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16349, metadata !DIExpression()), !dbg !16350
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16351
  %3 = load i8, i8* %2, align 1, !dbg !16352
  %4 = and i8 %3, -3, !dbg !16352
  store i8 %4, i8* %2, align 1, !dbg !16352
  ret void, !dbg !16353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16354 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16356, metadata !DIExpression()), !dbg !16357
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16358
  br i1 %2, label %3, label %7, !dbg !16360

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15584, metadata !DIExpression()) #25, !dbg !16361
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16364
  %5 = load i8, i8* %4, align 1, !dbg !16365
  %6 = and i8 %5, 127, !dbg !16365
  store i8 %6, i8* %4, align 1, !dbg !16365
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()) #25, !dbg !16366
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16368
  br label %7, !dbg !16369

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16370
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16371
  %10 = zext i1 %9 to i32, !dbg !16371
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16372
  ret void, !dbg !16373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16374 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16376, metadata !DIExpression()), !dbg !16377
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16378
  %3 = load i8, i8* %2, align 1, !dbg !16379
  %4 = or i8 %3, 2, !dbg !16379
  store i8 %4, i8* %2, align 1, !dbg !16379
  ret void, !dbg !16380
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16383, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 0, metadata !16384, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16389
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16391, !srcloc !15430
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16391
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #25, !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16393
  call void @llvm.dbg.value(metadata i32 %3, metadata !15421, metadata !DIExpression()) #25, !dbg !16389
  call void @llvm.dbg.value(metadata i32 %3, metadata !16386, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()), !dbg !16388
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16394
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !16397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16397
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !16399
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16401, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !16384, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()), !dbg !16388
  ret void, !dbg !16402
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16403 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16409, metadata !DIExpression()), !dbg !16414
  call void @llvm.dbg.value(metadata i32 %0, metadata !16407, metadata !DIExpression()), !dbg !16414
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16408, metadata !DIExpression()), !dbg !16414
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16415
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16416
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16417
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16418
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16419
  call void @llvm.dbg.value(metadata i32 %6, metadata !16410, metadata !DIExpression()), !dbg !16414
  call void @llvm.dbg.value(metadata i32 0, metadata !16411, metadata !DIExpression()), !dbg !16420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16421
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16423, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16425
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()) #25, !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()), !dbg !16420
  call void @llvm.dbg.value(metadata i32 undef, metadata !16411, metadata !DIExpression()), !dbg !16420
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16426
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16430
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16431
  br i1 %10, label %11, label %12, !dbg !16432

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16433
  br label %12, !dbg !16435

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16423
  call void @llvm.dbg.value(metadata i32 %13, metadata !15427, metadata !DIExpression()) #25, !dbg !16425
  call void @llvm.dbg.value(metadata i32 %13, metadata !15421, metadata !DIExpression()) #25, !dbg !16421
  call void @llvm.dbg.value(metadata i32 %13, metadata !16413, metadata !DIExpression()), !dbg !16420
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16436
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #25, !dbg !16438
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16440, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !16411, metadata !DIExpression()), !dbg !16420
  call void @llvm.dbg.value(metadata i32 undef, metadata !16411, metadata !DIExpression()), !dbg !16420
  ret i32 %6, !dbg !16441
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16442 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16447, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata i64 undef, metadata !16449, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16446, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16448, metadata !DIExpression()), !dbg !16450
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16451
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16453
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16455, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16457
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()) #25, !dbg !16453
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16458
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16459
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16024, metadata !DIExpression()) #25, !dbg !16460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16029, metadata !DIExpression()) #25, !dbg !16460
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16462
  ret i32 %9, !dbg !16463
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16464 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16468, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16469, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata i32 0, metadata !16470, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16475
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16477, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16479
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16479
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()) #25, !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !16472, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16469, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata i32 undef, metadata !16470, metadata !DIExpression()), !dbg !16474
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16480
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16469, metadata !DIExpression()), !dbg !16473
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16483
  br i1 %5, label %7, label %6, !dbg !16485

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16486
  br label %7, !dbg !16488

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %8, metadata !15427, metadata !DIExpression()) #25, !dbg !16479
  call void @llvm.dbg.value(metadata i32 %8, metadata !15421, metadata !DIExpression()) #25, !dbg !16475
  call void @llvm.dbg.value(metadata i32 %8, metadata !16472, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16489
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #25, !dbg !16491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16493, !srcloc !15456
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16469, metadata !DIExpression()), !dbg !16473
  call void @llvm.dbg.value(metadata i32 undef, metadata !16470, metadata !DIExpression()), !dbg !16474
  ret %struct.k_thread* %4, !dbg !16494
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16495 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16497, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16498, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.value(metadata i32 0, metadata !16499, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16504
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16506, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16508
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16508
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()) #25, !dbg !16504
  call void @llvm.dbg.value(metadata i32 undef, metadata !16501, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16498, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.value(metadata i32 undef, metadata !16499, metadata !DIExpression()), !dbg !16503
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16509
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16498, metadata !DIExpression()), !dbg !16502
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16512
  br i1 %5, label %8, label %6, !dbg !16514

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16515
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16517
  br label %8, !dbg !16518

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16506
  call void @llvm.dbg.value(metadata i32 %9, metadata !15427, metadata !DIExpression()) #25, !dbg !16508
  call void @llvm.dbg.value(metadata i32 %9, metadata !15421, metadata !DIExpression()) #25, !dbg !16504
  call void @llvm.dbg.value(metadata i32 %9, metadata !16501, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16519
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #25, !dbg !16521
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16523, !srcloc !15456
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16498, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.value(metadata i32 undef, metadata !16499, metadata !DIExpression()), !dbg !16503
  ret %struct.k_thread* %4, !dbg !16524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16527, metadata !DIExpression()), !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16383, metadata !DIExpression()) #25, !dbg !16529
  call void @llvm.dbg.value(metadata i32 0, metadata !16384, metadata !DIExpression()) #25, !dbg !16531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16532
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16534, !srcloc !15430
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16534
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #25, !dbg !16536
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %3, metadata !15421, metadata !DIExpression()) #25, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %3, metadata !16386, metadata !DIExpression()) #25, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #25, !dbg !16531
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16537
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !16538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !16540
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16542, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !16384, metadata !DIExpression()) #25, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #25, !dbg !16531
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16543
  ret void, !dbg !16544
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16545 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16547, metadata !DIExpression()), !dbg !16553
  call void @llvm.dbg.value(metadata i32 %1, metadata !16548, metadata !DIExpression()), !dbg !16553
  call void @llvm.dbg.value(metadata i8 0, metadata !16549, metadata !DIExpression()), !dbg !16553
  call void @llvm.dbg.value(metadata i32 0, metadata !16550, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16555
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16557, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()) #25, !dbg !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i8 poison, metadata !16549, metadata !DIExpression()), !dbg !16553
  call void @llvm.dbg.value(metadata i32 undef, metadata !16550, metadata !DIExpression()), !dbg !16554
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16560
  call void @llvm.dbg.value(metadata i1 %6, metadata !16549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16553
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16563

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15584, metadata !DIExpression()) #25, !dbg !16564
  %11 = load i8, i8* %4, align 1, !dbg !16570
  %12 = and i8 %11, 127, !dbg !16570
  store i8 %12, i8* %4, align 1, !dbg !16570
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()) #25, !dbg !16571
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16573
  store i8 %9, i8* %8, align 2, !dbg !16574
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15601, metadata !DIExpression()) #25, !dbg !16575
  %13 = load i8, i8* %4, align 1, !dbg !16577
  %14 = or i8 %13, -128, !dbg !16577
  store i8 %14, i8* %4, align 1, !dbg !16577
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()) #25, !dbg !16578
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15615, metadata !DIExpression()) #25, !dbg !16580
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15621, metadata !DIExpression()) #25, !dbg !16580
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16582
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15622, metadata !DIExpression()) #25, !dbg !16580
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16583
  br i1 %16, label %26, label %17, !dbg !16582

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15622, metadata !DIExpression()) #25, !dbg !16580
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16584
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15622, metadata !DIExpression()) #25, !dbg !16580
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16585
  %21 = icmp sgt i32 %20, 0, !dbg !16586
  br i1 %21, label %22, label %23, !dbg !16587

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16588
  br label %27, !dbg !16589

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16583
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15622, metadata !DIExpression()) #25, !dbg !16580
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16583
  br i1 %25, label %26, label %17, !dbg !16582, !llvm.loop !16590

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16592
  br label %27, !dbg !16593

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16594
  br label %29, !dbg !16595

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16596
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %30, metadata !15427, metadata !DIExpression()) #25, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %30, metadata !15421, metadata !DIExpression()) #25, !dbg !16555
  call void @llvm.dbg.value(metadata i32 %30, metadata !16552, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16598
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #25, !dbg !16600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16602, !srcloc !15456
  call void @llvm.dbg.value(metadata i8 poison, metadata !16549, metadata !DIExpression()), !dbg !16553
  call void @llvm.dbg.value(metadata i32 undef, metadata !16550, metadata !DIExpression()), !dbg !16554
  ret i1 %6, !dbg !16603
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16604 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16608, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.value(metadata i32 %1, metadata !16609, metadata !DIExpression()), !dbg !16611
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16612
  call void @llvm.dbg.value(metadata i1 %3, metadata !16610, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16611
  br i1 %3, label %4, label %12, !dbg !16613

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16615
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16616
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16616
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16616
  %9 = load i8, i8* %8, align 1, !dbg !16616
  %10 = icmp eq i8 %9, 0, !dbg !16617
  br i1 %10, label %11, label %12, !dbg !16618

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16619
  br label %12, !dbg !16621

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16623 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16625, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16629
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16631, !srcloc !15430
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16631
  call void @llvm.dbg.value(metadata i32 %2, metadata !15427, metadata !DIExpression()) #25, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16633
  call void @llvm.dbg.value(metadata i32 %2, metadata !15421, metadata !DIExpression()) #25, !dbg !16629
  call void @llvm.dbg.value(metadata i32 %2, metadata !16627, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i32 undef, metadata !16625, metadata !DIExpression()), !dbg !16628
  tail call fastcc void @z_sched_lock() #26, !dbg !16634
  call void @llvm.dbg.value(metadata i32 %2, metadata !15442, metadata !DIExpression()) #25, !dbg !16637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16637
  call void @llvm.dbg.value(metadata i32 %2, metadata !15450, metadata !DIExpression()) #25, !dbg !16639
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16641, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !16625, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i32 undef, metadata !16625, metadata !DIExpression()), !dbg !16628
  ret void, !dbg !16642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16643 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16644
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16645
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16645
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16645
  %5 = load i8, i8* %4, align 1, !dbg !16646
  %6 = add i8 %5, -1, !dbg !16646
  store i8 %6, i8* %4, align 1, !dbg !16646
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16647, !srcloc !16649
  ret void, !dbg !16650
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16651 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16653, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16657
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16659, !srcloc !15430
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16659
  call void @llvm.dbg.value(metadata i32 %2, metadata !15427, metadata !DIExpression()) #25, !dbg !16661
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16661
  call void @llvm.dbg.value(metadata i32 %2, metadata !15421, metadata !DIExpression()) #25, !dbg !16657
  call void @llvm.dbg.value(metadata i32 %2, metadata !16655, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 undef, metadata !16653, metadata !DIExpression()), !dbg !16656
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16662
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16665
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16665
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16665
  %7 = load i8, i8* %6, align 1, !dbg !16666
  %8 = add i8 %7, 1, !dbg !16666
  store i8 %8, i8* %6, align 1, !dbg !16666
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16667
  call void @llvm.dbg.value(metadata i32 %2, metadata !15442, metadata !DIExpression()) #25, !dbg !16668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !16668
  call void @llvm.dbg.value(metadata i32 %2, metadata !15450, metadata !DIExpression()) #25, !dbg !16670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16672, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 1, metadata !16653, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 undef, metadata !16653, metadata !DIExpression()), !dbg !16656
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16673
  ret void, !dbg !16674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !16675 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16676
  ret %struct.k_thread* %1, !dbg !16677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !16678 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16682, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16683, metadata !DIExpression()), !dbg !16687
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16688
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16684, metadata !DIExpression()), !dbg !16687
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16689
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16685, metadata !DIExpression()), !dbg !16687
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %5, metadata !16686, metadata !DIExpression()), !dbg !16687
  %6 = icmp sgt i32 %5, 0, !dbg !16691
  br i1 %6, label %17, label %7, !dbg !16693

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16694
  br i1 %8, label %17, label %9, !dbg !16696

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16697
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16697
  %12 = load i32, i32* %11, align 8, !dbg !16697
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16699
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16699
  %15 = load i32, i32* %14, align 8, !dbg !16699
  %16 = icmp ult i32 %12, %15, !dbg !16700
  br label %17, !dbg !16701

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16702
  ret i1 %18, !dbg !16703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16704 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16721, metadata !DIExpression()), !dbg !16736
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16722, metadata !DIExpression()), !dbg !16736
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16737
  %5 = load i32, i32* %4, align 4, !dbg !16738
  %6 = add nsw i32 %5, 1, !dbg !16738
  store i32 %6, i32* %4, align 4, !dbg !16738
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16739
  store i32 %5, i32* %7, align 8, !dbg !16740
  %8 = load i32, i32* %4, align 4, !dbg !16741
  %9 = icmp eq i32 %8, 0, !dbg !16742
  br i1 %9, label %10, label %32, !dbg !16743

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16744
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16744
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16724, metadata !DIExpression()), !dbg !16744
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16744
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16744
  %14 = load i32, i32* %13, align 4, !dbg !16744
  %15 = shl i32 %14, 2, !dbg !16744
  %16 = alloca i8, i32 %15, align 8, !dbg !16744
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16744
  store i8* %16, i8** %17, align 4, !dbg !16744
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16744
  %19 = alloca i8, i32 %14, align 8, !dbg !16744
  store i8* %19, i8** %18, align 4, !dbg !16744
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16744
  store i32 -1, i32* %20, align 4, !dbg !16744
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16733, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16723, metadata !DIExpression()), !dbg !16736
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16747
  br i1 %22, label %23, label %24, !dbg !16744

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16747
  br label %32, !dbg !16748

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16723, metadata !DIExpression()), !dbg !16736
  %26 = load i32, i32* %4, align 4, !dbg !16749
  %27 = add nsw i32 %26, 1, !dbg !16749
  store i32 %27, i32* %4, align 4, !dbg !16749
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16751
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16751
  store i32 %26, i32* %29, align 8, !dbg !16752
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16733, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16723, metadata !DIExpression()), !dbg !16736
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16747
  br i1 %31, label %23, label %24, !dbg !16744, !llvm.loop !16753

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16755
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16756
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !16757
  ret void, !dbg !16758
}

; Function Attrs: optsize
declare !dbg !16759 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16764 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16767 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16769, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16770, metadata !DIExpression()), !dbg !16771
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16772
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16773
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !16774
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16775
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16775
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16777
  br i1 %7, label %8, label %10, !dbg !16778

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16779
  store i32 0, i32* %9, align 4, !dbg !16781
  br label %10, !dbg !16782

10:                                               ; preds = %8, %2
  ret void, !dbg !16783
}

; Function Attrs: optsize
declare !dbg !16784 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16785 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16789, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16790, metadata !DIExpression()), !dbg !16792
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16793
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16794
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16791, metadata !DIExpression()), !dbg !16792
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16790, metadata !DIExpression()), !dbg !16792
  ret %struct.k_thread* %4, !dbg !16795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16796 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16800, metadata !DIExpression()), !dbg !16801
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !16802
  ret %struct.rbnode* %2, !dbg !16803
}

; Function Attrs: optsize
declare !dbg !16804 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16807 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16819, metadata !DIExpression()), !dbg !16823
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16824
  %3 = load i32, i32* %2, align 4, !dbg !16824
  %4 = icmp eq i32 %3, 0, !dbg !16826
  br i1 %4, label %10, label %5, !dbg !16827

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16820, metadata !DIExpression()), !dbg !16823
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16828, !range !4991
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16829
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16821, metadata !DIExpression()), !dbg !16823
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef %7) #26, !dbg !16830
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16822, metadata !DIExpression()), !dbg !16823
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16820, metadata !DIExpression()), !dbg !16823
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16823
  ret %struct.k_thread* %11, !dbg !16831
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16832 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16836, metadata !DIExpression()), !dbg !16839
  call void @llvm.dbg.value(metadata i32 0, metadata !16837, metadata !DIExpression()), !dbg !16839
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.234(%struct._wait_q_t* noundef %0) #26, !dbg !16840
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16838, metadata !DIExpression()), !dbg !16839
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16841
  br i1 %3, label %8, label %4, !dbg !16842

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16843
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16845
  call void @llvm.dbg.value(metadata i32 1, metadata !16837, metadata !DIExpression()), !dbg !16839
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.234(%struct._wait_q_t* noundef %0) #26, !dbg !16840
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16838, metadata !DIExpression()), !dbg !16839
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16841
  br i1 %7, label %8, label %4, !dbg !16842, !llvm.loop !16846

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16839
  ret i32 %9, !dbg !16848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.234(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !16849 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16851, metadata !DIExpression()), !dbg !16852
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16853
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef %2) #26, !dbg !16854
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16855
  ret %struct.k_thread* %4, !dbg !16856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #8 !dbg !16857 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16866, metadata !DIExpression()), !dbg !16867
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16868
  tail call fastcc void @sys_dlist_init.235(%struct._dnode* noundef nonnull %2) #26, !dbg !16869
  ret void, !dbg !16870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.235(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16871 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16875, metadata !DIExpression()), !dbg !16876
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16877
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16878
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16879
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16880
  ret void, !dbg !16881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16882 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16883
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16884
  ret void, !dbg !16885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !16886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16891, metadata !DIExpression()), !dbg !16892
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16893
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16893
  %4 = load i8, i8* %3, align 2, !dbg !16893
  %5 = sext i8 %4 to i32, !dbg !16894
  ret i32 %5, !dbg !16895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16896 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16900, metadata !DIExpression()), !dbg !16903
  call void @llvm.dbg.value(metadata i32 %1, metadata !16901, metadata !DIExpression()), !dbg !16903
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16902, metadata !DIExpression()), !dbg !16903
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16904
  ret void, !dbg !16905
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16906 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16907
  br i1 %1, label %8, label %2, !dbg !16908

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !16909
  br i1 %3, label %8, label %4, !dbg !16910

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16911
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16912
  %7 = xor i1 %6, true, !dbg !16910
  br label %8, !dbg !16910

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !16914 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16915, !range !7658
  %2 = icmp eq i8 %1, 0, !dbg !16915
  ret i1 %2, !dbg !16916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16917 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !16920
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16922, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #25, !dbg !16924
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !16924
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()) #25, !dbg !16920
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()), !dbg !16925
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16926
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15584, metadata !DIExpression()) #25, !dbg !16929
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16931
  %4 = load i8, i8* %3, align 1, !dbg !16932
  %5 = and i8 %4, 127, !dbg !16932
  store i8 %5, i8* %3, align 1, !dbg !16932
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15592, metadata !DIExpression()) #25, !dbg !16933
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !16935
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16936
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15601, metadata !DIExpression()) #25, !dbg !16937
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16939
  %8 = load i8, i8* %7, align 1, !dbg !16940
  %9 = or i8 %8, -128, !dbg !16940
  store i8 %9, i8* %7, align 1, !dbg !16940
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15608, metadata !DIExpression()) #25, !dbg !16941
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15615, metadata !DIExpression()) #25, !dbg !16943
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15621, metadata !DIExpression()) #25, !dbg !16943
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.209(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16945
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15622, metadata !DIExpression()) #25, !dbg !16943
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16946
  br i1 %11, label %22, label %12, !dbg !16945

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15622, metadata !DIExpression()) #25, !dbg !16943
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16947
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15622, metadata !DIExpression()) #25, !dbg !16943
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !16948
  %16 = icmp sgt i32 %15, 0, !dbg !16949
  br i1 %16, label %17, label %19, !dbg !16950

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16951
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16952
  br label %24, !dbg !16953

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !16946
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15622, metadata !DIExpression()) #25, !dbg !16943
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16946
  br i1 %21, label %22, label %12, !dbg !16945, !llvm.loop !16954

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16956
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !16957
  br label %24, !dbg !16958

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16922
  call void @llvm.dbg.value(metadata i32 %25, metadata !15427, metadata !DIExpression()) #25, !dbg !16924
  call void @llvm.dbg.value(metadata i32 %25, metadata !15421, metadata !DIExpression()) #25, !dbg !16920
  call void @llvm.dbg.value(metadata i32 %25, metadata !16919, metadata !DIExpression()), !dbg !16925
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16959
  call void @llvm.dbg.value(metadata i32 undef, metadata !16024, metadata !DIExpression()) #25, !dbg !16960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16029, metadata !DIExpression()) #25, !dbg !16960
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !16962
  ret void, !dbg !16963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16964 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16968, metadata !DIExpression()), !dbg !16971
  %3 = icmp eq i64 %2, -1, !dbg !16972
  br i1 %3, label %4, label %6, !dbg !16974

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16975
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16977
  br label %11, !dbg !16978

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16969, metadata !DIExpression()), !dbg !16971
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16979
  %8 = sext i32 %7 to i64, !dbg !16979
  call void @llvm.dbg.value(metadata i64 %8, metadata !16969, metadata !DIExpression()), !dbg !16971
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64.238(i64 noundef %8) #26, !dbg !16980
  %10 = trunc i64 %9 to i32, !dbg !16980
  call void @llvm.dbg.value(metadata i32 %10, metadata !16970, metadata !DIExpression()), !dbg !16971
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16971
  ret i32 %12, !dbg !16981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16982 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16986, metadata !DIExpression()), !dbg !16987
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16988, !srcloc !16990
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16991
  ret void, !dbg !16992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16993 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16997, metadata !DIExpression()), !dbg !17001
  %2 = icmp eq i64 %0, 0, !dbg !17002
  br i1 %2, label %3, label %4, !dbg !17004

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17005
  br label %29, !dbg !17007

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16999, metadata !DIExpression()), !dbg !17001
  %5 = icmp sgt i64 %0, -3, !dbg !17008
  br i1 %5, label %6, label %10, !dbg !17010

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17011
  %8 = trunc i64 %0 to i32, !dbg !17013
  %9 = add i32 %7, %8, !dbg !17013
  call void @llvm.dbg.value(metadata i32 %9, metadata !16998, metadata !DIExpression()), !dbg !17001
  br label %13, !dbg !17014

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17015
  %12 = sub i32 -2, %11, !dbg !17015
  call void @llvm.dbg.value(metadata i32 %12, metadata !16998, metadata !DIExpression()), !dbg !17001
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17017
  call void @llvm.dbg.value(metadata i32 %14, metadata !16998, metadata !DIExpression()), !dbg !17001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !17018
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17020, !srcloc !15430
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17020
  call void @llvm.dbg.value(metadata i32 %16, metadata !15427, metadata !DIExpression()) #25, !dbg !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !17022
  call void @llvm.dbg.value(metadata i32 %16, metadata !15421, metadata !DIExpression()) #25, !dbg !17018
  call void @llvm.dbg.value(metadata i32 %16, metadata !17000, metadata !DIExpression()), !dbg !17001
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17023
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17024
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17025
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17026
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17027
  tail call fastcc void @z_add_thread_timeout.221(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17027
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17028
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17029
  call void @llvm.dbg.value(metadata i32 %16, metadata !16024, metadata !DIExpression()) #25, !dbg !17030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16029, metadata !DIExpression()) #25, !dbg !17030
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17032
  %22 = zext i32 %14 to i64, !dbg !17033
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17034
  %24 = zext i32 %23 to i64, !dbg !17034
  %25 = sub nsw i64 %22, %24, !dbg !17035
  call void @llvm.dbg.value(metadata i64 %25, metadata !16997, metadata !DIExpression()), !dbg !17001
  %26 = icmp sgt i64 %25, 0, !dbg !17036
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17036
  %28 = trunc i64 %27 to i32, !dbg !17036
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17001
  ret i32 %30, !dbg !17037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.238(i64 noundef %0) unnamed_addr #5 !dbg !17038 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17040, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i64 %0, metadata !15462, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i32 10000, metadata !15465, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i32 1000, metadata !15466, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i8 1, metadata !15467, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i1 false, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17042
  call void @llvm.dbg.value(metadata i1 false, metadata !15469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17042
  call void @llvm.dbg.value(metadata i8 0, metadata !15470, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i1 false, metadata !15471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17042
  call void @llvm.dbg.value(metadata i1 true, metadata !15472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17042
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i64 %0, metadata !15462, metadata !DIExpression()), !dbg !17042
  %2 = udiv i64 %0, 10, !dbg !17044
  ret i64 %2, !dbg !17048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17049 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17050, !srcloc !17052
  tail call void @z_impl_k_yield() #26, !dbg !17053
  ret void, !dbg !17054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17059, metadata !DIExpression()), !dbg !17061
  %2 = sext i32 %0 to i64, !dbg !17062
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17063
  call void @llvm.dbg.value(metadata i64 %3, metadata !17060, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17061
  %4 = shl i64 %3, 32, !dbg !17064
  %5 = ashr exact i64 %4, 32, !dbg !17064
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17065
  call void @llvm.dbg.value(metadata i32 %6, metadata !17060, metadata !DIExpression()), !dbg !17061
  %7 = sext i32 %6 to i64, !dbg !17066
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17067
  %9 = trunc i64 %8 to i32, !dbg !17067
  ret i32 %9, !dbg !17068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17069 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17071, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i64 %0, metadata !15462, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15465, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i32 10000, metadata !15466, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i8 1, metadata !15467, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i1 false, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17073
  call void @llvm.dbg.value(metadata i1 true, metadata !15469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17073
  call void @llvm.dbg.value(metadata i8 0, metadata !15470, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i1 false, metadata !15471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17073
  call void @llvm.dbg.value(metadata i1 true, metadata !15472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17073
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !17073
  %2 = add i64 %0, 99, !dbg !17075
  call void @llvm.dbg.value(metadata i64 %2, metadata !15462, metadata !DIExpression()), !dbg !17073
  %3 = udiv i64 %2, 100, !dbg !17076
  ret i64 %3, !dbg !17077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17078 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17080, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i64 %0, metadata !15462, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i32 10000, metadata !15465, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15466, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i8 1, metadata !15467, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i1 false, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17082
  call void @llvm.dbg.value(metadata i1 false, metadata !15469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17082
  call void @llvm.dbg.value(metadata i8 0, metadata !15470, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i1 true, metadata !15471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17082
  call void @llvm.dbg.value(metadata i1 false, metadata !15472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17082
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !17082
  %2 = mul i64 %0, 100, !dbg !17084
  ret i64 %2, !dbg !17086
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17089, metadata !DIExpression()), !dbg !17090
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17091
  br i1 %2, label %14, label %3, !dbg !17093

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17094
  %5 = icmp slt i32 %4, 0, !dbg !17096
  br i1 %5, label %6, label %10, !dbg !17097

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17098
  %8 = load i8, i8* %7, align 1, !dbg !17098
  %9 = icmp eq i8 %8, 16, !dbg !17101
  br i1 %9, label %10, label %14, !dbg !17102

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17103
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17104
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17105, !srcloc !16064
  call void @llvm.dbg.value(metadata i32 %11, metadata !16060, metadata !DIExpression()) #25, !dbg !17109
  %12 = icmp eq i32 %11, 0, !dbg !17110
  br i1 %12, label %13, label %14, !dbg !17111

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17112
  br label %14, !dbg !17114

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17116 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17118, metadata !DIExpression()), !dbg !17119
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17120
  %3 = load i8, i8* %2, align 1, !dbg !17120
  %4 = and i8 %3, 2, !dbg !17121
  %5 = icmp ne i8 %4, 0, !dbg !17122
  ret i1 %5, !dbg !17123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !17124 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17129
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17128, metadata !DIExpression()), !dbg !17130
  ret %struct.k_thread* %1, !dbg !17131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17132 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17133, !srcloc !16064
  call void @llvm.dbg.value(metadata i32 %1, metadata !16060, metadata !DIExpression()) #25, !dbg !17136
  %2 = icmp eq i32 %1, 0, !dbg !17137
  br i1 %2, label %3, label %8, !dbg !17138

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17139
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17140
  %6 = icmp ne i32 %5, 0, !dbg !17138
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17144, metadata !DIExpression()), !dbg !17146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !17147
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17149, !srcloc !15430
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17149
  call void @llvm.dbg.value(metadata i32 %3, metadata !15427, metadata !DIExpression()) #25, !dbg !17151
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !17151
  call void @llvm.dbg.value(metadata i32 %3, metadata !15421, metadata !DIExpression()) #25, !dbg !17147
  call void @llvm.dbg.value(metadata i32 %3, metadata !17145, metadata !DIExpression()), !dbg !17146
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17152
  %5 = load i8, i8* %4, align 4, !dbg !17152
  %6 = and i8 %5, 1, !dbg !17154
  %7 = icmp eq i8 %6, 0, !dbg !17155
  br i1 %7, label %9, label %8, !dbg !17156

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !17157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !17157
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !17160
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17162, !srcloc !15456
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17163, !srcloc !17165
  br label %24, !dbg !17166

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17167
  %11 = load i8, i8* %10, align 1, !dbg !17167
  %12 = and i8 %11, 8, !dbg !17169
  %13 = icmp eq i8 %12, 0, !dbg !17170
  br i1 %13, label %15, label %14, !dbg !17171

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !17172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !17172
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !17175
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17177, !srcloc !15456
  br label %24, !dbg !17178

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17179
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17180
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17182
  br i1 %17, label %18, label %23, !dbg !17183

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17184, !srcloc !16064
  call void @llvm.dbg.value(metadata i32 %19, metadata !16060, metadata !DIExpression()) #25, !dbg !17187
  %20 = icmp eq i32 %19, 0, !dbg !17188
  br i1 %20, label %21, label %23, !dbg !17189

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16024, metadata !DIExpression()) #25, !dbg !17190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16029, metadata !DIExpression()) #25, !dbg !17190
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17193
  br label %23, !dbg !17194

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15442, metadata !DIExpression()) #25, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !17195
  call void @llvm.dbg.value(metadata i32 %3, metadata !15450, metadata !DIExpression()) #25, !dbg !17197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17199, !srcloc !15456
  br label %24, !dbg !17200

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17203, metadata !DIExpression()), !dbg !17204
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17205
  %3 = load i8, i8* %2, align 1, !dbg !17205
  %4 = and i8 %3, 8, !dbg !17207
  %5 = icmp eq i8 %4, 0, !dbg !17208
  br i1 %5, label %6, label %20, !dbg !17209

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17210
  %8 = or i8 %7, 8, !dbg !17210
  store i8 %8, i8* %2, align 1, !dbg !17210
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17212
  br i1 %9, label %10, label %12, !dbg !17214

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15584, metadata !DIExpression()) #25, !dbg !17215
  %11 = and i8 %8, 95, !dbg !17218
  store i8 %11, i8* %2, align 1, !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()) #25, !dbg !17219
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17221
  br label %12, !dbg !17222

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17223
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17223
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17225
  br i1 %15, label %17, label %16, !dbg !17226

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17227
  br label %17, !dbg !17229

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17230
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17231
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !17232
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17233
  br label %20, !dbg !17234

20:                                               ; preds = %17, %1
  ret void, !dbg !17235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17236 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17240, metadata !DIExpression()), !dbg !17242
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.234(%struct._wait_q_t* noundef %0) #26, !dbg !17243
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17241, metadata !DIExpression()), !dbg !17242
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17244
  br i1 %3, label %10, label %4, !dbg !17245

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17246
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17248
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17249, metadata !DIExpression()), !dbg !17255
  call void @llvm.dbg.value(metadata i32 0, metadata !17254, metadata !DIExpression()), !dbg !17255
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17257
  store i32 0, i32* %7, align 4, !dbg !17258
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17259
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.234(%struct._wait_q_t* noundef %0) #26, !dbg !17243
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17241, metadata !DIExpression()), !dbg !17242
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17244
  br i1 %9, label %10, label %4, !dbg !17245, !llvm.loop !17260

10:                                               ; preds = %4, %1
  ret void, !dbg !17262
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17263 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17268, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17267, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !17272
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17274, !srcloc !15430
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17274
  call void @llvm.dbg.value(metadata i32 %4, metadata !15427, metadata !DIExpression()) #25, !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !17276
  call void @llvm.dbg.value(metadata i32 %4, metadata !15421, metadata !DIExpression()) #25, !dbg !17272
  call void @llvm.dbg.value(metadata i32 %4, metadata !17269, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata i32 0, metadata !17270, metadata !DIExpression()), !dbg !17271
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17277
  %6 = load i8, i8* %5, align 1, !dbg !17277
  %7 = and i8 %6, 8, !dbg !17279
  %8 = icmp eq i8 %7, 0, !dbg !17280
  br i1 %8, label %9, label %24, !dbg !17281

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17268, metadata !DIExpression()), !dbg !17271
  %11 = icmp eq i64 %10, 0, !dbg !17282
  br i1 %11, label %24, label %12, !dbg !17284

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17285
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17287
  br i1 %14, label %24, label %15, !dbg !17288

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17289
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17289
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17290
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17291
  br i1 %19, label %24, label %20, !dbg !17292

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17293
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !17295
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17296
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17297
  call void @llvm.dbg.value(metadata i32 %4, metadata !16024, metadata !DIExpression()) #25, !dbg !17298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16029, metadata !DIExpression()) #25, !dbg !17298
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17300
  call void @llvm.dbg.value(metadata i32 %23, metadata !17270, metadata !DIExpression()), !dbg !17271
  br label %26, !dbg !17301

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17302
  call void @llvm.dbg.value(metadata i32 %25, metadata !17270, metadata !DIExpression()), !dbg !17271
  call void @llvm.dbg.value(metadata i32 %4, metadata !15442, metadata !DIExpression()) #25, !dbg !17303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %4, metadata !15450, metadata !DIExpression()) #25, !dbg !17305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17307, !srcloc !15456
  br label %26, !dbg !17308

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17271
  ret i32 %27, !dbg !17309
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17310 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17314, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata i32 %1, metadata !17315, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata i8* %2, metadata !17316, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata i8 0, metadata !17318, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata i32 0, metadata !17319, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15415, metadata !DIExpression()) #25, !dbg !17324
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17326, !srcloc !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !15427, metadata !DIExpression()) #25, !dbg !17328
  call void @llvm.dbg.value(metadata i32 undef, metadata !15428, metadata !DIExpression()) #25, !dbg !17328
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()) #25, !dbg !17324
  call void @llvm.dbg.value(metadata i32 undef, metadata !17321, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i8 poison, metadata !17318, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata i32 undef, metadata !17319, metadata !DIExpression()), !dbg !17323
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17329
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17317, metadata !DIExpression()), !dbg !17322
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17332
  br i1 %7, label %12, label %8, !dbg !17334

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17335, metadata !DIExpression()), !dbg !17342
  call void @llvm.dbg.value(metadata i32 %1, metadata !17340, metadata !DIExpression()), !dbg !17342
  call void @llvm.dbg.value(metadata i8* %2, metadata !17341, metadata !DIExpression()), !dbg !17342
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17249, metadata !DIExpression()), !dbg !17345
  call void @llvm.dbg.value(metadata i32 %1, metadata !17254, metadata !DIExpression()), !dbg !17345
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17347
  store i32 %1, i32* %9, align 4, !dbg !17348
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17349
  store i8* %2, i8** %10, align 4, !dbg !17350
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17351
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17352
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17353
  call void @llvm.dbg.value(metadata i8 1, metadata !17318, metadata !DIExpression()), !dbg !17322
  br label %12, !dbg !17354

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17326
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17326
  call void @llvm.dbg.value(metadata i32 %14, metadata !15427, metadata !DIExpression()) #25, !dbg !17328
  call void @llvm.dbg.value(metadata i32 %14, metadata !15421, metadata !DIExpression()) #25, !dbg !17324
  call void @llvm.dbg.value(metadata i32 %14, metadata !17321, metadata !DIExpression()), !dbg !17323
  call void @llvm.dbg.value(metadata i8 poison, metadata !17318, metadata !DIExpression()), !dbg !17322
  call void @llvm.dbg.value(metadata i32 undef, metadata !15442, metadata !DIExpression()) #25, !dbg !17355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15447, metadata !DIExpression()) #25, !dbg !17355
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()) #25, !dbg !17357
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17359, !srcloc !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !17319, metadata !DIExpression()), !dbg !17323
  ret i1 %13, !dbg !17360
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17361 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17367, metadata !DIExpression()), !dbg !17372
  call void @llvm.dbg.value(metadata i64 undef, metadata !17369, metadata !DIExpression()), !dbg !17372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17366, metadata !DIExpression()), !dbg !17372
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17368, metadata !DIExpression()), !dbg !17372
  call void @llvm.dbg.value(metadata i8** %4, metadata !17370, metadata !DIExpression()), !dbg !17372
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !17373
  call void @llvm.dbg.value(metadata i32 %6, metadata !17371, metadata !DIExpression()), !dbg !17372
  %7 = icmp eq i8** %4, null, !dbg !17374
  br i1 %7, label %12, label %8, !dbg !17376

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17377
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17379
  %11 = load i8*, i8** %10, align 4, !dbg !17379
  store i8* %11, i8** %4, align 4, !dbg !17380
  br label %12, !dbg !17381

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17383 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17385
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17386
  ret void, !dbg !17387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17388 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17398, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17396, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17397, metadata !DIExpression()), !dbg !17415
  %5 = icmp eq i64 %4, -1, !dbg !17416
  br i1 %5, label %55, label %6, !dbg !17418

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17419
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17420
  call void @llvm.dbg.value(metadata i32 0, metadata !17399, metadata !DIExpression()), !dbg !17421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17429
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17431, !srcloc !17437
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17431
  call void @llvm.dbg.value(metadata i32 %9, metadata !17434, metadata !DIExpression()) #25, !dbg !17438
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17438
  call void @llvm.dbg.value(metadata i32 %9, metadata !17428, metadata !DIExpression()) #25, !dbg !17429
  call void @llvm.dbg.value(metadata i32 %9, metadata !17405, metadata !DIExpression()), !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !17399, metadata !DIExpression()), !dbg !17421
  %10 = icmp slt i64 %4, -1, !dbg !17439
  br i1 %10, label %11, label %17, !dbg !17440

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17441
  %13 = add i64 %4, %12, !dbg !17442
  %14 = sub i64 -2, %13, !dbg !17442
  call void @llvm.dbg.value(metadata i64 %14, metadata !17409, metadata !DIExpression()), !dbg !17443
  %15 = icmp sgt i64 %14, 1, !dbg !17444
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17444
  br label %22, !dbg !17445

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17446
  %19 = tail call fastcc i32 @elapsed.247() #26, !dbg !17448
  %20 = sext i32 %19 to i64, !dbg !17448
  %21 = add nsw i64 %18, %20, !dbg !17449
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17450
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17451
  store i64 %23, i64* %24, align 8, !dbg !17452
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17453
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17406, metadata !DIExpression()), !dbg !17455
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17456
  br i1 %26, label %42, label %27, !dbg !17456

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17457
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17406, metadata !DIExpression()), !dbg !17455
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17461
  %31 = load i64, i64* %30, align 8, !dbg !17461
  %32 = icmp slt i64 %28, %31, !dbg !17462
  br i1 %32, label %33, label %38, !dbg !17463

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17461
  %35 = sub nsw i64 %31, %28, !dbg !17464
  store i64 %35, i64* %34, align 8, !dbg !17464
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17466
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17467
  tail call fastcc void @sys_dlist_insert.248(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17468
  br label %44, !dbg !17469

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17470
  store i64 %39, i64* %24, align 8, !dbg !17470
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17471
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17406, metadata !DIExpression()), !dbg !17455
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17456
  br i1 %41, label %42, label %27, !dbg !17456, !llvm.loop !17472

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17474
  tail call fastcc void @sys_dlist_append.249(%struct._dnode* noundef %43) #26, !dbg !17477
  br label %44, !dbg !17478

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17479
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17480
  br i1 %46, label %47, label %54, !dbg !17481

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17482
  call void @llvm.dbg.value(metadata i32 %48, metadata !17412, metadata !DIExpression()), !dbg !17483
  %49 = icmp ne i32 %48, 0, !dbg !17484
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17486
  br i1 %52, label %54, label %53, !dbg !17486

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17487
  br label %54, !dbg !17489

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17490, metadata !DIExpression()) #25, !dbg !17496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17496
  call void @llvm.dbg.value(metadata i32 %9, metadata !17498, metadata !DIExpression()) #25, !dbg !17501
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17503, !srcloc !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17399, metadata !DIExpression()), !dbg !17421
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.247() unnamed_addr #1 !dbg !17506 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17509
  %2 = icmp eq i32 %1, 0, !dbg !17510
  br i1 %2, label %3, label %5, !dbg !17509

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17511
  br label %5, !dbg !17509

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17509
  ret i32 %6, !dbg !17512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !17513 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.252() #26, !dbg !17519
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17517, metadata !DIExpression()), !dbg !17520
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17521
  ret %struct._timeout* %2, !dbg !17522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.248(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17523 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17527, metadata !DIExpression()), !dbg !17531
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17528, metadata !DIExpression()), !dbg !17531
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17532
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17532
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17529, metadata !DIExpression()), !dbg !17531
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17533
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17534
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17535
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17536
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17537
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17538
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17539
  ret void, !dbg !17540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !17541 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17545, metadata !DIExpression()), !dbg !17547
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17548
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.250(%struct._dnode* noundef %2) #26, !dbg !17549
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17546, metadata !DIExpression()), !dbg !17547
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17550
  ret %struct._timeout* %4, !dbg !17551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.249(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17552 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17557, metadata !DIExpression()), !dbg !17560
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17558, metadata !DIExpression()), !dbg !17560
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17561
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17559, metadata !DIExpression()), !dbg !17560
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17562
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17563
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17564
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17565
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17566
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17567
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17568
  ret void, !dbg !17569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17570 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17575
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17572, metadata !DIExpression()), !dbg !17576
  %2 = tail call fastcc i32 @elapsed.247() #26, !dbg !17577
  call void @llvm.dbg.value(metadata i32 %2, metadata !17573, metadata !DIExpression()), !dbg !17576
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17578
  br i1 %3, label %14, label %4, !dbg !17580

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17581
  %6 = load i64, i64* %5, align 8, !dbg !17581
  %7 = sext i32 %2 to i64, !dbg !17582
  %8 = sub nsw i64 %6, %7, !dbg !17583
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17584
  br i1 %9, label %14, label %10, !dbg !17585

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17586
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17586
  %13 = trunc i64 %12 to i32, !dbg !17586
  call void @llvm.dbg.value(metadata i32 %13, metadata !17574, metadata !DIExpression()), !dbg !17576
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17588
  call void @llvm.dbg.value(metadata i32 %15, metadata !17574, metadata !DIExpression()), !dbg !17576
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17589
  %17 = icmp ne i32 %16, 0, !dbg !17591
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17592
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17592
  call void @llvm.dbg.value(metadata i32 %20, metadata !17574, metadata !DIExpression()), !dbg !17576
  ret i32 %20, !dbg !17593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.250(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17594 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17598, metadata !DIExpression()), !dbg !17600
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17599, metadata !DIExpression()), !dbg !17600
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17601
  br i1 %2, label %5, label %3, !dbg !17602

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.251(%struct._dnode* noundef nonnull %0) #26, !dbg !17603
  br label %5, !dbg !17602

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17602
  ret %struct._dnode* %6, !dbg !17604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.251(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17605 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17607, metadata !DIExpression()), !dbg !17609
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17608, metadata !DIExpression()), !dbg !17609
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17610
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17611
  br i1 %3, label %7, label %4, !dbg !17612

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17613
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17613
  br label %7, !dbg !17612

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17612
  ret %struct._dnode* %8, !dbg !17614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.252() unnamed_addr #4 !dbg !17615 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17619, metadata !DIExpression()), !dbg !17620
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.253() #26, !dbg !17621
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17621
  ret %struct._dnode* %3, !dbg !17622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.253() unnamed_addr #4 !dbg !17623 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17627, metadata !DIExpression()), !dbg !17628
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17629
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17630
  ret i1 %2, !dbg !17631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17632 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17636, metadata !DIExpression()), !dbg !17641
  call void @llvm.dbg.value(metadata i32 -22, metadata !17637, metadata !DIExpression()), !dbg !17641
  call void @llvm.dbg.value(metadata i32 0, metadata !17638, metadata !DIExpression()), !dbg !17642
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17643
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17645, !srcloc !17437
  call void @llvm.dbg.value(metadata i32 undef, metadata !17434, metadata !DIExpression()) #25, !dbg !17647
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17647
  call void @llvm.dbg.value(metadata i32 undef, metadata !17428, metadata !DIExpression()) #25, !dbg !17643
  call void @llvm.dbg.value(metadata i32 undef, metadata !17640, metadata !DIExpression()), !dbg !17642
  call void @llvm.dbg.value(metadata i32 -22, metadata !17637, metadata !DIExpression()), !dbg !17641
  call void @llvm.dbg.value(metadata i32 undef, metadata !17638, metadata !DIExpression()), !dbg !17642
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17637, metadata !DIExpression()), !dbg !17641
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.256(%struct._dnode* noundef %3) #26, !dbg !17648
  br i1 %4, label %5, label %6, !dbg !17652

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17653
  call void @llvm.dbg.value(metadata i32 0, metadata !17637, metadata !DIExpression()), !dbg !17641
  br label %6, !dbg !17655

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17641
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17645
  call void @llvm.dbg.value(metadata i32 %8, metadata !17434, metadata !DIExpression()) #25, !dbg !17647
  call void @llvm.dbg.value(metadata i32 %8, metadata !17428, metadata !DIExpression()) #25, !dbg !17643
  call void @llvm.dbg.value(metadata i32 %8, metadata !17640, metadata !DIExpression()), !dbg !17642
  call void @llvm.dbg.value(metadata i32 %7, metadata !17637, metadata !DIExpression()), !dbg !17641
  call void @llvm.dbg.value(metadata i32 undef, metadata !17490, metadata !DIExpression()) #25, !dbg !17656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17656
  call void @llvm.dbg.value(metadata i32 undef, metadata !17498, metadata !DIExpression()) #25, !dbg !17658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17660, !srcloc !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17638, metadata !DIExpression()), !dbg !17642
  ret i32 %7, !dbg !17661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.256(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17662 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17668, metadata !DIExpression()), !dbg !17669
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17670
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17670
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17671
  ret i1 %4, !dbg !17672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17673 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17675, metadata !DIExpression()), !dbg !17676
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17677
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17679
  br i1 %3, label %10, label %4, !dbg !17680

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17681
  %6 = load i64, i64* %5, align 8, !dbg !17681
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17683
  %8 = load i64, i64* %7, align 8, !dbg !17684
  %9 = add nsw i64 %8, %6, !dbg !17684
  store i64 %9, i64* %7, align 8, !dbg !17684
  br label %10, !dbg !17685

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17686
  tail call fastcc void @sys_dlist_remove.257(%struct._dnode* noundef %11) #26, !dbg !17687
  ret void, !dbg !17688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.257(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17689 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17693, metadata !DIExpression()), !dbg !17696
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17697
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17697
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17694, metadata !DIExpression()), !dbg !17696
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17698
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17698
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17695, metadata !DIExpression()), !dbg !17696
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17699
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17700
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17701
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17702
  tail call fastcc void @sys_dnode_init.258(%struct._dnode* noundef %0) #26, !dbg !17703
  ret void, !dbg !17704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.258(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !17705 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17707, metadata !DIExpression()), !dbg !17708
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17709
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17710
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17711
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17712
  ret void, !dbg !17713
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17714 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17720, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i64 0, metadata !17721, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 0, metadata !17722, metadata !DIExpression()), !dbg !17726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17727
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17729, !srcloc !17437
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17729
  call void @llvm.dbg.value(metadata i32 %3, metadata !17434, metadata !DIExpression()) #25, !dbg !17731
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17731
  call void @llvm.dbg.value(metadata i32 %3, metadata !17428, metadata !DIExpression()) #25, !dbg !17727
  call void @llvm.dbg.value(metadata i32 %3, metadata !17724, metadata !DIExpression()), !dbg !17726
  call void @llvm.dbg.value(metadata i64 0, metadata !17721, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 undef, metadata !17722, metadata !DIExpression()), !dbg !17726
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17732
  call void @llvm.dbg.value(metadata i64 %4, metadata !17721, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.value(metadata i32 %3, metadata !17490, metadata !DIExpression()) #25, !dbg !17735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17735
  call void @llvm.dbg.value(metadata i32 %3, metadata !17498, metadata !DIExpression()) #25, !dbg !17737
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17739, !srcloc !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17722, metadata !DIExpression()), !dbg !17726
  ret i64 %4, !dbg !17740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17741 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17743, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i64 0, metadata !17744, metadata !DIExpression()), !dbg !17747
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.259(%struct._timeout* noundef %0) #26, !dbg !17748
  br i1 %2, label %21, label %3, !dbg !17750

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17751
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17745, metadata !DIExpression()), !dbg !17752
  call void @llvm.dbg.value(metadata i64 0, metadata !17744, metadata !DIExpression()), !dbg !17747
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17753
  br i1 %5, label %16, label %6, !dbg !17755

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17745, metadata !DIExpression()), !dbg !17752
  call void @llvm.dbg.value(metadata i64 %8, metadata !17744, metadata !DIExpression()), !dbg !17747
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17756
  %10 = load i64, i64* %9, align 8, !dbg !17756
  %11 = add nsw i64 %10, %8, !dbg !17758
  call void @llvm.dbg.value(metadata i64 %11, metadata !17744, metadata !DIExpression()), !dbg !17747
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17759
  br i1 %12, label %16, label %13, !dbg !17761

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17762
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17745, metadata !DIExpression()), !dbg !17752
  call void @llvm.dbg.value(metadata i64 %11, metadata !17744, metadata !DIExpression()), !dbg !17747
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17753
  br i1 %15, label %16, label %6, !dbg !17755, !llvm.loop !17763

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17747
  call void @llvm.dbg.value(metadata i64 %17, metadata !17744, metadata !DIExpression()), !dbg !17747
  %18 = tail call fastcc i32 @elapsed.247() #26, !dbg !17765
  %19 = sext i32 %18 to i64, !dbg !17765
  %20 = sub nsw i64 %17, %19, !dbg !17766
  br label %21, !dbg !17767

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17747
  ret i64 %22, !dbg !17768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.259(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17769 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17773, metadata !DIExpression()), !dbg !17774
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17775
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.256(%struct._dnode* noundef %2) #26, !dbg !17776
  %4 = xor i1 %3, true, !dbg !17777
  ret i1 %4, !dbg !17778
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17779 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17781, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata i64 0, metadata !17782, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata i32 0, metadata !17783, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17788
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17790, !srcloc !17437
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17790
  call void @llvm.dbg.value(metadata i32 %3, metadata !17434, metadata !DIExpression()) #25, !dbg !17792
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17792
  call void @llvm.dbg.value(metadata i32 %3, metadata !17428, metadata !DIExpression()) #25, !dbg !17788
  call void @llvm.dbg.value(metadata i32 %3, metadata !17785, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata i64 0, metadata !17782, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata i32 undef, metadata !17783, metadata !DIExpression()), !dbg !17787
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17793
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17796
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17782, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17786
  call void @llvm.dbg.value(metadata i32 %3, metadata !17490, metadata !DIExpression()) #25, !dbg !17797
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17797
  call void @llvm.dbg.value(metadata i32 %3, metadata !17498, metadata !DIExpression()) #25, !dbg !17799
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17801, !srcloc !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17783, metadata !DIExpression()), !dbg !17787
  %6 = add i64 %5, %4, !dbg !17802
  ret i64 %6, !dbg !17803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17804 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17806, metadata !DIExpression()), !dbg !17810
  call void @llvm.dbg.value(metadata i32 0, metadata !17807, metadata !DIExpression()), !dbg !17811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17812
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17814, !srcloc !17437
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17814
  call void @llvm.dbg.value(metadata i32 %2, metadata !17434, metadata !DIExpression()) #25, !dbg !17816
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17816
  call void @llvm.dbg.value(metadata i32 %2, metadata !17428, metadata !DIExpression()) #25, !dbg !17812
  call void @llvm.dbg.value(metadata i32 %2, metadata !17809, metadata !DIExpression()), !dbg !17811
  call void @llvm.dbg.value(metadata i32 -1, metadata !17806, metadata !DIExpression()), !dbg !17810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17807, metadata !DIExpression()), !dbg !17811
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17817
  call void @llvm.dbg.value(metadata i32 %3, metadata !17806, metadata !DIExpression()), !dbg !17810
  call void @llvm.dbg.value(metadata i32 %2, metadata !17490, metadata !DIExpression()) #25, !dbg !17820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17820
  call void @llvm.dbg.value(metadata i32 %2, metadata !17498, metadata !DIExpression()) #25, !dbg !17822
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17824, !srcloc !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17807, metadata !DIExpression()), !dbg !17811
  ret i32 %3, !dbg !17825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17828, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.value(metadata i1 %1, metadata !17829, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17838
  call void @llvm.dbg.value(metadata i32 0, metadata !17830, metadata !DIExpression()), !dbg !17839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17840
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17842, !srcloc !17437
  call void @llvm.dbg.value(metadata i32 undef, metadata !17434, metadata !DIExpression()) #25, !dbg !17844
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17844
  call void @llvm.dbg.value(metadata i32 undef, metadata !17428, metadata !DIExpression()) #25, !dbg !17840
  call void @llvm.dbg.value(metadata i32 undef, metadata !17832, metadata !DIExpression()), !dbg !17839
  call void @llvm.dbg.value(metadata i32 undef, metadata !17830, metadata !DIExpression()), !dbg !17839
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17845
  call void @llvm.dbg.value(metadata i32 %4, metadata !17833, metadata !DIExpression()), !dbg !17846
  call void @llvm.dbg.value(metadata i1 undef, metadata !17836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17846
  %5 = icmp slt i32 %4, 2, !dbg !17847
  call void @llvm.dbg.value(metadata i1 %5, metadata !17837, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17846
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17848
  call void @llvm.dbg.value(metadata i1 %6, metadata !17836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17846
  br i1 %7, label %11, label %8, !dbg !17848

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17850
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17850
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !17852
  br label %11, !dbg !17853

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17842
  call void @llvm.dbg.value(metadata i32 %12, metadata !17434, metadata !DIExpression()) #25, !dbg !17844
  call void @llvm.dbg.value(metadata i32 %12, metadata !17428, metadata !DIExpression()) #25, !dbg !17840
  call void @llvm.dbg.value(metadata i32 %12, metadata !17832, metadata !DIExpression()), !dbg !17839
  call void @llvm.dbg.value(metadata i32 undef, metadata !17490, metadata !DIExpression()) #25, !dbg !17854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17854
  call void @llvm.dbg.value(metadata i32 undef, metadata !17498, metadata !DIExpression()) #25, !dbg !17856
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17858, !srcloc !17504
  call void @llvm.dbg.value(metadata i32 1, metadata !17830, metadata !DIExpression()), !dbg !17839
  call void @llvm.dbg.value(metadata i32 undef, metadata !17830, metadata !DIExpression()), !dbg !17839
  ret void, !dbg !17859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17864, metadata !DIExpression()), !dbg !17869
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !17870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17871
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17873, !srcloc !17437
  call void @llvm.dbg.value(metadata i32 undef, metadata !17434, metadata !DIExpression()) #25, !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17428, metadata !DIExpression()) #25, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()), !dbg !17869
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17869
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()), !dbg !17869
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17876
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17877
  br i1 %4, label %28, label %5, !dbg !17878

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17879
  %10 = load i64, i64* %9, align 8, !dbg !17879
  %11 = sext i32 %8 to i64, !dbg !17880
  %12 = icmp sgt i64 %10, %11, !dbg !17881
  br i1 %12, label %26, label %13, !dbg !17882

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17869
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17866, metadata !DIExpression()), !dbg !17883
  %15 = trunc i64 %10 to i32, !dbg !17884
  call void @llvm.dbg.value(metadata i32 %15, metadata !17868, metadata !DIExpression()), !dbg !17883
  %16 = sext i32 %15 to i64, !dbg !17885
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17886
  %18 = add i64 %17, %16, !dbg !17886
  store i64 %18, i64* @curr_tick, align 8, !dbg !17886
  store i64 0, i64* %9, align 8, !dbg !17887
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17888
  call void @llvm.dbg.value(metadata i32 %14, metadata !17490, metadata !DIExpression()) #25, !dbg !17889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17889
  call void @llvm.dbg.value(metadata i32 %14, metadata !17498, metadata !DIExpression()) #25, !dbg !17891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17893, !srcloc !17504
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17894
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17894
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !17895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17896
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17898, !srcloc !17437
  call void @llvm.dbg.value(metadata i32 undef, metadata !17434, metadata !DIExpression()) #25, !dbg !17900
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17900
  call void @llvm.dbg.value(metadata i32 undef, metadata !17428, metadata !DIExpression()) #25, !dbg !17896
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()), !dbg !17869
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17901
  %23 = sub nsw i32 %22, %15, !dbg !17901
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17869
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()), !dbg !17869
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17876
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17877
  br i1 %25, label %28, label %5, !dbg !17878, !llvm.loop !17902

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17904
  store i64 %27, i64* %9, align 8, !dbg !17904
  br label %32, !dbg !17907

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17869
  %31 = sext i32 %30 to i64, !dbg !17908
  br label %32, !dbg !17908

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17908
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17869
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17909
  %37 = add i64 %36, %33, !dbg !17909
  store i64 %37, i64* @curr_tick, align 8, !dbg !17909
  store i32 0, i32* @announce_remaining, align 4, !dbg !17910
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17911
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !17912
  call void @llvm.dbg.value(metadata i32 %35, metadata !17490, metadata !DIExpression()) #25, !dbg !17913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17913
  call void @llvm.dbg.value(metadata i32 %35, metadata !17498, metadata !DIExpression()) #25, !dbg !17915
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !17917, !srcloc !17504
  ret void, !dbg !17918
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17919 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17921, metadata !DIExpression()), !dbg !17925
  call void @llvm.dbg.value(metadata i32 0, metadata !17922, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17422, metadata !DIExpression()) #25, !dbg !17927
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17929, !srcloc !17437
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17929
  call void @llvm.dbg.value(metadata i32 %2, metadata !17434, metadata !DIExpression()) #25, !dbg !17931
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()) #25, !dbg !17931
  call void @llvm.dbg.value(metadata i32 %2, metadata !17428, metadata !DIExpression()) #25, !dbg !17927
  call void @llvm.dbg.value(metadata i32 %2, metadata !17924, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.value(metadata i64 0, metadata !17921, metadata !DIExpression()), !dbg !17925
  call void @llvm.dbg.value(metadata i32 undef, metadata !17922, metadata !DIExpression()), !dbg !17926
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17932
  %4 = tail call fastcc i32 @elapsed.247() #26, !dbg !17935
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17921, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17925
  call void @llvm.dbg.value(metadata i32 %2, metadata !17490, metadata !DIExpression()) #25, !dbg !17936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17495, metadata !DIExpression()) #25, !dbg !17936
  call void @llvm.dbg.value(metadata i32 %2, metadata !17498, metadata !DIExpression()) #25, !dbg !17938
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17940, !srcloc !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17922, metadata !DIExpression()), !dbg !17926
  %5 = sext i32 %4 to i64, !dbg !17935
  %6 = add i64 %3, %5, !dbg !17941
  ret i64 %6, !dbg !17942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17943 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17944
  %2 = trunc i64 %1 to i32, !dbg !17945
  ret i32 %2, !dbg !17946
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17947 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17948
  ret i64 %1, !dbg !17949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17952, metadata !DIExpression()), !dbg !17959
  %2 = icmp eq i32 %0, 0, !dbg !17960
  br i1 %2, label %10, label %3, !dbg !17962

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17963
  call void @llvm.dbg.value(metadata i32 %4, metadata !17953, metadata !DIExpression()), !dbg !17959
  %5 = mul i32 %0, 84, !dbg !17964
  call void @llvm.dbg.value(metadata i32 %5, metadata !17954, metadata !DIExpression()), !dbg !17959
  br label %6, !dbg !17965

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17966
  call void @llvm.dbg.value(metadata i32 %7, metadata !17955, metadata !DIExpression()), !dbg !17967
  %8 = sub i32 %7, %4, !dbg !17968
  %9 = icmp ult i32 %8, %5, !dbg !17970
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17972 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17973
  ret i32 %1, !dbg !17974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17975 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !17977
  ret i32 %1, !dbg !17978
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17979 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17983, metadata !DIExpression()), !dbg !17985
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17986

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17987
  br label %14, !dbg !17991

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17984, metadata !DIExpression()), !dbg !17985
  %6 = icmp slt i64 %2, -1, !dbg !17992
  br i1 %6, label %7, label %9, !dbg !17995

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17996
  br label %14, !dbg !17997

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17999
  %11 = icmp ugt i64 %2, 1, !dbg !18000
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18000
  %13 = add nsw i64 %10, %12, !dbg !18001
  br label %14, !dbg !18002

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18003
  ret i64 %15, !dbg !18004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !18005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18007, metadata !DIExpression()), !dbg !18011
  %2 = icmp eq i8* %0, null, !dbg !18012
  br i1 %2, label %7, label %3, !dbg !18014

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !18008, metadata !DIExpression()), !dbg !18011
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !18015
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !18015
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !18008, metadata !DIExpression()), !dbg !18011
  call void @llvm.dbg.value(metadata i8* %4, metadata !18007, metadata !DIExpression()), !dbg !18011
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !18017
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !18018
  br label %7, !dbg !18019

7:                                                ; preds = %3, %1
  ret void, !dbg !18020
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18025, metadata !DIExpression()), !dbg !18028
  call void @llvm.dbg.value(metadata i32 %1, metadata !18026, metadata !DIExpression()), !dbg !18028
  %3 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !18029
  call void @llvm.dbg.value(metadata i8* %3, metadata !18027, metadata !DIExpression()), !dbg !18028
  ret i8* %3, !dbg !18030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !18031 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18035, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata i32 %1, metadata !18036, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata i32 %2, metadata !18037, metadata !DIExpression()), !dbg !18041
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !18037, metadata !DIExpression(DW_OP_deref)), !dbg !18041
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !18042
  br i1 %5, label %14, label %6, !dbg !18044

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !18045
  call void @llvm.dbg.value(metadata i32 %7, metadata !18040, metadata !DIExpression()), !dbg !18041
  %8 = load i32, i32* %4, align 4, !dbg !18046
  call void @llvm.dbg.value(metadata i32 %8, metadata !18037, metadata !DIExpression()), !dbg !18041
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !18047
  call void @llvm.dbg.value(metadata i8* %9, metadata !18038, metadata !DIExpression()), !dbg !18041
  %10 = icmp eq i8* %9, null, !dbg !18048
  br i1 %10, label %14, label %11, !dbg !18050

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !18051
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !18039, metadata !DIExpression()), !dbg !18041
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !18052
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !18053
  call void @llvm.dbg.value(metadata i8* %13, metadata !18039, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata i8* %13, metadata !18038, metadata !DIExpression()), !dbg !18041
  br label %14, !dbg !18054

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !18041
  ret i8* %15, !dbg !18055
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !18056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18058, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i32 4, metadata !18059, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i32* %1, metadata !18060, metadata !DIExpression()), !dbg !18061
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !18062
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !18062
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !18062
  store i32 %5, i32* %1, align 4, !dbg !18062
  ret i1 %4, !dbg !18063
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !18064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18066, metadata !DIExpression()), !dbg !18068
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !18069
  call void @llvm.dbg.value(metadata i8* %2, metadata !18067, metadata !DIExpression()), !dbg !18068
  ret i8* %2, !dbg !18070
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18071 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !18073, metadata !DIExpression()), !dbg !18077
  call void @llvm.dbg.value(metadata i32 %1, metadata !18074, metadata !DIExpression()), !dbg !18077
  %4 = bitcast i32* %3 to i8*, !dbg !18078
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18078
  call void @llvm.dbg.value(metadata i32* %3, metadata !18076, metadata !DIExpression(DW_OP_deref)), !dbg !18077
  %5 = call fastcc zeroext i1 @size_mul_overflow.277(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !18079
  br i1 %5, label %12, label %6, !dbg !18081

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !18082
  call void @llvm.dbg.value(metadata i32 %7, metadata !18076, metadata !DIExpression()), !dbg !18077
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !18083
  call void @llvm.dbg.value(metadata i8* %8, metadata !18075, metadata !DIExpression()), !dbg !18077
  %9 = icmp eq i8* %8, null, !dbg !18084
  br i1 %9, label %12, label %10, !dbg !18086

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !18076, metadata !DIExpression()), !dbg !18077
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !18087
  br label %12, !dbg !18089

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !18077
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18090
  ret i8* %13, !dbg !18090
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.277(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !18091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18093, metadata !DIExpression()), !dbg !18096
  call void @llvm.dbg.value(metadata i32 %1, metadata !18094, metadata !DIExpression()), !dbg !18096
  call void @llvm.dbg.value(metadata i32* %2, metadata !18095, metadata !DIExpression()), !dbg !18096
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !18097
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !18097
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !18097
  store i32 %6, i32* %2, align 4, !dbg !18097
  ret i1 %5, !dbg !18098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !18099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18173, metadata !DIExpression()), !dbg !18174
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !18175
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !18176
  ret void, !dbg !18177
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18180, metadata !DIExpression()), !dbg !18184
  call void @llvm.dbg.value(metadata i32 %1, metadata !18181, metadata !DIExpression()), !dbg !18184
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !18185
  br i1 %3, label %9, label %4, !dbg !18187

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18188
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !18190
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !18190
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !18183, metadata !DIExpression()), !dbg !18184
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !18191
  br i1 %8, label %12, label %9, !dbg !18193

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !18194
  call void @llvm.dbg.value(metadata i8* %11, metadata !18182, metadata !DIExpression()), !dbg !18184
  br label %12, !dbg !18196

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !18197
  call void @llvm.dbg.value(metadata i8* %13, metadata !18182, metadata !DIExpression()), !dbg !18184
  ret i8* %13, !dbg !18198
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !18199 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !18201, !srcloc !18204
  ret void, !dbg !18205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18206 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.286, i32 0, i32 0)) #27, !dbg !18208
  ret void, !dbg !18209
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18210 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18212, metadata !DIExpression()), !dbg !18232
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18213, metadata !DIExpression()), !dbg !18233
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18234

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18235

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18213, metadata !DIExpression()), !dbg !18233
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18236
  %6 = load i8*, i8** %5, align 4, !dbg !18236
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18240
  %8 = load i32, i32* %7, align 4, !dbg !18240
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !18241
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18242
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18213, metadata !DIExpression()), !dbg !18233
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18243
  br i1 %10, label %3, label %2, !dbg !18234, !llvm.loop !18245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18247 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18251, metadata !DIExpression()), !dbg !18254
  call void @llvm.dbg.value(metadata i8* %1, metadata !18252, metadata !DIExpression()), !dbg !18254
  call void @llvm.dbg.value(metadata i32 %2, metadata !18253, metadata !DIExpression()), !dbg !18254
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18255
  tail call fastcc void @z_waitq_init.288(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !18256
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18257
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18258
  ret void, !dbg !18259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.288(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !18260 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18265, metadata !DIExpression()), !dbg !18266
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18267
  tail call fastcc void @sys_dlist_init.289(%struct._dnode* noundef %2) #26, !dbg !18268
  ret void, !dbg !18269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.289(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !18270 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18275, metadata !DIExpression()), !dbg !18276
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18277
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18278
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18279
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18280
  ret void, !dbg !18281
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18282 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18293, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18290, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i32 %1, metadata !18291, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i32 %2, metadata !18292, metadata !DIExpression()), !dbg !18303
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !18304
  call void @llvm.dbg.value(metadata i64 %6, metadata !18295, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i8* null, metadata !18296, metadata !DIExpression()), !dbg !18303
  %7 = icmp eq i64 %5, -1, !dbg !18305
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18305
  call void @llvm.dbg.value(metadata i64 %8, metadata !18295, metadata !DIExpression()), !dbg !18303
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18307, metadata !DIExpression()) #25, !dbg !18314
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18316, !srcloc !18322
  call void @llvm.dbg.value(metadata i32 undef, metadata !18319, metadata !DIExpression()) #25, !dbg !18323
  call void @llvm.dbg.value(metadata i32 undef, metadata !18320, metadata !DIExpression()) #25, !dbg !18323
  call void @llvm.dbg.value(metadata i32 undef, metadata !18313, metadata !DIExpression()) #25, !dbg !18314
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i8 0, metadata !18302, metadata !DIExpression()), !dbg !18303
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18296, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i8 0, metadata !18302, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()), !dbg !18303
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18324
  call void @llvm.dbg.value(metadata i8* %12, metadata !18296, metadata !DIExpression()), !dbg !18303
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !18326
  call void @llvm.dbg.value(metadata i64 %13, metadata !18294, metadata !DIExpression()), !dbg !18303
  %14 = icmp eq i8* %12, null, !dbg !18327
  br i1 %14, label %15, label %31, !dbg !18329

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()), !dbg !18303
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18329

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18302, metadata !DIExpression()), !dbg !18303
  %20 = sub nsw i64 %8, %18, !dbg !18330
  %21 = icmp slt i64 %20, 1, !dbg !18331
  br i1 %21, label %31, label %22, !dbg !18332

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18303
  call void @llvm.dbg.value(metadata i8 undef, metadata !18302, metadata !DIExpression()), !dbg !18303
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18333
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18333
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !18333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18307, metadata !DIExpression()) #25, !dbg !18334
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18336, !srcloc !18322
  call void @llvm.dbg.value(metadata i32 undef, metadata !18319, metadata !DIExpression()) #25, !dbg !18338
  call void @llvm.dbg.value(metadata i32 undef, metadata !18320, metadata !DIExpression()) #25, !dbg !18338
  call void @llvm.dbg.value(metadata i32 undef, metadata !18313, metadata !DIExpression()) #25, !dbg !18334
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i8* null, metadata !18296, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()), !dbg !18303
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18324
  call void @llvm.dbg.value(metadata i8* %28, metadata !18296, metadata !DIExpression()), !dbg !18303
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !18326
  call void @llvm.dbg.value(metadata i64 %29, metadata !18294, metadata !DIExpression()), !dbg !18303
  %30 = icmp eq i8* %28, null, !dbg !18327
  br i1 %30, label %17, label %31, !dbg !18329, !llvm.loop !18339

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18324
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18303
  call void @llvm.dbg.value(metadata i8* %33, metadata !18296, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.value(metadata i32 %34, metadata !18342, metadata !DIExpression()) #25, !dbg !18348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18347, metadata !DIExpression()) #25, !dbg !18348
  call void @llvm.dbg.value(metadata i32 %34, metadata !18350, metadata !DIExpression()) #25, !dbg !18353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !18355, !srcloc !18356
  ret i8* %33, !dbg !18357
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18358 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18364, metadata !DIExpression()), !dbg !18366
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18362, metadata !DIExpression()), !dbg !18366
  call void @llvm.dbg.value(metadata i32 %1, metadata !18363, metadata !DIExpression()), !dbg !18366
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !18367
  call void @llvm.dbg.value(metadata i8* %4, metadata !18365, metadata !DIExpression()), !dbg !18366
  ret i8* %4, !dbg !18368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18369 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18373, metadata !DIExpression()), !dbg !18376
  call void @llvm.dbg.value(metadata i8* %1, metadata !18374, metadata !DIExpression()), !dbg !18376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18307, metadata !DIExpression()) #25, !dbg !18377
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18379, !srcloc !18322
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18379
  call void @llvm.dbg.value(metadata i32 %4, metadata !18319, metadata !DIExpression()) #25, !dbg !18381
  call void @llvm.dbg.value(metadata i32 undef, metadata !18320, metadata !DIExpression()) #25, !dbg !18381
  call void @llvm.dbg.value(metadata i32 %4, metadata !18313, metadata !DIExpression()) #25, !dbg !18377
  call void @llvm.dbg.value(metadata i32 %4, metadata !18375, metadata !DIExpression()), !dbg !18376
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18382
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !18383
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18384
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !18386
  %8 = icmp eq i32 %7, 0, !dbg !18387
  br i1 %8, label %12, label %9, !dbg !18388

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18389
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18390
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !18390
  br label %13, !dbg !18392

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18342, metadata !DIExpression()) #25, !dbg !18393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18347, metadata !DIExpression()) #25, !dbg !18393
  call void @llvm.dbg.value(metadata i32 %4, metadata !18350, metadata !DIExpression()) #25, !dbg !18396
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !18398, !srcloc !18356
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18399
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!894, !2, !2637, !27, !366, !390, !2639, !2641, !2674, !2708, !400, !450, !2710, !2713, !2724, !2770, !2772, !2800, !2828, !2871, !2942, !2987, !479, !619, !3015, !655, !665, !690, !702, !926, !3020, !1062, !1128, !1436, !1660, !3058, !1771, !1861, !3060, !3145, !3209, !1912, !3212, !1919, !2284, !3230, !3232, !2304, !2412, !3336, !2527, !2566, !3339, !3341, !2606}
!llvm.ident = !{!3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343, !3343}
!llvm.module.flags = !{!3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_bm_channel", scope: !27, file: !114, line: 16, type: !136, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !290, !292, !294, !296, !298, !300, !302, !304, !306, !339, !343, !348, !350, !357, !362}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "bm_channel", scope: !27, file: !114, line: 16, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !123, !125, !126, !134, !259}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !120, size: 16)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !13, !132}
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !133, line: 214, baseType: !32)
!133 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !135, size: 32, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !160, !257, !258}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !136, file: !137, line: 2722, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !142, file: !141, line: 232, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !148)
!148 = !{!149, !155}
!149 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 38, baseType: !150, size: 32)
!150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 38, size: 32, elements: !151)
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !150, file: !146, line: 39, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !146, line: 40, baseType: !153, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 42, baseType: !156, size: 32, offset: 32)
!156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 42, size: 32, elements: !157)
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !156, file: !146, line: 43, baseType: !153, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !156, file: !146, line: 44, baseType: !153, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !136, file: !137, line: 2724, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = !{!165, !212, !225, !226, !227, !228, !234, !252}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !162, file: !163, line: 247, baseType: !166, size: 384)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !167)
!167 = !{!168, !182, !184, !187, !188, !199, !200, !201}
!168 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 60, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 60, size: 64, elements: !170)
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !169, file: !163, line: 61, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !147)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !169, file: !163, line: 62, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !176)
!175 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !174, file: !175, line: 50, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 64, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!180 = !{!181}
!181 = !DISubrange(count: 2)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !166, file: !163, line: 68, baseType: !183, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !166, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !166, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !163, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !163, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !163, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !163, line: 100, baseType: !121, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !166, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !166, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !166, file: !163, line: 131, baseType: !202, size: 192, offset: 192)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !203)
!203 = !{!204, !205, !211}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !202, file: !141, line: 245, baseType: !172, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !202, file: !141, line: 246, baseType: !206, size: 32, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !210}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !202, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !162, file: !163, line: 250, baseType: !213, size: 288, offset: 384)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !213, file: !214, line: 26, baseType: !108, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !213, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !213, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !213, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !213, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !213, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !213, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !213, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !213, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !162, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !162, file: !163, line: 256, baseType: !140, size: 64, offset: 704)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !162, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !162, file: !163, line: 300, baseType: !229, size: 96, offset: 800)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !230)
!230 = !{!231, !232, !233}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !229, file: !163, line: 153, baseType: !22, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !229, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !162, file: !163, line: 325, baseType: !235, size: 32, offset: 896)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !237)
!237 = !{!238, !247, !248}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !236, file: !137, line: 5074, baseType: !239, size: 96)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !241)
!240 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !{!242, !245, !246}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !240, line: 57, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !240, line: 57, flags: DIFlagFwdDecl)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !239, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !239, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !236, file: !137, line: 5075, baseType: !140, size: 64, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !236, file: !137, line: 5076, baseType: !249, offset: 160)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !162, file: !163, line: 343, baseType: !253, size: 64, offset: 928)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !253, file: !214, line: 63, baseType: !108, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !253, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !136, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !136, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !265)
!265 = !{!266, !267, !284}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !264, file: !117, line: 91, baseType: !131, size: 8)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !264, file: !117, line: 93, baseType: !268, size: 32, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !279, !280, !281, !282, !283}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !137, line: 4206, baseType: !140, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !137, line: 4208, baseType: !249, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !270, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !270, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !270, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !270, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !270, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !270, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !270, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !270, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !264, file: !117, line: 96, baseType: !285, size: 32, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "s1", scope: !27, file: !114, line: 126, type: !264, isLocal: false, isDefinition: true, align: 32)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "s2", scope: !27, file: !114, line: 129, type: !264, isLocal: false, isDefinition: true, align: 32)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "s3", scope: !27, file: !114, line: 131, type: !264, isLocal: false, isDefinition: true, align: 32)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "s4", scope: !27, file: !114, line: 132, type: !264, isLocal: false, isDefinition: true, align: 32)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "s5", scope: !27, file: !114, line: 134, type: !264, isLocal: false, isDefinition: true, align: 32)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "s6", scope: !27, file: !114, line: 135, type: !264, isLocal: false, isDefinition: true, align: 32)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "s7", scope: !27, file: !114, line: 136, type: !264, isLocal: false, isDefinition: true, align: 32)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "s8", scope: !27, file: !114, line: 137, type: !264, isLocal: false, isDefinition: true, align: 32)
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression())
!307 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !27, file: !114, line: 216, type: !308, isLocal: false, isDefinition: true, align: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !309)
!309 = !{!310, !311, !319, !320, !325, !326, !327, !328, !329, !330, !332, !336}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !308, file: !137, line: 621, baseType: !161, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !308, file: !137, line: 622, baseType: !312, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !315)
!314 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{!318}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !316, line: 48, baseType: !278, size: 8)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !308, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !308, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !314, line: 46, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null, !102, !102, !102}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !308, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !308, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !308, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !308, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !308, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !308, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !308, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DISubroutineType(types: !335)
!335 = !{null}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !308, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !27, file: !114, line: 216, type: !341, isLocal: false, isDefinition: true)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !161)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !27, file: !114, line: 216, type: !345, isLocal: false, isDefinition: true, align: 512)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 8704, elements: !346)
!346 = !{!347}
!347 = !DISubrange(count: 1088)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !27, file: !114, line: 216, type: !162, isLocal: false, isDefinition: true)
!350 = !DIGlobalVariableExpression(var: !351, expr: !DIExpression())
!351 = distinct !DIGlobalVariable(name: "_zbus_message_bm_channel", scope: !27, file: !114, line: 16, type: !352, isLocal: true, isDefinition: true)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !353, line: 10, size: 64, elements: !354)
!353 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!354 = !{!355, !356}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !352, file: !353, line: 11, baseType: !102, size: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !352, file: !353, line: 12, baseType: !132, size: 32, offset: 32)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(name: "_zbus_observers_bm_channel", scope: !27, file: !114, line: 16, type: !359, isLocal: true, isDefinition: true)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 288, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 9)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 44, type: !109, isLocal: true, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !366, file: !381, line: 18, type: !382, isLocal: false, isDefinition: true)
!366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !368, globals: !380, splitDebugInlining: false, nameTableKind: None)
!367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!368 = !{!22, !102, !24, !369, !371, !373, !132, !103, !374, !375, !377, !378, !277, !379, !121, !337}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!380 = !{!364}
!381 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !383, file: !384, line: 17, baseType: !337, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !383, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "_char_out", scope: !390, file: !394, line: 54, type: !395, isLocal: false, isDefinition: true)
!390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !391, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !393, splitDebugInlining: false, nameTableKind: None)
!391 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!392 = !{!102, !103}
!393 = !{!388}
!394 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{!103, !103}
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !400, file: !417, line: 56, type: !418, isLocal: true, isDefinition: true, align: 32)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !402, globals: !416, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 379, baseType: !406)
!405 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 224, elements: !407)
!407 = !{!408, !410, !411, !412, !413, !414, !415}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !406, file: !405, line: 372, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !406, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !406, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !406, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !406, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !406, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !406, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!416 = !{!398}
!417 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !447}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !419, file: !420, line: 60, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DISubroutineType(types: !425)
!425 = !{!103, !426}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !430)
!429 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!430 = !{!431, !432, !433, !434, !440, !441}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !429, line: 380, baseType: !337, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !428, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !428, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !428, file: !429, line: 386, baseType: !435, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 32)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !436, file: !429, line: 359, baseType: !185, size: 8)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !436, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !428, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !428, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !429, line: 43, baseType: !445)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !446)
!446 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !419, file: !420, line: 65, baseType: !426, size: 32, offset: 32)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !450, file: !453, line: 71, type: !454, isLocal: true, isDefinition: true, align: 32)
!450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !452, splitDebugInlining: false, nameTableKind: None)
!451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!452 = !{!448}
!453 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !456)
!456 = !{!457, !476}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !455, file: !420, line: 60, baseType: !458, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DISubroutineType(types: !460)
!460 = !{!103, !461}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !464)
!464 = !{!465, !466, !467, !468, !474, !475}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !463, file: !429, line: 380, baseType: !337, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !463, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !463, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !463, file: !429, line: 386, baseType: !469, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !471)
!471 = !{!472, !473}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !470, file: !429, line: 359, baseType: !185, size: 8)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !470, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !463, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !463, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !455, file: !420, line: 65, baseType: !461, size: 32, offset: 32)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !479, file: !486, line: 17, type: !612, isLocal: false, isDefinition: true)
!479 = distinct !DICompileUnit(language: DW_LANG_C99, file: !480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !481, globals: !482, splitDebugInlining: false, nameTableKind: None)
!480 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!481 = !{!132, !103, !108, !102}
!482 = !{!477, !483, !608}
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !485, file: !486, line: 198, type: !594, isLocal: true, isDefinition: true)
!485 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !486, file: !486, line: 175, type: !487, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !589)
!486 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !DISubroutineType(types: !488)
!488 = !{null, !489}
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !491)
!491 = !{!492, !550, !562, !563, !564, !565, !571, !584}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !490, file: !163, line: 247, baseType: !493, size: 384)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !494)
!494 = !{!495, !519, !526, !527, !528, !537, !538, !539}
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 60, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 60, size: 64, elements: !497)
!497 = !{!498, !513}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !496, file: !163, line: 61, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !501)
!501 = !{!502, !508}
!502 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 38, baseType: !503, size: 32)
!503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 38, size: 32, elements: !504)
!504 = !{!505, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !503, file: !146, line: 39, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !503, file: !146, line: 40, baseType: !506, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 42, baseType: !509, size: 32, offset: 32)
!509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 42, size: 32, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !509, file: !146, line: 43, baseType: !506, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !509, file: !146, line: 44, baseType: !506, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !496, file: !163, line: 62, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !514, file: !175, line: 50, baseType: !517, size: 64)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 64, elements: !180)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !493, file: !163, line: 68, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !522, file: !141, line: 232, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !500)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !493, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !493, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!528 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 90, baseType: !529, size: 16, offset: 112)
!529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 90, size: 16, elements: !530)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, scope: !529, file: !163, line: 91, baseType: !532, size: 16)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !529, file: !163, line: 91, size: 16, elements: !533)
!533 = !{!534, !535}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !532, file: !163, line: 96, baseType: !195, size: 8)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !532, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !529, file: !163, line: 100, baseType: !121, size: 16)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !493, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !493, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !493, file: !163, line: 131, baseType: !540, size: 192, offset: 192)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !541)
!541 = !{!542, !543, !549}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !540, file: !141, line: 245, baseType: !499, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !540, file: !141, line: 246, baseType: !544, size: 32, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 32)
!546 = !DISubroutineType(types: !547)
!547 = !{null, !548}
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !540, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !490, file: !163, line: 250, baseType: !551, size: 288, offset: 384)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !552)
!552 = !{!553, !554, !555, !556, !557, !558, !559, !560, !561}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !551, file: !214, line: 26, baseType: !108, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !551, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !551, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !551, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !551, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !551, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !551, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !551, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !551, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !490, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !490, file: !163, line: 256, baseType: !521, size: 64, offset: 704)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !490, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !490, file: !163, line: 300, baseType: !566, size: 96, offset: 800)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !566, file: !163, line: 153, baseType: !22, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !566, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !566, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !490, file: !163, line: 325, baseType: !572, size: 32, offset: 896)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !574)
!574 = !{!575, !581, !582}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !573, file: !137, line: 5074, baseType: !576, size: 96)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !577)
!577 = !{!578, !579, !580}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !576, file: !240, line: 57, baseType: !243, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !576, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !576, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !573, file: !137, line: 5075, baseType: !521, size: 64, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !573, file: !137, line: 5076, baseType: !583, offset: 160)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !490, file: !163, line: 343, baseType: !585, size: 64, offset: 928)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !585, file: !214, line: 63, baseType: !108, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !585, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!589 = !{!590, !591, !592, !593}
!590 = !DILocalVariable(name: "thread", arg: 1, scope: !485, file: !486, line: 175, type: !489)
!591 = !DILocalVariable(name: "region_num", scope: !485, file: !486, line: 200, type: !185)
!592 = !DILocalVariable(name: "guard_start", scope: !485, file: !486, line: 265, type: !22)
!593 = !DILocalVariable(name: "guard_size", scope: !485, file: !486, line: 266, type: !132)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 96, elements: !606)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !597)
!596 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!597 = !{!598, !599, !600}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !595, file: !596, line: 53, baseType: !22, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !595, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !595, file: !596, line: 55, baseType: !601, size: 32, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !603)
!602 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !604)
!604 = !{!605}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !603, file: !602, line: 150, baseType: !108, size: 32)
!606 = !{!607}
!607 = !DISubrange(count: 1)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "static_regions", scope: !479, file: !486, line: 62, type: !610, isLocal: true, isDefinition: true)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 96, elements: !606)
!611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !613, file: !384, line: 17, baseType: !337, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !613, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !619, file: !652, line: 39, type: !185, isLocal: true, isDefinition: true)
!619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !621, globals: !651, splitDebugInlining: false, nameTableKind: None)
!620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!621 = !{!622, !102, !103, !639, !185}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !624, line: 1226, baseType: !625)
!624 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 1213, size: 352, elements: !626)
!626 = !{!627, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !625, file: !624, line: 1215, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !625, file: !624, line: 1216, baseType: !409, size: 32, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !625, file: !624, line: 1217, baseType: !409, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !625, file: !624, line: 1218, baseType: !409, size: 32, offset: 96)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !625, file: !624, line: 1219, baseType: !409, size: 32, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !625, file: !624, line: 1220, baseType: !409, size: 32, offset: 160)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !625, file: !624, line: 1221, baseType: !409, size: 32, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !625, file: !624, line: 1222, baseType: !409, size: 32, offset: 224)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !625, file: !624, line: 1223, baseType: !409, size: 32, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !625, file: !624, line: 1224, baseType: !409, size: 32, offset: 288)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !625, file: !624, line: 1225, baseType: !409, size: 32, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !643)
!642 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!643 = !{!644, !645, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !641, file: !642, line: 29, baseType: !108, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !641, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !641, file: !642, line: 37, baseType: !647, size: 32, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !648, file: !602, line: 143, baseType: !108, size: 32)
!651 = !{!617}
!652 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !655, file: !662, line: 21, type: !395, isLocal: true, isDefinition: true)
!655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !656, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !657, globals: !661, splitDebugInlining: false, nameTableKind: None)
!656 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!657 = !{!658, !103, !102}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !660, line: 22, baseType: !103)
!660 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!661 = !{!653}
!662 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !665, file: !670, line: 13, type: !687, isLocal: true, isDefinition: true)
!665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !666, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !667, splitDebugInlining: false, nameTableKind: None)
!666 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!667 = !{!668, !663}
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "mpu_config", scope: !665, file: !670, line: 37, type: !671, isLocal: false, isDefinition: true)
!670 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !642, line: 41, size: 64, elements: !673)
!673 = !{!674, !675}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !672, file: !642, line: 43, baseType: !108, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !672, file: !642, line: 45, baseType: !676, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !679)
!679 = !{!680, !681, !682}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !678, file: !642, line: 29, baseType: !108, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !678, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !678, file: !642, line: 37, baseType: !683, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !685)
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !684, file: !602, line: 143, baseType: !108, size: 32)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 192, elements: !180)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !690, file: !694, line: 10, type: !695, isLocal: false, isDefinition: true)
!690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !692, globals: !693, splitDebugInlining: false, nameTableKind: None)
!691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!692 = !{!104, !102, !103}
!693 = !{!688}
!694 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !697)
!697 = !{!698, !699}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !384, line: 17, baseType: !337, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !696, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !702, file: !806, line: 72, type: !889, isLocal: true, isDefinition: true)
!702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !704, retainedTypes: !792, globals: !803, splitDebugInlining: false, nameTableKind: None)
!703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!704 = !{!30, !705}
!705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 65, baseType: !103, size: 32, elements: !706)
!706 = !{!707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791}
!707 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!708 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!709 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!710 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!711 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!712 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!713 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!714 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!715 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!716 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!717 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!718 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!719 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!720 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!721 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!722 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!723 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!724 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!725 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!726 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!727 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!728 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!729 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!730 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!731 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!732 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!733 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!734 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!735 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!736 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!737 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!738 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!739 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!740 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!741 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!742 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!743 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!744 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!745 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!746 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!747 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!748 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!749 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!750 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!751 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!752 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!753 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!754 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!755 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!756 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!757 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!758 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!759 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!760 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!761 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!762 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!763 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!764 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!765 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!766 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!767 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!768 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!769 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!770 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!771 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!772 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!773 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!774 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!775 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!776 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!777 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!778 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!779 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!780 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!781 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!782 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!783 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!784 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!785 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!786 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!787 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!788 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!789 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!790 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!791 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!792 = !{!132, !103, !102, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !405, line: 364, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 356, size: 192, elements: !796)
!796 = !{!797, !798, !799, !800, !801, !802}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !795, file: !405, line: 358, baseType: !409, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !795, file: !405, line: 359, baseType: !409, size: 32, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !795, file: !405, line: 360, baseType: !409, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !795, file: !405, line: 361, baseType: !409, size: 32, offset: 96)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !795, file: !405, line: 362, baseType: !409, size: 32, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !795, file: !405, line: 363, baseType: !409, size: 32, offset: 160)
!803 = !{!804, !810, !826, !837, !854, !700, !856, !869, !871, !873, !875, !877, !879, !881, !883, !885, !887}
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !702, file: !806, line: 424, type: !807, isLocal: false, isDefinition: true, align: 16)
!806 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 64, elements: !808)
!808 = !{!809}
!809 = !DISubrange(count: 4)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !702, file: !806, line: 424, type: !812, isLocal: false, isDefinition: true, align: 32)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !814)
!814 = !{!815, !816, !817, !818, !824, !825}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !813, file: !429, line: 380, baseType: !337, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !813, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !813, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !813, file: !429, line: 386, baseType: !819, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !820, file: !429, line: 359, baseType: !185, size: 8)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !820, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !813, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !813, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !702, file: !806, line: 424, type: !828, isLocal: true, isDefinition: true, align: 32)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !830)
!830 = !{!831, !836}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !829, file: !420, line: 60, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!833 = !DISubroutineType(types: !834)
!834 = !{!103, !835}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !829, file: !420, line: 65, baseType: !835, size: 32, offset: 32)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "exti_data", scope: !702, file: !806, line: 423, type: !839, isLocal: true, isDefinition: true)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !806, line: 107, size: 1472, elements: !840)
!840 = !{!841}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !839, file: !806, line: 109, baseType: !842, size: 1472)
!842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !843, size: 1472, elements: !852)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !806, line: 101, size: 64, elements: !844)
!844 = !{!845, !851}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !843, file: !806, line: 102, baseType: !846, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !847, line: 63, baseType: !848)
!847 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !103, !102}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !843, file: !806, line: 103, baseType: !102, size: 32, offset: 32)
!852 = !{!853}
!853 = !DISubrange(count: 23)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !702, file: !806, line: 424, type: !820, isLocal: true, isDefinition: true, align: 8)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !858, file: !806, line: 493, type: !863, isLocal: true, isDefinition: true, align: 32)
!858 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !806, file: !806, line: 460, type: !859, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !861)
!859 = !DISubroutineType(types: !860)
!860 = !{null, !835}
!861 = !{!862}
!862 = !DILocalVariable(name: "dev", arg: 1, scope: !858, file: !806, line: 460, type: !835)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !864)
!864 = !{!865, !866, !867, !868}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !863, file: !10, line: 55, baseType: !331, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !863, file: !10, line: 57, baseType: !331, size: 32, offset: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !863, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !863, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !858, file: !806, line: 497, type: !863, isLocal: true, isDefinition: true, align: 32)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !858, file: !806, line: 507, type: !863, isLocal: true, isDefinition: true, align: 32)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !858, file: !806, line: 512, type: !863, isLocal: true, isDefinition: true, align: 32)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !858, file: !806, line: 516, type: !863, isLocal: true, isDefinition: true, align: 32)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !858, file: !806, line: 523, type: !863, isLocal: true, isDefinition: true, align: 32)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !858, file: !806, line: 527, type: !863, isLocal: true, isDefinition: true, align: 32)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !858, file: !806, line: 581, type: !863, isLocal: true, isDefinition: true, align: 32)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !858, file: !806, line: 586, type: !863, isLocal: true, isDefinition: true, align: 32)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !858, file: !806, line: 591, type: !863, isLocal: true, isDefinition: true, align: 32)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !858, file: !806, line: 595, type: !863, isLocal: true, isDefinition: true, align: 32)
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 736, elements: !852)
!890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !891)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !405, line: 154, baseType: !705)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !894, file: !899, line: 22, type: !921, isLocal: false, isDefinition: true, align: 16)
!894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !895, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !896, splitDebugInlining: false, nameTableKind: None)
!895 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!896 = !{!897, !892, !903, !905, !907, !909, !911, !913, !915, !917, !919}
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !894, file: !899, line: 17, type: !900, isLocal: false, isDefinition: true, align: 16)
!899 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 192, elements: !901)
!901 = !{!902}
!902 = !DISubrange(count: 12)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !894, file: !899, line: 29, type: !807, isLocal: false, isDefinition: true, align: 16)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !894, file: !899, line: 36, type: !807, isLocal: false, isDefinition: true, align: 16)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !894, file: !899, line: 43, type: !807, isLocal: false, isDefinition: true, align: 16)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !894, file: !899, line: 50, type: !807, isLocal: false, isDefinition: true, align: 16)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !894, file: !899, line: 57, type: !807, isLocal: false, isDefinition: true, align: 16)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !894, file: !899, line: 64, type: !807, isLocal: false, isDefinition: true, align: 16)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !894, file: !899, line: 71, type: !807, isLocal: false, isDefinition: true, align: 16)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !894, file: !899, line: 78, type: !807, isLocal: false, isDefinition: true, align: 16)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !894, file: !899, line: 85, type: !807, isLocal: false, isDefinition: true, align: 16)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 48, elements: !922)
!922 = !{!923}
!923 = !DISubrange(count: 3)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !926, file: !988, line: 398, type: !1021, isLocal: true, isDefinition: true)
!926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !927, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !928, retainedTypes: !941, globals: !985, splitDebugInlining: false, nameTableKind: None)
!927 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!928 = !{!929, !30, !934}
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !930, line: 197, baseType: !32, size: 32, elements: !931)
!930 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!931 = !{!932, !933}
!932 = !DIEnumerator(name: "SUCCESS", value: 0)
!933 = !DIEnumerator(name: "ERROR", value: 1)
!934 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !935, line: 44, baseType: !32, size: 32, elements: !936)
!935 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!936 = !{!937, !938, !939, !940}
!937 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!938 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!939 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!940 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!941 = !{!102, !103, !108, !942, !978, !984}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 510, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 477, size: 1216, elements: !945)
!945 = !{!946, !947, !948, !949, !950, !951, !952, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !944, file: !405, line: 479, baseType: !409, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !944, file: !405, line: 480, baseType: !409, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !944, file: !405, line: 481, baseType: !409, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !944, file: !405, line: 482, baseType: !409, size: 32, offset: 96)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !944, file: !405, line: 483, baseType: !409, size: 32, offset: 128)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !944, file: !405, line: 484, baseType: !409, size: 32, offset: 160)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !944, file: !405, line: 485, baseType: !953, size: 64, offset: 192)
!953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !180)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !944, file: !405, line: 486, baseType: !409, size: 32, offset: 256)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !944, file: !405, line: 487, baseType: !409, size: 32, offset: 288)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !944, file: !405, line: 488, baseType: !953, size: 64, offset: 320)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !944, file: !405, line: 489, baseType: !409, size: 32, offset: 384)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !944, file: !405, line: 490, baseType: !409, size: 32, offset: 416)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !944, file: !405, line: 491, baseType: !953, size: 64, offset: 448)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !944, file: !405, line: 492, baseType: !409, size: 32, offset: 512)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !944, file: !405, line: 493, baseType: !409, size: 32, offset: 544)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !944, file: !405, line: 494, baseType: !953, size: 64, offset: 576)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !944, file: !405, line: 495, baseType: !409, size: 32, offset: 640)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !944, file: !405, line: 496, baseType: !409, size: 32, offset: 672)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !944, file: !405, line: 497, baseType: !953, size: 64, offset: 704)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !944, file: !405, line: 498, baseType: !409, size: 32, offset: 768)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !944, file: !405, line: 499, baseType: !409, size: 32, offset: 800)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !944, file: !405, line: 500, baseType: !953, size: 64, offset: 832)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !944, file: !405, line: 501, baseType: !409, size: 32, offset: 896)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !944, file: !405, line: 502, baseType: !409, size: 32, offset: 928)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !944, file: !405, line: 503, baseType: !953, size: 64, offset: 960)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !944, file: !405, line: 504, baseType: !409, size: 32, offset: 1024)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !944, file: !405, line: 505, baseType: !409, size: 32, offset: 1056)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !944, file: !405, line: 506, baseType: !108, size: 32, offset: 1088)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !944, file: !405, line: 507, baseType: !409, size: 32, offset: 1120)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !944, file: !405, line: 508, baseType: !409, size: 32, offset: 1152)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !944, file: !405, line: 509, baseType: !409, size: 32, offset: 1184)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !980, line: 343, size: 64, elements: !981)
!980 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!981 = !{!982, !983}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !979, file: !980, line: 344, baseType: !108, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !979, file: !980, line: 345, baseType: !108, size: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!985 = !{!986, !992, !1008, !1019, !924}
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !926, file: !988, line: 752, type: !989, isLocal: false, isDefinition: true, align: 16)
!988 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 848, elements: !990)
!990 = !{!991}
!991 = !DISubrange(count: 53)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !926, file: !988, line: 752, type: !994, isLocal: false, isDefinition: true, align: 32)
!994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !996)
!996 = !{!997, !998, !999, !1000, !1006, !1007}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !995, file: !429, line: 380, baseType: !337, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !995, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !995, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !995, file: !429, line: 386, baseType: !1001, size: 32, offset: 96)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1002, file: !429, line: 359, baseType: !185, size: 8)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1002, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !995, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !995, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !926, file: !988, line: 752, type: !1010, isLocal: true, isDefinition: true, align: 32)
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1012)
!1012 = !{!1013, !1018}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1011, file: !420, line: 60, baseType: !1014, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!103, !1017}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1011, file: !420, line: 65, baseType: !1017, size: 32, offset: 32)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !926, file: !988, line: 752, type: !1002, isLocal: true, isDefinition: true, align: 8)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !935, line: 100, size: 224, elements: !1022)
!1022 = !{!1023, !1029, !1030, !1039, !1044, !1049, !1055}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1021, file: !935, line: 101, baseType: !1024, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !935, line: 76, baseType: !1025)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!103, !1017, !1028}
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !935, line: 56, baseType: !102)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1021, file: !935, line: 102, baseType: !1024, size: 32, offset: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1021, file: !935, line: 103, baseType: !1031, size: 32, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !935, line: 83, baseType: !1032)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!103, !1017, !1028, !1035, !102}
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !935, line: 72, baseType: !1036)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !1017, !1028, !102}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1021, file: !935, line: 104, baseType: !1040, size: 32, offset: 96)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !935, line: 79, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!103, !1017, !1028, !984}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1021, file: !935, line: 105, baseType: !1045, size: 32, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !935, line: 88, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!934, !1017, !1028}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1021, file: !935, line: 106, baseType: !1050, size: 32, offset: 160)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !935, line: 92, baseType: !1051)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!103, !1017, !1028, !1054}
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !935, line: 64, baseType: !102)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1021, file: !935, line: 107, baseType: !1056, size: 32, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !935, line: 96, baseType: !1057)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!103, !1017, !1028, !102}
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1062, file: !1119, line: 603, type: !1121, isLocal: true, isDefinition: true, align: 32)
!1062 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1063, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1064, globals: !1116, splitDebugInlining: false, nameTableKind: None)
!1063 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!1064 = !{!102, !103, !1065}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1068, line: 336, size: 160, elements: !1069)
!1068 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1069 = !{!1070, !1090, !1094, !1098, !1111}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1067, file: !1068, line: 365, baseType: !1071, size: 32)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!103, !1074, !1089}
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1077)
!1077 = !{!1078, !1079, !1080, !1081, !1087, !1088}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1076, file: !429, line: 380, baseType: !337, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1076, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1076, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1076, file: !429, line: 386, baseType: !1082, size: 32, offset: 96)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1084)
!1084 = !{!1085, !1086}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1083, file: !429, line: 359, baseType: !185, size: 8)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1083, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1076, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1076, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1067, file: !1068, line: 366, baseType: !1091, size: 32, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{null, !1074, !186}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1067, file: !1068, line: 374, baseType: !1095, size: 32, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!103, !1074}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1067, file: !1068, line: 377, baseType: !1099, size: 32, offset: 96)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!103, !1074, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1068, line: 122, size: 64, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1109, !1110}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1104, file: !1068, line: 123, baseType: !108, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1104, file: !1068, line: 124, baseType: !185, size: 8, offset: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1104, file: !1068, line: 125, baseType: !185, size: 8, offset: 40)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1104, file: !1068, line: 126, baseType: !185, size: 8, offset: 48)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1104, file: !1068, line: 127, baseType: !185, size: 8, offset: 56)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1067, file: !1068, line: 379, baseType: !1112, size: 32, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!103, !1074, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1116 = !{!1060, !1117}
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1062, file: !1119, line: 38, type: !1120, isLocal: true, isDefinition: true)
!1119 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1074)
!1121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1123)
!1123 = !{!1124, !1125}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1122, file: !420, line: 60, baseType: !1095, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1122, file: !420, line: 65, baseType: !1074, size: 32, offset: 32)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1128, file: !1299, line: 762, type: !1411, isLocal: true, isDefinition: true)
!1128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1129, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1130, retainedTypes: !1148, globals: !1296, splitDebugInlining: false, nameTableKind: None)
!1129 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!1130 = !{!30, !1131, !1137, !1142, !934}
!1131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1132, line: 506, baseType: !32, size: 32, elements: !1133)
!1132 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1133 = !{!1134, !1135, !1136}
!1134 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1135 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1136 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1132, line: 512, baseType: !32, size: 32, elements: !1138)
!1138 = !{!1139, !1140, !1141}
!1139 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1140 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1141 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !847, line: 43, baseType: !32, size: 32, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147}
!1144 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1145 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1146 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1147 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1148 = !{!102, !103, !1149, !1219, !1224, !1184, !1137, !1131, !1229, !1230, !108, !1244, !1199, !277, !1256, !1257}
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1132, line: 523, size: 288, elements: !1152)
!1152 = !{!1153, !1174, !1180, !1185, !1189, !1190, !1191, !1195, !1215}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1151, file: !1132, line: 524, baseType: !1154, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!103, !1157, !1172, !1173}
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1170, !1171}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1159, file: !429, line: 380, baseType: !337, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1159, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1159, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1159, file: !429, line: 386, baseType: !1165, size: 32, offset: 96)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1167)
!1167 = !{!1168, !1169}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1166, file: !429, line: 359, baseType: !185, size: 8)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1166, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1159, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1159, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1132, line: 237, baseType: !185)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1132, line: 257, baseType: !108)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1151, file: !1132, line: 530, baseType: !1175, size: 32, offset: 32)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!103, !1157, !1178}
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1132, line: 229, baseType: !108)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1151, file: !1132, line: 532, baseType: !1181, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!103, !1157, !1184, !1179}
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1132, line: 216, baseType: !108)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1151, file: !1132, line: 535, baseType: !1186, size: 32, offset: 96)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!103, !1157, !1184}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1151, file: !1132, line: 537, baseType: !1186, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1151, file: !1132, line: 539, baseType: !1186, size: 32, offset: 160)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1151, file: !1132, line: 541, baseType: !1192, size: 32, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!103, !1157, !1172, !1131, !1137}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1151, file: !1132, line: 544, baseType: !1196, size: 32, offset: 224)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!103, !1157, !1199, !131}
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1132, line: 478, size: 96, elements: !1201)
!1201 = !{!1202, !1209, !1214}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1200, file: !1132, line: 482, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1204, line: 33, baseType: !1205)
!1204 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1204, line: 29, size: 32, elements: !1206)
!1206 = !{!1207}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1205, file: !1204, line: 30, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1200, file: !1132, line: 485, baseType: !1210, size: 32, offset: 32)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1132, line: 464, baseType: !1211)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{null, !1157, !1199, !1184}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1200, file: !1132, line: 493, baseType: !1184, size: 32, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1151, file: !1132, line: 547, baseType: !1216, size: 32, offset: 256)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!108, !1157}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1132, line: 428, size: 32, elements: !1222)
!1222 = !{!1223}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1221, file: !1132, line: 434, baseType: !1184, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1132, line: 441, size: 32, elements: !1227)
!1227 = !{!1228}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1226, file: !1132, line: 447, baseType: !1184, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 396, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 385, size: 320, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1232, file: !405, line: 387, baseType: !409, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1232, file: !405, line: 388, baseType: !409, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1232, file: !405, line: 389, baseType: !409, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1232, file: !405, line: 390, baseType: !409, size: 32, offset: 96)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1232, file: !405, line: 391, baseType: !409, size: 32, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1232, file: !405, line: 392, baseType: !409, size: 32, offset: 160)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1232, file: !405, line: 393, baseType: !409, size: 32, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1232, file: !405, line: 394, baseType: !409, size: 32, offset: 224)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1232, file: !405, line: 395, baseType: !1243, size: 64, offset: 256)
!1243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !180)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !405, line: 411, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 402, size: 320, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1252, !1253, !1254, !1255}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1246, file: !405, line: 404, baseType: !409, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1246, file: !405, line: 405, baseType: !409, size: 32, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1246, file: !405, line: 406, baseType: !1251, size: 128, offset: 64)
!1251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 128, elements: !808)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1246, file: !405, line: 407, baseType: !108, size: 32, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1246, file: !405, line: 408, baseType: !409, size: 32, offset: 224)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1246, file: !405, line: 409, baseType: !409, size: 32, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1246, file: !405, line: 410, baseType: !409, size: 32, offset: 288)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !935, line: 100, size: 224, elements: !1260)
!1260 = !{!1261, !1266, !1267, !1276, !1281, !1286, !1291}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1259, file: !935, line: 101, baseType: !1262, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !935, line: 76, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!103, !1157, !1028}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1259, file: !935, line: 102, baseType: !1262, size: 32, offset: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1259, file: !935, line: 103, baseType: !1268, size: 32, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !935, line: 83, baseType: !1269)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!103, !1157, !1028, !1272, !102}
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !935, line: 72, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{null, !1157, !1028, !102}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1259, file: !935, line: 104, baseType: !1277, size: 32, offset: 96)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !935, line: 79, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!103, !1157, !1028, !984}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1259, file: !935, line: 105, baseType: !1282, size: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !935, line: 88, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!934, !1157, !1028}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1259, file: !935, line: 106, baseType: !1287, size: 32, offset: 160)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !935, line: 92, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!103, !1157, !1028, !1054}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1259, file: !935, line: 107, baseType: !1292, size: 32, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !935, line: 96, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!103, !1157, !1028, !102}
!1296 = !{!1297, !1303, !1305, !1315, !1317, !1319, !1321, !1326, !1328, !1330, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1126, !1407, !1409, !1422, !1424, !1426, !1428, !1430, !1432}
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1128, file: !1299, line: 762, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1299 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 112, elements: !1301)
!1301 = !{!1302}
!1302 = !DISubrange(count: 7)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1128, file: !1299, line: 762, type: !1158, isLocal: false, isDefinition: true, align: 32)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1128, file: !1299, line: 762, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1309)
!1309 = !{!1310, !1314}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1308, file: !420, line: 60, baseType: !1311, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!103, !1157}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1308, file: !420, line: 65, baseType: !1157, size: 32, offset: 32)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1128, file: !1299, line: 766, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1128, file: !1299, line: 766, type: !1158, isLocal: false, isDefinition: true, align: 32)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1128, file: !1299, line: 766, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1128, file: !1299, line: 770, type: !1323, isLocal: false, isDefinition: true, align: 16)
!1323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 96, elements: !1324)
!1324 = !{!1325}
!1325 = !DISubrange(count: 6)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1128, file: !1299, line: 770, type: !1158, isLocal: false, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1128, file: !1299, line: 770, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1128, file: !1299, line: 774, type: !1332, isLocal: false, isDefinition: true, align: 16)
!1332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 80, elements: !1333)
!1333 = !{!1334}
!1334 = !DISubrange(count: 5)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1128, file: !1299, line: 774, type: !1158, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1128, file: !1299, line: 774, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1128, file: !1299, line: 778, type: !1332, isLocal: false, isDefinition: true, align: 16)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1128, file: !1299, line: 778, type: !1158, isLocal: false, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1128, file: !1299, line: 778, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1128, file: !1299, line: 782, type: !1332, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1128, file: !1299, line: 782, type: !1158, isLocal: false, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1128, file: !1299, line: 782, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1128, file: !1299, line: 786, type: !1332, isLocal: false, isDefinition: true, align: 16)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1128, file: !1299, line: 786, type: !1158, isLocal: false, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1128, file: !1299, line: 786, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1128, file: !1299, line: 790, type: !1332, isLocal: false, isDefinition: true, align: 16)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1128, file: !1299, line: 790, type: !1158, isLocal: false, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1128, file: !1299, line: 790, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1128, file: !1299, line: 762, type: !1365, isLocal: true, isDefinition: true)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1366, line: 237, size: 128, elements: !1367)
!1366 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1367 = !{!1368, !1369, !1370}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1365, file: !1366, line: 239, baseType: !1226, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1365, file: !1366, line: 241, baseType: !1157, size: 32, offset: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1365, file: !1366, line: 243, baseType: !1371, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1204, line: 40, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1204, line: 35, size: 64, elements: !1373)
!1373 = !{!1374, !1376}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1372, file: !1204, line: 36, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1372, file: !1204, line: 37, baseType: !1375, size: 32, offset: 32)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1128, file: !1299, line: 762, type: !1166, isLocal: true, isDefinition: true, align: 8)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1128, file: !1299, line: 766, type: !1365, isLocal: true, isDefinition: true)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1128, file: !1299, line: 766, type: !1166, isLocal: true, isDefinition: true, align: 8)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1128, file: !1299, line: 770, type: !1365, isLocal: true, isDefinition: true)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1128, file: !1299, line: 770, type: !1166, isLocal: true, isDefinition: true, align: 8)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1128, file: !1299, line: 774, type: !1365, isLocal: true, isDefinition: true)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1128, file: !1299, line: 774, type: !1166, isLocal: true, isDefinition: true, align: 8)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1128, file: !1299, line: 778, type: !1365, isLocal: true, isDefinition: true)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1128, file: !1299, line: 778, type: !1166, isLocal: true, isDefinition: true, align: 8)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1128, file: !1299, line: 782, type: !1365, isLocal: true, isDefinition: true)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1128, file: !1299, line: 782, type: !1166, isLocal: true, isDefinition: true, align: 8)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1128, file: !1299, line: 786, type: !1365, isLocal: true, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1128, file: !1299, line: 786, type: !1166, isLocal: true, isDefinition: true, align: 8)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1128, file: !1299, line: 790, type: !1365, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1128, file: !1299, line: 790, type: !1166, isLocal: true, isDefinition: true, align: 8)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1128, file: !1299, line: 656, type: !1150, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1128, file: !1299, line: 766, type: !1411, isLocal: true, isDefinition: true)
!1411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1412)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1366, line: 224, size: 160, elements: !1413)
!1413 = !{!1414, !1415, !1416, !1417}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1412, file: !1366, line: 226, baseType: !1221, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1412, file: !1366, line: 228, baseType: !984, size: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1412, file: !1366, line: 230, baseType: !103, size: 32, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1412, file: !1366, line: 231, baseType: !1418, size: 64, offset: 96)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !980, line: 343, size: 64, elements: !1419)
!1419 = !{!1420, !1421}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1418, file: !980, line: 344, baseType: !108, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1418, file: !980, line: 345, baseType: !108, size: 32, offset: 32)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1128, file: !1299, line: 770, type: !1411, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1128, file: !1299, line: 774, type: !1411, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1128, file: !1299, line: 778, type: !1411, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1128, file: !1299, line: 782, type: !1411, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1128, file: !1299, line: 786, type: !1411, isLocal: true, isDefinition: true)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1128, file: !1299, line: 790, type: !1411, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1436, file: !1575, line: 44, type: !1653, isLocal: false, isDefinition: true)
!1436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1437, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1438, retainedTypes: !1471, globals: !1572, splitDebugInlining: false, nameTableKind: None)
!1437 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!1438 = !{!30, !1439, !1446, !1453, !1460, !1466, !934}
!1439 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1068, line: 47, baseType: !32, size: 32, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445}
!1441 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1442 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1443 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1444 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1445 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1446 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1068, line: 75, baseType: !32, size: 32, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451, !1452}
!1448 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1449 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1450 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1451 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1452 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1453 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1068, line: 92, baseType: !32, size: 32, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1459}
!1455 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1456 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1457 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1458 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1459 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1460 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1068, line: 84, baseType: !32, size: 32, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465}
!1462 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1463 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1464 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1465 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1466 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1068, line: 107, baseType: !32, size: 32, elements: !1467)
!1467 = !{!1468, !1469, !1470}
!1468 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1469 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1470 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1471 = !{!102, !103, !1472, !186, !185, !1521, !108, !1028, !1532, !121, !109, !1571}
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1068, line: 336, size: 160, elements: !1475)
!1475 = !{!1476, !1495, !1499, !1503, !1516}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1474, file: !1068, line: 365, baseType: !1477, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!103, !1480, !1089}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487, !1493, !1494}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1482, file: !429, line: 380, baseType: !337, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1482, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1482, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1482, file: !429, line: 386, baseType: !1488, size: 32, offset: 96)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1490)
!1490 = !{!1491, !1492}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1489, file: !429, line: 359, baseType: !185, size: 8)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1489, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1482, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1482, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1474, file: !1068, line: 366, baseType: !1496, size: 32, offset: 32)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{null, !1480, !186}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1474, file: !1068, line: 374, baseType: !1500, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!103, !1480}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1474, file: !1068, line: 377, baseType: !1504, size: 32, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!103, !1480, !1507}
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1068, line: 122, size: 64, elements: !1510)
!1510 = !{!1511, !1512, !1513, !1514, !1515}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1509, file: !1068, line: 123, baseType: !108, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1509, file: !1068, line: 124, baseType: !185, size: 8, offset: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1509, file: !1068, line: 125, baseType: !185, size: 8, offset: 40)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1509, file: !1068, line: 126, baseType: !185, size: 8, offset: 48)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1509, file: !1068, line: 127, baseType: !185, size: 8, offset: 56)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1474, file: !1068, line: 379, baseType: !1517, size: 32, offset: 128)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!103, !1480, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !405, line: 648, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 639, size: 224, elements: !1524)
!1524 = !{!1525, !1526, !1527, !1528, !1529, !1530, !1531}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1523, file: !405, line: 641, baseType: !409, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1523, file: !405, line: 642, baseType: !409, size: 32, offset: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1523, file: !405, line: 643, baseType: !409, size: 32, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1523, file: !405, line: 644, baseType: !409, size: 32, offset: 96)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1523, file: !405, line: 645, baseType: !409, size: 32, offset: 128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1523, file: !405, line: 646, baseType: !409, size: 32, offset: 160)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1523, file: !405, line: 647, baseType: !409, size: 32, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !935, line: 100, size: 224, elements: !1535)
!1535 = !{!1536, !1541, !1542, !1551, !1556, !1561, !1566}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1534, file: !935, line: 101, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !935, line: 76, baseType: !1538)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!103, !1480, !1028}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1534, file: !935, line: 102, baseType: !1537, size: 32, offset: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1534, file: !935, line: 103, baseType: !1543, size: 32, offset: 64)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !935, line: 83, baseType: !1544)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!103, !1480, !1028, !1547, !102}
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !935, line: 72, baseType: !1548)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{null, !1480, !1028, !102}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1534, file: !935, line: 104, baseType: !1552, size: 32, offset: 96)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !935, line: 79, baseType: !1553)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!103, !1480, !1028, !984}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1534, file: !935, line: 105, baseType: !1557, size: 32, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !935, line: 88, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!934, !1480, !1028}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1534, file: !935, line: 106, baseType: !1562, size: 32, offset: 160)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !935, line: 92, baseType: !1563)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!103, !1480, !1028, !1054}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1534, file: !935, line: 107, baseType: !1567, size: 32, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !935, line: 96, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!103, !1480, !1028, !102}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!1572 = !{!1434, !1573, !1579, !1581, !1588, !1590, !1634, !1637, !1639, !1642, !1645, !1647}
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1436, file: !1575, line: 1914, type: !1576, isLocal: false, isDefinition: true, align: 16)
!1575 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 128, elements: !1577)
!1577 = !{!1578}
!1578 = !DISubrange(count: 8)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1436, file: !1575, line: 1914, type: !1481, isLocal: false, isDefinition: true, align: 32)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1436, file: !1575, line: 1914, type: !1583, isLocal: true, isDefinition: true, align: 32)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1584, file: !420, line: 60, baseType: !1500, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1584, file: !420, line: 65, baseType: !1480, size: 32, offset: 32)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1436, file: !1575, line: 1914, type: !1489, isLocal: true, isDefinition: true, align: 8)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1436, file: !1575, line: 1914, type: !1592, isLocal: true, isDefinition: true)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1594, line: 22, size: 224, elements: !1595)
!1594 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1595 = !{!1596, !1597, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1593, file: !1594, line: 24, baseType: !1521, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1593, file: !1594, line: 26, baseType: !1598, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !980, line: 343, size: 64, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1600, file: !980, line: 344, baseType: !108, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1600, file: !980, line: 345, baseType: !108, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1593, file: !1594, line: 28, baseType: !132, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1593, file: !1594, line: 30, baseType: !131, size: 8, offset: 96)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1593, file: !1594, line: 32, baseType: !103, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1593, file: !1594, line: 34, baseType: !131, size: 8, offset: 160)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1593, file: !1594, line: 36, baseType: !131, size: 8, offset: 168)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1593, file: !1594, line: 38, baseType: !131, size: 8, offset: 176)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1593, file: !1594, line: 40, baseType: !131, size: 8, offset: 184)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1593, file: !1594, line: 41, baseType: !1612, size: 32, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1615, line: 60, size: 64, elements: !1616)
!1615 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1616 = !{!1617, !1633}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1614, file: !1615, line: 69, baseType: !1618, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1615, line: 50, size: 64, elements: !1621)
!1621 = !{!1622, !1631, !1632}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1620, file: !1615, line: 52, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1625)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1626, line: 37, baseType: !1627)
!1626 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1626, line: 32, size: 64, elements: !1628)
!1628 = !{!1629, !1630}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1627, file: !1626, line: 34, baseType: !108, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1627, file: !1626, line: 36, baseType: !108, size: 32, offset: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1620, file: !1615, line: 54, baseType: !185, size: 8, offset: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1620, file: !1615, line: 56, baseType: !185, size: 8, offset: 40)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1614, file: !1615, line: 71, baseType: !185, size: 8, offset: 32)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1436, file: !1575, line: 1914, type: !1636, isLocal: true, isDefinition: true)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1599, size: 64, elements: !606)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1436, file: !1575, line: 1914, type: !1613, isLocal: true, isDefinition: true)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1436, file: !1575, line: 1914, type: !1641, isLocal: true, isDefinition: true)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1619, size: 64, elements: !606)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1436, file: !1575, line: 1914, type: !1644, isLocal: true, isDefinition: true)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1624, size: 128, elements: !180)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1436, file: !1575, line: 1539, type: !1473, isLocal: true, isDefinition: true)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1436, file: !1575, line: 1914, type: !1649, isLocal: true, isDefinition: true)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1594, line: 74, size: 64, elements: !1650)
!1650 = !{!1651, !1652}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1649, file: !1594, line: 76, baseType: !108, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1649, file: !1594, line: 78, baseType: !1480, size: 32, offset: 32)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !1655)
!1655 = !{!1656, !1657}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1654, file: !384, line: 17, baseType: !337, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1654, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1660, file: !1736, line: 65, type: !409, isLocal: true, isDefinition: true)
!1660 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1661, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1662, retainedTypes: !1663, globals: !1733, splitDebugInlining: false, nameTableKind: None)
!1661 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!1662 = !{!705}
!1663 = !{!104, !1664, !331, !185, !108, !1672, !1703}
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !1667)
!1667 = !{!1668, !1669, !1670, !1671}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1666, file: !624, line: 766, baseType: !409, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1666, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1666, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1666, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !1675)
!1675 = !{!1676, !1678, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1693, !1698, !1702}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1674, file: !624, line: 413, baseType: !1677, size: 256)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 256, elements: !1577)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1674, file: !624, line: 414, baseType: !1679, size: 768, offset: 256)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1680)
!1680 = !{!1681}
!1681 = !DISubrange(count: 24)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1674, file: !624, line: 415, baseType: !1677, size: 256, offset: 1024)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1674, file: !624, line: 416, baseType: !1679, size: 768, offset: 1280)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1674, file: !624, line: 417, baseType: !1677, size: 256, offset: 2048)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1674, file: !624, line: 418, baseType: !1679, size: 768, offset: 2304)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1674, file: !624, line: 419, baseType: !1677, size: 256, offset: 3072)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1674, file: !624, line: 420, baseType: !1679, size: 768, offset: 3328)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1674, file: !624, line: 421, baseType: !1677, size: 256, offset: 4096)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1674, file: !624, line: 422, baseType: !1690, size: 1792, offset: 4352)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1691)
!1691 = !{!1692}
!1692 = !DISubrange(count: 56)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1674, file: !624, line: 423, baseType: !1694, size: 1920, offset: 6144)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1695, size: 1920, elements: !1696)
!1695 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1696 = !{!1697}
!1697 = !DISubrange(count: 240)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1674, file: !624, line: 424, baseType: !1699, size: 20608, offset: 8064)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1700)
!1700 = !{!1701}
!1701 = !DISubrange(count: 644)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1674, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1705)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1710, !1711, !1712, !1713, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1724, !1725, !1726, !1728, !1730, !1732}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1705, file: !624, line: 447, baseType: !628, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1705, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1705, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1705, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1705, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1705, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1705, file: !624, line: 453, baseType: !1714, size: 96, offset: 192)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1695, size: 96, elements: !901)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1705, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1705, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1705, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1705, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1705, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1705, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1705, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1705, file: !624, line: 461, baseType: !1723, size: 64, offset: 512)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 64, elements: !180)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1705, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1705, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1705, file: !624, line: 464, baseType: !1727, size: 128, offset: 640)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 128, elements: !808)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1705, file: !624, line: 465, baseType: !1729, size: 160, offset: 768)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 160, elements: !1333)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1705, file: !624, line: 466, baseType: !1731, size: 160, offset: 928)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1333)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1705, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!1733 = !{!1734, !1760, !1763, !1765, !1767, !1658}
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1660, file: !1736, line: 285, type: !1737, isLocal: true, isDefinition: true, align: 32)
!1736 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1738)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1739)
!1739 = !{!1740, !1759}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1738, file: !420, line: 60, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DISubroutineType(types: !1743)
!1743 = !{!103, !1744}
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1747)
!1747 = !{!1748, !1749, !1750, !1751, !1757, !1758}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1746, file: !429, line: 380, baseType: !337, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1746, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1746, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1746, file: !429, line: 386, baseType: !1752, size: 32, offset: 96)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1754)
!1754 = !{!1755, !1756}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1753, file: !429, line: 359, baseType: !185, size: 8)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1753, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1746, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1746, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1738, file: !420, line: 65, baseType: !1744, size: 32, offset: 32)
!1760 = !DIGlobalVariableExpression(var: !1761, expr: !DIExpression())
!1761 = distinct !DIGlobalVariable(name: "lock", scope: !1660, file: !1736, line: 34, type: !1762, isLocal: true, isDefinition: true)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "last_load", scope: !1660, file: !1736, line: 36, type: !108, isLocal: true, isDefinition: true)
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1660, file: !1736, line: 48, type: !108, isLocal: true, isDefinition: true)
!1767 = !DIGlobalVariableExpression(var: !1768, expr: !DIExpression())
!1768 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1660, file: !1736, line: 54, type: !108, isLocal: true, isDefinition: true)
!1769 = !DIGlobalVariableExpression(var: !1770, expr: !DIExpression())
!1770 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1771, file: !1853, line: 22, type: !1855, isLocal: true, isDefinition: true)
!1771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1773, retainedTypes: !1774, globals: !1850, splitDebugInlining: false, nameTableKind: None)
!1772 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!1773 = !{!1131, !1137}
!1774 = !{!1775, !1839, !1844, !1184, !1137, !1131, !1849, !102}
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1132, line: 523, size: 288, elements: !1778)
!1778 = !{!1779, !1798, !1802, !1806, !1810, !1811, !1812, !1816, !1835}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1777, file: !1132, line: 524, baseType: !1780, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!103, !1783, !1172, !1173}
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1785)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1786)
!1786 = !{!1787, !1788, !1789, !1790, !1796, !1797}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1785, file: !429, line: 380, baseType: !337, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1785, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1785, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1785, file: !429, line: 386, baseType: !1791, size: 32, offset: 96)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1793)
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1792, file: !429, line: 359, baseType: !185, size: 8)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1792, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1785, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1785, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1777, file: !1132, line: 530, baseType: !1799, size: 32, offset: 32)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!103, !1783, !1178}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1777, file: !1132, line: 532, baseType: !1803, size: 32, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{!103, !1783, !1184, !1179}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1777, file: !1132, line: 535, baseType: !1807, size: 32, offset: 96)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{!103, !1783, !1184}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1777, file: !1132, line: 537, baseType: !1807, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1777, file: !1132, line: 539, baseType: !1807, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1777, file: !1132, line: 541, baseType: !1813, size: 32, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!103, !1783, !1172, !1131, !1137}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1777, file: !1132, line: 544, baseType: !1817, size: 32, offset: 224)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!103, !1783, !1820, !131}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1132, line: 478, size: 96, elements: !1822)
!1822 = !{!1823, !1829, !1834}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1821, file: !1132, line: 482, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1204, line: 33, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1204, line: 29, size: 32, elements: !1826)
!1826 = !{!1827}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1825, file: !1204, line: 30, baseType: !1828, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1821, file: !1132, line: 485, baseType: !1830, size: 32, offset: 32)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1132, line: 464, baseType: !1831)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{null, !1783, !1820, !1184}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1821, file: !1132, line: 493, baseType: !1184, size: 32, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1777, file: !1132, line: 547, baseType: !1836, size: 32, offset: 256)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!108, !1783}
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1841)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1132, line: 428, size: 32, elements: !1842)
!1842 = !{!1843}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1841, file: !1132, line: 434, baseType: !1184, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1132, line: 441, size: 32, elements: !1847)
!1847 = !{!1848}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1846, file: !1132, line: 447, baseType: !1184, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1850 = !{!1851, !1769}
!1851 = !DIGlobalVariableExpression(var: !1852, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1852 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1771, file: !1853, line: 37, type: !1854, isLocal: true, isDefinition: true)
!1853 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 352, elements: !1857)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1857 = !{!1858}
!1858 = !DISubrange(count: 11)
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1861, file: !1902, line: 139, type: !1909, isLocal: false, isDefinition: true)
!1861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1862, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1863, globals: !1899, splitDebugInlining: false, nameTableKind: None)
!1862 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!1863 = !{!1864}
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 510, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 477, size: 1216, elements: !1867)
!1867 = !{!1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1866, file: !405, line: 479, baseType: !409, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1866, file: !405, line: 480, baseType: !409, size: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1866, file: !405, line: 481, baseType: !409, size: 32, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1866, file: !405, line: 482, baseType: !409, size: 32, offset: 96)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1866, file: !405, line: 483, baseType: !409, size: 32, offset: 128)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1866, file: !405, line: 484, baseType: !409, size: 32, offset: 160)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1866, file: !405, line: 485, baseType: !953, size: 64, offset: 192)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1866, file: !405, line: 486, baseType: !409, size: 32, offset: 256)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1866, file: !405, line: 487, baseType: !409, size: 32, offset: 288)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1866, file: !405, line: 488, baseType: !953, size: 64, offset: 320)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1866, file: !405, line: 489, baseType: !409, size: 32, offset: 384)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1866, file: !405, line: 490, baseType: !409, size: 32, offset: 416)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1866, file: !405, line: 491, baseType: !953, size: 64, offset: 448)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1866, file: !405, line: 492, baseType: !409, size: 32, offset: 512)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1866, file: !405, line: 493, baseType: !409, size: 32, offset: 544)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1866, file: !405, line: 494, baseType: !953, size: 64, offset: 576)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1866, file: !405, line: 495, baseType: !409, size: 32, offset: 640)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1866, file: !405, line: 496, baseType: !409, size: 32, offset: 672)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1866, file: !405, line: 497, baseType: !953, size: 64, offset: 704)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1866, file: !405, line: 498, baseType: !409, size: 32, offset: 768)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1866, file: !405, line: 499, baseType: !409, size: 32, offset: 800)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1866, file: !405, line: 500, baseType: !953, size: 64, offset: 832)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1866, file: !405, line: 501, baseType: !409, size: 32, offset: 896)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1866, file: !405, line: 502, baseType: !409, size: 32, offset: 928)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1866, file: !405, line: 503, baseType: !953, size: 64, offset: 960)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1866, file: !405, line: 504, baseType: !409, size: 32, offset: 1024)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1866, file: !405, line: 505, baseType: !409, size: 32, offset: 1056)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1866, file: !405, line: 506, baseType: !108, size: 32, offset: 1088)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1866, file: !405, line: 507, baseType: !409, size: 32, offset: 1120)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1866, file: !405, line: 508, baseType: !409, size: 32, offset: 1152)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1866, file: !405, line: 509, baseType: !409, size: 32, offset: 1184)
!1899 = !{!1900, !1903, !1859}
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1861, file: !1902, line: 137, type: !108, isLocal: false, isDefinition: true)
!1902 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1861, file: !1902, line: 138, type: !1905, isLocal: false, isDefinition: true)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 128, elements: !1907)
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1907 = !{!1908}
!1908 = !DISubrange(count: 16)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 64, elements: !1577)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1912, file: !1915, line: 23, type: !1916, isLocal: false, isDefinition: true)
!1912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !1914, splitDebugInlining: false, nameTableKind: None)
!1913 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!1914 = !{!1910}
!1915 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1919, file: !1923, line: 37, type: !2172, isLocal: false, isDefinition: true)
!1919 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1920, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1921, retainedTypes: !1930, globals: !2003, splitDebugInlining: false, nameTableKind: None)
!1920 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!1921 = !{!1922, !30, !705}
!1922 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1923, line: 63, baseType: !32, size: 32, elements: !1924)
!1923 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1924 = !{!1925, !1926, !1927, !1928, !1929}
!1925 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1926 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1927 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1928 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1929 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1930 = !{!132, !102, !103, !1931, !277, !108, !1961, !331, !185, !1986}
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1933)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1934, line: 51, size: 64, elements: !1935)
!1934 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1935 = !{!1936, !1956}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1933, file: !1934, line: 52, baseType: !1937, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1934, line: 38, baseType: !1938)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 32)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!103, !1941, !379, !121}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1944)
!1944 = !{!1945, !1946, !1947, !1948, !1954, !1955}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1943, file: !429, line: 380, baseType: !337, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1943, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1943, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1943, file: !429, line: 386, baseType: !1949, size: 32, offset: 96)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1951)
!1951 = !{!1952, !1953}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1950, file: !429, line: 359, baseType: !185, size: 8)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1950, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1943, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1943, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1933, file: !1934, line: 53, baseType: !1957, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1934, line: 47, baseType: !1958)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!103, !1941, !379, !121, !108}
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1964)
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1963, file: !624, line: 447, baseType: !628, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1963, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1963, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1963, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1963, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1963, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1963, file: !624, line: 453, baseType: !1714, size: 96, offset: 192)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1963, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1963, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1963, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1963, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1963, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1963, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1963, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1963, file: !624, line: 461, baseType: !1723, size: 64, offset: 512)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1963, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1963, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1963, file: !624, line: 464, baseType: !1727, size: 128, offset: 640)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1963, file: !624, line: 465, baseType: !1729, size: 160, offset: 768)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1963, file: !624, line: 466, baseType: !1731, size: 160, offset: 928)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1963, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1988, file: !624, line: 413, baseType: !1677, size: 256)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1988, file: !624, line: 414, baseType: !1679, size: 768, offset: 256)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1988, file: !624, line: 415, baseType: !1677, size: 256, offset: 1024)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1988, file: !624, line: 416, baseType: !1679, size: 768, offset: 1280)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1988, file: !624, line: 417, baseType: !1677, size: 256, offset: 2048)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1988, file: !624, line: 418, baseType: !1679, size: 768, offset: 2304)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1988, file: !624, line: 419, baseType: !1677, size: 256, offset: 3072)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1988, file: !624, line: 420, baseType: !1679, size: 768, offset: 3328)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1988, file: !624, line: 421, baseType: !1677, size: 256, offset: 4096)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1988, file: !624, line: 422, baseType: !1690, size: 1792, offset: 4352)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1988, file: !624, line: 423, baseType: !1694, size: 1920, offset: 6144)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1988, file: !624, line: 424, baseType: !1699, size: 20608, offset: 8064)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1988, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2003 = !{!1917, !2004, !2126, !2132, !2134, !2137, !2142, !2144, !2149}
!2004 = !DIGlobalVariableExpression(var: !2005, expr: !DIExpression())
!2005 = distinct !DIGlobalVariable(name: "_kernel", scope: !1919, file: !1923, line: 40, type: !2006, isLocal: false, isDefinition: true)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !141, line: 158, size: 288, elements: !2007)
!2007 = !{!2008, !2121}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2006, file: !141, line: 159, baseType: !2009, size: 192)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2010, size: 192, elements: !606)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !141, line: 100, size: 192, elements: !2011)
!2011 = !{!2012, !2013, !2014, !2115, !2116, !2117, !2118}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2010, file: !141, line: 102, baseType: !108, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2010, file: !141, line: 105, baseType: !277, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2010, file: !141, line: 108, baseType: !2015, size: 32, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2017)
!2017 = !{!2018, !2076, !2088, !2089, !2090, !2091, !2097, !2110}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2016, file: !163, line: 247, baseType: !2019, size: 384)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2020)
!2020 = !{!2021, !2045, !2052, !2053, !2054, !2063, !2064, !2065}
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !2019, file: !163, line: 60, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2019, file: !163, line: 60, size: 64, elements: !2023)
!2023 = !{!2024, !2039}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2022, file: !163, line: 61, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2027)
!2027 = !{!2028, !2034}
!2028 = !DIDerivedType(tag: DW_TAG_member, scope: !2026, file: !146, line: 38, baseType: !2029, size: 32)
!2029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2026, file: !146, line: 38, size: 32, elements: !2030)
!2030 = !{!2031, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2029, file: !146, line: 39, baseType: !2032, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2029, file: !146, line: 40, baseType: !2032, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, scope: !2026, file: !146, line: 42, baseType: !2035, size: 32, offset: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2026, file: !146, line: 42, size: 32, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2035, file: !146, line: 43, baseType: !2032, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2035, file: !146, line: 44, baseType: !2032, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2022, file: !163, line: 62, baseType: !2040, size: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2041)
!2041 = !{!2042}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2040, file: !175, line: 50, baseType: !2043, size: 64)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2044, size: 64, elements: !180)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2019, file: !163, line: 68, baseType: !2046, size: 32, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2048, file: !141, line: 232, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2026)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2019, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2019, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2019, file: !163, line: 90, baseType: !2055, size: 16, offset: 112)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2019, file: !163, line: 90, size: 16, elements: !2056)
!2056 = !{!2057, !2062}
!2057 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !163, line: 91, baseType: !2058, size: 16)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !163, line: 91, size: 16, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2058, file: !163, line: 96, baseType: !195, size: 8)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2058, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2055, file: !163, line: 100, baseType: !121, size: 16)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2019, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2019, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2019, file: !163, line: 131, baseType: !2066, size: 192, offset: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2075}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2066, file: !141, line: 245, baseType: !2025, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2066, file: !141, line: 246, baseType: !2070, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2071)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !2074}
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2066, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2016, file: !163, line: 250, baseType: !2077, size: 288, offset: 384)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2078)
!2078 = !{!2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2077, file: !214, line: 26, baseType: !108, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2077, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2077, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2077, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2077, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2077, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2077, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2077, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2077, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2016, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2016, file: !163, line: 256, baseType: !2047, size: 64, offset: 704)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2016, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2016, file: !163, line: 300, baseType: !2092, size: 96, offset: 800)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2093)
!2093 = !{!2094, !2095, !2096}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2092, file: !163, line: 153, baseType: !22, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2092, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2092, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2016, file: !163, line: 325, baseType: !2098, size: 32, offset: 896)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2100)
!2100 = !{!2101, !2107, !2108}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2099, file: !137, line: 5074, baseType: !2102, size: 96)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2103)
!2103 = !{!2104, !2105, !2106}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2102, file: !240, line: 57, baseType: !243, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2102, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2102, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2099, file: !137, line: 5075, baseType: !2047, size: 64, offset: 96)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2099, file: !137, line: 5076, baseType: !2109, offset: 160)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2016, file: !163, line: 343, baseType: !2111, size: 64, offset: 928)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2112)
!2112 = !{!2113, !2114}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2111, file: !214, line: 63, baseType: !108, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2111, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2010, file: !141, line: 111, baseType: !2015, size: 32, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2010, file: !141, line: 124, baseType: !103, size: 32, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2010, file: !141, line: 127, baseType: !185, size: 8, offset: 160)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2010, file: !141, line: 153, baseType: !2119, offset: 168)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2120, line: 33, elements: !251)
!2120 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2006, file: !141, line: 170, baseType: !2122, size: 96, offset: 192)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2122, file: !141, line: 86, baseType: !2015, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2122, file: !141, line: 90, baseType: !2051, size: 64, offset: 32)
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1919, file: !1923, line: 43, type: !2128, isLocal: false, isDefinition: true, align: 512)
!2128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2129, size: 8704, elements: !346)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !2130)
!2130 = !{!2131}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2129, file: !316, line: 48, baseType: !278, size: 8)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1919, file: !1923, line: 44, type: !2016, isLocal: false, isDefinition: true)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1919, file: !1923, line: 48, type: !2136, isLocal: false, isDefinition: true)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2016, size: 1024, elements: !606)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1919, file: !1923, line: 86, type: !2139, isLocal: false, isDefinition: true, align: 512)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2129, size: 16896, elements: !2140)
!2140 = !{!607, !2141}
!2141 = !DISubrange(count: 2112)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1919, file: !1923, line: 217, type: !131, isLocal: false, isDefinition: true)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1919, file: !1923, line: 50, type: !2146, isLocal: true, isDefinition: true, align: 512)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2129, size: 3072, elements: !2147)
!2147 = !{!607, !2148}
!2148 = !DISubrange(count: 384)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "levels", scope: !2151, file: !1923, line: 232, type: !2171, isLocal: true, isDefinition: true)
!2151 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1923, file: !1923, line: 230, type: !2152, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !2154)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{null, !1922}
!2154 = !{!2155, !2156, !2166, !2170}
!2155 = !DILocalVariable(name: "level", arg: 1, scope: !2151, file: !1923, line: 230, type: !1922)
!2156 = !DILocalVariable(name: "entry", scope: !2151, file: !1923, line: 244, type: !2157)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2160)
!2160 = !{!2161, !2165}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2159, file: !420, line: 60, baseType: !2162, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!103, !1941}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2159, file: !420, line: 65, baseType: !1941, size: 32, offset: 32)
!2166 = !DILocalVariable(name: "dev", scope: !2167, file: !1923, line: 247, type: !1941)
!2167 = distinct !DILexicalBlock(scope: !2168, file: !1923, line: 246, column: 64)
!2168 = distinct !DILexicalBlock(scope: !2169, file: !1923, line: 246, column: 2)
!2169 = distinct !DILexicalBlock(scope: !2151, file: !1923, line: 246, column: 2)
!2170 = !DILocalVariable(name: "rc", scope: !2167, file: !1923, line: 248, type: !103)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2157, size: 192, elements: !1324)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !2174)
!2174 = !{!2175, !2176}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2173, file: !384, line: 17, baseType: !337, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2173, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "states_str", scope: !2179, file: !2180, line: 276, type: !2301, isLocal: true, isDefinition: true)
!2179 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2180, file: !2180, line: 271, type: !2181, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !2292)
!2180 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!337, !2183, !277, !132}
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2184)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2186)
!2186 = !{!2187, !2245, !2257, !2258, !2259, !2260, !2266, !2279}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2185, file: !163, line: 247, baseType: !2188, size: 384)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2189)
!2189 = !{!2190, !2214, !2221, !2222, !2223, !2232, !2233, !2234}
!2190 = !DIDerivedType(tag: DW_TAG_member, scope: !2188, file: !163, line: 60, baseType: !2191, size: 64)
!2191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2188, file: !163, line: 60, size: 64, elements: !2192)
!2192 = !{!2193, !2208}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2191, file: !163, line: 61, baseType: !2194, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2195)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2196)
!2196 = !{!2197, !2203}
!2197 = !DIDerivedType(tag: DW_TAG_member, scope: !2195, file: !146, line: 38, baseType: !2198, size: 32)
!2198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2195, file: !146, line: 38, size: 32, elements: !2199)
!2199 = !{!2200, !2202}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2198, file: !146, line: 39, baseType: !2201, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2198, file: !146, line: 40, baseType: !2201, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, scope: !2195, file: !146, line: 42, baseType: !2204, size: 32, offset: 32)
!2204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2195, file: !146, line: 42, size: 32, elements: !2205)
!2205 = !{!2206, !2207}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2204, file: !146, line: 43, baseType: !2201, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2204, file: !146, line: 44, baseType: !2201, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2191, file: !163, line: 62, baseType: !2209, size: 64)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2210)
!2210 = !{!2211}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2209, file: !175, line: 50, baseType: !2212, size: 64)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2213, size: 64, elements: !180)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2188, file: !163, line: 68, baseType: !2215, size: 32, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2218)
!2218 = !{!2219}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2217, file: !141, line: 232, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2195)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2188, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2188, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2223 = !DIDerivedType(tag: DW_TAG_member, scope: !2188, file: !163, line: 90, baseType: !2224, size: 16, offset: 112)
!2224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2188, file: !163, line: 90, size: 16, elements: !2225)
!2225 = !{!2226, !2231}
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !163, line: 91, baseType: !2227, size: 16)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2224, file: !163, line: 91, size: 16, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2227, file: !163, line: 96, baseType: !195, size: 8)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2227, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2224, file: !163, line: 100, baseType: !121, size: 16)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2188, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2188, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2188, file: !163, line: 131, baseType: !2235, size: 192, offset: 192)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2236)
!2236 = !{!2237, !2238, !2244}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2235, file: !141, line: 245, baseType: !2194, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2235, file: !141, line: 246, baseType: !2239, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2240)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{null, !2243}
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2235, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2185, file: !163, line: 250, baseType: !2246, size: 288, offset: 384)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2247)
!2247 = !{!2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2246, file: !214, line: 26, baseType: !108, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2246, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2246, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2246, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2246, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2246, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2246, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2246, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2246, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2185, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2185, file: !163, line: 256, baseType: !2216, size: 64, offset: 704)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2185, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2185, file: !163, line: 300, baseType: !2261, size: 96, offset: 800)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2262)
!2262 = !{!2263, !2264, !2265}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2261, file: !163, line: 153, baseType: !22, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2261, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2261, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2185, file: !163, line: 325, baseType: !2267, size: 32, offset: 896)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2269)
!2269 = !{!2270, !2276, !2277}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2268, file: !137, line: 5074, baseType: !2271, size: 96)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2272)
!2272 = !{!2273, !2274, !2275}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2271, file: !240, line: 57, baseType: !243, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2271, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2271, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2268, file: !137, line: 5075, baseType: !2216, size: 64, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2268, file: !137, line: 5076, baseType: !2278, offset: 160)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2185, file: !163, line: 343, baseType: !2280, size: 64, offset: 928)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2281)
!2281 = !{!2282, !2283}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2280, file: !214, line: 63, baseType: !108, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2280, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2285, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2286, globals: !2288, splitDebugInlining: false, nameTableKind: None)
!2285 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2286 = !{!102, !337, !104, !185, !103, !2287, !24, !132, !277, !22, !108, !109}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2288 = !{!2177, !2289}
!2289 = !DIGlobalVariableExpression(var: !2290, expr: !DIExpression())
!2290 = distinct !DIGlobalVariable(name: "states_sz", scope: !2179, file: !2180, line: 279, type: !2291, isLocal: true, isDefinition: true)
!2291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1854, size: 256, elements: !1577)
!2292 = !{!2293, !2294, !2295, !2296, !2297, !2298, !2299}
!2293 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2179, file: !2180, line: 271, type: !2183)
!2294 = !DILocalVariable(name: "buf", arg: 2, scope: !2179, file: !2180, line: 271, type: !277)
!2295 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2179, file: !2180, line: 271, type: !132)
!2296 = !DILocalVariable(name: "off", scope: !2179, file: !2180, line: 273, type: !132)
!2297 = !DILocalVariable(name: "bit", scope: !2179, file: !2180, line: 274, type: !185)
!2298 = !DILocalVariable(name: "thread_state", scope: !2179, file: !2180, line: 275, type: !185)
!2299 = !DILocalVariable(name: "index", scope: !2300, file: !2180, line: 293, type: !185)
!2300 = distinct !DILexicalBlock(scope: !2179, file: !2180, line: 293, column: 2)
!2301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !1577)
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "lock", scope: !2304, file: !2409, line: 47, type: !2402, isLocal: true, isDefinition: true)
!2304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2305, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2306, globals: !2408, splitDebugInlining: false, nameTableKind: None)
!2305 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2306 = !{!131, !102, !103, !2307, !2322}
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2309)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2310)
!2310 = !{!2311, !2317}
!2311 = !DIDerivedType(tag: DW_TAG_member, scope: !2309, file: !146, line: 38, baseType: !2312, size: 32)
!2312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2309, file: !146, line: 38, size: 32, elements: !2313)
!2313 = !{!2314, !2316}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2312, file: !146, line: 39, baseType: !2315, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2312, file: !146, line: 40, baseType: !2315, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, scope: !2309, file: !146, line: 42, baseType: !2318, size: 32, offset: 32)
!2318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2309, file: !146, line: 42, size: 32, elements: !2319)
!2319 = !{!2320, !2321}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2318, file: !146, line: 43, baseType: !2315, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2318, file: !146, line: 44, baseType: !2315, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2324)
!2324 = !{!2325, !2369, !2381, !2382, !2383, !2384, !2390, !2403}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2323, file: !163, line: 247, baseType: !2326, size: 384)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2327)
!2327 = !{!2328, !2338, !2345, !2346, !2347, !2356, !2357, !2358}
!2328 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !163, line: 60, baseType: !2329, size: 64)
!2329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !163, line: 60, size: 64, elements: !2330)
!2330 = !{!2331, !2332}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2329, file: !163, line: 61, baseType: !2308, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2329, file: !163, line: 62, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2334)
!2334 = !{!2335}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2333, file: !175, line: 50, baseType: !2336, size: 64)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2337, size: 64, elements: !180)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2326, file: !163, line: 68, baseType: !2339, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2341)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2342)
!2342 = !{!2343}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2341, file: !141, line: 232, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2309)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2326, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2326, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !163, line: 90, baseType: !2348, size: 16, offset: 112)
!2348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !163, line: 90, size: 16, elements: !2349)
!2349 = !{!2350, !2355}
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !163, line: 91, baseType: !2351, size: 16)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2348, file: !163, line: 91, size: 16, elements: !2352)
!2352 = !{!2353, !2354}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2351, file: !163, line: 96, baseType: !195, size: 8)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2351, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2348, file: !163, line: 100, baseType: !121, size: 16)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2326, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2326, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2326, file: !163, line: 131, baseType: !2359, size: 192, offset: 192)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2360)
!2360 = !{!2361, !2362, !2368}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2359, file: !141, line: 245, baseType: !2308, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2359, file: !141, line: 246, baseType: !2363, size: 32, offset: 64)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2364)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{null, !2367}
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2359, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2323, file: !163, line: 250, baseType: !2370, size: 288, offset: 384)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2370, file: !214, line: 26, baseType: !108, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2370, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2370, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2370, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2370, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2370, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2370, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2370, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2370, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2323, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2323, file: !163, line: 256, baseType: !2340, size: 64, offset: 704)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2323, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2323, file: !163, line: 300, baseType: !2385, size: 96, offset: 800)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2386)
!2386 = !{!2387, !2388, !2389}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2385, file: !163, line: 153, baseType: !22, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2385, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2385, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2323, file: !163, line: 325, baseType: !2391, size: 32, offset: 896)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2393)
!2393 = !{!2394, !2400, !2401}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2392, file: !137, line: 5074, baseType: !2395, size: 96)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2396)
!2396 = !{!2397, !2398, !2399}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2395, file: !240, line: 57, baseType: !243, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2395, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2395, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2392, file: !137, line: 5075, baseType: !2340, size: 64, offset: 96)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2392, file: !137, line: 5076, baseType: !2402, offset: 160)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2323, file: !163, line: 343, baseType: !2404, size: 64, offset: 928)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2405)
!2405 = !{!2406, !2407}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2404, file: !214, line: 63, baseType: !108, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2404, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2408 = !{!2302}
!2409 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2410 = !DIGlobalVariableExpression(var: !2411, expr: !DIExpression())
!2411 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2412, file: !2520, line: 56, type: !2509, isLocal: false, isDefinition: true)
!2412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2413, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2414, globals: !2517, splitDebugInlining: false, nameTableKind: None)
!2413 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2414 = !{!2415, !277, !102, !2515, !379, !104, !331, !103, !108, !109, !2516}
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2417)
!2417 = !{!2418, !2476, !2488, !2489, !2490, !2491, !2497, !2510}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2416, file: !163, line: 247, baseType: !2419, size: 384)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2420)
!2420 = !{!2421, !2445, !2452, !2453, !2454, !2463, !2464, !2465}
!2421 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !163, line: 60, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !163, line: 60, size: 64, elements: !2423)
!2423 = !{!2424, !2439}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2422, file: !163, line: 61, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2427)
!2427 = !{!2428, !2434}
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !146, line: 38, baseType: !2429, size: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2426, file: !146, line: 38, size: 32, elements: !2430)
!2430 = !{!2431, !2433}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2429, file: !146, line: 39, baseType: !2432, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2429, file: !146, line: 40, baseType: !2432, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !146, line: 42, baseType: !2435, size: 32, offset: 32)
!2435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2426, file: !146, line: 42, size: 32, elements: !2436)
!2436 = !{!2437, !2438}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2435, file: !146, line: 43, baseType: !2432, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2435, file: !146, line: 44, baseType: !2432, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2422, file: !163, line: 62, baseType: !2440, size: 64)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2441)
!2441 = !{!2442}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2440, file: !175, line: 50, baseType: !2443, size: 64)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, size: 64, elements: !180)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2419, file: !163, line: 68, baseType: !2446, size: 32, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2448)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2449)
!2449 = !{!2450}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2448, file: !141, line: 232, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2426)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2419, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2419, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2454 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !163, line: 90, baseType: !2455, size: 16, offset: 112)
!2455 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !163, line: 90, size: 16, elements: !2456)
!2456 = !{!2457, !2462}
!2457 = !DIDerivedType(tag: DW_TAG_member, scope: !2455, file: !163, line: 91, baseType: !2458, size: 16)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2455, file: !163, line: 91, size: 16, elements: !2459)
!2459 = !{!2460, !2461}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2458, file: !163, line: 96, baseType: !195, size: 8)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2458, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2455, file: !163, line: 100, baseType: !121, size: 16)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2419, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2419, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2419, file: !163, line: 131, baseType: !2466, size: 192, offset: 192)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2467)
!2467 = !{!2468, !2469, !2475}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2466, file: !141, line: 245, baseType: !2425, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2466, file: !141, line: 246, baseType: !2470, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2471)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{null, !2474}
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2466, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2416, file: !163, line: 250, baseType: !2477, size: 288, offset: 384)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2478)
!2478 = !{!2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2477, file: !214, line: 26, baseType: !108, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2477, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2477, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2477, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2477, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2477, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2477, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2477, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2477, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2416, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2416, file: !163, line: 256, baseType: !2447, size: 64, offset: 704)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2416, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2416, file: !163, line: 300, baseType: !2492, size: 96, offset: 800)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2493)
!2493 = !{!2494, !2495, !2496}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2492, file: !163, line: 153, baseType: !22, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2492, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2492, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2416, file: !163, line: 325, baseType: !2498, size: 32, offset: 896)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 32)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2500)
!2500 = !{!2501, !2507, !2508}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2499, file: !137, line: 5074, baseType: !2502, size: 96)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2503)
!2503 = !{!2504, !2505, !2506}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2502, file: !240, line: 57, baseType: !243, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2502, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2502, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2499, file: !137, line: 5075, baseType: !2447, size: 64, offset: 96)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2499, file: !137, line: 5076, baseType: !2509, offset: 160)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2416, file: !163, line: 343, baseType: !2511, size: 64, offset: 928)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2512)
!2512 = !{!2513, !2514}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2511, file: !214, line: 63, baseType: !108, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2511, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2517 = !{!2410, !2518, !2521, !2523}
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2412, file: !2520, line: 404, type: !103, isLocal: true, isDefinition: true)
!2520 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2521 = !DIGlobalVariableExpression(var: !2522, expr: !DIExpression())
!2522 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2412, file: !2520, line: 405, type: !103, isLocal: true, isDefinition: true)
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "pending_current", scope: !2412, file: !2520, line: 425, type: !2415, isLocal: true, isDefinition: true)
!2525 = !DIGlobalVariableExpression(var: !2526, expr: !DIExpression())
!2526 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2527, file: !2557, line: 15, type: !109, isLocal: true, isDefinition: true)
!2527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2528, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2529, globals: !2554, splitDebugInlining: false, nameTableKind: None)
!2528 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2529 = !{!104, !102, !331, !108, !109, !103, !2530, !277, !106}
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 32)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2532)
!2532 = !{!2533, !2548, !2553}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2531, file: !141, line: 245, baseType: !2534, size: 64)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2535)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2536)
!2536 = !{!2537, !2543}
!2537 = !DIDerivedType(tag: DW_TAG_member, scope: !2535, file: !146, line: 38, baseType: !2538, size: 32)
!2538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2535, file: !146, line: 38, size: 32, elements: !2539)
!2539 = !{!2540, !2542}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2538, file: !146, line: 39, baseType: !2541, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2538, file: !146, line: 40, baseType: !2541, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, scope: !2535, file: !146, line: 42, baseType: !2544, size: 32, offset: 32)
!2544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2535, file: !146, line: 42, size: 32, elements: !2545)
!2545 = !{!2546, !2547}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2544, file: !146, line: 43, baseType: !2541, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2544, file: !146, line: 44, baseType: !2541, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2531, file: !141, line: 246, baseType: !2549, size: 32, offset: 64)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2550)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{null, !2530}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2531, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2554 = !{!2525, !2555, !2559, !2561}
!2555 = !DIGlobalVariableExpression(var: !2556, expr: !DIExpression())
!2556 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2527, file: !2557, line: 19, type: !2558, isLocal: true, isDefinition: true)
!2557 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2559 = !DIGlobalVariableExpression(var: !2560, expr: !DIExpression())
!2560 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2527, file: !2557, line: 25, type: !103, isLocal: true, isDefinition: true)
!2561 = !DIGlobalVariableExpression(var: !2562, expr: !DIExpression())
!2562 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2527, file: !2557, line: 17, type: !2563, isLocal: true, isDefinition: true)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2535)
!2564 = !DIGlobalVariableExpression(var: !2565, expr: !DIExpression())
!2565 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2566, file: !2571, line: 61, type: !2601, isLocal: false, isDefinition: true, align: 64)
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !2568, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2568 = !{!2569, !2564}
!2569 = !DIGlobalVariableExpression(var: !2570, expr: !DIExpression())
!2570 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2566, file: !2571, line: 61, type: !2572, isLocal: false, isDefinition: true, align: 32)
!2571 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2573)
!2573 = !{!2574, !2580, !2599}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2572, file: !137, line: 5074, baseType: !2575, size: 96)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2576)
!2576 = !{!2577, !2578, !2579}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2575, file: !240, line: 57, baseType: !243, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2575, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2575, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2572, file: !137, line: 5075, baseType: !2581, size: 64, offset: 96)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2583)
!2583 = !{!2584}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2582, file: !141, line: 232, baseType: !2585, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2587)
!2587 = !{!2588, !2594}
!2588 = !DIDerivedType(tag: DW_TAG_member, scope: !2586, file: !146, line: 38, baseType: !2589, size: 32)
!2589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2586, file: !146, line: 38, size: 32, elements: !2590)
!2590 = !{!2591, !2593}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2589, file: !146, line: 39, baseType: !2592, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2589, file: !146, line: 40, baseType: !2592, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, scope: !2586, file: !146, line: 42, baseType: !2595, size: 32, offset: 32)
!2595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2586, file: !146, line: 42, size: 32, elements: !2596)
!2596 = !{!2597, !2598}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2595, file: !146, line: 43, baseType: !2592, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2595, file: !146, line: 44, baseType: !2592, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2572, file: !137, line: 5076, baseType: !2600, offset: 160)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 8192, elements: !2602)
!2602 = !{!2603}
!2603 = !DISubrange(count: 1024)
!2604 = !DIGlobalVariableExpression(var: !2605, expr: !DIExpression())
!2605 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2606, file: !2625, line: 55, type: !2626, isLocal: true, isDefinition: true, align: 32)
!2606 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2607, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2608, globals: !2624, splitDebugInlining: false, nameTableKind: None)
!2607 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2608 = !{!102, !104, !103, !2609}
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2611)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2612)
!2612 = !{!2613, !2619}
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !2611, file: !146, line: 38, baseType: !2614, size: 32)
!2614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2611, file: !146, line: 38, size: 32, elements: !2615)
!2615 = !{!2616, !2618}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2614, file: !146, line: 39, baseType: !2617, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2614, file: !146, line: 40, baseType: !2617, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, scope: !2611, file: !146, line: 42, baseType: !2620, size: 32, offset: 32)
!2620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2611, file: !146, line: 42, size: 32, elements: !2621)
!2621 = !{!2622, !2623}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2620, file: !146, line: 43, baseType: !2617, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2620, file: !146, line: 44, baseType: !2617, size: 32)
!2624 = !{!2604}
!2625 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2627)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2628)
!2628 = !{!2629, !2636}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2627, file: !420, line: 60, baseType: !2630, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!103, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2635)
!2635 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !420, line: 48, flags: DIFlagFwdDecl)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2627, file: !420, line: 65, baseType: !2633, size: 32, offset: 32)
!2637 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2638, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2638 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2643, retainedTypes: !2651, splitDebugInlining: false, nameTableKind: None)
!2642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2643 = !{!30, !2644}
!2644 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2645, line: 54, baseType: !32, size: 32, elements: !2646)
!2645 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2646 = !{!2647, !2648, !2649, !2650}
!2647 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2648 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2649 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2650 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2651 = !{!102, !132, !379, !24, !2652, !22, !2658, !103, !984, !2673}
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2645, line: 58, baseType: !2654)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2645, line: 58, size: 64, elements: !2655)
!2655 = !{!2656}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2654, file: !2645, line: 58, baseType: !2657, size: 64)
!2657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 64, elements: !1577)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 32)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2645, line: 68, size: 128, elements: !2660)
!2660 = !{!2661, !2664, !2665, !2666}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2659, file: !2645, line: 69, baseType: !2662, size: 64)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2663, size: 64, elements: !180)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2645, line: 61, baseType: !108)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2659, file: !2645, line: 70, baseType: !2663, size: 32, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2659, file: !2645, line: 71, baseType: !108, size: 32, offset: 96)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2659, file: !2645, line: 77, baseType: !2667, offset: 128)
!2667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2668, elements: !2671)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2645, line: 64, size: 32, elements: !2669)
!2669 = !{!2670}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2668, file: !2645, line: 65, baseType: !2663, size: 32)
!2671 = !{!2672}
!2672 = !DISubrange(count: 0)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!2674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2676, retainedTypes: !2696, splitDebugInlining: false, nameTableKind: None)
!2675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2676 = !{!2677, !2685}
!2677 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2678, line: 69, baseType: !32, size: 32, elements: !2679)
!2678 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2679 = !{!2680, !2681, !2682, !2683, !2684}
!2680 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2681 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2682 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2683 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2684 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2685 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2678, line: 56, baseType: !32, size: 32, elements: !2686)
!2686 = !{!2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695}
!2687 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2688 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2689 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2690 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2691 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2692 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2693 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2694 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2695 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2696 = !{!103, !2677, !2685, !2697, !196, !446, !2699, !2700, !186, !122, !337, !132, !102, !22, !32, !374, !2702, !2703, !376, !375, !107, !377, !2698, !2704, !2705, !2706, !2707}
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2678, line: 31, baseType: !2698)
!2698 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !133, line: 329, baseType: !32)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2678, line: 32, baseType: !2701)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !133, line: 145, baseType: !103)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2709, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2709 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2712, splitDebugInlining: false, nameTableKind: None)
!2711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2712 = !{!337, !186, !103, !32}
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2715, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2715 = !{!2716, !30}
!2716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2717, line: 27, baseType: !32, size: 32, elements: !2718)
!2717 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2718 = !{!2719, !2720, !2721, !2722, !2723}
!2719 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2720 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2721 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2722 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2723 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2726, retainedTypes: !2727, splitDebugInlining: false, nameTableKind: None)
!2725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2726 = !{!705, !2716, !30}
!2727 = !{!891, !2728, !102, !103, !331, !108, !185, !2745}
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2730)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2731)
!2731 = !{!2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2730, file: !624, line: 413, baseType: !1677, size: 256)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2730, file: !624, line: 414, baseType: !1679, size: 768, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2730, file: !624, line: 415, baseType: !1677, size: 256, offset: 1024)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2730, file: !624, line: 416, baseType: !1679, size: 768, offset: 1280)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2730, file: !624, line: 417, baseType: !1677, size: 256, offset: 2048)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2730, file: !624, line: 418, baseType: !1679, size: 768, offset: 2304)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2730, file: !624, line: 419, baseType: !1677, size: 256, offset: 3072)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2730, file: !624, line: 420, baseType: !1679, size: 768, offset: 3328)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2730, file: !624, line: 421, baseType: !1677, size: 256, offset: 4096)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2730, file: !624, line: 422, baseType: !1690, size: 1792, offset: 4352)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2730, file: !624, line: 423, baseType: !1694, size: 1920, offset: 6144)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2730, file: !624, line: 424, baseType: !1699, size: 20608, offset: 8064)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2730, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2747)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2747, file: !624, line: 447, baseType: !628, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2747, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2747, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2747, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2747, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2747, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2747, file: !624, line: 453, baseType: !1714, size: 96, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2747, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2747, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2747, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2747, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2747, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2747, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2747, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2747, file: !624, line: 461, baseType: !1723, size: 64, offset: 512)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2747, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2747, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2747, file: !624, line: 464, baseType: !1727, size: 128, offset: 640)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2747, file: !624, line: 465, baseType: !1729, size: 160, offset: 768)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2747, file: !624, line: 466, baseType: !1731, size: 160, offset: 928)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2747, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2772 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2773, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2774, splitDebugInlining: false, nameTableKind: None)
!2773 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2774 = !{!102, !103, !22, !2775}
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2777)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2777, file: !624, line: 447, baseType: !628, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2777, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2777, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2777, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2777, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2777, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2777, file: !624, line: 453, baseType: !1714, size: 96, offset: 192)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2777, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2777, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2777, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2777, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2777, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2777, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2777, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2777, file: !624, line: 461, baseType: !1723, size: 64, offset: 512)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2777, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2777, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2777, file: !624, line: 464, baseType: !1727, size: 128, offset: 640)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2777, file: !624, line: 465, baseType: !1729, size: 160, offset: 768)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2777, file: !624, line: 466, baseType: !1731, size: 160, offset: 928)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2777, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2802, splitDebugInlining: false, nameTableKind: None)
!2801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2802 = !{!2803, !102, !103}
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2805)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2806)
!2806 = !{!2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2805, file: !624, line: 447, baseType: !628, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2805, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2805, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2805, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2805, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2805, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2805, file: !624, line: 453, baseType: !1714, size: 96, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2805, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2805, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2805, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2805, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2805, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2805, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2805, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2805, file: !624, line: 461, baseType: !1723, size: 64, offset: 512)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2805, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2805, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2805, file: !624, line: 464, baseType: !1727, size: 128, offset: 640)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2805, file: !624, line: 465, baseType: !1729, size: 160, offset: 768)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2805, file: !624, line: 466, baseType: !1731, size: 160, offset: 928)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2805, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2830, splitDebugInlining: false, nameTableKind: None)
!2829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2830 = !{!2831, !108, !102, !103}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2833, line: 98, size: 256, elements: !2834)
!2833 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2834 = !{!2835, !2840, !2845, !2850, !2855, !2860, !2865, !2870}
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 99, baseType: !2836, size: 32)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 99, size: 32, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2836, file: !2833, line: 99, baseType: !108, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2836, file: !2833, line: 99, baseType: !108, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 100, baseType: !2841, size: 32, offset: 32)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 100, size: 32, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2841, file: !2833, line: 100, baseType: !108, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2841, file: !2833, line: 100, baseType: !108, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 101, baseType: !2846, size: 32, offset: 64)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 101, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2846, file: !2833, line: 101, baseType: !108, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2846, file: !2833, line: 101, baseType: !108, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 102, baseType: !2851, size: 32, offset: 96)
!2851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 102, size: 32, elements: !2852)
!2852 = !{!2853, !2854}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2851, file: !2833, line: 102, baseType: !108, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2851, file: !2833, line: 102, baseType: !108, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 103, baseType: !2856, size: 32, offset: 128)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 103, size: 32, elements: !2857)
!2857 = !{!2858, !2859}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2856, file: !2833, line: 103, baseType: !108, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2856, file: !2833, line: 103, baseType: !108, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 104, baseType: !2861, size: 32, offset: 160)
!2861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 104, size: 32, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2861, file: !2833, line: 104, baseType: !108, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2861, file: !2833, line: 104, baseType: !108, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2833, line: 105, baseType: !2866, size: 32, offset: 192)
!2866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2833, line: 105, size: 32, elements: !2867)
!2867 = !{!2868, !2869}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2866, file: !2833, line: 105, baseType: !108, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2866, file: !2833, line: 105, baseType: !108, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2832, file: !2833, line: 106, baseType: !108, size: 32, offset: 224)
!2871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2872, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2715, retainedTypes: !2873, splitDebugInlining: false, nameTableKind: None)
!2872 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2873 = !{!2874, !102, !103, !2899, !2673, !108}
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2876)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2877)
!2877 = !{!2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2876, file: !624, line: 447, baseType: !628, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2876, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2876, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2876, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2876, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2876, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2876, file: !624, line: 453, baseType: !1714, size: 96, offset: 192)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2876, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2876, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2876, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2876, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2876, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2876, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2876, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2876, file: !624, line: 461, baseType: !1723, size: 64, offset: 512)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2876, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2876, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2876, file: !624, line: 464, baseType: !1727, size: 128, offset: 640)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2876, file: !624, line: 465, baseType: !1729, size: 160, offset: 768)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2876, file: !624, line: 466, baseType: !1731, size: 160, offset: 928)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2876, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2833, line: 141, baseType: !2901)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2833, line: 97, size: 256, elements: !2902)
!2902 = !{!2903}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2901, file: !2833, line: 107, baseType: !2904, size: 256)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2833, line: 98, size: 256, elements: !2905)
!2905 = !{!2906, !2911, !2916, !2921, !2926, !2931, !2936, !2941}
!2906 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 99, baseType: !2907, size: 32)
!2907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 99, size: 32, elements: !2908)
!2908 = !{!2909, !2910}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2907, file: !2833, line: 99, baseType: !108, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2907, file: !2833, line: 99, baseType: !108, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 100, baseType: !2912, size: 32, offset: 32)
!2912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 100, size: 32, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2912, file: !2833, line: 100, baseType: !108, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2912, file: !2833, line: 100, baseType: !108, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 101, baseType: !2917, size: 32, offset: 64)
!2917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 101, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2917, file: !2833, line: 101, baseType: !108, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2917, file: !2833, line: 101, baseType: !108, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 102, baseType: !2922, size: 32, offset: 96)
!2922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 102, size: 32, elements: !2923)
!2923 = !{!2924, !2925}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2922, file: !2833, line: 102, baseType: !108, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2922, file: !2833, line: 102, baseType: !108, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 103, baseType: !2927, size: 32, offset: 128)
!2927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 103, size: 32, elements: !2928)
!2928 = !{!2929, !2930}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2927, file: !2833, line: 103, baseType: !108, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2927, file: !2833, line: 103, baseType: !108, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 104, baseType: !2932, size: 32, offset: 160)
!2932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 104, size: 32, elements: !2933)
!2933 = !{!2934, !2935}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2932, file: !2833, line: 104, baseType: !108, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2932, file: !2833, line: 104, baseType: !108, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, scope: !2904, file: !2833, line: 105, baseType: !2937, size: 32, offset: 192)
!2937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2833, line: 105, size: 32, elements: !2938)
!2938 = !{!2939, !2940}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2937, file: !2833, line: 105, baseType: !108, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2937, file: !2833, line: 105, baseType: !108, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2904, file: !2833, line: 106, baseType: !108, size: 32, offset: 224)
!2942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1662, retainedTypes: !2944, splitDebugInlining: false, nameTableKind: None)
!2943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2944 = !{!891, !331, !185, !108, !2945, !2962}
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2947, file: !624, line: 413, baseType: !1677, size: 256)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2947, file: !624, line: 414, baseType: !1679, size: 768, offset: 256)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2947, file: !624, line: 415, baseType: !1677, size: 256, offset: 1024)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2947, file: !624, line: 416, baseType: !1679, size: 768, offset: 1280)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2947, file: !624, line: 417, baseType: !1677, size: 256, offset: 2048)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2947, file: !624, line: 418, baseType: !1679, size: 768, offset: 2304)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2947, file: !624, line: 419, baseType: !1677, size: 256, offset: 3072)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2947, file: !624, line: 420, baseType: !1679, size: 768, offset: 3328)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2947, file: !624, line: 421, baseType: !1677, size: 256, offset: 4096)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2947, file: !624, line: 422, baseType: !1690, size: 1792, offset: 4352)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2947, file: !624, line: 423, baseType: !1694, size: 1920, offset: 6144)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2947, file: !624, line: 424, baseType: !1699, size: 20608, offset: 8064)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2947, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2964)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2965)
!2965 = !{!2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2964, file: !624, line: 447, baseType: !628, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2964, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2964, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2964, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2964, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2964, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2964, file: !624, line: 453, baseType: !1714, size: 96, offset: 192)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2964, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2964, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2964, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2964, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2964, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2964, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2964, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2964, file: !624, line: 461, baseType: !1723, size: 64, offset: 512)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2964, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2964, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2964, file: !624, line: 464, baseType: !1727, size: 128, offset: 640)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2964, file: !624, line: 465, baseType: !1729, size: 160, offset: 768)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2964, file: !624, line: 466, baseType: !1731, size: 160, offset: 928)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2964, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2989, splitDebugInlining: false, nameTableKind: None)
!2988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!2989 = !{!2990, !102, !103}
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2992, file: !624, line: 447, baseType: !628, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2992, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2992, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2992, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2992, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2992, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2992, file: !624, line: 453, baseType: !1714, size: 96, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2992, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2992, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2992, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2992, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2992, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2992, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2992, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2992, file: !624, line: 461, baseType: !1723, size: 64, offset: 512)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2992, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2992, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2992, file: !624, line: 464, baseType: !1727, size: 128, offset: 640)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2992, file: !624, line: 465, baseType: !1729, size: 160, offset: 768)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2992, file: !624, line: 466, baseType: !1731, size: 160, offset: 928)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2992, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!3015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3016, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3017, splitDebugInlining: false, nameTableKind: None)
!3016 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3017 = !{!278, !277, !132, !1089, !3018, !186, !102}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!3020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3022, splitDebugInlining: false, nameTableKind: None)
!3021 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3022 = !{!3023}
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 32)
!3024 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 510, baseType: !3025)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 477, size: 1216, elements: !3026)
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3025, file: !405, line: 479, baseType: !409, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3025, file: !405, line: 480, baseType: !409, size: 32, offset: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3025, file: !405, line: 481, baseType: !409, size: 32, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3025, file: !405, line: 482, baseType: !409, size: 32, offset: 96)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3025, file: !405, line: 483, baseType: !409, size: 32, offset: 128)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3025, file: !405, line: 484, baseType: !409, size: 32, offset: 160)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3025, file: !405, line: 485, baseType: !953, size: 64, offset: 192)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3025, file: !405, line: 486, baseType: !409, size: 32, offset: 256)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3025, file: !405, line: 487, baseType: !409, size: 32, offset: 288)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3025, file: !405, line: 488, baseType: !953, size: 64, offset: 320)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3025, file: !405, line: 489, baseType: !409, size: 32, offset: 384)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3025, file: !405, line: 490, baseType: !409, size: 32, offset: 416)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3025, file: !405, line: 491, baseType: !953, size: 64, offset: 448)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3025, file: !405, line: 492, baseType: !409, size: 32, offset: 512)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3025, file: !405, line: 493, baseType: !409, size: 32, offset: 544)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3025, file: !405, line: 494, baseType: !953, size: 64, offset: 576)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3025, file: !405, line: 495, baseType: !409, size: 32, offset: 640)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3025, file: !405, line: 496, baseType: !409, size: 32, offset: 672)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3025, file: !405, line: 497, baseType: !953, size: 64, offset: 704)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3025, file: !405, line: 498, baseType: !409, size: 32, offset: 768)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3025, file: !405, line: 499, baseType: !409, size: 32, offset: 800)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3025, file: !405, line: 500, baseType: !953, size: 64, offset: 832)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3025, file: !405, line: 501, baseType: !409, size: 32, offset: 896)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3025, file: !405, line: 502, baseType: !409, size: 32, offset: 928)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3025, file: !405, line: 503, baseType: !953, size: 64, offset: 960)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3025, file: !405, line: 504, baseType: !409, size: 32, offset: 1024)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3025, file: !405, line: 505, baseType: !409, size: 32, offset: 1056)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3025, file: !405, line: 506, baseType: !108, size: 32, offset: 1088)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3025, file: !405, line: 507, baseType: !409, size: 32, offset: 1120)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3025, file: !405, line: 508, baseType: !409, size: 32, offset: 1152)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3025, file: !405, line: 509, baseType: !409, size: 32, offset: 1184)
!3058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3060 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3061, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3062, retainedTypes: !3078, splitDebugInlining: false, nameTableKind: None)
!3061 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3062 = !{!3063, !3070, !3074}
!3063 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3064, line: 38, baseType: !32, size: 32, elements: !3065)
!3064 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3065 = !{!3066, !3067, !3068, !3069}
!3066 = !DIEnumerator(name: "HAL_OK", value: 0)
!3067 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3068 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3069 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3070 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !930, line: 184, baseType: !32, size: 32, elements: !3071)
!3071 = !{!3072, !3073}
!3072 = !DIEnumerator(name: "RESET", value: 0)
!3073 = !DIEnumerator(name: "SET", value: 1)
!3074 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !930, line: 190, baseType: !32, size: 32, elements: !3075)
!3075 = !{!3076, !3077}
!3076 = !DIEnumerator(name: "DISABLE", value: 0)
!3077 = !DIEnumerator(name: "ENABLE", value: 1)
!3078 = !{!102, !3079, !185, !108, !1571, !3114, !3120, !3131, !121, !3132, !109}
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 510, baseType: !3081)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 477, size: 1216, elements: !3082)
!3082 = !{!3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3081, file: !405, line: 479, baseType: !409, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3081, file: !405, line: 480, baseType: !409, size: 32, offset: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3081, file: !405, line: 481, baseType: !409, size: 32, offset: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3081, file: !405, line: 482, baseType: !409, size: 32, offset: 96)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3081, file: !405, line: 483, baseType: !409, size: 32, offset: 128)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3081, file: !405, line: 484, baseType: !409, size: 32, offset: 160)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3081, file: !405, line: 485, baseType: !953, size: 64, offset: 192)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3081, file: !405, line: 486, baseType: !409, size: 32, offset: 256)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3081, file: !405, line: 487, baseType: !409, size: 32, offset: 288)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3081, file: !405, line: 488, baseType: !953, size: 64, offset: 320)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3081, file: !405, line: 489, baseType: !409, size: 32, offset: 384)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3081, file: !405, line: 490, baseType: !409, size: 32, offset: 416)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3081, file: !405, line: 491, baseType: !953, size: 64, offset: 448)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3081, file: !405, line: 492, baseType: !409, size: 32, offset: 512)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3081, file: !405, line: 493, baseType: !409, size: 32, offset: 544)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3081, file: !405, line: 494, baseType: !953, size: 64, offset: 576)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3081, file: !405, line: 495, baseType: !409, size: 32, offset: 640)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3081, file: !405, line: 496, baseType: !409, size: 32, offset: 672)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3081, file: !405, line: 497, baseType: !953, size: 64, offset: 704)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3081, file: !405, line: 498, baseType: !409, size: 32, offset: 768)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3081, file: !405, line: 499, baseType: !409, size: 32, offset: 800)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3081, file: !405, line: 500, baseType: !953, size: 64, offset: 832)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3081, file: !405, line: 501, baseType: !409, size: 32, offset: 896)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3081, file: !405, line: 502, baseType: !409, size: 32, offset: 928)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3081, file: !405, line: 503, baseType: !953, size: 64, offset: 960)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3081, file: !405, line: 504, baseType: !409, size: 32, offset: 1024)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3081, file: !405, line: 505, baseType: !409, size: 32, offset: 1056)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3081, file: !405, line: 506, baseType: !108, size: 32, offset: 1088)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3081, file: !405, line: 507, baseType: !409, size: 32, offset: 1120)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3081, file: !405, line: 508, baseType: !409, size: 32, offset: 1152)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3081, file: !405, line: 509, baseType: !409, size: 32, offset: 1184)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 471, baseType: !3116)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 467, size: 64, elements: !3117)
!3117 = !{!3118, !3119}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3116, file: !405, line: 469, baseType: !409, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3116, file: !405, line: 470, baseType: !409, size: 32, offset: 32)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 379, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 224, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3122, file: !405, line: 372, baseType: !409, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3122, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3122, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3122, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3122, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3122, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3122, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 396, baseType: !3134)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 385, size: 320, elements: !3135)
!3135 = !{!3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3134, file: !405, line: 387, baseType: !409, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3134, file: !405, line: 388, baseType: !409, size: 32, offset: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3134, file: !405, line: 389, baseType: !409, size: 32, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3134, file: !405, line: 390, baseType: !409, size: 32, offset: 96)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3134, file: !405, line: 391, baseType: !409, size: 32, offset: 128)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3134, file: !405, line: 392, baseType: !409, size: 32, offset: 160)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3134, file: !405, line: 393, baseType: !409, size: 32, offset: 192)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3134, file: !405, line: 394, baseType: !409, size: 32, offset: 224)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3134, file: !405, line: 395, baseType: !1243, size: 64, offset: 256)
!3145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3146, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3147, retainedTypes: !3148, splitDebugInlining: false, nameTableKind: None)
!3146 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3147 = !{!929}
!3148 = !{!3149, !108, !3157, !3163, !3174}
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !3151)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !3152)
!3152 = !{!3153, !3154, !3155, !3156}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3151, file: !624, line: 766, baseType: !409, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3151, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3151, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3151, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 471, baseType: !3159)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 467, size: 64, elements: !3160)
!3160 = !{!3161, !3162}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3159, file: !405, line: 469, baseType: !409, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3159, file: !405, line: 470, baseType: !409, size: 32, offset: 32)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 379, baseType: !3165)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 224, elements: !3166)
!3166 = !{!3167, !3168, !3169, !3170, !3171, !3172, !3173}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3165, file: !405, line: 372, baseType: !409, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3165, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3165, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3165, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3165, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3165, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3165, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 510, baseType: !3176)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 477, size: 1216, elements: !3177)
!3177 = !{!3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3176, file: !405, line: 479, baseType: !409, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3176, file: !405, line: 480, baseType: !409, size: 32, offset: 32)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3176, file: !405, line: 481, baseType: !409, size: 32, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3176, file: !405, line: 482, baseType: !409, size: 32, offset: 96)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3176, file: !405, line: 483, baseType: !409, size: 32, offset: 128)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3176, file: !405, line: 484, baseType: !409, size: 32, offset: 160)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3176, file: !405, line: 485, baseType: !953, size: 64, offset: 192)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3176, file: !405, line: 486, baseType: !409, size: 32, offset: 256)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3176, file: !405, line: 487, baseType: !409, size: 32, offset: 288)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3176, file: !405, line: 488, baseType: !953, size: 64, offset: 320)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3176, file: !405, line: 489, baseType: !409, size: 32, offset: 384)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3176, file: !405, line: 490, baseType: !409, size: 32, offset: 416)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3176, file: !405, line: 491, baseType: !953, size: 64, offset: 448)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3176, file: !405, line: 492, baseType: !409, size: 32, offset: 512)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3176, file: !405, line: 493, baseType: !409, size: 32, offset: 544)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3176, file: !405, line: 494, baseType: !953, size: 64, offset: 576)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3176, file: !405, line: 495, baseType: !409, size: 32, offset: 640)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3176, file: !405, line: 496, baseType: !409, size: 32, offset: 672)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3176, file: !405, line: 497, baseType: !953, size: 64, offset: 704)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3176, file: !405, line: 498, baseType: !409, size: 32, offset: 768)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3176, file: !405, line: 499, baseType: !409, size: 32, offset: 800)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3176, file: !405, line: 500, baseType: !953, size: 64, offset: 832)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3176, file: !405, line: 501, baseType: !409, size: 32, offset: 896)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3176, file: !405, line: 502, baseType: !409, size: 32, offset: 928)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3176, file: !405, line: 503, baseType: !953, size: 64, offset: 960)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3176, file: !405, line: 504, baseType: !409, size: 32, offset: 1024)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3176, file: !405, line: 505, baseType: !409, size: 32, offset: 1056)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3176, file: !405, line: 506, baseType: !108, size: 32, offset: 1088)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3176, file: !405, line: 507, baseType: !409, size: 32, offset: 1120)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3176, file: !405, line: 508, baseType: !409, size: 32, offset: 1152)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3176, file: !405, line: 509, baseType: !409, size: 32, offset: 1184)
!3209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3211, splitDebugInlining: false, nameTableKind: None)
!3210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3211 = !{!102, !132}
!3212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3213, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3214, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3213 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3214 = !{!3215, !3222, !30}
!3215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3216, line: 14, baseType: !32, size: 32, elements: !3217)
!3216 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3217 = !{!3218, !3219, !3220, !3221}
!3218 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3219 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3220 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3221 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3216, line: 42, baseType: !32, size: 32, elements: !3223)
!3223 = !{!3224, !3225, !3226, !3227, !3228, !3229}
!3224 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3225 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3226 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3227 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3228 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3229 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3231, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3231 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3232 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3233, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3234, splitDebugInlining: false, nameTableKind: None)
!3233 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3234 = !{!102, !103, !3235, !3250}
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 32)
!3236 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !3237)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !3238)
!3238 = !{!3239, !3245}
!3239 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !146, line: 38, baseType: !3240, size: 32)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !146, line: 38, size: 32, elements: !3241)
!3241 = !{!3242, !3244}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3240, file: !146, line: 39, baseType: !3243, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3240, file: !146, line: 40, baseType: !3243, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !146, line: 42, baseType: !3246, size: 32, offset: 32)
!3246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !146, line: 42, size: 32, elements: !3247)
!3247 = !{!3248, !3249}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3246, file: !146, line: 43, baseType: !3243, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3246, file: !146, line: 44, baseType: !3243, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 32)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !3252)
!3252 = !{!3253, !3297, !3309, !3310, !3311, !3312, !3318, !3331}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3251, file: !163, line: 247, baseType: !3254, size: 384)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !3255)
!3255 = !{!3256, !3266, !3273, !3274, !3275, !3284, !3285, !3286}
!3256 = !DIDerivedType(tag: DW_TAG_member, scope: !3254, file: !163, line: 60, baseType: !3257, size: 64)
!3257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3254, file: !163, line: 60, size: 64, elements: !3258)
!3258 = !{!3259, !3260}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3257, file: !163, line: 61, baseType: !3236, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3257, file: !163, line: 62, baseType: !3261, size: 64)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !3262)
!3262 = !{!3263}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3261, file: !175, line: 50, baseType: !3264, size: 64)
!3264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3265, size: 64, elements: !180)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3254, file: !163, line: 68, baseType: !3267, size: 32, offset: 64)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 32)
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !3269)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !3270)
!3270 = !{!3271}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3269, file: !141, line: 232, baseType: !3272, size: 64)
!3272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !3237)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3254, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3254, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!3275 = !DIDerivedType(tag: DW_TAG_member, scope: !3254, file: !163, line: 90, baseType: !3276, size: 16, offset: 112)
!3276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3254, file: !163, line: 90, size: 16, elements: !3277)
!3277 = !{!3278, !3283}
!3278 = !DIDerivedType(tag: DW_TAG_member, scope: !3276, file: !163, line: 91, baseType: !3279, size: 16)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3276, file: !163, line: 91, size: 16, elements: !3280)
!3280 = !{!3281, !3282}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3279, file: !163, line: 96, baseType: !195, size: 8)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3279, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3276, file: !163, line: 100, baseType: !121, size: 16)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3254, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3254, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3254, file: !163, line: 131, baseType: !3287, size: 192, offset: 192)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !3288)
!3288 = !{!3289, !3290, !3296}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3287, file: !141, line: 245, baseType: !3236, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3287, file: !141, line: 246, baseType: !3291, size: 32, offset: 64)
!3291 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !3292)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 32)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{null, !3295}
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3287, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3251, file: !163, line: 250, baseType: !3298, size: 288, offset: 384)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3298, file: !214, line: 26, baseType: !108, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3298, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3298, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3298, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3298, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3298, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3298, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3298, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3298, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3251, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3251, file: !163, line: 256, baseType: !3268, size: 64, offset: 704)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3251, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3251, file: !163, line: 300, baseType: !3313, size: 96, offset: 800)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !3314)
!3314 = !{!3315, !3316, !3317}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3313, file: !163, line: 153, baseType: !22, size: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3313, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3313, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3251, file: !163, line: 325, baseType: !3319, size: 32, offset: 896)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 32)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !3321)
!3321 = !{!3322, !3328, !3329}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3320, file: !137, line: 5074, baseType: !3323, size: 96)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !3324)
!3324 = !{!3325, !3326, !3327}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3323, file: !240, line: 57, baseType: !243, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3323, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3323, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3320, file: !137, line: 5075, baseType: !3268, size: 64, offset: 96)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3320, file: !137, line: 5076, baseType: !3330, offset: 160)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3251, file: !163, line: 343, baseType: !3332, size: 64, offset: 928)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !3333)
!3333 = !{!3334, !3335}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3332, file: !214, line: 63, baseType: !108, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3332, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!3336 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3337, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3338, splitDebugInlining: false, nameTableKind: None)
!3337 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3338 = !{!22, !102, !103}
!3339 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3340, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3340 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3343 = !{!"Ubuntu clang version 14.0.6"}
!3344 = !{i32 7, !"Dwarf Version", i32 4}
!3345 = !{i32 2, !"Debug Info Version", i32 3}
!3346 = !{i32 1, !"wchar_size", i32 4}
!3347 = !{i32 1, !"min_enum_size", i32 4}
!3348 = !{i32 1, !"branch-target-enforcement", i32 0}
!3349 = !{i32 1, !"sign-return-address", i32 0}
!3350 = !{i32 1, !"sign-return-address-all", i32 0}
!3351 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3352 = !{i32 7, !"frame-pointer", i32 2}
!3353 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3354, file: !3354, line: 26, type: !334, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !251)
!3354 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3355 = !DILocation(line: 28, column: 1, scope: !3353)
!3356 = !{i64 2155027079, i64 2155027099, i64 2155027162}
!3357 = !DILocation(line: 29, column: 1, scope: !3353)
!3358 = !{i64 2155027494, i64 2155027514, i64 2155027577}
!3359 = !DILocation(line: 30, column: 1, scope: !3353)
!3360 = !{i64 2155027913, i64 2155027933, i64 2155027996}
!3361 = !DILocation(line: 31, column: 1, scope: !3353)
!3362 = !{i64 2155028332, i64 2155028352, i64 2155028415}
!3363 = !DILocation(line: 33, column: 1, scope: !3353)
!3364 = !{i64 2155028624, i64 2155028644, i64 2155028707}
!3365 = !DILocation(line: 35, column: 1, scope: !3353)
!3366 = !{i64 2155028949, i64 2155028969, i64 2155029032}
!3367 = !DILocation(line: 50, column: 1, scope: !3353)
!3368 = !{i64 2155029376, i64 2155029396, i64 2155029459}
!3369 = !DILocation(line: 54, column: 1, scope: !3353)
!3370 = !{i64 2155029815, i64 2155029835, i64 2155029898}
!3371 = !DILocation(line: 61, column: 1, scope: !3353)
!3372 = !{i64 2155030132, i64 2155030152, i64 2155030215}
!3373 = !DILocation(line: 63, column: 1, scope: !3353)
!3374 = !{i64 2155030512, i64 2155030532, i64 2155030595}
!3375 = !DILocation(line: 64, column: 1, scope: !3353)
!3376 = !{i64 2155031034, i64 2155031054, i64 2155031117}
!3377 = !DILocation(line: 65, column: 1, scope: !3353)
!3378 = !{i64 2155031532, i64 2155031552, i64 2155031615}
!3379 = !DILocation(line: 66, column: 1, scope: !3353)
!3380 = !{i64 2155032014, i64 2155032034, i64 2155032097}
!3381 = !DILocation(line: 67, column: 1, scope: !3353)
!3382 = !{i64 2155032521, i64 2155032541, i64 2155032604}
!3383 = !DILocation(line: 68, column: 1, scope: !3353)
!3384 = !{i64 2155033009, i64 2155033029, i64 2155033092}
!3385 = !DILocation(line: 70, column: 1, scope: !3353)
!3386 = !{i64 2155033477, i64 2155033497, i64 2155033560}
!3387 = !DILocation(line: 71, column: 1, scope: !3353)
!3388 = !{i64 2155037980, i64 2155038000, i64 2155038063}
!3389 = !DILocation(line: 72, column: 1, scope: !3353)
!3390 = !{i64 2155038438, i64 2155038458, i64 2155038521}
!3391 = !DILocation(line: 79, column: 1, scope: !3353)
!3392 = !{i64 2155038892, i64 2155038912, i64 2155038975}
!3393 = !DILocation(line: 80, column: 1, scope: !3353)
!3394 = !{i64 2155039403, i64 2155039423, i64 2155039486}
!3395 = !DILocation(line: 82, column: 1, scope: !3353)
!3396 = !{i64 2155039894, i64 2155039914, i64 2155039977}
!3397 = !DILocation(line: 97, column: 1, scope: !3353)
!3398 = !{i64 2155040231, i64 2155040251, i64 2155040314}
!3399 = !DILocation(line: 99, column: 1, scope: !3353)
!3400 = !{i64 2155040449, i64 2155040469, i64 2155040532}
!3401 = !DILocation(line: 102, column: 1, scope: !3353)
!3402 = !{i64 2155040706, i64 2155040726, i64 2155040789}
!3403 = !DILocation(line: 105, column: 1, scope: !3353)
!3404 = !{i64 2155040946, i64 2155040966, i64 2155041029}
!3405 = !DILocation(line: 115, column: 1, scope: !3353)
!3406 = !{i64 2155041285, i64 2155041305, i64 2155041368}
!3407 = !DILocation(line: 118, column: 1, scope: !3353)
!3408 = !{i64 2155041629, i64 2155041649, i64 2155041712}
!3409 = !DILocation(line: 32, column: 1, scope: !3410)
!3410 = !DILexicalBlockFile(scope: !3353, file: !3411, discriminator: 0)
!3411 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3412 = !{i64 2155041985, i64 2155042005, i64 2155042068}
!3413 = !DILocation(line: 33, column: 1, scope: !3410)
!3414 = !{i64 2155042497, i64 2155042517, i64 2155042580}
!3415 = !DILocation(line: 53, column: 1, scope: !3410)
!3416 = !{i64 2155043005, i64 2155043025, i64 2155043088}
!3417 = !DILocation(line: 54, column: 1, scope: !3410)
!3418 = !{i64 2155043423, i64 2155043443, i64 2155043506}
!3419 = !DILocation(line: 55, column: 1, scope: !3410)
!3420 = !{i64 2155043841, i64 2155043861, i64 2155043924}
!3421 = !DILocation(line: 56, column: 1, scope: !3410)
!3422 = !{i64 2155044259, i64 2155044279, i64 2155044342}
!3423 = !DILocation(line: 57, column: 1, scope: !3410)
!3424 = !{i64 2155044677, i64 2155044697, i64 2155044760}
!3425 = !DILocation(line: 58, column: 1, scope: !3410)
!3426 = !{i64 2155045095, i64 2155045115, i64 2155045178}
!3427 = !DILocation(line: 59, column: 1, scope: !3410)
!3428 = !{i64 2155045513, i64 2155045533, i64 2155045596}
!3429 = !DILocation(line: 60, column: 1, scope: !3410)
!3430 = !{i64 2155045937, i64 2155045957, i64 2155046020}
!3431 = !DILocation(line: 61, column: 1, scope: !3410)
!3432 = !{i64 2155046254, i64 2155046274, i64 2155046337}
!3433 = !DILocation(line: 70, column: 1, scope: !3410)
!3434 = !{i64 2155046483, i64 2155046503, i64 2155046566}
!3435 = !DILocation(line: 72, column: 1, scope: !3410)
!3436 = !{i64 2155046815, i64 2155046835, i64 2155046898}
!3437 = !DILocation(line: 73, column: 1, scope: !3410)
!3438 = !{i64 2155047265, i64 2155047285, i64 2155047348}
!3439 = !DILocation(line: 74, column: 1, scope: !3410)
!3440 = !{i64 2155051776, i64 2155051796, i64 2155051859}
!3441 = !DILocation(line: 75, column: 1, scope: !3410)
!3442 = !{i64 2155052226, i64 2155052246, i64 2155052309}
!3443 = !DILocation(line: 76, column: 1, scope: !3410)
!3444 = !{i64 2155052676, i64 2155052696, i64 2155052759}
!3445 = !DILocation(line: 77, column: 1, scope: !3410)
!3446 = !{i64 2155053126, i64 2155053146, i64 2155053209}
!3447 = !DILocation(line: 78, column: 1, scope: !3410)
!3448 = !{i64 2155053576, i64 2155053596, i64 2155053659}
!3449 = !DILocation(line: 79, column: 1, scope: !3410)
!3450 = !{i64 2155054026, i64 2155054046, i64 2155054109}
!3451 = !DILocation(line: 80, column: 1, scope: !3410)
!3452 = !{i64 2155054479, i64 2155054499, i64 2155054562}
!3453 = !DILocation(line: 84, column: 1, scope: !3410)
!3454 = !{i64 2155054811, i64 2155054831, i64 2155054894}
!3455 = !DILocation(line: 91, column: 1, scope: !3410)
!3456 = !{i64 2155055208, i64 2155055228, i64 2155055291}
!3457 = !DILocation(line: 93, column: 1, scope: !3410)
!3458 = !{i64 2155055575, i64 2155055595, i64 2155055658}
!3459 = !DILocation(line: 106, column: 1, scope: !3410)
!3460 = !{i64 2155055845, i64 2155055865, i64 2155055928}
!3461 = !DILocation(line: 11, column: 1, scope: !3462)
!3462 = !DILexicalBlockFile(scope: !3353, file: !3463, discriminator: 0)
!3463 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3464 = distinct !DISubprogram(name: "s_cb", scope: !114, file: !114, line: 152, type: !287, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3465)
!3465 = !{!3466, !3467, !3474}
!3466 = !DILocalVariable(name: "chan", arg: 1, scope: !3464, file: !114, line: 152, type: !289)
!3467 = !DILocalVariable(name: "msg_received", scope: !3464, file: !114, line: 154, type: !3468)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bm_msg", file: !353, line: 15, size: 2048, elements: !3469)
!3469 = !{!3470}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3468, file: !353, line: 16, baseType: !3471, size: 2048)
!3471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2048, elements: !3472)
!3472 = !{!3473}
!3473 = !DISubrange(count: 256)
!3474 = !DILocalVariable(name: "actual_message_data", scope: !3464, file: !114, line: 155, type: !3475)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!3477 = !DILocation(line: 0, scope: !3464)
!3478 = !DILocation(line: 154, column: 2, scope: !3464)
!3479 = !DILocation(line: 154, column: 16, scope: !3464)
!3480 = !DILocation(line: 155, column: 56, scope: !3464)
!3481 = !DILocation(line: 157, column: 45, scope: !3464)
!3482 = !DILocation(line: 157, column: 2, scope: !3464)
!3483 = !DILocation(line: 159, column: 8, scope: !3464)
!3484 = !DILocation(line: 160, column: 1, scope: !3464)
!3485 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3486, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3488)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!13, !289}
!3488 = !{!3489}
!3489 = !DILocalVariable(name: "chan", arg: 1, scope: !3485, file: !117, line: 416, type: !289)
!3490 = !DILocation(line: 0, scope: !3485)
!3491 = !DILocation(line: 420, column: 15, scope: !3485)
!3492 = !DILocation(line: 420, column: 2, scope: !3485)
!3493 = distinct !DISubprogram(name: "producer_thread", scope: !114, file: !114, line: 164, type: !334, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3494)
!3494 = !{!3495, !3496, !3498, !3500, !3501, !3503, !3504, !3505}
!3495 = !DILocalVariable(name: "msg", scope: !3493, file: !114, line: 169, type: !3468)
!3496 = !DILocalVariable(name: "actual_message_data", scope: !3493, file: !114, line: 170, type: !3497)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3498 = !DILocalVariable(name: "i", scope: !3499, file: !114, line: 172, type: !109)
!3499 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 172, column: 2)
!3500 = !DILocalVariable(name: "start", scope: !3493, file: !114, line: 186, type: !108)
!3501 = !DILocalVariable(name: "internal_count", scope: !3502, file: !114, line: 188, type: !109)
!3502 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 188, column: 2)
!3503 = !DILocalVariable(name: "duration", scope: !3493, file: !114, line: 200, type: !108)
!3504 = !DILocalVariable(name: "i", scope: !3493, file: !114, line: 206, type: !109)
!3505 = !DILocalVariable(name: "f", scope: !3493, file: !114, line: 207, type: !109)
!3506 = !DILocation(line: 166, column: 2, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !114, line: 166, column: 2)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !114, line: 166, column: 2)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !114, line: 166, column: 2)
!3510 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 166, column: 2)
!3511 = !DILocation(line: 169, column: 2, scope: !3493)
!3512 = !DILocation(line: 169, column: 16, scope: !3493)
!3513 = !DILocation(line: 0, scope: !3499)
!3514 = !DILocation(line: 172, column: 2, scope: !3499)
!3515 = !DILocation(line: 176, column: 2, scope: !3493)
!3516 = !DILocation(line: 0, scope: !3493)
!3517 = !DILocation(line: 179, column: 35, scope: !3493)
!3518 = !DILocation(line: 179, column: 33, scope: !3493)
!3519 = !DILocation(line: 181, column: 28, scope: !3493)
!3520 = !DILocation(line: 184, column: 2, scope: !3493)
!3521 = !DILocation(line: 186, column: 19, scope: !3493)
!3522 = !DILocation(line: 0, scope: !3502)
!3523 = !DILocation(line: 188, column: 2, scope: !3502)
!3524 = !DILocation(line: 173, column: 18, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !114, line: 172, column: 62)
!3526 = distinct !DILexicalBlock(scope: !3499, file: !114, line: 172, column: 2)
!3527 = !DILocation(line: 173, column: 3, scope: !3525)
!3528 = !DILocation(line: 173, column: 16, scope: !3525)
!3529 = !DILocation(line: 172, column: 57, scope: !3526)
!3530 = !DILocation(line: 172, column: 52, scope: !3526)
!3531 = distinct !{!3531, !3514, !3532}
!3532 = !DILocation(line: 174, column: 2, scope: !3499)
!3533 = !DILocation(line: 200, column: 23, scope: !3493)
!3534 = !DILocation(line: 200, column: 41, scope: !3493)
!3535 = !DILocation(line: 202, column: 15, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 202, column: 6)
!3537 = !DILocation(line: 202, column: 6, scope: !3493)
!3538 = !DILocation(line: 190, column: 3, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !114, line: 189, column: 49)
!3540 = distinct !DILexicalBlock(scope: !3502, file: !114, line: 188, column: 2)
!3541 = !DILocation(line: 194, column: 31, scope: !3539)
!3542 = !DILocation(line: 194, column: 3, scope: !3539)
!3543 = !DILocation(line: 196, column: 3, scope: !3539)
!3544 = !DILocation(line: 198, column: 33, scope: !3539)
!3545 = !DILocation(line: 198, column: 3, scope: !3539)
!3546 = !DILocation(line: 189, column: 22, scope: !3540)
!3547 = !DILocation(line: 188, column: 85, scope: !3540)
!3548 = distinct !{!3548, !3523, !3549}
!3549 = !DILocation(line: 199, column: 2, scope: !3502)
!3550 = !DILocation(line: 203, column: 3, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !114, line: 203, column: 3)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !114, line: 203, column: 3)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !114, line: 203, column: 3)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !114, line: 203, column: 3)
!3555 = distinct !DILexicalBlock(scope: !3536, file: !114, line: 202, column: 21)
!3556 = !DILocation(line: 204, column: 3, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3555, file: !114, line: 204, column: 3)
!3558 = !{i64 2155493149, i64 2155493165, i64 2155493191, i64 2155493219, i64 2155493239}
!3559 = !DILocation(line: 205, column: 2, scope: !3555)
!3560 = !DILocation(line: 206, column: 43, scope: !3493)
!3561 = !DILocation(line: 206, column: 41, scope: !3493)
!3562 = !DILocation(line: 207, column: 44, scope: !3493)
!3563 = !DILocation(line: 207, column: 56, scope: !3493)
!3564 = !DILocation(line: 209, column: 2, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !114, line: 209, column: 2)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !114, line: 209, column: 2)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !114, line: 209, column: 2)
!3568 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 209, column: 2)
!3569 = !DILocation(line: 210, column: 2, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !114, line: 210, column: 2)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !114, line: 210, column: 2)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !114, line: 210, column: 2)
!3573 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 210, column: 2)
!3574 = !DILocation(line: 211, column: 2, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !114, line: 211, column: 2)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !114, line: 211, column: 2)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !114, line: 211, column: 2)
!3578 = distinct !DILexicalBlock(scope: !3493, file: !114, line: 211, column: 2)
!3579 = !DILocation(line: 213, column: 2, scope: !3493)
!3580 = !DILocation(line: 214, column: 1, scope: !3493)
!3581 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3582, file: !3582, line: 175, type: !3583, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3585)
!3582 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!278, !103}
!3585 = !{!3586}
!3586 = !DILocalVariable(name: "level", arg: 1, scope: !3581, file: !3582, line: 175, type: !103)
!3587 = !DILocation(line: 0, scope: !3581)
!3588 = !DILocation(line: 177, column: 2, scope: !3581)
!3589 = !DILocation(line: 189, column: 1, scope: !3581)
!3590 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !137, file: !137, line: 1640, type: !3591, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!108}
!3593 = !DILocation(line: 1642, column: 19, scope: !3590)
!3594 = !DILocation(line: 1642, column: 9, scope: !3590)
!3595 = !DILocation(line: 1642, column: 2, scope: !3590)
!3596 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3597, file: !3597, line: 403, type: !3598, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3600)
!3597 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!109, !109}
!3600 = !{!3601}
!3601 = !DILocalVariable(name: "t", arg: 1, scope: !3596, file: !3597, line: 403, type: !109)
!3602 = !DILocation(line: 0, scope: !3596)
!3603 = !DILocation(line: 406, column: 2, scope: !3596)
!3604 = distinct !DISubprogram(name: "k_uptime_get", scope: !137, file: !137, line: 1616, type: !3605, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!106}
!3607 = !DILocation(line: 1618, column: 31, scope: !3604)
!3608 = !DILocation(line: 1618, column: 9, scope: !3604)
!3609 = !DILocation(line: 1618, column: 2, scope: !3604)
!3610 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3611, file: !3611, line: 564, type: !3605, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3611 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!3612 = !DILocation(line: 573, column: 2, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3610, file: !3611, line: 573, column: 2)
!3614 = !{i64 2154760091}
!3615 = !DILocation(line: 574, column: 9, scope: !3610)
!3616 = !DILocation(line: 574, column: 2, scope: !3610)
!3617 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3597, file: !3597, line: 1103, type: !3598, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3618)
!3618 = !{!3619}
!3619 = !DILocalVariable(name: "t", arg: 1, scope: !3617, file: !3597, line: 1103, type: !109)
!3620 = !DILocation(line: 0, scope: !3617)
!3621 = !DILocalVariable(name: "t", arg: 1, scope: !3622, file: !3597, line: 102, type: !109)
!3622 = distinct !DISubprogram(name: "z_tmcvt", scope: !3597, file: !3597, line: 102, type: !3623, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3625)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{!109, !109, !108, !108, !131, !131, !131, !131}
!3625 = !{!3621, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635}
!3626 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3622, file: !3597, line: 102, type: !108)
!3627 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3622, file: !3597, line: 103, type: !108)
!3628 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3622, file: !3597, line: 103, type: !131)
!3629 = !DILocalVariable(name: "result32", arg: 5, scope: !3622, file: !3597, line: 104, type: !131)
!3630 = !DILocalVariable(name: "round_up", arg: 6, scope: !3622, file: !3597, line: 104, type: !131)
!3631 = !DILocalVariable(name: "round_off", arg: 7, scope: !3622, file: !3597, line: 105, type: !131)
!3632 = !DILocalVariable(name: "mul_ratio", scope: !3622, file: !3597, line: 107, type: !131)
!3633 = !DILocalVariable(name: "div_ratio", scope: !3622, file: !3597, line: 109, type: !131)
!3634 = !DILocalVariable(name: "off", scope: !3622, file: !3597, line: 116, type: !109)
!3635 = !DILocalVariable(name: "rdivisor", scope: !3636, file: !3597, line: 119, type: !108)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !3597, line: 118, column: 18)
!3637 = distinct !DILexicalBlock(scope: !3622, file: !3597, line: 118, column: 6)
!3638 = !DILocation(line: 0, scope: !3622, inlinedAt: !3639)
!3639 = distinct !DILocation(line: 1106, column: 9, scope: !3617)
!3640 = !DILocation(line: 139, column: 13, scope: !3641, inlinedAt: !3639)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !3597, line: 138, column: 10)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !3597, line: 136, column: 7)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !3597, line: 134, column: 17)
!3644 = distinct !DILexicalBlock(scope: !3622, file: !3597, line: 134, column: 6)
!3645 = !DILocation(line: 1106, column: 2, scope: !3617)
!3646 = distinct !DISubprogram(name: "cbvprintf_package", scope: !381, file: !381, line: 233, type: !3647, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3656)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{!103, !102, !132, !108, !337, !3649}
!3649 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3650, line: 99, baseType: !3651)
!3650 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3651 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3650, line: 40, baseType: !3652)
!3652 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !381, baseType: !3653)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3654)
!3654 = !{!3655}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3653, file: !381, line: 18, baseType: !102, size: 32)
!3656 = !{!3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3692, !3701, !3704, !3705, !3708, !3711, !3714, !3717, !3723}
!3657 = !DILocalVariable(name: "packaged", arg: 1, scope: !3646, file: !381, line: 233, type: !102)
!3658 = !DILocalVariable(name: "len", arg: 2, scope: !3646, file: !381, line: 233, type: !132)
!3659 = !DILocalVariable(name: "flags", arg: 3, scope: !3646, file: !381, line: 233, type: !108)
!3660 = !DILocalVariable(name: "fmt", arg: 4, scope: !3646, file: !381, line: 234, type: !337)
!3661 = !DILocalVariable(name: "ap", arg: 5, scope: !3646, file: !381, line: 234, type: !3649)
!3662 = !DILocalVariable(name: "buf0", scope: !3646, file: !381, line: 247, type: !379)
!3663 = !DILocalVariable(name: "buf", scope: !3646, file: !381, line: 248, type: !379)
!3664 = !DILocalVariable(name: "size", scope: !3646, file: !381, line: 249, type: !32)
!3665 = !DILocalVariable(name: "align", scope: !3646, file: !381, line: 250, type: !32)
!3666 = !DILocalVariable(name: "str_ptr_pos", scope: !3646, file: !381, line: 251, type: !3667)
!3667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !1907)
!3668 = !DILocalVariable(name: "str_ptr_arg", scope: !3646, file: !381, line: 252, type: !3667)
!3669 = !DILocalVariable(name: "s_idx", scope: !3646, file: !381, line: 253, type: !32)
!3670 = !DILocalVariable(name: "s_rw_cnt", scope: !3646, file: !381, line: 254, type: !32)
!3671 = !DILocalVariable(name: "s_ro_cnt", scope: !3646, file: !381, line: 255, type: !32)
!3672 = !DILocalVariable(name: "arg_idx", scope: !3646, file: !381, line: 256, type: !103)
!3673 = !DILocalVariable(name: "i", scope: !3646, file: !381, line: 257, type: !32)
!3674 = !DILocalVariable(name: "s", scope: !3646, file: !381, line: 258, type: !337)
!3675 = !DILocalVariable(name: "parsing", scope: !3646, file: !381, line: 259, type: !131)
!3676 = !DILocalVariable(name: "rws_pos_en", scope: !3646, file: !381, line: 263, type: !131)
!3677 = !DILocalVariable(name: "fros_cnt", scope: !3646, file: !381, line: 268, type: !103)
!3678 = !DILocalVariable(name: "is_str_arg", scope: !3646, file: !381, line: 269, type: !131)
!3679 = !DILocalVariable(name: "pkg_hdr", scope: !3646, file: !381, line: 270, type: !3680)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 32)
!3681 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3682, line: 78, size: 32, elements: !3683)
!3682 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3683 = !{!3684, !3691}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3681, file: !3682, line: 80, baseType: !3685, size: 32)
!3685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3682, line: 45, size: 32, elements: !3686)
!3686 = !{!3687, !3688, !3689, !3690}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3685, file: !3682, line: 47, baseType: !185, size: 8)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3685, file: !3682, line: 50, baseType: !185, size: 8, offset: 8)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3685, file: !3682, line: 53, baseType: !185, size: 8, offset: 16)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3685, file: !3682, line: 56, baseType: !185, size: 8, offset: 24)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3681, file: !3682, line: 82, baseType: !102, size: 32)
!3692 = !DILocalVariable(name: "v", scope: !3693, file: !381, line: 567, type: !3697)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !381, line: 562, column: 14)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !381, line: 481, column: 18)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !381, line: 466, column: 3)
!3696 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 343, column: 15)
!3697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3646, file: !381, line: 567, size: 64, elements: !3698)
!3698 = !{!3699, !3700}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3697, file: !381, line: 567, baseType: !372, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3697, file: !381, line: 567, baseType: !370, size: 64)
!3701 = !DILocalVariable(name: "is_ro", scope: !3702, file: !381, line: 620, type: !131)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !381, line: 613, column: 19)
!3703 = distinct !DILexicalBlock(scope: !3696, file: !381, line: 613, column: 7)
!3704 = !DILocalVariable(name: "do_ro", scope: !3702, file: !381, line: 621, type: !131)
!3705 = !DILocalVariable(name: "s_ptr_idx", scope: !3706, file: !381, line: 626, type: !108)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !381, line: 625, column: 11)
!3707 = distinct !DILexicalBlock(scope: !3702, file: !381, line: 623, column: 8)
!3708 = !DILocalVariable(name: "v", scope: !3709, file: !381, line: 684, type: !103)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 683, column: 35)
!3710 = distinct !DILexicalBlock(scope: !3703, file: !381, line: 683, column: 14)
!3711 = !DILocalVariable(name: "v", scope: !3712, file: !381, line: 691, type: !376)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !381, line: 690, column: 36)
!3713 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 690, column: 14)
!3714 = !DILocalVariable(name: "v", scope: !3715, file: !381, line: 698, type: !107)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !381, line: 697, column: 41)
!3716 = distinct !DILexicalBlock(scope: !3713, file: !381, line: 697, column: 14)
!3717 = !DILocalVariable(name: "pos", scope: !3718, file: !381, line: 762, type: !185)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !381, line: 757, column: 31)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !381, line: 757, column: 3)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !381, line: 757, column: 3)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !381, line: 756, column: 16)
!3722 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 756, column: 6)
!3723 = !DILabel(scope: !3702, name: "process_string", file: !381, line: 615)
!3724 = !DILocation(line: 0, scope: !3646)
!3725 = !DILocation(line: 251, column: 2, scope: !3646)
!3726 = !DILocation(line: 251, column: 10, scope: !3646)
!3727 = !DILocation(line: 252, column: 2, scope: !3646)
!3728 = !DILocation(line: 252, column: 10, scope: !3646)
!3729 = !DILocation(line: 263, column: 29, scope: !3646)
!3730 = !DILocation(line: 263, column: 21, scope: !3646)
!3731 = !DILocation(line: 268, column: 21, scope: !3646)
!3732 = !DILocation(line: 268, column: 19, scope: !3646)
!3733 = !DILocation(line: 273, column: 6, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 273, column: 6)
!3735 = !DILocation(line: 273, column: 26, scope: !3734)
!3736 = !DILocation(line: 273, column: 6, scope: !3646)
!3737 = !DILocation(line: 297, column: 6, scope: !3646)
!3738 = !DILocation(line: 305, column: 11, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 305, column: 6)
!3740 = !DILocation(line: 305, column: 6, scope: !3646)
!3741 = !DILocation(line: 327, column: 19, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 327, column: 6)
!3743 = !DILocation(line: 327, column: 22, scope: !3742)
!3744 = !DILocation(line: 327, column: 33, scope: !3742)
!3745 = !DILocation(line: 327, column: 50, scope: !3742)
!3746 = !DILocation(line: 327, column: 6, scope: !3646)
!3747 = !DILocation(line: 338, column: 9, scope: !3646)
!3748 = !DILocation(line: 341, column: 2, scope: !3646)
!3749 = !DILocation(line: 472, column: 8, scope: !3695)
!3750 = !DILocation(line: 473, column: 14, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !381, line: 473, column: 9)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !381, line: 472, column: 18)
!3753 = distinct !DILexicalBlock(scope: !3695, file: !381, line: 472, column: 8)
!3754 = !DILocation(line: 473, column: 9, scope: !3752)
!3755 = !DILocation(line: 479, column: 5, scope: !3752)
!3756 = !DILocation(line: 468, column: 9, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3695, file: !381, line: 468, column: 8)
!3758 = !DILocation(line: 468, column: 8, scope: !3757)
!3759 = !DILocation(line: 468, column: 15, scope: !3757)
!3760 = !DILocation(line: 468, column: 8, scope: !3695)
!3761 = distinct !{!3761, !3762, !3763}
!3762 = !DILocation(line: 343, column: 2, scope: !3646)
!3763 = !DILocation(line: 712, column: 2, scope: !3646)
!3764 = !DILocation(line: 481, column: 4, scope: !3695)
!3765 = !DILocation(line: 484, column: 12, scope: !3694)
!3766 = !DILocation(line: 485, column: 5, scope: !3694)
!3767 = !DILocation(line: 505, column: 5, scope: !3694)
!3768 = !DILocation(line: 518, column: 5, scope: !3694)
!3769 = !DILocation(line: 523, column: 5, scope: !3694)
!3770 = !DILocation(line: 532, column: 9, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3694, file: !381, line: 532, column: 9)
!3772 = !DILocation(line: 532, column: 17, scope: !3771)
!3773 = !DILocation(line: 532, column: 9, scope: !3694)
!3774 = !DILocation(line: 533, column: 10, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !381, line: 533, column: 10)
!3776 = distinct !DILexicalBlock(scope: !3771, file: !381, line: 532, column: 25)
!3777 = !DILocation(line: 533, column: 18, scope: !3775)
!3778 = !DILocation(line: 0, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3693, file: !381, line: 569, column: 9)
!3780 = !DILocation(line: 0, scope: !3693)
!3781 = !DILocation(line: 579, column: 20, scope: !3693)
!3782 = !DILocation(line: 579, column: 11, scope: !3693)
!3783 = !DILocation(line: 580, column: 9, scope: !3693)
!3784 = !DILocation(line: 582, column: 21, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !381, line: 582, column: 10)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !381, line: 580, column: 23)
!3787 = distinct !DILexicalBlock(scope: !3693, file: !381, line: 580, column: 9)
!3788 = !DILocation(line: 582, column: 28, scope: !3785)
!3789 = !DILocation(line: 582, column: 10, scope: !3786)
!3790 = !DILocation(line: 0, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !381, line: 587, column: 17)
!3792 = distinct !DILexicalBlock(scope: !3786, file: !381, line: 585, column: 10)
!3793 = !DILocation(line: 593, column: 9, scope: !3693)
!3794 = !DILocation(line: 600, column: 5, scope: !3694)
!3795 = !DILocation(line: 605, column: 18, scope: !3696)
!3796 = !DILocation(line: 605, column: 9, scope: !3696)
!3797 = !DILocation(line: 608, column: 20, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3696, file: !381, line: 608, column: 7)
!3799 = !DILocation(line: 608, column: 23, scope: !3798)
!3800 = !DILocation(line: 608, column: 34, scope: !3798)
!3801 = !DILocation(line: 608, column: 41, scope: !3798)
!3802 = !DILocation(line: 608, column: 7, scope: !3696)
!3803 = !DILocation(line: 613, column: 7, scope: !3696)
!3804 = !DILocation(line: 614, column: 8, scope: !3702)
!3805 = !DILocation(line: 614, column: 4, scope: !3702)
!3806 = !DILocation(line: 255, column: 15, scope: !3646)
!3807 = !DILocation(line: 256, column: 6, scope: !3646)
!3808 = !DILocation(line: 254, column: 15, scope: !3646)
!3809 = !DILocation(line: 253, column: 15, scope: !3646)
!3810 = !DILocation(line: 320, column: 7, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3739, file: !381, line: 305, column: 20)
!3812 = !DILocation(line: 615, column: 1, scope: !3702)
!3813 = !DILocation(line: 616, column: 8, scope: !3702)
!3814 = !DILocation(line: 617, column: 5, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !381, line: 616, column: 22)
!3816 = distinct !DILexicalBlock(scope: !3702, file: !381, line: 616, column: 8)
!3817 = !DILocation(line: 617, column: 25, scope: !3815)
!3818 = !DILocation(line: 618, column: 4, scope: !3815)
!3819 = !DILocation(line: 620, column: 26, scope: !3702)
!3820 = !DILocation(line: 620, column: 29, scope: !3702)
!3821 = !DILocation(line: 620, column: 17, scope: !3702)
!3822 = !DILocation(line: 620, column: 43, scope: !3702)
!3823 = !DILocation(line: 0, scope: !3702)
!3824 = !DILocation(line: 623, column: 14, scope: !3707)
!3825 = !DILocation(line: 626, column: 26, scope: !3706)
!3826 = !DILocation(line: 626, column: 37, scope: !3706)
!3827 = !DILocation(line: 0, scope: !3706)
!3828 = !DILocation(line: 634, column: 15, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3706, file: !381, line: 634, column: 9)
!3830 = !DILocation(line: 644, column: 9, scope: !3706)
!3831 = !DILocation(line: 649, column: 27, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !381, line: 644, column: 23)
!3833 = distinct !DILexicalBlock(scope: !3706, file: !381, line: 644, column: 9)
!3834 = !DILocation(line: 649, column: 6, scope: !3832)
!3835 = !DILocation(line: 649, column: 25, scope: !3832)
!3836 = !DILocation(line: 650, column: 27, scope: !3832)
!3837 = !DILocation(line: 650, column: 6, scope: !3832)
!3838 = !DILocation(line: 650, column: 25, scope: !3832)
!3839 = !DILocation(line: 651, column: 10, scope: !3832)
!3840 = !DILocation(line: 653, column: 26, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !381, line: 651, column: 17)
!3842 = distinct !DILexicalBlock(scope: !3832, file: !381, line: 651, column: 10)
!3843 = !DILocation(line: 654, column: 15, scope: !3841)
!3844 = !DILocation(line: 655, column: 6, scope: !3841)
!3845 = !DILocation(line: 656, column: 15, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3842, file: !381, line: 655, column: 13)
!3847 = !DILocation(line: 658, column: 16, scope: !3833)
!3848 = !DILocation(line: 663, column: 10, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !381, line: 658, column: 23)
!3850 = distinct !DILexicalBlock(scope: !3833, file: !381, line: 658, column: 16)
!3851 = !DILocation(line: 664, column: 5, scope: !3849)
!3852 = !DILocation(line: 664, column: 16, scope: !3850)
!3853 = !DILocation(line: 669, column: 10, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !381, line: 664, column: 28)
!3855 = distinct !DILexicalBlock(scope: !3850, file: !381, line: 664, column: 16)
!3856 = !DILocation(line: 670, column: 5, scope: !3854)
!3857 = !DILocation(line: 675, column: 13, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3855, file: !381, line: 670, column: 12)
!3859 = !DILocation(line: 675, column: 27, scope: !3858)
!3860 = !DILocation(line: 675, column: 10, scope: !3858)
!3861 = !DILocation(line: 678, column: 10, scope: !3706)
!3862 = !DILocation(line: 680, column: 8, scope: !3702)
!3863 = !DILocation(line: 683, column: 14, scope: !3703)
!3864 = !DILocation(line: 684, column: 12, scope: !3709)
!3865 = !DILocation(line: 0, scope: !3709)
!3866 = !DILocation(line: 686, column: 8, scope: !3709)
!3867 = !DILocation(line: 687, column: 5, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !381, line: 686, column: 22)
!3869 = distinct !DILexicalBlock(scope: !3709, file: !381, line: 686, column: 8)
!3870 = !DILocation(line: 687, column: 17, scope: !3868)
!3871 = !DILocation(line: 688, column: 4, scope: !3868)
!3872 = !DILocation(line: 698, column: 18, scope: !3715)
!3873 = !DILocation(line: 0, scope: !3715)
!3874 = !DILocation(line: 700, column: 8, scope: !3715)
!3875 = !DILocation(line: 704, column: 6, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !381, line: 703, column: 12)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !381, line: 701, column: 9)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !381, line: 700, column: 22)
!3879 = distinct !DILexicalBlock(scope: !3715, file: !381, line: 700, column: 8)
!3880 = !DILocation(line: 704, column: 24, scope: !3876)
!3881 = !DILocation(line: 706, column: 4, scope: !3878)
!3882 = !DILocation(line: 0, scope: !3710)
!3883 = !DILocation(line: 0, scope: !3696)
!3884 = !DILocation(line: 720, column: 6, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 720, column: 6)
!3886 = !DILocation(line: 720, column: 17, scope: !3885)
!3887 = !DILocation(line: 720, column: 31, scope: !3885)
!3888 = !DILocation(line: 720, column: 6, scope: !3646)
!3889 = !DILocation(line: 729, column: 6, scope: !3646)
!3890 = !DILocation(line: 730, column: 21, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !381, line: 729, column: 20)
!3892 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 729, column: 6)
!3893 = !DILocation(line: 730, column: 27, scope: !3891)
!3894 = !DILocation(line: 730, column: 3, scope: !3891)
!3895 = !DILocation(line: 737, column: 22, scope: !3646)
!3896 = !DILocation(line: 737, column: 20, scope: !3646)
!3897 = !DILocation(line: 0, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 739, column: 6)
!3899 = !DILocation(line: 745, column: 17, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3898, file: !381, line: 743, column: 9)
!3901 = !DILocation(line: 745, column: 25, scope: !3900)
!3902 = !DILocation(line: 746, column: 17, scope: !3900)
!3903 = !DILocation(line: 746, column: 28, scope: !3900)
!3904 = !DILocation(line: 749, column: 29, scope: !3646)
!3905 = !DILocation(line: 749, column: 16, scope: !3646)
!3906 = !DILocation(line: 749, column: 27, scope: !3646)
!3907 = !DILocation(line: 756, column: 6, scope: !3722)
!3908 = !DILocation(line: 756, column: 6, scope: !3646)
!3909 = !DILocation(line: 757, column: 3, scope: !3720)
!3910 = !DILocation(line: 758, column: 10, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3718, file: !381, line: 758, column: 8)
!3912 = !DILocation(line: 758, column: 25, scope: !3911)
!3913 = !DILocation(line: 758, column: 8, scope: !3718)
!3914 = !DILocation(line: 0, scope: !3718)
!3915 = !DILocation(line: 765, column: 8, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3718, file: !381, line: 765, column: 8)
!3917 = !DILocation(line: 765, column: 19, scope: !3916)
!3918 = !DILocation(line: 765, column: 23, scope: !3916)
!3919 = !DILocation(line: 765, column: 8, scope: !3718)
!3920 = !DILocation(line: 762, column: 33, scope: !3718)
!3921 = !DILocation(line: 769, column: 8, scope: !3718)
!3922 = !DILocation(line: 769, column: 11, scope: !3718)
!3923 = !DILocation(line: 757, column: 27, scope: !3719)
!3924 = !DILocation(line: 757, column: 17, scope: !3719)
!3925 = distinct !{!3925, !3909, !3926}
!3926 = !DILocation(line: 770, column: 3, scope: !3720)
!3927 = !DILocation(line: 774, column: 16, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !381, line: 774, column: 2)
!3929 = distinct !DILexicalBlock(scope: !3646, file: !381, line: 774, column: 2)
!3930 = !DILocation(line: 774, column: 2, scope: !3929)
!3931 = !DILocation(line: 776, column: 16, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !381, line: 776, column: 7)
!3933 = distinct !DILexicalBlock(scope: !3928, file: !381, line: 774, column: 30)
!3934 = !DILocation(line: 776, column: 19, scope: !3932)
!3935 = !DILocation(line: 776, column: 34, scope: !3932)
!3936 = !DILocation(line: 776, column: 7, scope: !3933)
!3937 = !DILocation(line: 780, column: 7, scope: !3933)
!3938 = !DILocation(line: 782, column: 13, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !381, line: 780, column: 19)
!3940 = distinct !DILexicalBlock(scope: !3933, file: !381, line: 780, column: 7)
!3941 = !DILocation(line: 782, column: 8, scope: !3939)
!3942 = !DILocation(line: 782, column: 11, scope: !3939)
!3943 = !DILocation(line: 783, column: 3, scope: !3939)
!3944 = !DILocation(line: 785, column: 26, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3940, file: !381, line: 783, column: 10)
!3946 = !DILocation(line: 785, column: 41, scope: !3945)
!3947 = !DILocation(line: 785, column: 24, scope: !3945)
!3948 = !DILocation(line: 785, column: 8, scope: !3945)
!3949 = !DILocation(line: 787, column: 52, scope: !3945)
!3950 = !DILocation(line: 789, column: 11, scope: !3945)
!3951 = !DILocation(line: 789, column: 21, scope: !3945)
!3952 = !DILocation(line: 0, scope: !3940)
!3953 = !DILocation(line: 793, column: 7, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3933, file: !381, line: 793, column: 7)
!3955 = !DILocation(line: 793, column: 18, scope: !3954)
!3956 = !DILocation(line: 793, column: 22, scope: !3954)
!3957 = !DILocation(line: 793, column: 29, scope: !3954)
!3958 = !DILocation(line: 793, column: 7, scope: !3933)
!3959 = !DILocation(line: 797, column: 12, scope: !3933)
!3960 = !DILocation(line: 797, column: 7, scope: !3933)
!3961 = !DILocation(line: 797, column: 10, scope: !3933)
!3962 = !DILocation(line: 799, column: 3, scope: !3933)
!3963 = !DILocation(line: 800, column: 7, scope: !3933)
!3964 = !DILocation(line: 801, column: 2, scope: !3933)
!3965 = !DILocation(line: 338, column: 4, scope: !3646)
!3966 = !DILocation(line: 774, column: 26, scope: !3928)
!3967 = distinct !{!3967, !3930, !3968}
!3968 = !DILocation(line: 801, column: 2, scope: !3929)
!3969 = !DILocation(line: 808, column: 9, scope: !3646)
!3970 = !DILocation(line: 808, column: 2, scope: !3646)
!3971 = !DILocation(line: 813, column: 1, scope: !3646)
!3972 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !381, file: !381, line: 33, type: !3973, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3975)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!131, !337}
!3975 = !{!3976}
!3976 = !DILocalVariable(name: "addr", arg: 1, scope: !3972, file: !381, line: 33, type: !337)
!3977 = !DILocation(line: 0, scope: !3972)
!3978 = !DILocation(line: 41, column: 9, scope: !3972)
!3979 = !DILocation(line: 41, column: 2, scope: !3972)
!3980 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3981, file: !3981, line: 24, type: !3982, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3984)
!3981 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!131, !13}
!3984 = !{!3985}
!3985 = !DILocalVariable(name: "addr", arg: 1, scope: !3980, file: !3981, line: 24, type: !13)
!3986 = !DILocation(line: 0, scope: !3980)
!3987 = !DILocation(line: 49, column: 30, scope: !3980)
!3988 = !DILocation(line: 49, column: 57, scope: !3980)
!3989 = !DILocation(line: 49, column: 2, scope: !3980)
!3990 = distinct !DISubprogram(name: "cbprintf_package", scope: !381, file: !381, line: 815, type: !3991, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3993)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!103, !102, !132, !108, !337, null}
!3993 = !{!3994, !3995, !3996, !3997, !3998, !3999}
!3994 = !DILocalVariable(name: "packaged", arg: 1, scope: !3990, file: !381, line: 815, type: !102)
!3995 = !DILocalVariable(name: "len", arg: 2, scope: !3990, file: !381, line: 815, type: !132)
!3996 = !DILocalVariable(name: "flags", arg: 3, scope: !3990, file: !381, line: 815, type: !108)
!3997 = !DILocalVariable(name: "format", arg: 4, scope: !3990, file: !381, line: 816, type: !337)
!3998 = !DILocalVariable(name: "ap", scope: !3990, file: !381, line: 818, type: !3649)
!3999 = !DILocalVariable(name: "ret", scope: !3990, file: !381, line: 819, type: !103)
!4000 = !DILocation(line: 0, scope: !3990)
!4001 = !DILocation(line: 818, column: 2, scope: !3990)
!4002 = !DILocation(line: 818, column: 10, scope: !3990)
!4003 = !DILocation(line: 821, column: 2, scope: !3990)
!4004 = !DILocation(line: 822, column: 8, scope: !3990)
!4005 = !DILocation(line: 823, column: 2, scope: !3990)
!4006 = !DILocation(line: 825, column: 1, scope: !3990)
!4007 = !DILocation(line: 824, column: 2, scope: !3990)
!4008 = distinct !DISubprogram(name: "cbpprintf_external", scope: !381, file: !381, line: 827, type: !4009, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4019)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!103, !4011, !4015, !102, !102}
!4011 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3682, line: 297, baseType: !4012)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 32)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{!103, null}
!4015 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3682, line: 328, baseType: !4016)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 32)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!103, !4011, !102, !337, !3649}
!4019 = !{!4020, !4021, !4022, !4023, !4024, !4025, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038}
!4020 = !DILocalVariable(name: "out", arg: 1, scope: !4008, file: !381, line: 827, type: !4011)
!4021 = !DILocalVariable(name: "formatter", arg: 2, scope: !4008, file: !381, line: 828, type: !4015)
!4022 = !DILocalVariable(name: "ctx", arg: 3, scope: !4008, file: !381, line: 829, type: !102)
!4023 = !DILocalVariable(name: "packaged", arg: 4, scope: !4008, file: !381, line: 829, type: !102)
!4024 = !DILocalVariable(name: "buf", scope: !4008, file: !381, line: 831, type: !379)
!4025 = !DILocalVariable(name: "hdr", scope: !4008, file: !381, line: 832, type: !4026)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 32)
!4027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3682, line: 96, size: 64, elements: !4028)
!4028 = !{!4029, !4030}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4027, file: !3682, line: 98, baseType: !3681, size: 32)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4027, file: !3682, line: 101, baseType: !277, size: 32, offset: 32)
!4031 = !DILocalVariable(name: "s", scope: !4008, file: !381, line: 833, type: !277)
!4032 = !DILocalVariable(name: "ps", scope: !4008, file: !381, line: 833, type: !378)
!4033 = !DILocalVariable(name: "i", scope: !4008, file: !381, line: 834, type: !32)
!4034 = !DILocalVariable(name: "args_size", scope: !4008, file: !381, line: 834, type: !32)
!4035 = !DILocalVariable(name: "s_nbr", scope: !4008, file: !381, line: 834, type: !32)
!4036 = !DILocalVariable(name: "ros_nbr", scope: !4008, file: !381, line: 834, type: !32)
!4037 = !DILocalVariable(name: "rws_nbr", scope: !4008, file: !381, line: 834, type: !32)
!4038 = !DILocalVariable(name: "s_idx", scope: !4008, file: !381, line: 834, type: !32)
!4039 = !DILocation(line: 0, scope: !4008)
!4040 = !DILocation(line: 836, column: 10, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4008, file: !381, line: 836, column: 6)
!4042 = !DILocation(line: 836, column: 6, scope: !4008)
!4043 = !DILocation(line: 842, column: 28, scope: !4008)
!4044 = !DILocation(line: 842, column: 14, scope: !4008)
!4045 = !DILocation(line: 852, column: 16, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !381, line: 852, column: 2)
!4047 = distinct !DILexicalBlock(scope: !4008, file: !381, line: 852, column: 2)
!4048 = !DILocation(line: 852, column: 2, scope: !4047)
!4049 = !DILocation(line: 841, column: 28, scope: !4008)
!4050 = !DILocation(line: 841, column: 14, scope: !4008)
!4051 = !DILocation(line: 841, column: 32, scope: !4008)
!4052 = !DILocation(line: 847, column: 19, scope: !4008)
!4053 = !DILocation(line: 843, column: 28, scope: !4008)
!4054 = !DILocation(line: 843, column: 14, scope: !4008)
!4055 = !DILocation(line: 847, column: 31, scope: !4008)
!4056 = !DILocation(line: 844, column: 28, scope: !4008)
!4057 = !DILocation(line: 844, column: 14, scope: !4008)
!4058 = !DILocation(line: 847, column: 45, scope: !4008)
!4059 = !DILocation(line: 847, column: 41, scope: !4008)
!4060 = !DILocation(line: 854, column: 24, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4046, file: !381, line: 852, column: 30)
!4062 = !DILocation(line: 854, column: 11, scope: !4061)
!4063 = !DILocation(line: 855, column: 30, scope: !4061)
!4064 = !DILocation(line: 855, column: 22, scope: !4061)
!4065 = !DILocation(line: 855, column: 8, scope: !4061)
!4066 = !DILocation(line: 857, column: 7, scope: !4061)
!4067 = !DILocation(line: 859, column: 8, scope: !4061)
!4068 = !DILocation(line: 859, column: 18, scope: !4061)
!4069 = !DILocation(line: 859, column: 5, scope: !4061)
!4070 = !DILocation(line: 852, column: 26, scope: !4046)
!4071 = distinct !{!4071, !4048, !4072}
!4072 = !DILocation(line: 860, column: 2, scope: !4047)
!4073 = !DILocation(line: 863, column: 6, scope: !4008)
!4074 = !DILocation(line: 866, column: 56, scope: !4008)
!4075 = !DILocation(line: 866, column: 9, scope: !4008)
!4076 = !DILocation(line: 866, column: 2, scope: !4008)
!4077 = !DILocation(line: 867, column: 1, scope: !4008)
!4078 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !381, file: !381, line: 179, type: !4079, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4081)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{!103, !4011, !4015, !102, !337, !102}
!4081 = !{!4082, !4083, !4084, !4085, !4086, !4087}
!4082 = !DILocalVariable(name: "out", arg: 1, scope: !4078, file: !381, line: 179, type: !4011)
!4083 = !DILocalVariable(name: "formatter", arg: 2, scope: !4078, file: !381, line: 180, type: !4015)
!4084 = !DILocalVariable(name: "ctx", arg: 3, scope: !4078, file: !381, line: 181, type: !102)
!4085 = !DILocalVariable(name: "fmt", arg: 4, scope: !4078, file: !381, line: 182, type: !337)
!4086 = !DILocalVariable(name: "buf", arg: 5, scope: !4078, file: !381, line: 182, type: !102)
!4087 = !DILocalVariable(name: "u", scope: !4078, file: !381, line: 187, type: !4088)
!4088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4078, file: !381, line: 184, size: 32, elements: !4089)
!4089 = !{!4090, !4091}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4088, file: !381, line: 185, baseType: !3649, size: 32)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4088, file: !381, line: 186, baseType: !102, size: 32)
!4092 = !DILocation(line: 0, scope: !4078)
!4093 = !DILocation(line: 191, column: 9, scope: !4078)
!4094 = !DILocation(line: 191, column: 2, scope: !4078)
!4095 = distinct !DISubprogram(name: "is_ptr", scope: !381, file: !381, line: 881, type: !4096, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4098)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!131, !337, !103}
!4098 = !{!4099, !4100, !4101, !4102, !4103}
!4099 = !DILocalVariable(name: "fmt", arg: 1, scope: !4095, file: !381, line: 881, type: !337)
!4100 = !DILocalVariable(name: "n", arg: 2, scope: !4095, file: !381, line: 881, type: !103)
!4101 = !DILocalVariable(name: "c", scope: !4095, file: !381, line: 883, type: !278)
!4102 = !DILocalVariable(name: "mod", scope: !4095, file: !381, line: 884, type: !131)
!4103 = !DILocalVariable(name: "cnt", scope: !4095, file: !381, line: 885, type: !103)
!4104 = !DILocation(line: 0, scope: !4095)
!4105 = !DILocation(line: 887, column: 14, scope: !4095)
!4106 = !DILocation(line: 887, column: 22, scope: !4095)
!4107 = !DILocation(line: 887, column: 2, scope: !4095)
!4108 = !DILocation(line: 887, column: 18, scope: !4095)
!4109 = !DILocation(line: 888, column: 7, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4095, file: !381, line: 887, column: 31)
!4111 = !DILocation(line: 889, column: 12, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 889, column: 8)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !381, line: 888, column: 12)
!4114 = distinct !DILexicalBlock(scope: !4110, file: !381, line: 888, column: 7)
!4115 = !DILocation(line: 889, column: 8, scope: !4113)
!4116 = !DILocation(line: 890, column: 11, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !381, line: 890, column: 9)
!4118 = distinct !DILexicalBlock(scope: !4112, file: !381, line: 889, column: 18)
!4119 = !DILocation(line: 890, column: 9, scope: !4118)
!4120 = !DILocation(line: 892, column: 16, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4117, file: !381, line: 892, column: 16)
!4122 = !DILocation(line: 892, column: 16, scope: !4117)
!4123 = !DILocation(line: 895, column: 15, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4112, file: !381, line: 895, column: 15)
!4125 = !DILocation(line: 895, column: 15, scope: !4112)
!4126 = !DILocation(line: 900, column: 9, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4110, file: !381, line: 900, column: 7)
!4128 = !DILocation(line: 900, column: 7, scope: !4110)
!4129 = distinct !{!4129, !4107, !4130}
!4130 = !DILocation(line: 903, column: 2, scope: !4095)
!4131 = !DILocation(line: 906, column: 1, scope: !4095)
!4132 = distinct !DISubprogram(name: "is_fmt_spec", scope: !381, file: !381, line: 873, type: !4133, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4135)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!131, !278}
!4135 = !{!4136}
!4136 = !DILocalVariable(name: "c", arg: 1, scope: !4132, file: !381, line: 873, type: !278)
!4137 = !DILocation(line: 0, scope: !4132)
!4138 = !DILocation(line: 875, column: 19, scope: !4132)
!4139 = !DILocation(line: 875, column: 2, scope: !4132)
!4140 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !381, file: !381, line: 908, type: !4141, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4147)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!103, !102, !132, !4143, !102, !108, !2673, !132}
!4143 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3682, line: 308, baseType: !4144)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 32)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!103, !13, !132, !102}
!4147 = !{!4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4165, !4166, !4167, !4168, !4169, !4175, !4178, !4179, !4180, !4182, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4198, !4201, !4202, !4203, !4204, !4205, !4206, !4208, !4211, !4212, !4213}
!4148 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4140, file: !381, line: 908, type: !102)
!4149 = !DILocalVariable(name: "in_len", arg: 2, scope: !4140, file: !381, line: 909, type: !132)
!4150 = !DILocalVariable(name: "cb", arg: 3, scope: !4140, file: !381, line: 910, type: !4143)
!4151 = !DILocalVariable(name: "ctx", arg: 4, scope: !4140, file: !381, line: 911, type: !102)
!4152 = !DILocalVariable(name: "flags", arg: 5, scope: !4140, file: !381, line: 912, type: !108)
!4153 = !DILocalVariable(name: "strl", arg: 6, scope: !4140, file: !381, line: 913, type: !2673)
!4154 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4140, file: !381, line: 914, type: !132)
!4155 = !DILocalVariable(name: "buf", scope: !4140, file: !381, line: 918, type: !379)
!4156 = !DILocalVariable(name: "buf32", scope: !4140, file: !381, line: 919, type: !984)
!4157 = !DILocalVariable(name: "args_size", scope: !4140, file: !381, line: 920, type: !32)
!4158 = !DILocalVariable(name: "ros_nbr", scope: !4140, file: !381, line: 920, type: !32)
!4159 = !DILocalVariable(name: "rws_nbr", scope: !4140, file: !381, line: 920, type: !32)
!4160 = !DILocalVariable(name: "fmt_present", scope: !4140, file: !381, line: 921, type: !131)
!4161 = !DILocalVariable(name: "rw_cpy", scope: !4140, file: !381, line: 922, type: !131)
!4162 = !DILocalVariable(name: "ro_cpy", scope: !4140, file: !381, line: 923, type: !131)
!4163 = !DILocalVariable(name: "in_desc", scope: !4140, file: !381, line: 924, type: !4164)
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 32)
!4165 = !DILocalVariable(name: "out_len", scope: !4140, file: !381, line: 960, type: !103)
!4166 = !DILocalVariable(name: "fmt", scope: !4140, file: !381, line: 965, type: !337)
!4167 = !DILocalVariable(name: "str_pos", scope: !4140, file: !381, line: 966, type: !379)
!4168 = !DILocalVariable(name: "strl_cnt", scope: !4140, file: !381, line: 967, type: !132)
!4169 = !DILocalVariable(name: "i", scope: !4170, file: !381, line: 973, type: !103)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !381, line: 973, column: 4)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !381, line: 972, column: 15)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !381, line: 972, column: 7)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !381, line: 970, column: 18)
!4174 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 970, column: 6)
!4175 = !DILocalVariable(name: "str", scope: !4176, file: !381, line: 974, type: !337)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !381, line: 973, column: 38)
!4177 = distinct !DILexicalBlock(scope: !4170, file: !381, line: 973, column: 4)
!4178 = !DILocalVariable(name: "len", scope: !4176, file: !381, line: 975, type: !103)
!4179 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4173, file: !381, line: 990, type: !131)
!4180 = !DILocalVariable(name: "i", scope: !4181, file: !381, line: 995, type: !103)
!4181 = distinct !DILexicalBlock(scope: !4173, file: !381, line: 995, column: 3)
!4182 = !DILocalVariable(name: "arg_idx", scope: !4183, file: !381, line: 996, type: !185)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !381, line: 995, column: 37)
!4184 = distinct !DILexicalBlock(scope: !4181, file: !381, line: 995, column: 3)
!4185 = !DILocalVariable(name: "arg_pos", scope: !4183, file: !381, line: 997, type: !185)
!4186 = !DILocalVariable(name: "str", scope: !4183, file: !381, line: 998, type: !337)
!4187 = !DILocalVariable(name: "is_ro", scope: !4183, file: !381, line: 999, type: !131)
!4188 = !DILocalVariable(name: "len", scope: !4183, file: !381, line: 1000, type: !103)
!4189 = !DILocalVariable(name: "out_desc", scope: !4140, file: !381, line: 1038, type: !3685)
!4190 = !DILocalVariable(name: "cpy_str_pos", scope: !4140, file: !381, line: 1040, type: !3667)
!4191 = !DILocalVariable(name: "keep_str_pos", scope: !4140, file: !381, line: 1042, type: !3667)
!4192 = !DILocalVariable(name: "scpy_cnt", scope: !4140, file: !381, line: 1043, type: !185)
!4193 = !DILocalVariable(name: "keep_cnt", scope: !4140, file: !381, line: 1044, type: !185)
!4194 = !DILocalVariable(name: "dst", scope: !4140, file: !381, line: 1045, type: !379)
!4195 = !DILocalVariable(name: "rv", scope: !4140, file: !381, line: 1046, type: !103)
!4196 = !DILocalVariable(name: "i", scope: !4197, file: !381, line: 1074, type: !103)
!4197 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 1074, column: 2)
!4198 = !DILocalVariable(name: "arg_idx", scope: !4199, file: !381, line: 1075, type: !185)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !381, line: 1074, column: 36)
!4200 = distinct !DILexicalBlock(scope: !4197, file: !381, line: 1074, column: 2)
!4201 = !DILocalVariable(name: "arg_pos", scope: !4199, file: !381, line: 1076, type: !185)
!4202 = !DILocalVariable(name: "str", scope: !4199, file: !381, line: 1077, type: !337)
!4203 = !DILocalVariable(name: "is_ro", scope: !4199, file: !381, line: 1078, type: !131)
!4204 = !DILocalVariable(name: "in_desc_backup", scope: !4140, file: !381, line: 1114, type: !3685)
!4205 = !DILocalVariable(name: "strs_len", scope: !4140, file: !381, line: 1134, type: !132)
!4206 = !DILocalVariable(name: "i", scope: !4207, file: !381, line: 1143, type: !103)
!4207 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 1143, column: 2)
!4208 = !DILocalVariable(name: "loc", scope: !4209, file: !381, line: 1144, type: !185)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !381, line: 1143, column: 37)
!4210 = distinct !DILexicalBlock(scope: !4207, file: !381, line: 1143, column: 2)
!4211 = !DILocalVariable(name: "str", scope: !4209, file: !381, line: 1145, type: !337)
!4212 = !DILocalVariable(name: "str_len", scope: !4209, file: !381, line: 1146, type: !121)
!4213 = !DILabel(scope: !4214, name: "calculate_string_length", file: !381, line: 1021)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !381, line: 1020, column: 56)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !381, line: 1020, column: 15)
!4216 = distinct !DILexicalBlock(scope: !4183, file: !381, line: 1014, column: 8)
!4217 = !DILocation(line: 0, scope: !4140)
!4218 = !DILocation(line: 919, column: 20, scope: !4140)
!4219 = !DILocation(line: 921, column: 27, scope: !4140)
!4220 = !DILocation(line: 921, column: 21, scope: !4140)
!4221 = !DILocation(line: 926, column: 18, scope: !4140)
!4222 = !DILocation(line: 926, column: 11, scope: !4140)
!4223 = !DILocation(line: 926, column: 34, scope: !4140)
!4224 = !DILocation(line: 931, column: 21, scope: !4140)
!4225 = !DILocation(line: 931, column: 12, scope: !4140)
!4226 = !DILocation(line: 932, column: 11, scope: !4140)
!4227 = !DILocation(line: 932, column: 19, scope: !4140)
!4228 = !DILocation(line: 938, column: 21, scope: !4140)
!4229 = !DILocation(line: 938, column: 12, scope: !4140)
!4230 = !DILocation(line: 939, column: 19, scope: !4140)
!4231 = !DILocation(line: 939, column: 23, scope: !4140)
!4232 = !DILocation(line: 946, column: 14, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 946, column: 6)
!4234 = !DILocation(line: 947, column: 7, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !381, line: 947, column: 7)
!4236 = distinct !DILexicalBlock(scope: !4233, file: !381, line: 946, column: 26)
!4237 = !DILocation(line: 947, column: 7, scope: !4236)
!4238 = !DILocation(line: 948, column: 4, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4235, file: !381, line: 947, column: 11)
!4240 = !DILocation(line: 949, column: 3, scope: !4239)
!4241 = !DILocation(line: 958, column: 23, scope: !4140)
!4242 = !DILocation(line: 958, column: 14, scope: !4140)
!4243 = !DILocation(line: 958, column: 27, scope: !4140)
!4244 = !DILocation(line: 965, column: 41, scope: !4140)
!4245 = !DILocation(line: 965, column: 20, scope: !4140)
!4246 = !DILocation(line: 966, column: 22, scope: !4140)
!4247 = !DILocation(line: 970, column: 9, scope: !4174)
!4248 = !DILocation(line: 970, column: 6, scope: !4140)
!4249 = !DILocation(line: 972, column: 7, scope: !4173)
!4250 = !DILocation(line: 0, scope: !4170)
!4251 = !DILocation(line: 973, column: 4, scope: !4170)
!4252 = !DILocation(line: 974, column: 46, scope: !4176)
!4253 = !DILocation(line: 974, column: 40, scope: !4176)
!4254 = !DILocation(line: 974, column: 23, scope: !4176)
!4255 = !DILocation(line: 0, scope: !4176)
!4256 = !DILocation(line: 975, column: 15, scope: !4176)
!4257 = !DILocation(line: 978, column: 14, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4176, file: !381, line: 978, column: 9)
!4259 = !DILocation(line: 979, column: 25, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4258, file: !381, line: 978, column: 38)
!4261 = !DILocation(line: 979, column: 19, scope: !4260)
!4262 = !DILocation(line: 979, column: 6, scope: !4260)
!4263 = !DILocation(line: 979, column: 23, scope: !4260)
!4264 = !DILocation(line: 980, column: 5, scope: !4260)
!4265 = !DILocation(line: 981, column: 13, scope: !4176)
!4266 = !DILocation(line: 982, column: 12, scope: !4176)
!4267 = !DILocation(line: 973, column: 34, scope: !4177)
!4268 = !DILocation(line: 973, column: 22, scope: !4177)
!4269 = distinct !{!4269, !4251, !4270}
!4270 = !DILocation(line: 983, column: 4, scope: !4170)
!4271 = !DILocation(line: 985, column: 16, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !381, line: 985, column: 8)
!4273 = distinct !DILexicalBlock(scope: !4172, file: !381, line: 984, column: 10)
!4274 = !DILocation(line: 967, column: 9, scope: !4140)
!4275 = !DILocation(line: 971, column: 11, scope: !4173)
!4276 = !DILocation(line: 0, scope: !4173)
!4277 = !DILocation(line: 0, scope: !4181)
!4278 = !DILocation(line: 995, column: 21, scope: !4184)
!4279 = !DILocation(line: 995, column: 3, scope: !4181)
!4280 = !DILocation(line: 990, column: 34, scope: !4173)
!4281 = !DILocation(line: 990, column: 26, scope: !4173)
!4282 = !DILocation(line: 996, column: 30, scope: !4183)
!4283 = !DILocation(line: 0, scope: !4183)
!4284 = !DILocation(line: 997, column: 30, scope: !4183)
!4285 = !DILocation(line: 997, column: 22, scope: !4183)
!4286 = !DILocation(line: 998, column: 39, scope: !4183)
!4287 = !DILocation(line: 998, column: 22, scope: !4183)
!4288 = !DILocation(line: 999, column: 17, scope: !4183)
!4289 = !DILocation(line: 1002, column: 20, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4183, file: !381, line: 1002, column: 8)
!4291 = !DILocation(line: 996, column: 22, scope: !4183)
!4292 = !DILocation(line: 1002, column: 35, scope: !4290)
!4293 = !DILocation(line: 1002, column: 23, scope: !4290)
!4294 = !DILocation(line: 1002, column: 8, scope: !4183)
!4295 = !DILocation(line: 1003, column: 5, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !381, line: 1003, column: 5)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !381, line: 1003, column: 5)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !381, line: 1003, column: 5)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !381, line: 1003, column: 5)
!4300 = distinct !DILexicalBlock(scope: !4290, file: !381, line: 1002, column: 45)
!4301 = !DILocation(line: 1010, column: 13, scope: !4300)
!4302 = !DILocation(line: 1011, column: 5, scope: !4300)
!4303 = !DILocation(line: 1014, column: 8, scope: !4183)
!4304 = !DILocation(line: 1015, column: 9, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4216, file: !381, line: 1014, column: 15)
!4306 = !DILocation(line: 1018, column: 14, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !381, line: 1017, column: 12)
!4308 = distinct !DILexicalBlock(scope: !4305, file: !381, line: 1015, column: 9)
!4309 = !DILocation(line: 1020, column: 4, scope: !4305)
!4310 = !DILocation(line: 1020, column: 15, scope: !4216)
!4311 = !DILocation(line: 1021, column: 1, scope: !4214)
!4312 = !DILocation(line: 1022, column: 11, scope: !4214)
!4313 = !DILocation(line: 1025, column: 14, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4214, file: !381, line: 1025, column: 9)
!4315 = !DILocation(line: 1026, column: 25, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4314, file: !381, line: 1025, column: 38)
!4317 = !DILocation(line: 1026, column: 19, scope: !4316)
!4318 = !DILocation(line: 1026, column: 6, scope: !4316)
!4319 = !DILocation(line: 1026, column: 23, scope: !4316)
!4320 = !DILocation(line: 1027, column: 5, scope: !4316)
!4321 = !DILocation(line: 1031, column: 21, scope: !4214)
!4322 = !DILocation(line: 1031, column: 13, scope: !4214)
!4323 = !DILocation(line: 1032, column: 4, scope: !4214)
!4324 = !DILocation(line: 995, column: 33, scope: !4184)
!4325 = distinct !{!4325, !4279, !4326}
!4326 = !DILocation(line: 1033, column: 3, scope: !4181)
!4327 = !DILocation(line: 1040, column: 10, scope: !4140)
!4328 = !DILocation(line: 1042, column: 10, scope: !4140)
!4329 = !DILocation(line: 1052, column: 6, scope: !4140)
!4330 = !DILocation(line: 1055, column: 9, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !381, line: 1052, column: 14)
!4332 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 1052, column: 6)
!4333 = !DILocation(line: 1056, column: 2, scope: !4331)
!4334 = !DILocation(line: 1056, column: 21, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4332, file: !381, line: 1056, column: 13)
!4336 = !DILocation(line: 1066, column: 3, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !381, line: 1065, column: 11)
!4338 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 1065, column: 6)
!4339 = !DILocation(line: 1067, column: 2, scope: !4337)
!4340 = !DILocation(line: 1068, column: 10, scope: !4140)
!4341 = !DILocation(line: 0, scope: !4197)
!4342 = !DILocation(line: 1074, column: 20, scope: !4200)
!4343 = !DILocation(line: 1074, column: 2, scope: !4197)
!4344 = !DILocation(line: 1110, column: 24, scope: !4140)
!4345 = !DILocation(line: 1053, column: 12, scope: !4331)
!4346 = !DILocation(line: 1054, column: 12, scope: !4331)
!4347 = !DILocation(line: 1108, column: 30, scope: !4140)
!4348 = !DILocation(line: 1108, column: 40, scope: !4140)
!4349 = !DILocation(line: 1108, column: 38, scope: !4140)
!4350 = !DILocation(line: 1109, column: 31, scope: !4140)
!4351 = !DILocation(line: 1109, column: 24, scope: !4140)
!4352 = !DILocation(line: 1110, column: 31, scope: !4140)
!4353 = !DILocation(line: 1114, column: 31, scope: !4140)
!4354 = !DILocation(line: 1114, column: 48, scope: !4140)
!4355 = !DILocation(line: 1115, column: 13, scope: !4140)
!4356 = !DILocation(line: 1118, column: 7, scope: !4140)
!4357 = !DILocation(line: 1119, column: 9, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 1119, column: 6)
!4359 = !DILocation(line: 1119, column: 6, scope: !4140)
!4360 = !DILocation(line: 1075, column: 29, scope: !4199)
!4361 = !DILocation(line: 1075, column: 21, scope: !4199)
!4362 = !DILocation(line: 0, scope: !4199)
!4363 = !DILocation(line: 1076, column: 29, scope: !4199)
!4364 = !DILocation(line: 1076, column: 21, scope: !4199)
!4365 = !DILocation(line: 1077, column: 38, scope: !4199)
!4366 = !DILocation(line: 1077, column: 21, scope: !4199)
!4367 = !DILocation(line: 1078, column: 16, scope: !4199)
!4368 = !DILocation(line: 1080, column: 19, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4199, file: !381, line: 1080, column: 7)
!4370 = !DILocation(line: 1080, column: 34, scope: !4369)
!4371 = !DILocation(line: 1080, column: 22, scope: !4369)
!4372 = !DILocation(line: 1080, column: 7, scope: !4199)
!4373 = !DILocation(line: 1084, column: 7, scope: !4199)
!4374 = !DILocation(line: 1085, column: 8, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !381, line: 1084, column: 14)
!4376 = distinct !DILexicalBlock(scope: !4199, file: !381, line: 1084, column: 7)
!4377 = !DILocation(line: 1087, column: 25, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !381, line: 1085, column: 49)
!4379 = distinct !DILexicalBlock(scope: !4375, file: !381, line: 1085, column: 8)
!4380 = !DILocation(line: 1088, column: 4, scope: !4378)
!4381 = !DILocation(line: 1088, column: 15, scope: !4379)
!4382 = !DILocation(line: 1090, column: 26, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !381, line: 1088, column: 61)
!4384 = distinct !DILexicalBlock(scope: !4379, file: !381, line: 1088, column: 15)
!4385 = !DILocation(line: 1091, column: 4, scope: !4383)
!4386 = !DILocation(line: 1095, column: 8, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4376, file: !381, line: 1094, column: 10)
!4388 = !DILocation(line: 1097, column: 25, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !381, line: 1095, column: 49)
!4390 = distinct !DILexicalBlock(scope: !4387, file: !381, line: 1095, column: 8)
!4391 = !DILocation(line: 1098, column: 4, scope: !4389)
!4392 = !DILocation(line: 1100, column: 26, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4390, file: !381, line: 1098, column: 11)
!4394 = !DILocation(line: 1100, column: 5, scope: !4393)
!4395 = !DILocation(line: 1100, column: 30, scope: !4393)
!4396 = !DILocation(line: 1101, column: 26, scope: !4393)
!4397 = !DILocation(line: 0, scope: !4376)
!4398 = !DILocation(line: 1074, column: 32, scope: !4200)
!4399 = distinct !{!4399, !4343, !4400}
!4400 = !DILocation(line: 1104, column: 2, scope: !4197)
!4401 = !DILocation(line: 1124, column: 13, scope: !4140)
!4402 = !DILocation(line: 1127, column: 10, scope: !4140)
!4403 = !DILocation(line: 1127, column: 7, scope: !4140)
!4404 = !DILocation(line: 1128, column: 9, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 1128, column: 6)
!4406 = !DILocation(line: 1128, column: 6, scope: !4140)
!4407 = !DILocation(line: 1134, column: 27, scope: !4140)
!4408 = !DILocation(line: 1136, column: 7, scope: !4140)
!4409 = !DILocation(line: 1137, column: 9, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4140, file: !381, line: 1137, column: 6)
!4411 = !DILocation(line: 1137, column: 6, scope: !4140)
!4412 = !DILocation(line: 1131, column: 10, scope: !4140)
!4413 = !DILocation(line: 1140, column: 10, scope: !4140)
!4414 = !DILocation(line: 0, scope: !4207)
!4415 = !DILocation(line: 1143, column: 20, scope: !4210)
!4416 = !DILocation(line: 1143, column: 2, scope: !4207)
!4417 = !DILocation(line: 1144, column: 3, scope: !4209)
!4418 = !DILocation(line: 1144, column: 17, scope: !4209)
!4419 = !DILocation(line: 0, scope: !4209)
!4420 = !DILocation(line: 1144, column: 11, scope: !4209)
!4421 = !DILocation(line: 1145, column: 38, scope: !4209)
!4422 = !DILocation(line: 1145, column: 21, scope: !4209)
!4423 = !DILocation(line: 1146, column: 22, scope: !4209)
!4424 = !DILocation(line: 1146, column: 29, scope: !4209)
!4425 = !DILocation(line: 1148, column: 8, scope: !4209)
!4426 = !DILocation(line: 1149, column: 10, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4209, file: !381, line: 1149, column: 7)
!4428 = !DILocation(line: 1149, column: 7, scope: !4209)
!4429 = !DILocation(line: 1154, column: 8, scope: !4209)
!4430 = !DILocation(line: 1155, column: 10, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4209, file: !381, line: 1155, column: 7)
!4432 = !DILocation(line: 1155, column: 7, scope: !4209)
!4433 = !DILocation(line: 1159, column: 2, scope: !4210)
!4434 = !DILocation(line: 1152, column: 11, scope: !4209)
!4435 = !DILocation(line: 1158, column: 11, scope: !4209)
!4436 = !DILocation(line: 1143, column: 33, scope: !4210)
!4437 = distinct !{!4437, !4416, !4438}
!4438 = !DILocation(line: 1159, column: 2, scope: !4207)
!4439 = !DILocation(line: 1162, column: 8, scope: !4140)
!4440 = !DILocation(line: 1164, column: 2, scope: !4140)
!4441 = !DILocation(line: 1165, column: 1, scope: !4140)
!4442 = distinct !DISubprogram(name: "get_package_len", scope: !381, file: !381, line: 196, type: !4443, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4445)
!4443 = !DISubroutineType(types: !4444)
!4444 = !{!132, !102}
!4445 = !{!4446, !4447, !4448, !4449, !4450, !4451, !4452}
!4446 = !DILocalVariable(name: "packaged", arg: 1, scope: !4442, file: !381, line: 196, type: !102)
!4447 = !DILocalVariable(name: "buf", scope: !4442, file: !381, line: 200, type: !379)
!4448 = !DILocalVariable(name: "start", scope: !4442, file: !381, line: 201, type: !379)
!4449 = !DILocalVariable(name: "args_size", scope: !4442, file: !381, line: 202, type: !32)
!4450 = !DILocalVariable(name: "s_nbr", scope: !4442, file: !381, line: 202, type: !32)
!4451 = !DILocalVariable(name: "ros_nbr", scope: !4442, file: !381, line: 202, type: !32)
!4452 = !DILocalVariable(name: "i", scope: !4453, file: !381, line: 215, type: !103)
!4453 = distinct !DILexicalBlock(scope: !4442, file: !381, line: 215, column: 2)
!4454 = !DILocation(line: 0, scope: !4442)
!4455 = !DILocation(line: 204, column: 14, scope: !4442)
!4456 = !DILocation(line: 204, column: 21, scope: !4442)
!4457 = !DILocation(line: 205, column: 14, scope: !4442)
!4458 = !DILocation(line: 206, column: 14, scope: !4442)
!4459 = !DILocation(line: 209, column: 6, scope: !4442)
!4460 = !DILocation(line: 212, column: 6, scope: !4442)
!4461 = !DILocation(line: 0, scope: !4453)
!4462 = !DILocation(line: 215, column: 20, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4453, file: !381, line: 215, column: 2)
!4464 = !DILocation(line: 215, column: 2, scope: !4453)
!4465 = !DILocation(line: 220, column: 33, scope: !4442)
!4466 = !DILocation(line: 220, column: 2, scope: !4442)
!4467 = !DILocation(line: 216, column: 6, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4463, file: !381, line: 215, column: 34)
!4469 = !DILocation(line: 217, column: 10, scope: !4468)
!4470 = !DILocation(line: 217, column: 36, scope: !4468)
!4471 = !DILocation(line: 217, column: 7, scope: !4468)
!4472 = !DILocation(line: 215, column: 30, scope: !4463)
!4473 = distinct !{!4473, !4464, !4474}
!4474 = !DILocation(line: 218, column: 2, scope: !4453)
!4475 = distinct !DISubprogram(name: "append_string", scope: !381, file: !381, line: 223, type: !4476, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4478)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!103, !4143, !102, !337, !121}
!4478 = !{!4479, !4480, !4481, !4482}
!4479 = !DILocalVariable(name: "cb", arg: 1, scope: !4475, file: !381, line: 223, type: !4143)
!4480 = !DILocalVariable(name: "ctx", arg: 2, scope: !4475, file: !381, line: 223, type: !102)
!4481 = !DILocalVariable(name: "str", arg: 3, scope: !4475, file: !381, line: 223, type: !337)
!4482 = !DILocalVariable(name: "strl", arg: 4, scope: !4475, file: !381, line: 223, type: !121)
!4483 = !DILocation(line: 0, scope: !4475)
!4484 = !DILocation(line: 225, column: 9, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4475, file: !381, line: 225, column: 6)
!4486 = !DILocation(line: 225, column: 6, scope: !4475)
!4487 = !DILocation(line: 226, column: 14, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4485, file: !381, line: 225, column: 18)
!4489 = !DILocation(line: 226, column: 12, scope: !4488)
!4490 = !DILocation(line: 226, column: 3, scope: !4488)
!4491 = !DILocation(line: 229, column: 14, scope: !4475)
!4492 = !DILocation(line: 229, column: 9, scope: !4475)
!4493 = !DILocation(line: 229, column: 27, scope: !4475)
!4494 = !DILocation(line: 229, column: 39, scope: !4475)
!4495 = !DILocation(line: 230, column: 17, scope: !4475)
!4496 = !DILocation(line: 230, column: 9, scope: !4475)
!4497 = !DILocation(line: 230, column: 2, scope: !4475)
!4498 = !DILocation(line: 231, column: 1, scope: !4475)
!4499 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !394, file: !394, line: 45, type: !396, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4500)
!4500 = !{!4501}
!4501 = !DILocalVariable(name: "c", arg: 1, scope: !4499, file: !394, line: 45, type: !103)
!4502 = !DILocation(line: 0, scope: !4499)
!4503 = !DILocation(line: 50, column: 2, scope: !4499)
!4504 = distinct !DISubprogram(name: "__printk_hook_install", scope: !394, file: !394, line: 63, type: !4505, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4507)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{null, !395}
!4507 = !{!4508}
!4508 = !DILocalVariable(name: "fn", arg: 1, scope: !4504, file: !394, line: 63, type: !395)
!4509 = !DILocation(line: 0, scope: !4504)
!4510 = !DILocation(line: 65, column: 12, scope: !4504)
!4511 = !DILocation(line: 66, column: 1, scope: !4504)
!4512 = distinct !DISubprogram(name: "__printk_get_hook", scope: !394, file: !394, line: 76, type: !4513, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !251)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!102}
!4515 = !DILocation(line: 78, column: 9, scope: !4512)
!4516 = !DILocation(line: 78, column: 2, scope: !4512)
!4517 = distinct !DISubprogram(name: "vprintk", scope: !394, file: !394, line: 113, type: !4518, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4526)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{null, !337, !4520}
!4520 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3650, line: 99, baseType: !4521)
!4521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3650, line: 40, baseType: !4522)
!4522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !394, baseType: !4523)
!4523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4524)
!4524 = !{!4525}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4523, file: !394, line: 79, baseType: !102, size: 32)
!4526 = !{!4527, !4528, !4529}
!4527 = !DILocalVariable(name: "fmt", arg: 1, scope: !4517, file: !394, line: 113, type: !337)
!4528 = !DILocalVariable(name: "ap", arg: 2, scope: !4517, file: !394, line: 113, type: !4520)
!4529 = !DILocalVariable(name: "ctx", scope: !4530, file: !394, line: 121, type: !4532)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !394, line: 120, column: 27)
!4531 = distinct !DILexicalBlock(scope: !4517, file: !394, line: 120, column: 6)
!4532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !394, line: 81, size: 32, elements: !4533)
!4533 = !{!4534, !4535}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4532, file: !394, line: 85, baseType: !32, size: 32)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4532, file: !394, line: 86, baseType: !4536, offset: 32)
!4536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, elements: !2671)
!4537 = !DILocation(line: 0, scope: !4517)
!4538 = !DILocation(line: 148, column: 3, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4531, file: !394, line: 138, column: 9)
!4540 = !DILocation(line: 155, column: 1, scope: !4517)
!4541 = distinct !DISubprogram(name: "char_out", scope: !394, file: !394, line: 107, type: !4542, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4544)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!103, !103, !102}
!4544 = !{!4545, !4546}
!4545 = !DILocalVariable(name: "c", arg: 1, scope: !4541, file: !394, line: 107, type: !103)
!4546 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4541, file: !394, line: 107, type: !102)
!4547 = !DILocation(line: 0, scope: !4541)
!4548 = !DILocation(line: 110, column: 9, scope: !4541)
!4549 = !DILocation(line: 110, column: 2, scope: !4541)
!4550 = distinct !DISubprogram(name: "cbvprintf", scope: !3682, file: !3682, line: 739, type: !4551, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4553)
!4551 = !DISubroutineType(types: !4552)
!4552 = !{!103, !4011, !102, !337, !4520}
!4553 = !{!4554, !4555, !4556, !4557}
!4554 = !DILocalVariable(name: "out", arg: 1, scope: !4550, file: !3682, line: 739, type: !4011)
!4555 = !DILocalVariable(name: "ctx", arg: 2, scope: !4550, file: !3682, line: 739, type: !102)
!4556 = !DILocalVariable(name: "format", arg: 3, scope: !4550, file: !3682, line: 739, type: !337)
!4557 = !DILocalVariable(name: "ap", arg: 4, scope: !4550, file: !3682, line: 739, type: !4520)
!4558 = !DILocation(line: 0, scope: !4550)
!4559 = !DILocation(line: 741, column: 9, scope: !4550)
!4560 = !DILocation(line: 741, column: 2, scope: !4550)
!4561 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !394, file: !394, line: 157, type: !4562, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4564)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{null, !277, !132}
!4564 = !{!4565, !4566, !4567}
!4565 = !DILocalVariable(name: "c", arg: 1, scope: !4561, file: !394, line: 157, type: !277)
!4566 = !DILocalVariable(name: "n", arg: 2, scope: !4561, file: !394, line: 157, type: !132)
!4567 = !DILocalVariable(name: "i", scope: !4561, file: !394, line: 159, type: !132)
!4568 = !DILocation(line: 0, scope: !4561)
!4569 = !DILocation(line: 164, column: 16, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4571, file: !394, line: 164, column: 2)
!4571 = distinct !DILexicalBlock(scope: !4561, file: !394, line: 164, column: 2)
!4572 = !DILocation(line: 164, column: 2, scope: !4571)
!4573 = !DILocation(line: 165, column: 3, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4570, file: !394, line: 164, column: 26)
!4575 = !DILocation(line: 165, column: 13, scope: !4574)
!4576 = !DILocation(line: 164, column: 22, scope: !4570)
!4577 = distinct !{!4577, !4572, !4578}
!4578 = !DILocation(line: 166, column: 2, scope: !4571)
!4579 = !DILocation(line: 171, column: 1, scope: !4561)
!4580 = distinct !DISubprogram(name: "printk", scope: !394, file: !394, line: 203, type: !4581, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4583)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{null, !337, null}
!4583 = !{!4584, !4585}
!4584 = !DILocalVariable(name: "fmt", arg: 1, scope: !4580, file: !394, line: 203, type: !337)
!4585 = !DILocalVariable(name: "ap", scope: !4580, file: !394, line: 205, type: !4520)
!4586 = !DILocation(line: 0, scope: !4580)
!4587 = !DILocation(line: 205, column: 2, scope: !4580)
!4588 = !DILocation(line: 205, column: 10, scope: !4580)
!4589 = !DILocation(line: 207, column: 2, scope: !4580)
!4590 = !DILocation(line: 209, column: 2, scope: !4580)
!4591 = !DILocation(line: 211, column: 2, scope: !4580)
!4592 = !DILocation(line: 212, column: 1, scope: !4580)
!4593 = distinct !DISubprogram(name: "snprintk", scope: !394, file: !394, line: 239, type: !4594, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4596)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!103, !277, !132, !337, null}
!4596 = !{!4597, !4598, !4599, !4600, !4601}
!4597 = !DILocalVariable(name: "str", arg: 1, scope: !4593, file: !394, line: 239, type: !277)
!4598 = !DILocalVariable(name: "size", arg: 2, scope: !4593, file: !394, line: 239, type: !132)
!4599 = !DILocalVariable(name: "fmt", arg: 3, scope: !4593, file: !394, line: 239, type: !337)
!4600 = !DILocalVariable(name: "ap", scope: !4593, file: !394, line: 241, type: !4520)
!4601 = !DILocalVariable(name: "ret", scope: !4593, file: !394, line: 242, type: !103)
!4602 = !DILocation(line: 0, scope: !4593)
!4603 = !DILocation(line: 241, column: 2, scope: !4593)
!4604 = !DILocation(line: 241, column: 10, scope: !4593)
!4605 = !DILocation(line: 244, column: 2, scope: !4593)
!4606 = !DILocation(line: 245, column: 8, scope: !4593)
!4607 = !DILocation(line: 246, column: 2, scope: !4593)
!4608 = !DILocation(line: 249, column: 1, scope: !4593)
!4609 = !DILocation(line: 248, column: 2, scope: !4593)
!4610 = distinct !DISubprogram(name: "vsnprintk", scope: !394, file: !394, line: 251, type: !4611, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4613)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!103, !277, !132, !337, !4520}
!4613 = !{!4614, !4615, !4616, !4617, !4618}
!4614 = !DILocalVariable(name: "str", arg: 1, scope: !4610, file: !394, line: 251, type: !277)
!4615 = !DILocalVariable(name: "size", arg: 2, scope: !4610, file: !394, line: 251, type: !132)
!4616 = !DILocalVariable(name: "fmt", arg: 3, scope: !4610, file: !394, line: 251, type: !337)
!4617 = !DILocalVariable(name: "ap", arg: 4, scope: !4610, file: !394, line: 251, type: !4520)
!4618 = !DILocalVariable(name: "ctx", scope: !4610, file: !394, line: 253, type: !4619)
!4619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !394, line: 217, size: 96, elements: !4620)
!4620 = !{!4621, !4622, !4623}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4619, file: !394, line: 218, baseType: !277, size: 32)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4619, file: !394, line: 219, baseType: !103, size: 32, offset: 32)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4619, file: !394, line: 220, baseType: !103, size: 32, offset: 64)
!4624 = !DILocation(line: 0, scope: !4610)
!4625 = !DILocation(line: 253, column: 2, scope: !4610)
!4626 = !DILocation(line: 253, column: 21, scope: !4610)
!4627 = !DILocation(line: 253, column: 27, scope: !4610)
!4628 = !DILocation(line: 255, column: 2, scope: !4610)
!4629 = !DILocation(line: 257, column: 10, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4610, file: !394, line: 257, column: 6)
!4631 = !DILocation(line: 257, column: 22, scope: !4630)
!4632 = !DILocation(line: 257, column: 16, scope: !4630)
!4633 = !DILocation(line: 257, column: 6, scope: !4610)
!4634 = !DILocation(line: 258, column: 3, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4630, file: !394, line: 257, column: 27)
!4636 = !DILocation(line: 258, column: 18, scope: !4635)
!4637 = !DILocation(line: 259, column: 2, scope: !4635)
!4638 = !DILocation(line: 262, column: 1, scope: !4610)
!4639 = !DILocation(line: 261, column: 2, scope: !4610)
!4640 = distinct !DISubprogram(name: "str_out", scope: !394, file: !394, line: 223, type: !4641, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4644)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!103, !103, !4643}
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 32)
!4644 = !{!4645, !4646}
!4645 = !DILocalVariable(name: "c", arg: 1, scope: !4640, file: !394, line: 223, type: !103)
!4646 = !DILocalVariable(name: "ctx", arg: 2, scope: !4640, file: !394, line: 223, type: !4643)
!4647 = !DILocation(line: 0, scope: !4640)
!4648 = !DILocation(line: 225, column: 11, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4640, file: !394, line: 225, column: 6)
!4650 = !DILocation(line: 225, column: 15, scope: !4649)
!4651 = !DILocation(line: 0, scope: !4649)
!4652 = !DILocation(line: 225, column: 23, scope: !4649)
!4653 = !DILocation(line: 225, column: 45, scope: !4649)
!4654 = !DILocation(line: 225, column: 37, scope: !4649)
!4655 = !DILocation(line: 225, column: 6, scope: !4640)
!4656 = !DILocation(line: 226, column: 8, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4649, file: !394, line: 225, column: 50)
!4658 = !DILocation(line: 226, column: 13, scope: !4657)
!4659 = !DILocation(line: 227, column: 3, scope: !4657)
!4660 = !DILocation(line: 230, column: 29, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4640, file: !394, line: 230, column: 6)
!4662 = !DILocation(line: 230, column: 17, scope: !4661)
!4663 = !DILocation(line: 230, column: 6, scope: !4640)
!4664 = !DILocation(line: 231, column: 22, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4661, file: !394, line: 230, column: 34)
!4666 = !DILocation(line: 231, column: 3, scope: !4665)
!4667 = !DILocation(line: 231, column: 26, scope: !4665)
!4668 = !DILocation(line: 232, column: 2, scope: !4665)
!4669 = !DILocation(line: 233, column: 28, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4661, file: !394, line: 232, column: 9)
!4671 = !DILocation(line: 233, column: 22, scope: !4670)
!4672 = !DILocation(line: 233, column: 3, scope: !4670)
!4673 = !DILocation(line: 233, column: 26, scope: !4670)
!4674 = !DILocation(line: 237, column: 1, scope: !4640)
!4675 = distinct !DISubprogram(name: "z_thread_entry", scope: !4676, file: !4676, line: 30, type: !4677, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !4679)
!4676 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4677 = !DISubroutineType(types: !4678)
!4678 = !{null, !321, !102, !102, !102}
!4679 = !{!4680, !4681, !4682, !4683}
!4680 = !DILocalVariable(name: "entry", arg: 1, scope: !4675, file: !4676, line: 30, type: !321)
!4681 = !DILocalVariable(name: "p1", arg: 2, scope: !4675, file: !4676, line: 31, type: !102)
!4682 = !DILocalVariable(name: "p2", arg: 3, scope: !4675, file: !4676, line: 31, type: !102)
!4683 = !DILocalVariable(name: "p3", arg: 4, scope: !4675, file: !4676, line: 31, type: !102)
!4684 = !DILocation(line: 0, scope: !4675)
!4685 = !DILocation(line: 36, column: 2, scope: !4675)
!4686 = !DILocation(line: 38, column: 17, scope: !4675)
!4687 = !DILocation(line: 38, column: 2, scope: !4675)
!4688 = !DILocation(line: 45, column: 2, scope: !4675)
!4689 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !4690, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !251)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!4692}
!4692 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !4693)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 32)
!4694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !4695)
!4695 = !{!4696, !4754, !4766, !4767, !4768, !4769, !4775, !4788}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4694, file: !163, line: 247, baseType: !4697, size: 384)
!4697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !4698)
!4698 = !{!4699, !4723, !4730, !4731, !4732, !4741, !4742, !4743}
!4699 = !DIDerivedType(tag: DW_TAG_member, scope: !4697, file: !163, line: 60, baseType: !4700, size: 64)
!4700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4697, file: !163, line: 60, size: 64, elements: !4701)
!4701 = !{!4702, !4717}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4700, file: !163, line: 61, baseType: !4703, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !4704)
!4704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !4705)
!4705 = !{!4706, !4712}
!4706 = !DIDerivedType(tag: DW_TAG_member, scope: !4704, file: !146, line: 38, baseType: !4707, size: 32)
!4707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4704, file: !146, line: 38, size: 32, elements: !4708)
!4708 = !{!4709, !4711}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4707, file: !146, line: 39, baseType: !4710, size: 32)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 32)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4707, file: !146, line: 40, baseType: !4710, size: 32)
!4712 = !DIDerivedType(tag: DW_TAG_member, scope: !4704, file: !146, line: 42, baseType: !4713, size: 32, offset: 32)
!4713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4704, file: !146, line: 42, size: 32, elements: !4714)
!4714 = !{!4715, !4716}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4713, file: !146, line: 43, baseType: !4710, size: 32)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4713, file: !146, line: 44, baseType: !4710, size: 32)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4700, file: !163, line: 62, baseType: !4718, size: 64)
!4718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !4719)
!4719 = !{!4720}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4718, file: !175, line: 50, baseType: !4721, size: 64)
!4721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4722, size: 64, elements: !180)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 32)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4697, file: !163, line: 68, baseType: !4724, size: 32, offset: 64)
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 32)
!4725 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !4726)
!4726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !4727)
!4727 = !{!4728}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4726, file: !141, line: 232, baseType: !4729, size: 64)
!4729 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !4704)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4697, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4697, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!4732 = !DIDerivedType(tag: DW_TAG_member, scope: !4697, file: !163, line: 90, baseType: !4733, size: 16, offset: 112)
!4733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4697, file: !163, line: 90, size: 16, elements: !4734)
!4734 = !{!4735, !4740}
!4735 = !DIDerivedType(tag: DW_TAG_member, scope: !4733, file: !163, line: 91, baseType: !4736, size: 16)
!4736 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4733, file: !163, line: 91, size: 16, elements: !4737)
!4737 = !{!4738, !4739}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4736, file: !163, line: 96, baseType: !195, size: 8)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4736, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4733, file: !163, line: 100, baseType: !121, size: 16)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4697, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4697, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4697, file: !163, line: 131, baseType: !4744, size: 192, offset: 192)
!4744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !4745)
!4745 = !{!4746, !4747, !4753}
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4744, file: !141, line: 245, baseType: !4703, size: 64)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4744, file: !141, line: 246, baseType: !4748, size: 32, offset: 64)
!4748 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !4749)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 32)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{null, !4752}
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4744, size: 32)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4744, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4694, file: !163, line: 250, baseType: !4755, size: 288, offset: 384)
!4755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !4756)
!4756 = !{!4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4755, file: !214, line: 26, baseType: !108, size: 32)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4755, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4755, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4755, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4755, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4755, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4755, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4755, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4755, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4694, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4694, file: !163, line: 256, baseType: !4725, size: 64, offset: 704)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4694, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4694, file: !163, line: 300, baseType: !4770, size: 96, offset: 800)
!4770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !4771)
!4771 = !{!4772, !4773, !4774}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4770, file: !163, line: 153, baseType: !22, size: 32)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4770, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4770, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4694, file: !163, line: 325, baseType: !4776, size: 32, offset: 896)
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4777, size: 32)
!4777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !4778)
!4778 = !{!4779, !4785, !4786}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4777, file: !137, line: 5074, baseType: !4780, size: 96)
!4780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4781)
!4781 = !{!4782, !4783, !4784}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4780, file: !240, line: 57, baseType: !243, size: 32)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4780, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4780, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4777, file: !137, line: 5075, baseType: !4725, size: 64, offset: 96)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4777, file: !137, line: 5076, baseType: !4787, offset: 160)
!4787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4694, file: !163, line: 343, baseType: !4789, size: 64, offset: 928)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !4790)
!4790 = !{!4791, !4792}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4789, file: !214, line: 63, baseType: !108, size: 32)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4789, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!4793 = !DILocation(line: 535, column: 9, scope: !4689)
!4794 = !DILocation(line: 535, column: 2, scope: !4689)
!4795 = distinct !DISubprogram(name: "k_thread_abort", scope: !3611, file: !3611, line: 188, type: !4796, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !4798)
!4796 = !DISubroutineType(types: !4797)
!4797 = !{null, !4692}
!4798 = !{!4799}
!4799 = !DILocalVariable(name: "thread", arg: 1, scope: !4795, file: !3611, line: 188, type: !4692)
!4800 = !DILocation(line: 0, scope: !4795)
!4801 = !DILocation(line: 197, column: 2, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4795, file: !3611, line: 197, column: 2)
!4803 = !{i64 2154739357}
!4804 = !DILocation(line: 198, column: 2, scope: !4795)
!4805 = !DILocation(line: 199, column: 1, scope: !4795)
!4806 = distinct !DISubprogram(name: "z_current_get", scope: !3611, file: !3611, line: 173, type: !4690, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !251)
!4807 = !DILocation(line: 180, column: 2, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4806, file: !3611, line: 180, column: 2)
!4809 = !{i64 2154739289}
!4810 = !DILocation(line: 181, column: 9, scope: !4806)
!4811 = !DILocation(line: 181, column: 2, scope: !4806)
!4812 = distinct !DISubprogram(name: "sys_heap_free", scope: !4813, file: !4813, line: 163, type: !4814, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4822)
!4813 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4814 = !DISubroutineType(types: !4815)
!4815 = !{null, !4816, !102}
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 32)
!4817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4818)
!4818 = !{!4819, !4820, !4821}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4817, file: !240, line: 57, baseType: !2658, size: 32)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4817, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4817, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4822 = !{!4823, !4824, !4825, !4826}
!4823 = !DILocalVariable(name: "heap", arg: 1, scope: !4812, file: !4813, line: 163, type: !4816)
!4824 = !DILocalVariable(name: "mem", arg: 2, scope: !4812, file: !4813, line: 163, type: !102)
!4825 = !DILocalVariable(name: "h", scope: !4812, file: !4813, line: 168, type: !2658)
!4826 = !DILocalVariable(name: "c", scope: !4812, file: !4813, line: 169, type: !2663)
!4827 = !DILocation(line: 0, scope: !4812)
!4828 = !DILocation(line: 165, column: 10, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4812, file: !4813, line: 165, column: 6)
!4830 = !DILocation(line: 165, column: 6, scope: !4812)
!4831 = !DILocation(line: 168, column: 27, scope: !4812)
!4832 = !DILocation(line: 169, column: 16, scope: !4812)
!4833 = !{i32 0, i32 536870912}
!4834 = !DILocation(line: 187, column: 2, scope: !4812)
!4835 = !DILocation(line: 197, column: 2, scope: !4812)
!4836 = !DILocation(line: 198, column: 1, scope: !4812)
!4837 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4813, file: !4813, line: 157, type: !4838, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4840)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!2663, !2658, !102}
!4840 = !{!4841, !4842, !4843, !4844}
!4841 = !DILocalVariable(name: "h", arg: 1, scope: !4837, file: !4813, line: 157, type: !2658)
!4842 = !DILocalVariable(name: "p", arg: 2, scope: !4837, file: !4813, line: 157, type: !102)
!4843 = !DILocalVariable(name: "mem", scope: !4837, file: !4813, line: 159, type: !379)
!4844 = !DILocalVariable(name: "base", scope: !4837, file: !4813, line: 159, type: !379)
!4845 = !DILocation(line: 0, scope: !4837)
!4846 = !DILocation(line: 159, column: 39, scope: !4837)
!4847 = !DILocation(line: 160, column: 14, scope: !4837)
!4848 = !DILocation(line: 160, column: 38, scope: !4837)
!4849 = !DILocation(line: 160, column: 46, scope: !4837)
!4850 = !DILocation(line: 160, column: 2, scope: !4837)
!4851 = distinct !DISubprogram(name: "set_chunk_used", scope: !2645, file: !2645, line: 147, type: !4852, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4854)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{null, !2658, !2663, !131}
!4854 = !{!4855, !4856, !4857, !4858, !4859}
!4855 = !DILocalVariable(name: "h", arg: 1, scope: !4851, file: !2645, line: 147, type: !2658)
!4856 = !DILocalVariable(name: "c", arg: 2, scope: !4851, file: !2645, line: 147, type: !2663)
!4857 = !DILocalVariable(name: "used", arg: 3, scope: !4851, file: !2645, line: 147, type: !131)
!4858 = !DILocalVariable(name: "buf", scope: !4851, file: !2645, line: 149, type: !2652)
!4859 = !DILocalVariable(name: "cmem", scope: !4851, file: !2645, line: 150, type: !102)
!4860 = !DILocation(line: 0, scope: !4851)
!4861 = !DILocation(line: 149, column: 22, scope: !4851)
!4862 = !DILocation(line: 0, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !2645, line: 159, column: 7)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !2645, line: 158, column: 9)
!4865 = distinct !DILexicalBlock(scope: !4851, file: !2645, line: 152, column: 6)
!4866 = !DILocation(line: 159, column: 7, scope: !4864)
!4867 = !DILocation(line: 165, column: 1, scope: !4851)
!4868 = distinct !DISubprogram(name: "free_chunk", scope: !4813, file: !4813, line: 133, type: !4869, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4871)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{null, !2658, !2663}
!4871 = !{!4872, !4873}
!4872 = !DILocalVariable(name: "h", arg: 1, scope: !4868, file: !4813, line: 133, type: !2658)
!4873 = !DILocalVariable(name: "c", arg: 2, scope: !4868, file: !4813, line: 133, type: !2663)
!4874 = !DILocation(line: 0, scope: !4868)
!4875 = !DILocation(line: 136, column: 21, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4868, file: !4813, line: 136, column: 6)
!4877 = !DILocation(line: 136, column: 7, scope: !4876)
!4878 = !DILocation(line: 136, column: 6, scope: !4868)
!4879 = !DILocation(line: 137, column: 3, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4876, file: !4813, line: 136, column: 41)
!4881 = !DILocation(line: 138, column: 22, scope: !4880)
!4882 = !DILocation(line: 138, column: 3, scope: !4880)
!4883 = !DILocation(line: 139, column: 2, scope: !4880)
!4884 = !DILocation(line: 142, column: 21, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4868, file: !4813, line: 142, column: 6)
!4886 = !{i32 -65535, i32 536903678}
!4887 = !DILocation(line: 142, column: 7, scope: !4885)
!4888 = !DILocation(line: 142, column: 6, scope: !4868)
!4889 = !DILocation(line: 143, column: 3, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4885, file: !4813, line: 142, column: 40)
!4891 = !DILocation(line: 144, column: 19, scope: !4890)
!4892 = !DILocation(line: 144, column: 3, scope: !4890)
!4893 = !DILocation(line: 145, column: 7, scope: !4890)
!4894 = !DILocation(line: 146, column: 2, scope: !4890)
!4895 = !DILocation(line: 148, column: 2, scope: !4868)
!4896 = !DILocation(line: 149, column: 1, scope: !4868)
!4897 = distinct !DISubprogram(name: "right_chunk", scope: !2645, file: !2645, line: 204, type: !4898, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4900)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!2663, !2658, !2663}
!4900 = !{!4901, !4902}
!4901 = !DILocalVariable(name: "h", arg: 1, scope: !4897, file: !2645, line: 204, type: !2658)
!4902 = !DILocalVariable(name: "c", arg: 2, scope: !4897, file: !2645, line: 204, type: !2663)
!4903 = !DILocation(line: 0, scope: !4897)
!4904 = !DILocation(line: 206, column: 13, scope: !4897)
!4905 = !DILocation(line: 206, column: 11, scope: !4897)
!4906 = !DILocation(line: 206, column: 2, scope: !4897)
!4907 = distinct !DISubprogram(name: "chunk_used", scope: !2645, file: !2645, line: 137, type: !4908, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4910)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{!131, !2658, !2663}
!4910 = !{!4911, !4912}
!4911 = !DILocalVariable(name: "h", arg: 1, scope: !4907, file: !2645, line: 137, type: !2658)
!4912 = !DILocalVariable(name: "c", arg: 2, scope: !4907, file: !2645, line: 137, type: !2663)
!4913 = !DILocation(line: 0, scope: !4907)
!4914 = !DILocation(line: 139, column: 9, scope: !4907)
!4915 = !DILocation(line: 139, column: 42, scope: !4907)
!4916 = !DILocation(line: 139, column: 2, scope: !4907)
!4917 = distinct !DISubprogram(name: "free_list_remove", scope: !4813, file: !4813, line: 60, type: !4869, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4918)
!4918 = !{!4919, !4920, !4921}
!4919 = !DILocalVariable(name: "h", arg: 1, scope: !4917, file: !4813, line: 60, type: !2658)
!4920 = !DILocalVariable(name: "c", arg: 2, scope: !4917, file: !4813, line: 60, type: !2663)
!4921 = !DILocalVariable(name: "bidx", scope: !4922, file: !4813, line: 63, type: !103)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !4813, line: 62, column: 31)
!4923 = distinct !DILexicalBlock(scope: !4917, file: !4813, line: 62, column: 6)
!4924 = !DILocation(line: 0, scope: !4917)
!4925 = !DILocation(line: 63, column: 28, scope: !4922)
!4926 = !{i32 0, i32 32768}
!4927 = !DILocation(line: 63, column: 14, scope: !4922)
!4928 = !DILocation(line: 0, scope: !4922)
!4929 = !DILocation(line: 64, column: 3, scope: !4922)
!4930 = !DILocation(line: 66, column: 1, scope: !4917)
!4931 = distinct !DISubprogram(name: "merge_chunks", scope: !4813, file: !4813, line: 125, type: !4932, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4934)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{null, !2658, !2663, !2663}
!4934 = !{!4935, !4936, !4937, !4938}
!4935 = !DILocalVariable(name: "h", arg: 1, scope: !4931, file: !4813, line: 125, type: !2658)
!4936 = !DILocalVariable(name: "lc", arg: 2, scope: !4931, file: !4813, line: 125, type: !2663)
!4937 = !DILocalVariable(name: "rc", arg: 3, scope: !4931, file: !4813, line: 125, type: !2663)
!4938 = !DILocalVariable(name: "newsz", scope: !4931, file: !4813, line: 127, type: !4939)
!4939 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2645, line: 62, baseType: !108)
!4940 = !DILocation(line: 0, scope: !4931)
!4941 = !DILocation(line: 127, column: 20, scope: !4931)
!4942 = !DILocation(line: 127, column: 40, scope: !4931)
!4943 = !DILocation(line: 127, column: 38, scope: !4931)
!4944 = !DILocation(line: 129, column: 2, scope: !4931)
!4945 = !DILocation(line: 130, column: 25, scope: !4931)
!4946 = !DILocation(line: 130, column: 2, scope: !4931)
!4947 = !DILocation(line: 131, column: 1, scope: !4931)
!4948 = distinct !DISubprogram(name: "left_chunk", scope: !2645, file: !2645, line: 199, type: !4898, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4949)
!4949 = !{!4950, !4951}
!4950 = !DILocalVariable(name: "h", arg: 1, scope: !4948, file: !2645, line: 199, type: !2658)
!4951 = !DILocalVariable(name: "c", arg: 2, scope: !4948, file: !2645, line: 199, type: !2663)
!4952 = !DILocation(line: 0, scope: !4948)
!4953 = !DILocation(line: 201, column: 13, scope: !4948)
!4954 = !DILocation(line: 201, column: 11, scope: !4948)
!4955 = !DILocation(line: 201, column: 2, scope: !4948)
!4956 = distinct !DISubprogram(name: "free_list_add", scope: !4813, file: !4813, line: 98, type: !4869, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4957)
!4957 = !{!4958, !4959, !4960}
!4958 = !DILocalVariable(name: "h", arg: 1, scope: !4956, file: !4813, line: 98, type: !2658)
!4959 = !DILocalVariable(name: "c", arg: 2, scope: !4956, file: !4813, line: 98, type: !2663)
!4960 = !DILocalVariable(name: "bidx", scope: !4961, file: !4813, line: 101, type: !103)
!4961 = distinct !DILexicalBlock(scope: !4962, file: !4813, line: 100, column: 31)
!4962 = distinct !DILexicalBlock(scope: !4956, file: !4813, line: 100, column: 6)
!4963 = !DILocation(line: 0, scope: !4956)
!4964 = !DILocation(line: 101, column: 28, scope: !4961)
!4965 = !DILocation(line: 101, column: 14, scope: !4961)
!4966 = !DILocation(line: 0, scope: !4961)
!4967 = !DILocation(line: 102, column: 3, scope: !4961)
!4968 = !DILocation(line: 104, column: 1, scope: !4956)
!4969 = distinct !DISubprogram(name: "chunk_size", scope: !2645, file: !2645, line: 142, type: !4970, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4972)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!4939, !2658, !2663}
!4972 = !{!4973, !4974}
!4973 = !DILocalVariable(name: "h", arg: 1, scope: !4969, file: !2645, line: 142, type: !2658)
!4974 = !DILocalVariable(name: "c", arg: 2, scope: !4969, file: !2645, line: 142, type: !2663)
!4975 = !DILocation(line: 0, scope: !4969)
!4976 = !DILocation(line: 144, column: 9, scope: !4969)
!4977 = !DILocation(line: 144, column: 42, scope: !4969)
!4978 = !DILocation(line: 144, column: 2, scope: !4969)
!4979 = distinct !DISubprogram(name: "bucket_idx", scope: !2645, file: !2645, line: 250, type: !4980, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4982)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{!103, !2658, !4939}
!4982 = !{!4983, !4984, !4985}
!4983 = !DILocalVariable(name: "h", arg: 1, scope: !4979, file: !2645, line: 250, type: !2658)
!4984 = !DILocalVariable(name: "sz", arg: 2, scope: !4979, file: !2645, line: 250, type: !4939)
!4985 = !DILocalVariable(name: "usable_sz", scope: !4979, file: !2645, line: 252, type: !32)
!4986 = !DILocation(line: 0, scope: !4979)
!4987 = !DILocation(line: 252, column: 32, scope: !4979)
!4988 = !DILocation(line: 252, column: 30, scope: !4979)
!4989 = !DILocation(line: 252, column: 50, scope: !4979)
!4990 = !DILocation(line: 253, column: 14, scope: !4979)
!4991 = !{i32 0, i32 33}
!4992 = !DILocation(line: 253, column: 12, scope: !4979)
!4993 = !DILocation(line: 253, column: 2, scope: !4979)
!4994 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4813, file: !4813, line: 68, type: !4995, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !4997)
!4995 = !DISubroutineType(types: !4996)
!4996 = !{null, !2658, !2663, !103}
!4997 = !{!4998, !4999, !5000, !5001, !5003, !5006}
!4998 = !DILocalVariable(name: "h", arg: 1, scope: !4994, file: !4813, line: 68, type: !2658)
!4999 = !DILocalVariable(name: "c", arg: 2, scope: !4994, file: !4813, line: 68, type: !2663)
!5000 = !DILocalVariable(name: "bidx", arg: 3, scope: !4994, file: !4813, line: 68, type: !103)
!5001 = !DILocalVariable(name: "b", scope: !4994, file: !4813, line: 70, type: !5002)
!5002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 32)
!5003 = !DILocalVariable(name: "second", scope: !5004, file: !4813, line: 84, type: !2663)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !4813, line: 80, column: 9)
!5005 = distinct !DILexicalBlock(scope: !4994, file: !4813, line: 72, column: 6)
!5006 = !DILocalVariable(name: "first", scope: !5004, file: !4813, line: 85, type: !2663)
!5007 = !DILocation(line: 0, scope: !4994)
!5008 = !DILocation(line: 72, column: 9, scope: !5005)
!5009 = !DILocation(line: 72, column: 14, scope: !5005)
!5010 = !DILocation(line: 72, column: 6, scope: !4994)
!5011 = !DILocation(line: 76, column: 23, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5005, file: !4813, line: 72, column: 21)
!5013 = !DILocation(line: 76, column: 6, scope: !5012)
!5014 = !DILocation(line: 76, column: 20, scope: !5012)
!5015 = !DILocation(line: 77, column: 11, scope: !5012)
!5016 = !DILocation(line: 78, column: 3, scope: !5012)
!5017 = !DILocation(line: 79, column: 3, scope: !5012)
!5018 = !DILocation(line: 80, column: 2, scope: !5012)
!5019 = !DILocation(line: 0, scope: !5004)
!5020 = !DILocation(line: 85, column: 21, scope: !5004)
!5021 = !{i32 0, i32 65536}
!5022 = !DILocation(line: 87, column: 3, scope: !5004)
!5023 = !DILocation(line: 88, column: 3, scope: !5004)
!5024 = !DILocation(line: 89, column: 3, scope: !5004)
!5025 = !DILocation(line: 90, column: 3, scope: !5004)
!5026 = !DILocation(line: 96, column: 1, scope: !4994)
!5027 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2645, file: !2645, line: 187, type: !4932, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5028)
!5028 = !{!5029, !5030, !5031}
!5029 = !DILocalVariable(name: "h", arg: 1, scope: !5027, file: !2645, line: 187, type: !2658)
!5030 = !DILocalVariable(name: "c", arg: 2, scope: !5027, file: !2645, line: 187, type: !2663)
!5031 = !DILocalVariable(name: "prev", arg: 3, scope: !5027, file: !2645, line: 188, type: !2663)
!5032 = !DILocation(line: 0, scope: !5027)
!5033 = !DILocation(line: 190, column: 2, scope: !5027)
!5034 = !DILocation(line: 191, column: 1, scope: !5027)
!5035 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2645, file: !2645, line: 193, type: !4932, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5036)
!5036 = !{!5037, !5038, !5039}
!5037 = !DILocalVariable(name: "h", arg: 1, scope: !5035, file: !2645, line: 193, type: !2658)
!5038 = !DILocalVariable(name: "c", arg: 2, scope: !5035, file: !2645, line: 193, type: !2663)
!5039 = !DILocalVariable(name: "next", arg: 3, scope: !5035, file: !2645, line: 194, type: !2663)
!5040 = !DILocation(line: 0, scope: !5035)
!5041 = !DILocation(line: 196, column: 2, scope: !5035)
!5042 = !DILocation(line: 197, column: 1, scope: !5035)
!5043 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2645, file: !2645, line: 177, type: !4898, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5044)
!5044 = !{!5045, !5046}
!5045 = !DILocalVariable(name: "h", arg: 1, scope: !5043, file: !2645, line: 177, type: !2658)
!5046 = !DILocalVariable(name: "c", arg: 2, scope: !5043, file: !2645, line: 177, type: !2663)
!5047 = !DILocation(line: 0, scope: !5043)
!5048 = !DILocation(line: 179, column: 9, scope: !5043)
!5049 = !DILocation(line: 179, column: 2, scope: !5043)
!5050 = distinct !DISubprogram(name: "chunk_field", scope: !2645, file: !2645, line: 107, type: !5051, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5053)
!5051 = !DISubroutineType(types: !5052)
!5052 = !{!2663, !2658, !2663, !2644}
!5053 = !{!5054, !5055, !5056, !5057, !5058}
!5054 = !DILocalVariable(name: "h", arg: 1, scope: !5050, file: !2645, line: 107, type: !2658)
!5055 = !DILocalVariable(name: "c", arg: 2, scope: !5050, file: !2645, line: 107, type: !2663)
!5056 = !DILocalVariable(name: "f", arg: 3, scope: !5050, file: !2645, line: 108, type: !2644)
!5057 = !DILocalVariable(name: "buf", scope: !5050, file: !2645, line: 110, type: !2652)
!5058 = !DILocalVariable(name: "cmem", scope: !5050, file: !2645, line: 111, type: !102)
!5059 = !DILocation(line: 0, scope: !5050)
!5060 = !DILocation(line: 110, column: 22, scope: !5050)
!5061 = !DILocation(line: 111, column: 15, scope: !5050)
!5062 = !DILocation(line: 116, column: 11, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !2645, line: 115, column: 9)
!5064 = distinct !DILexicalBlock(scope: !5050, file: !2645, line: 113, column: 6)
!5065 = !DILocation(line: 116, column: 10, scope: !5063)
!5066 = !DILocation(line: 118, column: 1, scope: !5050)
!5067 = distinct !DISubprogram(name: "chunk_buf", scope: !2645, file: !2645, line: 101, type: !5068, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5070)
!5068 = !DISubroutineType(types: !5069)
!5069 = !{!2652, !2658}
!5070 = !{!5071}
!5071 = !DILocalVariable(name: "h", arg: 1, scope: !5067, file: !2645, line: 101, type: !2658)
!5072 = !DILocation(line: 0, scope: !5067)
!5073 = !DILocation(line: 104, column: 9, scope: !5067)
!5074 = !DILocation(line: 104, column: 2, scope: !5067)
!5075 = distinct !DISubprogram(name: "chunk_set", scope: !2645, file: !2645, line: 120, type: !5076, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5078)
!5076 = !DISubroutineType(types: !5077)
!5077 = !{null, !2658, !2663, !2644, !2663}
!5078 = !{!5079, !5080, !5081, !5082, !5083, !5084}
!5079 = !DILocalVariable(name: "h", arg: 1, scope: !5075, file: !2645, line: 120, type: !2658)
!5080 = !DILocalVariable(name: "c", arg: 2, scope: !5075, file: !2645, line: 120, type: !2663)
!5081 = !DILocalVariable(name: "f", arg: 3, scope: !5075, file: !2645, line: 121, type: !2644)
!5082 = !DILocalVariable(name: "val", arg: 4, scope: !5075, file: !2645, line: 121, type: !2663)
!5083 = !DILocalVariable(name: "buf", scope: !5075, file: !2645, line: 125, type: !2652)
!5084 = !DILocalVariable(name: "cmem", scope: !5075, file: !2645, line: 126, type: !102)
!5085 = !DILocation(line: 0, scope: !5075)
!5086 = !DILocation(line: 125, column: 22, scope: !5075)
!5087 = !DILocation(line: 126, column: 15, scope: !5075)
!5088 = !DILocation(line: 133, column: 27, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !2645, line: 131, column: 9)
!5090 = distinct !DILexicalBlock(scope: !5075, file: !2645, line: 128, column: 6)
!5091 = !DILocation(line: 133, column: 4, scope: !5089)
!5092 = !DILocation(line: 133, column: 3, scope: !5089)
!5093 = !DILocation(line: 133, column: 25, scope: !5089)
!5094 = !DILocation(line: 135, column: 1, scope: !5075)
!5095 = distinct !DISubprogram(name: "min_chunk_size", scope: !2645, file: !2645, line: 240, type: !5096, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5098)
!5096 = !DISubroutineType(types: !5097)
!5097 = !{!4939, !2658}
!5098 = !{!5099}
!5099 = !DILocalVariable(name: "h", arg: 1, scope: !5095, file: !2645, line: 240, type: !2658)
!5100 = !DILocation(line: 0, scope: !5095)
!5101 = !DILocation(line: 242, column: 9, scope: !5095)
!5102 = !DILocation(line: 242, column: 2, scope: !5095)
!5103 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2645, file: !2645, line: 235, type: !5104, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5106)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{!4939, !2658, !132}
!5106 = !{!5107, !5108}
!5107 = !DILocalVariable(name: "h", arg: 1, scope: !5103, file: !2645, line: 235, type: !2658)
!5108 = !DILocalVariable(name: "bytes", arg: 2, scope: !5103, file: !2645, line: 235, type: !132)
!5109 = !DILocation(line: 0, scope: !5103)
!5110 = !DILocation(line: 237, column: 39, scope: !5103)
!5111 = !DILocation(line: 237, column: 9, scope: !5103)
!5112 = !DILocation(line: 237, column: 2, scope: !5103)
!5113 = distinct !DISubprogram(name: "chunksz", scope: !2645, file: !2645, line: 230, type: !5114, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5116)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!4939, !132}
!5116 = !{!5117}
!5117 = !DILocalVariable(name: "bytes", arg: 1, scope: !5113, file: !2645, line: 230, type: !132)
!5118 = !DILocation(line: 0, scope: !5113)
!5119 = !DILocation(line: 232, column: 29, scope: !5113)
!5120 = !DILocation(line: 232, column: 35, scope: !5113)
!5121 = !DILocation(line: 232, column: 2, scope: !5113)
!5122 = distinct !DISubprogram(name: "set_chunk_size", scope: !2645, file: !2645, line: 172, type: !5123, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5125)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{null, !2658, !2663, !4939}
!5125 = !{!5126, !5127, !5128}
!5126 = !DILocalVariable(name: "h", arg: 1, scope: !5122, file: !2645, line: 172, type: !2658)
!5127 = !DILocalVariable(name: "c", arg: 2, scope: !5122, file: !2645, line: 172, type: !2663)
!5128 = !DILocalVariable(name: "size", arg: 3, scope: !5122, file: !2645, line: 172, type: !4939)
!5129 = !DILocation(line: 0, scope: !5122)
!5130 = !DILocation(line: 174, column: 38, scope: !5122)
!5131 = !DILocation(line: 174, column: 2, scope: !5122)
!5132 = !DILocation(line: 175, column: 1, scope: !5122)
!5133 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2645, file: !2645, line: 209, type: !5123, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5134)
!5134 = !{!5135, !5136, !5137}
!5135 = !DILocalVariable(name: "h", arg: 1, scope: !5133, file: !2645, line: 209, type: !2658)
!5136 = !DILocalVariable(name: "c", arg: 2, scope: !5133, file: !2645, line: 209, type: !2663)
!5137 = !DILocalVariable(name: "size", arg: 3, scope: !5133, file: !2645, line: 210, type: !4939)
!5138 = !DILocation(line: 0, scope: !5133)
!5139 = !DILocation(line: 212, column: 2, scope: !5133)
!5140 = !DILocation(line: 213, column: 1, scope: !5133)
!5141 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4813, file: !4813, line: 34, type: !4995, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5142)
!5142 = !{!5143, !5144, !5145, !5146, !5147, !5150}
!5143 = !DILocalVariable(name: "h", arg: 1, scope: !5141, file: !4813, line: 34, type: !2658)
!5144 = !DILocalVariable(name: "c", arg: 2, scope: !5141, file: !4813, line: 34, type: !2663)
!5145 = !DILocalVariable(name: "bidx", arg: 3, scope: !5141, file: !4813, line: 34, type: !103)
!5146 = !DILocalVariable(name: "b", scope: !5141, file: !4813, line: 36, type: !5002)
!5147 = !DILocalVariable(name: "first", scope: !5148, file: !4813, line: 47, type: !2663)
!5148 = distinct !DILexicalBlock(scope: !5149, file: !4813, line: 46, column: 9)
!5149 = distinct !DILexicalBlock(scope: !5141, file: !4813, line: 42, column: 6)
!5150 = !DILocalVariable(name: "second", scope: !5148, file: !4813, line: 48, type: !2663)
!5151 = !DILocation(line: 0, scope: !5141)
!5152 = !DILocation(line: 36, column: 29, scope: !5141)
!5153 = !DILocation(line: 42, column: 6, scope: !5149)
!5154 = !DILocation(line: 42, column: 28, scope: !5149)
!5155 = !DILocation(line: 42, column: 6, scope: !5141)
!5156 = !DILocation(line: 44, column: 24, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5149, file: !4813, line: 42, column: 34)
!5158 = !DILocation(line: 44, column: 23, scope: !5157)
!5159 = !DILocation(line: 44, column: 6, scope: !5157)
!5160 = !DILocation(line: 44, column: 20, scope: !5157)
!5161 = !DILocation(line: 45, column: 6, scope: !5157)
!5162 = !DILocation(line: 45, column: 11, scope: !5157)
!5163 = !DILocation(line: 46, column: 2, scope: !5157)
!5164 = !DILocation(line: 47, column: 21, scope: !5148)
!5165 = !DILocation(line: 0, scope: !5148)
!5166 = !DILocation(line: 50, column: 6, scope: !5148)
!5167 = !DILocation(line: 50, column: 11, scope: !5148)
!5168 = !DILocation(line: 51, column: 3, scope: !5148)
!5169 = !DILocation(line: 52, column: 3, scope: !5148)
!5170 = !DILocation(line: 58, column: 1, scope: !5141)
!5171 = distinct !DISubprogram(name: "next_free_chunk", scope: !2645, file: !2645, line: 182, type: !4898, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5172)
!5172 = !{!5173, !5174}
!5173 = !DILocalVariable(name: "h", arg: 1, scope: !5171, file: !2645, line: 182, type: !2658)
!5174 = !DILocalVariable(name: "c", arg: 2, scope: !5171, file: !2645, line: 182, type: !2663)
!5175 = !DILocation(line: 0, scope: !5171)
!5176 = !DILocation(line: 184, column: 9, scope: !5171)
!5177 = !DILocation(line: 184, column: 2, scope: !5171)
!5178 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4813, file: !4813, line: 200, type: !5179, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5181)
!5179 = !DISubroutineType(types: !5180)
!5180 = !{!132, !4816, !102}
!5181 = !{!5182, !5183, !5184, !5185, !5186, !5187, !5188}
!5182 = !DILocalVariable(name: "heap", arg: 1, scope: !5178, file: !4813, line: 200, type: !4816)
!5183 = !DILocalVariable(name: "mem", arg: 2, scope: !5178, file: !4813, line: 200, type: !102)
!5184 = !DILocalVariable(name: "h", scope: !5178, file: !4813, line: 202, type: !2658)
!5185 = !DILocalVariable(name: "c", scope: !5178, file: !4813, line: 203, type: !2663)
!5186 = !DILocalVariable(name: "addr", scope: !5178, file: !4813, line: 204, type: !132)
!5187 = !DILocalVariable(name: "chunk_base", scope: !5178, file: !4813, line: 205, type: !132)
!5188 = !DILocalVariable(name: "chunk_sz", scope: !5178, file: !4813, line: 206, type: !132)
!5189 = !DILocation(line: 0, scope: !5178)
!5190 = !DILocation(line: 202, column: 27, scope: !5178)
!5191 = !DILocation(line: 203, column: 16, scope: !5178)
!5192 = !DILocation(line: 204, column: 16, scope: !5178)
!5193 = !DILocation(line: 205, column: 31, scope: !5178)
!5194 = !DILocation(line: 205, column: 22, scope: !5178)
!5195 = !DILocation(line: 206, column: 20, scope: !5178)
!5196 = !DILocation(line: 206, column: 37, scope: !5178)
!5197 = !DILocation(line: 208, column: 26, scope: !5178)
!5198 = !DILocation(line: 208, column: 18, scope: !5178)
!5199 = !DILocation(line: 208, column: 2, scope: !5178)
!5200 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4813, file: !4813, line: 263, type: !5201, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5203)
!5201 = !DISubroutineType(types: !5202)
!5202 = !{!102, !4816, !132}
!5203 = !{!5204, !5205, !5206, !5207, !5208, !5209}
!5204 = !DILocalVariable(name: "heap", arg: 1, scope: !5200, file: !4813, line: 263, type: !4816)
!5205 = !DILocalVariable(name: "bytes", arg: 2, scope: !5200, file: !4813, line: 263, type: !132)
!5206 = !DILocalVariable(name: "h", scope: !5200, file: !4813, line: 265, type: !2658)
!5207 = !DILocalVariable(name: "mem", scope: !5200, file: !4813, line: 266, type: !102)
!5208 = !DILocalVariable(name: "chunk_sz", scope: !5200, file: !4813, line: 272, type: !4939)
!5209 = !DILocalVariable(name: "c", scope: !5200, file: !4813, line: 273, type: !2663)
!5210 = !DILocation(line: 0, scope: !5200)
!5211 = !DILocation(line: 265, column: 27, scope: !5200)
!5212 = !DILocation(line: 268, column: 12, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5200, file: !4813, line: 268, column: 6)
!5214 = !DILocation(line: 268, column: 18, scope: !5213)
!5215 = !DILocation(line: 268, column: 21, scope: !5213)
!5216 = !DILocation(line: 268, column: 6, scope: !5200)
!5217 = !DILocation(line: 272, column: 23, scope: !5200)
!5218 = !DILocation(line: 273, column: 16, scope: !5200)
!5219 = !DILocation(line: 274, column: 8, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5200, file: !4813, line: 274, column: 6)
!5221 = !DILocation(line: 274, column: 6, scope: !5200)
!5222 = !DILocation(line: 279, column: 6, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5200, file: !4813, line: 279, column: 6)
!5224 = !DILocation(line: 279, column: 23, scope: !5223)
!5225 = !DILocation(line: 279, column: 6, scope: !5200)
!5226 = !DILocation(line: 280, column: 24, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5223, file: !4813, line: 279, column: 35)
!5228 = !DILocation(line: 280, column: 3, scope: !5227)
!5229 = !DILocation(line: 281, column: 3, scope: !5227)
!5230 = !DILocation(line: 282, column: 2, scope: !5227)
!5231 = !DILocation(line: 284, column: 2, scope: !5200)
!5232 = !DILocation(line: 286, column: 8, scope: !5200)
!5233 = !DILocation(line: 298, column: 2, scope: !5200)
!5234 = !DILocation(line: 299, column: 1, scope: !5200)
!5235 = distinct !DISubprogram(name: "size_too_big", scope: !2645, file: !2645, line: 256, type: !5236, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5238)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{!131, !2658, !132}
!5238 = !{!5239, !5240}
!5239 = !DILocalVariable(name: "h", arg: 1, scope: !5235, file: !2645, line: 256, type: !2658)
!5240 = !DILocalVariable(name: "bytes", arg: 2, scope: !5235, file: !2645, line: 256, type: !132)
!5241 = !DILocation(line: 0, scope: !5235)
!5242 = !DILocation(line: 262, column: 16, scope: !5235)
!5243 = !DILocation(line: 262, column: 36, scope: !5235)
!5244 = !DILocation(line: 262, column: 30, scope: !5235)
!5245 = !DILocation(line: 262, column: 2, scope: !5235)
!5246 = distinct !DISubprogram(name: "alloc_chunk", scope: !4813, file: !4813, line: 211, type: !5247, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5249)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!2663, !2658, !4939}
!5249 = !{!5250, !5251, !5252, !5253, !5254, !5257, !5258, !5260, !5261, !5264}
!5250 = !DILocalVariable(name: "h", arg: 1, scope: !5246, file: !4813, line: 211, type: !2658)
!5251 = !DILocalVariable(name: "sz", arg: 2, scope: !5246, file: !4813, line: 211, type: !4939)
!5252 = !DILocalVariable(name: "bi", scope: !5246, file: !4813, line: 213, type: !103)
!5253 = !DILocalVariable(name: "b", scope: !5246, file: !4813, line: 214, type: !5002)
!5254 = !DILocalVariable(name: "first", scope: !5255, file: !4813, line: 233, type: !2663)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !4813, line: 232, column: 15)
!5256 = distinct !DILexicalBlock(scope: !5246, file: !4813, line: 232, column: 6)
!5257 = !DILocalVariable(name: "i", scope: !5255, file: !4813, line: 234, type: !103)
!5258 = !DILocalVariable(name: "c", scope: !5259, file: !4813, line: 236, type: !2663)
!5259 = distinct !DILexicalBlock(scope: !5255, file: !4813, line: 235, column: 6)
!5260 = !DILocalVariable(name: "bmask", scope: !5246, file: !4813, line: 249, type: !108)
!5261 = !DILocalVariable(name: "minbucket", scope: !5262, file: !4813, line: 252, type: !103)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !4813, line: 251, column: 19)
!5263 = distinct !DILexicalBlock(scope: !5246, file: !4813, line: 251, column: 6)
!5264 = !DILocalVariable(name: "c", scope: !5262, file: !4813, line: 253, type: !2663)
!5265 = !DILocation(line: 0, scope: !5246)
!5266 = !DILocation(line: 213, column: 11, scope: !5246)
!5267 = !DILocation(line: 232, column: 9, scope: !5256)
!5268 = !DILocation(line: 232, column: 6, scope: !5256)
!5269 = !DILocation(line: 232, column: 6, scope: !5246)
!5270 = !DILocation(line: 236, column: 21, scope: !5259)
!5271 = !DILocation(line: 0, scope: !5255)
!5272 = !DILocation(line: 0, scope: !5259)
!5273 = !DILocation(line: 237, column: 8, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5259, file: !4813, line: 237, column: 8)
!5275 = !DILocation(line: 237, column: 25, scope: !5274)
!5276 = !DILocation(line: 237, column: 8, scope: !5259)
!5277 = !DILocation(line: 238, column: 5, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5274, file: !4813, line: 237, column: 32)
!5279 = !DILocation(line: 241, column: 14, scope: !5259)
!5280 = !DILocation(line: 241, column: 12, scope: !5259)
!5281 = !DILocation(line: 243, column: 12, scope: !5255)
!5282 = !DILocation(line: 243, column: 16, scope: !5255)
!5283 = distinct !{!5283, !5284, !5285}
!5284 = !DILocation(line: 235, column: 3, scope: !5255)
!5285 = !DILocation(line: 243, column: 35, scope: !5255)
!5286 = !DILocation(line: 249, column: 22, scope: !5246)
!5287 = !DILocation(line: 249, column: 39, scope: !5246)
!5288 = !DILocation(line: 249, column: 36, scope: !5246)
!5289 = !DILocation(line: 251, column: 12, scope: !5263)
!5290 = !DILocation(line: 251, column: 6, scope: !5246)
!5291 = !DILocation(line: 252, column: 19, scope: !5262)
!5292 = !DILocation(line: 0, scope: !5262)
!5293 = !DILocation(line: 253, column: 39, scope: !5262)
!5294 = !DILocation(line: 255, column: 3, scope: !5262)
!5295 = !DILocation(line: 261, column: 1, scope: !5246)
!5296 = distinct !DISubprogram(name: "split_chunks", scope: !4813, file: !4813, line: 109, type: !4932, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5297)
!5297 = !{!5298, !5299, !5300, !5301, !5302, !5303}
!5298 = !DILocalVariable(name: "h", arg: 1, scope: !5296, file: !4813, line: 109, type: !2658)
!5299 = !DILocalVariable(name: "lc", arg: 2, scope: !5296, file: !4813, line: 109, type: !2663)
!5300 = !DILocalVariable(name: "rc", arg: 3, scope: !5296, file: !4813, line: 109, type: !2663)
!5301 = !DILocalVariable(name: "sz0", scope: !5296, file: !4813, line: 114, type: !4939)
!5302 = !DILocalVariable(name: "lsz", scope: !5296, file: !4813, line: 115, type: !4939)
!5303 = !DILocalVariable(name: "rsz", scope: !5296, file: !4813, line: 116, type: !4939)
!5304 = !DILocation(line: 0, scope: !5296)
!5305 = !DILocation(line: 114, column: 18, scope: !5296)
!5306 = !DILocation(line: 115, column: 21, scope: !5296)
!5307 = !DILocation(line: 116, column: 22, scope: !5296)
!5308 = !DILocation(line: 118, column: 2, scope: !5296)
!5309 = !DILocation(line: 119, column: 2, scope: !5296)
!5310 = !DILocation(line: 120, column: 2, scope: !5296)
!5311 = !DILocation(line: 121, column: 25, scope: !5296)
!5312 = !DILocation(line: 121, column: 2, scope: !5296)
!5313 = !DILocation(line: 122, column: 1, scope: !5296)
!5314 = distinct !DISubprogram(name: "chunk_mem", scope: !4813, file: !4813, line: 24, type: !5315, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5317)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{!102, !2658, !2663}
!5317 = !{!5318, !5319, !5320, !5321}
!5318 = !DILocalVariable(name: "h", arg: 1, scope: !5314, file: !4813, line: 24, type: !2658)
!5319 = !DILocalVariable(name: "c", arg: 2, scope: !5314, file: !4813, line: 24, type: !2663)
!5320 = !DILocalVariable(name: "buf", scope: !5314, file: !4813, line: 26, type: !2652)
!5321 = !DILocalVariable(name: "ret", scope: !5314, file: !4813, line: 27, type: !379)
!5322 = !DILocation(line: 0, scope: !5314)
!5323 = !DILocation(line: 26, column: 22, scope: !5314)
!5324 = !DILocation(line: 27, column: 38, scope: !5314)
!5325 = !DILocation(line: 31, column: 2, scope: !5314)
!5326 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4813, file: !4813, line: 301, type: !5327, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5329)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{!102, !4816, !132, !132}
!5329 = !{!5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341}
!5330 = !DILocalVariable(name: "heap", arg: 1, scope: !5326, file: !4813, line: 301, type: !4816)
!5331 = !DILocalVariable(name: "align", arg: 2, scope: !5326, file: !4813, line: 301, type: !132)
!5332 = !DILocalVariable(name: "bytes", arg: 3, scope: !5326, file: !4813, line: 301, type: !132)
!5333 = !DILocalVariable(name: "h", scope: !5326, file: !4813, line: 303, type: !2658)
!5334 = !DILocalVariable(name: "gap", scope: !5326, file: !4813, line: 304, type: !132)
!5335 = !DILocalVariable(name: "rew", scope: !5326, file: !4813, line: 304, type: !132)
!5336 = !DILocalVariable(name: "padded_sz", scope: !5326, file: !4813, line: 335, type: !4939)
!5337 = !DILocalVariable(name: "c0", scope: !5326, file: !4813, line: 336, type: !2663)
!5338 = !DILocalVariable(name: "mem", scope: !5326, file: !4813, line: 341, type: !379)
!5339 = !DILocalVariable(name: "end", scope: !5326, file: !4813, line: 345, type: !2652)
!5340 = !DILocalVariable(name: "c", scope: !5326, file: !4813, line: 348, type: !2663)
!5341 = !DILocalVariable(name: "c_end", scope: !5326, file: !4813, line: 349, type: !2663)
!5342 = !DILocation(line: 0, scope: !5326)
!5343 = !DILocation(line: 303, column: 27, scope: !5326)
!5344 = !DILocation(line: 313, column: 16, scope: !5326)
!5345 = !DILocation(line: 313, column: 14, scope: !5326)
!5346 = !DILocation(line: 314, column: 12, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5326, file: !4813, line: 314, column: 6)
!5348 = !DILocation(line: 314, column: 6, scope: !5326)
!5349 = !DILocation(line: 315, column: 9, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5347, file: !4813, line: 314, column: 20)
!5351 = !DILocation(line: 316, column: 9, scope: !5350)
!5352 = !DILocation(line: 318, column: 13, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5354, file: !4813, line: 318, column: 7)
!5354 = distinct !DILexicalBlock(scope: !5347, file: !4813, line: 317, column: 9)
!5355 = !DILocation(line: 318, column: 7, scope: !5354)
!5356 = !DILocation(line: 319, column: 11, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5353, file: !4813, line: 318, column: 39)
!5358 = !DILocation(line: 319, column: 4, scope: !5357)
!5359 = !DILocation(line: 0, scope: !5347)
!5360 = !DILocation(line: 326, column: 12, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5326, file: !4813, line: 326, column: 6)
!5362 = !DILocation(line: 326, column: 17, scope: !5361)
!5363 = !DILocation(line: 326, column: 20, scope: !5361)
!5364 = !DILocation(line: 326, column: 6, scope: !5326)
!5365 = !DILocation(line: 335, column: 50, scope: !5326)
!5366 = !DILocation(line: 335, column: 58, scope: !5326)
!5367 = !DILocation(line: 335, column: 24, scope: !5326)
!5368 = !DILocation(line: 336, column: 17, scope: !5326)
!5369 = !DILocation(line: 338, column: 9, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5326, file: !4813, line: 338, column: 6)
!5371 = !DILocation(line: 338, column: 6, scope: !5326)
!5372 = !DILocation(line: 341, column: 17, scope: !5326)
!5373 = !DILocation(line: 344, column: 20, scope: !5326)
!5374 = !DILocation(line: 344, column: 8, scope: !5326)
!5375 = !DILocation(line: 344, column: 47, scope: !5326)
!5376 = !DILocation(line: 345, column: 39, scope: !5326)
!5377 = !DILocation(line: 348, column: 16, scope: !5326)
!5378 = !DILocation(line: 349, column: 26, scope: !5326)
!5379 = !DILocation(line: 349, column: 24, scope: !5326)
!5380 = !DILocation(line: 353, column: 8, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5326, file: !4813, line: 353, column: 6)
!5382 = !DILocation(line: 353, column: 6, scope: !5326)
!5383 = !DILocation(line: 354, column: 3, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5381, file: !4813, line: 353, column: 14)
!5385 = !DILocation(line: 355, column: 3, scope: !5384)
!5386 = !DILocation(line: 356, column: 2, scope: !5384)
!5387 = !DILocation(line: 359, column: 6, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5326, file: !4813, line: 359, column: 6)
!5389 = !DILocation(line: 359, column: 24, scope: !5388)
!5390 = !DILocation(line: 359, column: 6, scope: !5326)
!5391 = !DILocation(line: 360, column: 3, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5388, file: !4813, line: 359, column: 33)
!5393 = !DILocation(line: 361, column: 3, scope: !5392)
!5394 = !DILocation(line: 362, column: 2, scope: !5392)
!5395 = !DILocation(line: 364, column: 2, scope: !5326)
!5396 = !DILocation(line: 377, column: 1, scope: !5326)
!5397 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4813, file: !4813, line: 379, type: !5398, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5400)
!5398 = !DISubroutineType(types: !5399)
!5399 = !{!102, !4816, !102, !132, !132}
!5400 = !{!5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5416, !5417}
!5401 = !DILocalVariable(name: "heap", arg: 1, scope: !5397, file: !4813, line: 379, type: !4816)
!5402 = !DILocalVariable(name: "ptr", arg: 2, scope: !5397, file: !4813, line: 379, type: !102)
!5403 = !DILocalVariable(name: "align", arg: 3, scope: !5397, file: !4813, line: 380, type: !132)
!5404 = !DILocalVariable(name: "bytes", arg: 4, scope: !5397, file: !4813, line: 380, type: !132)
!5405 = !DILocalVariable(name: "h", scope: !5397, file: !4813, line: 382, type: !2658)
!5406 = !DILocalVariable(name: "c", scope: !5397, file: !4813, line: 399, type: !2663)
!5407 = !DILocalVariable(name: "rc", scope: !5397, file: !4813, line: 400, type: !2663)
!5408 = !DILocalVariable(name: "align_gap", scope: !5397, file: !4813, line: 401, type: !132)
!5409 = !DILocalVariable(name: "chunks_need", scope: !5397, file: !4813, line: 402, type: !4939)
!5410 = !DILocalVariable(name: "split_size", scope: !5411, file: !4813, line: 435, type: !4939)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !4813, line: 433, column: 61)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !4813, line: 432, column: 13)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !4813, line: 409, column: 13)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !4813, line: 406, column: 13)
!5415 = distinct !DILexicalBlock(scope: !5397, file: !4813, line: 404, column: 6)
!5416 = !DILocalVariable(name: "ptr2", scope: !5397, file: !4813, line: 474, type: !102)
!5417 = !DILocalVariable(name: "prev_size", scope: !5418, file: !4813, line: 477, type: !132)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !4813, line: 476, column: 20)
!5419 = distinct !DILexicalBlock(scope: !5397, file: !4813, line: 476, column: 6)
!5420 = !DILocation(line: 0, scope: !5397)
!5421 = !DILocation(line: 382, column: 27, scope: !5397)
!5422 = !DILocation(line: 385, column: 10, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5397, file: !4813, line: 385, column: 6)
!5424 = !DILocation(line: 385, column: 6, scope: !5397)
!5425 = !DILocation(line: 386, column: 10, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5423, file: !4813, line: 385, column: 19)
!5427 = !DILocation(line: 386, column: 3, scope: !5426)
!5428 = !DILocation(line: 388, column: 12, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5397, file: !4813, line: 388, column: 6)
!5430 = !DILocation(line: 388, column: 6, scope: !5397)
!5431 = !DILocation(line: 389, column: 3, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5429, file: !4813, line: 388, column: 18)
!5433 = !DILocation(line: 390, column: 3, scope: !5432)
!5434 = !DILocation(line: 395, column: 6, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5397, file: !4813, line: 395, column: 6)
!5436 = !DILocation(line: 395, column: 6, scope: !5397)
!5437 = !DILocation(line: 399, column: 16, scope: !5397)
!5438 = !DILocation(line: 400, column: 17, scope: !5397)
!5439 = !DILocation(line: 401, column: 49, scope: !5397)
!5440 = !DILocation(line: 401, column: 36, scope: !5397)
!5441 = !DILocation(line: 402, column: 52, scope: !5397)
!5442 = !DILocation(line: 402, column: 26, scope: !5397)
!5443 = !DILocation(line: 404, column: 6, scope: !5415)
!5444 = !DILocation(line: 404, column: 12, scope: !5415)
!5445 = !DILocation(line: 404, column: 40, scope: !5415)
!5446 = !DILocation(line: 404, column: 31, scope: !5415)
!5447 = !DILocation(line: 404, column: 6, scope: !5397)
!5448 = !DILocation(line: 406, column: 13, scope: !5414)
!5449 = !DILocation(line: 406, column: 30, scope: !5414)
!5450 = !DILocation(line: 406, column: 13, scope: !5415)
!5451 = !DILocation(line: 409, column: 30, scope: !5413)
!5452 = !DILocation(line: 409, column: 13, scope: !5414)
!5453 = !DILocation(line: 420, column: 24, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5413, file: !4813, line: 409, column: 45)
!5455 = !DILocation(line: 420, column: 3, scope: !5454)
!5456 = !DILocation(line: 421, column: 3, scope: !5454)
!5457 = !DILocation(line: 422, column: 3, scope: !5454)
!5458 = !DILocation(line: 431, column: 3, scope: !5454)
!5459 = !DILocation(line: 432, column: 14, scope: !5412)
!5460 = !DILocation(line: 432, column: 32, scope: !5412)
!5461 = !DILocation(line: 433, column: 26, scope: !5412)
!5462 = !DILocation(line: 433, column: 24, scope: !5412)
!5463 = !DILocation(line: 433, column: 44, scope: !5412)
!5464 = !DILocation(line: 432, column: 13, scope: !5413)
!5465 = !DILocation(line: 435, column: 38, scope: !5411)
!5466 = !DILocation(line: 0, scope: !5411)
!5467 = !DILocation(line: 445, column: 3, scope: !5411)
!5468 = !DILocation(line: 447, column: 20, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5411, file: !4813, line: 447, column: 7)
!5470 = !DILocation(line: 447, column: 18, scope: !5469)
!5471 = !DILocation(line: 447, column: 7, scope: !5411)
!5472 = !DILocation(line: 448, column: 27, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5469, file: !4813, line: 447, column: 39)
!5474 = !DILocation(line: 448, column: 4, scope: !5473)
!5475 = !DILocation(line: 449, column: 4, scope: !5473)
!5476 = !DILocation(line: 450, column: 3, scope: !5473)
!5477 = !DILocation(line: 452, column: 3, scope: !5411)
!5478 = !DILocation(line: 453, column: 3, scope: !5411)
!5479 = !DILocation(line: 474, column: 15, scope: !5397)
!5480 = !DILocation(line: 476, column: 11, scope: !5419)
!5481 = !DILocation(line: 476, column: 6, scope: !5397)
!5482 = !DILocation(line: 477, column: 42, scope: !5418)
!5483 = !DILocation(line: 477, column: 22, scope: !5418)
!5484 = !DILocation(line: 477, column: 60, scope: !5418)
!5485 = !DILocation(line: 0, scope: !5418)
!5486 = !DILocation(line: 479, column: 21, scope: !5418)
!5487 = !DILocation(line: 479, column: 3, scope: !5418)
!5488 = !DILocation(line: 480, column: 3, scope: !5418)
!5489 = !DILocation(line: 481, column: 2, scope: !5418)
!5490 = !DILocation(line: 483, column: 1, scope: !5397)
!5491 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2645, file: !2645, line: 245, type: !5492, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5494)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{!132, !2658, !4939}
!5494 = !{!5495, !5496}
!5495 = !DILocalVariable(name: "h", arg: 1, scope: !5491, file: !2645, line: 245, type: !2658)
!5496 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5491, file: !2645, line: 245, type: !4939)
!5497 = !DILocation(line: 0, scope: !5491)
!5498 = !DILocation(line: 247, column: 20, scope: !5491)
!5499 = !DILocation(line: 247, column: 33, scope: !5491)
!5500 = !DILocation(line: 247, column: 2, scope: !5491)
!5501 = distinct !DISubprogram(name: "sys_heap_init", scope: !4813, file: !4813, line: 485, type: !5502, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !5504)
!5502 = !DISubroutineType(types: !5503)
!5503 = !{null, !4816, !102, !132}
!5504 = !{!5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514}
!5505 = !DILocalVariable(name: "heap", arg: 1, scope: !5501, file: !4813, line: 485, type: !4816)
!5506 = !DILocalVariable(name: "mem", arg: 2, scope: !5501, file: !4813, line: 485, type: !102)
!5507 = !DILocalVariable(name: "bytes", arg: 3, scope: !5501, file: !4813, line: 485, type: !132)
!5508 = !DILocalVariable(name: "addr", scope: !5501, file: !4813, line: 502, type: !22)
!5509 = !DILocalVariable(name: "end", scope: !5501, file: !4813, line: 503, type: !22)
!5510 = !DILocalVariable(name: "heap_sz", scope: !5501, file: !4813, line: 504, type: !4939)
!5511 = !DILocalVariable(name: "h", scope: !5501, file: !4813, line: 509, type: !2658)
!5512 = !DILocalVariable(name: "nb_buckets", scope: !5501, file: !4813, line: 520, type: !103)
!5513 = !DILocalVariable(name: "chunk0_size", scope: !5501, file: !4813, line: 521, type: !4939)
!5514 = !DILocalVariable(name: "i", scope: !5515, file: !4813, line: 526, type: !103)
!5515 = distinct !DILexicalBlock(scope: !5501, file: !4813, line: 526, column: 2)
!5516 = !DILocation(line: 0, scope: !5501)
!5517 = !DILocation(line: 499, column: 8, scope: !5501)
!5518 = !DILocation(line: 502, column: 19, scope: !5501)
!5519 = !DILocation(line: 503, column: 18, scope: !5501)
!5520 = !DILocation(line: 504, column: 27, scope: !5501)
!5521 = !DILocation(line: 504, column: 35, scope: !5501)
!5522 = !DILocation(line: 509, column: 21, scope: !5501)
!5523 = !DILocation(line: 510, column: 8, scope: !5501)
!5524 = !DILocation(line: 510, column: 13, scope: !5501)
!5525 = !DILocation(line: 511, column: 5, scope: !5501)
!5526 = !DILocation(line: 511, column: 15, scope: !5501)
!5527 = !DILocation(line: 512, column: 5, scope: !5501)
!5528 = !DILocation(line: 512, column: 19, scope: !5501)
!5529 = !DILocation(line: 520, column: 19, scope: !5501)
!5530 = !DILocation(line: 522, column: 21, scope: !5501)
!5531 = !DILocation(line: 521, column: 56, scope: !5501)
!5532 = !DILocation(line: 521, column: 26, scope: !5501)
!5533 = !DILocation(line: 0, scope: !5515)
!5534 = !DILocation(line: 526, column: 20, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5515, file: !4813, line: 526, column: 2)
!5536 = !DILocation(line: 526, column: 2, scope: !5515)
!5537 = !DILocation(line: 531, column: 2, scope: !5501)
!5538 = !DILocation(line: 532, column: 2, scope: !5501)
!5539 = !DILocation(line: 533, column: 2, scope: !5501)
!5540 = !DILocation(line: 536, column: 41, scope: !5501)
!5541 = !DILocation(line: 536, column: 2, scope: !5501)
!5542 = !DILocation(line: 537, column: 2, scope: !5501)
!5543 = !DILocation(line: 540, column: 2, scope: !5501)
!5544 = !DILocation(line: 541, column: 2, scope: !5501)
!5545 = !DILocation(line: 542, column: 2, scope: !5501)
!5546 = !DILocation(line: 544, column: 2, scope: !5501)
!5547 = !DILocation(line: 545, column: 1, scope: !5501)
!5548 = !DILocation(line: 527, column: 17, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5535, file: !4813, line: 526, column: 39)
!5550 = !DILocation(line: 527, column: 22, scope: !5549)
!5551 = !DILocation(line: 526, column: 35, scope: !5535)
!5552 = distinct !{!5552, !5536, !5553}
!5553 = !DILocation(line: 528, column: 2, scope: !5515)
!5554 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2678, file: !2678, line: 1338, type: !5555, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !5563)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{!103, !4011, !102, !337, !5557, !108}
!5557 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3650, line: 99, baseType: !5558)
!5558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3650, line: 40, baseType: !5559)
!5559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2678, baseType: !5560)
!5560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5561)
!5561 = !{!5562}
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5560, file: !2678, baseType: !102, size: 32)
!5563 = !{!5564, !5565, !5566, !5567, !5568, !5569, !5573, !5574, !5575, !5577, !5582, !5625, !5628, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5640, !5641, !5642, !5646, !5649, !5651, !5654, !5655, !5656, !5661, !5667, !5670, !5674, !5680, !5684, !5687, !5689, !5692}
!5564 = !DILocalVariable(name: "out", arg: 1, scope: !5554, file: !2678, line: 1338, type: !4011)
!5565 = !DILocalVariable(name: "ctx", arg: 2, scope: !5554, file: !2678, line: 1338, type: !102)
!5566 = !DILocalVariable(name: "fp", arg: 3, scope: !5554, file: !2678, line: 1338, type: !337)
!5567 = !DILocalVariable(name: "ap", arg: 4, scope: !5554, file: !2678, line: 1339, type: !5557)
!5568 = !DILocalVariable(name: "flags", arg: 5, scope: !5554, file: !2678, line: 1339, type: !108)
!5569 = !DILocalVariable(name: "buf", scope: !5554, file: !2678, line: 1341, type: !5570)
!5570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 176, elements: !5571)
!5571 = !{!5572}
!5572 = !DISubrange(count: 22)
!5573 = !DILocalVariable(name: "count", scope: !5554, file: !2678, line: 1342, type: !132)
!5574 = !DILocalVariable(name: "sint", scope: !5554, file: !2678, line: 1343, type: !2697)
!5575 = !DILocalVariable(name: "tagged_ap", scope: !5554, file: !2678, line: 1345, type: !5576)
!5576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!5577 = !DILocalVariable(name: "rc", scope: !5578, file: !2678, line: 1377, type: !103)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !2678, line: 1377, column: 4)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !2678, line: 1376, column: 19)
!5580 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1376, column: 7)
!5581 = distinct !DILexicalBlock(scope: !5554, file: !2678, line: 1375, column: 19)
!5582 = !DILocalVariable(name: "state", scope: !5581, file: !2678, line: 1395, type: !5583)
!5583 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5554, file: !2678, line: 1392, size: 192, elements: !5584)
!5584 = !{!5585, !5593}
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5583, file: !2678, line: 1393, baseType: !5586, size: 64)
!5586 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2678, line: 166, size: 64, elements: !5587)
!5587 = !{!5588, !5589, !5590, !5591, !5592}
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5586, file: !2678, line: 168, baseType: !2697, size: 64)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5586, file: !2678, line: 171, baseType: !2700, size: 64)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5586, file: !2678, line: 174, baseType: !372, size: 64)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5586, file: !2678, line: 177, baseType: !370, size: 64)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5586, file: !2678, line: 180, baseType: !102, size: 32)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5583, file: !2678, line: 1394, baseType: !5594, size: 96, offset: 64)
!5594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2678, line: 189, size: 96, elements: !5595)
!5595 = !{!5596, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5620}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5594, file: !2678, line: 191, baseType: !131, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5594, file: !2678, line: 194, baseType: !131, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5594, file: !2678, line: 197, baseType: !131, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5594, file: !2678, line: 200, baseType: !131, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5594, file: !2678, line: 203, baseType: !131, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5594, file: !2678, line: 206, baseType: !131, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5594, file: !2678, line: 209, baseType: !131, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5594, file: !2678, line: 212, baseType: !131, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5594, file: !2678, line: 219, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5594, file: !2678, line: 222, baseType: !131, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5594, file: !2678, line: 229, baseType: !131, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5594, file: !2678, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5594, file: !2678, line: 238, baseType: !131, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5594, file: !2678, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5594, file: !2678, line: 244, baseType: !131, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5594, file: !2678, line: 247, baseType: !131, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5594, file: !2678, line: 252, baseType: !131, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5594, file: !2678, line: 257, baseType: !131, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5594, file: !2678, line: 260, baseType: !186, size: 8, offset: 24)
!5615 = !DIDerivedType(tag: DW_TAG_member, scope: !5594, file: !2678, line: 262, baseType: !5616, size: 32, offset: 32)
!5616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5594, file: !2678, line: 262, size: 32, elements: !5617)
!5617 = !{!5618, !5619}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5616, file: !2678, line: 267, baseType: !103, size: 32)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5616, file: !2678, line: 289, baseType: !103, size: 32)
!5620 = !DIDerivedType(tag: DW_TAG_member, scope: !5594, file: !2678, line: 292, baseType: !5621, size: 32, offset: 64)
!5621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5594, file: !2678, line: 292, size: 32, elements: !5622)
!5622 = !{!5623, !5624}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5621, file: !2678, line: 297, baseType: !103, size: 32)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5621, file: !2678, line: 306, baseType: !103, size: 32)
!5625 = !DILocalVariable(name: "conv", scope: !5581, file: !2678, line: 1400, type: !5626)
!5626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5627)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5594, size: 32)
!5628 = !DILocalVariable(name: "value", scope: !5581, file: !2678, line: 1401, type: !5629)
!5629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5630)
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 32)
!5631 = !DILocalVariable(name: "sp", scope: !5581, file: !2678, line: 1402, type: !337)
!5632 = !DILocalVariable(name: "width", scope: !5581, file: !2678, line: 1403, type: !103)
!5633 = !DILocalVariable(name: "precision", scope: !5581, file: !2678, line: 1404, type: !103)
!5634 = !DILocalVariable(name: "bps", scope: !5581, file: !2678, line: 1405, type: !337)
!5635 = !DILocalVariable(name: "bpe", scope: !5581, file: !2678, line: 1406, type: !337)
!5636 = !DILocalVariable(name: "sign", scope: !5581, file: !2678, line: 1407, type: !278)
!5637 = !DILocalVariable(name: "arg", scope: !5638, file: !2678, line: 1432, type: !103)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !2678, line: 1431, column: 24)
!5639 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1431, column: 7)
!5640 = !DILocalVariable(name: "specifier_cat", scope: !5581, file: !2678, line: 1468, type: !2677)
!5641 = !DILocalVariable(name: "length_mod", scope: !5581, file: !2678, line: 1470, type: !2685)
!5642 = !DILocalVariable(name: "rc", scope: !5643, file: !2678, line: 1575, type: !103)
!5643 = distinct !DILexicalBlock(scope: !5644, file: !2678, line: 1575, column: 4)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !2678, line: 1574, column: 43)
!5645 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1574, column: 7)
!5646 = !DILocalVariable(name: "rc", scope: !5647, file: !2678, line: 1584, type: !103)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !2678, line: 1584, column: 4)
!5648 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1582, column: 28)
!5649 = !DILocalVariable(name: "len", scope: !5650, file: !2678, line: 1589, type: !132)
!5650 = distinct !DILexicalBlock(scope: !5648, file: !2678, line: 1586, column: 13)
!5651 = !DILocalVariable(name: "len", scope: !5652, file: !2678, line: 1641, type: !132)
!5652 = distinct !DILexicalBlock(scope: !5653, file: !2678, line: 1640, column: 24)
!5653 = distinct !DILexicalBlock(scope: !5648, file: !2678, line: 1640, column: 8)
!5654 = !DILocalVariable(name: "nj_len", scope: !5581, file: !2678, line: 1722, type: !132)
!5655 = !DILocalVariable(name: "pad_len", scope: !5581, file: !2678, line: 1723, type: !103)
!5656 = !DILocalVariable(name: "pad", scope: !5657, file: !2678, line: 1751, type: !278)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !2678, line: 1750, column: 26)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !2678, line: 1750, column: 8)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !2678, line: 1747, column: 18)
!5660 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1747, column: 7)
!5661 = !DILocalVariable(name: "rc", scope: !5662, file: !2678, line: 1758, type: !103)
!5662 = distinct !DILexicalBlock(scope: !5663, file: !2678, line: 1758, column: 7)
!5663 = distinct !DILexicalBlock(scope: !5664, file: !2678, line: 1757, column: 21)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !2678, line: 1757, column: 10)
!5665 = distinct !DILexicalBlock(scope: !5666, file: !2678, line: 1756, column: 26)
!5666 = distinct !DILexicalBlock(scope: !5657, file: !2678, line: 1756, column: 9)
!5667 = !DILocalVariable(name: "rc", scope: !5668, file: !2678, line: 1765, type: !103)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !2678, line: 1765, column: 6)
!5669 = distinct !DILexicalBlock(scope: !5657, file: !2678, line: 1764, column: 25)
!5670 = !DILocalVariable(name: "rc", scope: !5671, file: !2678, line: 1774, type: !103)
!5671 = distinct !DILexicalBlock(scope: !5672, file: !2678, line: 1774, column: 4)
!5672 = distinct !DILexicalBlock(scope: !5673, file: !2678, line: 1773, column: 18)
!5673 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1773, column: 7)
!5674 = !DILocalVariable(name: "rc", scope: !5675, file: !2678, line: 1819, type: !103)
!5675 = distinct !DILexicalBlock(scope: !5676, file: !2678, line: 1819, column: 5)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !2678, line: 1818, column: 44)
!5677 = distinct !DILexicalBlock(scope: !5678, file: !2678, line: 1818, column: 8)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !2678, line: 1817, column: 10)
!5679 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1777, column: 7)
!5680 = !DILocalVariable(name: "rc", scope: !5681, file: !2678, line: 1823, type: !103)
!5681 = distinct !DILexicalBlock(scope: !5682, file: !2678, line: 1823, column: 5)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !2678, line: 1822, column: 26)
!5683 = distinct !DILexicalBlock(scope: !5678, file: !2678, line: 1822, column: 8)
!5684 = !DILocalVariable(name: "rc", scope: !5685, file: !2678, line: 1828, type: !103)
!5685 = distinct !DILexicalBlock(scope: !5686, file: !2678, line: 1828, column: 5)
!5686 = distinct !DILexicalBlock(scope: !5678, file: !2678, line: 1827, column: 26)
!5687 = !DILocalVariable(name: "rc", scope: !5688, file: !2678, line: 1831, type: !103)
!5688 = distinct !DILexicalBlock(scope: !5678, file: !2678, line: 1831, column: 4)
!5689 = !DILocalVariable(name: "rc", scope: !5690, file: !2678, line: 1836, type: !103)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !2678, line: 1836, column: 4)
!5691 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1835, column: 21)
!5692 = !DILabel(scope: !5648, name: "prec_int_pad0", file: !2678, line: 1634)
!5693 = !DILocation(line: 0, scope: !5554)
!5694 = !DILocation(line: 1341, column: 2, scope: !5554)
!5695 = !DILocation(line: 1341, column: 7, scope: !5554)
!5696 = !DILocation(line: 1375, column: 2, scope: !5554)
!5697 = !DILocation(line: 1342, column: 9, scope: !5554)
!5698 = !DILocation(line: 1375, column: 9, scope: !5554)
!5699 = !DILocation(line: 1377, column: 4, scope: !5578)
!5700 = !DILocation(line: 0, scope: !5578)
!5701 = !DILocation(line: 1377, column: 4, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5578, file: !2678, line: 1377, column: 4)
!5703 = distinct !{!5703, !5696, !5704}
!5704 = !DILocation(line: 1839, column: 2, scope: !5554)
!5705 = !DILocation(line: 1392, column: 3, scope: !5581)
!5706 = !DILocation(line: 1395, column: 5, scope: !5581)
!5707 = !DILocation(line: 0, scope: !5581)
!5708 = !DILocation(line: 1409, column: 8, scope: !5581)
!5709 = !DILocation(line: 1414, column: 13, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1414, column: 7)
!5711 = !DILocation(line: 1414, column: 7, scope: !5581)
!5712 = !DILocation(line: 1415, column: 12, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5710, file: !2678, line: 1414, column: 25)
!5714 = !DILocation(line: 1417, column: 14, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5713, file: !2678, line: 1417, column: 8)
!5716 = !DILocation(line: 1417, column: 8, scope: !5713)
!5717 = !DILocation(line: 1418, column: 21, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5715, file: !2678, line: 1417, column: 19)
!5719 = !DILocation(line: 1419, column: 13, scope: !5718)
!5720 = !DILocation(line: 1420, column: 4, scope: !5718)
!5721 = !DILocation(line: 1421, column: 20, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5710, file: !2678, line: 1421, column: 14)
!5723 = !DILocation(line: 1421, column: 14, scope: !5710)
!5724 = !DILocation(line: 1431, column: 13, scope: !5639)
!5725 = !DILocation(line: 1431, column: 7, scope: !5581)
!5726 = !DILocation(line: 1432, column: 14, scope: !5638)
!5727 = !DILocation(line: 0, scope: !5638)
!5728 = !DILocation(line: 1434, column: 12, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5638, file: !2678, line: 1434, column: 8)
!5730 = !DILocation(line: 1434, column: 8, scope: !5638)
!5731 = !DILocation(line: 1435, column: 24, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5729, file: !2678, line: 1434, column: 17)
!5733 = !DILocation(line: 1436, column: 4, scope: !5732)
!5734 = !DILocation(line: 1439, column: 20, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5639, file: !2678, line: 1439, column: 14)
!5736 = !DILocation(line: 1439, column: 14, scope: !5639)
!5737 = !DILocation(line: 1469, column: 37, scope: !5581)
!5738 = !DILocation(line: 1448, column: 20, scope: !5581)
!5739 = !DILocation(line: 1449, column: 22, scope: !5581)
!5740 = !DILocation(line: 1471, column: 34, scope: !5581)
!5741 = !DILocation(line: 1478, column: 7, scope: !5581)
!5742 = !DILocation(line: 1479, column: 4, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !2678, line: 1478, column: 40)
!5744 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1478, column: 7)
!5745 = !DILocation(line: 1484, column: 19, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5743, file: !2678, line: 1479, column: 24)
!5747 = !DILocation(line: 1484, column: 17, scope: !5746)
!5748 = !DILocation(line: 1485, column: 5, scope: !5746)
!5749 = !DILocation(line: 1492, column: 20, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !2678, line: 1491, column: 12)
!5751 = distinct !DILexicalBlock(scope: !5746, file: !2678, line: 1487, column: 9)
!5752 = !DILocation(line: 1492, column: 18, scope: !5750)
!5753 = !DILocation(line: 1494, column: 5, scope: !5746)
!5754 = !DILocation(line: 1497, column: 23, scope: !5746)
!5755 = !DILocation(line: 1496, column: 17, scope: !5746)
!5756 = !DILocation(line: 1498, column: 5, scope: !5746)
!5757 = !DILocation(line: 1501, column: 23, scope: !5746)
!5758 = !DILocation(line: 1500, column: 17, scope: !5746)
!5759 = !DILocation(line: 1502, column: 5, scope: !5746)
!5760 = !DILocation(line: 1513, column: 23, scope: !5746)
!5761 = !DILocation(line: 1513, column: 6, scope: !5746)
!5762 = !DILocation(line: 1512, column: 17, scope: !5746)
!5763 = !DILocation(line: 1514, column: 5, scope: !5746)
!5764 = !DILocation(line: 0, scope: !5746)
!5765 = !DILocation(line: 1516, column: 8, scope: !5743)
!5766 = !DILocation(line: 1517, column: 19, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !2678, line: 1516, column: 33)
!5768 = distinct !DILexicalBlock(scope: !5743, file: !2678, line: 1516, column: 8)
!5769 = !DILocation(line: 1517, column: 17, scope: !5767)
!5770 = !DILocation(line: 1518, column: 4, scope: !5767)
!5771 = !DILocation(line: 1519, column: 19, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5773, file: !2678, line: 1518, column: 39)
!5773 = distinct !DILexicalBlock(scope: !5768, file: !2678, line: 1518, column: 15)
!5774 = !DILocation(line: 1519, column: 17, scope: !5772)
!5775 = !DILocation(line: 1520, column: 4, scope: !5772)
!5776 = !DILocation(line: 1522, column: 4, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5778, file: !2678, line: 1521, column: 47)
!5778 = distinct !DILexicalBlock(scope: !5744, file: !2678, line: 1521, column: 14)
!5779 = !DILocation(line: 1527, column: 19, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5777, file: !2678, line: 1522, column: 24)
!5781 = !DILocation(line: 1527, column: 17, scope: !5780)
!5782 = !DILocation(line: 1528, column: 5, scope: !5780)
!5783 = !DILocation(line: 0, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5780, file: !2678, line: 1530, column: 9)
!5785 = !DILocation(line: 1540, column: 23, scope: !5780)
!5786 = !DILocation(line: 1539, column: 17, scope: !5780)
!5787 = !DILocation(line: 1542, column: 5, scope: !5780)
!5788 = !DILocation(line: 1545, column: 23, scope: !5780)
!5789 = !DILocation(line: 1544, column: 17, scope: !5780)
!5790 = !DILocation(line: 1547, column: 5, scope: !5780)
!5791 = !DILocation(line: 1551, column: 23, scope: !5780)
!5792 = !DILocation(line: 1551, column: 6, scope: !5780)
!5793 = !DILocation(line: 1550, column: 17, scope: !5780)
!5794 = !DILocation(line: 1552, column: 5, scope: !5780)
!5795 = !DILocation(line: 0, scope: !5780)
!5796 = !DILocation(line: 1554, column: 8, scope: !5777)
!5797 = !DILocation(line: 1555, column: 19, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5799, file: !2678, line: 1554, column: 33)
!5799 = distinct !DILexicalBlock(scope: !5777, file: !2678, line: 1554, column: 8)
!5800 = !DILocation(line: 1555, column: 17, scope: !5798)
!5801 = !DILocation(line: 1556, column: 4, scope: !5798)
!5802 = !DILocation(line: 1557, column: 19, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5804, file: !2678, line: 1556, column: 39)
!5804 = distinct !DILexicalBlock(scope: !5799, file: !2678, line: 1556, column: 15)
!5805 = !DILocation(line: 1557, column: 17, scope: !5803)
!5806 = !DILocation(line: 1558, column: 4, scope: !5803)
!5807 = !DILocation(line: 0, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !2678, line: 1560, column: 8)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !2678, line: 1559, column: 45)
!5810 = distinct !DILexicalBlock(scope: !5778, file: !2678, line: 1559, column: 14)
!5811 = !DILocation(line: 1566, column: 17, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !2678, line: 1565, column: 46)
!5813 = distinct !DILexicalBlock(scope: !5810, file: !2678, line: 1565, column: 14)
!5814 = !DILocation(line: 1566, column: 15, scope: !5812)
!5815 = !DILocation(line: 1567, column: 3, scope: !5812)
!5816 = !DILocation(line: 1574, column: 21, scope: !5645)
!5817 = !DILocation(line: 1575, column: 4, scope: !5643)
!5818 = !DILocation(line: 0, scope: !5643)
!5819 = !DILocation(line: 1575, column: 4, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5643, file: !2678, line: 1575, column: 4)
!5821 = !DILocation(line: 1582, column: 17, scope: !5581)
!5822 = !DILocation(line: 1582, column: 3, scope: !5581)
!5823 = !DILocation(line: 1584, column: 4, scope: !5647)
!5824 = !DILocation(line: 0, scope: !5647)
!5825 = !DILocation(line: 1584, column: 4, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5647, file: !2678, line: 1584, column: 4)
!5827 = !DILocation(line: 1587, column: 31, scope: !5650)
!5828 = !DILocation(line: 1591, column: 18, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5650, file: !2678, line: 1591, column: 8)
!5830 = !DILocation(line: 1591, column: 8, scope: !5650)
!5831 = !DILocation(line: 1592, column: 11, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5829, file: !2678, line: 1591, column: 24)
!5833 = !DILocation(line: 0, scope: !5650)
!5834 = !DILocation(line: 1593, column: 4, scope: !5832)
!5835 = !DILocation(line: 1594, column: 11, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5829, file: !2678, line: 1593, column: 11)
!5837 = !DILocation(line: 1604, column: 51, scope: !5648)
!5838 = !DILocation(line: 1604, column: 13, scope: !5648)
!5839 = !DILocation(line: 1604, column: 11, scope: !5648)
!5840 = !DILocation(line: 1606, column: 4, scope: !5648)
!5841 = !DILocation(line: 1609, column: 14, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5648, file: !2678, line: 1609, column: 8)
!5843 = !DILocation(line: 1609, column: 8, scope: !5648)
!5844 = !DILocation(line: 1619, column: 18, scope: !5648)
!5845 = !DILocation(line: 1620, column: 13, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5648, file: !2678, line: 1620, column: 8)
!5847 = !DILocation(line: 1620, column: 8, scope: !5648)
!5848 = !DILocation(line: 1622, column: 36, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5846, file: !2678, line: 1620, column: 18)
!5850 = !DILocation(line: 1622, column: 17, scope: !5849)
!5851 = !DILocation(line: 1623, column: 4, scope: !5849)
!5852 = !DILocation(line: 1632, column: 29, scope: !5648)
!5853 = !DILocation(line: 1632, column: 10, scope: !5648)
!5854 = !DILocation(line: 1632, column: 4, scope: !5648)
!5855 = !DILocation(line: 1407, column: 8, scope: !5581)
!5856 = !DILocation(line: 0, scope: !5648)
!5857 = !DILocation(line: 1634, column: 3, scope: !5648)
!5858 = !DILocation(line: 1640, column: 18, scope: !5653)
!5859 = !DILocation(line: 1640, column: 8, scope: !5648)
!5860 = !DILocation(line: 1729, column: 13, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1729, column: 7)
!5862 = !DILocation(line: 1641, column: 22, scope: !5652)
!5863 = !DILocation(line: 0, scope: !5652)
!5864 = !DILocation(line: 1646, column: 21, scope: !5652)
!5865 = !DILocation(line: 1649, column: 13, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5652, file: !2678, line: 1649, column: 9)
!5867 = !DILocation(line: 1649, column: 9, scope: !5652)
!5868 = !DILocation(line: 1650, column: 35, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5866, file: !2678, line: 1649, column: 34)
!5870 = !DILocation(line: 1650, column: 23, scope: !5869)
!5871 = !DILocation(line: 1651, column: 5, scope: !5869)
!5872 = !DILocation(line: 1660, column: 15, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5648, file: !2678, line: 1660, column: 8)
!5874 = !DILocation(line: 1660, column: 19, scope: !5873)
!5875 = !DILocation(line: 1660, column: 8, scope: !5648)
!5876 = !DILocation(line: 1661, column: 23, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5873, file: !2678, line: 1660, column: 28)
!5878 = !DILocation(line: 1661, column: 11, scope: !5877)
!5879 = !DILocation(line: 1665, column: 22, scope: !5877)
!5880 = !DILocation(line: 1666, column: 21, scope: !5877)
!5881 = !DILocation(line: 1668, column: 5, scope: !5877)
!5882 = !DILocation(line: 1677, column: 30, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !2678, line: 1676, column: 49)
!5884 = distinct !DILexicalBlock(scope: !5648, file: !2678, line: 1676, column: 8)
!5885 = !DILocation(line: 1677, column: 5, scope: !5883)
!5886 = !DILocation(line: 1680, column: 4, scope: !5648)
!5887 = !DILocation(line: 0, scope: !5829)
!5888 = !DILocation(line: 1597, column: 14, scope: !5650)
!5889 = !DILocation(line: 1699, column: 11, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1699, column: 7)
!5891 = !DILocation(line: 1699, column: 7, scope: !5581)
!5892 = !DILocation(line: 1725, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1725, column: 7)
!5894 = !DILocation(line: 1725, column: 12, scope: !5893)
!5895 = !DILocation(line: 1747, column: 13, scope: !5660)
!5896 = !DILocation(line: 1747, column: 7, scope: !5581)
!5897 = !DILocation(line: 1722, column: 24, scope: !5581)
!5898 = !DILocation(line: 1725, column: 7, scope: !5581)
!5899 = !DILocation(line: 1729, column: 7, scope: !5581)
!5900 = !DILocation(line: 1736, column: 13, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5581, file: !2678, line: 1736, column: 7)
!5902 = !DILocation(line: 1735, column: 19, scope: !5581)
!5903 = !DILocation(line: 1736, column: 7, scope: !5581)
!5904 = !DILocation(line: 1748, column: 10, scope: !5659)
!5905 = !DILocation(line: 1750, column: 15, scope: !5658)
!5906 = !DILocation(line: 1750, column: 8, scope: !5659)
!5907 = !DILocation(line: 0, scope: !5657)
!5908 = !DILocation(line: 1756, column: 15, scope: !5666)
!5909 = !DILocation(line: 1756, column: 9, scope: !5657)
!5910 = !DILocation(line: 1758, column: 7, scope: !5662)
!5911 = !DILocation(line: 0, scope: !5662)
!5912 = !DILocation(line: 1758, column: 7, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5662, file: !2678, line: 1758, column: 7)
!5914 = !DILocation(line: 1764, column: 5, scope: !5657)
!5915 = !DILocation(line: 0, scope: !5659)
!5916 = !DILocation(line: 1764, column: 20, scope: !5657)
!5917 = !DILocation(line: 1764, column: 17, scope: !5657)
!5918 = !DILocation(line: 1765, column: 6, scope: !5668)
!5919 = !DILocation(line: 0, scope: !5668)
!5920 = !DILocation(line: 1765, column: 6, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5668, file: !2678, line: 1765, column: 6)
!5922 = distinct !{!5922, !5914, !5923}
!5923 = !DILocation(line: 1766, column: 5, scope: !5657)
!5924 = !DILocation(line: 1773, column: 12, scope: !5673)
!5925 = !DILocation(line: 1773, column: 7, scope: !5581)
!5926 = !DILocation(line: 1773, column: 7, scope: !5673)
!5927 = !DILocation(line: 1774, column: 4, scope: !5671)
!5928 = !DILocation(line: 0, scope: !5671)
!5929 = !DILocation(line: 1774, column: 4, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5671, file: !2678, line: 1774, column: 4)
!5931 = !DILocation(line: 1818, column: 8, scope: !5677)
!5932 = !DILocation(line: 1818, column: 27, scope: !5677)
!5933 = !DILocation(line: 1818, column: 25, scope: !5677)
!5934 = !DILocation(line: 1818, column: 8, scope: !5678)
!5935 = !DILocation(line: 1819, column: 5, scope: !5675)
!5936 = !DILocation(line: 0, scope: !5675)
!5937 = !DILocation(line: 1819, column: 5, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5675, file: !2678, line: 1819, column: 5)
!5939 = !DILocation(line: 1822, column: 14, scope: !5683)
!5940 = !DILocation(line: 1822, column: 8, scope: !5678)
!5941 = !DILocation(line: 1823, column: 5, scope: !5681)
!5942 = !DILocation(line: 0, scope: !5681)
!5943 = !DILocation(line: 1823, column: 5, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5681, file: !2678, line: 1823, column: 5)
!5945 = !DILocation(line: 1826, column: 20, scope: !5678)
!5946 = !DILocation(line: 1827, column: 4, scope: !5678)
!5947 = !DILocation(line: 0, scope: !5678)
!5948 = !DILocation(line: 1827, column: 21, scope: !5678)
!5949 = !DILocation(line: 1827, column: 18, scope: !5678)
!5950 = !DILocation(line: 1828, column: 5, scope: !5685)
!5951 = !DILocation(line: 0, scope: !5685)
!5952 = !DILocation(line: 1828, column: 5, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5685, file: !2678, line: 1828, column: 5)
!5954 = distinct !{!5954, !5946, !5955}
!5955 = !DILocation(line: 1829, column: 4, scope: !5678)
!5956 = !DILocation(line: 1831, column: 4, scope: !5688)
!5957 = !DILocation(line: 0, scope: !5688)
!5958 = !DILocation(line: 1831, column: 4, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5688, file: !2678, line: 1831, column: 4)
!5960 = !DILocation(line: 1835, column: 16, scope: !5581)
!5961 = !DILocation(line: 1835, column: 3, scope: !5581)
!5962 = !DILocation(line: 1836, column: 4, scope: !5690)
!5963 = !DILocation(line: 0, scope: !5690)
!5964 = !DILocation(line: 1836, column: 4, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5690, file: !2678, line: 1836, column: 4)
!5966 = !DILocation(line: 1837, column: 4, scope: !5691)
!5967 = distinct !{!5967, !5961, !5968}
!5968 = !DILocation(line: 1838, column: 3, scope: !5581)
!5969 = !DILocation(line: 1844, column: 1, scope: !5554)
!5970 = distinct !DISubprogram(name: "extract_conversion", scope: !2678, file: !2678, line: 642, type: !5971, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !5973)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{!337, !5627, !337}
!5973 = !{!5974, !5975}
!5974 = !DILocalVariable(name: "conv", arg: 1, scope: !5970, file: !2678, line: 642, type: !5627)
!5975 = !DILocalVariable(name: "sp", arg: 2, scope: !5970, file: !2678, line: 643, type: !337)
!5976 = !DILocation(line: 0, scope: !5970)
!5977 = !DILocation(line: 645, column: 10, scope: !5970)
!5978 = !DILocation(line: 653, column: 2, scope: !5970)
!5979 = !DILocation(line: 654, column: 6, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5970, file: !2678, line: 654, column: 6)
!5981 = !DILocation(line: 654, column: 10, scope: !5980)
!5982 = !DILocation(line: 654, column: 6, scope: !5970)
!5983 = !DILocation(line: 655, column: 24, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5980, file: !2678, line: 654, column: 18)
!5985 = !DILocation(line: 655, column: 19, scope: !5984)
!5986 = !DILocation(line: 656, column: 3, scope: !5984)
!5987 = !DILocation(line: 659, column: 7, scope: !5970)
!5988 = !DILocation(line: 660, column: 7, scope: !5970)
!5989 = !DILocation(line: 661, column: 7, scope: !5970)
!5990 = !DILocation(line: 662, column: 7, scope: !5970)
!5991 = !DILocation(line: 663, column: 7, scope: !5970)
!5992 = !DILocation(line: 665, column: 2, scope: !5970)
!5993 = !DILocation(line: 666, column: 1, scope: !5970)
!5994 = distinct !DISubprogram(name: "outs", scope: !2678, file: !2678, line: 1319, type: !5995, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !5997)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{!103, !4011, !102, !337, !337}
!5997 = !{!5998, !5999, !6000, !6001, !6002, !6003}
!5998 = !DILocalVariable(name: "out", arg: 1, scope: !5994, file: !2678, line: 1319, type: !4011)
!5999 = !DILocalVariable(name: "ctx", arg: 2, scope: !5994, file: !2678, line: 1320, type: !102)
!6000 = !DILocalVariable(name: "sp", arg: 3, scope: !5994, file: !2678, line: 1321, type: !337)
!6001 = !DILocalVariable(name: "ep", arg: 4, scope: !5994, file: !2678, line: 1322, type: !337)
!6002 = !DILocalVariable(name: "count", scope: !5994, file: !2678, line: 1324, type: !132)
!6003 = !DILocalVariable(name: "rc", scope: !6004, file: !2678, line: 1327, type: !103)
!6004 = distinct !DILexicalBlock(scope: !5994, file: !2678, line: 1326, column: 45)
!6005 = !DILocation(line: 0, scope: !5994)
!6006 = !DILocation(line: 1326, column: 2, scope: !5994)
!6007 = !DILocation(line: 1324, column: 9, scope: !5994)
!6008 = !DILocation(line: 1326, column: 13, scope: !5994)
!6009 = !DILocation(line: 1326, column: 19, scope: !5994)
!6010 = !DILocation(line: 1327, column: 21, scope: !6004)
!6011 = !DILocation(line: 1326, column: 36, scope: !5994)
!6012 = !DILocation(line: 1326, column: 39, scope: !5994)
!6013 = !DILocation(line: 1327, column: 24, scope: !6004)
!6014 = !DILocation(line: 1327, column: 16, scope: !6004)
!6015 = !DILocation(line: 1327, column: 12, scope: !6004)
!6016 = !DILocation(line: 0, scope: !6004)
!6017 = !DILocation(line: 1329, column: 10, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6004, file: !2678, line: 1329, column: 7)
!6019 = !DILocation(line: 1329, column: 7, scope: !6004)
!6020 = distinct !{!6020, !6006, !6021}
!6021 = !DILocation(line: 1333, column: 2, scope: !5994)
!6022 = !DILocation(line: 1336, column: 1, scope: !5994)
!6023 = distinct !DISubprogram(name: "encode_uint", scope: !2678, file: !2678, line: 788, type: !6024, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6026)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{!277, !2700, !5627, !277, !337}
!6026 = !{!6027, !6028, !6029, !6030, !6031, !6032, !6034, !6035}
!6027 = !DILocalVariable(name: "value", arg: 1, scope: !6023, file: !2678, line: 788, type: !2700)
!6028 = !DILocalVariable(name: "conv", arg: 2, scope: !6023, file: !2678, line: 789, type: !5627)
!6029 = !DILocalVariable(name: "bps", arg: 3, scope: !6023, file: !2678, line: 790, type: !277)
!6030 = !DILocalVariable(name: "bpe", arg: 4, scope: !6023, file: !2678, line: 791, type: !337)
!6031 = !DILocalVariable(name: "upcase", scope: !6023, file: !2678, line: 793, type: !131)
!6032 = !DILocalVariable(name: "radix", scope: !6023, file: !2678, line: 794, type: !6033)
!6033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6034 = !DILocalVariable(name: "bp", scope: !6023, file: !2678, line: 795, type: !277)
!6035 = !DILocalVariable(name: "lsv", scope: !6036, file: !2678, line: 798, type: !32)
!6036 = distinct !DILexicalBlock(scope: !6023, file: !2678, line: 797, column: 5)
!6037 = !DILocation(line: 0, scope: !6023)
!6038 = !DILocation(line: 793, column: 35, scope: !6023)
!6039 = !DILocation(line: 793, column: 24, scope: !6023)
!6040 = !DILocation(line: 793, column: 16, scope: !6023)
!6041 = !DILocation(line: 794, column: 29, scope: !6023)
!6042 = !DILocation(line: 795, column: 24, scope: !6023)
!6043 = !DILocation(line: 795, column: 17, scope: !6023)
!6044 = !DILocation(line: 797, column: 2, scope: !6023)
!6045 = !DILocation(line: 802, column: 9, scope: !6036)
!6046 = !DILocation(line: 798, column: 22, scope: !6036)
!6047 = !DILocation(line: 0, scope: !6036)
!6048 = !DILocation(line: 800, column: 16, scope: !6036)
!6049 = !DILocation(line: 800, column: 11, scope: !6036)
!6050 = !DILocation(line: 800, column: 4, scope: !6036)
!6051 = !DILocation(line: 800, column: 9, scope: !6036)
!6052 = !DILocation(line: 803, column: 18, scope: !6023)
!6053 = !DILocation(line: 803, column: 24, scope: !6023)
!6054 = !DILocation(line: 803, column: 2, scope: !6036)
!6055 = distinct !{!6055, !6044, !6056}
!6056 = !DILocation(line: 803, column: 37, scope: !6023)
!6057 = !DILocation(line: 808, column: 12, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6023, file: !2678, line: 808, column: 6)
!6059 = !DILocation(line: 808, column: 6, scope: !6023)
!6060 = !DILocation(line: 809, column: 7, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6058, file: !2678, line: 808, column: 23)
!6062 = !DILocation(line: 813, column: 3, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !2678, line: 811, column: 27)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !2678, line: 811, column: 14)
!6065 = distinct !DILexicalBlock(scope: !6061, file: !2678, line: 809, column: 7)
!6066 = !DILocation(line: 0, scope: !6065)
!6067 = !DILocation(line: 818, column: 2, scope: !6023)
!6068 = distinct !DISubprogram(name: "store_count", scope: !2678, file: !2678, line: 1280, type: !6069, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6073)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{null, !6071, !102, !103}
!6071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6072, size: 32)
!6072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5594)
!6073 = !{!6074, !6075, !6076}
!6074 = !DILocalVariable(name: "conv", arg: 1, scope: !6068, file: !2678, line: 1280, type: !6071)
!6075 = !DILocalVariable(name: "dp", arg: 2, scope: !6068, file: !2678, line: 1281, type: !102)
!6076 = !DILocalVariable(name: "count", arg: 3, scope: !6068, file: !2678, line: 1282, type: !103)
!6077 = !DILocation(line: 0, scope: !6068)
!6078 = !DILocation(line: 1284, column: 38, scope: !6068)
!6079 = !DILocation(line: 1284, column: 2, scope: !6068)
!6080 = !DILocation(line: 1286, column: 4, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6068, file: !2678, line: 1284, column: 50)
!6082 = !DILocation(line: 1286, column: 14, scope: !6081)
!6083 = !DILocation(line: 1287, column: 3, scope: !6081)
!6084 = !DILocation(line: 1289, column: 24, scope: !6081)
!6085 = !DILocation(line: 1289, column: 22, scope: !6081)
!6086 = !DILocation(line: 1290, column: 3, scope: !6081)
!6087 = !DILocation(line: 1292, column: 18, scope: !6081)
!6088 = !DILocation(line: 1292, column: 4, scope: !6081)
!6089 = !DILocation(line: 1292, column: 16, scope: !6081)
!6090 = !DILocation(line: 1293, column: 3, scope: !6081)
!6091 = !DILocation(line: 1295, column: 4, scope: !6081)
!6092 = !DILocation(line: 1295, column: 15, scope: !6081)
!6093 = !DILocation(line: 1296, column: 3, scope: !6081)
!6094 = !DILocation(line: 1298, column: 22, scope: !6081)
!6095 = !DILocation(line: 1298, column: 4, scope: !6081)
!6096 = !DILocation(line: 1298, column: 20, scope: !6081)
!6097 = !DILocation(line: 1299, column: 3, scope: !6081)
!6098 = !DILocation(line: 1301, column: 21, scope: !6081)
!6099 = !DILocation(line: 1301, column: 4, scope: !6081)
!6100 = !DILocation(line: 1301, column: 19, scope: !6081)
!6101 = !DILocation(line: 1302, column: 3, scope: !6081)
!6102 = !DILocation(line: 1304, column: 4, scope: !6081)
!6103 = !DILocation(line: 1304, column: 17, scope: !6081)
!6104 = !DILocation(line: 1305, column: 3, scope: !6081)
!6105 = !DILocation(line: 1307, column: 4, scope: !6081)
!6106 = !DILocation(line: 1307, column: 20, scope: !6081)
!6107 = !DILocation(line: 1308, column: 3, scope: !6081)
!6108 = !DILocation(line: 1316, column: 1, scope: !6068)
!6109 = distinct !DISubprogram(name: "isupper", scope: !6110, file: !6110, line: 16, type: !396, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6111)
!6110 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6111 = !{!6112}
!6112 = !DILocalVariable(name: "a", arg: 1, scope: !6109, file: !6110, line: 16, type: !103)
!6113 = !DILocation(line: 0, scope: !6109)
!6114 = !DILocation(line: 18, column: 29, scope: !6109)
!6115 = !DILocation(line: 18, column: 45, scope: !6109)
!6116 = !DILocation(line: 18, column: 2, scope: !6109)
!6117 = distinct !DISubprogram(name: "conversion_radix", scope: !2678, file: !2678, line: 761, type: !6118, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6120)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!132, !278}
!6120 = !{!6121}
!6121 = !DILocalVariable(name: "specifier", arg: 1, scope: !6117, file: !2678, line: 761, type: !278)
!6122 = !DILocation(line: 0, scope: !6117)
!6123 = !DILocation(line: 763, column: 2, scope: !6117)
!6124 = !DILocation(line: 770, column: 3, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6117, file: !2678, line: 763, column: 21)
!6126 = !DILocation(line: 774, column: 3, scope: !6125)
!6127 = !DILocation(line: 0, scope: !6125)
!6128 = !DILocation(line: 776, column: 1, scope: !6117)
!6129 = distinct !DISubprogram(name: "extract_flags", scope: !2678, file: !2678, line: 339, type: !5971, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6130)
!6130 = !{!6131, !6132, !6133}
!6131 = !DILocalVariable(name: "conv", arg: 1, scope: !6129, file: !2678, line: 339, type: !5627)
!6132 = !DILocalVariable(name: "sp", arg: 2, scope: !6129, file: !2678, line: 340, type: !337)
!6133 = !DILocalVariable(name: "loop", scope: !6129, file: !2678, line: 342, type: !131)
!6134 = !DILocation(line: 0, scope: !6129)
!6135 = !DILocation(line: 344, column: 2, scope: !6129)
!6136 = !DILocation(line: 345, column: 11, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6129, file: !2678, line: 344, column: 5)
!6138 = !DILocation(line: 345, column: 3, scope: !6137)
!6139 = !DILocation(line: 351, column: 4, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6137, file: !2678, line: 345, column: 16)
!6141 = !DILocation(line: 354, column: 4, scope: !6140)
!6142 = !DILocation(line: 357, column: 4, scope: !6140)
!6143 = !DILocation(line: 360, column: 4, scope: !6140)
!6144 = !DILocation(line: 0, scope: !6140)
!6145 = !DILocation(line: 370, column: 12, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6129, file: !2678, line: 370, column: 6)
!6147 = !DILocation(line: 370, column: 22, scope: !6146)
!6148 = !DILocation(line: 371, column: 19, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6146, file: !2678, line: 370, column: 42)
!6150 = !DILocation(line: 372, column: 2, scope: !6149)
!6151 = !DILocation(line: 376, column: 2, scope: !6129)
!6152 = distinct !DISubprogram(name: "extract_width", scope: !2678, file: !2678, line: 388, type: !5971, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6153)
!6153 = !{!6154, !6155, !6156, !6157}
!6154 = !DILocalVariable(name: "conv", arg: 1, scope: !6152, file: !2678, line: 388, type: !5627)
!6155 = !DILocalVariable(name: "sp", arg: 2, scope: !6152, file: !2678, line: 389, type: !337)
!6156 = !DILocalVariable(name: "wp", scope: !6152, file: !2678, line: 398, type: !337)
!6157 = !DILocalVariable(name: "width", scope: !6152, file: !2678, line: 399, type: !132)
!6158 = !DILocation(line: 0, scope: !6152)
!6159 = !DILocation(line: 391, column: 8, scope: !6152)
!6160 = !DILocation(line: 391, column: 22, scope: !6152)
!6161 = !DILocation(line: 393, column: 6, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6152, file: !2678, line: 393, column: 6)
!6163 = !DILocation(line: 393, column: 10, scope: !6162)
!6164 = !DILocation(line: 393, column: 6, scope: !6152)
!6165 = !DILocation(line: 394, column: 20, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6162, file: !2678, line: 393, column: 18)
!6167 = !DILocation(line: 395, column: 10, scope: !6166)
!6168 = !DILocation(line: 395, column: 3, scope: !6166)
!6169 = !DILocation(line: 399, column: 17, scope: !6152)
!6170 = !DILocation(line: 401, column: 6, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6152, file: !2678, line: 401, column: 6)
!6172 = !DILocation(line: 401, column: 9, scope: !6171)
!6173 = !DILocation(line: 401, column: 6, scope: !6152)
!6174 = !DILocation(line: 402, column: 23, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6171, file: !2678, line: 401, column: 16)
!6176 = !DILocation(line: 403, column: 9, scope: !6175)
!6177 = !DILocation(line: 403, column: 21, scope: !6175)
!6178 = !DILocation(line: 405, column: 11, scope: !6175)
!6179 = !DILocation(line: 404, column: 21, scope: !6175)
!6180 = !DILocation(line: 406, column: 2, scope: !6175)
!6181 = !DILocation(line: 409, column: 1, scope: !6152)
!6182 = distinct !DISubprogram(name: "extract_prec", scope: !2678, file: !2678, line: 420, type: !5971, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6183)
!6183 = !{!6184, !6185, !6186}
!6184 = !DILocalVariable(name: "conv", arg: 1, scope: !6182, file: !2678, line: 420, type: !5627)
!6185 = !DILocalVariable(name: "sp", arg: 2, scope: !6182, file: !2678, line: 421, type: !337)
!6186 = !DILocalVariable(name: "prec", scope: !6182, file: !2678, line: 435, type: !132)
!6187 = !DILocation(line: 0, scope: !6182)
!6188 = !DILocation(line: 423, column: 24, scope: !6182)
!6189 = !DILocation(line: 423, column: 28, scope: !6182)
!6190 = !DILocation(line: 423, column: 8, scope: !6182)
!6191 = !DILocation(line: 423, column: 21, scope: !6182)
!6192 = !DILocation(line: 425, column: 6, scope: !6182)
!6193 = !DILocation(line: 428, column: 2, scope: !6182)
!6194 = !DILocation(line: 430, column: 6, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6182, file: !2678, line: 430, column: 6)
!6196 = !DILocation(line: 430, column: 10, scope: !6195)
!6197 = !DILocation(line: 430, column: 6, scope: !6182)
!6198 = !DILocation(line: 431, column: 19, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6195, file: !2678, line: 430, column: 18)
!6200 = !DILocation(line: 432, column: 10, scope: !6199)
!6201 = !DILocation(line: 432, column: 3, scope: !6199)
!6202 = !DILocation(line: 435, column: 16, scope: !6182)
!6203 = !DILocation(line: 437, column: 8, scope: !6182)
!6204 = !DILocation(line: 437, column: 19, scope: !6182)
!6205 = !DILocation(line: 439, column: 10, scope: !6182)
!6206 = !DILocation(line: 438, column: 20, scope: !6182)
!6207 = !DILocation(line: 441, column: 9, scope: !6182)
!6208 = !DILocation(line: 442, column: 1, scope: !6182)
!6209 = distinct !DISubprogram(name: "extract_length", scope: !2678, file: !2678, line: 453, type: !5971, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6210)
!6210 = !{!6211, !6212}
!6211 = !DILocalVariable(name: "conv", arg: 1, scope: !6209, file: !2678, line: 453, type: !5627)
!6212 = !DILocalVariable(name: "sp", arg: 2, scope: !6209, file: !2678, line: 454, type: !337)
!6213 = !DILocation(line: 0, scope: !6209)
!6214 = !DILocation(line: 456, column: 10, scope: !6209)
!6215 = !DILocation(line: 456, column: 2, scope: !6209)
!6216 = !DILocation(line: 458, column: 8, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !2678, line: 458, column: 7)
!6218 = distinct !DILexicalBlock(scope: !6209, file: !2678, line: 456, column: 15)
!6219 = !DILocation(line: 458, column: 7, scope: !6217)
!6220 = !DILocation(line: 458, column: 13, scope: !6217)
!6221 = !DILocation(line: 0, scope: !6217)
!6222 = !DILocation(line: 458, column: 7, scope: !6218)
!6223 = !DILocation(line: 459, column: 21, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6217, file: !2678, line: 458, column: 21)
!6225 = !DILocation(line: 460, column: 4, scope: !6224)
!6226 = !DILocation(line: 461, column: 3, scope: !6224)
!6227 = !DILocation(line: 462, column: 21, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6217, file: !2678, line: 461, column: 10)
!6229 = !DILocation(line: 466, column: 8, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6218, file: !2678, line: 466, column: 7)
!6231 = !DILocation(line: 466, column: 7, scope: !6230)
!6232 = !DILocation(line: 466, column: 13, scope: !6230)
!6233 = !DILocation(line: 0, scope: !6230)
!6234 = !DILocation(line: 466, column: 7, scope: !6218)
!6235 = !DILocation(line: 467, column: 21, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6230, file: !2678, line: 466, column: 21)
!6237 = !DILocation(line: 468, column: 4, scope: !6236)
!6238 = !DILocation(line: 469, column: 3, scope: !6236)
!6239 = !DILocation(line: 470, column: 21, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6230, file: !2678, line: 469, column: 10)
!6241 = !DILocation(line: 474, column: 9, scope: !6218)
!6242 = !DILocation(line: 474, column: 20, scope: !6218)
!6243 = !DILocation(line: 475, column: 3, scope: !6218)
!6244 = !DILocation(line: 476, column: 3, scope: !6218)
!6245 = !DILocation(line: 478, column: 9, scope: !6218)
!6246 = !DILocation(line: 478, column: 20, scope: !6218)
!6247 = !DILocation(line: 479, column: 3, scope: !6218)
!6248 = !DILocation(line: 480, column: 3, scope: !6218)
!6249 = !DILocation(line: 482, column: 9, scope: !6218)
!6250 = !DILocation(line: 482, column: 20, scope: !6218)
!6251 = !DILocation(line: 483, column: 3, scope: !6218)
!6252 = !DILocation(line: 484, column: 3, scope: !6218)
!6253 = !DILocation(line: 486, column: 9, scope: !6218)
!6254 = !DILocation(line: 486, column: 20, scope: !6218)
!6255 = !DILocation(line: 487, column: 3, scope: !6218)
!6256 = !DILocation(line: 492, column: 21, scope: !6218)
!6257 = !DILocation(line: 493, column: 3, scope: !6218)
!6258 = !DILocation(line: 495, column: 9, scope: !6218)
!6259 = !DILocation(line: 495, column: 20, scope: !6218)
!6260 = !DILocation(line: 496, column: 3, scope: !6218)
!6261 = !DILocation(line: 498, column: 2, scope: !6209)
!6262 = distinct !DISubprogram(name: "extract_specifier", scope: !2678, file: !2678, line: 513, type: !5971, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6263)
!6263 = !{!6264, !6265, !6266, !6267}
!6264 = !DILocalVariable(name: "conv", arg: 1, scope: !6262, file: !2678, line: 513, type: !5627)
!6265 = !DILocalVariable(name: "sp", arg: 2, scope: !6262, file: !2678, line: 514, type: !337)
!6266 = !DILocalVariable(name: "unsupported", scope: !6262, file: !2678, line: 516, type: !131)
!6267 = !DILabel(scope: !6268, name: "int_conv", file: !2678, line: 526)
!6268 = distinct !DILexicalBlock(scope: !6262, file: !2678, line: 520, column: 27)
!6269 = !DILocation(line: 0, scope: !6262)
!6270 = !DILocation(line: 518, column: 20, scope: !6262)
!6271 = !DILocation(line: 518, column: 8, scope: !6262)
!6272 = !DILocation(line: 518, column: 18, scope: !6262)
!6273 = !DILocation(line: 520, column: 2, scope: !6262)
!6274 = !DILocation(line: 525, column: 3, scope: !6268)
!6275 = !DILocation(line: 0, scope: !6268)
!6276 = !DILocation(line: 526, column: 1, scope: !6268)
!6277 = !DILocation(line: 528, column: 24, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6268, file: !2678, line: 528, column: 7)
!6279 = !DILocation(line: 528, column: 7, scope: !6268)
!6280 = !DILocation(line: 535, column: 23, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6268, file: !2678, line: 535, column: 7)
!6282 = !DILocation(line: 535, column: 7, scope: !6268)
!6283 = !DILocation(line: 536, column: 36, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6281, file: !2678, line: 535, column: 31)
!6285 = !DILocation(line: 537, column: 3, scope: !6284)
!6286 = !DILocation(line: 570, column: 9, scope: !6268)
!6287 = !DILocation(line: 570, column: 23, scope: !6268)
!6288 = !DILocation(line: 575, column: 4, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !2678, line: 573, column: 48)
!6290 = distinct !DILexicalBlock(scope: !6268, file: !2678, line: 573, column: 7)
!6291 = !DILocation(line: 603, column: 9, scope: !6268)
!6292 = !DILocation(line: 603, column: 23, scope: !6268)
!6293 = !DILocation(line: 605, column: 24, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6268, file: !2678, line: 605, column: 7)
!6295 = !DILocation(line: 605, column: 7, scope: !6268)
!6296 = !DILocation(line: 612, column: 9, scope: !6268)
!6297 = !DILocation(line: 612, column: 23, scope: !6268)
!6298 = !DILocation(line: 619, column: 24, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6268, file: !2678, line: 619, column: 7)
!6300 = !DILocation(line: 619, column: 7, scope: !6268)
!6301 = !DILocation(line: 625, column: 9, scope: !6268)
!6302 = !DILocation(line: 625, column: 17, scope: !6268)
!6303 = !DILocation(line: 626, column: 3, scope: !6268)
!6304 = !DILocation(line: 629, column: 20, scope: !6262)
!6305 = !DILocation(line: 629, column: 8, scope: !6262)
!6306 = !DILocation(line: 518, column: 23, scope: !6262)
!6307 = !DILocation(line: 631, column: 2, scope: !6262)
!6308 = distinct !DISubprogram(name: "extract_decimal", scope: !2678, file: !2678, line: 318, type: !6309, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6311)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!132, !373}
!6311 = !{!6312, !6313, !6314}
!6312 = !DILocalVariable(name: "str", arg: 1, scope: !6308, file: !2678, line: 318, type: !373)
!6313 = !DILocalVariable(name: "sp", scope: !6308, file: !2678, line: 320, type: !337)
!6314 = !DILocalVariable(name: "val", scope: !6308, file: !2678, line: 321, type: !132)
!6315 = !DILocation(line: 0, scope: !6308)
!6316 = !DILocation(line: 320, column: 19, scope: !6308)
!6317 = !DILocation(line: 323, column: 37, scope: !6308)
!6318 = !DILocation(line: 323, column: 17, scope: !6308)
!6319 = !DILocation(line: 323, column: 9, scope: !6308)
!6320 = !DILocation(line: 323, column: 2, scope: !6308)
!6321 = !DILocation(line: 324, column: 13, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6308, file: !2678, line: 323, column: 43)
!6323 = !DILocation(line: 324, column: 24, scope: !6322)
!6324 = !DILocation(line: 324, column: 19, scope: !6322)
!6325 = !DILocation(line: 324, column: 27, scope: !6322)
!6326 = distinct !{!6326, !6320, !6327}
!6327 = !DILocation(line: 325, column: 2, scope: !6308)
!6328 = !DILocation(line: 326, column: 7, scope: !6308)
!6329 = !DILocation(line: 327, column: 2, scope: !6308)
!6330 = distinct !DISubprogram(name: "isdigit", scope: !6110, file: !6110, line: 43, type: !396, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6331)
!6331 = !{!6332}
!6332 = !DILocalVariable(name: "a", arg: 1, scope: !6330, file: !6110, line: 43, type: !103)
!6333 = !DILocation(line: 0, scope: !6330)
!6334 = !DILocation(line: 45, column: 29, scope: !6330)
!6335 = !DILocation(line: 45, column: 45, scope: !6330)
!6336 = !DILocation(line: 45, column: 2, scope: !6330)
!6337 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6338, file: !6338, line: 9, type: !334, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !251)
!6338 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!6339 = !DILocation(line: 11, column: 1, scope: !6337)
!6340 = !{i64 2147565473, i64 2147565516, i64 2147565556}
!6341 = !DILocation(line: 12, column: 1, scope: !6337)
!6342 = !{i64 2147569735, i64 2147569778, i64 2147569818}
!6343 = !DILocation(line: 13, column: 1, scope: !6337)
!6344 = !{i64 2147569916, i64 2147569959, i64 2147569999}
!6345 = !DILocation(line: 14, column: 1, scope: !6337)
!6346 = !{i64 2147570082, i64 2147570125, i64 2147570165}
!6347 = !DILocation(line: 15, column: 1, scope: !6337)
!6348 = !{i64 2147570291, i64 2147570334, i64 2147570374}
!6349 = !DILocation(line: 16, column: 1, scope: !6337)
!6350 = !{i64 2147570460, i64 2147570503, i64 2147570543}
!6351 = !DILocation(line: 17, column: 1, scope: !6337)
!6352 = !{i64 2147570623, i64 2147570666, i64 2147570706}
!6353 = !DILocation(line: 18, column: 1, scope: !6337)
!6354 = !{i64 2147570807, i64 2147570850, i64 2147570890}
!6355 = !DILocation(line: 19, column: 1, scope: !6337)
!6356 = !{i64 2147570986, i64 2147571029, i64 2147571069}
!6357 = !DILocation(line: 20, column: 1, scope: !6337)
!6358 = !{i64 2147571228, i64 2147571271, i64 2147571311}
!6359 = !DILocation(line: 21, column: 1, scope: !6337)
!6360 = !{i64 2147571463, i64 2147571506, i64 2147571546}
!6361 = !DILocation(line: 22, column: 1, scope: !6337)
!6362 = !{i64 2147571650, i64 2147571693, i64 2147571733}
!6363 = !DILocation(line: 23, column: 1, scope: !6337)
!6364 = !{i64 2147571866, i64 2147571909, i64 2147571949}
!6365 = !DILocation(line: 24, column: 1, scope: !6337)
!6366 = !{i64 2147572069, i64 2147572112, i64 2147572152}
!6367 = !DILocation(line: 25, column: 1, scope: !6337)
!6368 = !{i64 2147572272, i64 2147572315, i64 2147572355}
!6369 = !DILocation(line: 26, column: 1, scope: !6337)
!6370 = !{i64 2147572447, i64 2147572490, i64 2147572530}
!6371 = !DILocation(line: 27, column: 1, scope: !6337)
!6372 = !{i64 2147572658, i64 2147572701, i64 2147572741}
!6373 = !DILocation(line: 28, column: 1, scope: !6337)
!6374 = !{i64 2147572862, i64 2147572905, i64 2147572945}
!6375 = !DILocation(line: 29, column: 1, scope: !6337)
!6376 = !{i64 2147573055, i64 2147573098, i64 2147573138}
!6377 = !DILocation(line: 30, column: 1, scope: !6337)
!6378 = !{i64 2147573257, i64 2147573300, i64 2147573340}
!6379 = !DILocation(line: 31, column: 1, scope: !6337)
!6380 = !{i64 2147573456, i64 2147573499, i64 2147573539}
!6381 = !DILocation(line: 32, column: 1, scope: !6337)
!6382 = !{i64 2147573683, i64 2147573726, i64 2147573766}
!6383 = !DILocation(line: 33, column: 1, scope: !6337)
!6384 = !{i64 2147573885, i64 2147573928, i64 2147573968}
!6385 = !DILocation(line: 34, column: 1, scope: !6337)
!6386 = !{i64 2147574100, i64 2147574143, i64 2147574183}
!6387 = !DILocation(line: 35, column: 1, scope: !6337)
!6388 = !{i64 2147574272, i64 2147574315, i64 2147574355}
!6389 = !DILocation(line: 36, column: 1, scope: !6337)
!6390 = !{i64 2147574474, i64 2147574517, i64 2147574557}
!6391 = !DILocation(line: 37, column: 1, scope: !6337)
!6392 = !{i64 2147574700, i64 2147574743, i64 2147574783}
!6393 = !DILocation(line: 38, column: 1, scope: !6337)
!6394 = !{i64 2147574899, i64 2147574942, i64 2147574982}
!6395 = !DILocation(line: 39, column: 1, scope: !6337)
!6396 = !{i64 2147575074, i64 2147575117, i64 2147575157}
!6397 = !DILocation(line: 40, column: 1, scope: !6337)
!6398 = !{i64 2147575327, i64 2147575370, i64 2147575410}
!6399 = !DILocation(line: 41, column: 1, scope: !6337)
!6400 = !{i64 2147575568, i64 2147575611, i64 2147575651}
!6401 = !DILocation(line: 42, column: 1, scope: !6337)
!6402 = !{i64 2147575803, i64 2147575846, i64 2147575886}
!6403 = !DILocation(line: 43, column: 1, scope: !6337)
!6404 = !{i64 2147576035, i64 2147576078, i64 2147576118}
!6405 = !DILocation(line: 44, column: 1, scope: !6337)
!6406 = !{i64 2147576261, i64 2147576304, i64 2147576344}
!6407 = !DILocation(line: 45, column: 1, scope: !6337)
!6408 = !{i64 2147576487, i64 2147576530, i64 2147576570}
!6409 = !DILocation(line: 46, column: 1, scope: !6337)
!6410 = !{i64 2147576713, i64 2147576756, i64 2147576796}
!6411 = !DILocation(line: 47, column: 1, scope: !6337)
!6412 = !{i64 2147576948, i64 2147576991, i64 2147577031}
!6413 = !DILocation(line: 48, column: 1, scope: !6337)
!6414 = !{i64 2147577174, i64 2147577217, i64 2147577257}
!6415 = !DILocation(line: 49, column: 1, scope: !6337)
!6416 = !{i64 2147577421, i64 2147577464, i64 2147577504}
!6417 = !DILocation(line: 50, column: 1, scope: !6337)
!6418 = !{i64 2147577650, i64 2147577693, i64 2147577733}
!6419 = !DILocation(line: 51, column: 1, scope: !6337)
!6420 = !{i64 2147577882, i64 2147577925, i64 2147577965}
!6421 = !DILocation(line: 52, column: 1, scope: !6337)
!6422 = !{i64 2147578126, i64 2147578169, i64 2147578209}
!6423 = !DILocation(line: 53, column: 1, scope: !6337)
!6424 = !{i64 2147578364, i64 2147578407, i64 2147578447}
!6425 = !DILocation(line: 54, column: 1, scope: !6337)
!6426 = !{i64 2147582699, i64 2147582742, i64 2147582782}
!6427 = !DILocation(line: 55, column: 1, scope: !6337)
!6428 = !{i64 2147582937, i64 2147582980, i64 2147583020}
!6429 = !DILocation(line: 56, column: 1, scope: !6337)
!6430 = !{i64 2147583190, i64 2147583233, i64 2147583273}
!6431 = !DILocation(line: 57, column: 1, scope: !6337)
!6432 = !{i64 2147583434, i64 2147583477, i64 2147583517}
!6433 = !DILocation(line: 58, column: 1, scope: !6337)
!6434 = !{i64 2147583669, i64 2147583712, i64 2147583752}
!6435 = !DILocation(line: 59, column: 1, scope: !6337)
!6436 = !{i64 2147583919, i64 2147583962, i64 2147584002}
!6437 = !DILocation(line: 60, column: 1, scope: !6337)
!6438 = !{i64 2147584166, i64 2147584209, i64 2147584249}
!6439 = !DILocation(line: 61, column: 1, scope: !6337)
!6440 = !{i64 2147584401, i64 2147584444, i64 2147584484}
!6441 = !DILocation(line: 62, column: 1, scope: !6337)
!6442 = !{i64 2147584636, i64 2147584679, i64 2147584719}
!6443 = !DILocation(line: 63, column: 1, scope: !6337)
!6444 = !{i64 2147584871, i64 2147584914, i64 2147584954}
!6445 = !DILocation(line: 64, column: 1, scope: !6337)
!6446 = !{i64 2147585109, i64 2147585152, i64 2147585192}
!6447 = !DILocation(line: 65, column: 1, scope: !6337)
!6448 = !{i64 2147585350, i64 2147585393, i64 2147585433}
!6449 = !DILocation(line: 66, column: 1, scope: !6337)
!6450 = !{i64 2147585630, i64 2147585673, i64 2147585713}
!6451 = !DILocation(line: 67, column: 1, scope: !6337)
!6452 = !{i64 2147585889, i64 2147585932, i64 2147585972}
!6453 = !DILocation(line: 68, column: 1, scope: !6337)
!6454 = !{i64 2147586118, i64 2147586161, i64 2147586201}
!6455 = !DILocation(line: 69, column: 1, scope: !6337)
!6456 = !{i64 2147586344, i64 2147586387, i64 2147586427}
!6457 = !DILocation(line: 70, column: 1, scope: !6337)
!6458 = !{i64 2147586582, i64 2147586625, i64 2147586665}
!6459 = !DILocation(line: 71, column: 1, scope: !6337)
!6460 = !{i64 2147586811, i64 2147586854, i64 2147586894}
!6461 = !DILocation(line: 72, column: 1, scope: !6337)
!6462 = !{i64 2147587019, i64 2147587062, i64 2147587102}
!6463 = !DILocation(line: 73, column: 1, scope: !6337)
!6464 = !{i64 2147587230, i64 2147587273, i64 2147587313}
!6465 = !DILocation(line: 74, column: 1, scope: !6337)
!6466 = !{i64 2147587465, i64 2147587508, i64 2147587548}
!6467 = !DILocation(line: 75, column: 1, scope: !6337)
!6468 = !{i64 2147587694, i64 2147587737, i64 2147587777}
!6469 = !DILocation(line: 76, column: 1, scope: !6337)
!6470 = !{i64 2147587911, i64 2147587954, i64 2147587994}
!6471 = !DILocation(line: 77, column: 1, scope: !6337)
!6472 = !{i64 2147588140, i64 2147588183, i64 2147588223}
!6473 = !DILocation(line: 78, column: 1, scope: !6337)
!6474 = !{i64 2147588378, i64 2147588421, i64 2147588461}
!6475 = !DILocation(line: 79, column: 1, scope: !6337)
!6476 = !{i64 2147588610, i64 2147588653, i64 2147588693}
!6477 = !DILocation(line: 80, column: 1, scope: !6337)
!6478 = !{i64 2147588836, i64 2147588879, i64 2147588919}
!6479 = !DILocation(line: 81, column: 1, scope: !6337)
!6480 = !{i64 2147589053, i64 2147589096, i64 2147589136}
!6481 = !DILocation(line: 82, column: 1, scope: !6337)
!6482 = !{i64 2147589285, i64 2147589328, i64 2147589368}
!6483 = !DILocation(line: 83, column: 1, scope: !6337)
!6484 = !{i64 2147589511, i64 2147589554, i64 2147589594}
!6485 = !DILocation(line: 84, column: 1, scope: !6337)
!6486 = !{i64 2147589725, i64 2147589768, i64 2147589808}
!6487 = !DILocation(line: 85, column: 1, scope: !6337)
!6488 = !{i64 2147589945, i64 2147589988, i64 2147590028}
!6489 = !DILocation(line: 86, column: 1, scope: !6337)
!6490 = !{i64 2147590177, i64 2147590220, i64 2147590260}
!6491 = !DILocation(line: 87, column: 1, scope: !6337)
!6492 = !{i64 2147590385, i64 2147590428, i64 2147590468}
!6493 = !DILocation(line: 88, column: 1, scope: !6337)
!6494 = !{i64 2147590590, i64 2147590633, i64 2147590673}
!6495 = !DILocation(line: 89, column: 1, scope: !6337)
!6496 = !{i64 2147594868, i64 2147594911, i64 2147594951}
!6497 = !DILocation(line: 90, column: 1, scope: !6337)
!6498 = !{i64 2147595082, i64 2147595125, i64 2147595165}
!6499 = !DILocation(line: 91, column: 1, scope: !6337)
!6500 = !{i64 2147595308, i64 2147595351, i64 2147595391}
!6501 = !DILocation(line: 92, column: 1, scope: !6337)
!6502 = !{i64 2147595528, i64 2147595571, i64 2147595611}
!6503 = !DILocation(line: 93, column: 1, scope: !6337)
!6504 = !{i64 2147595733, i64 2147595776, i64 2147595816}
!6505 = !DILocation(line: 94, column: 1, scope: !6337)
!6506 = !{i64 2147595965, i64 2147596008, i64 2147596048}
!6507 = !DILocation(line: 95, column: 1, scope: !6337)
!6508 = !{i64 2147596200, i64 2147596243, i64 2147596283}
!6509 = !DILocation(line: 96, column: 1, scope: !6337)
!6510 = !{i64 2147596450, i64 2147596493, i64 2147596533}
!6511 = !DILocation(line: 97, column: 1, scope: !6337)
!6512 = !{i64 2147596700, i64 2147596743, i64 2147596783}
!6513 = !DILocation(line: 98, column: 1, scope: !6337)
!6514 = !{i64 2147596938, i64 2147596981, i64 2147597021}
!6515 = !DILocation(line: 99, column: 1, scope: !6337)
!6516 = !{i64 2147597149, i64 2147597192, i64 2147597232}
!6517 = !DILocation(line: 100, column: 1, scope: !6337)
!6518 = !{i64 2147597366, i64 2147597409, i64 2147597449}
!6519 = !DILocation(line: 101, column: 1, scope: !6337)
!6520 = !{i64 2147597562, i64 2147597605, i64 2147597645}
!6521 = !DILocation(line: 102, column: 1, scope: !6337)
!6522 = !{i64 2147597764, i64 2147597807, i64 2147597847}
!6523 = !DILocation(line: 103, column: 1, scope: !6337)
!6524 = !{i64 2147597957, i64 2147598000, i64 2147598040}
!6525 = !DILocation(line: 104, column: 1, scope: !6337)
!6526 = !{i64 2147598165, i64 2147598208, i64 2147598248}
!6527 = !DILocation(line: 105, column: 1, scope: !6337)
!6528 = !{i64 2147598361, i64 2147598404, i64 2147598444}
!6529 = !DILocation(line: 106, column: 1, scope: !6337)
!6530 = !{i64 2147598569, i64 2147598612, i64 2147598652}
!6531 = !DILocation(line: 107, column: 1, scope: !6337)
!6532 = !{i64 2147598780, i64 2147598823, i64 2147598863}
!6533 = !DILocation(line: 108, column: 1, scope: !6337)
!6534 = !{i64 2147598979, i64 2147599022, i64 2147599062}
!6535 = !DILocation(line: 109, column: 1, scope: !6337)
!6536 = !{i64 2147599154, i64 2147599197, i64 2147599237}
!6537 = !DILocation(line: 110, column: 1, scope: !6337)
!6538 = !{i64 2147599338, i64 2147599381, i64 2147599421}
!6539 = !DILocation(line: 111, column: 1, scope: !6337)
!6540 = !{i64 2147599540, i64 2147599583, i64 2147599623}
!6541 = !DILocation(line: 112, column: 1, scope: !6337)
!6542 = !{i64 2147599739, i64 2147599782, i64 2147599822}
!6543 = !DILocation(line: 113, column: 1, scope: !6337)
!6544 = !{i64 2147599944, i64 2147599987, i64 2147600027}
!6545 = !DILocation(line: 114, column: 1, scope: !6337)
!6546 = !{i64 2147600137, i64 2147600180, i64 2147600220}
!6547 = !DILocation(line: 115, column: 1, scope: !6337)
!6548 = !{i64 2147600303, i64 2147600346, i64 2147600386}
!6549 = !DILocation(line: 116, column: 1, scope: !6337)
!6550 = !{i64 2147600487, i64 2147600530, i64 2147600570}
!6551 = !DILocation(line: 117, column: 1, scope: !6337)
!6552 = !{i64 2147600677, i64 2147600720, i64 2147600760}
!6553 = !DILocation(line: 118, column: 1, scope: !6337)
!6554 = !{i64 2147600861, i64 2147600904, i64 2147600944}
!6555 = !DILocation(line: 119, column: 1, scope: !6337)
!6556 = !{i64 2147601075, i64 2147601118, i64 2147601158}
!6557 = !DILocation(line: 120, column: 1, scope: !6337)
!6558 = !{i64 2147601286, i64 2147601329, i64 2147601369}
!6559 = !DILocation(line: 121, column: 1, scope: !6337)
!6560 = !{i64 2147601509, i64 2147601552, i64 2147601592}
!6561 = !DILocation(line: 122, column: 1, scope: !6337)
!6562 = !{i64 2147601693, i64 2147601736, i64 2147601776}
!6563 = !DILocation(line: 123, column: 1, scope: !6337)
!6564 = !{i64 2147601907, i64 2147601950, i64 2147601990}
!6565 = !DILocation(line: 124, column: 1, scope: !6337)
!6566 = !{i64 2147602073, i64 2147602116, i64 2147602156}
!6567 = !DILocation(line: 125, column: 1, scope: !6337)
!6568 = !{i64 2147602254, i64 2147602297, i64 2147602337}
!6569 = !DILocation(line: 126, column: 1, scope: !6337)
!6570 = !{i64 2147602447, i64 2147602490, i64 2147602530}
!6571 = !DILocation(line: 127, column: 1, scope: !6337)
!6572 = !{i64 2147602673, i64 2147602716, i64 2147602756}
!6573 = !DILocation(line: 128, column: 1, scope: !6337)
!6574 = !{i64 2147602887, i64 2147602930, i64 2147602970}
!6575 = !DILocation(line: 129, column: 1, scope: !6337)
!6576 = !{i64 2147603113, i64 2147603156, i64 2147603196}
!6577 = !DILocation(line: 130, column: 1, scope: !6337)
!6578 = !{i64 2147603330, i64 2147603373, i64 2147603413}
!6579 = !DILocation(line: 131, column: 1, scope: !6337)
!6580 = !{i64 2147603607, i64 2147603650, i64 2147603690}
!6581 = !DILocation(line: 132, column: 1, scope: !6337)
!6582 = !{i64 2147603833, i64 2147603876, i64 2147603916}
!6583 = !DILocation(line: 133, column: 1, scope: !6337)
!6584 = !{i64 2147608102, i64 2147608145, i64 2147608185}
!6585 = !DILocation(line: 134, column: 1, scope: !6337)
!6586 = !{i64 2147608298, i64 2147608341, i64 2147608381}
!6587 = !DILocation(line: 135, column: 1, scope: !6337)
!6588 = !{i64 2147608563, i64 2147608606, i64 2147608646}
!6589 = !DILocation(line: 136, column: 1, scope: !6337)
!6590 = !{i64 2147608777, i64 2147608820, i64 2147608860}
!6591 = !DILocation(line: 137, column: 1, scope: !6337)
!6592 = !{i64 2147608952, i64 2147608995, i64 2147609035}
!6593 = !DILocation(line: 138, column: 1, scope: !6337)
!6594 = !{i64 2147609206, i64 2147609249, i64 2147609289}
!6595 = !DILocation(line: 139, column: 1, scope: !6337)
!6596 = !{i64 2147609405, i64 2147609448, i64 2147609488}
!6597 = !DILocation(line: 140, column: 1, scope: !6337)
!6598 = !{i64 2147609647, i64 2147609690, i64 2147609730}
!6599 = !DILocation(line: 141, column: 1, scope: !6337)
!6600 = !{i64 2147609810, i64 2147609853, i64 2147609893}
!6601 = !DILocation(line: 142, column: 1, scope: !6337)
!6602 = !{i64 2147609997, i64 2147610040, i64 2147610080}
!6603 = !DILocation(line: 143, column: 1, scope: !6337)
!6604 = !{i64 2147610205, i64 2147610248, i64 2147610288}
!6605 = !DILocation(line: 144, column: 1, scope: !6337)
!6606 = !{i64 2147610401, i64 2147610444, i64 2147610484}
!6607 = !DILocation(line: 145, column: 1, scope: !6337)
!6608 = !{i64 2147610594, i64 2147610637, i64 2147610677}
!6609 = !DILocation(line: 146, column: 1, scope: !6337)
!6610 = !{i64 2147610777, i64 2147610820, i64 2147610860}
!6611 = !DILocation(line: 147, column: 1, scope: !6337)
!6612 = !{i64 2147610991, i64 2147611034, i64 2147611074}
!6613 = !DILocation(line: 148, column: 1, scope: !6337)
!6614 = !{i64 2147611202, i64 2147611245, i64 2147611285}
!6615 = !DILocation(line: 149, column: 1, scope: !6337)
!6616 = !{i64 2147611422, i64 2147611465, i64 2147611505}
!6617 = !DILocation(line: 150, column: 1, scope: !6337)
!6618 = !{i64 2147611629, i64 2147611672, i64 2147611712}
!6619 = !DILocation(line: 151, column: 1, scope: !6337)
!6620 = !{i64 2147611902, i64 2147611945, i64 2147611985}
!6621 = !DILocation(line: 152, column: 1, scope: !6337)
!6622 = !{i64 2147612150, i64 2147612193, i64 2147612233}
!6623 = !DILocation(line: 153, column: 1, scope: !6337)
!6624 = !{i64 2147612349, i64 2147612392, i64 2147612432}
!6625 = !DILocation(line: 154, column: 1, scope: !6337)
!6626 = !{i64 2147612584, i64 2147612627, i64 2147612667}
!6627 = !DILocation(line: 155, column: 1, scope: !6337)
!6628 = !{i64 2147612834, i64 2147612877, i64 2147612917}
!6629 = !DILocation(line: 156, column: 1, scope: !6337)
!6630 = !{i64 2147613036, i64 2147613079, i64 2147613119}
!6631 = !DILocation(line: 157, column: 1, scope: !6337)
!6632 = !{i64 2147613259, i64 2147613302, i64 2147613342}
!6633 = !DILocation(line: 158, column: 1, scope: !6337)
!6634 = !{i64 2147613473, i64 2147613516, i64 2147613556}
!6635 = !DILocation(line: 159, column: 1, scope: !6337)
!6636 = !{i64 2147613717, i64 2147613760, i64 2147613800}
!6637 = !DILocation(line: 160, column: 1, scope: !6337)
!6638 = !{i64 2147613946, i64 2147613989, i64 2147614029}
!6639 = !DILocation(line: 161, column: 1, scope: !6337)
!6640 = !{i64 2147614175, i64 2147614218, i64 2147614258}
!6641 = !DILocation(line: 162, column: 1, scope: !6337)
!6642 = !{i64 2147614383, i64 2147614426, i64 2147614466}
!6643 = !DILocation(line: 163, column: 1, scope: !6337)
!6644 = !{i64 2147614621, i64 2147614664, i64 2147614704}
!6645 = !DILocation(line: 164, column: 1, scope: !6337)
!6646 = !{i64 2147614847, i64 2147614890, i64 2147614930}
!6647 = !DILocation(line: 165, column: 1, scope: !6337)
!6648 = !{i64 2147615106, i64 2147615149, i64 2147615189}
!6649 = !DILocation(line: 166, column: 1, scope: !6337)
!6650 = !{i64 2147615326, i64 2147615369, i64 2147615409}
!6651 = !DILocation(line: 167, column: 1, scope: !6337)
!6652 = !{i64 2147615558, i64 2147615601, i64 2147615641}
!6653 = !DILocation(line: 168, column: 1, scope: !6337)
!6654 = !{i64 2147615799, i64 2147615842, i64 2147615882}
!6655 = !DILocation(line: 169, column: 1, scope: !6337)
!6656 = !{i64 2147616040, i64 2147616083, i64 2147616123}
!6657 = !DILocation(line: 170, column: 1, scope: !6337)
!6658 = !{i64 2147616263, i64 2147616306, i64 2147616346}
!6659 = !DILocation(line: 171, column: 1, scope: !6337)
!6660 = !{i64 2147620541, i64 2147620584, i64 2147620624}
!6661 = !DILocation(line: 172, column: 1, scope: !6337)
!6662 = !{i64 2147620782, i64 2147620825, i64 2147620865}
!6663 = !DILocation(line: 173, column: 1, scope: !6337)
!6664 = !{i64 2147620969, i64 2147621012, i64 2147621052}
!6665 = !DILocation(line: 174, column: 1, scope: !6337)
!6666 = !{i64 2147621156, i64 2147621199, i64 2147621239}
!6667 = !DILocation(line: 175, column: 1, scope: !6337)
!6668 = !{i64 2147621319, i64 2147621362, i64 2147621402}
!6669 = !DILocation(line: 176, column: 1, scope: !6337)
!6670 = !{i64 2147621524, i64 2147621567, i64 2147621607}
!6671 = !DILocation(line: 177, column: 1, scope: !6337)
!6672 = !{i64 2147621717, i64 2147621760, i64 2147621800}
!6673 = !DILocation(line: 178, column: 1, scope: !6337)
!6674 = !{i64 2147621976, i64 2147622019, i64 2147622059}
!6675 = !DILocation(line: 179, column: 1, scope: !6337)
!6676 = !{i64 2147622199, i64 2147622242, i64 2147622282}
!6677 = !DILocation(line: 180, column: 1, scope: !6337)
!6678 = !{i64 2147622428, i64 2147622471, i64 2147622511}
!6679 = !DILocation(line: 181, column: 1, scope: !6337)
!6680 = !{i64 2147622642, i64 2147622685, i64 2147622725}
!6681 = !DILocation(line: 182, column: 1, scope: !6337)
!6682 = !{i64 2147622844, i64 2147622887, i64 2147622927}
!6683 = !DILocation(line: 183, column: 1, scope: !6337)
!6684 = !{i64 2147623040, i64 2147623083, i64 2147623123}
!6685 = !DILocation(line: 184, column: 1, scope: !6337)
!6686 = !{i64 2147623252, i64 2147623295, i64 2147623335}
!6687 = !DILocation(line: 185, column: 1, scope: !6337)
!6688 = !{i64 2147623473, i64 2147623516, i64 2147623556}
!6689 = !DILocation(line: 186, column: 1, scope: !6337)
!6690 = !{i64 2147623687, i64 2147623730, i64 2147623770}
!6691 = !DILocation(line: 187, column: 1, scope: !6337)
!6692 = !{i64 2147623877, i64 2147623920, i64 2147623960}
!6693 = !DILocation(line: 188, column: 1, scope: !6337)
!6694 = !{i64 2147624076, i64 2147624119, i64 2147624159}
!6695 = !DILocation(line: 189, column: 1, scope: !6337)
!6696 = !{i64 2147624281, i64 2147624324, i64 2147624364}
!6697 = !DILocation(line: 190, column: 1, scope: !6337)
!6698 = !{i64 2147624501, i64 2147624544, i64 2147624584}
!6699 = !DILocation(line: 191, column: 1, scope: !6337)
!6700 = !{i64 2147624702, i64 2147624745, i64 2147624785}
!6701 = !DILocation(line: 192, column: 1, scope: !6337)
!6702 = !{i64 2147624901, i64 2147624944, i64 2147624984}
!6703 = !DILocation(line: 193, column: 1, scope: !6337)
!6704 = !{i64 2147625106, i64 2147625149, i64 2147625189}
!6705 = !DILocation(line: 194, column: 1, scope: !6337)
!6706 = !{i64 2147625275, i64 2147625318, i64 2147625358}
!6707 = !DILocation(line: 195, column: 1, scope: !6337)
!6708 = !{i64 2147625459, i64 2147625502, i64 2147625542}
!6709 = !DILocation(line: 196, column: 1, scope: !6337)
!6710 = !{i64 2147625643, i64 2147625686, i64 2147625726}
!6711 = !DILocation(line: 197, column: 1, scope: !6337)
!6712 = !{i64 2147625830, i64 2147625873, i64 2147625913}
!6713 = !DILocation(line: 198, column: 1, scope: !6337)
!6714 = !{i64 2147626014, i64 2147626057, i64 2147626097}
!6715 = !DILocation(line: 199, column: 1, scope: !6337)
!6716 = !{i64 2147626252, i64 2147626295, i64 2147626335}
!6717 = !DILocation(line: 200, column: 1, scope: !6337)
!6718 = !{i64 2147626482, i64 2147626525, i64 2147626565}
!6719 = !DILocation(line: 201, column: 1, scope: !6337)
!6720 = !{i64 2147626711, i64 2147626754, i64 2147626794}
!6721 = !DILocation(line: 202, column: 1, scope: !6337)
!6722 = !{i64 2147626898, i64 2147626941, i64 2147626981}
!6723 = !DILocation(line: 203, column: 1, scope: !6337)
!6724 = !{i64 2147627094, i64 2147627137, i64 2147627177}
!6725 = !DILocation(line: 204, column: 1, scope: !6337)
!6726 = !{i64 2147627302, i64 2147627345, i64 2147627385}
!6727 = !DILocation(line: 205, column: 1, scope: !6337)
!6728 = !{i64 2147627514, i64 2147627557, i64 2147627597}
!6729 = !DILocation(line: 206, column: 1, scope: !6337)
!6730 = !{i64 2147627713, i64 2147627756, i64 2147627796}
!6731 = !DILocation(line: 207, column: 1, scope: !6337)
!6732 = !{i64 2147627951, i64 2147627994, i64 2147628034}
!6733 = !DILocation(line: 208, column: 1, scope: !6337)
!6734 = !{i64 2147628147, i64 2147628190, i64 2147628230}
!6735 = !DILocation(line: 209, column: 1, scope: !6337)
!6736 = !{i64 2147628349, i64 2147628392, i64 2147628432}
!6737 = !DILocation(line: 210, column: 1, scope: !6337)
!6738 = !{i64 2147628542, i64 2147628585, i64 2147628625}
!6739 = !DILocation(line: 211, column: 1, scope: !6337)
!6740 = !{i64 2147628776, i64 2147628819, i64 2147628859}
!6741 = !DILocation(line: 212, column: 1, scope: !6337)
!6742 = !{i64 2147628939, i64 2147628982, i64 2147629022}
!6743 = !DILocation(line: 213, column: 1, scope: !6337)
!6744 = !{i64 2147629178, i64 2147629221, i64 2147629261}
!6745 = !DILocation(line: 214, column: 1, scope: !6337)
!6746 = !{i64 2147629417, i64 2147629460, i64 2147629500}
!6747 = !DILocation(line: 215, column: 1, scope: !6337)
!6748 = !{i64 2147629653, i64 2147629696, i64 2147629736}
!6749 = !DILocation(line: 216, column: 1, scope: !6337)
!6750 = !{i64 2147633944, i64 2147633987, i64 2147634027}
!6751 = !DILocation(line: 217, column: 1, scope: !6337)
!6752 = !{i64 2147634131, i64 2147634174, i64 2147634214}
!6753 = !DILocation(line: 218, column: 1, scope: !6337)
!6754 = !{i64 2147634330, i64 2147634373, i64 2147634413}
!6755 = !DILocation(line: 219, column: 1, scope: !6337)
!6756 = !{i64 2147634601, i64 2147634644, i64 2147634684}
!6757 = !DILocation(line: 220, column: 1, scope: !6337)
!6758 = !{i64 2147634776, i64 2147634819, i64 2147634859}
!6759 = !DILocation(line: 221, column: 1, scope: !6337)
!6760 = !{i64 2147635010, i64 2147635053, i64 2147635093}
!6761 = !DILocation(line: 222, column: 1, scope: !6337)
!6762 = !{i64 2147635218, i64 2147635261, i64 2147635301}
!6763 = !DILocation(line: 223, column: 1, scope: !6337)
!6764 = !{i64 2147635436, i64 2147635479, i64 2147635519}
!6765 = !DILocation(line: 224, column: 1, scope: !6337)
!6766 = !{i64 2147635626, i64 2147635669, i64 2147635709}
!6767 = !DILocation(line: 225, column: 1, scope: !6337)
!6768 = !{i64 2147635858, i64 2147635901, i64 2147635941}
!6769 = !DILocation(line: 226, column: 1, scope: !6337)
!6770 = !{i64 2147636078, i64 2147636121, i64 2147636161}
!6771 = !DILocation(line: 227, column: 1, scope: !6337)
!6772 = !{i64 2147636274, i64 2147636317, i64 2147636357}
!6773 = !DILocation(line: 228, column: 1, scope: !6337)
!6774 = !{i64 2147636480, i64 2147636523, i64 2147636563}
!6775 = !DILocation(line: 229, column: 1, scope: !6337)
!6776 = !{i64 2147636685, i64 2147636728, i64 2147636768}
!6777 = !DILocation(line: 230, column: 1, scope: !6337)
!6778 = !{i64 2147636899, i64 2147636942, i64 2147636982}
!6779 = !DILocation(line: 231, column: 1, scope: !6337)
!6780 = !{i64 2147637125, i64 2147637168, i64 2147637208}
!6781 = !DILocation(line: 232, column: 1, scope: !6337)
!6782 = !{i64 2147637333, i64 2147637376, i64 2147637416}
!6783 = !DILocation(line: 233, column: 1, scope: !6337)
!6784 = !{i64 2147637529, i64 2147637572, i64 2147637612}
!6785 = !DILocation(line: 234, column: 1, scope: !6337)
!6786 = !{i64 2147637761, i64 2147637804, i64 2147637844}
!6787 = !DILocation(line: 235, column: 1, scope: !6337)
!6788 = !{i64 2147637945, i64 2147637988, i64 2147638028}
!6789 = !DILocation(line: 236, column: 1, scope: !6337)
!6790 = !{i64 2147638154, i64 2147638197, i64 2147638237}
!6791 = !DILocation(line: 237, column: 1, scope: !6337)
!6792 = !{i64 2147638362, i64 2147638405, i64 2147638445}
!6793 = !DILocation(line: 238, column: 1, scope: !6337)
!6794 = !{i64 2147638558, i64 2147638601, i64 2147638641}
!6795 = !DILocation(line: 239, column: 1, scope: !6337)
!6796 = !{i64 2147638742, i64 2147638785, i64 2147638825}
!6797 = !DILocation(line: 240, column: 1, scope: !6337)
!6798 = !{i64 2147638968, i64 2147639011, i64 2147639051}
!6799 = !DILocation(line: 241, column: 1, scope: !6337)
!6800 = !{i64 2147639194, i64 2147639237, i64 2147639277}
!6801 = !DILocation(line: 242, column: 1, scope: !6337)
!6802 = !{i64 2147639420, i64 2147639463, i64 2147639503}
!6803 = !DILocation(line: 243, column: 1, scope: !6337)
!6804 = !{i64 2147639646, i64 2147639689, i64 2147639729}
!6805 = !DILocation(line: 244, column: 1, scope: !6337)
!6806 = !{i64 2147639872, i64 2147639915, i64 2147639955}
!6807 = !DILocation(line: 245, column: 1, scope: !6337)
!6808 = !{i64 2147640104, i64 2147640147, i64 2147640187}
!6809 = !DILocation(line: 246, column: 1, scope: !6337)
!6810 = !{i64 2147640342, i64 2147640385, i64 2147640425}
!6811 = !DILocation(line: 247, column: 1, scope: !6337)
!6812 = !{i64 2147640562, i64 2147640605, i64 2147640645}
!6813 = !DILocation(line: 248, column: 1, scope: !6337)
!6814 = !{i64 2147640806, i64 2147640849, i64 2147640889}
!6815 = !DILocation(line: 249, column: 1, scope: !6337)
!6816 = !{i64 2147641047, i64 2147641090, i64 2147641130}
!6817 = !DILocation(line: 250, column: 1, scope: !6337)
!6818 = !{i64 2147641282, i64 2147641325, i64 2147641365}
!6819 = !DILocation(line: 251, column: 1, scope: !6337)
!6820 = !{i64 2147641514, i64 2147641557, i64 2147641597}
!6821 = !DILocation(line: 252, column: 1, scope: !6337)
!6822 = !{i64 2147641716, i64 2147641759, i64 2147641799}
!6823 = !DILocation(line: 253, column: 1, scope: !6337)
!6824 = !{i64 2147641966, i64 2147642009, i64 2147642049}
!6825 = !DILocation(line: 254, column: 1, scope: !6337)
!6826 = !{i64 2147642204, i64 2147642247, i64 2147642287}
!6827 = !DILocation(line: 255, column: 1, scope: !6337)
!6828 = !{i64 2147642412, i64 2147642455, i64 2147642495}
!6829 = !DILocation(line: 256, column: 1, scope: !6337)
!6830 = !{i64 2147646669, i64 2147646712, i64 2147646752}
!6831 = !DILocation(line: 257, column: 1, scope: !6337)
!6832 = !{i64 2147646853, i64 2147646896, i64 2147646936}
!6833 = !DILocation(line: 258, column: 1, scope: !6337)
!6834 = !{i64 2147647070, i64 2147647113, i64 2147647153}
!6835 = !DILocation(line: 259, column: 1, scope: !6337)
!6836 = !{i64 2147647275, i64 2147647318, i64 2147647358}
!6837 = !DILocation(line: 260, column: 1, scope: !6337)
!6838 = !{i64 2147647510, i64 2147647553, i64 2147647593}
!6839 = !DILocation(line: 261, column: 1, scope: !6337)
!6840 = !{i64 2147647733, i64 2147647776, i64 2147647816}
!6841 = !DILocation(line: 262, column: 1, scope: !6337)
!6842 = !{i64 2147647957, i64 2147648000, i64 2147648040}
!6843 = !DILocation(line: 263, column: 1, scope: !6337)
!6844 = !{i64 2147648195, i64 2147648238, i64 2147648278}
!6845 = !DILocation(line: 264, column: 1, scope: !6337)
!6846 = !{i64 2147648433, i64 2147648476, i64 2147648516}
!6847 = !DILocation(line: 265, column: 1, scope: !6337)
!6848 = !{i64 2147648650, i64 2147648693, i64 2147648733}
!6849 = !DILocation(line: 266, column: 1, scope: !6337)
!6850 = !{i64 2147648855, i64 2147648898, i64 2147648938}
!6851 = !DILocation(line: 267, column: 1, scope: !6337)
!6852 = !{i64 2147649048, i64 2147649091, i64 2147649131}
!6853 = !DILocation(line: 268, column: 1, scope: !6337)
!6854 = !{i64 2147649301, i64 2147649344, i64 2147649384}
!6855 = !DILocation(line: 269, column: 1, scope: !6337)
!6856 = !{i64 2147649509, i64 2147649552, i64 2147649592}
!6857 = !DILocation(line: 270, column: 1, scope: !6337)
!6858 = !{i64 2147649705, i64 2147649748, i64 2147649788}
!6859 = !DILocation(line: 271, column: 1, scope: !6337)
!6860 = !{i64 2147649919, i64 2147649962, i64 2147650002}
!6861 = !DILocation(line: 272, column: 1, scope: !6337)
!6862 = !{i64 2147650127, i64 2147650170, i64 2147650210}
!6863 = !DILocation(line: 273, column: 1, scope: !6337)
!6864 = !{i64 2147650317, i64 2147650360, i64 2147650400}
!6865 = !DILocation(line: 274, column: 1, scope: !6337)
!6866 = !{i64 2147650531, i64 2147650574, i64 2147650614}
!6867 = !DILocation(line: 275, column: 1, scope: !6337)
!6868 = !{i64 2147650793, i64 2147650836, i64 2147650876}
!6869 = !DILocation(line: 276, column: 1, scope: !6337)
!6870 = !{i64 2147651004, i64 2147651047, i64 2147651087}
!6871 = !DILocation(line: 277, column: 1, scope: !6337)
!6872 = !{i64 2147651248, i64 2147651291, i64 2147651331}
!6873 = !DILocation(line: 278, column: 1, scope: !6337)
!6874 = !{i64 2147651459, i64 2147651502, i64 2147651542}
!6875 = !DILocation(line: 279, column: 1, scope: !6337)
!6876 = !{i64 2147651688, i64 2147651731, i64 2147651771}
!6877 = !DILocation(line: 280, column: 1, scope: !6337)
!6878 = !{i64 2147651953, i64 2147651996, i64 2147652036}
!6879 = !DILocation(line: 281, column: 1, scope: !6337)
!6880 = !{i64 2147652158, i64 2147652201, i64 2147652241}
!6881 = !DILocation(line: 282, column: 1, scope: !6337)
!6882 = !{i64 2147652354, i64 2147652397, i64 2147652437}
!6883 = !DILocation(line: 283, column: 1, scope: !6337)
!6884 = !{i64 2147652577, i64 2147652620, i64 2147652660}
!6885 = !DILocation(line: 284, column: 1, scope: !6337)
!6886 = !{i64 2147652740, i64 2147652783, i64 2147652823}
!6887 = !DILocation(line: 285, column: 1, scope: !6337)
!6888 = !{i64 2147652945, i64 2147652988, i64 2147653028}
!6889 = !DILocation(line: 286, column: 1, scope: !6337)
!6890 = !{i64 2147653165, i64 2147653208, i64 2147653248}
!6891 = !DILocation(line: 287, column: 1, scope: !6337)
!6892 = !{i64 2147653379, i64 2147653422, i64 2147653462}
!6893 = !DILocation(line: 288, column: 1, scope: !6337)
!6894 = !{i64 2147653623, i64 2147653666, i64 2147653706}
!6895 = !DILocation(line: 289, column: 1, scope: !6337)
!6896 = !{i64 2147653855, i64 2147653898, i64 2147653938}
!6897 = !DILocation(line: 290, column: 1, scope: !6337)
!6898 = !{i64 2147654069, i64 2147654112, i64 2147654152}
!6899 = !DILocation(line: 291, column: 1, scope: !6337)
!6900 = !{i64 2147654280, i64 2147654323, i64 2147654363}
!6901 = !DILocation(line: 292, column: 1, scope: !6337)
!6902 = !{i64 2147654473, i64 2147654516, i64 2147654556}
!6903 = !DILocation(line: 293, column: 1, scope: !6337)
!6904 = !{i64 2147654672, i64 2147654715, i64 2147654755}
!6905 = !DILocation(line: 294, column: 1, scope: !6337)
!6906 = !{i64 2147654844, i64 2147654887, i64 2147654927}
!6907 = !DILocation(line: 295, column: 1, scope: !6337)
!6908 = !{i64 2147655037, i64 2147655080, i64 2147655120}
!6909 = !DILocation(line: 296, column: 1, scope: !6337)
!6910 = !{i64 2147655233, i64 2147655276, i64 2147655316}
!6911 = !DILocation(line: 297, column: 1, scope: !6337)
!6912 = !{i64 2147655396, i64 2147655439, i64 2147655479}
!6913 = !DILocation(line: 298, column: 1, scope: !6337)
!6914 = !{i64 2147659659, i64 2147659702, i64 2147659742}
!6915 = !DILocation(line: 299, column: 1, scope: !6337)
!6916 = !{i64 2147659864, i64 2147659907, i64 2147659947}
!6917 = !DILocation(line: 300, column: 1, scope: !6337)
!6918 = !{i64 2147660072, i64 2147660115, i64 2147660155}
!6919 = !DILocation(line: 301, column: 1, scope: !6337)
!6920 = !{i64 2147660265, i64 2147660308, i64 2147660348}
!6921 = !DILocation(line: 302, column: 1, scope: !6337)
!6922 = !{i64 2147660452, i64 2147660495, i64 2147660535}
!6923 = !DILocation(line: 303, column: 1, scope: !6337)
!6924 = !{i64 2147660679, i64 2147660722, i64 2147660762}
!6925 = !DILocation(line: 304, column: 1, scope: !6337)
!6926 = !{i64 2147660845, i64 2147660888, i64 2147660928}
!6927 = !DILocation(line: 305, column: 1, scope: !6337)
!6928 = !{i64 2147661083, i64 2147661126, i64 2147661166}
!6929 = !DILocation(line: 306, column: 1, scope: !6337)
!6930 = !{i64 2147661333, i64 2147661376, i64 2147661416}
!6931 = !DILocation(line: 307, column: 1, scope: !6337)
!6932 = !{i64 2147661541, i64 2147661584, i64 2147661624}
!6933 = !DILocation(line: 308, column: 1, scope: !6337)
!6934 = !{i64 2147661737, i64 2147661780, i64 2147661820}
!6935 = !DILocation(line: 309, column: 1, scope: !6337)
!6936 = !{i64 2147661954, i64 2147661997, i64 2147662037}
!6937 = !DILocation(line: 310, column: 1, scope: !6337)
!6938 = !{i64 2147662246, i64 2147662289, i64 2147662329}
!6939 = !DILocation(line: 311, column: 1, scope: !6337)
!6940 = !{i64 2147662478, i64 2147662521, i64 2147662561}
!6941 = !DILocation(line: 312, column: 1, scope: !6337)
!6942 = !{i64 2147662695, i64 2147662738, i64 2147662778}
!6943 = !DILocation(line: 313, column: 1, scope: !6337)
!6944 = !{i64 2147662902, i64 2147662945, i64 2147662985}
!6945 = !DILocation(line: 314, column: 1, scope: !6337)
!6946 = !{i64 2147663103, i64 2147663146, i64 2147663186}
!6947 = !DILocation(line: 315, column: 1, scope: !6337)
!6948 = !{i64 2147663335, i64 2147663378, i64 2147663418}
!6949 = !DILocation(line: 316, column: 1, scope: !6337)
!6950 = !{i64 2147663543, i64 2147663586, i64 2147663626}
!6951 = !DILocation(line: 317, column: 1, scope: !6337)
!6952 = !{i64 2147663733, i64 2147663776, i64 2147663816}
!6953 = !DILocation(line: 318, column: 1, scope: !6337)
!6954 = !{i64 2147663959, i64 2147664002, i64 2147664042}
!6955 = !DILocation(line: 319, column: 1, scope: !6337)
!6956 = !{i64 2147664148, i64 2147664191, i64 2147664231}
!6957 = !DILocation(line: 320, column: 1, scope: !6337)
!6958 = !{i64 2147664419, i64 2147664462, i64 2147664502}
!6959 = !DILocation(line: 321, column: 1, scope: !6337)
!6960 = !{i64 2147664639, i64 2147664682, i64 2147664722}
!6961 = !DILocation(line: 322, column: 1, scope: !6337)
!6962 = !{i64 2147664892, i64 2147664935, i64 2147664975}
!6963 = !DILocation(line: 323, column: 1, scope: !6337)
!6964 = !{i64 2147665100, i64 2147665143, i64 2147665183}
!6965 = !DILocation(line: 324, column: 1, scope: !6337)
!6966 = !{i64 2147665332, i64 2147665375, i64 2147665415}
!6967 = !DILocation(line: 325, column: 1, scope: !6337)
!6968 = !{i64 2147665543, i64 2147665586, i64 2147665626}
!6969 = !DILocation(line: 326, column: 1, scope: !6337)
!6970 = !{i64 2147665733, i64 2147665776, i64 2147665816}
!6971 = !DILocation(line: 327, column: 1, scope: !6337)
!6972 = !{i64 2147665947, i64 2147665990, i64 2147666030}
!6973 = !DILocation(line: 328, column: 1, scope: !6337)
!6974 = !{i64 2147666146, i64 2147666189, i64 2147666229}
!6975 = !DILocation(line: 329, column: 1, scope: !6337)
!6976 = !{i64 2147666333, i64 2147666376, i64 2147666416}
!6977 = !DILocation(line: 330, column: 1, scope: !6337)
!6978 = !{i64 2147666541, i64 2147666584, i64 2147666624}
!6979 = !DILocation(line: 331, column: 1, scope: !6337)
!6980 = !{i64 2147666770, i64 2147666813, i64 2147666853}
!6981 = !DILocation(line: 332, column: 1, scope: !6337)
!6982 = !{i64 2147666972, i64 2147667015, i64 2147667055}
!6983 = !DILocation(line: 333, column: 1, scope: !6337)
!6984 = !{i64 2147667171, i64 2147667214, i64 2147667254}
!6985 = !DILocation(line: 334, column: 1, scope: !6337)
!6986 = !{i64 2147667388, i64 2147667431, i64 2147667471}
!6987 = !DILocation(line: 336, column: 1, scope: !6337)
!6988 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !417, file: !417, line: 30, type: !424, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6989)
!6989 = !{!6990, !6991}
!6990 = !DILocalVariable(name: "arg", arg: 1, scope: !6988, file: !417, line: 30, type: !426)
!6991 = !DILocalVariable(name: "key", scope: !6988, file: !417, line: 32, type: !108)
!6992 = !DILocation(line: 0, scope: !6988)
!6993 = !DILocation(line: 37, column: 2, scope: !6988)
!6994 = !DILocation(line: 38, column: 2, scope: !6988)
!6995 = !DILocation(line: 55, column: 2, scope: !6996, inlinedAt: !7003)
!6996 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7000)
!6997 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6998 = !DISubroutineType(types: !6999)
!6999 = !{!32}
!7000 = !{!7001, !7002}
!7001 = !DILocalVariable(name: "key", scope: !6996, file: !6997, line: 44, type: !32)
!7002 = !DILocalVariable(name: "tmp", scope: !6996, file: !6997, line: 53, type: !32)
!7003 = distinct !DILocation(line: 40, column: 8, scope: !6988)
!7004 = !{i64 2132029}
!7005 = !DILocation(line: 0, scope: !6996, inlinedAt: !7003)
!7006 = !DILocalVariable(name: "key", arg: 1, scope: !7007, file: !6997, line: 84, type: !32)
!7007 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7010)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !32}
!7010 = !{!7006}
!7011 = !DILocation(line: 0, scope: !7007, inlinedAt: !7012)
!7012 = distinct !DILocation(line: 47, column: 2, scope: !6988)
!7013 = !DILocation(line: 95, column: 2, scope: !7007, inlinedAt: !7012)
!7014 = !{i64 2132846}
!7015 = !DILocation(line: 51, column: 18, scope: !6988)
!7016 = !DILocation(line: 53, column: 2, scope: !6988)
!7017 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7018, file: !7018, line: 1609, type: !334, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!7018 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7019 = !DILocation(line: 1611, column: 3, scope: !7017)
!7020 = !DILocation(line: 1612, column: 1, scope: !7017)
!7021 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7018, file: !7018, line: 1629, type: !334, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!7022 = !DILocation(line: 1631, column: 3, scope: !7021)
!7023 = !DILocation(line: 1632, column: 1, scope: !7021)
!7024 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !453, file: !453, line: 26, type: !459, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !450, retainedNodes: !7025)
!7025 = !{!7026}
!7026 = !DILocalVariable(name: "dev", arg: 1, scope: !7024, file: !453, line: 26, type: !461)
!7027 = !DILocation(line: 0, scope: !7024)
!7028 = !DILocation(line: 68, column: 2, scope: !7024)
!7029 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7030, file: !7030, line: 14, type: !4581, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7031)
!7030 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7031 = !{!7032, !7033}
!7032 = !DILocalVariable(name: "fmt", arg: 1, scope: !7029, file: !7030, line: 14, type: !337)
!7033 = !DILocalVariable(name: "ap", scope: !7029, file: !7030, line: 16, type: !7034)
!7034 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3650, line: 99, baseType: !7035)
!7035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3650, line: 40, baseType: !7036)
!7036 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7030, baseType: !7037)
!7037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7038)
!7038 = !{!7039}
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7037, file: !7030, line: 16, baseType: !102, size: 32)
!7040 = !DILocation(line: 0, scope: !7029)
!7041 = !DILocation(line: 16, column: 2, scope: !7029)
!7042 = !DILocation(line: 16, column: 10, scope: !7029)
!7043 = !DILocation(line: 18, column: 2, scope: !7029)
!7044 = !DILocation(line: 19, column: 2, scope: !7029)
!7045 = !DILocation(line: 20, column: 2, scope: !7029)
!7046 = !DILocation(line: 21, column: 1, scope: !7029)
!7047 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7030, file: !7030, line: 23, type: !7048, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7050)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{null, !337, !7034}
!7050 = !{!7051, !7052}
!7051 = !DILocalVariable(name: "fmt", arg: 1, scope: !7047, file: !7030, line: 23, type: !337)
!7052 = !DILocalVariable(name: "ap", arg: 2, scope: !7047, file: !7030, line: 23, type: !7034)
!7053 = !DILocation(line: 0, scope: !7047)
!7054 = !DILocation(line: 25, column: 2, scope: !7047)
!7055 = !DILocation(line: 26, column: 1, scope: !7047)
!7056 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7030, file: !7030, line: 52, type: !7057, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7059)
!7057 = !DISubroutineType(types: !7058)
!7058 = !{null, !103, !13, !132}
!7059 = !{!7060, !7061, !7062, !7063}
!7060 = !DILocalVariable(name: "level", arg: 1, scope: !7056, file: !7030, line: 52, type: !103)
!7061 = !DILocalVariable(name: "data", arg: 2, scope: !7056, file: !7030, line: 52, type: !13)
!7062 = !DILocalVariable(name: "size", arg: 3, scope: !7056, file: !7030, line: 52, type: !132)
!7063 = !DILocalVariable(name: "data_buffer", scope: !7056, file: !7030, line: 54, type: !337)
!7064 = !DILocation(line: 0, scope: !7056)
!7065 = !DILocation(line: 55, column: 14, scope: !7056)
!7066 = !DILocation(line: 55, column: 2, scope: !7056)
!7067 = !DILocation(line: 56, column: 3, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7056, file: !7030, line: 55, column: 20)
!7069 = !DILocation(line: 57, column: 3, scope: !7068)
!7070 = !DILocation(line: 59, column: 7, scope: !7068)
!7071 = distinct !{!7071, !7066, !7072}
!7072 = !DILocation(line: 65, column: 2, scope: !7056)
!7073 = !DILocation(line: 66, column: 1, scope: !7056)
!7074 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3582, file: !3582, line: 175, type: !3583, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7075)
!7075 = !{!7076}
!7076 = !DILocalVariable(name: "level", arg: 1, scope: !7074, file: !3582, line: 175, type: !103)
!7077 = !DILocation(line: 0, scope: !7074)
!7078 = !DILocation(line: 177, column: 2, scope: !7074)
!7079 = !DILocation(line: 189, column: 1, scope: !7074)
!7080 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7030, file: !7030, line: 28, type: !7081, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7083)
!7081 = !DISubroutineType(types: !7082)
!7082 = !{null, !337, !132}
!7083 = !{!7084, !7085, !7086, !7088, !7090}
!7084 = !DILocalVariable(name: "data", arg: 1, scope: !7080, file: !7030, line: 28, type: !337)
!7085 = !DILocalVariable(name: "length", arg: 2, scope: !7080, file: !7030, line: 28, type: !132)
!7086 = !DILocalVariable(name: "i", scope: !7087, file: !7030, line: 30, type: !132)
!7087 = distinct !DILexicalBlock(scope: !7080, file: !7030, line: 30, column: 2)
!7088 = !DILocalVariable(name: "i", scope: !7089, file: !7030, line: 40, type: !132)
!7089 = distinct !DILexicalBlock(scope: !7080, file: !7030, line: 40, column: 2)
!7090 = !DILocalVariable(name: "c", scope: !7091, file: !7030, line: 42, type: !186)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !7030, line: 41, column: 19)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !7030, line: 41, column: 7)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !7030, line: 40, column: 54)
!7094 = distinct !DILexicalBlock(scope: !7089, file: !7030, line: 40, column: 2)
!7095 = !DILocation(line: 0, scope: !7080)
!7096 = !DILocation(line: 0, scope: !7087)
!7097 = !DILocation(line: 30, column: 2, scope: !7087)
!7098 = !DILocation(line: 38, column: 2, scope: !7080)
!7099 = !DILocation(line: 0, scope: !7089)
!7100 = !DILocation(line: 40, column: 2, scope: !7089)
!7101 = !DILocation(line: 31, column: 9, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !7030, line: 31, column: 7)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !7030, line: 30, column: 54)
!7104 = distinct !DILexicalBlock(scope: !7087, file: !7030, line: 30, column: 2)
!7105 = !DILocation(line: 31, column: 7, scope: !7103)
!7106 = !DILocation(line: 32, column: 35, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7102, file: !7030, line: 31, column: 19)
!7108 = !DILocation(line: 32, column: 20, scope: !7107)
!7109 = !DILocation(line: 32, column: 4, scope: !7107)
!7110 = !DILocation(line: 33, column: 3, scope: !7107)
!7111 = !DILocation(line: 34, column: 4, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7102, file: !7030, line: 33, column: 10)
!7113 = !DILocation(line: 30, column: 50, scope: !7104)
!7114 = !DILocation(line: 30, column: 24, scope: !7104)
!7115 = distinct !{!7115, !7097, !7116}
!7116 = !DILocation(line: 36, column: 2, scope: !7087)
!7117 = !DILocation(line: 49, column: 2, scope: !7080)
!7118 = !DILocation(line: 50, column: 1, scope: !7080)
!7119 = !DILocation(line: 41, column: 9, scope: !7092)
!7120 = !DILocation(line: 41, column: 7, scope: !7093)
!7121 = !DILocation(line: 42, column: 22, scope: !7091)
!7122 = !DILocation(line: 0, scope: !7091)
!7123 = !DILocation(line: 44, column: 25, scope: !7091)
!7124 = !DILocation(line: 44, column: 17, scope: !7091)
!7125 = !DILocation(line: 44, column: 33, scope: !7091)
!7126 = !DILocation(line: 44, column: 4, scope: !7091)
!7127 = !DILocation(line: 45, column: 3, scope: !7091)
!7128 = !DILocation(line: 46, column: 4, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7092, file: !7030, line: 45, column: 10)
!7130 = !DILocation(line: 40, column: 50, scope: !7094)
!7131 = !DILocation(line: 40, column: 24, scope: !7094)
!7132 = distinct !{!7132, !7100, !7133}
!7133 = !DILocation(line: 48, column: 2, scope: !7089)
!7134 = distinct !DISubprogram(name: "isprint", scope: !6110, file: !6110, line: 37, type: !396, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7135)
!7135 = !{!7136}
!7136 = !DILocalVariable(name: "c", arg: 1, scope: !7134, file: !6110, line: 37, type: !103)
!7137 = !DILocation(line: 0, scope: !7134)
!7138 = !DILocation(line: 39, column: 38, scope: !7134)
!7139 = !DILocation(line: 39, column: 2, scope: !7134)
!7140 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7141, file: !7141, line: 57, type: !7142, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7188)
!7141 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7142 = !DISubroutineType(types: !7143)
!7143 = !{null, !32, !7144}
!7144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7145, size: 32)
!7145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7146)
!7146 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2833, line: 141, baseType: !7147)
!7147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2833, line: 97, size: 256, elements: !7148)
!7148 = !{!7149}
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7147, file: !2833, line: 107, baseType: !7150, size: 256)
!7150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2833, line: 98, size: 256, elements: !7151)
!7151 = !{!7152, !7157, !7162, !7167, !7172, !7177, !7182, !7187}
!7152 = !DIDerivedType(tag: DW_TAG_member, scope: !7150, file: !2833, line: 99, baseType: !7153, size: 32)
!7153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7150, file: !2833, line: 99, size: 32, elements: !7154)
!7154 = !{!7155, !7156}
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7153, file: !2833, line: 99, baseType: !108, size: 32)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7153, file: !2833, line: 99, baseType: !108, size: 32)
!7157 = !DIDerivedType(tag: DW_TAG_member, scope: !7150, file: !2833, line: 100, baseType: !7158, size: 32, offset: 32)
!7158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7150, file: !2833, line: 100, size: 32, elements: !7159)
!7159 = !{!7160, !7161}
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7158, file: !2833, line: 100, baseType: !108, size: 32)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7158, file: !2833, line: 100, baseType: !108, size: 32)
!7162 = !DIDerivedType(tag: DW_TAG_member, scope: !7150, file: !2833, line: 101, baseType: !7163, size: 32, offset: 64)
!7163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7150, file: !2833, line: 101, size: 32, elements: !7164)
!7164 = !{!7165, !7166}
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7163, file: !2833, line: 101, baseType: !108, size: 32)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7163, file: !2833, line: 101, baseType: !108, size: 32)
!7167 = !DIDerivedType(tag: DW_TAG_member, scope: !7150, file: !2833, line: 102, baseType: !7168, size: 32, offset: 96)
!7168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7150, file: !2833, line: 102, size: 32, elements: !7169)
!7169 = !{!7170, !7171}
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7168, file: !2833, line: 102, baseType: !108, size: 32)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7168, file: !2833, line: 102, baseType: !108, size: 32)
!7172 = !DIDerivedType(tag: DW_TAG_member, scope: !7150, file: !2833, line: 103, baseType: !7173, size: 32, offset: 128)
!7173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7150, file: !2833, line: 103, size: 32, elements: !7174)
!7174 = !{!7175, !7176}
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7173, file: !2833, line: 103, baseType: !108, size: 32)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7173, file: !2833, line: 103, baseType: !108, size: 32)
!7177 = !DIDerivedType(tag: DW_TAG_member, scope: !7150, file: !2833, line: 104, baseType: !7178, size: 32, offset: 160)
!7178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7150, file: !2833, line: 104, size: 32, elements: !7179)
!7179 = !{!7180, !7181}
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7178, file: !2833, line: 104, baseType: !108, size: 32)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7178, file: !2833, line: 104, baseType: !108, size: 32)
!7182 = !DIDerivedType(tag: DW_TAG_member, scope: !7150, file: !2833, line: 105, baseType: !7183, size: 32, offset: 192)
!7183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7150, file: !2833, line: 105, size: 32, elements: !7184)
!7184 = !{!7185, !7186}
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7183, file: !2833, line: 105, baseType: !108, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7183, file: !2833, line: 105, baseType: !108, size: 32)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7150, file: !2833, line: 106, baseType: !108, size: 32, offset: 224)
!7188 = !{!7189, !7190}
!7189 = !DILocalVariable(name: "reason", arg: 1, scope: !7140, file: !7141, line: 57, type: !32)
!7190 = !DILocalVariable(name: "esf", arg: 2, scope: !7140, file: !7141, line: 57, type: !7144)
!7191 = !DILocation(line: 0, scope: !7140)
!7192 = !DILocation(line: 60, column: 10, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7140, file: !7141, line: 60, column: 6)
!7194 = !DILocation(line: 60, column: 6, scope: !7140)
!7195 = !DILocation(line: 61, column: 3, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !7141, line: 60, column: 19)
!7197 = !DILocation(line: 62, column: 2, scope: !7196)
!7198 = !DILocation(line: 63, column: 2, scope: !7140)
!7199 = !DILocation(line: 64, column: 1, scope: !7140)
!7200 = distinct !DISubprogram(name: "esf_dump", scope: !7141, file: !7141, line: 20, type: !7201, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7203)
!7201 = !DISubroutineType(types: !7202)
!7202 = !{null, !7144}
!7203 = !{!7204}
!7204 = !DILocalVariable(name: "esf", arg: 1, scope: !7200, file: !7141, line: 20, type: !7144)
!7205 = !DILocation(line: 0, scope: !7200)
!7206 = !DILocation(line: 22, column: 2, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !7141, line: 22, column: 2)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !7141, line: 22, column: 2)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !7141, line: 22, column: 2)
!7210 = distinct !DILexicalBlock(scope: !7200, file: !7141, line: 22, column: 2)
!7211 = !DILocation(line: 24, column: 2, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !7141, line: 24, column: 2)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !7141, line: 24, column: 2)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !7141, line: 24, column: 2)
!7215 = distinct !DILexicalBlock(scope: !7200, file: !7141, line: 24, column: 2)
!7216 = !DILocation(line: 26, column: 2, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !7141, line: 26, column: 2)
!7218 = distinct !DILexicalBlock(scope: !7219, file: !7141, line: 26, column: 2)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !7141, line: 26, column: 2)
!7220 = distinct !DILexicalBlock(scope: !7200, file: !7141, line: 26, column: 2)
!7221 = !DILocation(line: 53, column: 2, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !7141, line: 53, column: 2)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !7141, line: 53, column: 2)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !7141, line: 53, column: 2)
!7225 = distinct !DILexicalBlock(scope: !7200, file: !7141, line: 53, column: 2)
!7226 = !DILocation(line: 55, column: 1, scope: !7200)
!7227 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7141, file: !7141, line: 82, type: !7228, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7243)
!7228 = !DISubroutineType(types: !7229)
!7229 = !{null, !7144, !7230}
!7230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7231, size: 32)
!7231 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7232)
!7232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7233)
!7233 = !{!7234, !7235, !7236, !7237, !7238, !7239, !7240, !7241, !7242}
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7232, file: !214, line: 26, baseType: !108, size: 32)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7232, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7232, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7232, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7232, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7232, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7232, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7232, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7232, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7243 = !{!7244, !7245, !7246}
!7244 = !DILocalVariable(name: "esf", arg: 1, scope: !7227, file: !7141, line: 82, type: !7144)
!7245 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7227, file: !7141, line: 82, type: !7230)
!7246 = !DILocalVariable(name: "reason", scope: !7227, file: !7141, line: 88, type: !32)
!7247 = !DILocation(line: 0, scope: !7227)
!7248 = !DILocation(line: 88, column: 35, scope: !7227)
!7249 = !DILocation(line: 108, column: 2, scope: !7227)
!7250 = !DILocation(line: 131, column: 1, scope: !7227)
!7251 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7141, file: !7141, line: 133, type: !7252, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7254)
!7252 = !DISubroutineType(types: !7253)
!7253 = !{null, !102}
!7254 = !{!7255, !7256, !7257}
!7255 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7251, file: !7141, line: 133, type: !102)
!7256 = !DILocalVariable(name: "ssf_contents", scope: !7251, file: !7141, line: 135, type: !984)
!7257 = !DILocalVariable(name: "oops_esf", scope: !7251, file: !7141, line: 136, type: !7146)
!7258 = !DILocation(line: 0, scope: !7251)
!7259 = !DILocation(line: 136, column: 2, scope: !7251)
!7260 = !DILocation(line: 136, column: 15, scope: !7251)
!7261 = !DILocation(line: 139, column: 22, scope: !7251)
!7262 = !DILocation(line: 139, column: 17, scope: !7251)
!7263 = !DILocation(line: 139, column: 20, scope: !7251)
!7264 = !DILocation(line: 141, column: 2, scope: !7251)
!7265 = !DILocation(line: 142, column: 2, scope: !7251)
!7266 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7267, file: !7267, line: 40, type: !7008, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !7268)
!7267 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7268 = !{!7269}
!7269 = !DILocalVariable(name: "irq", arg: 1, scope: !7266, file: !7267, line: 40, type: !32)
!7270 = !DILocation(line: 0, scope: !7266)
!7271 = !DILocation(line: 42, column: 2, scope: !7266)
!7272 = !DILocation(line: 43, column: 1, scope: !7266)
!7273 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !624, file: !624, line: 1684, type: !7274, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !7276)
!7274 = !DISubroutineType(types: !7275)
!7275 = !{null, !891}
!7276 = !{!7277}
!7277 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7273, file: !624, line: 1684, type: !891)
!7278 = !DILocation(line: 0, scope: !7273)
!7279 = !DILocation(line: 1686, column: 23, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7273, file: !624, line: 1686, column: 7)
!7281 = !DILocation(line: 1686, column: 7, scope: !7273)
!7282 = !DILocation(line: 1688, column: 5, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7280, file: !624, line: 1687, column: 3)
!7284 = !{i64 2151025001}
!7285 = !DILocation(line: 1689, column: 81, scope: !7283)
!7286 = !DILocation(line: 1689, column: 60, scope: !7283)
!7287 = !DILocation(line: 1689, column: 34, scope: !7283)
!7288 = !DILocation(line: 1689, column: 5, scope: !7283)
!7289 = !DILocation(line: 1689, column: 43, scope: !7283)
!7290 = !DILocation(line: 1690, column: 5, scope: !7283)
!7291 = !{i64 2151025115}
!7292 = !DILocation(line: 1691, column: 3, scope: !7283)
!7293 = !DILocation(line: 1692, column: 1, scope: !7273)
!7294 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7267, file: !7267, line: 45, type: !7008, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !7295)
!7295 = !{!7296}
!7296 = !DILocalVariable(name: "irq", arg: 1, scope: !7294, file: !7267, line: 45, type: !32)
!7297 = !DILocation(line: 0, scope: !7294)
!7298 = !DILocation(line: 47, column: 2, scope: !7294)
!7299 = !DILocation(line: 48, column: 1, scope: !7294)
!7300 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !624, file: !624, line: 1722, type: !7274, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !7301)
!7301 = !{!7302}
!7302 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7300, file: !624, line: 1722, type: !891)
!7303 = !DILocation(line: 0, scope: !7300)
!7304 = !DILocation(line: 1724, column: 23, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7300, file: !624, line: 1724, column: 7)
!7306 = !DILocation(line: 1724, column: 7, scope: !7300)
!7307 = !DILocation(line: 1726, column: 81, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7305, file: !624, line: 1725, column: 3)
!7309 = !DILocation(line: 1726, column: 60, scope: !7308)
!7310 = !DILocation(line: 1726, column: 34, scope: !7308)
!7311 = !DILocation(line: 1726, column: 5, scope: !7308)
!7312 = !DILocation(line: 1726, column: 43, scope: !7308)
!7313 = !DILocation(line: 271, column: 3, scope: !7314, inlinedAt: !7316)
!7314 = distinct !DISubprogram(name: "__DSB", scope: !7315, file: !7315, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !251)
!7315 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7316 = distinct !DILocation(line: 1727, column: 5, scope: !7308)
!7317 = !{i64 3479384}
!7318 = !DILocation(line: 260, column: 3, scope: !7319, inlinedAt: !7320)
!7319 = distinct !DISubprogram(name: "__ISB", scope: !7315, file: !7315, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !251)
!7320 = distinct !DILocation(line: 1728, column: 5, scope: !7308)
!7321 = !{i64 3479101}
!7322 = !DILocation(line: 1729, column: 3, scope: !7308)
!7323 = !DILocation(line: 1730, column: 1, scope: !7300)
!7324 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7267, file: !7267, line: 50, type: !7325, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !7327)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{!103, !32}
!7327 = !{!7328}
!7328 = !DILocalVariable(name: "irq", arg: 1, scope: !7324, file: !7267, line: 50, type: !32)
!7329 = !DILocation(line: 0, scope: !7324)
!7330 = !DILocation(line: 52, column: 20, scope: !7324)
!7331 = !DILocation(line: 52, column: 9, scope: !7324)
!7332 = !DILocation(line: 52, column: 41, scope: !7324)
!7333 = !DILocation(line: 52, column: 39, scope: !7324)
!7334 = !DILocation(line: 52, column: 2, scope: !7324)
!7335 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7267, file: !7267, line: 64, type: !7336, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !7338)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{null, !32, !32, !108}
!7338 = !{!7339, !7340, !7341}
!7339 = !DILocalVariable(name: "irq", arg: 1, scope: !7335, file: !7267, line: 64, type: !32)
!7340 = !DILocalVariable(name: "prio", arg: 2, scope: !7335, file: !7267, line: 64, type: !32)
!7341 = !DILocalVariable(name: "flags", arg: 3, scope: !7335, file: !7267, line: 64, type: !108)
!7342 = !DILocation(line: 0, scope: !7335)
!7343 = !DILocation(line: 83, column: 8, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !7267, line: 82, column: 9)
!7345 = distinct !DILexicalBlock(scope: !7335, file: !7267, line: 76, column: 6)
!7346 = !DILocation(line: 95, column: 2, scope: !7335)
!7347 = !DILocation(line: 96, column: 1, scope: !7335)
!7348 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7349, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !7351)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{null, !891, !108}
!7351 = !{!7352, !7353}
!7352 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7348, file: !624, line: 1814, type: !891)
!7353 = !DILocalVariable(name: "priority", arg: 2, scope: !7348, file: !624, line: 1814, type: !108)
!7354 = !DILocation(line: 0, scope: !7348)
!7355 = !DILocation(line: 0, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7348, file: !624, line: 1816, column: 7)
!7357 = !DILocation(line: 1816, column: 7, scope: !7348)
!7358 = !DILocation(line: 1824, column: 1, scope: !7348)
!7359 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7267, file: !7267, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2724, retainedNodes: !7360)
!7360 = !{!7361}
!7361 = !DILocalVariable(name: "unused", arg: 1, scope: !7359, file: !7267, line: 155, type: !13)
!7362 = !DILocation(line: 0, scope: !7359)
!7363 = !DILocation(line: 159, column: 2, scope: !7359)
!7364 = !DILocation(line: 160, column: 1, scope: !7359)
!7365 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7366, file: !7366, line: 87, type: !334, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !251)
!7366 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7367 = !DILocation(line: 89, column: 2, scope: !7365)
!7368 = !DILocation(line: 90, column: 2, scope: !7365)
!7369 = !DILocation(line: 91, column: 1, scope: !7365)
!7370 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7366, file: !7366, line: 23, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7371 = !DISubprogram(name: "z_arm_int_exit", scope: !7372, file: !7372, line: 153, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7372 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7373 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7374, file: !7374, line: 256, type: !334, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !251)
!7374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7375 = !DILocation(line: 258, column: 2, scope: !7373)
!7376 = !DILocation(line: 260, column: 2, scope: !7373)
!7377 = !DILocation(line: 262, column: 2, scope: !7373)
!7378 = !DILocation(line: 263, column: 2, scope: !7373)
!7379 = !DILocation(line: 267, column: 2, scope: !7373)
!7380 = !DILocation(line: 268, column: 2, scope: !7373)
!7381 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7374, file: !7374, line: 53, type: !334, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !251)
!7382 = !DILocation(line: 55, column: 12, scope: !7381)
!7383 = !DILocation(line: 271, column: 3, scope: !7384, inlinedAt: !7385)
!7384 = distinct !DISubprogram(name: "__DSB", scope: !7315, file: !7315, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !251)
!7385 = distinct !DILocation(line: 56, column: 2, scope: !7381)
!7386 = !{i64 3478055}
!7387 = !DILocation(line: 260, column: 3, scope: !7388, inlinedAt: !7389)
!7388 = distinct !DISubprogram(name: "__ISB", scope: !7315, file: !7315, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !251)
!7389 = distinct !DILocation(line: 57, column: 2, scope: !7381)
!7390 = !{i64 3477772}
!7391 = !DILocation(line: 58, column: 1, scope: !7381)
!7392 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7374, file: !7374, line: 96, type: !334, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !251)
!7393 = !DILocation(line: 103, column: 13, scope: !7392)
!7394 = !DILocation(line: 975, column: 3, scope: !7395, inlinedAt: !7398)
!7395 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7315, file: !7315, line: 971, type: !3591, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7396)
!7396 = !{!7397}
!7397 = !DILocalVariable(name: "result", scope: !7395, file: !7315, line: 973, type: !108)
!7398 = distinct !DILocation(line: 189, column: 16, scope: !7392)
!7399 = !{i64 3498885}
!7400 = !DILocation(line: 0, scope: !7395, inlinedAt: !7398)
!7401 = !DILocation(line: 189, column: 32, scope: !7392)
!7402 = !DILocalVariable(name: "control", arg: 1, scope: !7403, file: !7315, line: 1001, type: !108)
!7403 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7315, file: !7315, line: 1001, type: !7404, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2772, retainedNodes: !7406)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{null, !108}
!7406 = !{!7402}
!7407 = !DILocation(line: 0, scope: !7403, inlinedAt: !7408)
!7408 = distinct !DILocation(line: 189, column: 2, scope: !7392)
!7409 = !DILocation(line: 1003, column: 3, scope: !7403, inlinedAt: !7408)
!7410 = !{i64 3499605}
!7411 = !DILocation(line: 260, column: 3, scope: !7388, inlinedAt: !7412)
!7412 = distinct !DILocation(line: 1004, column: 3, scope: !7403, inlinedAt: !7408)
!7413 = !DILocation(line: 191, column: 1, scope: !7392)
!7414 = distinct !DISubprogram(name: "arch_swap", scope: !7415, file: !7415, line: 33, type: !7325, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !7416)
!7415 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7416 = !{!7417}
!7417 = !DILocalVariable(name: "key", arg: 1, scope: !7414, file: !7415, line: 33, type: !32)
!7418 = !DILocation(line: 0, scope: !7414)
!7419 = !DILocation(line: 36, column: 2, scope: !7414)
!7420 = !DILocation(line: 36, column: 17, scope: !7414)
!7421 = !DILocation(line: 36, column: 25, scope: !7414)
!7422 = !DILocation(line: 37, column: 37, scope: !7414)
!7423 = !DILocation(line: 37, column: 17, scope: !7414)
!7424 = !DILocation(line: 37, column: 35, scope: !7414)
!7425 = !DILocation(line: 41, column: 12, scope: !7414)
!7426 = !DILocalVariable(name: "key", arg: 1, scope: !7427, file: !6997, line: 84, type: !32)
!7427 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !7428)
!7428 = !{!7426}
!7429 = !DILocation(line: 0, scope: !7427, inlinedAt: !7430)
!7430 = distinct !DILocation(line: 44, column: 2, scope: !7414)
!7431 = !DILocation(line: 95, column: 2, scope: !7427, inlinedAt: !7430)
!7432 = !{i64 2240119}
!7433 = !DILocation(line: 53, column: 9, scope: !7414)
!7434 = !DILocation(line: 53, column: 24, scope: !7414)
!7435 = !DILocation(line: 53, column: 2, scope: !7414)
!7436 = distinct !DISubprogram(name: "arch_new_thread", scope: !7437, file: !7437, line: 56, type: !7438, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7545)
!7437 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7438 = !DISubroutineType(types: !7439)
!7439 = !{null, !7440, !7540, !277, !321, !102, !102, !102}
!7440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7441, size: 32)
!7441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !7442)
!7442 = !{!7443, !7501, !7513, !7514, !7515, !7516, !7522, !7535}
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7441, file: !163, line: 247, baseType: !7444, size: 384)
!7444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !7445)
!7445 = !{!7446, !7470, !7477, !7478, !7479, !7488, !7489, !7490}
!7446 = !DIDerivedType(tag: DW_TAG_member, scope: !7444, file: !163, line: 60, baseType: !7447, size: 64)
!7447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7444, file: !163, line: 60, size: 64, elements: !7448)
!7448 = !{!7449, !7464}
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7447, file: !163, line: 61, baseType: !7450, size: 64)
!7450 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !7451)
!7451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !7452)
!7452 = !{!7453, !7459}
!7453 = !DIDerivedType(tag: DW_TAG_member, scope: !7451, file: !146, line: 38, baseType: !7454, size: 32)
!7454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7451, file: !146, line: 38, size: 32, elements: !7455)
!7455 = !{!7456, !7458}
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7454, file: !146, line: 39, baseType: !7457, size: 32)
!7457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7451, size: 32)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7454, file: !146, line: 40, baseType: !7457, size: 32)
!7459 = !DIDerivedType(tag: DW_TAG_member, scope: !7451, file: !146, line: 42, baseType: !7460, size: 32, offset: 32)
!7460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7451, file: !146, line: 42, size: 32, elements: !7461)
!7461 = !{!7462, !7463}
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7460, file: !146, line: 43, baseType: !7457, size: 32)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7460, file: !146, line: 44, baseType: !7457, size: 32)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7447, file: !163, line: 62, baseType: !7465, size: 64)
!7465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !7466)
!7466 = !{!7467}
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7465, file: !175, line: 50, baseType: !7468, size: 64)
!7468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7469, size: 64, elements: !180)
!7469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7465, size: 32)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7444, file: !163, line: 68, baseType: !7471, size: 32, offset: 64)
!7471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7472, size: 32)
!7472 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !7473)
!7473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !7474)
!7474 = !{!7475}
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7473, file: !141, line: 232, baseType: !7476, size: 64)
!7476 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !7451)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7444, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7444, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!7479 = !DIDerivedType(tag: DW_TAG_member, scope: !7444, file: !163, line: 90, baseType: !7480, size: 16, offset: 112)
!7480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7444, file: !163, line: 90, size: 16, elements: !7481)
!7481 = !{!7482, !7487}
!7482 = !DIDerivedType(tag: DW_TAG_member, scope: !7480, file: !163, line: 91, baseType: !7483, size: 16)
!7483 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7480, file: !163, line: 91, size: 16, elements: !7484)
!7484 = !{!7485, !7486}
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7483, file: !163, line: 96, baseType: !195, size: 8)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7483, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7480, file: !163, line: 100, baseType: !121, size: 16)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7444, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7444, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7444, file: !163, line: 131, baseType: !7491, size: 192, offset: 192)
!7491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !7492)
!7492 = !{!7493, !7494, !7500}
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7491, file: !141, line: 245, baseType: !7450, size: 64)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7491, file: !141, line: 246, baseType: !7495, size: 32, offset: 64)
!7495 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !7496)
!7496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7497, size: 32)
!7497 = !DISubroutineType(types: !7498)
!7498 = !{null, !7499}
!7499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7491, size: 32)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7491, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7441, file: !163, line: 250, baseType: !7502, size: 288, offset: 384)
!7502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7503)
!7503 = !{!7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512}
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7502, file: !214, line: 26, baseType: !108, size: 32)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7502, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7502, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7502, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7502, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7502, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7502, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7502, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7502, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7441, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7441, file: !163, line: 256, baseType: !7472, size: 64, offset: 704)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7441, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7441, file: !163, line: 300, baseType: !7517, size: 96, offset: 800)
!7517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !7518)
!7518 = !{!7519, !7520, !7521}
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7517, file: !163, line: 153, baseType: !22, size: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7517, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7517, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7441, file: !163, line: 325, baseType: !7523, size: 32, offset: 896)
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7524, size: 32)
!7524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !7525)
!7525 = !{!7526, !7532, !7533}
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7524, file: !137, line: 5074, baseType: !7527, size: 96)
!7527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !7528)
!7528 = !{!7529, !7530, !7531}
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7527, file: !240, line: 57, baseType: !243, size: 32)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7527, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7527, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7524, file: !137, line: 5075, baseType: !7472, size: 64, offset: 96)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7524, file: !137, line: 5076, baseType: !7534, offset: 160)
!7534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7441, file: !163, line: 343, baseType: !7536, size: 64, offset: 928)
!7536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !7537)
!7537 = !{!7538, !7539}
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7536, file: !214, line: 63, baseType: !108, size: 32)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7536, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!7540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7541, size: 32)
!7541 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !7542)
!7542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !7543)
!7543 = !{!7544}
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7542, file: !316, line: 48, baseType: !278, size: 8)
!7545 = !{!7546, !7547, !7548, !7549, !7550, !7551, !7552, !7553}
!7546 = !DILocalVariable(name: "thread", arg: 1, scope: !7436, file: !7437, line: 56, type: !7440)
!7547 = !DILocalVariable(name: "stack", arg: 2, scope: !7436, file: !7437, line: 56, type: !7540)
!7548 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7436, file: !7437, line: 57, type: !277)
!7549 = !DILocalVariable(name: "entry", arg: 4, scope: !7436, file: !7437, line: 57, type: !321)
!7550 = !DILocalVariable(name: "p1", arg: 5, scope: !7436, file: !7437, line: 58, type: !102)
!7551 = !DILocalVariable(name: "p2", arg: 6, scope: !7436, file: !7437, line: 58, type: !102)
!7552 = !DILocalVariable(name: "p3", arg: 7, scope: !7436, file: !7437, line: 58, type: !102)
!7553 = !DILocalVariable(name: "iframe", scope: !7436, file: !7437, line: 60, type: !2831)
!7554 = !DILocation(line: 0, scope: !7436)
!7555 = !DILocation(line: 85, column: 11, scope: !7436)
!7556 = !DILocation(line: 93, column: 10, scope: !7436)
!7557 = !DILocation(line: 98, column: 13, scope: !7436)
!7558 = !DILocation(line: 100, column: 15, scope: !7436)
!7559 = !DILocation(line: 100, column: 10, scope: !7436)
!7560 = !DILocation(line: 100, column: 13, scope: !7436)
!7561 = !DILocation(line: 101, column: 15, scope: !7436)
!7562 = !DILocation(line: 101, column: 10, scope: !7436)
!7563 = !DILocation(line: 101, column: 13, scope: !7436)
!7564 = !DILocation(line: 102, column: 15, scope: !7436)
!7565 = !DILocation(line: 102, column: 10, scope: !7436)
!7566 = !DILocation(line: 102, column: 13, scope: !7436)
!7567 = !DILocation(line: 103, column: 15, scope: !7436)
!7568 = !DILocation(line: 103, column: 10, scope: !7436)
!7569 = !DILocation(line: 103, column: 13, scope: !7436)
!7570 = !DILocation(line: 106, column: 10, scope: !7436)
!7571 = !DILocation(line: 106, column: 15, scope: !7436)
!7572 = !DILocation(line: 122, column: 29, scope: !7436)
!7573 = !DILocation(line: 122, column: 23, scope: !7436)
!7574 = !DILocation(line: 122, column: 27, scope: !7436)
!7575 = !DILocation(line: 123, column: 15, scope: !7436)
!7576 = !DILocation(line: 123, column: 23, scope: !7436)
!7577 = !DILocation(line: 143, column: 1, scope: !7436)
!7578 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7437, file: !7437, line: 385, type: !7579, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7582)
!7579 = !DISubroutineType(types: !7580)
!7580 = !{!108, !7581, !7581}
!7581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7582 = !{!7583, !7584, !7585, !7588}
!7583 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7578, file: !7437, line: 385, type: !7581)
!7584 = !DILocalVariable(name: "psp", arg: 2, scope: !7578, file: !7437, line: 385, type: !7581)
!7585 = !DILocalVariable(name: "thread", scope: !7578, file: !7437, line: 388, type: !7586)
!7586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7587, size: 32)
!7587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7441)
!7588 = !DILocalVariable(name: "guard_len", scope: !7578, file: !7437, line: 405, type: !108)
!7589 = !DILocation(line: 0, scope: !7578)
!7590 = !DILocation(line: 388, column: 34, scope: !7578)
!7591 = !DILocation(line: 390, column: 13, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7578, file: !7437, line: 390, column: 6)
!7593 = !DILocation(line: 390, column: 6, scope: !7578)
!7594 = !DILocation(line: 438, column: 6, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7578, file: !7437, line: 438, column: 6)
!7596 = !DILocation(line: 438, column: 6, scope: !7578)
!7597 = !DILocation(line: 442, column: 3, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7595, file: !7437, line: 440, column: 22)
!7599 = !DILocation(line: 455, column: 1, scope: !7578)
!7600 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7437, file: !7437, line: 530, type: !7601, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7603)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{null, !7440, !277, !321}
!7603 = !{!7604, !7605, !7606}
!7604 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7600, file: !7437, line: 530, type: !7440)
!7605 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7600, file: !7437, line: 530, type: !277)
!7606 = !DILocalVariable(name: "_main", arg: 3, scope: !7600, file: !7437, line: 531, type: !321)
!7607 = !DILocation(line: 0, scope: !7600)
!7608 = !DILocation(line: 535, column: 11, scope: !7600)
!7609 = !DILocation(line: 560, column: 2, scope: !7600)
!7610 = !DILocation(line: 576, column: 2, scope: !7600)
!7611 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7612 = !DILocation(line: 603, column: 2, scope: !7600)
!7613 = distinct !DISubprogram(name: "z_arm_fault", scope: !7614, file: !7614, line: 1036, type: !7615, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7630)
!7614 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7615 = !DISubroutineType(types: !7616)
!7616 = !{null, !108, !108, !108, !7617}
!7617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7618, size: 32)
!7618 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7619)
!7619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7620)
!7620 = !{!7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629}
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7619, file: !214, line: 26, baseType: !108, size: 32)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7619, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7619, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7619, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7619, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7619, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7619, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7619, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7619, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7630 = !{!7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640}
!7631 = !DILocalVariable(name: "msp", arg: 1, scope: !7613, file: !7614, line: 1036, type: !108)
!7632 = !DILocalVariable(name: "psp", arg: 2, scope: !7613, file: !7614, line: 1036, type: !108)
!7633 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7613, file: !7614, line: 1036, type: !108)
!7634 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7613, file: !7614, line: 1037, type: !7617)
!7635 = !DILocalVariable(name: "reason", scope: !7613, file: !7614, line: 1039, type: !108)
!7636 = !DILocalVariable(name: "fault", scope: !7613, file: !7614, line: 1040, type: !103)
!7637 = !DILocalVariable(name: "recoverable", scope: !7613, file: !7614, line: 1041, type: !131)
!7638 = !DILocalVariable(name: "nested_exc", scope: !7613, file: !7614, line: 1041, type: !131)
!7639 = !DILocalVariable(name: "esf", scope: !7613, file: !7614, line: 1042, type: !2899)
!7640 = !DILocalVariable(name: "esf_copy", scope: !7613, file: !7614, line: 1047, type: !2900)
!7641 = !DILocation(line: 0, scope: !7613)
!7642 = !DILocation(line: 1040, column: 19, scope: !7613)
!7643 = !DILocation(line: 1040, column: 24, scope: !7613)
!7644 = !DILocation(line: 1041, column: 2, scope: !7613)
!7645 = !DILocation(line: 1047, column: 2, scope: !7613)
!7646 = !DILocation(line: 1047, column: 15, scope: !7613)
!7647 = !DILocalVariable(name: "key", arg: 1, scope: !7648, file: !6997, line: 84, type: !32)
!7648 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7649)
!7649 = !{!7647}
!7650 = !DILocation(line: 0, scope: !7648, inlinedAt: !7651)
!7651 = distinct !DILocation(line: 1050, column: 2, scope: !7613)
!7652 = !DILocation(line: 95, column: 2, scope: !7648, inlinedAt: !7651)
!7653 = !{i64 2273363}
!7654 = !DILocation(line: 1055, column: 9, scope: !7613)
!7655 = !DILocation(line: 1063, column: 11, scope: !7613)
!7656 = !DILocation(line: 1064, column: 6, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7613, file: !7614, line: 1064, column: 6)
!7658 = !{i8 0, i8 2}
!7659 = !DILocation(line: 1064, column: 6, scope: !7613)
!7660 = !DILocation(line: 1070, column: 20, scope: !7613)
!7661 = !DILocation(line: 1070, column: 2, scope: !7613)
!7662 = !DILocation(line: 1089, column: 6, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7613, file: !7614, line: 1089, column: 6)
!7664 = !DILocation(line: 0, scope: !7663)
!7665 = !DILocation(line: 1089, column: 6, scope: !7613)
!7666 = !DILocation(line: 1090, column: 28, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !7614, line: 1090, column: 7)
!7668 = distinct !DILexicalBlock(scope: !7663, file: !7614, line: 1089, column: 18)
!7669 = !DILocation(line: 1090, column: 44, scope: !7667)
!7670 = !DILocation(line: 1090, column: 7, scope: !7668)
!7671 = !DILocation(line: 1091, column: 24, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7667, file: !7614, line: 1090, column: 50)
!7673 = !DILocation(line: 1092, column: 3, scope: !7672)
!7674 = !DILocation(line: 1094, column: 23, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7663, file: !7614, line: 1093, column: 9)
!7676 = !DILocation(line: 1097, column: 2, scope: !7613)
!7677 = !DILocation(line: 1098, column: 1, scope: !7613)
!7678 = distinct !DISubprogram(name: "get_esf", scope: !7614, file: !7614, line: 894, type: !7679, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7682)
!7679 = !DISubroutineType(types: !7680)
!7680 = !{!2899, !108, !108, !108, !7681}
!7681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!7682 = !{!7683, !7684, !7685, !7686, !7687, !7688}
!7683 = !DILocalVariable(name: "msp", arg: 1, scope: !7678, file: !7614, line: 894, type: !108)
!7684 = !DILocalVariable(name: "psp", arg: 2, scope: !7678, file: !7614, line: 894, type: !108)
!7685 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7678, file: !7614, line: 894, type: !108)
!7686 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7678, file: !7614, line: 895, type: !7681)
!7687 = !DILocalVariable(name: "alternative_state_exc", scope: !7678, file: !7614, line: 897, type: !131)
!7688 = !DILocalVariable(name: "ptr_esf", scope: !7678, file: !7614, line: 898, type: !2899)
!7689 = !DILocation(line: 0, scope: !7678)
!7690 = !DILocation(line: 900, column: 14, scope: !7678)
!7691 = !DILocation(line: 902, column: 49, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7678, file: !7614, line: 902, column: 6)
!7693 = !DILocation(line: 902, column: 6, scope: !7678)
!7694 = !DILocation(line: 983, column: 44, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7678, file: !7614, line: 983, column: 6)
!7696 = !DILocation(line: 985, column: 3, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !7614, line: 985, column: 3)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !7614, line: 985, column: 3)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !7614, line: 985, column: 3)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !7614, line: 985, column: 3)
!7701 = distinct !DILexicalBlock(scope: !7695, file: !7614, line: 984, column: 47)
!7702 = !DILocation(line: 986, column: 3, scope: !7701)
!7703 = !DILocation(line: 983, column: 18, scope: !7695)
!7704 = !DILocation(line: 991, column: 7, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !7614, line: 990, column: 30)
!7706 = distinct !DILexicalBlock(scope: !7678, file: !7614, line: 990, column: 6)
!7707 = !DILocation(line: 998, column: 16, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !7614, line: 995, column: 10)
!7709 = distinct !DILexicalBlock(scope: !7705, file: !7614, line: 991, column: 7)
!7710 = !DILocation(line: 1002, column: 2, scope: !7678)
!7711 = !DILocation(line: 1003, column: 1, scope: !7678)
!7712 = distinct !DISubprogram(name: "fault_handle", scope: !7614, file: !7614, line: 786, type: !7713, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7715)
!7713 = !DISubroutineType(types: !7714)
!7714 = !{!108, !2899, !103, !7681}
!7715 = !{!7716, !7717, !7718, !7719}
!7716 = !DILocalVariable(name: "esf", arg: 1, scope: !7712, file: !7614, line: 786, type: !2899)
!7717 = !DILocalVariable(name: "fault", arg: 2, scope: !7712, file: !7614, line: 786, type: !103)
!7718 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7712, file: !7614, line: 786, type: !7681)
!7719 = !DILocalVariable(name: "reason", scope: !7712, file: !7614, line: 788, type: !108)
!7720 = !DILocation(line: 0, scope: !7712)
!7721 = !DILocation(line: 790, column: 15, scope: !7712)
!7722 = !DILocation(line: 792, column: 2, scope: !7712)
!7723 = !DILocation(line: 794, column: 12, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7712, file: !7614, line: 792, column: 17)
!7725 = !DILocation(line: 795, column: 3, scope: !7724)
!7726 = !DILocation(line: 800, column: 12, scope: !7724)
!7727 = !DILocation(line: 801, column: 3, scope: !7724)
!7728 = !DILocation(line: 803, column: 12, scope: !7724)
!7729 = !DILocation(line: 804, column: 3, scope: !7724)
!7730 = !DILocation(line: 806, column: 12, scope: !7724)
!7731 = !DILocation(line: 807, column: 3, scope: !7724)
!7732 = !DILocation(line: 814, column: 3, scope: !7724)
!7733 = !DILocation(line: 815, column: 3, scope: !7724)
!7734 = !DILocation(line: 820, column: 3, scope: !7724)
!7735 = !DILocation(line: 821, column: 3, scope: !7724)
!7736 = !DILocation(line: 829, column: 2, scope: !7712)
!7737 = distinct !DISubprogram(name: "hard_fault", scope: !7614, file: !7614, line: 709, type: !7738, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7740)
!7738 = !DISubroutineType(types: !7739)
!7739 = !{!108, !2899, !7681}
!7740 = !{!7741, !7742, !7743}
!7741 = !DILocalVariable(name: "esf", arg: 1, scope: !7737, file: !7614, line: 709, type: !2899)
!7742 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7737, file: !7614, line: 709, type: !7681)
!7743 = !DILocalVariable(name: "reason", scope: !7737, file: !7614, line: 711, type: !108)
!7744 = !DILocation(line: 0, scope: !7737)
!7745 = !DILocation(line: 713, column: 2, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7614, line: 713, column: 2)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7614, line: 713, column: 2)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7614, line: 713, column: 2)
!7749 = distinct !DILexicalBlock(scope: !7737, file: !7614, line: 713, column: 2)
!7750 = !DILocation(line: 732, column: 15, scope: !7737)
!7751 = !DILocation(line: 734, column: 12, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7737, file: !7614, line: 734, column: 6)
!7753 = !DILocation(line: 734, column: 17, scope: !7752)
!7754 = !DILocation(line: 734, column: 41, scope: !7752)
!7755 = !DILocation(line: 734, column: 6, scope: !7737)
!7756 = !DILocation(line: 735, column: 3, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7614, line: 735, column: 3)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7614, line: 735, column: 3)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7614, line: 735, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !7614, line: 735, column: 3)
!7761 = distinct !DILexicalBlock(scope: !7752, file: !7614, line: 734, column: 47)
!7762 = !DILocation(line: 736, column: 2, scope: !7761)
!7763 = !DILocation(line: 736, column: 19, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7752, file: !7614, line: 736, column: 13)
!7765 = !DILocation(line: 736, column: 49, scope: !7764)
!7766 = !DILocation(line: 736, column: 13, scope: !7752)
!7767 = !DILocation(line: 737, column: 3, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !7614, line: 737, column: 3)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !7614, line: 737, column: 3)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7614, line: 737, column: 3)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !7614, line: 737, column: 3)
!7772 = distinct !DILexicalBlock(scope: !7764, file: !7614, line: 736, column: 55)
!7773 = !DILocation(line: 738, column: 2, scope: !7772)
!7774 = !DILocation(line: 738, column: 19, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7764, file: !7614, line: 738, column: 13)
!7776 = !DILocation(line: 738, column: 24, scope: !7775)
!7777 = !DILocation(line: 738, column: 47, scope: !7775)
!7778 = !DILocation(line: 738, column: 13, scope: !7764)
!7779 = !DILocation(line: 739, column: 3, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7614, line: 739, column: 3)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !7614, line: 739, column: 3)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !7614, line: 739, column: 3)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !7614, line: 739, column: 3)
!7784 = distinct !DILexicalBlock(scope: !7775, file: !7614, line: 738, column: 53)
!7785 = !DILocation(line: 740, column: 7, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7784, file: !7614, line: 740, column: 7)
!7787 = !DILocation(line: 740, column: 7, scope: !7784)
!7788 = !DILocation(line: 741, column: 4, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7614, line: 741, column: 4)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7614, line: 741, column: 4)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !7614, line: 741, column: 4)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !7614, line: 741, column: 4)
!7793 = distinct !DILexicalBlock(scope: !7786, file: !7614, line: 740, column: 38)
!7794 = !DILocation(line: 742, column: 24, scope: !7793)
!7795 = !DILocation(line: 743, column: 3, scope: !7793)
!7796 = !DILocation(line: 743, column: 20, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7786, file: !7614, line: 743, column: 14)
!7798 = !DILocation(line: 743, column: 25, scope: !7797)
!7799 = !DILocation(line: 743, column: 52, scope: !7797)
!7800 = !DILocation(line: 743, column: 14, scope: !7786)
!7801 = !DILocation(line: 744, column: 13, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7797, file: !7614, line: 743, column: 58)
!7803 = !DILocation(line: 745, column: 3, scope: !7802)
!7804 = !DILocation(line: 745, column: 20, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7797, file: !7614, line: 745, column: 14)
!7806 = !DILocation(line: 745, column: 25, scope: !7805)
!7807 = !DILocation(line: 745, column: 52, scope: !7805)
!7808 = !DILocation(line: 745, column: 14, scope: !7797)
!7809 = !DILocation(line: 746, column: 13, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7805, file: !7614, line: 745, column: 58)
!7811 = !DILocation(line: 747, column: 3, scope: !7810)
!7812 = !DILocation(line: 747, column: 20, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7805, file: !7614, line: 747, column: 14)
!7814 = !DILocation(line: 747, column: 52, scope: !7813)
!7815 = !DILocation(line: 747, column: 14, scope: !7805)
!7816 = !DILocation(line: 748, column: 13, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7813, file: !7614, line: 747, column: 58)
!7818 = !DILocation(line: 753, column: 3, scope: !7817)
!7819 = !DILocation(line: 766, column: 2, scope: !7737)
!7820 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7614, file: !7614, line: 229, type: !7713, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7821)
!7821 = !{!7822, !7823, !7824, !7825, !7826, !7827, !7830}
!7822 = !DILocalVariable(name: "esf", arg: 1, scope: !7820, file: !7614, line: 229, type: !2899)
!7823 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7820, file: !7614, line: 229, type: !103)
!7824 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7820, file: !7614, line: 230, type: !7681)
!7825 = !DILocalVariable(name: "reason", scope: !7820, file: !7614, line: 232, type: !108)
!7826 = !DILocalVariable(name: "mmfar", scope: !7820, file: !7614, line: 233, type: !108)
!7827 = !DILocalVariable(name: "temp", scope: !7828, file: !7614, line: 254, type: !108)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !7614, line: 244, column: 48)
!7829 = distinct !DILexicalBlock(scope: !7820, file: !7614, line: 244, column: 6)
!7830 = !DILocalVariable(name: "min_stack_ptr", scope: !7831, file: !7614, line: 309, type: !108)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !7614, line: 308, column: 43)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7614, line: 308, column: 7)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !7614, line: 289, column: 40)
!7834 = distinct !DILexicalBlock(scope: !7820, file: !7614, line: 288, column: 6)
!7835 = !DILocation(line: 0, scope: !7820)
!7836 = !DILocation(line: 235, column: 2, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !7614, line: 235, column: 2)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !7614, line: 235, column: 2)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !7614, line: 235, column: 2)
!7840 = distinct !DILexicalBlock(scope: !7820, file: !7614, line: 235, column: 2)
!7841 = !DILocation(line: 237, column: 12, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7820, file: !7614, line: 237, column: 6)
!7843 = !DILocation(line: 237, column: 17, scope: !7842)
!7844 = !DILocation(line: 237, column: 41, scope: !7842)
!7845 = !DILocation(line: 237, column: 6, scope: !7820)
!7846 = !DILocation(line: 238, column: 3, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7614, line: 238, column: 3)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !7614, line: 238, column: 3)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !7614, line: 238, column: 3)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !7614, line: 238, column: 3)
!7851 = distinct !DILexicalBlock(scope: !7842, file: !7614, line: 237, column: 47)
!7852 = !DILocation(line: 240, column: 2, scope: !7851)
!7853 = !DILocation(line: 241, column: 12, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7820, file: !7614, line: 241, column: 6)
!7855 = !DILocation(line: 241, column: 17, scope: !7854)
!7856 = !DILocation(line: 241, column: 43, scope: !7854)
!7857 = !DILocation(line: 241, column: 6, scope: !7820)
!7858 = !DILocation(line: 242, column: 3, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !7614, line: 242, column: 3)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !7614, line: 242, column: 3)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !7614, line: 242, column: 3)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !7614, line: 242, column: 3)
!7863 = distinct !DILexicalBlock(scope: !7854, file: !7614, line: 241, column: 49)
!7864 = !DILocation(line: 243, column: 2, scope: !7863)
!7865 = !DILocation(line: 244, column: 12, scope: !7829)
!7866 = !DILocation(line: 244, column: 17, scope: !7829)
!7867 = !DILocation(line: 244, column: 42, scope: !7829)
!7868 = !DILocation(line: 244, column: 6, scope: !7820)
!7869 = !DILocation(line: 245, column: 3, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !7614, line: 245, column: 3)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !7614, line: 245, column: 3)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !7614, line: 245, column: 3)
!7873 = distinct !DILexicalBlock(scope: !7828, file: !7614, line: 245, column: 3)
!7874 = !DILocation(line: 254, column: 24, scope: !7828)
!7875 = !DILocation(line: 0, scope: !7828)
!7876 = !DILocation(line: 256, column: 13, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7828, file: !7614, line: 256, column: 7)
!7878 = !DILocation(line: 256, column: 18, scope: !7877)
!7879 = !DILocation(line: 256, column: 44, scope: !7877)
!7880 = !DILocation(line: 256, column: 7, scope: !7828)
!7881 = !DILocation(line: 258, column: 4, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !7614, line: 258, column: 4)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !7614, line: 258, column: 4)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !7614, line: 258, column: 4)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !7614, line: 258, column: 4)
!7886 = distinct !DILexicalBlock(scope: !7877, file: !7614, line: 256, column: 50)
!7887 = !DILocation(line: 259, column: 24, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7886, file: !7614, line: 259, column: 8)
!7889 = !DILocation(line: 259, column: 8, scope: !7886)
!7890 = !DILocation(line: 261, column: 15, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7888, file: !7614, line: 259, column: 30)
!7892 = !DILocation(line: 262, column: 4, scope: !7891)
!7893 = !DILocation(line: 265, column: 12, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7820, file: !7614, line: 265, column: 6)
!7895 = !DILocation(line: 265, column: 17, scope: !7894)
!7896 = !DILocation(line: 265, column: 42, scope: !7894)
!7897 = !DILocation(line: 265, column: 6, scope: !7820)
!7898 = !DILocation(line: 266, column: 3, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !7614, line: 266, column: 3)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !7614, line: 266, column: 3)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7614, line: 266, column: 3)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !7614, line: 266, column: 3)
!7903 = distinct !DILexicalBlock(scope: !7894, file: !7614, line: 265, column: 48)
!7904 = !DILocation(line: 267, column: 2, scope: !7903)
!7905 = !DILocation(line: 269, column: 12, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7820, file: !7614, line: 269, column: 6)
!7907 = !DILocation(line: 269, column: 17, scope: !7906)
!7908 = !DILocation(line: 269, column: 41, scope: !7906)
!7909 = !DILocation(line: 269, column: 6, scope: !7820)
!7910 = !DILocation(line: 270, column: 3, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !7614, line: 270, column: 3)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !7614, line: 270, column: 3)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !7614, line: 270, column: 3)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !7614, line: 270, column: 3)
!7915 = distinct !DILexicalBlock(scope: !7906, file: !7614, line: 269, column: 47)
!7916 = !DILocation(line: 272, column: 2, scope: !7915)
!7917 = !DILocation(line: 288, column: 12, scope: !7834)
!7918 = !DILocation(line: 288, column: 17, scope: !7834)
!7919 = !DILocation(line: 288, column: 41, scope: !7834)
!7920 = !DILocation(line: 289, column: 9, scope: !7834)
!7921 = !DILocation(line: 289, column: 14, scope: !7834)
!7922 = !DILocation(line: 288, column: 6, scope: !7820)
!7923 = !DILocation(line: 308, column: 12, scope: !7832)
!7924 = !DILocation(line: 308, column: 17, scope: !7832)
!7925 = !DILocation(line: 308, column: 7, scope: !7833)
!7926 = !DILocation(line: 310, column: 6, scope: !7831)
!7927 = !DILocation(line: 309, column: 29, scope: !7831)
!7928 = !DILocation(line: 0, scope: !7831)
!7929 = !DILocation(line: 312, column: 8, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7831, file: !7614, line: 312, column: 8)
!7931 = !DILocation(line: 312, column: 8, scope: !7831)
!7932 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7933, file: !7315, line: 1099, type: !108)
!7933 = distinct !DISubprogram(name: "__set_PSP", scope: !7315, file: !7315, line: 1099, type: !7404, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7934)
!7934 = !{!7932}
!7935 = !DILocation(line: 0, scope: !7933, inlinedAt: !7936)
!7936 = distinct !DILocation(line: 338, column: 5, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7930, file: !7614, line: 312, column: 23)
!7938 = !DILocation(line: 1101, column: 3, scope: !7933, inlinedAt: !7936)
!7939 = !{i64 3529024}
!7940 = !DILocation(line: 341, column: 4, scope: !7937)
!7941 = !DILocation(line: 360, column: 12, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7820, file: !7614, line: 360, column: 6)
!7943 = !DILocation(line: 360, column: 17, scope: !7942)
!7944 = !DILocation(line: 360, column: 41, scope: !7942)
!7945 = !DILocation(line: 360, column: 6, scope: !7820)
!7946 = !DILocation(line: 361, column: 14, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7942, file: !7614, line: 360, column: 47)
!7948 = !DILocation(line: 362, column: 2, scope: !7947)
!7949 = !DILocation(line: 366, column: 12, scope: !7820)
!7950 = !DILocation(line: 369, column: 15, scope: !7820)
!7951 = !DILocation(line: 371, column: 2, scope: !7820)
!7952 = distinct !DISubprogram(name: "bus_fault", scope: !7614, file: !7614, line: 383, type: !7953, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !7955)
!7953 = !DISubroutineType(types: !7954)
!7954 = !{!103, !2899, !103, !7681}
!7955 = !{!7956, !7957, !7958, !7959, !7960}
!7956 = !DILocalVariable(name: "esf", arg: 1, scope: !7952, file: !7614, line: 383, type: !2899)
!7957 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7952, file: !7614, line: 383, type: !103)
!7958 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7952, file: !7614, line: 383, type: !7681)
!7959 = !DILocalVariable(name: "reason", scope: !7952, file: !7614, line: 385, type: !108)
!7960 = !DILocalVariable(name: "bfar", scope: !7961, file: !7614, line: 405, type: !108)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !7614, line: 395, column: 42)
!7962 = distinct !DILexicalBlock(scope: !7952, file: !7614, line: 395, column: 6)
!7963 = !DILocation(line: 0, scope: !7952)
!7964 = !DILocation(line: 387, column: 2, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !7614, line: 387, column: 2)
!7966 = distinct !DILexicalBlock(scope: !7967, file: !7614, line: 387, column: 2)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !7614, line: 387, column: 2)
!7968 = distinct !DILexicalBlock(scope: !7952, file: !7614, line: 387, column: 2)
!7969 = !DILocation(line: 389, column: 11, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7952, file: !7614, line: 389, column: 6)
!7971 = !DILocation(line: 389, column: 16, scope: !7970)
!7972 = !DILocation(line: 389, column: 6, scope: !7952)
!7973 = !DILocation(line: 390, column: 3, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7614, line: 390, column: 3)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7614, line: 390, column: 3)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !7614, line: 390, column: 3)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !7614, line: 390, column: 3)
!7978 = distinct !DILexicalBlock(scope: !7970, file: !7614, line: 389, column: 39)
!7979 = !DILocation(line: 391, column: 2, scope: !7978)
!7980 = !DILocation(line: 392, column: 11, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7952, file: !7614, line: 392, column: 6)
!7982 = !DILocation(line: 392, column: 16, scope: !7981)
!7983 = !DILocation(line: 392, column: 6, scope: !7952)
!7984 = !DILocation(line: 393, column: 3, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !7614, line: 393, column: 3)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7614, line: 393, column: 3)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7614, line: 393, column: 3)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !7614, line: 393, column: 3)
!7989 = distinct !DILexicalBlock(scope: !7981, file: !7614, line: 392, column: 41)
!7990 = !DILocation(line: 394, column: 2, scope: !7989)
!7991 = !DILocation(line: 395, column: 11, scope: !7962)
!7992 = !DILocation(line: 395, column: 16, scope: !7962)
!7993 = !DILocation(line: 395, column: 6, scope: !7952)
!7994 = !DILocation(line: 396, column: 3, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !7614, line: 396, column: 3)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !7614, line: 396, column: 3)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !7614, line: 396, column: 3)
!7998 = distinct !DILexicalBlock(scope: !7961, file: !7614, line: 396, column: 3)
!7999 = !DILocation(line: 405, column: 3, scope: !7961)
!8000 = !DILocation(line: 0, scope: !7961)
!8001 = !DILocation(line: 407, column: 13, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7961, file: !7614, line: 407, column: 7)
!8003 = !DILocation(line: 407, column: 18, scope: !8002)
!8004 = !DILocation(line: 407, column: 44, scope: !8002)
!8005 = !DILocation(line: 407, column: 7, scope: !7961)
!8006 = !DILocation(line: 408, column: 4, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !7614, line: 408, column: 4)
!8008 = distinct !DILexicalBlock(scope: !8009, file: !7614, line: 408, column: 4)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !7614, line: 408, column: 4)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !7614, line: 408, column: 4)
!8011 = distinct !DILexicalBlock(scope: !8002, file: !7614, line: 407, column: 50)
!8012 = !DILocation(line: 409, column: 24, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8011, file: !7614, line: 409, column: 8)
!8014 = !DILocation(line: 409, column: 8, scope: !8011)
!8015 = !DILocation(line: 411, column: 15, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8013, file: !7614, line: 409, column: 30)
!8017 = !DILocation(line: 412, column: 4, scope: !8016)
!8018 = !DILocation(line: 415, column: 11, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !7952, file: !7614, line: 415, column: 6)
!8020 = !DILocation(line: 415, column: 16, scope: !8019)
!8021 = !DILocation(line: 415, column: 6, scope: !7952)
!8022 = !DILocation(line: 416, column: 3, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !7614, line: 416, column: 3)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !7614, line: 416, column: 3)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !7614, line: 416, column: 3)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !7614, line: 416, column: 3)
!8027 = distinct !DILexicalBlock(scope: !8019, file: !7614, line: 415, column: 44)
!8028 = !DILocation(line: 417, column: 2, scope: !8027)
!8029 = !DILocation(line: 418, column: 12, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !7952, file: !7614, line: 418, column: 6)
!8031 = !DILocation(line: 418, column: 17, scope: !8030)
!8032 = !DILocation(line: 418, column: 41, scope: !8030)
!8033 = !DILocation(line: 418, column: 6, scope: !7952)
!8034 = !DILocation(line: 423, column: 18, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8030, file: !7614, line: 423, column: 13)
!8036 = !DILocation(line: 423, column: 23, scope: !8035)
!8037 = !DILocation(line: 423, column: 13, scope: !8030)
!8038 = !DILocation(line: 0, scope: !8030)
!8039 = !DILocation(line: 524, column: 12, scope: !7952)
!8040 = !DILocation(line: 526, column: 15, scope: !7952)
!8041 = !DILocation(line: 528, column: 2, scope: !7952)
!8042 = distinct !DISubprogram(name: "usage_fault", scope: !7614, file: !7614, line: 539, type: !8043, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !8047)
!8043 = !DISubroutineType(types: !8044)
!8044 = !{!108, !8045}
!8045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8046, size: 32)
!8046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2900)
!8047 = !{!8048, !8049}
!8048 = !DILocalVariable(name: "esf", arg: 1, scope: !8042, file: !7614, line: 539, type: !8045)
!8049 = !DILocalVariable(name: "reason", scope: !8042, file: !7614, line: 541, type: !108)
!8050 = !DILocation(line: 0, scope: !8042)
!8051 = !DILocation(line: 543, column: 2, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !7614, line: 543, column: 2)
!8053 = distinct !DILexicalBlock(scope: !8054, file: !7614, line: 543, column: 2)
!8054 = distinct !DILexicalBlock(scope: !8055, file: !7614, line: 543, column: 2)
!8055 = distinct !DILexicalBlock(scope: !8042, file: !7614, line: 543, column: 2)
!8056 = !DILocation(line: 546, column: 12, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8042, file: !7614, line: 546, column: 6)
!8058 = !DILocation(line: 546, column: 17, scope: !8057)
!8059 = !DILocation(line: 546, column: 43, scope: !8057)
!8060 = !DILocation(line: 546, column: 6, scope: !8042)
!8061 = !DILocation(line: 547, column: 3, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !7614, line: 547, column: 3)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !7614, line: 547, column: 3)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !7614, line: 547, column: 3)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !7614, line: 547, column: 3)
!8066 = distinct !DILexicalBlock(scope: !8057, file: !7614, line: 546, column: 49)
!8067 = !DILocation(line: 548, column: 2, scope: !8066)
!8068 = !DILocation(line: 549, column: 12, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8042, file: !7614, line: 549, column: 6)
!8070 = !DILocation(line: 549, column: 17, scope: !8069)
!8071 = !DILocation(line: 549, column: 43, scope: !8069)
!8072 = !DILocation(line: 549, column: 6, scope: !8042)
!8073 = !DILocation(line: 550, column: 3, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !7614, line: 550, column: 3)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !7614, line: 550, column: 3)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !7614, line: 550, column: 3)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !7614, line: 550, column: 3)
!8078 = distinct !DILexicalBlock(scope: !8069, file: !7614, line: 549, column: 49)
!8079 = !DILocation(line: 551, column: 2, scope: !8078)
!8080 = !DILocation(line: 567, column: 12, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8042, file: !7614, line: 567, column: 6)
!8082 = !DILocation(line: 567, column: 17, scope: !8081)
!8083 = !DILocation(line: 567, column: 38, scope: !8081)
!8084 = !DILocation(line: 567, column: 6, scope: !8042)
!8085 = !DILocation(line: 568, column: 3, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !7614, line: 568, column: 3)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7614, line: 568, column: 3)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !7614, line: 568, column: 3)
!8089 = distinct !DILexicalBlock(scope: !8090, file: !7614, line: 568, column: 3)
!8090 = distinct !DILexicalBlock(scope: !8081, file: !7614, line: 567, column: 44)
!8091 = !DILocation(line: 569, column: 2, scope: !8090)
!8092 = !DILocation(line: 570, column: 12, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8042, file: !7614, line: 570, column: 6)
!8094 = !DILocation(line: 570, column: 17, scope: !8093)
!8095 = !DILocation(line: 570, column: 39, scope: !8093)
!8096 = !DILocation(line: 570, column: 6, scope: !8042)
!8097 = !DILocation(line: 571, column: 3, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !7614, line: 571, column: 3)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !7614, line: 571, column: 3)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !7614, line: 571, column: 3)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !7614, line: 571, column: 3)
!8102 = distinct !DILexicalBlock(scope: !8093, file: !7614, line: 570, column: 45)
!8103 = !DILocation(line: 572, column: 2, scope: !8102)
!8104 = !DILocation(line: 573, column: 12, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8042, file: !7614, line: 573, column: 6)
!8106 = !DILocation(line: 573, column: 17, scope: !8105)
!8107 = !DILocation(line: 573, column: 42, scope: !8105)
!8108 = !DILocation(line: 573, column: 6, scope: !8042)
!8109 = !DILocation(line: 574, column: 3, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !7614, line: 574, column: 3)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7614, line: 574, column: 3)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !7614, line: 574, column: 3)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !7614, line: 574, column: 3)
!8114 = distinct !DILexicalBlock(scope: !8105, file: !7614, line: 573, column: 48)
!8115 = !DILocation(line: 575, column: 2, scope: !8114)
!8116 = !DILocation(line: 576, column: 12, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8042, file: !7614, line: 576, column: 6)
!8118 = !DILocation(line: 576, column: 17, scope: !8117)
!8119 = !DILocation(line: 576, column: 44, scope: !8117)
!8120 = !DILocation(line: 576, column: 6, scope: !8042)
!8121 = !DILocation(line: 577, column: 3, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !7614, line: 577, column: 3)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !7614, line: 577, column: 3)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !7614, line: 577, column: 3)
!8125 = distinct !DILexicalBlock(scope: !8126, file: !7614, line: 577, column: 3)
!8126 = distinct !DILexicalBlock(scope: !8117, file: !7614, line: 576, column: 50)
!8127 = !DILocation(line: 578, column: 2, scope: !8126)
!8128 = !DILocation(line: 581, column: 12, scope: !8042)
!8129 = !DILocation(line: 583, column: 2, scope: !8042)
!8130 = distinct !DISubprogram(name: "debug_monitor", scope: !7614, file: !7614, line: 632, type: !8131, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !8133)
!8131 = !DISubroutineType(types: !8132)
!8132 = !{null, !2899, !7681}
!8133 = !{!8134, !8135}
!8134 = !DILocalVariable(name: "esf", arg: 1, scope: !8130, file: !7614, line: 632, type: !2899)
!8135 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8130, file: !7614, line: 632, type: !7681)
!8136 = !DILocation(line: 0, scope: !8130)
!8137 = !DILocation(line: 634, column: 15, scope: !8130)
!8138 = !DILocation(line: 636, column: 2, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !7614, line: 636, column: 2)
!8140 = distinct !DILexicalBlock(scope: !8141, file: !7614, line: 636, column: 2)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !7614, line: 636, column: 2)
!8142 = distinct !DILexicalBlock(scope: !8130, file: !7614, line: 636, column: 2)
!8143 = !DILocation(line: 652, column: 1, scope: !8130)
!8144 = distinct !DISubprogram(name: "reserved_exception", scope: !7614, file: !7614, line: 776, type: !8145, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !8147)
!8145 = !DISubroutineType(types: !8146)
!8146 = !{null, !8045, !103}
!8147 = !{!8148, !8149}
!8148 = !DILocalVariable(name: "esf", arg: 1, scope: !8144, file: !7614, line: 776, type: !8045)
!8149 = !DILocalVariable(name: "fault", arg: 2, scope: !8144, file: !7614, line: 776, type: !103)
!8150 = !DILocation(line: 0, scope: !8144)
!8151 = !DILocation(line: 780, column: 2, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !7614, line: 780, column: 2)
!8153 = distinct !DILexicalBlock(scope: !8154, file: !7614, line: 780, column: 2)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !7614, line: 780, column: 2)
!8155 = distinct !DILexicalBlock(scope: !8144, file: !7614, line: 780, column: 2)
!8156 = !DILocation(line: 783, column: 1, scope: !8144)
!8157 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7614, file: !7614, line: 658, type: !8158, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!131, !2899}
!8160 = !{!8161, !8162, !8163}
!8161 = !DILocalVariable(name: "esf", arg: 1, scope: !8157, file: !7614, line: 658, type: !2899)
!8162 = !DILocalVariable(name: "ret_addr", scope: !8157, file: !7614, line: 660, type: !2673)
!8163 = !DILocalVariable(name: "fault_insn", scope: !8157, file: !7614, line: 686, type: !121)
!8164 = !DILocation(line: 0, scope: !8157)
!8165 = !DILocation(line: 660, column: 46, scope: !8157)
!8166 = !DILocation(line: 660, column: 23, scope: !8157)
!8167 = !DILocation(line: 682, column: 11, scope: !8157)
!8168 = !DILocation(line: 271, column: 3, scope: !8169, inlinedAt: !8170)
!8169 = distinct !DISubprogram(name: "__DSB", scope: !7315, file: !7315, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !251)
!8170 = distinct !DILocation(line: 683, column: 2, scope: !8157)
!8171 = !{i64 3505159}
!8172 = !DILocation(line: 260, column: 3, scope: !8173, inlinedAt: !8174)
!8173 = distinct !DISubprogram(name: "__ISB", scope: !7315, file: !7315, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !251)
!8174 = distinct !DILocation(line: 684, column: 2, scope: !8157)
!8175 = !{i64 3504876}
!8176 = !DILocation(line: 686, column: 35, scope: !8157)
!8177 = !DILocation(line: 686, column: 24, scope: !8157)
!8178 = !DILocation(line: 688, column: 11, scope: !8157)
!8179 = !DILocation(line: 271, column: 3, scope: !8169, inlinedAt: !8180)
!8180 = distinct !DILocation(line: 689, column: 2, scope: !8157)
!8181 = !DILocation(line: 260, column: 3, scope: !8173, inlinedAt: !8182)
!8182 = distinct !DILocation(line: 690, column: 2, scope: !8157)
!8183 = !DILocation(line: 693, column: 45, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8157, file: !7614, line: 693, column: 6)
!8185 = !DILocation(line: 699, column: 1, scope: !8157)
!8186 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7614, file: !7614, line: 1107, type: !334, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2871, retainedNodes: !251)
!8187 = !DILocation(line: 1111, column: 11, scope: !8186)
!8188 = !DILocation(line: 1136, column: 1, scope: !8186)
!8189 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8190, file: !8190, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !8191)
!8190 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8191 = !{!8192}
!8192 = !DILocalVariable(name: "irq", scope: !8189, file: !8190, line: 28, type: !103)
!8193 = !DILocation(line: 0, scope: !8189)
!8194 = !DILocation(line: 30, column: 2, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8189, file: !8190, line: 30, column: 2)
!8196 = !DILocation(line: 31, column: 3, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !8190, line: 30, column: 39)
!8198 = distinct !DILexicalBlock(scope: !8195, file: !8190, line: 30, column: 2)
!8199 = !DILocation(line: 30, column: 35, scope: !8198)
!8200 = !DILocation(line: 30, column: 13, scope: !8198)
!8201 = distinct !{!8201, !8194, !8202}
!8202 = !DILocation(line: 32, column: 2, scope: !8195)
!8203 = !DILocation(line: 33, column: 1, scope: !8189)
!8204 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7349, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !8205)
!8205 = !{!8206, !8207}
!8206 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8204, file: !624, line: 1814, type: !891)
!8207 = !DILocalVariable(name: "priority", arg: 2, scope: !8204, file: !624, line: 1814, type: !108)
!8208 = !DILocation(line: 0, scope: !8204)
!8209 = !DILocation(line: 1816, column: 7, scope: !8204)
!8210 = !DILocation(line: 0, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8204, file: !624, line: 1816, column: 7)
!8212 = !DILocation(line: 1824, column: 1, scope: !8204)
!8213 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8214, file: !8214, line: 27, type: !8215, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !8318)
!8214 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8215 = !DISubroutineType(types: !8216)
!8216 = !{null, !8217}
!8217 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !8218)
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 32)
!8219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !8220)
!8220 = !{!8221, !8279, !8291, !8292, !8293, !8294, !8300, !8313}
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8219, file: !163, line: 247, baseType: !8222, size: 384)
!8222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !8223)
!8223 = !{!8224, !8248, !8255, !8256, !8257, !8266, !8267, !8268}
!8224 = !DIDerivedType(tag: DW_TAG_member, scope: !8222, file: !163, line: 60, baseType: !8225, size: 64)
!8225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8222, file: !163, line: 60, size: 64, elements: !8226)
!8226 = !{!8227, !8242}
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8225, file: !163, line: 61, baseType: !8228, size: 64)
!8228 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !8229)
!8229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !8230)
!8230 = !{!8231, !8237}
!8231 = !DIDerivedType(tag: DW_TAG_member, scope: !8229, file: !146, line: 38, baseType: !8232, size: 32)
!8232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8229, file: !146, line: 38, size: 32, elements: !8233)
!8233 = !{!8234, !8236}
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8232, file: !146, line: 39, baseType: !8235, size: 32)
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8229, size: 32)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8232, file: !146, line: 40, baseType: !8235, size: 32)
!8237 = !DIDerivedType(tag: DW_TAG_member, scope: !8229, file: !146, line: 42, baseType: !8238, size: 32, offset: 32)
!8238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8229, file: !146, line: 42, size: 32, elements: !8239)
!8239 = !{!8240, !8241}
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8238, file: !146, line: 43, baseType: !8235, size: 32)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8238, file: !146, line: 44, baseType: !8235, size: 32)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8225, file: !163, line: 62, baseType: !8243, size: 64)
!8243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !8244)
!8244 = !{!8245}
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8243, file: !175, line: 50, baseType: !8246, size: 64)
!8246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8247, size: 64, elements: !180)
!8247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8243, size: 32)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8222, file: !163, line: 68, baseType: !8249, size: 32, offset: 64)
!8249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8250, size: 32)
!8250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !8251)
!8251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !8252)
!8252 = !{!8253}
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8251, file: !141, line: 232, baseType: !8254, size: 64)
!8254 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !8229)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8222, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8222, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!8257 = !DIDerivedType(tag: DW_TAG_member, scope: !8222, file: !163, line: 90, baseType: !8258, size: 16, offset: 112)
!8258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8222, file: !163, line: 90, size: 16, elements: !8259)
!8259 = !{!8260, !8265}
!8260 = !DIDerivedType(tag: DW_TAG_member, scope: !8258, file: !163, line: 91, baseType: !8261, size: 16)
!8261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8258, file: !163, line: 91, size: 16, elements: !8262)
!8262 = !{!8263, !8264}
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8261, file: !163, line: 96, baseType: !195, size: 8)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8261, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8258, file: !163, line: 100, baseType: !121, size: 16)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8222, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8222, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8222, file: !163, line: 131, baseType: !8269, size: 192, offset: 192)
!8269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !8270)
!8270 = !{!8271, !8272, !8278}
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8269, file: !141, line: 245, baseType: !8228, size: 64)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8269, file: !141, line: 246, baseType: !8273, size: 32, offset: 64)
!8273 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !8274)
!8274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8275, size: 32)
!8275 = !DISubroutineType(types: !8276)
!8276 = !{null, !8277}
!8277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8269, size: 32)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8269, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8219, file: !163, line: 250, baseType: !8280, size: 288, offset: 384)
!8280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !8281)
!8281 = !{!8282, !8283, !8284, !8285, !8286, !8287, !8288, !8289, !8290}
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8280, file: !214, line: 26, baseType: !108, size: 32)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8280, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8280, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8280, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8280, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8280, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8280, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8280, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8280, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8219, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8219, file: !163, line: 256, baseType: !8250, size: 64, offset: 704)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8219, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8219, file: !163, line: 300, baseType: !8295, size: 96, offset: 800)
!8295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !8296)
!8296 = !{!8297, !8298, !8299}
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8295, file: !163, line: 153, baseType: !22, size: 32)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8295, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8295, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8219, file: !163, line: 325, baseType: !8301, size: 32, offset: 896)
!8301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8302, size: 32)
!8302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !8303)
!8303 = !{!8304, !8310, !8311}
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8302, file: !137, line: 5074, baseType: !8305, size: 96)
!8305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !8306)
!8306 = !{!8307, !8308, !8309}
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8305, file: !240, line: 57, baseType: !243, size: 32)
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8305, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8305, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8302, file: !137, line: 5075, baseType: !8250, size: 64, offset: 96)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8302, file: !137, line: 5076, baseType: !8312, offset: 160)
!8312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8219, file: !163, line: 343, baseType: !8314, size: 64, offset: 928)
!8314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !8315)
!8315 = !{!8316, !8317}
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8314, file: !214, line: 63, baseType: !108, size: 32)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8314, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!8318 = !{!8319}
!8319 = !DILocalVariable(name: "thread", arg: 1, scope: !8213, file: !8214, line: 27, type: !8217)
!8320 = !DILocation(line: 0, scope: !8213)
!8321 = !DILocation(line: 29, column: 6, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8213, file: !8214, line: 29, column: 6)
!8323 = !DILocation(line: 29, column: 15, scope: !8322)
!8324 = !DILocation(line: 29, column: 6, scope: !8213)
!8325 = !DILocation(line: 1031, column: 3, scope: !8326, inlinedAt: !8329)
!8326 = distinct !DISubprogram(name: "__get_IPSR", scope: !7315, file: !7315, line: 1027, type: !3591, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !8327)
!8327 = !{!8328}
!8328 = !DILocalVariable(name: "result", scope: !8326, file: !7315, line: 1029, type: !108)
!8329 = distinct !DILocation(line: 48, column: 10, scope: !8330, inlinedAt: !8334)
!8330 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8331, file: !8331, line: 46, type: !8332, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !251)
!8331 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!131}
!8334 = distinct !DILocation(line: 30, column: 7, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !8214, line: 30, column: 7)
!8336 = distinct !DILexicalBlock(scope: !8322, file: !8214, line: 29, column: 26)
!8337 = !{i64 3494007}
!8338 = !DILocation(line: 0, scope: !8326, inlinedAt: !8329)
!8339 = !DILocation(line: 48, column: 9, scope: !8330, inlinedAt: !8334)
!8340 = !DILocation(line: 30, column: 7, scope: !8336)
!8341 = !DILocation(line: 42, column: 14, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8335, file: !8214, line: 30, column: 25)
!8343 = !DILocation(line: 48, column: 15, scope: !8342)
!8344 = !DILocation(line: 49, column: 3, scope: !8342)
!8345 = !DILocation(line: 52, column: 2, scope: !8213)
!8346 = !DILocation(line: 53, column: 1, scope: !8213)
!8347 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !486, file: !486, line: 127, type: !334, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !251)
!8348 = !DILocation(line: 134, column: 2, scope: !8347)
!8349 = !DILocation(line: 156, column: 1, scope: !8347)
!8350 = !DILocation(line: 0, scope: !485)
!8351 = !DILocation(line: 289, column: 36, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !485, file: !486, line: 285, column: 2)
!8353 = !DILocation(line: 289, column: 42, scope: !8352)
!8354 = !DILocation(line: 300, column: 36, scope: !485)
!8355 = !DILocation(line: 301, column: 35, scope: !485)
!8356 = !DILocation(line: 302, column: 37, scope: !485)
!8357 = !DILocation(line: 311, column: 2, scope: !485)
!8358 = !DILocation(line: 316, column: 1, scope: !485)
!8359 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !652, file: !652, line: 180, type: !334, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8360 = !DILocation(line: 188, column: 12, scope: !8359)
!8361 = !DILocation(line: 271, column: 3, scope: !8362, inlinedAt: !8363)
!8362 = distinct !DISubprogram(name: "__DSB", scope: !7315, file: !7315, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8363 = distinct !DILocation(line: 192, column: 2, scope: !8359)
!8364 = !{i64 3662835}
!8365 = !DILocation(line: 260, column: 3, scope: !8366, inlinedAt: !8367)
!8366 = distinct !DISubprogram(name: "__ISB", scope: !7315, file: !7315, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8367 = distinct !DILocation(line: 193, column: 2, scope: !8359)
!8368 = !{i64 3662552}
!8369 = !DILocation(line: 194, column: 1, scope: !8359)
!8370 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !652, file: !652, line: 199, type: !334, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8371 = !DILocation(line: 282, column: 3, scope: !8372, inlinedAt: !8373)
!8372 = distinct !DISubprogram(name: "__DMB", scope: !7315, file: !7315, line: 280, type: !334, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8373 = distinct !DILocation(line: 202, column: 2, scope: !8370)
!8374 = !{i64 3663111}
!8375 = !DILocation(line: 205, column: 12, scope: !8370)
!8376 = !DILocation(line: 206, column: 1, scope: !8370)
!8377 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !652, file: !652, line: 275, type: !8378, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8391)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{null, !8380, !1906, !7581, !7581}
!8380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8381, size: 32)
!8381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8382)
!8382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !8383)
!8383 = !{!8384, !8385, !8386}
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8382, file: !596, line: 53, baseType: !22, size: 32)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8382, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8382, file: !596, line: 55, baseType: !8387, size: 32, offset: 64)
!8387 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !8388)
!8388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !8389)
!8389 = !{!8390}
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8388, file: !602, line: 150, baseType: !108, size: 32)
!8391 = !{!8392, !8393, !8394, !8395}
!8392 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8377, file: !652, line: 276, type: !8380)
!8393 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8377, file: !652, line: 276, type: !1906)
!8394 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8377, file: !652, line: 277, type: !7581)
!8395 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8377, file: !652, line: 277, type: !7581)
!8396 = !DILocation(line: 0, scope: !8377)
!8397 = !DILocation(line: 279, column: 6, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8377, file: !652, line: 279, column: 6)
!8399 = !DILocation(line: 285, column: 1, scope: !8377)
!8400 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8401, file: !8401, line: 220, type: !8402, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8404)
!8401 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8402 = !DISubroutineType(types: !8403)
!8403 = !{!103, !8380, !1906, !7581, !7581}
!8404 = !{!8405, !8406, !8407, !8408, !8409}
!8405 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8400, file: !8401, line: 221, type: !8380)
!8406 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8400, file: !8401, line: 221, type: !1906)
!8407 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8400, file: !8401, line: 222, type: !7581)
!8408 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8400, file: !8401, line: 223, type: !7581)
!8409 = !DILocalVariable(name: "mpu_reg_index", scope: !8400, file: !8401, line: 225, type: !103)
!8410 = !DILocation(line: 0, scope: !8400)
!8411 = !DILocation(line: 225, column: 22, scope: !8400)
!8412 = !DILocation(line: 233, column: 18, scope: !8400)
!8413 = !DILocation(line: 236, column: 23, scope: !8400)
!8414 = !DILocation(line: 236, column: 21, scope: !8400)
!8415 = !DILocation(line: 238, column: 2, scope: !8400)
!8416 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !652, file: !652, line: 105, type: !8417, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8419)
!8417 = !DISubroutineType(types: !8418)
!8418 = !{!103, !8380, !185, !185, !131}
!8419 = !{!8420, !8421, !8422, !8423, !8424, !8425}
!8420 = !DILocalVariable(name: "regions", arg: 1, scope: !8416, file: !652, line: 106, type: !8380)
!8421 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8416, file: !652, line: 106, type: !185)
!8422 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8416, file: !652, line: 106, type: !185)
!8423 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8416, file: !652, line: 107, type: !131)
!8424 = !DILocalVariable(name: "i", scope: !8416, file: !652, line: 109, type: !103)
!8425 = !DILocalVariable(name: "reg_index", scope: !8416, file: !652, line: 110, type: !103)
!8426 = !DILocation(line: 0, scope: !8416)
!8427 = !DILocation(line: 110, column: 18, scope: !8416)
!8428 = !DILocation(line: 112, column: 16, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !652, line: 112, column: 2)
!8430 = distinct !DILexicalBlock(scope: !8416, file: !652, line: 112, column: 2)
!8431 = !DILocation(line: 112, column: 2, scope: !8430)
!8432 = !DILocation(line: 113, column: 7, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !652, line: 113, column: 7)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !652, line: 112, column: 36)
!8435 = !DILocation(line: 113, column: 18, scope: !8433)
!8436 = !DILocation(line: 113, column: 23, scope: !8433)
!8437 = !DILocation(line: 113, column: 7, scope: !8434)
!8438 = !DILocation(line: 118, column: 23, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8434, file: !652, line: 118, column: 7)
!8440 = !DILocation(line: 119, column: 7, scope: !8439)
!8441 = !DILocation(line: 118, column: 7, scope: !8434)
!8442 = !DILocation(line: 120, column: 4, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8444, file: !652, line: 120, column: 4)
!8444 = distinct !DILexicalBlock(scope: !8445, file: !652, line: 120, column: 4)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !652, line: 120, column: 4)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !652, line: 120, column: 4)
!8447 = distinct !DILexicalBlock(scope: !8439, file: !652, line: 119, column: 45)
!8448 = !DILocation(line: 121, column: 4, scope: !8447)
!8449 = !DILocation(line: 124, column: 36, scope: !8434)
!8450 = !DILocation(line: 124, column: 15, scope: !8434)
!8451 = !DILocation(line: 126, column: 17, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8434, file: !652, line: 126, column: 7)
!8453 = !DILocation(line: 126, column: 7, scope: !8434)
!8454 = !DILocation(line: 131, column: 12, scope: !8434)
!8455 = !DILocation(line: 132, column: 2, scope: !8434)
!8456 = !DILocation(line: 112, column: 32, scope: !8429)
!8457 = distinct !{!8457, !8431, !8458}
!8458 = !DILocation(line: 132, column: 2, scope: !8430)
!8459 = !DILocation(line: 135, column: 1, scope: !8416)
!8460 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8401, file: !8401, line: 63, type: !8461, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8463)
!8461 = !DISubroutineType(types: !8462)
!8462 = !{!103, !8380}
!8463 = !{!8464, !8465}
!8464 = !DILocalVariable(name: "part", arg: 1, scope: !8460, file: !8401, line: 63, type: !8380)
!8465 = !DILocalVariable(name: "partition_is_valid", scope: !8460, file: !8401, line: 70, type: !103)
!8466 = !DILocation(line: 0, scope: !8460)
!8467 = !DILocation(line: 71, column: 11, scope: !8460)
!8468 = !DILocation(line: 71, column: 37, scope: !8460)
!8469 = !DILocation(line: 72, column: 3, scope: !8460)
!8470 = !DILocation(line: 71, column: 30, scope: !8460)
!8471 = !DILocation(line: 75, column: 11, scope: !8460)
!8472 = !DILocation(line: 75, column: 17, scope: !8460)
!8473 = !DILocation(line: 75, column: 38, scope: !8460)
!8474 = !DILocation(line: 77, column: 2, scope: !8460)
!8475 = distinct !DISubprogram(name: "mpu_configure_region", scope: !652, file: !652, line: 79, type: !8476, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8478)
!8476 = !DISubroutineType(types: !8477)
!8477 = !{!103, !1906, !8380}
!8478 = !{!8479, !8480, !8481}
!8479 = !DILocalVariable(name: "index", arg: 1, scope: !8475, file: !652, line: 79, type: !1906)
!8480 = !DILocalVariable(name: "new_region", arg: 2, scope: !8475, file: !652, line: 80, type: !8380)
!8481 = !DILocalVariable(name: "region_conf", scope: !8475, file: !652, line: 82, type: !641)
!8482 = !DILocation(line: 0, scope: !8475)
!8483 = !DILocation(line: 82, column: 2, scope: !8475)
!8484 = !DILocation(line: 82, column: 24, scope: !8475)
!8485 = !DILocation(line: 87, column: 33, scope: !8475)
!8486 = !DILocation(line: 87, column: 14, scope: !8475)
!8487 = !DILocation(line: 87, column: 19, scope: !8475)
!8488 = !DILocation(line: 91, column: 55, scope: !8475)
!8489 = !DILocation(line: 92, column: 16, scope: !8475)
!8490 = !DILocation(line: 92, column: 53, scope: !8475)
!8491 = !DILocation(line: 91, column: 2, scope: !8475)
!8492 = !DILocation(line: 95, column: 9, scope: !8475)
!8493 = !DILocation(line: 97, column: 1, scope: !8475)
!8494 = !DILocation(line: 95, column: 2, scope: !8475)
!8495 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8401, file: !8401, line: 113, type: !8496, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8501)
!8496 = !DISubroutineType(types: !8497)
!8497 = !{null, !8498, !8499, !108, !108}
!8498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!8499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8500, size: 32)
!8500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8387)
!8501 = !{!8502, !8503, !8504, !8505}
!8502 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8495, file: !8401, line: 114, type: !8498)
!8503 = !DILocalVariable(name: "attr", arg: 2, scope: !8495, file: !8401, line: 115, type: !8499)
!8504 = !DILocalVariable(name: "base", arg: 3, scope: !8495, file: !8401, line: 115, type: !108)
!8505 = !DILocalVariable(name: "size", arg: 4, scope: !8495, file: !8401, line: 115, type: !108)
!8506 = !DILocation(line: 0, scope: !8495)
!8507 = !DILocation(line: 127, column: 23, scope: !8495)
!8508 = !DILocation(line: 127, column: 35, scope: !8495)
!8509 = !DILocation(line: 127, column: 33, scope: !8495)
!8510 = !DILocation(line: 127, column: 10, scope: !8495)
!8511 = !DILocation(line: 127, column: 15, scope: !8495)
!8512 = !DILocation(line: 129, column: 1, scope: !8495)
!8513 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !652, file: !652, line: 57, type: !8514, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8516)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{!103, !1906, !639}
!8516 = !{!8517, !8518}
!8517 = !DILocalVariable(name: "index", arg: 1, scope: !8513, file: !652, line: 57, type: !1906)
!8518 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8513, file: !652, line: 58, type: !639)
!8519 = !DILocation(line: 0, scope: !8513)
!8520 = !DILocation(line: 61, column: 6, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8513, file: !652, line: 61, column: 6)
!8522 = !DILocation(line: 61, column: 12, scope: !8521)
!8523 = !DILocation(line: 61, column: 6, scope: !8513)
!8524 = !DILocation(line: 64, column: 3, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !652, line: 64, column: 3)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !652, line: 64, column: 3)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !652, line: 64, column: 3)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !652, line: 64, column: 3)
!8529 = distinct !DILexicalBlock(scope: !8521, file: !652, line: 61, column: 40)
!8530 = !DILocation(line: 65, column: 3, scope: !8529)
!8531 = !DILocation(line: 71, column: 2, scope: !8513)
!8532 = !DILocation(line: 73, column: 2, scope: !8513)
!8533 = !DILocation(line: 74, column: 1, scope: !8513)
!8534 = distinct !DISubprogram(name: "region_init", scope: !8401, file: !8401, line: 29, type: !8535, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8537)
!8535 = !DISubroutineType(types: !8536)
!8536 = !{null, !7581, !639}
!8537 = !{!8538, !8539}
!8538 = !DILocalVariable(name: "index", arg: 1, scope: !8534, file: !8401, line: 29, type: !7581)
!8539 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8534, file: !8401, line: 30, type: !639)
!8540 = !DILocation(line: 0, scope: !8534)
!8541 = !DILocation(line: 33, column: 2, scope: !8534)
!8542 = !DILocation(line: 47, column: 28, scope: !8534)
!8543 = !DILocation(line: 47, column: 33, scope: !8534)
!8544 = !DILocation(line: 48, column: 26, scope: !8534)
!8545 = !DILocation(line: 47, column: 12, scope: !8534)
!8546 = !DILocation(line: 49, column: 32, scope: !8534)
!8547 = !DILocation(line: 49, column: 37, scope: !8534)
!8548 = !DILocation(line: 49, column: 12, scope: !8534)
!8549 = !DILocation(line: 53, column: 1, scope: !8534)
!8550 = distinct !DISubprogram(name: "set_region_number", scope: !8551, file: !8551, line: 32, type: !7404, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8552)
!8551 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8552 = !{!8553}
!8553 = !DILocalVariable(name: "index", arg: 1, scope: !8550, file: !8551, line: 32, type: !108)
!8554 = !DILocation(line: 0, scope: !8550)
!8555 = !DILocation(line: 34, column: 11, scope: !8550)
!8556 = !DILocation(line: 35, column: 1, scope: !8550)
!8557 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8401, file: !8401, line: 88, type: !8558, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8560)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{!108, !108}
!8560 = !{!8561}
!8561 = !DILocalVariable(name: "size", arg: 1, scope: !8557, file: !8401, line: 88, type: !108)
!8562 = !DILocation(line: 0, scope: !8557)
!8563 = !DILocation(line: 91, column: 11, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8557, file: !8401, line: 91, column: 6)
!8565 = !DILocation(line: 91, column: 6, scope: !8557)
!8566 = !DILocation(line: 100, column: 11, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8557, file: !8401, line: 100, column: 6)
!8568 = !DILocation(line: 100, column: 6, scope: !8557)
!8569 = !DILocation(line: 104, column: 35, scope: !8557)
!8570 = !DILocation(line: 104, column: 16, scope: !8557)
!8571 = !DILocation(line: 104, column: 50, scope: !8557)
!8572 = !DILocation(line: 104, column: 72, scope: !8557)
!8573 = !DILocation(line: 104, column: 2, scope: !8557)
!8574 = !DILocation(line: 106, column: 1, scope: !8557)
!8575 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !652, file: !652, line: 307, type: !8576, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8578)
!8576 = !DISubroutineType(types: !8577)
!8577 = !{null, !8380, !185}
!8578 = !{!8579, !8580}
!8579 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8575, file: !652, line: 308, type: !8380)
!8580 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8575, file: !652, line: 308, type: !185)
!8581 = !DILocation(line: 0, scope: !8575)
!8582 = !DILocation(line: 310, column: 6, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8575, file: !652, line: 310, column: 6)
!8584 = !DILocation(line: 316, column: 1, scope: !8575)
!8585 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8401, file: !8401, line: 249, type: !8586, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8588)
!8586 = !DISubroutineType(types: !8587)
!8587 = !{!103, !8380, !185}
!8588 = !{!8589, !8590, !8591, !8592}
!8589 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8585, file: !8401, line: 250, type: !8380)
!8590 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8585, file: !8401, line: 250, type: !185)
!8591 = !DILocalVariable(name: "mpu_reg_index", scope: !8585, file: !8401, line: 252, type: !103)
!8592 = !DILocalVariable(name: "i", scope: !8593, file: !8401, line: 264, type: !103)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !8401, line: 264, column: 3)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !8401, line: 261, column: 32)
!8595 = distinct !DILexicalBlock(scope: !8585, file: !8401, line: 261, column: 6)
!8596 = !DILocation(line: 0, scope: !8585)
!8597 = !DILocation(line: 252, column: 22, scope: !8585)
!8598 = !DILocation(line: 258, column: 18, scope: !8585)
!8599 = !DILocation(line: 261, column: 20, scope: !8595)
!8600 = !DILocation(line: 261, column: 6, scope: !8585)
!8601 = !DILocation(line: 0, scope: !8593)
!8602 = !DILocation(line: 265, column: 4, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !8401, line: 264, column: 59)
!8604 = distinct !DILexicalBlock(scope: !8593, file: !8401, line: 264, column: 3)
!8605 = !DILocation(line: 264, column: 55, scope: !8604)
!8606 = !DILocation(line: 264, column: 33, scope: !8604)
!8607 = !DILocation(line: 264, column: 3, scope: !8593)
!8608 = distinct !{!8608, !8607, !8609}
!8609 = !DILocation(line: 266, column: 3, scope: !8593)
!8610 = !DILocation(line: 269, column: 2, scope: !8585)
!8611 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8612, file: !8612, line: 218, type: !7404, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8613)
!8612 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8613 = !{!8614}
!8614 = !DILocalVariable(name: "rnr", arg: 1, scope: !8611, file: !8612, line: 218, type: !108)
!8615 = !DILocation(line: 0, scope: !8611)
!8616 = !DILocation(line: 220, column: 12, scope: !8611)
!8617 = !DILocation(line: 221, column: 13, scope: !8611)
!8618 = !DILocation(line: 222, column: 1, scope: !8611)
!8619 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !652, file: !652, line: 326, type: !8620, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8622)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{!103}
!8622 = !{!8623}
!8623 = !DILocalVariable(name: "r_index", scope: !8619, file: !652, line: 328, type: !108)
!8624 = !DILocation(line: 330, column: 17, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8619, file: !652, line: 330, column: 6)
!8626 = !DILocation(line: 330, column: 29, scope: !8625)
!8627 = !DILocation(line: 330, column: 6, scope: !8619)
!8628 = !DILocation(line: 347, column: 2, scope: !8619)
!8629 = !DILocation(line: 0, scope: !8619)
!8630 = !DILocation(line: 364, column: 29, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !652, line: 364, column: 2)
!8632 = distinct !DILexicalBlock(scope: !8619, file: !652, line: 364, column: 2)
!8633 = !DILocation(line: 364, column: 2, scope: !8632)
!8634 = !DILocation(line: 365, column: 25, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !652, line: 364, column: 66)
!8636 = !DILocation(line: 365, column: 3, scope: !8635)
!8637 = !DILocation(line: 364, column: 62, scope: !8631)
!8638 = distinct !{!8638, !8633, !8639}
!8639 = !DILocation(line: 366, column: 2, scope: !8632)
!8640 = !DILocation(line: 369, column: 23, scope: !8619)
!8641 = !DILocation(line: 369, column: 21, scope: !8619)
!8642 = !DILocation(line: 372, column: 2, scope: !8619)
!8643 = !DILocation(line: 443, column: 2, scope: !8619)
!8644 = !DILocation(line: 444, column: 1, scope: !8619)
!8645 = distinct !DISubprogram(name: "strcpy", scope: !8646, file: !8646, line: 20, type: !8647, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8651)
!8646 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8647 = !DISubroutineType(types: !8648)
!8648 = !{!277, !8649, !8650}
!8649 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !277)
!8650 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !337)
!8651 = !{!8652, !8653, !8654}
!8652 = !DILocalVariable(name: "d", arg: 1, scope: !8645, file: !8646, line: 20, type: !8649)
!8653 = !DILocalVariable(name: "s", arg: 2, scope: !8645, file: !8646, line: 20, type: !8650)
!8654 = !DILocalVariable(name: "dest", scope: !8645, file: !8646, line: 22, type: !277)
!8655 = !DILocation(line: 0, scope: !8645)
!8656 = !DILocation(line: 24, column: 9, scope: !8645)
!8657 = !DILocation(line: 24, column: 12, scope: !8645)
!8658 = !DILocation(line: 24, column: 2, scope: !8645)
!8659 = !DILocation(line: 25, column: 6, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8645, file: !8646, line: 24, column: 21)
!8661 = !DILocation(line: 26, column: 4, scope: !8660)
!8662 = !DILocation(line: 27, column: 4, scope: !8660)
!8663 = distinct !{!8663, !8658, !8664}
!8664 = !DILocation(line: 28, column: 2, scope: !8645)
!8665 = !DILocation(line: 30, column: 5, scope: !8645)
!8666 = !DILocation(line: 32, column: 2, scope: !8645)
!8667 = distinct !DISubprogram(name: "strncpy", scope: !8646, file: !8646, line: 42, type: !8668, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8670)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{!277, !8649, !8650, !132}
!8670 = !{!8671, !8672, !8673, !8674}
!8671 = !DILocalVariable(name: "d", arg: 1, scope: !8667, file: !8646, line: 42, type: !8649)
!8672 = !DILocalVariable(name: "s", arg: 2, scope: !8667, file: !8646, line: 42, type: !8650)
!8673 = !DILocalVariable(name: "n", arg: 3, scope: !8667, file: !8646, line: 42, type: !132)
!8674 = !DILocalVariable(name: "dest", scope: !8667, file: !8646, line: 44, type: !277)
!8675 = !DILocation(line: 0, scope: !8667)
!8676 = !DILocation(line: 46, column: 12, scope: !8667)
!8677 = !DILocation(line: 46, column: 17, scope: !8667)
!8678 = !DILocation(line: 46, column: 20, scope: !8667)
!8679 = !DILocation(line: 46, column: 23, scope: !8667)
!8680 = !DILocation(line: 46, column: 2, scope: !8667)
!8681 = !DILocation(line: 47, column: 6, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8667, file: !8646, line: 46, column: 32)
!8683 = !DILocation(line: 48, column: 4, scope: !8682)
!8684 = !DILocation(line: 49, column: 4, scope: !8682)
!8685 = !DILocation(line: 50, column: 4, scope: !8682)
!8686 = distinct !{!8686, !8680, !8687}
!8687 = !DILocation(line: 51, column: 2, scope: !8667)
!8688 = !DILocation(line: 54, column: 6, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8667, file: !8646, line: 53, column: 16)
!8690 = !DILocation(line: 55, column: 4, scope: !8689)
!8691 = !DILocation(line: 56, column: 4, scope: !8689)
!8692 = !DILocation(line: 53, column: 11, scope: !8667)
!8693 = !DILocation(line: 53, column: 2, scope: !8667)
!8694 = distinct !{!8694, !8693, !8695}
!8695 = !DILocation(line: 57, column: 2, scope: !8667)
!8696 = !DILocation(line: 59, column: 2, scope: !8667)
!8697 = distinct !DISubprogram(name: "strchr", scope: !8646, file: !8646, line: 69, type: !8698, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8700)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!277, !337, !103}
!8700 = !{!8701, !8702, !8703}
!8701 = !DILocalVariable(name: "s", arg: 1, scope: !8697, file: !8646, line: 69, type: !337)
!8702 = !DILocalVariable(name: "c", arg: 2, scope: !8697, file: !8646, line: 69, type: !103)
!8703 = !DILocalVariable(name: "tmp", scope: !8697, file: !8646, line: 71, type: !278)
!8704 = !DILocation(line: 0, scope: !8697)
!8705 = !DILocation(line: 73, column: 2, scope: !8697)
!8706 = !DILocation(line: 73, column: 10, scope: !8697)
!8707 = !DILocation(line: 73, column: 13, scope: !8697)
!8708 = !DILocation(line: 73, column: 21, scope: !8697)
!8709 = !DILocation(line: 74, column: 4, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8697, file: !8646, line: 73, column: 38)
!8711 = distinct !{!8711, !8705, !8712}
!8712 = !DILocation(line: 75, column: 2, scope: !8697)
!8713 = !DILocation(line: 77, column: 9, scope: !8697)
!8714 = !DILocation(line: 77, column: 2, scope: !8697)
!8715 = distinct !DISubprogram(name: "strrchr", scope: !8646, file: !8646, line: 87, type: !8698, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8716)
!8716 = !{!8717, !8718, !8719}
!8717 = !DILocalVariable(name: "s", arg: 1, scope: !8715, file: !8646, line: 87, type: !337)
!8718 = !DILocalVariable(name: "c", arg: 2, scope: !8715, file: !8646, line: 87, type: !103)
!8719 = !DILocalVariable(name: "match", scope: !8715, file: !8646, line: 89, type: !277)
!8720 = !DILocation(line: 0, scope: !8715)
!8721 = !DILocation(line: 91, column: 2, scope: !8715)
!8722 = !DILocation(line: 92, column: 7, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !8646, line: 92, column: 7)
!8724 = distinct !DILexicalBlock(scope: !8715, file: !8646, line: 91, column: 5)
!8725 = !DILocation(line: 92, column: 10, scope: !8723)
!8726 = !DILocation(line: 92, column: 7, scope: !8724)
!8727 = !DILocation(line: 95, column: 13, scope: !8715)
!8728 = !DILocation(line: 95, column: 2, scope: !8724)
!8729 = distinct !{!8729, !8721, !8730}
!8730 = !DILocation(line: 95, column: 15, scope: !8715)
!8731 = !DILocation(line: 97, column: 2, scope: !8715)
!8732 = distinct !DISubprogram(name: "strlen", scope: !8646, file: !8646, line: 107, type: !8733, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8735)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{!132, !337}
!8735 = !{!8736, !8737}
!8736 = !DILocalVariable(name: "s", arg: 1, scope: !8732, file: !8646, line: 107, type: !337)
!8737 = !DILocalVariable(name: "n", scope: !8732, file: !8646, line: 109, type: !132)
!8738 = !DILocation(line: 0, scope: !8732)
!8739 = !DILocation(line: 111, column: 9, scope: !8732)
!8740 = !DILocation(line: 111, column: 12, scope: !8732)
!8741 = !DILocation(line: 111, column: 2, scope: !8732)
!8742 = !DILocation(line: 112, column: 4, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8732, file: !8646, line: 111, column: 21)
!8744 = !DILocation(line: 113, column: 4, scope: !8743)
!8745 = distinct !{!8745, !8741, !8746}
!8746 = !DILocation(line: 114, column: 2, scope: !8732)
!8747 = !DILocation(line: 116, column: 2, scope: !8732)
!8748 = distinct !DISubprogram(name: "strnlen", scope: !8646, file: !8646, line: 126, type: !8749, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8751)
!8749 = !DISubroutineType(types: !8750)
!8750 = !{!132, !337, !132}
!8751 = !{!8752, !8753, !8754}
!8752 = !DILocalVariable(name: "s", arg: 1, scope: !8748, file: !8646, line: 126, type: !337)
!8753 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8748, file: !8646, line: 126, type: !132)
!8754 = !DILocalVariable(name: "n", scope: !8748, file: !8646, line: 128, type: !132)
!8755 = !DILocation(line: 0, scope: !8748)
!8756 = !DILocation(line: 130, column: 9, scope: !8748)
!8757 = !DILocation(line: 130, column: 12, scope: !8748)
!8758 = !DILocation(line: 130, column: 20, scope: !8748)
!8759 = !DILocation(line: 130, column: 2, scope: !8748)
!8760 = !DILocation(line: 131, column: 4, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8748, file: !8646, line: 130, column: 35)
!8762 = !DILocation(line: 132, column: 4, scope: !8761)
!8763 = distinct !{!8763, !8759, !8764}
!8764 = !DILocation(line: 133, column: 2, scope: !8748)
!8765 = !DILocation(line: 135, column: 2, scope: !8748)
!8766 = distinct !DISubprogram(name: "strcmp", scope: !8646, file: !8646, line: 145, type: !8767, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8769)
!8767 = !DISubroutineType(types: !8768)
!8768 = !{!103, !337, !337}
!8769 = !{!8770, !8771}
!8770 = !DILocalVariable(name: "s1", arg: 1, scope: !8766, file: !8646, line: 145, type: !337)
!8771 = !DILocalVariable(name: "s2", arg: 2, scope: !8766, file: !8646, line: 145, type: !337)
!8772 = !DILocation(line: 0, scope: !8766)
!8773 = !DILocation(line: 147, column: 10, scope: !8766)
!8774 = !DILocation(line: 147, column: 17, scope: !8766)
!8775 = !DILocation(line: 147, column: 14, scope: !8766)
!8776 = !DILocation(line: 147, column: 22, scope: !8766)
!8777 = !DILocation(line: 148, column: 5, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8766, file: !8646, line: 147, column: 40)
!8779 = !DILocation(line: 149, column: 5, scope: !8778)
!8780 = distinct !{!8780, !8781, !8782}
!8781 = !DILocation(line: 147, column: 2, scope: !8766)
!8782 = !DILocation(line: 150, column: 2, scope: !8766)
!8783 = !DILocation(line: 152, column: 9, scope: !8766)
!8784 = !DILocation(line: 152, column: 15, scope: !8766)
!8785 = !DILocation(line: 152, column: 13, scope: !8766)
!8786 = !DILocation(line: 152, column: 2, scope: !8766)
!8787 = distinct !DISubprogram(name: "strncmp", scope: !8646, file: !8646, line: 162, type: !8788, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8790)
!8788 = !DISubroutineType(types: !8789)
!8789 = !{!103, !337, !337, !132}
!8790 = !{!8791, !8792, !8793}
!8791 = !DILocalVariable(name: "s1", arg: 1, scope: !8787, file: !8646, line: 162, type: !337)
!8792 = !DILocalVariable(name: "s2", arg: 2, scope: !8787, file: !8646, line: 162, type: !337)
!8793 = !DILocalVariable(name: "n", arg: 3, scope: !8787, file: !8646, line: 162, type: !132)
!8794 = !DILocation(line: 0, scope: !8787)
!8795 = !DILocation(line: 164, column: 17, scope: !8787)
!8796 = !DILocation(line: 164, column: 21, scope: !8787)
!8797 = !DILocation(line: 164, column: 28, scope: !8787)
!8798 = !DILocation(line: 164, column: 25, scope: !8787)
!8799 = !DILocation(line: 164, column: 33, scope: !8787)
!8800 = !DILocation(line: 165, column: 5, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8787, file: !8646, line: 164, column: 51)
!8802 = !DILocation(line: 166, column: 5, scope: !8801)
!8803 = !DILocation(line: 167, column: 4, scope: !8801)
!8804 = distinct !{!8804, !8805, !8806}
!8805 = !DILocation(line: 164, column: 2, scope: !8787)
!8806 = !DILocation(line: 168, column: 2, scope: !8787)
!8807 = !DILocation(line: 170, column: 25, scope: !8787)
!8808 = !DILocation(line: 170, column: 31, scope: !8787)
!8809 = !DILocation(line: 170, column: 29, scope: !8787)
!8810 = !DILocation(line: 170, column: 9, scope: !8787)
!8811 = !DILocation(line: 170, column: 2, scope: !8787)
!8812 = distinct !DISubprogram(name: "strtok_r", scope: !8646, file: !8646, line: 180, type: !8813, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8815)
!8813 = !DISubroutineType(types: !8814)
!8814 = !{!277, !277, !337, !378}
!8815 = !{!8816, !8817, !8818, !8819, !8820}
!8816 = !DILocalVariable(name: "str", arg: 1, scope: !8812, file: !8646, line: 180, type: !277)
!8817 = !DILocalVariable(name: "sep", arg: 2, scope: !8812, file: !8646, line: 180, type: !337)
!8818 = !DILocalVariable(name: "state", arg: 3, scope: !8812, file: !8646, line: 180, type: !378)
!8819 = !DILocalVariable(name: "start", scope: !8812, file: !8646, line: 182, type: !277)
!8820 = !DILocalVariable(name: "end", scope: !8812, file: !8646, line: 182, type: !277)
!8821 = !DILocation(line: 0, scope: !8812)
!8822 = !DILocation(line: 184, column: 10, scope: !8812)
!8823 = !DILocation(line: 184, column: 22, scope: !8812)
!8824 = !DILocation(line: 187, column: 9, scope: !8812)
!8825 = !DILocation(line: 187, column: 16, scope: !8812)
!8826 = !DILocation(line: 187, column: 19, scope: !8812)
!8827 = !DILocation(line: 187, column: 2, scope: !8812)
!8828 = !DILocation(line: 188, column: 8, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8812, file: !8646, line: 187, column: 40)
!8830 = distinct !{!8830, !8827, !8831}
!8831 = !DILocation(line: 189, column: 2, scope: !8812)
!8832 = !DILocation(line: 198, column: 9, scope: !8812)
!8833 = !DILocation(line: 198, column: 18, scope: !8812)
!8834 = !DILocation(line: 198, column: 17, scope: !8812)
!8835 = !DILocation(line: 198, column: 2, scope: !8812)
!8836 = !DILocation(line: 199, column: 6, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8812, file: !8646, line: 198, column: 37)
!8838 = !DILocation(line: 198, column: 14, scope: !8812)
!8839 = distinct !{!8839, !8835, !8840}
!8840 = !DILocation(line: 200, column: 2, scope: !8812)
!8841 = !DILocation(line: 203, column: 8, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !8646, line: 202, column: 20)
!8843 = distinct !DILexicalBlock(scope: !8812, file: !8646, line: 202, column: 6)
!8844 = !DILocation(line: 204, column: 16, scope: !8842)
!8845 = !DILocation(line: 205, column: 2, scope: !8842)
!8846 = !DILocation(line: 210, column: 1, scope: !8812)
!8847 = distinct !DISubprogram(name: "strcat", scope: !8646, file: !8646, line: 212, type: !8647, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8848)
!8848 = !{!8849, !8850}
!8849 = !DILocalVariable(name: "dest", arg: 1, scope: !8847, file: !8646, line: 212, type: !8649)
!8850 = !DILocalVariable(name: "src", arg: 2, scope: !8847, file: !8646, line: 212, type: !8650)
!8851 = !DILocation(line: 0, scope: !8847)
!8852 = !DILocation(line: 214, column: 16, scope: !8847)
!8853 = !DILocation(line: 214, column: 14, scope: !8847)
!8854 = !DILocation(line: 214, column: 2, scope: !8847)
!8855 = !DILocation(line: 215, column: 2, scope: !8847)
!8856 = distinct !DISubprogram(name: "strncat", scope: !8646, file: !8646, line: 218, type: !8668, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8857)
!8857 = !{!8858, !8859, !8860, !8861, !8862}
!8858 = !DILocalVariable(name: "dest", arg: 1, scope: !8856, file: !8646, line: 218, type: !8649)
!8859 = !DILocalVariable(name: "src", arg: 2, scope: !8856, file: !8646, line: 218, type: !8650)
!8860 = !DILocalVariable(name: "n", arg: 3, scope: !8856, file: !8646, line: 219, type: !132)
!8861 = !DILocalVariable(name: "orig_dest", scope: !8856, file: !8646, line: 221, type: !277)
!8862 = !DILocalVariable(name: "len", scope: !8856, file: !8646, line: 222, type: !132)
!8863 = !DILocation(line: 0, scope: !8856)
!8864 = !DILocation(line: 222, column: 15, scope: !8856)
!8865 = !DILocation(line: 224, column: 7, scope: !8856)
!8866 = !DILocation(line: 225, column: 14, scope: !8856)
!8867 = !DILocation(line: 225, column: 19, scope: !8856)
!8868 = !DILocation(line: 225, column: 11, scope: !8856)
!8869 = !DILocation(line: 225, column: 23, scope: !8856)
!8870 = !DILocation(line: 225, column: 28, scope: !8856)
!8871 = !DILocation(line: 225, column: 2, scope: !8856)
!8872 = !DILocation(line: 226, column: 17, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8856, file: !8646, line: 225, column: 38)
!8874 = !DILocation(line: 226, column: 8, scope: !8873)
!8875 = !DILocation(line: 226, column: 11, scope: !8873)
!8876 = distinct !{!8876, !8871, !8877}
!8877 = !DILocation(line: 227, column: 2, scope: !8856)
!8878 = !DILocation(line: 228, column: 8, scope: !8856)
!8879 = !DILocation(line: 230, column: 2, scope: !8856)
!8880 = distinct !DISubprogram(name: "memcmp", scope: !8646, file: !8646, line: 239, type: !8881, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8883)
!8881 = !DISubroutineType(types: !8882)
!8882 = !{!103, !13, !13, !132}
!8883 = !{!8884, !8885, !8886, !8887, !8888}
!8884 = !DILocalVariable(name: "m1", arg: 1, scope: !8880, file: !8646, line: 239, type: !13)
!8885 = !DILocalVariable(name: "m2", arg: 2, scope: !8880, file: !8646, line: 239, type: !13)
!8886 = !DILocalVariable(name: "n", arg: 3, scope: !8880, file: !8646, line: 239, type: !132)
!8887 = !DILocalVariable(name: "c1", scope: !8880, file: !8646, line: 241, type: !337)
!8888 = !DILocalVariable(name: "c2", scope: !8880, file: !8646, line: 242, type: !337)
!8889 = !DILocation(line: 0, scope: !8880)
!8890 = !DILocation(line: 244, column: 7, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8880, file: !8646, line: 244, column: 6)
!8892 = !DILocation(line: 244, column: 6, scope: !8880)
!8893 = !DILocation(line: 248, column: 10, scope: !8880)
!8894 = !DILocation(line: 248, column: 14, scope: !8880)
!8895 = !DILocation(line: 248, column: 19, scope: !8880)
!8896 = !DILocation(line: 248, column: 2, scope: !8880)
!8897 = !DILocation(line: 248, column: 23, scope: !8880)
!8898 = !DILocation(line: 248, column: 30, scope: !8880)
!8899 = !DILocation(line: 248, column: 27, scope: !8880)
!8900 = !DILocation(line: 249, column: 5, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8880, file: !8646, line: 248, column: 36)
!8902 = !DILocation(line: 250, column: 5, scope: !8901)
!8903 = distinct !{!8903, !8896, !8904}
!8904 = !DILocation(line: 251, column: 2, scope: !8880)
!8905 = !DILocation(line: 253, column: 9, scope: !8880)
!8906 = !DILocation(line: 253, column: 15, scope: !8880)
!8907 = !DILocation(line: 253, column: 13, scope: !8880)
!8908 = !DILocation(line: 253, column: 2, scope: !8880)
!8909 = !DILocation(line: 254, column: 1, scope: !8880)
!8910 = distinct !DISubprogram(name: "memmove", scope: !8646, file: !8646, line: 263, type: !8911, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8913)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{!102, !102, !13, !132}
!8913 = !{!8914, !8915, !8916, !8917, !8918}
!8914 = !DILocalVariable(name: "d", arg: 1, scope: !8910, file: !8646, line: 263, type: !102)
!8915 = !DILocalVariable(name: "s", arg: 2, scope: !8910, file: !8646, line: 263, type: !13)
!8916 = !DILocalVariable(name: "n", arg: 3, scope: !8910, file: !8646, line: 263, type: !132)
!8917 = !DILocalVariable(name: "dest", scope: !8910, file: !8646, line: 265, type: !277)
!8918 = !DILocalVariable(name: "src", scope: !8910, file: !8646, line: 266, type: !337)
!8919 = !DILocation(line: 0, scope: !8910)
!8920 = !DILocation(line: 268, column: 21, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8910, file: !8646, line: 268, column: 6)
!8922 = !DILocation(line: 268, column: 28, scope: !8921)
!8923 = !DILocation(line: 268, column: 6, scope: !8910)
!8924 = !DILocation(line: 280, column: 12, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8921, file: !8646, line: 278, column: 9)
!8926 = !DILocation(line: 280, column: 3, scope: !8925)
!8927 = !DILocation(line: 275, column: 5, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !8646, line: 274, column: 17)
!8929 = distinct !DILexicalBlock(scope: !8921, file: !8646, line: 268, column: 33)
!8930 = !DILocation(line: 276, column: 14, scope: !8928)
!8931 = !DILocation(line: 276, column: 4, scope: !8928)
!8932 = !DILocation(line: 276, column: 12, scope: !8928)
!8933 = !DILocation(line: 274, column: 12, scope: !8929)
!8934 = !DILocation(line: 274, column: 3, scope: !8929)
!8935 = distinct !{!8935, !8934, !8936}
!8936 = !DILocation(line: 277, column: 3, scope: !8929)
!8937 = !DILocation(line: 281, column: 12, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8925, file: !8646, line: 280, column: 17)
!8939 = !DILocation(line: 281, column: 10, scope: !8938)
!8940 = !DILocation(line: 282, column: 8, scope: !8938)
!8941 = !DILocation(line: 283, column: 7, scope: !8938)
!8942 = !DILocation(line: 284, column: 5, scope: !8938)
!8943 = distinct !{!8943, !8926, !8944}
!8944 = !DILocation(line: 285, column: 3, scope: !8925)
!8945 = !DILocation(line: 288, column: 2, scope: !8910)
!8946 = distinct !DISubprogram(name: "memcpy", scope: !8646, file: !8646, line: 298, type: !8947, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8951)
!8947 = !DISubroutineType(types: !8948)
!8948 = !{!102, !8949, !8950, !132}
!8949 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8950 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8951 = !{!8952, !8953, !8954, !8955, !8956}
!8952 = !DILocalVariable(name: "d", arg: 1, scope: !8946, file: !8646, line: 298, type: !8949)
!8953 = !DILocalVariable(name: "s", arg: 2, scope: !8946, file: !8646, line: 298, type: !8950)
!8954 = !DILocalVariable(name: "n", arg: 3, scope: !8946, file: !8646, line: 298, type: !132)
!8955 = !DILocalVariable(name: "d_byte", scope: !8946, file: !8646, line: 302, type: !1089)
!8956 = !DILocalVariable(name: "s_byte", scope: !8946, file: !8646, line: 303, type: !3018)
!8957 = !DILocation(line: 0, scope: !8946)
!8958 = !DILocation(line: 337, column: 11, scope: !8946)
!8959 = !DILocation(line: 337, column: 2, scope: !8946)
!8960 = !DILocation(line: 338, column: 25, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8946, file: !8646, line: 337, column: 16)
!8962 = !DILocation(line: 338, column: 17, scope: !8961)
!8963 = !DILocation(line: 338, column: 11, scope: !8961)
!8964 = !DILocation(line: 338, column: 15, scope: !8961)
!8965 = !DILocation(line: 339, column: 4, scope: !8961)
!8966 = distinct !{!8966, !8959, !8967}
!8967 = !DILocation(line: 340, column: 2, scope: !8946)
!8968 = !DILocation(line: 342, column: 2, scope: !8946)
!8969 = distinct !DISubprogram(name: "memset", scope: !8646, file: !8646, line: 352, type: !8970, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{!102, !102, !103, !132}
!8972 = !{!8973, !8974, !8975, !8976, !8977}
!8973 = !DILocalVariable(name: "buf", arg: 1, scope: !8969, file: !8646, line: 352, type: !102)
!8974 = !DILocalVariable(name: "c", arg: 2, scope: !8969, file: !8646, line: 352, type: !103)
!8975 = !DILocalVariable(name: "n", arg: 3, scope: !8969, file: !8646, line: 352, type: !132)
!8976 = !DILocalVariable(name: "d_byte", scope: !8969, file: !8646, line: 356, type: !1089)
!8977 = !DILocalVariable(name: "c_byte", scope: !8969, file: !8646, line: 357, type: !186)
!8978 = !DILocation(line: 0, scope: !8969)
!8979 = !DILocation(line: 357, column: 25, scope: !8969)
!8980 = !DILocation(line: 389, column: 11, scope: !8969)
!8981 = !DILocation(line: 389, column: 2, scope: !8969)
!8982 = !DILocation(line: 390, column: 11, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8969, file: !8646, line: 389, column: 16)
!8984 = !DILocation(line: 390, column: 15, scope: !8983)
!8985 = !DILocation(line: 391, column: 4, scope: !8983)
!8986 = distinct !{!8986, !8981, !8987}
!8987 = !DILocation(line: 392, column: 2, scope: !8969)
!8988 = !DILocation(line: 394, column: 2, scope: !8969)
!8989 = distinct !DISubprogram(name: "memchr", scope: !8646, file: !8646, line: 404, type: !8990, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !8992)
!8990 = !DISubroutineType(types: !8991)
!8991 = !{!102, !13, !103, !132}
!8992 = !{!8993, !8994, !8995, !8996}
!8993 = !DILocalVariable(name: "s", arg: 1, scope: !8989, file: !8646, line: 404, type: !13)
!8994 = !DILocalVariable(name: "c", arg: 2, scope: !8989, file: !8646, line: 404, type: !103)
!8995 = !DILocalVariable(name: "n", arg: 3, scope: !8989, file: !8646, line: 404, type: !132)
!8996 = !DILocalVariable(name: "p", scope: !8997, file: !8646, line: 407, type: !3018)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !8646, line: 406, column: 14)
!8998 = distinct !DILexicalBlock(scope: !8989, file: !8646, line: 406, column: 6)
!8999 = !DILocation(line: 0, scope: !8989)
!9000 = !DILocation(line: 406, column: 8, scope: !8998)
!9001 = !DILocation(line: 406, column: 6, scope: !8989)
!9002 = !DILocation(line: 409, column: 3, scope: !8997)
!9003 = !DILocation(line: 0, scope: !8997)
!9004 = !DILocation(line: 410, column: 8, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !8646, line: 410, column: 8)
!9006 = distinct !DILexicalBlock(scope: !8997, file: !8646, line: 409, column: 6)
!9007 = !DILocation(line: 410, column: 13, scope: !9005)
!9008 = !DILocation(line: 410, column: 8, scope: !9006)
!9009 = distinct !{!9009, !9002, !9010}
!9010 = !DILocation(line: 414, column: 20, scope: !8997)
!9011 = !DILocation(line: 417, column: 2, scope: !8989)
!9012 = !DILocation(line: 418, column: 1, scope: !8989)
!9013 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !662, file: !662, line: 23, type: !4505, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9014)
!9014 = !{!9015}
!9015 = !DILocalVariable(name: "hook", arg: 1, scope: !9013, file: !662, line: 23, type: !395)
!9016 = !DILocation(line: 0, scope: !9013)
!9017 = !DILocation(line: 25, column: 15, scope: !9013)
!9018 = !DILocation(line: 26, column: 1, scope: !9013)
!9019 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !662, file: !662, line: 14, type: !396, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9020)
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "c", arg: 1, scope: !9019, file: !662, line: 14, type: !103)
!9022 = !DILocation(line: 0, scope: !9019)
!9023 = !DILocation(line: 18, column: 2, scope: !9019)
!9024 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !662, file: !662, line: 28, type: !9025, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9027)
!9025 = !DISubroutineType(types: !9026)
!9026 = !{!103, !103, !658}
!9027 = !{!9028, !9029}
!9028 = !DILocalVariable(name: "c", arg: 1, scope: !9024, file: !662, line: 28, type: !103)
!9029 = !DILocalVariable(name: "stream", arg: 2, scope: !9024, file: !662, line: 28, type: !658)
!9030 = !DILocation(line: 0, scope: !9024)
!9031 = !DILocation(line: 30, column: 27, scope: !9024)
!9032 = !DILocation(line: 30, column: 50, scope: !9024)
!9033 = !DILocation(line: 30, column: 9, scope: !9024)
!9034 = !DILocation(line: 30, column: 2, scope: !9024)
!9035 = distinct !DISubprogram(name: "fputc", scope: !662, file: !662, line: 41, type: !9025, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9036)
!9036 = !{!9037, !9038}
!9037 = !DILocalVariable(name: "c", arg: 1, scope: !9035, file: !662, line: 41, type: !103)
!9038 = !DILocalVariable(name: "stream", arg: 2, scope: !9035, file: !662, line: 41, type: !658)
!9039 = !DILocation(line: 0, scope: !9035)
!9040 = !DILocation(line: 43, column: 9, scope: !9035)
!9041 = !DILocation(line: 43, column: 2, scope: !9035)
!9042 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9043, file: !9043, line: 72, type: !9025, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9044)
!9043 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!9044 = !{!9045, !9046}
!9045 = !DILocalVariable(name: "c", arg: 1, scope: !9042, file: !9043, line: 72, type: !103)
!9046 = !DILocalVariable(name: "stream", arg: 2, scope: !9042, file: !9043, line: 72, type: !658)
!9047 = !DILocation(line: 0, scope: !9042)
!9048 = !DILocation(line: 81, column: 2, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9042, file: !9043, line: 81, column: 2)
!9050 = !{i64 2154804906}
!9051 = !DILocation(line: 82, column: 9, scope: !9042)
!9052 = !DILocation(line: 82, column: 2, scope: !9042)
!9053 = distinct !DISubprogram(name: "fputs", scope: !662, file: !662, line: 46, type: !9054, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9057)
!9054 = !DISubroutineType(types: !9055)
!9055 = !{!103, !8650, !9056}
!9056 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !658)
!9057 = !{!9058, !9059, !9060, !9061}
!9058 = !DILocalVariable(name: "s", arg: 1, scope: !9053, file: !662, line: 46, type: !8650)
!9059 = !DILocalVariable(name: "stream", arg: 2, scope: !9053, file: !662, line: 46, type: !9056)
!9060 = !DILocalVariable(name: "len", scope: !9053, file: !662, line: 48, type: !103)
!9061 = !DILocalVariable(name: "ret", scope: !9053, file: !662, line: 49, type: !103)
!9062 = !DILocation(line: 0, scope: !9053)
!9063 = !DILocation(line: 48, column: 12, scope: !9053)
!9064 = !DILocation(line: 51, column: 8, scope: !9053)
!9065 = !DILocation(line: 53, column: 13, scope: !9053)
!9066 = !DILocation(line: 53, column: 9, scope: !9053)
!9067 = !DILocation(line: 53, column: 2, scope: !9053)
!9068 = distinct !DISubprogram(name: "fwrite", scope: !662, file: !662, line: 99, type: !9069, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9071)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{!132, !8950, !132, !132, !9056}
!9071 = !{!9072, !9073, !9074, !9075}
!9072 = !DILocalVariable(name: "ptr", arg: 1, scope: !9068, file: !662, line: 99, type: !8950)
!9073 = !DILocalVariable(name: "size", arg: 2, scope: !9068, file: !662, line: 99, type: !132)
!9074 = !DILocalVariable(name: "nitems", arg: 3, scope: !9068, file: !662, line: 99, type: !132)
!9075 = !DILocalVariable(name: "stream", arg: 4, scope: !9068, file: !662, line: 100, type: !9056)
!9076 = !DILocation(line: 0, scope: !9068)
!9077 = !DILocation(line: 102, column: 9, scope: !9068)
!9078 = !DILocation(line: 102, column: 2, scope: !9068)
!9079 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9043, file: !9043, line: 96, type: !9069, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9080)
!9080 = !{!9081, !9082, !9083, !9084}
!9081 = !DILocalVariable(name: "ptr", arg: 1, scope: !9079, file: !9043, line: 96, type: !8950)
!9082 = !DILocalVariable(name: "size", arg: 2, scope: !9079, file: !9043, line: 96, type: !132)
!9083 = !DILocalVariable(name: "nitems", arg: 3, scope: !9079, file: !9043, line: 96, type: !132)
!9084 = !DILocalVariable(name: "stream", arg: 4, scope: !9079, file: !9043, line: 96, type: !9056)
!9085 = !DILocation(line: 0, scope: !9079)
!9086 = !DILocation(line: 107, column: 2, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9079, file: !9043, line: 107, column: 2)
!9088 = !{i64 2154805010}
!9089 = !DILocation(line: 108, column: 9, scope: !9079)
!9090 = !DILocation(line: 108, column: 2, scope: !9079)
!9091 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !662, file: !662, line: 56, type: !9069, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9092)
!9092 = !{!9093, !9094, !9095, !9096, !9097, !9098, !9099, !9100}
!9093 = !DILocalVariable(name: "ptr", arg: 1, scope: !9091, file: !662, line: 56, type: !8950)
!9094 = !DILocalVariable(name: "size", arg: 2, scope: !9091, file: !662, line: 56, type: !132)
!9095 = !DILocalVariable(name: "nitems", arg: 3, scope: !9091, file: !662, line: 57, type: !132)
!9096 = !DILocalVariable(name: "stream", arg: 4, scope: !9091, file: !662, line: 57, type: !9056)
!9097 = !DILocalVariable(name: "i", scope: !9091, file: !662, line: 59, type: !132)
!9098 = !DILocalVariable(name: "j", scope: !9091, file: !662, line: 60, type: !132)
!9099 = !DILocalVariable(name: "p", scope: !9091, file: !662, line: 61, type: !3018)
!9100 = !DILabel(scope: !9091, name: "done", file: !662, line: 82)
!9101 = !DILocation(line: 0, scope: !9091)
!9102 = !DILocation(line: 63, column: 14, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9091, file: !662, line: 63, column: 6)
!9104 = !DILocation(line: 63, column: 24, scope: !9103)
!9105 = !DILocation(line: 72, column: 3, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9091, file: !662, line: 70, column: 5)
!9107 = !DILocation(line: 0, scope: !9106)
!9108 = !DILocation(line: 73, column: 8, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !662, line: 73, column: 8)
!9110 = distinct !DILexicalBlock(scope: !9106, file: !662, line: 72, column: 6)
!9111 = !DILocation(line: 73, column: 29, scope: !9109)
!9112 = !DILocation(line: 73, column: 27, scope: !9109)
!9113 = !DILocation(line: 73, column: 21, scope: !9109)
!9114 = !DILocation(line: 73, column: 33, scope: !9109)
!9115 = !DILocation(line: 73, column: 8, scope: !9110)
!9116 = !DILocation(line: 76, column: 5, scope: !9110)
!9117 = !DILocation(line: 77, column: 14, scope: !9106)
!9118 = !DILocation(line: 77, column: 3, scope: !9110)
!9119 = distinct !{!9119, !9105, !9120}
!9120 = !DILocation(line: 77, column: 17, scope: !9106)
!9121 = !DILocation(line: 79, column: 4, scope: !9106)
!9122 = !DILocation(line: 80, column: 13, scope: !9091)
!9123 = !DILocation(line: 80, column: 2, scope: !9106)
!9124 = distinct !{!9124, !9125, !9126}
!9125 = !DILocation(line: 70, column: 2, scope: !9091)
!9126 = !DILocation(line: 80, column: 16, scope: !9091)
!9127 = !DILocation(line: 82, column: 1, scope: !9091)
!9128 = !DILocation(line: 83, column: 17, scope: !9091)
!9129 = !DILocation(line: 83, column: 2, scope: !9091)
!9130 = !DILocation(line: 84, column: 1, scope: !9091)
!9131 = distinct !DISubprogram(name: "puts", scope: !662, file: !662, line: 106, type: !9132, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9134)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{!103, !337}
!9134 = !{!9135}
!9135 = !DILocalVariable(name: "s", arg: 1, scope: !9131, file: !662, line: 106, type: !337)
!9136 = !DILocation(line: 0, scope: !9131)
!9137 = !DILocation(line: 108, column: 6, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9131, file: !662, line: 108, column: 6)
!9139 = !DILocation(line: 108, column: 23, scope: !9138)
!9140 = !DILocation(line: 108, column: 6, scope: !9131)
!9141 = !DILocation(line: 112, column: 9, scope: !9131)
!9142 = !DILocation(line: 112, column: 29, scope: !9131)
!9143 = !DILocation(line: 112, column: 2, scope: !9131)
!9144 = !DILocation(line: 113, column: 1, scope: !9131)
!9145 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !694, file: !694, line: 12, type: !9146, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9152)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{!9148, !109}
!9148 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9149)
!9149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9150)
!9150 = !{!9151}
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9149, file: !105, line: 66, baseType: !104, size: 64)
!9152 = !{!9153, !9154}
!9153 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9145, file: !694, line: 12, type: !109)
!9154 = !DILocalVariable(name: "now_ticks", scope: !9145, file: !694, line: 14, type: !106)
!9155 = !DILocation(line: 0, scope: !9145)
!9156 = !DILocation(line: 14, column: 22, scope: !9145)
!9157 = !DILocation(line: 16, column: 9, scope: !9145)
!9158 = !DILocation(line: 17, column: 1, scope: !9145)
!9159 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !694, file: !694, line: 103, type: !9160, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9306)
!9160 = !DISubroutineType(types: !9161)
!9161 = !{!103, !9162, !13, !9148}
!9162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9163, size: 32)
!9163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9164)
!9164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !9165)
!9165 = !{!9166, !9167, !9168, !9169, !9170, !9278}
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9164, file: !117, line: 35, baseType: !120, size: 16)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9164, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9164, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9164, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9164, file: !117, line: 56, baseType: !9171, size: 32, offset: 128)
!9171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9172, size: 32)
!9172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !9173)
!9173 = !{!9174, !9193, !9276, !9277}
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9172, file: !137, line: 2722, baseType: !9175, size: 64)
!9175 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !9176)
!9176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !9177)
!9177 = !{!9178}
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9176, file: !141, line: 232, baseType: !9179, size: 64)
!9179 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !9180)
!9180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !9181)
!9181 = !{!9182, !9188}
!9182 = !DIDerivedType(tag: DW_TAG_member, scope: !9180, file: !146, line: 38, baseType: !9183, size: 32)
!9183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9180, file: !146, line: 38, size: 32, elements: !9184)
!9184 = !{!9185, !9187}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9183, file: !146, line: 39, baseType: !9186, size: 32)
!9186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9180, size: 32)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9183, file: !146, line: 40, baseType: !9186, size: 32)
!9188 = !DIDerivedType(tag: DW_TAG_member, scope: !9180, file: !146, line: 42, baseType: !9189, size: 32, offset: 32)
!9189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9180, file: !146, line: 42, size: 32, elements: !9190)
!9190 = !{!9191, !9192}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9189, file: !146, line: 43, baseType: !9186, size: 32)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9189, file: !146, line: 44, baseType: !9186, size: 32)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9172, file: !137, line: 2724, baseType: !9194, size: 32, offset: 64)
!9194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9195, size: 32)
!9195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !9196)
!9196 = !{!9197, !9237, !9249, !9250, !9251, !9252, !9258, !9271}
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9195, file: !163, line: 247, baseType: !9198, size: 384)
!9198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !9199)
!9199 = !{!9200, !9211, !9213, !9214, !9215, !9224, !9225, !9226}
!9200 = !DIDerivedType(tag: DW_TAG_member, scope: !9198, file: !163, line: 60, baseType: !9201, size: 64)
!9201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9198, file: !163, line: 60, size: 64, elements: !9202)
!9202 = !{!9203, !9205}
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9201, file: !163, line: 61, baseType: !9204, size: 64)
!9204 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !9180)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9201, file: !163, line: 62, baseType: !9206, size: 64)
!9206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !9207)
!9207 = !{!9208}
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9206, file: !175, line: 50, baseType: !9209, size: 64)
!9209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9210, size: 64, elements: !180)
!9210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9206, size: 32)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9198, file: !163, line: 68, baseType: !9212, size: 32, offset: 64)
!9212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9175, size: 32)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9198, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9198, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!9215 = !DIDerivedType(tag: DW_TAG_member, scope: !9198, file: !163, line: 90, baseType: !9216, size: 16, offset: 112)
!9216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9198, file: !163, line: 90, size: 16, elements: !9217)
!9217 = !{!9218, !9223}
!9218 = !DIDerivedType(tag: DW_TAG_member, scope: !9216, file: !163, line: 91, baseType: !9219, size: 16)
!9219 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9216, file: !163, line: 91, size: 16, elements: !9220)
!9220 = !{!9221, !9222}
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9219, file: !163, line: 96, baseType: !195, size: 8)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9219, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9216, file: !163, line: 100, baseType: !121, size: 16)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9198, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9198, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9198, file: !163, line: 131, baseType: !9227, size: 192, offset: 192)
!9227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !9228)
!9228 = !{!9229, !9230, !9236}
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9227, file: !141, line: 245, baseType: !9204, size: 64)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9227, file: !141, line: 246, baseType: !9231, size: 32, offset: 64)
!9231 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !9232)
!9232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9233, size: 32)
!9233 = !DISubroutineType(types: !9234)
!9234 = !{null, !9235}
!9235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9227, size: 32)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9227, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9195, file: !163, line: 250, baseType: !9238, size: 288, offset: 384)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !9239)
!9239 = !{!9240, !9241, !9242, !9243, !9244, !9245, !9246, !9247, !9248}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9238, file: !214, line: 26, baseType: !108, size: 32)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9238, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9238, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9238, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9238, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9238, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9238, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9238, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9238, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9195, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9195, file: !163, line: 256, baseType: !9175, size: 64, offset: 704)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9195, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9195, file: !163, line: 300, baseType: !9253, size: 96, offset: 800)
!9253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !9254)
!9254 = !{!9255, !9256, !9257}
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9253, file: !163, line: 153, baseType: !22, size: 32)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9253, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9253, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9195, file: !163, line: 325, baseType: !9259, size: 32, offset: 896)
!9259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9260, size: 32)
!9260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !9261)
!9261 = !{!9262, !9268, !9269}
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9260, file: !137, line: 5074, baseType: !9263, size: 96)
!9263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !9264)
!9264 = !{!9265, !9266, !9267}
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9263, file: !240, line: 57, baseType: !243, size: 32)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9263, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9263, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9260, file: !137, line: 5075, baseType: !9175, size: 64, offset: 96)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9260, file: !137, line: 5076, baseType: !9270, offset: 160)
!9270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9195, file: !163, line: 343, baseType: !9272, size: 64, offset: 928)
!9272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !9273)
!9273 = !{!9274, !9275}
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9272, file: !214, line: 63, baseType: !108, size: 32)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9272, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9172, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9172, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9164, file: !117, line: 67, baseType: !9279, size: 32, offset: 160)
!9279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9280, size: 32)
!9280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9281)
!9281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9282, size: 32)
!9282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9283)
!9283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !9284)
!9284 = !{!9285, !9286, !9301}
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9283, file: !117, line: 91, baseType: !131, size: 8)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9283, file: !117, line: 93, baseType: !9287, size: 32, offset: 32)
!9287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9288)
!9288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9289, size: 32)
!9289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !9290)
!9290 = !{!9291, !9292, !9293, !9294, !9295, !9296, !9297, !9298, !9299, !9300}
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9289, file: !137, line: 4206, baseType: !9175, size: 64)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9289, file: !137, line: 4208, baseType: !9270, offset: 64)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9289, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9289, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9289, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9289, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9289, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9289, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9289, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9289, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9283, file: !117, line: 96, baseType: !9302, size: 32, offset: 64)
!9302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9303)
!9303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9304, size: 32)
!9304 = !DISubroutineType(types: !9305)
!9305 = !{null, !9162}
!9306 = !{!9307, !9308, !9309, !9310, !9311}
!9307 = !DILocalVariable(name: "chan", arg: 1, scope: !9159, file: !694, line: 103, type: !9162)
!9308 = !DILocalVariable(name: "msg", arg: 2, scope: !9159, file: !694, line: 103, type: !13)
!9309 = !DILocalVariable(name: "timeout", arg: 3, scope: !9159, file: !694, line: 103, type: !9148)
!9310 = !DILocalVariable(name: "err", scope: !9159, file: !694, line: 105, type: !103)
!9311 = !DILocalVariable(name: "end_ticks", scope: !9159, file: !694, line: 106, type: !109)
!9312 = !DILocation(line: 0, scope: !9159)
!9313 = !DILocation(line: 106, column: 23, scope: !9159)
!9314 = !DILocation(line: 112, column: 12, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9159, file: !694, line: 112, column: 6)
!9316 = !DILocation(line: 112, column: 22, scope: !9315)
!9317 = !DILocation(line: 112, column: 30, scope: !9315)
!9318 = !DILocation(line: 112, column: 61, scope: !9315)
!9319 = !DILocation(line: 112, column: 55, scope: !9315)
!9320 = !DILocation(line: 112, column: 34, scope: !9315)
!9321 = !DILocation(line: 112, column: 6, scope: !9159)
!9322 = !DILocation(line: 116, column: 27, scope: !9159)
!9323 = !DILocation(line: 116, column: 8, scope: !9159)
!9324 = !DILocation(line: 117, column: 6, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9159, file: !694, line: 117, column: 6)
!9326 = !DILocation(line: 117, column: 6, scope: !9159)
!9327 = !DILocation(line: 121, column: 15, scope: !9159)
!9328 = !DILocation(line: 121, column: 35, scope: !9159)
!9329 = !DILocation(line: 121, column: 29, scope: !9159)
!9330 = !DILocation(line: 121, column: 2, scope: !9159)
!9331 = !DILocation(line: 123, column: 8, scope: !9159)
!9332 = !DILocation(line: 125, column: 23, scope: !9159)
!9333 = !DILocation(line: 125, column: 2, scope: !9159)
!9334 = !DILocation(line: 127, column: 2, scope: !9159)
!9335 = !DILocation(line: 128, column: 1, scope: !9159)
!9336 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3611, file: !3611, line: 927, type: !9337, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9339)
!9337 = !DISubroutineType(types: !9338)
!9338 = !{!103, !9171, !9148}
!9339 = !{!9340, !9341}
!9340 = !DILocalVariable(name: "mutex", arg: 1, scope: !9336, file: !3611, line: 927, type: !9171)
!9341 = !DILocalVariable(name: "timeout", arg: 2, scope: !9336, file: !3611, line: 927, type: !9148)
!9342 = !DILocation(line: 0, scope: !9336)
!9343 = !DILocation(line: 936, column: 2, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9336, file: !3611, line: 936, column: 2)
!9345 = !{i64 2154746467}
!9346 = !DILocation(line: 937, column: 9, scope: !9336)
!9347 = !DILocation(line: 937, column: 2, scope: !9336)
!9348 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !694, file: !694, line: 66, type: !9349, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9351)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!103, !9162, !109}
!9351 = !{!9352, !9353, !9354, !9355, !9356, !9358}
!9352 = !DILocalVariable(name: "chan", arg: 1, scope: !9348, file: !694, line: 66, type: !9162)
!9353 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9348, file: !694, line: 66, type: !109)
!9354 = !DILocalVariable(name: "last_error", scope: !9348, file: !694, line: 68, type: !103)
!9355 = !DILocalVariable(name: "err", scope: !9348, file: !694, line: 68, type: !103)
!9356 = !DILocalVariable(name: "obs", scope: !9357, file: !694, line: 70, type: !9279)
!9357 = distinct !DILexicalBlock(scope: !9348, file: !694, line: 70, column: 2)
!9358 = !DILocalVariable(name: "obs", scope: !9359, file: !694, line: 81, type: !9279)
!9359 = distinct !DILexicalBlock(scope: !9348, file: !694, line: 81, column: 2)
!9360 = !DILocation(line: 0, scope: !9348)
!9361 = !DILocation(line: 70, column: 54, scope: !9357)
!9362 = !DILocation(line: 0, scope: !9357)
!9363 = !DILocation(line: 70, column: 65, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9357, file: !694, line: 70, column: 2)
!9365 = !DILocation(line: 70, column: 70, scope: !9364)
!9366 = !DILocation(line: 70, column: 2, scope: !9357)
!9367 = !DILocation(line: 81, column: 54, scope: !9359)
!9368 = !DILocation(line: 81, column: 65, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9359, file: !694, line: 81, column: 2)
!9370 = !DILocation(line: 0, scope: !9359)
!9371 = !DILocation(line: 81, column: 70, scope: !9369)
!9372 = !DILocation(line: 81, column: 2, scope: !9359)
!9373 = !DILocation(line: 71, column: 15, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9375, file: !694, line: 71, column: 7)
!9375 = distinct !DILexicalBlock(scope: !9364, file: !694, line: 70, column: 86)
!9376 = !DILocation(line: 71, column: 23, scope: !9374)
!9377 = !DILocation(line: 71, column: 35, scope: !9374)
!9378 = !DILocation(line: 71, column: 44, scope: !9374)
!9379 = !DILocation(line: 71, column: 7, scope: !9375)
!9380 = !DILocation(line: 72, column: 4, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9374, file: !694, line: 71, column: 54)
!9382 = !DILocation(line: 73, column: 3, scope: !9381)
!9383 = !DILocation(line: 70, column: 79, scope: !9364)
!9384 = distinct !{!9384, !9366, !9385}
!9385 = !DILocation(line: 74, column: 2, scope: !9357)
!9386 = !DILocation(line: 100, column: 2, scope: !9348)
!9387 = !DILocation(line: 82, column: 15, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !694, line: 82, column: 7)
!9389 = distinct !DILexicalBlock(scope: !9369, file: !694, line: 81, column: 86)
!9390 = !DILocation(line: 82, column: 23, scope: !9388)
!9391 = !DILocation(line: 82, column: 35, scope: !9388)
!9392 = !DILocation(line: 82, column: 41, scope: !9388)
!9393 = !DILocation(line: 82, column: 7, scope: !9389)
!9394 = !DILocation(line: 83, column: 43, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9388, file: !694, line: 82, column: 51)
!9396 = !DILocation(line: 83, column: 10, scope: !9395)
!9397 = !DILocation(line: 86, column: 8, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9395, file: !694, line: 86, column: 8)
!9399 = !DILocation(line: 86, column: 8, scope: !9395)
!9400 = !DILocation(line: 87, column: 5, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9402, file: !694, line: 87, column: 5)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !694, line: 87, column: 5)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !694, line: 87, column: 5)
!9404 = distinct !DILexicalBlock(scope: !9405, file: !694, line: 87, column: 5)
!9405 = distinct !DILexicalBlock(scope: !9398, file: !694, line: 86, column: 13)
!9406 = !DILocation(line: 90, column: 4, scope: !9405)
!9407 = !DILocation(line: 81, column: 79, scope: !9369)
!9408 = distinct !{!9408, !9372, !9409}
!9409 = !DILocation(line: 92, column: 2, scope: !9359)
!9410 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3611, file: !3611, line: 944, type: !9411, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9413)
!9411 = !DISubroutineType(types: !9412)
!9412 = !{!103, !9171}
!9413 = !{!9414}
!9414 = !DILocalVariable(name: "mutex", arg: 1, scope: !9410, file: !3611, line: 944, type: !9171)
!9415 = !DILocation(line: 0, scope: !9410)
!9416 = !DILocation(line: 952, column: 2, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9410, file: !3611, line: 952, column: 2)
!9418 = !{i64 2154746535}
!9419 = !DILocation(line: 953, column: 9, scope: !9410)
!9420 = !DILocation(line: 953, column: 2, scope: !9410)
!9421 = distinct !DISubprogram(name: "k_msgq_put", scope: !3611, file: !3611, line: 1129, type: !9422, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9424)
!9422 = !DISubroutineType(types: !9423)
!9423 = !{!103, !9288, !13, !9148}
!9424 = !{!9425, !9426, !9427}
!9425 = !DILocalVariable(name: "msgq", arg: 1, scope: !9421, file: !3611, line: 1129, type: !9288)
!9426 = !DILocalVariable(name: "data", arg: 2, scope: !9421, file: !3611, line: 1129, type: !13)
!9427 = !DILocalVariable(name: "timeout", arg: 3, scope: !9421, file: !3611, line: 1129, type: !9148)
!9428 = !DILocation(line: 0, scope: !9421)
!9429 = !DILocation(line: 1139, column: 2, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9421, file: !3611, line: 1139, column: 2)
!9431 = !{i64 2154747283}
!9432 = !DILocation(line: 1140, column: 9, scope: !9421)
!9433 = !DILocation(line: 1140, column: 2, scope: !9421)
!9434 = distinct !DISubprogram(name: "zbus_chan_read", scope: !694, file: !694, line: 130, type: !9435, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9437)
!9435 = !DISubroutineType(types: !9436)
!9436 = !{!103, !9162, !102, !9148}
!9437 = !{!9438, !9439, !9440, !9441}
!9438 = !DILocalVariable(name: "chan", arg: 1, scope: !9434, file: !694, line: 130, type: !9162)
!9439 = !DILocalVariable(name: "msg", arg: 2, scope: !9434, file: !694, line: 130, type: !102)
!9440 = !DILocalVariable(name: "timeout", arg: 3, scope: !9434, file: !694, line: 130, type: !9148)
!9441 = !DILocalVariable(name: "err", scope: !9434, file: !694, line: 132, type: !103)
!9442 = !DILocation(line: 0, scope: !9434)
!9443 = !DILocation(line: 138, column: 27, scope: !9434)
!9444 = !DILocation(line: 138, column: 8, scope: !9434)
!9445 = !DILocation(line: 139, column: 6, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9434, file: !694, line: 139, column: 6)
!9447 = !DILocation(line: 139, column: 6, scope: !9434)
!9448 = !DILocation(line: 143, column: 20, scope: !9434)
!9449 = !DILocation(line: 143, column: 35, scope: !9434)
!9450 = !DILocation(line: 143, column: 29, scope: !9434)
!9451 = !DILocation(line: 143, column: 2, scope: !9434)
!9452 = !DILocation(line: 145, column: 30, scope: !9434)
!9453 = !DILocation(line: 145, column: 9, scope: !9434)
!9454 = !DILocation(line: 145, column: 2, scope: !9434)
!9455 = !DILocation(line: 146, column: 1, scope: !9434)
!9456 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !694, file: !694, line: 148, type: !9457, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9459)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{!103, !9162, !9148}
!9459 = !{!9460, !9461, !9462, !9463}
!9460 = !DILocalVariable(name: "chan", arg: 1, scope: !9456, file: !694, line: 148, type: !9162)
!9461 = !DILocalVariable(name: "timeout", arg: 2, scope: !9456, file: !694, line: 148, type: !9148)
!9462 = !DILocalVariable(name: "err", scope: !9456, file: !694, line: 150, type: !103)
!9463 = !DILocalVariable(name: "end_ticks", scope: !9456, file: !694, line: 151, type: !109)
!9464 = !DILocation(line: 0, scope: !9456)
!9465 = !DILocation(line: 151, column: 23, scope: !9456)
!9466 = !DILocation(line: 156, column: 27, scope: !9456)
!9467 = !DILocation(line: 156, column: 8, scope: !9456)
!9468 = !DILocation(line: 157, column: 6, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9456, file: !694, line: 157, column: 6)
!9470 = !DILocation(line: 157, column: 6, scope: !9456)
!9471 = !DILocation(line: 161, column: 8, scope: !9456)
!9472 = !DILocation(line: 163, column: 23, scope: !9456)
!9473 = !DILocation(line: 163, column: 2, scope: !9456)
!9474 = !DILocation(line: 165, column: 2, scope: !9456)
!9475 = !DILocation(line: 166, column: 1, scope: !9456)
!9476 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !694, file: !694, line: 168, type: !9457, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9477)
!9477 = !{!9478, !9479, !9480}
!9478 = !DILocalVariable(name: "chan", arg: 1, scope: !9476, file: !694, line: 168, type: !9162)
!9479 = !DILocalVariable(name: "timeout", arg: 2, scope: !9476, file: !694, line: 168, type: !9148)
!9480 = !DILocalVariable(name: "err", scope: !9476, file: !694, line: 173, type: !103)
!9481 = !DILocation(line: 0, scope: !9476)
!9482 = !DILocation(line: 173, column: 31, scope: !9476)
!9483 = !DILocation(line: 173, column: 12, scope: !9476)
!9484 = !DILocation(line: 180, column: 1, scope: !9476)
!9485 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !694, file: !694, line: 182, type: !9486, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9488)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!103, !9162}
!9488 = !{!9489, !9490}
!9489 = !DILocalVariable(name: "chan", arg: 1, scope: !9485, file: !694, line: 182, type: !9162)
!9490 = !DILocalVariable(name: "err", scope: !9485, file: !694, line: 187, type: !103)
!9491 = !DILocation(line: 0, scope: !9485)
!9492 = !DILocation(line: 187, column: 33, scope: !9485)
!9493 = !DILocation(line: 187, column: 12, scope: !9485)
!9494 = !DILocation(line: 189, column: 2, scope: !9485)
!9495 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !694, file: !694, line: 192, type: !9496, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9499)
!9496 = !DISubroutineType(types: !9497)
!9497 = !{!103, !9281, !9498, !9148}
!9498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9162, size: 32)
!9499 = !{!9500, !9501, !9502}
!9500 = !DILocalVariable(name: "sub", arg: 1, scope: !9495, file: !694, line: 192, type: !9281)
!9501 = !DILocalVariable(name: "chan", arg: 2, scope: !9495, file: !694, line: 192, type: !9498)
!9502 = !DILocalVariable(name: "timeout", arg: 3, scope: !9495, file: !694, line: 193, type: !9148)
!9503 = !DILocation(line: 0, scope: !9495)
!9504 = !DILocation(line: 199, column: 11, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9495, file: !694, line: 199, column: 6)
!9506 = !DILocation(line: 199, column: 17, scope: !9505)
!9507 = !DILocation(line: 199, column: 6, scope: !9495)
!9508 = !DILocation(line: 203, column: 32, scope: !9495)
!9509 = !DILocation(line: 203, column: 9, scope: !9495)
!9510 = !DILocation(line: 203, column: 2, scope: !9495)
!9511 = !DILocation(line: 204, column: 1, scope: !9495)
!9512 = distinct !DISubprogram(name: "k_msgq_get", scope: !3611, file: !3611, line: 1147, type: !9513, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!103, !9288, !102, !9148}
!9515 = !{!9516, !9517, !9518}
!9516 = !DILocalVariable(name: "msgq", arg: 1, scope: !9512, file: !3611, line: 1147, type: !9288)
!9517 = !DILocalVariable(name: "data", arg: 2, scope: !9512, file: !3611, line: 1147, type: !102)
!9518 = !DILocalVariable(name: "timeout", arg: 3, scope: !9512, file: !3611, line: 1147, type: !9148)
!9519 = !DILocation(line: 0, scope: !9512)
!9520 = !DILocation(line: 1157, column: 2, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9512, file: !3611, line: 1157, column: 2)
!9522 = !{i64 2154747351}
!9523 = !DILocation(line: 1158, column: 9, scope: !9512)
!9524 = !DILocation(line: 1158, column: 2, scope: !9512)
!9525 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !806, file: !806, line: 368, type: !859, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9526)
!9526 = !{!9527}
!9527 = !DILocalVariable(name: "dev", arg: 1, scope: !9525, file: !806, line: 368, type: !835)
!9528 = !DILocation(line: 0, scope: !9525)
!9529 = !DILocation(line: 370, column: 2, scope: !9525)
!9530 = !DILocation(line: 371, column: 1, scope: !9525)
!9531 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !806, file: !806, line: 243, type: !9532, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9534)
!9532 = !DISubroutineType(types: !9533)
!9533 = !{null, !103, !103, !835}
!9534 = !{!9535, !9536, !9537, !9538, !9540}
!9535 = !DILocalVariable(name: "min", arg: 1, scope: !9531, file: !806, line: 243, type: !103)
!9536 = !DILocalVariable(name: "max", arg: 2, scope: !9531, file: !806, line: 243, type: !103)
!9537 = !DILocalVariable(name: "dev", arg: 3, scope: !9531, file: !806, line: 243, type: !835)
!9538 = !DILocalVariable(name: "data", scope: !9531, file: !806, line: 245, type: !9539)
!9539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!9540 = !DILocalVariable(name: "line", scope: !9531, file: !806, line: 246, type: !103)
!9541 = !DILocation(line: 0, scope: !9531)
!9542 = !DILocation(line: 245, column: 38, scope: !9531)
!9543 = !DILocation(line: 249, column: 24, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !806, line: 249, column: 2)
!9545 = distinct !DILexicalBlock(scope: !9531, file: !806, line: 249, column: 2)
!9546 = !DILocation(line: 249, column: 2, scope: !9545)
!9547 = !DILocation(line: 251, column: 7, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !806, line: 251, column: 7)
!9549 = distinct !DILexicalBlock(scope: !9544, file: !806, line: 249, column: 39)
!9550 = !DILocation(line: 251, column: 7, scope: !9549)
!9551 = !DILocation(line: 253, column: 4, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9548, file: !806, line: 251, column: 36)
!9553 = !DILocation(line: 256, column: 24, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9552, file: !806, line: 256, column: 8)
!9555 = !DILocation(line: 256, column: 9, scope: !9554)
!9556 = !DILocation(line: 256, column: 8, scope: !9552)
!9557 = !DILocation(line: 260, column: 43, scope: !9552)
!9558 = !DILocation(line: 260, column: 4, scope: !9552)
!9559 = !DILocation(line: 261, column: 3, scope: !9552)
!9560 = !DILocation(line: 249, column: 35, scope: !9544)
!9561 = distinct !{!9561, !9546, !9562}
!9562 = !DILocation(line: 262, column: 2, scope: !9545)
!9563 = !DILocation(line: 263, column: 1, scope: !9531)
!9564 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !806, file: !806, line: 158, type: !396, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9565)
!9565 = !{!9566}
!9566 = !DILocalVariable(name: "line", arg: 1, scope: !9564, file: !806, line: 158, type: !103)
!9567 = !DILocation(line: 0, scope: !9564)
!9568 = !DILocation(line: 170, column: 38, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9570, file: !806, line: 160, column: 17)
!9570 = distinct !DILexicalBlock(scope: !9564, file: !806, line: 160, column: 6)
!9571 = !DILocation(line: 170, column: 10, scope: !9569)
!9572 = !DILocation(line: 176, column: 1, scope: !9564)
!9573 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !806, file: !806, line: 183, type: !9574, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9576)
!9574 = !DISubroutineType(types: !9575)
!9575 = !{null, !103}
!9576 = !{!9577}
!9577 = !DILocalVariable(name: "line", arg: 1, scope: !9573, file: !806, line: 183, type: !103)
!9578 = !DILocation(line: 0, scope: !9573)
!9579 = !DILocation(line: 195, column: 28, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9581, file: !806, line: 185, column: 17)
!9581 = distinct !DILexicalBlock(scope: !9573, file: !806, line: 185, column: 6)
!9582 = !DILocation(line: 195, column: 3, scope: !9580)
!9583 = !DILocation(line: 200, column: 1, scope: !9573)
!9584 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9585, file: !9585, line: 910, type: !7404, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9586)
!9585 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9586 = !{!9587}
!9587 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9584, file: !9585, line: 910, type: !108)
!9588 = !DILocation(line: 0, scope: !9584)
!9589 = !DILocation(line: 912, column: 3, scope: !9584)
!9590 = !DILocation(line: 913, column: 1, scope: !9584)
!9591 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9585, file: !9585, line: 834, type: !8558, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9592)
!9592 = !{!9593}
!9593 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9591, file: !9585, line: 834, type: !108)
!9594 = !DILocation(line: 0, scope: !9591)
!9595 = !DILocation(line: 836, column: 11, scope: !9591)
!9596 = !DILocation(line: 836, column: 40, scope: !9591)
!9597 = !DILocation(line: 836, column: 3, scope: !9591)
!9598 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !806, file: !806, line: 304, type: !859, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9599)
!9599 = !{!9600}
!9600 = !DILocalVariable(name: "dev", arg: 1, scope: !9598, file: !806, line: 304, type: !835)
!9601 = !DILocation(line: 0, scope: !9598)
!9602 = !DILocation(line: 306, column: 2, scope: !9598)
!9603 = !DILocation(line: 307, column: 1, scope: !9598)
!9604 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !806, file: !806, line: 299, type: !859, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9605)
!9605 = !{!9606}
!9606 = !DILocalVariable(name: "dev", arg: 1, scope: !9604, file: !806, line: 299, type: !835)
!9607 = !DILocation(line: 0, scope: !9604)
!9608 = !DILocation(line: 301, column: 2, scope: !9604)
!9609 = !DILocation(line: 302, column: 1, scope: !9604)
!9610 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !806, file: !806, line: 294, type: !859, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9611)
!9611 = !{!9612}
!9612 = !DILocalVariable(name: "dev", arg: 1, scope: !9610, file: !806, line: 294, type: !835)
!9613 = !DILocation(line: 0, scope: !9610)
!9614 = !DILocation(line: 296, column: 2, scope: !9610)
!9615 = !DILocation(line: 297, column: 1, scope: !9610)
!9616 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !806, file: !806, line: 397, type: !859, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9617)
!9617 = !{!9618}
!9618 = !DILocalVariable(name: "dev", arg: 1, scope: !9616, file: !806, line: 397, type: !835)
!9619 = !DILocation(line: 0, scope: !9616)
!9620 = !DILocation(line: 399, column: 2, scope: !9616)
!9621 = !DILocation(line: 400, column: 1, scope: !9616)
!9622 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !806, file: !806, line: 392, type: !859, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9623)
!9623 = !{!9624}
!9624 = !DILocalVariable(name: "dev", arg: 1, scope: !9622, file: !806, line: 392, type: !835)
!9625 = !DILocation(line: 0, scope: !9622)
!9626 = !DILocation(line: 394, column: 2, scope: !9622)
!9627 = !DILocation(line: 395, column: 1, scope: !9622)
!9628 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !806, file: !806, line: 289, type: !859, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9629)
!9629 = !{!9630}
!9630 = !DILocalVariable(name: "dev", arg: 1, scope: !9628, file: !806, line: 289, type: !835)
!9631 = !DILocation(line: 0, scope: !9628)
!9632 = !DILocation(line: 291, column: 2, scope: !9628)
!9633 = !DILocation(line: 292, column: 1, scope: !9628)
!9634 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !806, file: !806, line: 387, type: !859, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9635)
!9635 = !{!9636}
!9636 = !DILocalVariable(name: "dev", arg: 1, scope: !9634, file: !806, line: 387, type: !835)
!9637 = !DILocation(line: 0, scope: !9634)
!9638 = !DILocation(line: 389, column: 2, scope: !9634)
!9639 = !DILocation(line: 390, column: 1, scope: !9634)
!9640 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !806, file: !806, line: 382, type: !859, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9641)
!9641 = !{!9642}
!9642 = !DILocalVariable(name: "dev", arg: 1, scope: !9640, file: !806, line: 382, type: !835)
!9643 = !DILocation(line: 0, scope: !9640)
!9644 = !DILocation(line: 384, column: 2, scope: !9640)
!9645 = !DILocation(line: 385, column: 1, scope: !9640)
!9646 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !806, file: !806, line: 373, type: !859, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9647)
!9647 = !{!9648}
!9648 = !DILocalVariable(name: "dev", arg: 1, scope: !9646, file: !806, line: 373, type: !835)
!9649 = !DILocation(line: 0, scope: !9646)
!9650 = !DILocation(line: 375, column: 2, scope: !9646)
!9651 = !DILocation(line: 376, column: 1, scope: !9646)
!9652 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !806, file: !806, line: 284, type: !859, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9653)
!9653 = !{!9654}
!9654 = !DILocalVariable(name: "dev", arg: 1, scope: !9652, file: !806, line: 284, type: !835)
!9655 = !DILocation(line: 0, scope: !9652)
!9656 = !DILocation(line: 286, column: 2, scope: !9652)
!9657 = !DILocation(line: 287, column: 1, scope: !9652)
!9658 = distinct !DISubprogram(name: "stm32_exti_init", scope: !806, file: !806, line: 416, type: !833, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9659)
!9659 = !{!9660}
!9660 = !DILocalVariable(name: "dev", arg: 1, scope: !9658, file: !806, line: 416, type: !835)
!9661 = !DILocation(line: 0, scope: !9658)
!9662 = !DILocation(line: 418, column: 2, scope: !9658)
!9663 = !DILocation(line: 420, column: 2, scope: !9658)
!9664 = !DILocation(line: 0, scope: !858)
!9665 = !DILocation(line: 493, column: 2, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !858, file: !806, line: 493, column: 2)
!9667 = !DILocation(line: 497, column: 2, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !858, file: !806, line: 497, column: 2)
!9669 = !DILocation(line: 507, column: 2, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !858, file: !806, line: 507, column: 2)
!9671 = !DILocation(line: 512, column: 2, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !858, file: !806, line: 512, column: 2)
!9673 = !DILocation(line: 516, column: 2, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !858, file: !806, line: 516, column: 2)
!9675 = !DILocation(line: 523, column: 2, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !858, file: !806, line: 523, column: 2)
!9677 = !DILocation(line: 527, column: 2, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !858, file: !806, line: 527, column: 2)
!9679 = !DILocation(line: 581, column: 2, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !858, file: !806, line: 581, column: 2)
!9681 = !DILocation(line: 586, column: 2, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !858, file: !806, line: 586, column: 2)
!9683 = !DILocation(line: 591, column: 2, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !858, file: !806, line: 591, column: 2)
!9685 = !DILocation(line: 595, column: 2, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !858, file: !806, line: 595, column: 2)
!9687 = !DILocation(line: 607, column: 1, scope: !858)
!9688 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !806, file: !806, line: 112, type: !9574, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9689)
!9689 = !{!9690, !9691}
!9690 = !DILocalVariable(name: "line", arg: 1, scope: !9688, file: !806, line: 112, type: !103)
!9691 = !DILocalVariable(name: "irqnum", scope: !9688, file: !806, line: 114, type: !103)
!9692 = !DILocation(line: 0, scope: !9688)
!9693 = !DILocation(line: 121, column: 11, scope: !9688)
!9694 = !DILocation(line: 130, column: 26, scope: !9688)
!9695 = !DILocation(line: 130, column: 2, scope: !9688)
!9696 = !DILocation(line: 134, column: 2, scope: !9688)
!9697 = !DILocation(line: 135, column: 1, scope: !9688)
!9698 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9585, file: !9585, line: 268, type: !7404, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9699)
!9699 = !{!9700}
!9700 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9698, file: !9585, line: 268, type: !108)
!9701 = !DILocation(line: 0, scope: !9698)
!9702 = !DILocation(line: 270, column: 3, scope: !9698)
!9703 = !DILocation(line: 271, column: 1, scope: !9698)
!9704 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !806, file: !806, line: 137, type: !9574, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9705)
!9705 = !{!9706}
!9706 = !DILocalVariable(name: "line", arg: 1, scope: !9704, file: !806, line: 137, type: !103)
!9707 = !DILocation(line: 0, scope: !9704)
!9708 = !DILocation(line: 141, column: 11, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9704, file: !806, line: 141, column: 6)
!9710 = !DILocation(line: 141, column: 6, scope: !9704)
!9711 = !DILocation(line: 145, column: 28, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9709, file: !806, line: 141, column: 17)
!9713 = !DILocation(line: 145, column: 3, scope: !9712)
!9714 = !DILocation(line: 147, column: 2, scope: !9712)
!9715 = !DILocation(line: 151, column: 1, scope: !9704)
!9716 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9585, file: !9585, line: 309, type: !7404, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9717)
!9717 = !{!9718}
!9718 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9716, file: !9585, line: 309, type: !108)
!9719 = !DILocation(line: 0, scope: !9716)
!9720 = !DILocation(line: 311, column: 3, scope: !9716)
!9721 = !DILocation(line: 312, column: 1, scope: !9716)
!9722 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !806, file: !806, line: 202, type: !9723, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9725)
!9723 = !DISubroutineType(types: !9724)
!9724 = !{null, !103, !103}
!9725 = !{!9726, !9727}
!9726 = !DILocalVariable(name: "line", arg: 1, scope: !9722, file: !806, line: 202, type: !103)
!9727 = !DILocalVariable(name: "trigger", arg: 2, scope: !9722, file: !806, line: 202, type: !103)
!9728 = !DILocation(line: 0, scope: !9722)
!9729 = !DILocation(line: 211, column: 2, scope: !9722)
!9730 = !DILocation(line: 213, column: 36, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9722, file: !806, line: 211, column: 19)
!9732 = !DILocation(line: 213, column: 3, scope: !9731)
!9733 = !DILocation(line: 214, column: 3, scope: !9731)
!9734 = !DILocation(line: 215, column: 3, scope: !9731)
!9735 = !DILocation(line: 217, column: 35, scope: !9731)
!9736 = !DILocation(line: 217, column: 3, scope: !9731)
!9737 = !DILocation(line: 218, column: 3, scope: !9731)
!9738 = !DILocation(line: 219, column: 3, scope: !9731)
!9739 = !DILocation(line: 221, column: 36, scope: !9731)
!9740 = !DILocation(line: 221, column: 3, scope: !9731)
!9741 = !DILocation(line: 222, column: 3, scope: !9731)
!9742 = !DILocation(line: 223, column: 3, scope: !9731)
!9743 = !DILocation(line: 225, column: 35, scope: !9731)
!9744 = !DILocation(line: 225, column: 3, scope: !9731)
!9745 = !DILocation(line: 226, column: 3, scope: !9731)
!9746 = !DILocation(line: 227, column: 3, scope: !9731)
!9747 = !DILocation(line: 232, column: 1, scope: !9722)
!9748 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9585, file: !9585, line: 573, type: !7404, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9749)
!9749 = !{!9750}
!9750 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9748, file: !9585, line: 573, type: !108)
!9751 = !DILocation(line: 0, scope: !9748)
!9752 = !DILocation(line: 575, column: 3, scope: !9748)
!9753 = !DILocation(line: 577, column: 1, scope: !9748)
!9754 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9585, file: !9585, line: 703, type: !7404, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9755)
!9755 = !{!9756}
!9756 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9754, file: !9585, line: 703, type: !108)
!9757 = !DILocation(line: 0, scope: !9754)
!9758 = !DILocation(line: 705, column: 3, scope: !9754)
!9759 = !DILocation(line: 706, column: 1, scope: !9754)
!9760 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9585, file: !9585, line: 529, type: !7404, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9761)
!9761 = !{!9762}
!9762 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9760, file: !9585, line: 529, type: !108)
!9763 = !DILocation(line: 0, scope: !9760)
!9764 = !DILocation(line: 531, column: 3, scope: !9760)
!9765 = !DILocation(line: 533, column: 1, scope: !9760)
!9766 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9585, file: !9585, line: 661, type: !7404, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9767)
!9767 = !{!9768}
!9768 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9766, file: !9585, line: 661, type: !108)
!9769 = !DILocation(line: 0, scope: !9766)
!9770 = !DILocation(line: 663, column: 3, scope: !9766)
!9771 = !DILocation(line: 664, column: 1, scope: !9766)
!9772 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !806, file: !806, line: 433, type: !9773, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9775)
!9773 = !DISubroutineType(types: !9774)
!9774 = !{!103, !103, !846, !102}
!9775 = !{!9776, !9777, !9778, !9779, !9781}
!9776 = !DILocalVariable(name: "line", arg: 1, scope: !9772, file: !806, line: 433, type: !103)
!9777 = !DILocalVariable(name: "cb", arg: 2, scope: !9772, file: !806, line: 433, type: !846)
!9778 = !DILocalVariable(name: "arg", arg: 3, scope: !9772, file: !806, line: 433, type: !102)
!9779 = !DILocalVariable(name: "dev", scope: !9772, file: !806, line: 435, type: !9780)
!9780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !835)
!9781 = !DILocalVariable(name: "data", scope: !9772, file: !806, line: 436, type: !9539)
!9782 = !DILocation(line: 0, scope: !9772)
!9783 = !DILocation(line: 438, column: 21, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9772, file: !806, line: 438, column: 6)
!9785 = !DILocation(line: 438, column: 6, scope: !9784)
!9786 = !DILocation(line: 438, column: 6, scope: !9772)
!9787 = !DILocation(line: 442, column: 20, scope: !9772)
!9788 = !DILocation(line: 443, column: 17, scope: !9772)
!9789 = !DILocation(line: 443, column: 22, scope: !9772)
!9790 = !DILocation(line: 445, column: 2, scope: !9772)
!9791 = !DILocation(line: 446, column: 1, scope: !9772)
!9792 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !806, file: !806, line: 448, type: !9574, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9793)
!9793 = !{!9794, !9795, !9796}
!9794 = !DILocalVariable(name: "line", arg: 1, scope: !9792, file: !806, line: 448, type: !103)
!9795 = !DILocalVariable(name: "dev", scope: !9792, file: !806, line: 450, type: !9780)
!9796 = !DILocalVariable(name: "data", scope: !9792, file: !806, line: 451, type: !9539)
!9797 = !DILocation(line: 0, scope: !9792)
!9798 = !DILocation(line: 453, column: 17, scope: !9792)
!9799 = !DILocation(line: 453, column: 20, scope: !9792)
!9800 = !DILocation(line: 454, column: 17, scope: !9792)
!9801 = !DILocation(line: 454, column: 22, scope: !9792)
!9802 = !DILocation(line: 455, column: 1, scope: !9792)
!9803 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !988, file: !988, line: 183, type: !1026, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !9804)
!9804 = !{!9805, !9806, !9807, !9808, !9809}
!9805 = !DILocalVariable(name: "dev", arg: 1, scope: !9803, file: !988, line: 183, type: !1017)
!9806 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9803, file: !988, line: 184, type: !1028)
!9807 = !DILocalVariable(name: "pclken", scope: !9803, file: !988, line: 186, type: !978)
!9808 = !DILocalVariable(name: "reg", scope: !9803, file: !988, line: 187, type: !1571)
!9809 = !DILocalVariable(name: "reg_val", scope: !9803, file: !988, line: 188, type: !108)
!9810 = !DILocation(line: 0, scope: !9803)
!9811 = !DILocation(line: 192, column: 6, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9803, file: !988, line: 192, column: 6)
!9813 = !DILocation(line: 192, column: 6, scope: !9803)
!9814 = !DILocation(line: 197, column: 52, scope: !9803)
!9815 = !DILocation(line: 197, column: 8, scope: !9803)
!9816 = !DILocation(line: 198, column: 12, scope: !9803)
!9817 = !DILocation(line: 199, column: 21, scope: !9803)
!9818 = !DILocation(line: 199, column: 10, scope: !9803)
!9819 = !DILocation(line: 200, column: 7, scope: !9803)
!9820 = !DILocation(line: 202, column: 2, scope: !9803)
!9821 = !DILocation(line: 203, column: 1, scope: !9803)
!9822 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !988, file: !988, line: 205, type: !1026, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !9823)
!9823 = !{!9824, !9825, !9826, !9827, !9828}
!9824 = !DILocalVariable(name: "dev", arg: 1, scope: !9822, file: !988, line: 205, type: !1017)
!9825 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9822, file: !988, line: 206, type: !1028)
!9826 = !DILocalVariable(name: "pclken", scope: !9822, file: !988, line: 208, type: !978)
!9827 = !DILocalVariable(name: "reg", scope: !9822, file: !988, line: 209, type: !1571)
!9828 = !DILocalVariable(name: "reg_val", scope: !9822, file: !988, line: 210, type: !108)
!9829 = !DILocation(line: 0, scope: !9822)
!9830 = !DILocation(line: 214, column: 6, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9822, file: !988, line: 214, column: 6)
!9832 = !DILocation(line: 214, column: 6, scope: !9822)
!9833 = !DILocation(line: 219, column: 52, scope: !9822)
!9834 = !DILocation(line: 219, column: 8, scope: !9822)
!9835 = !DILocation(line: 220, column: 12, scope: !9822)
!9836 = !DILocation(line: 221, column: 22, scope: !9822)
!9837 = !DILocation(line: 221, column: 13, scope: !9822)
!9838 = !DILocation(line: 221, column: 10, scope: !9822)
!9839 = !DILocation(line: 222, column: 7, scope: !9822)
!9840 = !DILocation(line: 224, column: 2, scope: !9822)
!9841 = !DILocation(line: 225, column: 1, scope: !9822)
!9842 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !988, file: !988, line: 262, type: !1042, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !9843)
!9843 = !{!9844, !9845, !9846, !9847, !9848, !9849, !9850, !9851}
!9844 = !DILocalVariable(name: "clock", arg: 1, scope: !9842, file: !988, line: 262, type: !1017)
!9845 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9842, file: !988, line: 263, type: !1028)
!9846 = !DILocalVariable(name: "rate", arg: 3, scope: !9842, file: !988, line: 264, type: !984)
!9847 = !DILocalVariable(name: "pclken", scope: !9842, file: !988, line: 266, type: !978)
!9848 = !DILocalVariable(name: "ahb_clock", scope: !9842, file: !988, line: 273, type: !108)
!9849 = !DILocalVariable(name: "apb1_clock", scope: !9842, file: !988, line: 274, type: !108)
!9850 = !DILocalVariable(name: "apb2_clock", scope: !9842, file: !988, line: 276, type: !108)
!9851 = !DILocalVariable(name: "ahb3_clock", scope: !9842, file: !988, line: 286, type: !108)
!9852 = !DILocation(line: 0, scope: !9842)
!9853 = !DILocation(line: 273, column: 23, scope: !9842)
!9854 = !DILocation(line: 274, column: 24, scope: !9842)
!9855 = !DILocation(line: 299, column: 18, scope: !9842)
!9856 = !DILocation(line: 299, column: 2, scope: !9842)
!9857 = !DILocation(line: 319, column: 3, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9842, file: !988, line: 299, column: 23)
!9859 = !DILocation(line: 323, column: 3, scope: !9858)
!9860 = !DILocation(line: 346, column: 33, scope: !9858)
!9861 = !DILocation(line: 346, column: 11, scope: !9858)
!9862 = !DILocation(line: 350, column: 3, scope: !9858)
!9863 = !DILocation(line: 354, column: 33, scope: !9858)
!9864 = !DILocation(line: 354, column: 11, scope: !9858)
!9865 = !DILocation(line: 358, column: 3, scope: !9858)
!9866 = !DILocation(line: 374, column: 3, scope: !9858)
!9867 = !DILocation(line: 379, column: 3, scope: !9858)
!9868 = !DILocation(line: 0, scope: !9858)
!9869 = !DILocation(line: 396, column: 1, scope: !9842)
!9870 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !988, file: !988, line: 227, type: !1058, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !9871)
!9871 = !{!9872, !9873, !9874, !9875, !9876, !9877, !9878, !9879}
!9872 = !DILocalVariable(name: "dev", arg: 1, scope: !9870, file: !988, line: 227, type: !1017)
!9873 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9870, file: !988, line: 228, type: !1028)
!9874 = !DILocalVariable(name: "data", arg: 3, scope: !9870, file: !988, line: 229, type: !102)
!9875 = !DILocalVariable(name: "pclken", scope: !9870, file: !988, line: 233, type: !978)
!9876 = !DILocalVariable(name: "reg", scope: !9870, file: !988, line: 234, type: !1571)
!9877 = !DILocalVariable(name: "reg_val", scope: !9870, file: !988, line: 235, type: !108)
!9878 = !DILocalVariable(name: "dt_val", scope: !9870, file: !988, line: 235, type: !108)
!9879 = !DILocalVariable(name: "err", scope: !9870, file: !988, line: 236, type: !103)
!9880 = !DILocation(line: 0, scope: !9870)
!9881 = !DILocation(line: 241, column: 30, scope: !9870)
!9882 = !DILocation(line: 241, column: 8, scope: !9870)
!9883 = !DILocation(line: 242, column: 10, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9870, file: !988, line: 242, column: 6)
!9885 = !DILocation(line: 242, column: 6, scope: !9870)
!9886 = !DILocation(line: 247, column: 11, scope: !9870)
!9887 = !DILocation(line: 248, column: 6, scope: !9870)
!9888 = !DILocation(line: 247, column: 44, scope: !9870)
!9889 = !DILocation(line: 250, column: 6, scope: !9870)
!9890 = !DILocation(line: 249, column: 52, scope: !9870)
!9891 = !DILocation(line: 249, column: 8, scope: !9870)
!9892 = !DILocation(line: 251, column: 12, scope: !9870)
!9893 = !DILocation(line: 252, column: 10, scope: !9870)
!9894 = !DILocation(line: 253, column: 7, scope: !9870)
!9895 = !DILocation(line: 255, column: 2, scope: !9870)
!9896 = !DILocation(line: 260, column: 1, scope: !9870)
!9897 = distinct !DISubprogram(name: "enabled_clock", scope: !988, file: !988, line: 100, type: !9898, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !9900)
!9898 = !DISubroutineType(types: !9899)
!9899 = !{!103, !108}
!9900 = !{!9901, !9902}
!9901 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9897, file: !988, line: 100, type: !108)
!9902 = !DILocalVariable(name: "r", scope: !9897, file: !988, line: 102, type: !103)
!9903 = !DILocation(line: 0, scope: !9897)
!9904 = !DILocation(line: 104, column: 2, scope: !9897)
!9905 = !DILocation(line: 180, column: 2, scope: !9897)
!9906 = !DILocation(line: 181, column: 1, scope: !9897)
!9907 = distinct !DISubprogram(name: "get_bus_clock", scope: !988, file: !988, line: 79, type: !9908, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !9910)
!9908 = !DISubroutineType(types: !9909)
!9909 = !{!108, !108, !108}
!9910 = !{!9911, !9912}
!9911 = !DILocalVariable(name: "clock", arg: 1, scope: !9907, file: !988, line: 79, type: !108)
!9912 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9907, file: !988, line: 79, type: !108)
!9913 = !DILocation(line: 0, scope: !9907)
!9914 = !DILocation(line: 81, column: 15, scope: !9907)
!9915 = !DILocation(line: 81, column: 2, scope: !9907)
!9916 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !988, file: !988, line: 68, type: !9917, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !9919)
!9917 = !DISubroutineType(types: !9918)
!9918 = !{!108, !108, !103, !103, !103}
!9919 = !{!9920, !9921, !9922, !9923}
!9920 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9916, file: !988, line: 68, type: !108)
!9921 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9916, file: !988, line: 69, type: !103)
!9922 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9916, file: !988, line: 70, type: !103)
!9923 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9916, file: !988, line: 71, type: !103)
!9924 = !DILocation(line: 0, scope: !9916)
!9925 = !DILocation(line: 75, column: 22, scope: !9916)
!9926 = !DILocation(line: 76, column: 13, scope: !9916)
!9927 = !DILocation(line: 75, column: 34, scope: !9916)
!9928 = !DILocation(line: 75, column: 2, scope: !9916)
!9929 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !988, file: !988, line: 641, type: !1015, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !9930)
!9930 = !{!9931, !9932, !9933}
!9931 = !DILocalVariable(name: "dev", arg: 1, scope: !9929, file: !988, line: 641, type: !1017)
!9932 = !DILocalVariable(name: "old_flash_freq", scope: !9929, file: !988, line: 664, type: !108)
!9933 = !DILocalVariable(name: "new_flash_freq", scope: !9929, file: !988, line: 665, type: !108)
!9934 = !DILocation(line: 0, scope: !9929)
!9935 = !DILocation(line: 646, column: 2, scope: !9929)
!9936 = !DILocation(line: 667, column: 19, scope: !9929)
!9937 = !DILocation(line: 674, column: 21, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9929, file: !988, line: 674, column: 6)
!9939 = !DILocation(line: 674, column: 6, scope: !9929)
!9940 = !DILocation(line: 675, column: 3, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9938, file: !988, line: 674, column: 59)
!9942 = !DILocation(line: 676, column: 2, scope: !9941)
!9943 = !DILocation(line: 680, column: 2, scope: !9929)
!9944 = !DILocation(line: 683, column: 2, scope: !9929)
!9945 = !DILocation(line: 690, column: 3, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !988, line: 689, column: 9)
!9947 = distinct !DILexicalBlock(scope: !9929, file: !988, line: 685, column: 6)
!9948 = !DILocation(line: 695, column: 2, scope: !9929)
!9949 = !DILocation(line: 696, column: 2, scope: !9929)
!9950 = !DILocation(line: 696, column: 9, scope: !9929)
!9951 = !DILocation(line: 696, column: 34, scope: !9929)
!9952 = distinct !{!9952, !9949, !9953}
!9953 = !DILocation(line: 697, column: 2, scope: !9929)
!9954 = !DILocation(line: 720, column: 21, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9929, file: !988, line: 720, column: 6)
!9956 = !DILocation(line: 720, column: 6, scope: !9929)
!9957 = !DILocation(line: 721, column: 3, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9955, file: !988, line: 720, column: 60)
!9959 = !DILocation(line: 722, column: 2, scope: !9958)
!9960 = !DILocation(line: 725, column: 18, scope: !9929)
!9961 = !DILocation(line: 728, column: 2, scope: !9929)
!9962 = !DILocation(line: 730, column: 2, scope: !9929)
!9963 = !DILocation(line: 745, column: 2, scope: !9929)
!9964 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9965, file: !9965, line: 3275, type: !3591, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!9965 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9966 = !DILocation(line: 3277, column: 21, scope: !9964)
!9967 = !DILocation(line: 3277, column: 3, scope: !9964)
!9968 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !988, file: !988, line: 507, type: !334, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!9969 = !DILocation(line: 516, column: 4, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9971, file: !988, line: 515, column: 10)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !988, line: 513, column: 7)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !988, line: 510, column: 37)
!9973 = distinct !DILexicalBlock(scope: !9968, file: !988, line: 510, column: 6)
!9974 = !DILocation(line: 526, column: 3, scope: !9972)
!9975 = !DILocation(line: 527, column: 3, scope: !9972)
!9976 = !DILocation(line: 527, column: 10, scope: !9972)
!9977 = !DILocation(line: 527, column: 31, scope: !9972)
!9978 = distinct !{!9978, !9975, !9979}
!9979 = !DILocation(line: 529, column: 3, scope: !9972)
!9980 = !DILocation(line: 583, column: 3, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9982, file: !988, line: 577, column: 37)
!9982 = distinct !DILexicalBlock(scope: !9968, file: !988, line: 577, column: 6)
!9983 = !DILocation(line: 584, column: 3, scope: !9981)
!9984 = !DILocation(line: 584, column: 10, scope: !9981)
!9985 = !DILocation(line: 584, column: 31, scope: !9981)
!9986 = distinct !{!9986, !9983, !9987}
!9987 = !DILocation(line: 585, column: 3, scope: !9981)
!9988 = !DILocation(line: 627, column: 1, scope: !9968)
!9989 = distinct !DISubprogram(name: "set_up_plls", scope: !988, file: !988, line: 448, type: !334, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!9990 = !DILocation(line: 460, column: 6, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9989, file: !988, line: 460, column: 6)
!9992 = !DILocation(line: 460, column: 31, scope: !9991)
!9993 = !DILocation(line: 460, column: 6, scope: !9989)
!9994 = !DILocation(line: 461, column: 3, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9991, file: !988, line: 460, column: 67)
!9996 = !DILocation(line: 462, column: 3, scope: !9995)
!9997 = !DILocation(line: 463, column: 2, scope: !9995)
!9998 = !DILocation(line: 464, column: 2, scope: !9989)
!9999 = !DILocation(line: 488, column: 2, scope: !9989)
!10000 = !DILocation(line: 492, column: 2, scope: !9989)
!10001 = !DILocation(line: 496, column: 2, scope: !9989)
!10002 = !DILocation(line: 499, column: 2, scope: !9989)
!10003 = !DILocation(line: 500, column: 2, scope: !9989)
!10004 = !DILocation(line: 500, column: 9, scope: !9989)
!10005 = !DILocation(line: 500, column: 30, scope: !9989)
!10006 = distinct !{!10006, !10003, !10007}
!10007 = !DILocation(line: 502, column: 2, scope: !9989)
!10008 = !DILocation(line: 505, column: 1, scope: !9989)
!10009 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9965, file: !9965, line: 3224, type: !7404, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !10010)
!10010 = !{!10011}
!10011 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10009, file: !9965, line: 3224, type: !108)
!10012 = !DILocation(line: 0, scope: !10009)
!10013 = !DILocation(line: 3226, column: 3, scope: !10009)
!10014 = !DILocation(line: 3227, column: 1, scope: !10009)
!10015 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9965, file: !9965, line: 3188, type: !7404, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !10016)
!10016 = !{!10017}
!10017 = !DILocalVariable(name: "Source", arg: 1, scope: !10015, file: !9965, line: 3188, type: !108)
!10018 = !DILocation(line: 0, scope: !10015)
!10019 = !DILocation(line: 3190, column: 3, scope: !10015)
!10020 = !DILocation(line: 3191, column: 1, scope: !10015)
!10021 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9965, file: !9965, line: 3204, type: !3591, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10022 = !DILocation(line: 3206, column: 21, scope: !10021)
!10023 = !DILocation(line: 3206, column: 3, scope: !10021)
!10024 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9965, file: !9965, line: 3240, type: !7404, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !10025)
!10025 = !{!10026}
!10026 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10024, file: !9965, line: 3240, type: !108)
!10027 = !DILocation(line: 0, scope: !10024)
!10028 = !DILocation(line: 3242, column: 3, scope: !10024)
!10029 = !DILocation(line: 3243, column: 1, scope: !10024)
!10030 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9965, file: !9965, line: 3256, type: !7404, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !10031)
!10031 = !{!10032}
!10032 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10030, file: !9965, line: 3256, type: !108)
!10033 = !DILocation(line: 0, scope: !10030)
!10034 = !DILocation(line: 3258, column: 3, scope: !10030)
!10035 = !DILocation(line: 3259, column: 1, scope: !10030)
!10036 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !988, file: !988, line: 409, type: !334, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10037 = !DILocation(line: 412, column: 6, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10036, file: !988, line: 412, column: 6)
!10039 = !DILocation(line: 412, column: 27, scope: !10038)
!10040 = !DILocation(line: 412, column: 6, scope: !10036)
!10041 = !DILocation(line: 414, column: 3, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !988, line: 412, column: 33)
!10043 = !DILocation(line: 415, column: 3, scope: !10042)
!10044 = !DILocation(line: 415, column: 10, scope: !10042)
!10045 = !DILocation(line: 415, column: 31, scope: !10042)
!10046 = distinct !{!10046, !10043, !10047}
!10047 = !DILocation(line: 417, column: 3, scope: !10042)
!10048 = !DILocation(line: 421, column: 2, scope: !10036)
!10049 = !DILocation(line: 422, column: 2, scope: !10036)
!10050 = !DILocation(line: 422, column: 9, scope: !10036)
!10051 = !DILocation(line: 422, column: 34, scope: !10036)
!10052 = distinct !{!10052, !10049, !10053}
!10053 = !DILocation(line: 423, column: 2, scope: !10036)
!10054 = !DILocation(line: 424, column: 1, scope: !10036)
!10055 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9965, file: !9965, line: 4195, type: !334, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10056 = !DILocation(line: 4197, column: 3, scope: !10055)
!10057 = !DILocation(line: 4198, column: 1, scope: !10055)
!10058 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9965, file: !9965, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10059 = !DILocation(line: 4186, column: 3, scope: !10058)
!10060 = !DILocation(line: 4187, column: 1, scope: !10058)
!10061 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9965, file: !9965, line: 4205, type: !3591, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10062 = !DILocation(line: 4207, column: 11, scope: !10061)
!10063 = !DILocation(line: 4207, column: 44, scope: !10061)
!10064 = !DILocation(line: 4207, column: 3, scope: !10061)
!10065 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9965, file: !9965, line: 3007, type: !3591, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10066 = !DILocation(line: 3009, column: 11, scope: !10065)
!10067 = !DILocation(line: 3009, column: 44, scope: !10065)
!10068 = !DILocation(line: 3009, column: 3, scope: !10065)
!10069 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9965, file: !9965, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10070 = !DILocation(line: 2989, column: 3, scope: !10069)
!10071 = !DILocation(line: 2990, column: 1, scope: !10069)
!10072 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9965, file: !9965, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10073 = !DILocation(line: 2941, column: 3, scope: !10072)
!10074 = !DILocation(line: 2942, column: 1, scope: !10072)
!10075 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9965, file: !9965, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10076 = !DILocation(line: 2951, column: 3, scope: !10075)
!10077 = !DILocation(line: 2952, column: 1, scope: !10075)
!10078 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9965, file: !9965, line: 2969, type: !3591, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10079 = !DILocation(line: 2971, column: 11, scope: !10078)
!10080 = !DILocation(line: 2971, column: 44, scope: !10078)
!10081 = !DILocation(line: 2971, column: 3, scope: !10078)
!10082 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9965, file: !9965, line: 3143, type: !334, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10083 = !DILocation(line: 3145, column: 3, scope: !10082)
!10084 = !DILocation(line: 3146, column: 1, scope: !10082)
!10085 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9965, file: !9965, line: 3163, type: !3591, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !251)
!10086 = !DILocation(line: 3165, column: 11, scope: !10085)
!10087 = !DILocation(line: 3165, column: 46, scope: !10085)
!10088 = !DILocation(line: 3165, column: 3, scope: !10085)
!10089 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10090, file: !10090, line: 40, type: !3591, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !251)
!10090 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10091 = !DILocation(line: 45, column: 3, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !10090, line: 44, column: 44)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !10090, line: 44, column: 13)
!10094 = distinct !DILexicalBlock(scope: !10089, file: !10090, line: 42, column: 6)
!10095 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10090, file: !10090, line: 56, type: !334, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !251)
!10096 = !DILocation(line: 58, column: 2, scope: !10095)
!10097 = !DILocation(line: 62, column: 1, scope: !10095)
!10098 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9965, file: !9965, line: 4304, type: !10099, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !10101)
!10099 = !DISubroutineType(types: !10100)
!10100 = !{null, !108, !108, !108, !108}
!10101 = !{!10102, !10103, !10104, !10105}
!10102 = !DILocalVariable(name: "Source", arg: 1, scope: !10098, file: !9965, line: 4304, type: !108)
!10103 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10098, file: !9965, line: 4304, type: !108)
!10104 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10098, file: !9965, line: 4304, type: !108)
!10105 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10098, file: !9965, line: 4304, type: !108)
!10106 = !DILocation(line: 0, scope: !10098)
!10107 = !DILocation(line: 4306, column: 3, scope: !10098)
!10108 = !DILocation(line: 4308, column: 3, scope: !10098)
!10109 = !DILocation(line: 4312, column: 1, scope: !10098)
!10110 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10090, file: !10090, line: 69, type: !334, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !251)
!10111 = !DILocation(line: 72, column: 2, scope: !10110)
!10112 = !DILocation(line: 73, column: 1, scope: !10110)
!10113 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10114, file: !10114, line: 1185, type: !7404, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !10115)
!10114 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10115 = !{!10116, !10117}
!10116 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10113, file: !10114, line: 1185, type: !108)
!10117 = !DILocalVariable(name: "tmpreg", scope: !10113, file: !10114, line: 1187, type: !409)
!10118 = !DILocation(line: 0, scope: !10113)
!10119 = !DILocation(line: 1187, column: 3, scope: !10113)
!10120 = !DILocation(line: 1187, column: 17, scope: !10113)
!10121 = !DILocation(line: 1188, column: 3, scope: !10113)
!10122 = !DILocation(line: 1190, column: 12, scope: !10113)
!10123 = !DILocation(line: 1190, column: 10, scope: !10113)
!10124 = !DILocation(line: 1191, column: 9, scope: !10113)
!10125 = !DILocation(line: 1192, column: 1, scope: !10113)
!10126 = distinct !DISubprogram(name: "uart_console_init", scope: !1119, file: !1119, line: 588, type: !1096, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1062, retainedNodes: !10127)
!10127 = !{!10128}
!10128 = !DILocalVariable(name: "arg", arg: 1, scope: !10126, file: !1119, line: 588, type: !1074)
!10129 = !DILocation(line: 0, scope: !10126)
!10130 = !DILocation(line: 593, column: 7, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10126, file: !1119, line: 593, column: 6)
!10132 = !DILocation(line: 593, column: 6, scope: !10126)
!10133 = !DILocation(line: 597, column: 2, scope: !10126)
!10134 = !DILocation(line: 599, column: 2, scope: !10126)
!10135 = !DILocation(line: 600, column: 1, scope: !10126)
!10136 = distinct !DISubprogram(name: "device_is_ready", scope: !10137, file: !10137, line: 47, type: !10138, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1062, retainedNodes: !10140)
!10137 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!10138 = !DISubroutineType(types: !10139)
!10139 = !{!131, !1074}
!10140 = !{!10141}
!10141 = !DILocalVariable(name: "dev", arg: 1, scope: !10136, file: !10137, line: 47, type: !1074)
!10142 = !DILocation(line: 0, scope: !10136)
!10143 = !DILocation(line: 55, column: 2, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10136, file: !10137, line: 55, column: 2)
!10145 = !{i64 2154952986}
!10146 = !DILocation(line: 56, column: 9, scope: !10136)
!10147 = !DILocation(line: 56, column: 2, scope: !10136)
!10148 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1119, file: !1119, line: 573, type: !334, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1062, retainedNodes: !251)
!10149 = !DILocation(line: 576, column: 2, scope: !10148)
!10150 = !DILocation(line: 579, column: 2, scope: !10148)
!10151 = !DILocation(line: 581, column: 1, scope: !10148)
!10152 = distinct !DISubprogram(name: "console_out", scope: !1119, file: !1119, line: 77, type: !396, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1062, retainedNodes: !10153)
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "c", arg: 1, scope: !10152, file: !1119, line: 77, type: !103)
!10155 = !DILocation(line: 0, scope: !10152)
!10156 = !DILocation(line: 89, column: 11, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10152, file: !1119, line: 89, column: 6)
!10158 = !DILocation(line: 89, column: 6, scope: !10152)
!10159 = !DILocation(line: 90, column: 3, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10157, file: !1119, line: 89, column: 17)
!10161 = !DILocation(line: 91, column: 2, scope: !10160)
!10162 = !DILocation(line: 92, column: 34, scope: !10152)
!10163 = !DILocation(line: 92, column: 2, scope: !10152)
!10164 = !DILocation(line: 94, column: 2, scope: !10152)
!10165 = distinct !DISubprogram(name: "uart_poll_out", scope: !10166, file: !10166, line: 95, type: !1092, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1062, retainedNodes: !10167)
!10166 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/benchmark")
!10167 = !{!10168, !10169}
!10168 = !DILocalVariable(name: "dev", arg: 1, scope: !10165, file: !10166, line: 95, type: !1074)
!10169 = !DILocalVariable(name: "out_char", arg: 2, scope: !10165, file: !10166, line: 95, type: !186)
!10170 = !DILocation(line: 0, scope: !10165)
!10171 = !DILocation(line: 105, column: 2, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10165, file: !10166, line: 105, column: 2)
!10173 = !{i64 2155036377}
!10174 = !DILocation(line: 106, column: 2, scope: !10165)
!10175 = !DILocation(line: 107, column: 1, scope: !10165)
!10176 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1068, file: !1068, line: 574, type: !1092, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1062, retainedNodes: !10177)
!10177 = !{!10178, !10179, !10180}
!10178 = !DILocalVariable(name: "dev", arg: 1, scope: !10176, file: !1068, line: 574, type: !1074)
!10179 = !DILocalVariable(name: "out_char", arg: 2, scope: !10176, file: !1068, line: 575, type: !186)
!10180 = !DILocalVariable(name: "api", scope: !10176, file: !1068, line: 577, type: !1065)
!10181 = !DILocation(line: 0, scope: !10176)
!10182 = !DILocation(line: 578, column: 40, scope: !10176)
!10183 = !DILocation(line: 580, column: 7, scope: !10176)
!10184 = !DILocation(line: 580, column: 2, scope: !10176)
!10185 = !DILocation(line: 581, column: 1, scope: !10176)
!10186 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10138, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1062, retainedNodes: !10187)
!10187 = !{!10188}
!10188 = !DILocalVariable(name: "dev", arg: 1, scope: !10186, file: !429, line: 730, type: !1074)
!10189 = !DILocation(line: 0, scope: !10186)
!10190 = !DILocation(line: 732, column: 9, scope: !10186)
!10191 = !DILocation(line: 732, column: 2, scope: !10186)
!10192 = distinct !DISubprogram(name: "uart_register_input", scope: !1119, file: !1119, line: 560, type: !10193, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1062, retainedNodes: !10238)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{null, !10195, !10195, !10235}
!10195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10196, size: 32)
!10196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !137, line: 2208, size: 128, elements: !10197)
!10197 = !{!10198}
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10196, file: !137, line: 2209, baseType: !10199, size: 128)
!10199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !137, line: 1709, size: 128, elements: !10200)
!10200 = !{!10201, !10214, !10216}
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10199, file: !137, line: 1710, baseType: !10202, size: 64)
!10202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10203, line: 46, baseType: !10204)
!10203 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10203, line: 41, size: 64, elements: !10205)
!10205 = !{!10206, !10213}
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10204, file: !10203, line: 42, baseType: !10207, size: 32)
!10207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10208, size: 32)
!10208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10203, line: 39, baseType: !10209)
!10209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10203, line: 35, size: 32, elements: !10210)
!10210 = !{!10211}
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10209, file: !10203, line: 36, baseType: !10212, size: 32)
!10212 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10203, line: 32, baseType: !108)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10204, file: !10203, line: 43, baseType: !10207, size: 32, offset: 32)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10199, file: !137, line: 1711, baseType: !10215, offset: 64)
!10215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10199, file: !137, line: 1712, baseType: !10217, size: 64, offset: 64)
!10217 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !10218)
!10218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !10219)
!10219 = !{!10220}
!10220 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10218, file: !141, line: 232, baseType: !10221, size: 64)
!10221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !10222)
!10222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !10223)
!10223 = !{!10224, !10230}
!10224 = !DIDerivedType(tag: DW_TAG_member, scope: !10222, file: !146, line: 38, baseType: !10225, size: 32)
!10225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10222, file: !146, line: 38, size: 32, elements: !10226)
!10226 = !{!10227, !10229}
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10225, file: !146, line: 39, baseType: !10228, size: 32)
!10228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10222, size: 32)
!10229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10225, file: !146, line: 40, baseType: !10228, size: 32)
!10230 = !DIDerivedType(tag: DW_TAG_member, scope: !10222, file: !146, line: 42, baseType: !10231, size: 32, offset: 32)
!10231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10222, file: !146, line: 42, size: 32, elements: !10232)
!10232 = !{!10233, !10234}
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10231, file: !146, line: 43, baseType: !10228, size: 32)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10231, file: !146, line: 44, baseType: !10228, size: 32)
!10235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10236, size: 32)
!10236 = !DISubroutineType(types: !10237)
!10237 = !{!185, !277, !185}
!10238 = !{!10239, !10240, !10241}
!10239 = !DILocalVariable(name: "avail", arg: 1, scope: !10192, file: !1119, line: 560, type: !10195)
!10240 = !DILocalVariable(name: "lines", arg: 2, scope: !10192, file: !1119, line: 560, type: !10195)
!10241 = !DILocalVariable(name: "completion", arg: 3, scope: !10192, file: !1119, line: 561, type: !10235)
!10242 = !DILocation(line: 0, scope: !10192)
!10243 = !DILocation(line: 566, column: 1, scope: !10192)
!10244 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1299, file: !1299, line: 523, type: !1155, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10245)
!10245 = !{!10246, !10247, !10248, !10249, !10250}
!10246 = !DILocalVariable(name: "dev", arg: 1, scope: !10244, file: !1299, line: 523, type: !1157)
!10247 = !DILocalVariable(name: "pin", arg: 2, scope: !10244, file: !1299, line: 524, type: !1172)
!10248 = !DILocalVariable(name: "flags", arg: 3, scope: !10244, file: !1299, line: 524, type: !1173)
!10249 = !DILocalVariable(name: "err", scope: !10244, file: !1299, line: 526, type: !103)
!10250 = !DILocalVariable(name: "pincfg", scope: !10244, file: !1299, line: 527, type: !103)
!10251 = !DILocation(line: 0, scope: !10244)
!10252 = !DILocation(line: 527, column: 2, scope: !10244)
!10253 = !DILocation(line: 532, column: 8, scope: !10244)
!10254 = !DILocation(line: 533, column: 10, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10244, file: !1299, line: 533, column: 6)
!10256 = !DILocation(line: 533, column: 6, scope: !10244)
!10257 = !DILocation(line: 543, column: 13, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10244, file: !1299, line: 543, column: 6)
!10259 = !DILocation(line: 543, column: 28, scope: !10258)
!10260 = !DILocation(line: 543, column: 6, scope: !10244)
!10261 = !DILocation(line: 544, column: 14, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10263, file: !1299, line: 544, column: 7)
!10263 = distinct !DILexicalBlock(scope: !10258, file: !1299, line: 543, column: 34)
!10264 = !DILocation(line: 544, column: 39, scope: !10262)
!10265 = !DILocation(line: 544, column: 7, scope: !10263)
!10266 = !DILocation(line: 545, column: 38, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10262, file: !1299, line: 544, column: 45)
!10268 = !DILocation(line: 545, column: 4, scope: !10267)
!10269 = !DILocation(line: 546, column: 3, scope: !10267)
!10270 = !DILocation(line: 546, column: 21, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10262, file: !1299, line: 546, column: 14)
!10272 = !DILocation(line: 546, column: 45, scope: !10271)
!10273 = !DILocation(line: 546, column: 14, scope: !10262)
!10274 = !DILocation(line: 547, column: 40, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10271, file: !1299, line: 546, column: 51)
!10276 = !DILocation(line: 547, column: 4, scope: !10275)
!10277 = !DILocation(line: 548, column: 3, scope: !10275)
!10278 = !DILocation(line: 551, column: 32, scope: !10244)
!10279 = !DILocation(line: 551, column: 37, scope: !10244)
!10280 = !DILocation(line: 551, column: 2, scope: !10244)
!10281 = !DILocation(line: 554, column: 6, scope: !10244)
!10282 = !DILocation(line: 562, column: 1, scope: !10244)
!10283 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1299, file: !1299, line: 410, type: !10284, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10286)
!10284 = !DISubroutineType(types: !10285)
!10285 = !{!103, !1157, !984}
!10286 = !{!10287, !10288, !10289, !10291}
!10287 = !DILocalVariable(name: "dev", arg: 1, scope: !10283, file: !1299, line: 410, type: !1157)
!10288 = !DILocalVariable(name: "value", arg: 2, scope: !10283, file: !1299, line: 410, type: !984)
!10289 = !DILocalVariable(name: "cfg", scope: !10283, file: !1299, line: 412, type: !10290)
!10290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 32)
!10291 = !DILocalVariable(name: "gpio", scope: !10283, file: !1299, line: 413, type: !1230)
!10292 = !DILocation(line: 0, scope: !10283)
!10293 = !DILocation(line: 412, column: 45, scope: !10283)
!10294 = !DILocation(line: 413, column: 44, scope: !10283)
!10295 = !DILocation(line: 415, column: 11, scope: !10283)
!10296 = !DILocation(line: 415, column: 9, scope: !10283)
!10297 = !DILocation(line: 417, column: 2, scope: !10283)
!10298 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1299, file: !1299, line: 420, type: !1182, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10299)
!10299 = !{!10300, !10301, !10302, !10303, !10304, !10305}
!10300 = !DILocalVariable(name: "dev", arg: 1, scope: !10298, file: !1299, line: 420, type: !1157)
!10301 = !DILocalVariable(name: "mask", arg: 2, scope: !10298, file: !1299, line: 421, type: !1184)
!10302 = !DILocalVariable(name: "value", arg: 3, scope: !10298, file: !1299, line: 422, type: !1179)
!10303 = !DILocalVariable(name: "cfg", scope: !10298, file: !1299, line: 424, type: !10290)
!10304 = !DILocalVariable(name: "gpio", scope: !10298, file: !1299, line: 425, type: !1230)
!10305 = !DILocalVariable(name: "port_value", scope: !10298, file: !1299, line: 426, type: !108)
!10306 = !DILocation(line: 0, scope: !10298)
!10307 = !DILocation(line: 424, column: 45, scope: !10298)
!10308 = !DILocation(line: 425, column: 44, scope: !10298)
!10309 = !DILocation(line: 430, column: 15, scope: !10298)
!10310 = !DILocation(line: 431, column: 46, scope: !10298)
!10311 = !DILocation(line: 431, column: 44, scope: !10298)
!10312 = !DILocation(line: 431, column: 61, scope: !10298)
!10313 = !DILocation(line: 431, column: 53, scope: !10298)
!10314 = !DILocation(line: 431, column: 2, scope: !10298)
!10315 = !DILocation(line: 435, column: 2, scope: !10298)
!10316 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1299, file: !1299, line: 438, type: !1187, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10317)
!10317 = !{!10318, !10319, !10320, !10321}
!10318 = !DILocalVariable(name: "dev", arg: 1, scope: !10316, file: !1299, line: 438, type: !1157)
!10319 = !DILocalVariable(name: "pins", arg: 2, scope: !10316, file: !1299, line: 439, type: !1184)
!10320 = !DILocalVariable(name: "cfg", scope: !10316, file: !1299, line: 441, type: !10290)
!10321 = !DILocalVariable(name: "gpio", scope: !10316, file: !1299, line: 442, type: !1230)
!10322 = !DILocation(line: 0, scope: !10316)
!10323 = !DILocation(line: 441, column: 45, scope: !10316)
!10324 = !DILocation(line: 442, column: 44, scope: !10316)
!10325 = !DILocation(line: 448, column: 2, scope: !10316)
!10326 = !DILocation(line: 450, column: 2, scope: !10316)
!10327 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1299, file: !1299, line: 453, type: !1187, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10328)
!10328 = !{!10329, !10330, !10331, !10332}
!10329 = !DILocalVariable(name: "dev", arg: 1, scope: !10327, file: !1299, line: 453, type: !1157)
!10330 = !DILocalVariable(name: "pins", arg: 2, scope: !10327, file: !1299, line: 454, type: !1184)
!10331 = !DILocalVariable(name: "cfg", scope: !10327, file: !1299, line: 456, type: !10290)
!10332 = !DILocalVariable(name: "gpio", scope: !10327, file: !1299, line: 457, type: !1230)
!10333 = !DILocation(line: 0, scope: !10327)
!10334 = !DILocation(line: 456, column: 45, scope: !10327)
!10335 = !DILocation(line: 457, column: 44, scope: !10327)
!10336 = !DILocation(line: 467, column: 2, scope: !10327)
!10337 = !DILocation(line: 470, column: 2, scope: !10327)
!10338 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1299, file: !1299, line: 473, type: !1187, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10339)
!10339 = !{!10340, !10341, !10342, !10343}
!10340 = !DILocalVariable(name: "dev", arg: 1, scope: !10338, file: !1299, line: 473, type: !1157)
!10341 = !DILocalVariable(name: "pins", arg: 2, scope: !10338, file: !1299, line: 474, type: !1184)
!10342 = !DILocalVariable(name: "cfg", scope: !10338, file: !1299, line: 476, type: !10290)
!10343 = !DILocalVariable(name: "gpio", scope: !10338, file: !1299, line: 477, type: !1230)
!10344 = !DILocation(line: 0, scope: !10338)
!10345 = !DILocation(line: 476, column: 45, scope: !10338)
!10346 = !DILocation(line: 477, column: 44, scope: !10338)
!10347 = !DILocation(line: 484, column: 2, scope: !10338)
!10348 = !DILocation(line: 487, column: 2, scope: !10338)
!10349 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1299, file: !1299, line: 594, type: !1193, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10350)
!10350 = !{!10351, !10352, !10353, !10354, !10355, !10356, !10358, !10359, !10360}
!10351 = !DILocalVariable(name: "dev", arg: 1, scope: !10349, file: !1299, line: 594, type: !1157)
!10352 = !DILocalVariable(name: "pin", arg: 2, scope: !10349, file: !1299, line: 595, type: !1172)
!10353 = !DILocalVariable(name: "mode", arg: 3, scope: !10349, file: !1299, line: 596, type: !1131)
!10354 = !DILocalVariable(name: "trig", arg: 4, scope: !10349, file: !1299, line: 597, type: !1137)
!10355 = !DILocalVariable(name: "cfg", scope: !10349, file: !1299, line: 599, type: !10290)
!10356 = !DILocalVariable(name: "data", scope: !10349, file: !1299, line: 600, type: !10357)
!10357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 32)
!10358 = !DILocalVariable(name: "edge", scope: !10349, file: !1299, line: 601, type: !103)
!10359 = !DILocalVariable(name: "err", scope: !10349, file: !1299, line: 602, type: !103)
!10360 = !DILabel(scope: !10349, name: "exit", file: !1299, line: 643)
!10361 = !DILocation(line: 0, scope: !10349)
!10362 = !DILocation(line: 599, column: 45, scope: !10349)
!10363 = !DILocation(line: 604, column: 6, scope: !10349)
!10364 = !DILocation(line: 605, column: 34, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !1299, line: 605, column: 7)
!10366 = distinct !DILexicalBlock(scope: !10367, file: !1299, line: 604, column: 38)
!10367 = distinct !DILexicalBlock(scope: !10349, file: !1299, line: 604, column: 6)
!10368 = !DILocation(line: 605, column: 7, scope: !10365)
!10369 = !DILocation(line: 605, column: 47, scope: !10365)
!10370 = !DILocation(line: 605, column: 39, scope: !10365)
!10371 = !DILocation(line: 605, column: 7, scope: !10366)
!10372 = !DILocation(line: 606, column: 4, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10365, file: !1299, line: 605, column: 53)
!10374 = !DILocation(line: 607, column: 4, scope: !10373)
!10375 = !DILocation(line: 608, column: 4, scope: !10373)
!10376 = !DILocation(line: 609, column: 3, scope: !10373)
!10377 = !DILocation(line: 600, column: 38, scope: !10349)
!10378 = !DILocation(line: 620, column: 30, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10349, file: !1299, line: 620, column: 6)
!10380 = !DILocation(line: 620, column: 6, scope: !10379)
!10381 = !DILocation(line: 620, column: 57, scope: !10379)
!10382 = !DILocation(line: 620, column: 6, scope: !10349)
!10383 = !DILocation(line: 625, column: 29, scope: !10349)
!10384 = !DILocation(line: 625, column: 2, scope: !10349)
!10385 = !DILocation(line: 627, column: 2, scope: !10349)
!10386 = !DILocation(line: 630, column: 3, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10349, file: !1299, line: 627, column: 16)
!10388 = !DILocation(line: 633, column: 3, scope: !10387)
!10389 = !DILocation(line: 636, column: 3, scope: !10387)
!10390 = !DILocation(line: 639, column: 2, scope: !10349)
!10391 = !DILocation(line: 641, column: 2, scope: !10349)
!10392 = !DILocation(line: 643, column: 1, scope: !10349)
!10393 = !DILocation(line: 644, column: 2, scope: !10349)
!10394 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1299, file: !1299, line: 647, type: !1197, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10395)
!10395 = !{!10396, !10397, !10398, !10399}
!10396 = !DILocalVariable(name: "dev", arg: 1, scope: !10394, file: !1299, line: 647, type: !1157)
!10397 = !DILocalVariable(name: "callback", arg: 2, scope: !10394, file: !1299, line: 648, type: !1199)
!10398 = !DILocalVariable(name: "set", arg: 3, scope: !10394, file: !1299, line: 649, type: !131)
!10399 = !DILocalVariable(name: "data", scope: !10394, file: !1299, line: 651, type: !10357)
!10400 = !DILocation(line: 0, scope: !10394)
!10401 = !DILocation(line: 651, column: 38, scope: !10394)
!10402 = !DILocation(line: 653, column: 37, scope: !10394)
!10403 = !DILocation(line: 653, column: 9, scope: !10394)
!10404 = !DILocation(line: 653, column: 2, scope: !10394)
!10405 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10406, file: !10406, line: 38, type: !10407, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10410)
!10406 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10407 = !DISubroutineType(types: !10408)
!10408 = !{!103, !10409, !1199, !131}
!10409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!10410 = !{!10411, !10412, !10413}
!10411 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10405, file: !10406, line: 38, type: !10409)
!10412 = !DILocalVariable(name: "callback", arg: 2, scope: !10405, file: !10406, line: 39, type: !1199)
!10413 = !DILocalVariable(name: "set", arg: 3, scope: !10405, file: !10406, line: 40, type: !131)
!10414 = !DILocation(line: 0, scope: !10405)
!10415 = !DILocation(line: 45, column: 7, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10405, file: !10406, line: 45, column: 6)
!10417 = !DILocation(line: 45, column: 6, scope: !10405)
!10418 = !DILocation(line: 46, column: 56, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !10406, line: 46, column: 7)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !10406, line: 45, column: 38)
!10421 = !DILocation(line: 46, column: 8, scope: !10419)
!10422 = !DILocation(line: 46, column: 7, scope: !10420)
!10423 = !DILocation(line: 51, column: 13, scope: !10416)
!10424 = !DILocation(line: 56, column: 43, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10426, file: !10406, line: 55, column: 11)
!10426 = distinct !DILexicalBlock(scope: !10405, file: !10406, line: 55, column: 6)
!10427 = !DILocation(line: 56, column: 3, scope: !10425)
!10428 = !DILocation(line: 57, column: 2, scope: !10425)
!10429 = !DILocation(line: 60, column: 1, scope: !10405)
!10430 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1204, file: !1204, line: 261, type: !10431, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10433)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{!131, !10409}
!10433 = !{!10434}
!10434 = !DILocalVariable(name: "list", arg: 1, scope: !10430, file: !1204, line: 261, type: !10409)
!10435 = !DILocation(line: 0, scope: !10430)
!10436 = !DILocation(line: 261, column: 1, scope: !10430)
!10437 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1204, file: !1204, line: 417, type: !10438, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10440)
!10438 = !DISubroutineType(types: !10439)
!10439 = !{!131, !10409, !1375}
!10440 = !{!10441, !10442, !10443, !10444}
!10441 = !DILocalVariable(name: "list", arg: 1, scope: !10437, file: !1204, line: 417, type: !10409)
!10442 = !DILocalVariable(name: "node", arg: 2, scope: !10437, file: !1204, line: 417, type: !1375)
!10443 = !DILocalVariable(name: "prev", scope: !10437, file: !1204, line: 417, type: !1375)
!10444 = !DILocalVariable(name: "test", scope: !10437, file: !1204, line: 417, type: !1375)
!10445 = !DILocation(line: 0, scope: !10437)
!10446 = !DILocation(line: 417, column: 1, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10437, file: !1204, line: 417, column: 1)
!10448 = !DILocation(line: 417, column: 1, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10447, file: !1204, line: 417, column: 1)
!10450 = !DILocation(line: 417, column: 1, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10452, file: !1204, line: 417, column: 1)
!10452 = distinct !DILexicalBlock(scope: !10449, file: !1204, line: 417, column: 1)
!10453 = !DILocation(line: 417, column: 1, scope: !10452)
!10454 = distinct !{!10454, !10446, !10446}
!10455 = !DILocation(line: 417, column: 1, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10451, file: !1204, line: 417, column: 1)
!10457 = !DILocation(line: 417, column: 1, scope: !10437)
!10458 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1204, file: !1204, line: 298, type: !10459, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10461)
!10459 = !DISubroutineType(types: !10460)
!10460 = !{null, !10409, !1375}
!10461 = !{!10462, !10463}
!10462 = !DILocalVariable(name: "list", arg: 1, scope: !10458, file: !1204, line: 298, type: !10409)
!10463 = !DILocalVariable(name: "node", arg: 2, scope: !10458, file: !1204, line: 298, type: !1375)
!10464 = !DILocation(line: 0, scope: !10458)
!10465 = !DILocation(line: 298, column: 1, scope: !10458)
!10466 = !DILocation(line: 298, column: 1, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10458, file: !1204, line: 298, column: 1)
!10468 = !DILocation(line: 298, column: 1, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10467, file: !1204, line: 298, column: 1)
!10470 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1204, file: !1204, line: 231, type: !10471, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10473)
!10471 = !DISubroutineType(types: !10472)
!10472 = !{!1375, !10409}
!10473 = !{!10474}
!10474 = !DILocalVariable(name: "list", arg: 1, scope: !10470, file: !1204, line: 231, type: !10409)
!10475 = !DILocation(line: 0, scope: !10470)
!10476 = !DILocation(line: 233, column: 15, scope: !10470)
!10477 = !DILocation(line: 233, column: 2, scope: !10470)
!10478 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1204, file: !1204, line: 209, type: !10479, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10481)
!10479 = !DISubroutineType(types: !10480)
!10480 = !{null, !1375, !1375}
!10481 = !{!10482, !10483}
!10482 = !DILocalVariable(name: "parent", arg: 1, scope: !10478, file: !1204, line: 209, type: !1375)
!10483 = !DILocalVariable(name: "child", arg: 2, scope: !10478, file: !1204, line: 209, type: !1375)
!10484 = !DILocation(line: 0, scope: !10478)
!10485 = !DILocation(line: 211, column: 10, scope: !10478)
!10486 = !DILocation(line: 211, column: 15, scope: !10478)
!10487 = !DILocation(line: 212, column: 1, scope: !10478)
!10488 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1204, file: !1204, line: 214, type: !10459, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10489)
!10489 = !{!10490, !10491}
!10490 = !DILocalVariable(name: "list", arg: 1, scope: !10488, file: !1204, line: 214, type: !10409)
!10491 = !DILocalVariable(name: "node", arg: 2, scope: !10488, file: !1204, line: 214, type: !1375)
!10492 = !DILocation(line: 0, scope: !10488)
!10493 = !DILocation(line: 216, column: 8, scope: !10488)
!10494 = !DILocation(line: 216, column: 13, scope: !10488)
!10495 = !DILocation(line: 217, column: 1, scope: !10488)
!10496 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1204, file: !1204, line: 243, type: !10471, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10497)
!10497 = !{!10498}
!10498 = !DILocalVariable(name: "list", arg: 1, scope: !10496, file: !1204, line: 243, type: !10409)
!10499 = !DILocation(line: 0, scope: !10496)
!10500 = !DILocation(line: 245, column: 15, scope: !10496)
!10501 = !DILocation(line: 245, column: 2, scope: !10496)
!10502 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1204, file: !1204, line: 219, type: !10459, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10503)
!10503 = !{!10504, !10505}
!10504 = !DILocalVariable(name: "list", arg: 1, scope: !10502, file: !1204, line: 219, type: !10409)
!10505 = !DILocalVariable(name: "node", arg: 2, scope: !10502, file: !1204, line: 219, type: !1375)
!10506 = !DILocation(line: 0, scope: !10502)
!10507 = !DILocation(line: 221, column: 8, scope: !10502)
!10508 = !DILocation(line: 221, column: 13, scope: !10502)
!10509 = !DILocation(line: 222, column: 1, scope: !10502)
!10510 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1204, file: !1204, line: 401, type: !10511, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10513)
!10511 = !DISubroutineType(types: !10512)
!10512 = !{null, !10409, !1375, !1375}
!10513 = !{!10514, !10515, !10516}
!10514 = !DILocalVariable(name: "list", arg: 1, scope: !10510, file: !1204, line: 401, type: !10409)
!10515 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10510, file: !1204, line: 401, type: !1375)
!10516 = !DILocalVariable(name: "node", arg: 3, scope: !10510, file: !1204, line: 401, type: !1375)
!10517 = !DILocation(line: 0, scope: !10510)
!10518 = !DILocation(line: 401, column: 1, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10510, file: !1204, line: 401, column: 1)
!10520 = !DILocation(line: 0, scope: !10519)
!10521 = !DILocation(line: 401, column: 1, scope: !10510)
!10522 = !DILocation(line: 401, column: 1, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10519, file: !1204, line: 401, column: 1)
!10524 = !DILocation(line: 401, column: 1, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10523, file: !1204, line: 401, column: 1)
!10526 = !DILocation(line: 401, column: 1, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10525, file: !1204, line: 401, column: 1)
!10528 = !DILocation(line: 401, column: 1, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10519, file: !1204, line: 401, column: 1)
!10530 = !DILocation(line: 401, column: 1, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10529, file: !1204, line: 401, column: 1)
!10532 = !DILocation(line: 401, column: 1, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10531, file: !1204, line: 401, column: 1)
!10534 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1204, file: !1204, line: 285, type: !10535, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10537)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{!1375, !1375}
!10537 = !{!10538}
!10538 = !DILocalVariable(name: "node", arg: 1, scope: !10534, file: !1204, line: 285, type: !1375)
!10539 = !DILocation(line: 0, scope: !10534)
!10540 = !DILocation(line: 285, column: 1, scope: !10534)
!10541 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1204, file: !1204, line: 274, type: !10535, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10542)
!10542 = !{!10543}
!10543 = !DILocalVariable(name: "node", arg: 1, scope: !10541, file: !1204, line: 274, type: !1375)
!10544 = !DILocation(line: 0, scope: !10541)
!10545 = !DILocation(line: 274, column: 1, scope: !10541)
!10546 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1204, file: !1204, line: 204, type: !10535, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10547)
!10547 = !{!10548}
!10548 = !DILocalVariable(name: "node", arg: 1, scope: !10546, file: !1204, line: 204, type: !1375)
!10549 = !DILocation(line: 0, scope: !10546)
!10550 = !DILocation(line: 206, column: 15, scope: !10546)
!10551 = !DILocation(line: 206, column: 2, scope: !10546)
!10552 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1299, file: !1299, line: 342, type: !396, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10553)
!10553 = !{!10554, !10555, !10556}
!10554 = !DILocalVariable(name: "pin", arg: 1, scope: !10552, file: !1299, line: 342, type: !103)
!10555 = !DILocalVariable(name: "line", scope: !10552, file: !1299, line: 344, type: !108)
!10556 = !DILocalVariable(name: "port", scope: !10552, file: !1299, line: 345, type: !103)
!10557 = !DILocation(line: 0, scope: !10552)
!10558 = !DILocation(line: 344, column: 18, scope: !10552)
!10559 = !{i32 983040, i32 0}
!10560 = !DILocation(line: 356, column: 9, scope: !10552)
!10561 = !DILocation(line: 370, column: 2, scope: !10552)
!10562 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1299, file: !1299, line: 37, type: !849, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10563)
!10563 = !{!10564, !10565, !10566}
!10564 = !DILocalVariable(name: "line", arg: 1, scope: !10562, file: !1299, line: 37, type: !103)
!10565 = !DILocalVariable(name: "arg", arg: 2, scope: !10562, file: !1299, line: 37, type: !102)
!10566 = !DILocalVariable(name: "data", scope: !10562, file: !1299, line: 39, type: !10357)
!10567 = !DILocation(line: 0, scope: !10562)
!10568 = !DILocation(line: 41, column: 29, scope: !10562)
!10569 = !DILocation(line: 41, column: 39, scope: !10562)
!10570 = !DILocation(line: 41, column: 44, scope: !10562)
!10571 = !DILocation(line: 41, column: 2, scope: !10562)
!10572 = !DILocation(line: 42, column: 1, scope: !10562)
!10573 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1299, file: !1299, line: 376, type: !10574, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10576)
!10574 = !DISubroutineType(types: !10575)
!10575 = !{!103, !103, !103}
!10576 = !{!10577, !10578, !10579, !10581, !10582}
!10577 = !DILocalVariable(name: "port", arg: 1, scope: !10573, file: !1299, line: 376, type: !103)
!10578 = !DILocalVariable(name: "pin", arg: 2, scope: !10573, file: !1299, line: 376, type: !103)
!10579 = !DILocalVariable(name: "clk", scope: !10573, file: !1299, line: 386, type: !10580)
!10580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!10581 = !DILocalVariable(name: "pclken", scope: !10573, file: !1299, line: 387, type: !1418)
!10582 = !DILocalVariable(name: "ret", scope: !10573, file: !1299, line: 396, type: !103)
!10583 = !DILocation(line: 0, scope: !10573)
!10584 = !DILocation(line: 387, column: 2, scope: !10573)
!10585 = !DILocation(line: 387, column: 22, scope: !10573)
!10586 = !DILocation(line: 399, column: 8, scope: !10573)
!10587 = !DILocation(line: 400, column: 10, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10573, file: !1299, line: 400, column: 6)
!10589 = !DILocation(line: 400, column: 6, scope: !10573)
!10590 = !DILocation(line: 405, column: 2, scope: !10573)
!10591 = !DILocation(line: 407, column: 2, scope: !10573)
!10592 = !DILocation(line: 408, column: 1, scope: !10573)
!10593 = distinct !DISubprogram(name: "clock_control_on", scope: !935, file: !935, line: 123, type: !1264, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10594)
!10594 = !{!10595, !10596, !10597}
!10595 = !DILocalVariable(name: "dev", arg: 1, scope: !10593, file: !935, line: 123, type: !1157)
!10596 = !DILocalVariable(name: "sys", arg: 2, scope: !10593, file: !935, line: 124, type: !1028)
!10597 = !DILocalVariable(name: "api", scope: !10593, file: !935, line: 126, type: !1257)
!10598 = !DILocation(line: 0, scope: !10593)
!10599 = !DILocation(line: 127, column: 49, scope: !10593)
!10600 = !DILocation(line: 129, column: 14, scope: !10593)
!10601 = !DILocation(line: 129, column: 9, scope: !10593)
!10602 = !DILocation(line: 129, column: 2, scope: !10593)
!10603 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1299, file: !1299, line: 311, type: !9723, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10604)
!10604 = !{!10605, !10606, !10607}
!10605 = !DILocalVariable(name: "port", arg: 1, scope: !10603, file: !1299, line: 311, type: !103)
!10606 = !DILocalVariable(name: "pin", arg: 2, scope: !10603, file: !1299, line: 311, type: !103)
!10607 = !DILocalVariable(name: "line", scope: !10603, file: !1299, line: 313, type: !108)
!10608 = !DILocation(line: 0, scope: !10603)
!10609 = !DILocation(line: 313, column: 18, scope: !10603)
!10610 = !DILocation(line: 337, column: 2, scope: !10603)
!10611 = !DILocation(line: 340, column: 1, scope: !10603)
!10612 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1299, file: !1299, line: 295, type: !10613, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10615)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{!108, !103}
!10615 = !{!10616}
!10616 = !DILocalVariable(name: "pin", arg: 1, scope: !10612, file: !1299, line: 295, type: !103)
!10617 = !DILocation(line: 0, scope: !10612)
!10618 = !DILocation(line: 307, column: 46, scope: !10612)
!10619 = !DILocation(line: 307, column: 27, scope: !10612)
!10620 = !DILocation(line: 307, column: 32, scope: !10612)
!10621 = !DILocation(line: 307, column: 14, scope: !10612)
!10622 = !DILocation(line: 307, column: 39, scope: !10612)
!10623 = !DILocation(line: 307, column: 2, scope: !10612)
!10624 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7018, file: !7018, line: 671, type: !10625, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10627)
!10625 = !DISubroutineType(types: !10626)
!10626 = !{null, !108, !108}
!10627 = !{!10628, !10629}
!10628 = !DILocalVariable(name: "Port", arg: 1, scope: !10624, file: !7018, line: 671, type: !108)
!10629 = !DILocalVariable(name: "Line", arg: 2, scope: !10624, file: !7018, line: 671, type: !108)
!10630 = !DILocation(line: 0, scope: !10624)
!10631 = !DILocation(line: 673, column: 3, scope: !10624)
!10632 = !DILocalVariable(name: "value", arg: 1, scope: !10633, file: !7315, line: 373, type: !108)
!10633 = distinct !DISubprogram(name: "__RBIT", scope: !7315, file: !7315, line: 373, type: !8558, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10634)
!10634 = !{!10632, !10635}
!10635 = !DILocalVariable(name: "result", scope: !10633, file: !7315, line: 375, type: !108)
!10636 = !DILocation(line: 0, scope: !10633, inlinedAt: !10637)
!10637 = distinct !DILocation(line: 673, column: 3, scope: !10624)
!10638 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10637)
!10639 = !{i64 3501307}
!10640 = !DILocalVariable(name: "value", arg: 1, scope: !10641, file: !7315, line: 403, type: !108)
!10641 = distinct !DISubprogram(name: "__CLZ", scope: !7315, file: !7315, line: 403, type: !10642, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10644)
!10642 = !DISubroutineType(types: !10643)
!10643 = !{!185, !108}
!10644 = !{!10640}
!10645 = !DILocation(line: 0, scope: !10641, inlinedAt: !10646)
!10646 = distinct !DILocation(line: 673, column: 3, scope: !10624)
!10647 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10646)
!10648 = !DILocation(line: 674, column: 1, scope: !10624)
!10649 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10406, file: !10406, line: 69, type: !10650, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10652)
!10650 = !DISubroutineType(types: !10651)
!10651 = !{null, !10409, !1157, !108}
!10652 = !{!10653, !10654, !10655, !10656, !10657}
!10653 = !DILocalVariable(name: "list", arg: 1, scope: !10649, file: !10406, line: 69, type: !10409)
!10654 = !DILocalVariable(name: "port", arg: 2, scope: !10649, file: !10406, line: 70, type: !1157)
!10655 = !DILocalVariable(name: "pins", arg: 3, scope: !10649, file: !10406, line: 71, type: !108)
!10656 = !DILocalVariable(name: "cb", scope: !10649, file: !10406, line: 73, type: !1199)
!10657 = !DILocalVariable(name: "tmp", scope: !10649, file: !10406, line: 73, type: !1199)
!10658 = !DILocation(line: 0, scope: !10649)
!10659 = !DILocation(line: 75, column: 2, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10649, file: !10406, line: 75, column: 2)
!10661 = !DILocation(line: 0, scope: !10660)
!10662 = !DILocation(line: 76, column: 11, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10664, file: !10406, line: 76, column: 7)
!10664 = distinct !DILexicalBlock(scope: !10665, file: !10406, line: 75, column: 57)
!10665 = distinct !DILexicalBlock(scope: !10660, file: !10406, line: 75, column: 2)
!10666 = !DILocation(line: 76, column: 20, scope: !10663)
!10667 = !DILocation(line: 76, column: 7, scope: !10664)
!10668 = !DILocation(line: 78, column: 8, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10663, file: !10406, line: 76, column: 28)
!10670 = !DILocation(line: 78, column: 4, scope: !10669)
!10671 = !DILocation(line: 79, column: 3, scope: !10669)
!10672 = !DILocation(line: 75, column: 2, scope: !10665)
!10673 = !DILocation(line: 81, column: 1, scope: !10649)
!10674 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7018, file: !7018, line: 710, type: !8558, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10675)
!10675 = !{!10676}
!10676 = !DILocalVariable(name: "Line", arg: 1, scope: !10674, file: !7018, line: 710, type: !108)
!10677 = !DILocation(line: 0, scope: !10674)
!10678 = !DILocation(line: 712, column: 21, scope: !10674)
!10679 = !DILocation(line: 0, scope: !10633, inlinedAt: !10680)
!10680 = distinct !DILocation(line: 712, column: 76, scope: !10674)
!10681 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10680)
!10682 = !DILocation(line: 0, scope: !10641, inlinedAt: !10683)
!10683 = distinct !DILocation(line: 712, column: 76, scope: !10674)
!10684 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10683)
!10685 = !DILocation(line: 712, column: 73, scope: !10674)
!10686 = !DILocation(line: 712, column: 3, scope: !10674)
!10687 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10688, file: !10688, line: 910, type: !10689, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10691)
!10688 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10689 = !DISubroutineType(types: !10690)
!10690 = !{null, !1230, !108}
!10691 = !{!10692, !10693}
!10692 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10687, file: !10688, line: 910, type: !1230)
!10693 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10687, file: !10688, line: 910, type: !108)
!10694 = !DILocation(line: 0, scope: !10687)
!10695 = !DILocation(line: 912, column: 3, scope: !10687)
!10696 = !DILocation(line: 913, column: 1, scope: !10687)
!10697 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10688, file: !10688, line: 823, type: !10698, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10700)
!10698 = !DISubroutineType(types: !10699)
!10699 = !{!108, !1230}
!10700 = !{!10701}
!10701 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10697, file: !10688, line: 823, type: !1230)
!10702 = !DILocation(line: 0, scope: !10697)
!10703 = !DILocation(line: 825, column: 21, scope: !10697)
!10704 = !DILocation(line: 825, column: 3, scope: !10697)
!10705 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10688, file: !10688, line: 812, type: !10689, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10706)
!10706 = !{!10707, !10708}
!10707 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10705, file: !10688, line: 812, type: !1230)
!10708 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10705, file: !10688, line: 812, type: !108)
!10709 = !DILocation(line: 0, scope: !10705)
!10710 = !DILocation(line: 814, column: 3, scope: !10705)
!10711 = !DILocation(line: 815, column: 1, scope: !10705)
!10712 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10688, file: !10688, line: 771, type: !10698, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10713)
!10713 = !{!10714}
!10714 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10712, file: !10688, line: 771, type: !1230)
!10715 = !DILocation(line: 0, scope: !10712)
!10716 = !DILocation(line: 773, column: 21, scope: !10712)
!10717 = !DILocation(line: 773, column: 3, scope: !10712)
!10718 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1299, file: !1299, line: 47, type: !10719, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10721)
!10719 = !DISubroutineType(types: !10720)
!10720 = !{!103, !1173, !374}
!10721 = !{!10722, !10723}
!10722 = !DILocalVariable(name: "flags", arg: 1, scope: !10718, file: !1299, line: 47, type: !1173)
!10723 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10718, file: !1299, line: 47, type: !374)
!10724 = !DILocation(line: 0, scope: !10718)
!10725 = !DILocation(line: 50, column: 13, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10718, file: !1299, line: 50, column: 6)
!10727 = !DILocation(line: 50, column: 28, scope: !10726)
!10728 = !DILocation(line: 50, column: 6, scope: !10718)
!10729 = !DILocation(line: 53, column: 11, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10726, file: !1299, line: 50, column: 34)
!10731 = !DILocation(line: 55, column: 14, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10730, file: !1299, line: 55, column: 7)
!10733 = !DILocation(line: 55, column: 35, scope: !10732)
!10734 = !DILocation(line: 55, column: 7, scope: !10730)
!10735 = !DILocation(line: 56, column: 14, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10737, file: !1299, line: 56, column: 8)
!10737 = distinct !DILexicalBlock(scope: !10732, file: !1299, line: 55, column: 41)
!10738 = !DILocation(line: 56, column: 8, scope: !10737)
!10739 = !DILocation(line: 0, scope: !10732)
!10740 = !DILocation(line: 66, column: 14, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10730, file: !1299, line: 66, column: 7)
!10742 = !DILocation(line: 66, column: 30, scope: !10741)
!10743 = !DILocation(line: 66, column: 7, scope: !10730)
!10744 = !DILocation(line: 67, column: 12, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10741, file: !1299, line: 66, column: 36)
!10746 = !DILocation(line: 68, column: 3, scope: !10745)
!10747 = !DILocation(line: 68, column: 21, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10741, file: !1299, line: 68, column: 14)
!10749 = !DILocation(line: 68, column: 39, scope: !10748)
!10750 = !DILocation(line: 68, column: 14, scope: !10741)
!10751 = !DILocation(line: 69, column: 12, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10748, file: !1299, line: 68, column: 45)
!10753 = !DILocation(line: 70, column: 3, scope: !10752)
!10754 = !DILocation(line: 72, column: 21, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10726, file: !1299, line: 72, column: 14)
!10756 = !DILocation(line: 72, column: 35, scope: !10755)
!10757 = !DILocation(line: 72, column: 14, scope: !10726)
!10758 = !DILocation(line: 77, column: 14, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10760, file: !1299, line: 77, column: 7)
!10760 = distinct !DILexicalBlock(scope: !10755, file: !1299, line: 72, column: 41)
!10761 = !DILocation(line: 77, column: 30, scope: !10759)
!10762 = !DILocation(line: 77, column: 7, scope: !10760)
!10763 = !DILocation(line: 0, scope: !10726)
!10764 = !DILocation(line: 90, column: 1, scope: !10718)
!10765 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1299, file: !1299, line: 157, type: !10766, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10768)
!10766 = !DISubroutineType(types: !10767)
!10767 = !{null, !1157, !103, !103, !103}
!10768 = !{!10769, !10770, !10771, !10772, !10773, !10774, !10775, !10776, !10777, !10778, !10779}
!10769 = !DILocalVariable(name: "dev", arg: 1, scope: !10765, file: !1299, line: 157, type: !1157)
!10770 = !DILocalVariable(name: "pin", arg: 2, scope: !10765, file: !1299, line: 157, type: !103)
!10771 = !DILocalVariable(name: "conf", arg: 3, scope: !10765, file: !1299, line: 158, type: !103)
!10772 = !DILocalVariable(name: "func", arg: 4, scope: !10765, file: !1299, line: 158, type: !103)
!10773 = !DILocalVariable(name: "cfg", scope: !10765, file: !1299, line: 160, type: !10290)
!10774 = !DILocalVariable(name: "gpio", scope: !10765, file: !1299, line: 161, type: !1230)
!10775 = !DILocalVariable(name: "pin_ll", scope: !10765, file: !1299, line: 163, type: !103)
!10776 = !DILocalVariable(name: "mode", scope: !10765, file: !1299, line: 227, type: !32)
!10777 = !DILocalVariable(name: "otype", scope: !10765, file: !1299, line: 227, type: !32)
!10778 = !DILocalVariable(name: "ospeed", scope: !10765, file: !1299, line: 227, type: !32)
!10779 = !DILocalVariable(name: "pupd", scope: !10765, file: !1299, line: 227, type: !32)
!10780 = !DILocation(line: 0, scope: !10765)
!10781 = !DILocation(line: 160, column: 45, scope: !10765)
!10782 = !DILocation(line: 161, column: 44, scope: !10765)
!10783 = !DILocation(line: 163, column: 15, scope: !10765)
!10784 = !DILocation(line: 229, column: 14, scope: !10765)
!10785 = !DILocation(line: 246, column: 47, scope: !10765)
!10786 = !DILocation(line: 246, column: 2, scope: !10765)
!10787 = !DILocation(line: 248, column: 43, scope: !10765)
!10788 = !DILocation(line: 248, column: 2, scope: !10765)
!10789 = !DILocation(line: 250, column: 40, scope: !10765)
!10790 = !DILocation(line: 250, column: 2, scope: !10765)
!10791 = !DILocation(line: 252, column: 11, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10765, file: !1299, line: 252, column: 6)
!10793 = !DILocation(line: 252, column: 6, scope: !10765)
!10794 = !DILocation(line: 253, column: 11, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !1299, line: 253, column: 7)
!10796 = distinct !DILexicalBlock(scope: !10792, file: !1299, line: 252, column: 36)
!10797 = !DILocation(line: 253, column: 7, scope: !10796)
!10798 = !DILocation(line: 254, column: 4, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10795, file: !1299, line: 253, column: 16)
!10800 = !DILocation(line: 255, column: 3, scope: !10799)
!10801 = !DILocation(line: 256, column: 4, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10795, file: !1299, line: 255, column: 10)
!10803 = !DILocation(line: 260, column: 40, scope: !10765)
!10804 = !DILocation(line: 260, column: 2, scope: !10765)
!10805 = !DILocation(line: 265, column: 1, scope: !10765)
!10806 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1299, file: !1299, line: 137, type: !10613, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10807)
!10807 = !{!10808, !10809}
!10808 = !DILocalVariable(name: "pin", arg: 1, scope: !10806, file: !1299, line: 137, type: !103)
!10809 = !DILocalVariable(name: "pinval", scope: !10806, file: !1299, line: 139, type: !108)
!10810 = !DILocation(line: 0, scope: !10806)
!10811 = !DILocation(line: 149, column: 13, scope: !10806)
!10812 = !DILocation(line: 151, column: 2, scope: !10806)
!10813 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10688, file: !10688, line: 342, type: !10814, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10816)
!10814 = !DISubroutineType(types: !10815)
!10815 = !{null, !1230, !108, !108}
!10816 = !{!10817, !10818, !10819}
!10817 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10813, file: !10688, line: 342, type: !1230)
!10818 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10813, file: !10688, line: 342, type: !108)
!10819 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10813, file: !10688, line: 342, type: !108)
!10820 = !DILocation(line: 0, scope: !10813)
!10821 = !DILocation(line: 344, column: 3, scope: !10813)
!10822 = !DILocation(line: 345, column: 1, scope: !10813)
!10823 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10688, file: !10688, line: 413, type: !10814, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10824)
!10824 = !{!10825, !10826, !10827}
!10825 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10823, file: !10688, line: 413, type: !1230)
!10826 = !DILocalVariable(name: "Pin", arg: 2, scope: !10823, file: !10688, line: 413, type: !108)
!10827 = !DILocalVariable(name: "Speed", arg: 3, scope: !10823, file: !10688, line: 413, type: !108)
!10828 = !DILocation(line: 0, scope: !10823)
!10829 = !DILocation(line: 415, column: 3, scope: !10823)
!10830 = !DILocation(line: 0, scope: !10633, inlinedAt: !10831)
!10831 = distinct !DILocation(line: 415, column: 3, scope: !10823)
!10832 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10831)
!10833 = !DILocation(line: 0, scope: !10641, inlinedAt: !10834)
!10834 = distinct !DILocation(line: 415, column: 3, scope: !10823)
!10835 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10834)
!10836 = !DILocation(line: 0, scope: !10633, inlinedAt: !10837)
!10837 = distinct !DILocation(line: 415, column: 3, scope: !10823)
!10838 = !DILocation(line: 0, scope: !10641, inlinedAt: !10839)
!10839 = distinct !DILocation(line: 415, column: 3, scope: !10823)
!10840 = !DILocation(line: 417, column: 1, scope: !10823)
!10841 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10688, file: !10688, line: 484, type: !10814, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10842)
!10842 = !{!10843, !10844, !10845}
!10843 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10841, file: !10688, line: 484, type: !1230)
!10844 = !DILocalVariable(name: "Pin", arg: 2, scope: !10841, file: !10688, line: 484, type: !108)
!10845 = !DILocalVariable(name: "Pull", arg: 3, scope: !10841, file: !10688, line: 484, type: !108)
!10846 = !DILocation(line: 0, scope: !10841)
!10847 = !DILocation(line: 486, column: 3, scope: !10841)
!10848 = !DILocation(line: 0, scope: !10633, inlinedAt: !10849)
!10849 = distinct !DILocation(line: 486, column: 3, scope: !10841)
!10850 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10849)
!10851 = !DILocation(line: 0, scope: !10641, inlinedAt: !10852)
!10852 = distinct !DILocation(line: 486, column: 3, scope: !10841)
!10853 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10852)
!10854 = !DILocation(line: 0, scope: !10633, inlinedAt: !10855)
!10855 = distinct !DILocation(line: 486, column: 3, scope: !10841)
!10856 = !DILocation(line: 0, scope: !10641, inlinedAt: !10857)
!10857 = distinct !DILocation(line: 486, column: 3, scope: !10841)
!10858 = !DILocation(line: 487, column: 1, scope: !10841)
!10859 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10688, file: !10688, line: 556, type: !10814, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10860)
!10860 = !{!10861, !10862, !10863}
!10861 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10859, file: !10688, line: 556, type: !1230)
!10862 = !DILocalVariable(name: "Pin", arg: 2, scope: !10859, file: !10688, line: 556, type: !108)
!10863 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10859, file: !10688, line: 556, type: !108)
!10864 = !DILocation(line: 0, scope: !10859)
!10865 = !DILocation(line: 558, column: 3, scope: !10859)
!10866 = !DILocation(line: 0, scope: !10633, inlinedAt: !10867)
!10867 = distinct !DILocation(line: 558, column: 3, scope: !10859)
!10868 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10867)
!10869 = !DILocation(line: 0, scope: !10641, inlinedAt: !10870)
!10870 = distinct !DILocation(line: 558, column: 3, scope: !10859)
!10871 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10870)
!10872 = !DILocation(line: 0, scope: !10633, inlinedAt: !10873)
!10873 = distinct !DILocation(line: 558, column: 3, scope: !10859)
!10874 = !DILocation(line: 0, scope: !10641, inlinedAt: !10875)
!10875 = distinct !DILocation(line: 558, column: 3, scope: !10859)
!10876 = !DILocation(line: 560, column: 1, scope: !10859)
!10877 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10688, file: !10688, line: 633, type: !10814, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10878)
!10878 = !{!10879, !10880, !10881}
!10879 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10877, file: !10688, line: 633, type: !1230)
!10880 = !DILocalVariable(name: "Pin", arg: 2, scope: !10877, file: !10688, line: 633, type: !108)
!10881 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10877, file: !10688, line: 633, type: !108)
!10882 = !DILocation(line: 0, scope: !10877)
!10883 = !DILocation(line: 635, column: 3, scope: !10877)
!10884 = !DILocation(line: 0, scope: !10633, inlinedAt: !10885)
!10885 = distinct !DILocation(line: 635, column: 3, scope: !10877)
!10886 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10885)
!10887 = !DILocation(line: 0, scope: !10641, inlinedAt: !10888)
!10888 = distinct !DILocation(line: 635, column: 3, scope: !10877)
!10889 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10888)
!10890 = !DILocation(line: 0, scope: !10633, inlinedAt: !10891)
!10891 = distinct !DILocation(line: 635, column: 3, scope: !10877)
!10892 = !DILocation(line: 0, scope: !10641, inlinedAt: !10893)
!10893 = distinct !DILocation(line: 635, column: 3, scope: !10877)
!10894 = !DILocation(line: 637, column: 1, scope: !10877)
!10895 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10688, file: !10688, line: 273, type: !10814, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10896)
!10896 = !{!10897, !10898, !10899}
!10897 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10895, file: !10688, line: 273, type: !1230)
!10898 = !DILocalVariable(name: "Pin", arg: 2, scope: !10895, file: !10688, line: 273, type: !108)
!10899 = !DILocalVariable(name: "Mode", arg: 3, scope: !10895, file: !10688, line: 273, type: !108)
!10900 = !DILocation(line: 0, scope: !10895)
!10901 = !DILocation(line: 275, column: 3, scope: !10895)
!10902 = !DILocation(line: 0, scope: !10633, inlinedAt: !10903)
!10903 = distinct !DILocation(line: 275, column: 3, scope: !10895)
!10904 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10903)
!10905 = !DILocation(line: 0, scope: !10641, inlinedAt: !10906)
!10906 = distinct !DILocation(line: 275, column: 3, scope: !10895)
!10907 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10906)
!10908 = !DILocation(line: 0, scope: !10633, inlinedAt: !10909)
!10909 = distinct !DILocation(line: 275, column: 3, scope: !10895)
!10910 = !DILocation(line: 0, scope: !10641, inlinedAt: !10911)
!10911 = distinct !DILocation(line: 275, column: 3, scope: !10895)
!10912 = !DILocation(line: 276, column: 1, scope: !10895)
!10913 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1299, file: !1299, line: 698, type: !1312, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10914)
!10914 = !{!10915, !10916, !10917}
!10915 = !DILocalVariable(name: "dev", arg: 1, scope: !10913, file: !1299, line: 698, type: !1157)
!10916 = !DILocalVariable(name: "data", scope: !10913, file: !1299, line: 700, type: !10357)
!10917 = !DILocalVariable(name: "ret", scope: !10913, file: !1299, line: 701, type: !103)
!10918 = !DILocation(line: 0, scope: !10913)
!10919 = !DILocation(line: 700, column: 38, scope: !10913)
!10920 = !DILocation(line: 703, column: 8, scope: !10913)
!10921 = !DILocation(line: 703, column: 12, scope: !10913)
!10922 = !DILocation(line: 705, column: 7, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10913, file: !1299, line: 705, column: 6)
!10924 = !DILocation(line: 705, column: 6, scope: !10913)
!10925 = !DILocation(line: 722, column: 8, scope: !10913)
!10926 = !DILocation(line: 723, column: 10, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10913, file: !1299, line: 723, column: 6)
!10928 = !DILocation(line: 723, column: 6, scope: !10913)
!10929 = !DILocation(line: 731, column: 1, scope: !10913)
!10930 = distinct !DISubprogram(name: "device_is_ready", scope: !10137, file: !10137, line: 47, type: !10931, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10933)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{!131, !1157}
!10933 = !{!10934}
!10934 = !DILocalVariable(name: "dev", arg: 1, scope: !10930, file: !10137, line: 47, type: !1157)
!10935 = !DILocation(line: 0, scope: !10930)
!10936 = !DILocation(line: 55, column: 2, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10930, file: !10137, line: 55, column: 2)
!10938 = !{i64 2154944193}
!10939 = !DILocation(line: 56, column: 9, scope: !10930)
!10940 = !DILocation(line: 56, column: 2, scope: !10930)
!10941 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1299, file: !1299, line: 270, type: !10942, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10944)
!10942 = !DISubroutineType(types: !10943)
!10943 = !{!103, !1157, !131}
!10944 = !{!10945, !10946, !10947, !10948, !10949}
!10945 = !DILocalVariable(name: "dev", arg: 1, scope: !10941, file: !1299, line: 270, type: !1157)
!10946 = !DILocalVariable(name: "on", arg: 2, scope: !10941, file: !1299, line: 270, type: !131)
!10947 = !DILocalVariable(name: "cfg", scope: !10941, file: !1299, line: 272, type: !10290)
!10948 = !DILocalVariable(name: "ret", scope: !10941, file: !1299, line: 273, type: !103)
!10949 = !DILocalVariable(name: "clk", scope: !10941, file: !1299, line: 278, type: !10580)
!10950 = !DILocation(line: 0, scope: !10941)
!10951 = !DILocation(line: 272, column: 45, scope: !10941)
!10952 = !DILocation(line: 282, column: 38, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !1299, line: 280, column: 10)
!10954 = distinct !DILexicalBlock(scope: !10941, file: !1299, line: 280, column: 6)
!10955 = !DILocation(line: 282, column: 6, scope: !10953)
!10956 = !DILocation(line: 281, column: 9, scope: !10953)
!10957 = !DILocation(line: 293, column: 1, scope: !10941)
!10958 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10931, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10959)
!10959 = !{!10960}
!10960 = !DILocalVariable(name: "dev", arg: 1, scope: !10958, file: !429, line: 730, type: !1157)
!10961 = !DILocation(line: 0, scope: !10958)
!10962 = !DILocation(line: 732, column: 9, scope: !10958)
!10963 = !DILocation(line: 732, column: 2, scope: !10958)
!10964 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1299, file: !1299, line: 496, type: !10965, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1128, retainedNodes: !10967)
!10965 = !DISubroutineType(types: !10966)
!10966 = !{!103, !1157, !103, !103, !103}
!10967 = !{!10968, !10969, !10970, !10971, !10972, !10973}
!10968 = !DILocalVariable(name: "dev", arg: 1, scope: !10964, file: !1299, line: 496, type: !1157)
!10969 = !DILocalVariable(name: "pin", arg: 2, scope: !10964, file: !1299, line: 496, type: !103)
!10970 = !DILocalVariable(name: "conf", arg: 3, scope: !10964, file: !1299, line: 496, type: !103)
!10971 = !DILocalVariable(name: "func", arg: 4, scope: !10964, file: !1299, line: 496, type: !103)
!10972 = !DILocalVariable(name: "ret", scope: !10964, file: !1299, line: 498, type: !103)
!10973 = !DILocalVariable(name: "gpio_out", scope: !10974, file: !1299, line: 508, type: !108)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !1299, line: 507, column: 27)
!10975 = distinct !DILexicalBlock(scope: !10964, file: !1299, line: 507, column: 6)
!10976 = !DILocation(line: 0, scope: !10964)
!10977 = !DILocation(line: 505, column: 2, scope: !10964)
!10978 = !DILocation(line: 507, column: 11, scope: !10975)
!10979 = !DILocation(line: 507, column: 6, scope: !10964)
!10980 = !DILocation(line: 508, column: 28, scope: !10974)
!10981 = !DILocation(line: 0, scope: !10974)
!10982 = !DILocation(line: 510, column: 16, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10974, file: !1299, line: 510, column: 7)
!10984 = !DILocation(line: 0, scope: !10983)
!10985 = !DILocation(line: 510, column: 7, scope: !10974)
!10986 = !DILocation(line: 511, column: 4, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10983, file: !1299, line: 510, column: 32)
!10988 = !DILocation(line: 512, column: 3, scope: !10987)
!10989 = !DILocation(line: 513, column: 4, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10991, file: !1299, line: 512, column: 39)
!10991 = distinct !DILexicalBlock(scope: !10983, file: !1299, line: 512, column: 14)
!10992 = !DILocation(line: 514, column: 3, scope: !10990)
!10993 = !DILocation(line: 518, column: 1, scope: !10964)
!10994 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1575, file: !1575, line: 526, type: !1478, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !10995)
!10995 = !{!10996, !10997, !10998}
!10996 = !DILocalVariable(name: "dev", arg: 1, scope: !10994, file: !1575, line: 526, type: !1480)
!10997 = !DILocalVariable(name: "c", arg: 2, scope: !10994, file: !1575, line: 526, type: !1089)
!10998 = !DILocalVariable(name: "config", scope: !10994, file: !1575, line: 528, type: !10999)
!10999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!11000 = !DILocation(line: 0, scope: !10994)
!11001 = !DILocation(line: 528, column: 48, scope: !10994)
!11002 = !DILocation(line: 531, column: 40, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10994, file: !1575, line: 531, column: 6)
!11004 = !DILocation(line: 531, column: 6, scope: !11003)
!11005 = !DILocation(line: 531, column: 6, scope: !10994)
!11006 = !DILocation(line: 532, column: 34, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11003, file: !1575, line: 531, column: 48)
!11008 = !DILocation(line: 532, column: 3, scope: !11007)
!11009 = !DILocation(line: 533, column: 2, scope: !11007)
!11010 = !DILocation(line: 539, column: 42, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10994, file: !1575, line: 539, column: 6)
!11012 = !DILocation(line: 539, column: 7, scope: !11011)
!11013 = !DILocation(line: 539, column: 6, scope: !10994)
!11014 = !DILocation(line: 543, column: 52, scope: !10994)
!11015 = !DILocation(line: 543, column: 22, scope: !10994)
!11016 = !DILocation(line: 543, column: 5, scope: !10994)
!11017 = !DILocation(line: 545, column: 2, scope: !10994)
!11018 = !DILocation(line: 546, column: 1, scope: !10994)
!11019 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1575, file: !1575, line: 548, type: !1497, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11020)
!11020 = !{!11021, !11022, !11023, !11024}
!11021 = !DILocalVariable(name: "dev", arg: 1, scope: !11019, file: !1575, line: 548, type: !1480)
!11022 = !DILocalVariable(name: "c", arg: 2, scope: !11019, file: !1575, line: 549, type: !186)
!11023 = !DILocalVariable(name: "config", scope: !11019, file: !1575, line: 551, type: !10999)
!11024 = !DILocalVariable(name: "key", scope: !11019, file: !1575, line: 555, type: !32)
!11025 = !DILocation(line: 0, scope: !11019)
!11026 = !DILocation(line: 551, column: 48, scope: !11019)
!11027 = !DILocation(line: 562, column: 2, scope: !11019)
!11028 = !DILocation(line: 563, column: 41, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11030, file: !1575, line: 563, column: 7)
!11030 = distinct !DILexicalBlock(scope: !11019, file: !1575, line: 562, column: 12)
!11031 = !DILocation(line: 563, column: 7, scope: !11029)
!11032 = !DILocation(line: 563, column: 7, scope: !11030)
!11033 = !DILocation(line: 55, column: 2, scope: !11034, inlinedAt: !11038)
!11034 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11035)
!11035 = !{!11036, !11037}
!11036 = !DILocalVariable(name: "key", scope: !11034, file: !6997, line: 44, type: !32)
!11037 = !DILocalVariable(name: "tmp", scope: !11034, file: !6997, line: 53, type: !32)
!11038 = distinct !DILocation(line: 564, column: 10, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11029, file: !1575, line: 563, column: 49)
!11040 = !{i64 2289720}
!11041 = !DILocation(line: 0, scope: !11034, inlinedAt: !11038)
!11042 = !DILocation(line: 565, column: 42, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11039, file: !1575, line: 565, column: 8)
!11044 = !DILocation(line: 565, column: 8, scope: !11043)
!11045 = !DILocation(line: 565, column: 8, scope: !11039)
!11046 = !DILocalVariable(name: "key", arg: 1, scope: !11047, file: !6997, line: 84, type: !32)
!11047 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11048)
!11048 = !{!11046}
!11049 = !DILocation(line: 0, scope: !11047, inlinedAt: !11050)
!11050 = distinct !DILocation(line: 568, column: 4, scope: !11039)
!11051 = !DILocation(line: 95, column: 2, scope: !11047, inlinedAt: !11050)
!11052 = !{i64 2290537}
!11053 = !DILocation(line: 569, column: 3, scope: !11039)
!11054 = distinct !{!11054, !11027, !11055}
!11055 = !DILocation(line: 570, column: 2, scope: !11019)
!11056 = !DILocation(line: 592, column: 33, scope: !11019)
!11057 = !DILocation(line: 592, column: 2, scope: !11019)
!11058 = !DILocation(line: 0, scope: !11047, inlinedAt: !11059)
!11059 = distinct !DILocation(line: 593, column: 2, scope: !11019)
!11060 = !DILocation(line: 95, column: 2, scope: !11047, inlinedAt: !11059)
!11061 = !DILocation(line: 594, column: 1, scope: !11019)
!11062 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1575, file: !1575, line: 596, type: !1501, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11063)
!11063 = !{!11064, !11065, !11066}
!11064 = !DILocalVariable(name: "dev", arg: 1, scope: !11062, file: !1575, line: 596, type: !1480)
!11065 = !DILocalVariable(name: "config", scope: !11062, file: !1575, line: 598, type: !10999)
!11066 = !DILocalVariable(name: "err", scope: !11062, file: !1575, line: 599, type: !108)
!11067 = !DILocation(line: 0, scope: !11062)
!11068 = !DILocation(line: 598, column: 48, scope: !11062)
!11069 = !DILocation(line: 606, column: 40, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11062, file: !1575, line: 606, column: 6)
!11071 = !DILocation(line: 606, column: 6, scope: !11070)
!11072 = !DILocation(line: 606, column: 6, scope: !11062)
!11073 = !DILocation(line: 610, column: 39, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11062, file: !1575, line: 610, column: 6)
!11075 = !DILocation(line: 610, column: 6, scope: !11074)
!11076 = !DILocation(line: 610, column: 6, scope: !11062)
!11077 = !DILocation(line: 614, column: 39, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11062, file: !1575, line: 614, column: 6)
!11079 = !DILocation(line: 614, column: 6, scope: !11078)
!11080 = !DILocation(line: 614, column: 6, scope: !11062)
!11081 = !DILocation(line: 619, column: 40, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11062, file: !1575, line: 619, column: 6)
!11083 = !DILocation(line: 619, column: 6, scope: !11082)
!11084 = !DILocation(line: 619, column: 6, scope: !11062)
!11085 = !DILocation(line: 623, column: 10, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11062, file: !1575, line: 623, column: 6)
!11087 = !DILocation(line: 623, column: 6, scope: !11062)
!11088 = !DILocation(line: 624, column: 34, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11086, file: !1575, line: 623, column: 24)
!11090 = !DILocation(line: 624, column: 3, scope: !11089)
!11091 = !DILocation(line: 625, column: 2, scope: !11089)
!11092 = !DILocation(line: 632, column: 10, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11062, file: !1575, line: 632, column: 6)
!11094 = !DILocation(line: 632, column: 6, scope: !11062)
!11095 = !DILocation(line: 633, column: 34, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11093, file: !1575, line: 632, column: 32)
!11097 = !DILocation(line: 633, column: 3, scope: !11096)
!11098 = !DILocation(line: 634, column: 2, scope: !11096)
!11099 = !DILocation(line: 636, column: 10, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11062, file: !1575, line: 636, column: 6)
!11101 = !DILocation(line: 636, column: 6, scope: !11062)
!11102 = !DILocation(line: 637, column: 33, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11100, file: !1575, line: 636, column: 31)
!11104 = !DILocation(line: 637, column: 3, scope: !11103)
!11105 = !DILocation(line: 638, column: 2, scope: !11103)
!11106 = !DILocation(line: 640, column: 10, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11062, file: !1575, line: 640, column: 6)
!11108 = !DILocation(line: 640, column: 6, scope: !11062)
!11109 = !DILocation(line: 641, column: 33, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11107, file: !1575, line: 640, column: 32)
!11111 = !DILocation(line: 641, column: 3, scope: !11110)
!11112 = !DILocation(line: 642, column: 2, scope: !11110)
!11113 = !DILocation(line: 646, column: 32, scope: !11062)
!11114 = !DILocation(line: 646, column: 2, scope: !11062)
!11115 = !DILocation(line: 648, column: 2, scope: !11062)
!11116 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1575, file: !1575, line: 419, type: !1505, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11117)
!11117 = !{!11118, !11119, !11120, !11121, !11123, !11124, !11125, !11126}
!11118 = !DILocalVariable(name: "dev", arg: 1, scope: !11116, file: !1575, line: 419, type: !1480)
!11119 = !DILocalVariable(name: "cfg", arg: 2, scope: !11116, file: !1575, line: 420, type: !1507)
!11120 = !DILocalVariable(name: "config", scope: !11116, file: !1575, line: 422, type: !10999)
!11121 = !DILocalVariable(name: "data", scope: !11116, file: !1575, line: 423, type: !11122)
!11122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!11123 = !DILocalVariable(name: "parity", scope: !11116, file: !1575, line: 424, type: !7581)
!11124 = !DILocalVariable(name: "stopbits", scope: !11116, file: !1575, line: 425, type: !7581)
!11125 = !DILocalVariable(name: "databits", scope: !11116, file: !1575, line: 426, type: !7581)
!11126 = !DILocalVariable(name: "flowctrl", scope: !11116, file: !1575, line: 428, type: !7581)
!11127 = !DILocation(line: 0, scope: !11116)
!11128 = !DILocation(line: 422, column: 48, scope: !11116)
!11129 = !DILocation(line: 423, column: 38, scope: !11116)
!11130 = !DILocation(line: 424, column: 56, scope: !11116)
!11131 = !DILocation(line: 424, column: 51, scope: !11116)
!11132 = !DILocation(line: 424, column: 26, scope: !11116)
!11133 = !DILocation(line: 425, column: 60, scope: !11116)
!11134 = !DILocation(line: 425, column: 55, scope: !11116)
!11135 = !DILocation(line: 425, column: 28, scope: !11116)
!11136 = !DILocation(line: 426, column: 60, scope: !11116)
!11137 = !DILocation(line: 426, column: 55, scope: !11116)
!11138 = !DILocation(line: 426, column: 28, scope: !11116)
!11139 = !DILocation(line: 428, column: 58, scope: !11116)
!11140 = !DILocation(line: 428, column: 53, scope: !11116)
!11141 = !DILocation(line: 428, column: 28, scope: !11116)
!11142 = !DILocation(line: 431, column: 44, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 431, column: 6)
!11144 = !DILocation(line: 438, column: 22, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 437, column: 6)
!11146 = !DILocation(line: 437, column: 6, scope: !11116)
!11147 = !DILocation(line: 448, column: 6, scope: !11116)
!11148 = !DILocation(line: 465, column: 47, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 465, column: 6)
!11150 = !DILocation(line: 475, column: 21, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 475, column: 6)
!11152 = !DILocation(line: 475, column: 6, scope: !11116)
!11153 = !DILocation(line: 476, column: 8, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !1575, line: 476, column: 7)
!11155 = distinct !DILexicalBlock(scope: !11151, file: !1575, line: 475, column: 49)
!11156 = !DILocation(line: 477, column: 34, scope: !11154)
!11157 = !DILocation(line: 476, column: 7, scope: !11155)
!11158 = !DILocation(line: 482, column: 27, scope: !11116)
!11159 = !DILocation(line: 482, column: 2, scope: !11116)
!11160 = !DILocation(line: 484, column: 16, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 484, column: 6)
!11162 = !DILocation(line: 484, column: 13, scope: !11161)
!11163 = !DILocation(line: 484, column: 6, scope: !11116)
!11164 = !DILocation(line: 485, column: 3, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11161, file: !1575, line: 484, column: 44)
!11166 = !DILocation(line: 486, column: 2, scope: !11165)
!11167 = !DILocation(line: 488, column: 18, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 488, column: 6)
!11169 = !DILocation(line: 488, column: 15, scope: !11168)
!11170 = !DILocation(line: 488, column: 6, scope: !11116)
!11171 = !DILocation(line: 489, column: 3, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11168, file: !1575, line: 488, column: 48)
!11173 = !DILocation(line: 490, column: 2, scope: !11172)
!11174 = !DILocation(line: 492, column: 18, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 492, column: 6)
!11176 = !DILocation(line: 492, column: 15, scope: !11175)
!11177 = !DILocation(line: 492, column: 6, scope: !11116)
!11178 = !DILocation(line: 493, column: 3, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11175, file: !1575, line: 492, column: 48)
!11180 = !DILocation(line: 494, column: 2, scope: !11179)
!11181 = !DILocation(line: 496, column: 18, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 496, column: 6)
!11183 = !DILocation(line: 496, column: 15, scope: !11182)
!11184 = !DILocation(line: 496, column: 6, scope: !11116)
!11185 = !DILocation(line: 497, column: 3, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11182, file: !1575, line: 496, column: 46)
!11187 = !DILocation(line: 498, column: 2, scope: !11186)
!11188 = !DILocation(line: 500, column: 11, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11116, file: !1575, line: 500, column: 6)
!11190 = !DILocation(line: 500, column: 29, scope: !11189)
!11191 = !DILocation(line: 500, column: 20, scope: !11189)
!11192 = !DILocation(line: 500, column: 6, scope: !11116)
!11193 = !DILocation(line: 501, column: 3, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11189, file: !1575, line: 500, column: 40)
!11195 = !DILocation(line: 502, column: 26, scope: !11194)
!11196 = !DILocation(line: 502, column: 19, scope: !11194)
!11197 = !DILocation(line: 503, column: 2, scope: !11194)
!11198 = !DILocation(line: 505, column: 26, scope: !11116)
!11199 = !DILocation(line: 505, column: 2, scope: !11116)
!11200 = !DILocation(line: 506, column: 2, scope: !11116)
!11201 = !DILocation(line: 507, column: 1, scope: !11116)
!11202 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1575, file: !1575, line: 509, type: !1518, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11203)
!11203 = !{!11204, !11205, !11206}
!11204 = !DILocalVariable(name: "dev", arg: 1, scope: !11202, file: !1575, line: 509, type: !1480)
!11205 = !DILocalVariable(name: "cfg", arg: 2, scope: !11202, file: !1575, line: 510, type: !1520)
!11206 = !DILocalVariable(name: "data", scope: !11202, file: !1575, line: 512, type: !11122)
!11207 = !DILocation(line: 0, scope: !11202)
!11208 = !DILocation(line: 512, column: 38, scope: !11202)
!11209 = !DILocation(line: 514, column: 24, scope: !11202)
!11210 = !DILocation(line: 514, column: 7, scope: !11202)
!11211 = !DILocation(line: 514, column: 16, scope: !11202)
!11212 = !DILocation(line: 515, column: 41, scope: !11202)
!11213 = !{i32 0, i32 1537}
!11214 = !DILocation(line: 515, column: 16, scope: !11202)
!11215 = !DILocation(line: 515, column: 7, scope: !11202)
!11216 = !DILocation(line: 515, column: 14, scope: !11202)
!11217 = !DILocation(line: 517, column: 3, scope: !11202)
!11218 = !{i32 0, i32 12289}
!11219 = !DILocation(line: 516, column: 19, scope: !11202)
!11220 = !DILocation(line: 516, column: 7, scope: !11202)
!11221 = !DILocation(line: 516, column: 17, scope: !11202)
!11222 = !DILocation(line: 519, column: 3, scope: !11202)
!11223 = !DILocation(line: 519, column: 33, scope: !11202)
!11224 = !DILocation(line: 518, column: 19, scope: !11202)
!11225 = !DILocation(line: 518, column: 7, scope: !11202)
!11226 = !DILocation(line: 518, column: 17, scope: !11202)
!11227 = !DILocation(line: 521, column: 3, scope: !11202)
!11228 = !{i32 0, i32 769}
!11229 = !DILocation(line: 520, column: 19, scope: !11202)
!11230 = !DILocation(line: 520, column: 7, scope: !11202)
!11231 = !DILocation(line: 520, column: 17, scope: !11202)
!11232 = !DILocation(line: 522, column: 2, scope: !11202)
!11233 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1575, file: !1575, line: 205, type: !11234, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11236)
!11234 = !DISubroutineType(types: !11235)
!11235 = !{!108, !1480}
!11236 = !{!11237, !11238}
!11237 = !DILocalVariable(name: "dev", arg: 1, scope: !11233, file: !1575, line: 205, type: !1480)
!11238 = !DILocalVariable(name: "config", scope: !11233, file: !1575, line: 207, type: !10999)
!11239 = !DILocation(line: 0, scope: !11233)
!11240 = !DILocation(line: 207, column: 48, scope: !11233)
!11241 = !DILocation(line: 209, column: 36, scope: !11233)
!11242 = !DILocation(line: 209, column: 9, scope: !11233)
!11243 = !DILocation(line: 209, column: 2, scope: !11233)
!11244 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1575, file: !1575, line: 270, type: !11245, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11247)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{!1446, !108}
!11247 = !{!11248}
!11248 = !DILocalVariable(name: "parity", arg: 1, scope: !11244, file: !1575, line: 270, type: !108)
!11249 = !DILocation(line: 0, scope: !11244)
!11250 = !DILocation(line: 272, column: 2, scope: !11244)
!11251 = !DILocation(line: 281, column: 1, scope: !11244)
!11252 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1575, file: !1575, line: 220, type: !11234, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11253)
!11253 = !{!11254, !11255}
!11254 = !DILocalVariable(name: "dev", arg: 1, scope: !11252, file: !1575, line: 220, type: !1480)
!11255 = !DILocalVariable(name: "config", scope: !11252, file: !1575, line: 222, type: !10999)
!11256 = !DILocation(line: 0, scope: !11252)
!11257 = !DILocation(line: 222, column: 48, scope: !11252)
!11258 = !DILocation(line: 224, column: 44, scope: !11252)
!11259 = !DILocation(line: 224, column: 9, scope: !11252)
!11260 = !DILocation(line: 224, column: 2, scope: !11252)
!11261 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1575, file: !1575, line: 304, type: !11262, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11264)
!11262 = !DISubroutineType(types: !11263)
!11263 = !{!1460, !108}
!11264 = !{!11265}
!11265 = !DILocalVariable(name: "sb", arg: 1, scope: !11261, file: !1575, line: 304, type: !108)
!11266 = !DILocation(line: 0, scope: !11261)
!11267 = !DILocation(line: 306, column: 2, scope: !11261)
!11268 = !DILocation(line: 0, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11261, file: !1575, line: 306, column: 14)
!11270 = !DILocation(line: 323, column: 1, scope: !11261)
!11271 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1575, file: !1575, line: 235, type: !11234, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11272)
!11272 = !{!11273, !11274}
!11273 = !DILocalVariable(name: "dev", arg: 1, scope: !11271, file: !1575, line: 235, type: !1480)
!11274 = !DILocalVariable(name: "config", scope: !11271, file: !1575, line: 237, type: !10999)
!11275 = !DILocation(line: 0, scope: !11271)
!11276 = !DILocation(line: 237, column: 48, scope: !11271)
!11277 = !DILocation(line: 239, column: 39, scope: !11271)
!11278 = !DILocation(line: 239, column: 9, scope: !11271)
!11279 = !DILocation(line: 239, column: 2, scope: !11271)
!11280 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1575, file: !1575, line: 355, type: !11281, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11283)
!11281 = !DISubroutineType(types: !11282)
!11282 = !{!1453, !108, !108}
!11283 = !{!11284, !11285}
!11284 = !DILocalVariable(name: "db", arg: 1, scope: !11280, file: !1575, line: 355, type: !108)
!11285 = !DILocalVariable(name: "p", arg: 2, scope: !11280, file: !1575, line: 356, type: !108)
!11286 = !DILocation(line: 0, scope: !11280)
!11287 = !DILocation(line: 358, column: 2, scope: !11280)
!11288 = !DILocation(line: 384, column: 1, scope: !11280)
!11289 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1575, file: !1575, line: 250, type: !11234, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11290)
!11290 = !{!11291, !11292}
!11291 = !DILocalVariable(name: "dev", arg: 1, scope: !11289, file: !1575, line: 250, type: !1480)
!11292 = !DILocalVariable(name: "config", scope: !11289, file: !1575, line: 252, type: !10999)
!11293 = !DILocation(line: 0, scope: !11289)
!11294 = !DILocation(line: 252, column: 48, scope: !11289)
!11295 = !DILocation(line: 254, column: 40, scope: !11289)
!11296 = !DILocation(line: 254, column: 9, scope: !11289)
!11297 = !DILocation(line: 254, column: 2, scope: !11289)
!11298 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1575, file: !1575, line: 409, type: !11299, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11301)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{!1466, !108}
!11301 = !{!11302}
!11302 = !DILocalVariable(name: "fc", arg: 1, scope: !11298, file: !1575, line: 409, type: !108)
!11303 = !DILocation(line: 0, scope: !11298)
!11304 = !DILocation(line: 411, column: 9, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11298, file: !1575, line: 411, column: 6)
!11306 = !DILocation(line: 416, column: 1, scope: !11298)
!11307 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11308, file: !11308, line: 967, type: !11309, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11311)
!11308 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11309 = !DISubroutineType(types: !11310)
!11310 = !{!108, !1521}
!11311 = !{!11312}
!11312 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11307, file: !11308, line: 967, type: !1521)
!11313 = !DILocation(line: 0, scope: !11307)
!11314 = !DILocation(line: 969, column: 21, scope: !11307)
!11315 = !DILocation(line: 969, column: 3, scope: !11307)
!11316 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11308, file: !11308, line: 601, type: !11309, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11317)
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11316, file: !11308, line: 601, type: !1521)
!11319 = !DILocation(line: 0, scope: !11316)
!11320 = !DILocation(line: 603, column: 21, scope: !11316)
!11321 = !DILocation(line: 603, column: 3, scope: !11316)
!11322 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11308, file: !11308, line: 820, type: !11309, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11323)
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11322, file: !11308, line: 820, type: !1521)
!11325 = !DILocation(line: 0, scope: !11322)
!11326 = !DILocation(line: 822, column: 21, scope: !11322)
!11327 = !DILocation(line: 822, column: 3, scope: !11322)
!11328 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11308, file: !11308, line: 547, type: !11309, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11329)
!11329 = !{!11330}
!11330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11328, file: !11308, line: 547, type: !1521)
!11331 = !DILocation(line: 0, scope: !11328)
!11332 = !DILocation(line: 549, column: 21, scope: !11328)
!11333 = !DILocation(line: 549, column: 3, scope: !11328)
!11334 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1575, file: !1575, line: 257, type: !11335, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11337)
!11335 = !DISubroutineType(types: !11336)
!11336 = !{!108, !1446}
!11337 = !{!11338}
!11338 = !DILocalVariable(name: "parity", arg: 1, scope: !11334, file: !1575, line: 257, type: !1446)
!11339 = !DILocation(line: 0, scope: !11334)
!11340 = !DILocation(line: 259, column: 2, scope: !11334)
!11341 = !DILocation(line: 268, column: 1, scope: !11334)
!11342 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1575, file: !1575, line: 283, type: !11343, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11345)
!11343 = !DISubroutineType(types: !11344)
!11344 = !{!108, !1460}
!11345 = !{!11346}
!11346 = !DILocalVariable(name: "sb", arg: 1, scope: !11342, file: !1575, line: 283, type: !1460)
!11347 = !DILocation(line: 0, scope: !11342)
!11348 = !DILocation(line: 285, column: 2, scope: !11342)
!11349 = !DILocation(line: 0, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11342, file: !1575, line: 285, column: 14)
!11351 = !DILocation(line: 302, column: 1, scope: !11342)
!11352 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1575, file: !1575, line: 325, type: !11353, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11355)
!11353 = !DISubroutineType(types: !11354)
!11354 = !{!108, !1453, !1446}
!11355 = !{!11356, !11357}
!11356 = !DILocalVariable(name: "db", arg: 1, scope: !11352, file: !1575, line: 325, type: !1453)
!11357 = !DILocalVariable(name: "p", arg: 2, scope: !11352, file: !1575, line: 326, type: !1446)
!11358 = !DILocation(line: 0, scope: !11352)
!11359 = !DILocation(line: 328, column: 2, scope: !11352)
!11360 = !DILocation(line: 353, column: 1, scope: !11352)
!11361 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1575, file: !1575, line: 393, type: !11362, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11364)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{!108, !1466}
!11364 = !{!11365}
!11365 = !DILocalVariable(name: "fc", arg: 1, scope: !11361, file: !1575, line: 393, type: !1466)
!11366 = !DILocation(line: 0, scope: !11361)
!11367 = !DILocation(line: 395, column: 9, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11361, file: !1575, line: 395, column: 6)
!11369 = !DILocation(line: 400, column: 1, scope: !11361)
!11370 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11308, file: !11308, line: 424, type: !11371, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11373)
!11371 = !DISubroutineType(types: !11372)
!11372 = !{null, !1521}
!11373 = !{!11374}
!11374 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11370, file: !11308, line: 424, type: !1521)
!11375 = !DILocation(line: 0, scope: !11370)
!11376 = !DILocation(line: 426, column: 3, scope: !11370)
!11377 = !DILocation(line: 427, column: 1, scope: !11370)
!11378 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1575, file: !1575, line: 197, type: !11379, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11381)
!11379 = !DISubroutineType(types: !11380)
!11380 = !{null, !1480, !108}
!11381 = !{!11382, !11383, !11384}
!11382 = !DILocalVariable(name: "dev", arg: 1, scope: !11378, file: !1575, line: 197, type: !1480)
!11383 = !DILocalVariable(name: "parity", arg: 2, scope: !11378, file: !1575, line: 198, type: !108)
!11384 = !DILocalVariable(name: "config", scope: !11378, file: !1575, line: 200, type: !10999)
!11385 = !DILocation(line: 0, scope: !11378)
!11386 = !DILocation(line: 200, column: 48, scope: !11378)
!11387 = !DILocation(line: 202, column: 29, scope: !11378)
!11388 = !DILocation(line: 202, column: 2, scope: !11378)
!11389 = !DILocation(line: 203, column: 1, scope: !11378)
!11390 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1575, file: !1575, line: 212, type: !11379, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11391)
!11391 = !{!11392, !11393, !11394}
!11392 = !DILocalVariable(name: "dev", arg: 1, scope: !11390, file: !1575, line: 212, type: !1480)
!11393 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11390, file: !1575, line: 213, type: !108)
!11394 = !DILocalVariable(name: "config", scope: !11390, file: !1575, line: 215, type: !10999)
!11395 = !DILocation(line: 0, scope: !11390)
!11396 = !DILocation(line: 215, column: 48, scope: !11390)
!11397 = !DILocation(line: 217, column: 37, scope: !11390)
!11398 = !DILocation(line: 217, column: 2, scope: !11390)
!11399 = !DILocation(line: 218, column: 1, scope: !11390)
!11400 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1575, file: !1575, line: 227, type: !11379, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11401)
!11401 = !{!11402, !11403, !11404}
!11402 = !DILocalVariable(name: "dev", arg: 1, scope: !11400, file: !1575, line: 227, type: !1480)
!11403 = !DILocalVariable(name: "databits", arg: 2, scope: !11400, file: !1575, line: 228, type: !108)
!11404 = !DILocalVariable(name: "config", scope: !11400, file: !1575, line: 230, type: !10999)
!11405 = !DILocation(line: 0, scope: !11400)
!11406 = !DILocation(line: 230, column: 48, scope: !11400)
!11407 = !DILocation(line: 232, column: 32, scope: !11400)
!11408 = !DILocation(line: 232, column: 2, scope: !11400)
!11409 = !DILocation(line: 233, column: 1, scope: !11400)
!11410 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1575, file: !1575, line: 242, type: !11379, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11411)
!11411 = !{!11412, !11413, !11414}
!11412 = !DILocalVariable(name: "dev", arg: 1, scope: !11410, file: !1575, line: 242, type: !1480)
!11413 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11410, file: !1575, line: 243, type: !108)
!11414 = !DILocalVariable(name: "config", scope: !11410, file: !1575, line: 245, type: !10999)
!11415 = !DILocation(line: 0, scope: !11410)
!11416 = !DILocation(line: 245, column: 48, scope: !11410)
!11417 = !DILocation(line: 247, column: 33, scope: !11410)
!11418 = !DILocation(line: 247, column: 2, scope: !11410)
!11419 = !DILocation(line: 248, column: 1, scope: !11410)
!11420 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1575, file: !1575, line: 107, type: !11379, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11421)
!11421 = !{!11422, !11423, !11424, !11425, !11426}
!11422 = !DILocalVariable(name: "dev", arg: 1, scope: !11420, file: !1575, line: 107, type: !1480)
!11423 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11420, file: !1575, line: 107, type: !108)
!11424 = !DILocalVariable(name: "config", scope: !11420, file: !1575, line: 109, type: !10999)
!11425 = !DILocalVariable(name: "data", scope: !11420, file: !1575, line: 110, type: !11122)
!11426 = !DILocalVariable(name: "clock_rate", scope: !11420, file: !1575, line: 112, type: !108)
!11427 = !DILocation(line: 0, scope: !11420)
!11428 = !DILocation(line: 109, column: 48, scope: !11420)
!11429 = !DILocation(line: 110, column: 38, scope: !11420)
!11430 = !DILocation(line: 112, column: 2, scope: !11420)
!11431 = !DILocation(line: 123, column: 36, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11433, file: !1575, line: 123, column: 7)
!11433 = distinct !DILexicalBlock(scope: !11434, file: !1575, line: 122, column: 9)
!11434 = distinct !DILexicalBlock(scope: !11420, file: !1575, line: 115, column: 6)
!11435 = !DILocation(line: 124, column: 42, scope: !11432)
!11436 = !DILocation(line: 123, column: 7, scope: !11432)
!11437 = !DILocation(line: 125, column: 22, scope: !11432)
!11438 = !DILocation(line: 123, column: 7, scope: !11433)
!11439 = !DILocation(line: 126, column: 4, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !1575, line: 126, column: 4)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !1575, line: 126, column: 4)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !1575, line: 126, column: 4)
!11443 = distinct !DILexicalBlock(scope: !11444, file: !1575, line: 126, column: 4)
!11444 = distinct !DILexicalBlock(scope: !11432, file: !1575, line: 125, column: 27)
!11445 = !DILocation(line: 127, column: 4, scope: !11444)
!11446 = !DILocation(line: 176, column: 36, scope: !11420)
!11447 = !DILocation(line: 176, column: 3, scope: !11420)
!11448 = !DILocation(line: 179, column: 32, scope: !11420)
!11449 = !DILocation(line: 180, column: 10, scope: !11420)
!11450 = !DILocation(line: 179, column: 3, scope: !11420)
!11451 = !DILocation(line: 195, column: 1, scope: !11420)
!11452 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11308, file: !11308, line: 410, type: !11371, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11453)
!11453 = !{!11454}
!11454 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11452, file: !11308, line: 410, type: !1521)
!11455 = !DILocation(line: 0, scope: !11452)
!11456 = !DILocation(line: 412, column: 3, scope: !11452)
!11457 = !DILocation(line: 413, column: 1, scope: !11452)
!11458 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !935, file: !935, line: 216, type: !1554, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11459)
!11459 = !{!11460, !11461, !11462, !11463}
!11460 = !DILocalVariable(name: "dev", arg: 1, scope: !11458, file: !935, line: 216, type: !1480)
!11461 = !DILocalVariable(name: "sys", arg: 2, scope: !11458, file: !935, line: 217, type: !1028)
!11462 = !DILocalVariable(name: "rate", arg: 3, scope: !11458, file: !935, line: 218, type: !984)
!11463 = !DILocalVariable(name: "api", scope: !11458, file: !935, line: 220, type: !1532)
!11464 = !DILocation(line: 0, scope: !11458)
!11465 = !DILocation(line: 221, column: 49, scope: !11458)
!11466 = !DILocation(line: 223, column: 11, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11458, file: !935, line: 223, column: 6)
!11468 = !DILocation(line: 223, column: 20, scope: !11467)
!11469 = !DILocation(line: 223, column: 6, scope: !11458)
!11470 = !DILocation(line: 227, column: 9, scope: !11458)
!11471 = !DILocation(line: 227, column: 2, scope: !11458)
!11472 = !DILocation(line: 228, column: 1, scope: !11458)
!11473 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3582, file: !3582, line: 175, type: !3583, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11474)
!11474 = !{!11475}
!11475 = !DILocalVariable(name: "level", arg: 1, scope: !11473, file: !3582, line: 175, type: !103)
!11476 = !DILocation(line: 0, scope: !11473)
!11477 = !DILocation(line: 177, column: 2, scope: !11473)
!11478 = !DILocation(line: 189, column: 1, scope: !11473)
!11479 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11308, file: !11308, line: 615, type: !11480, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11482)
!11480 = !DISubroutineType(types: !11481)
!11481 = !{null, !1521, !108}
!11482 = !{!11483, !11484}
!11483 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11479, file: !11308, line: 615, type: !1521)
!11484 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11479, file: !11308, line: 615, type: !108)
!11485 = !DILocation(line: 0, scope: !11479)
!11486 = !DILocation(line: 617, column: 3, scope: !11479)
!11487 = !DILocation(line: 618, column: 1, scope: !11479)
!11488 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11308, file: !11308, line: 1020, type: !11489, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11491)
!11489 = !DISubroutineType(types: !11490)
!11490 = !{null, !1521, !108, !108, !108}
!11491 = !{!11492, !11493, !11494, !11495}
!11492 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11488, file: !11308, line: 1020, type: !1521)
!11493 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11488, file: !11308, line: 1020, type: !108)
!11494 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11488, file: !11308, line: 1020, type: !108)
!11495 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11488, file: !11308, line: 1021, type: !108)
!11496 = !DILocation(line: 0, scope: !11488)
!11497 = !DILocation(line: 1029, column: 30, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !11308, line: 1028, column: 3)
!11499 = distinct !DILexicalBlock(scope: !11488, file: !11308, line: 1023, column: 7)
!11500 = !DILocation(line: 1029, column: 19, scope: !11498)
!11501 = !DILocation(line: 1029, column: 13, scope: !11498)
!11502 = !DILocation(line: 1029, column: 17, scope: !11498)
!11503 = !DILocation(line: 1031, column: 1, scope: !11488)
!11504 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11308, file: !11308, line: 949, type: !11480, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11505)
!11505 = !{!11506, !11507}
!11506 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11504, file: !11308, line: 949, type: !1521)
!11507 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11504, file: !11308, line: 949, type: !108)
!11508 = !DILocation(line: 0, scope: !11504)
!11509 = !DILocation(line: 951, column: 3, scope: !11504)
!11510 = !DILocation(line: 952, column: 1, scope: !11504)
!11511 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11308, file: !11308, line: 588, type: !11480, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11512)
!11512 = !{!11513, !11514}
!11513 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11511, file: !11308, line: 588, type: !1521)
!11514 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11511, file: !11308, line: 588, type: !108)
!11515 = !DILocation(line: 0, scope: !11511)
!11516 = !DILocation(line: 590, column: 3, scope: !11511)
!11517 = !DILocation(line: 591, column: 1, scope: !11511)
!11518 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11308, file: !11308, line: 805, type: !11480, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11519)
!11519 = !{!11520, !11521}
!11520 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11518, file: !11308, line: 805, type: !1521)
!11521 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11518, file: !11308, line: 805, type: !108)
!11522 = !DILocation(line: 0, scope: !11518)
!11523 = !DILocation(line: 807, column: 3, scope: !11518)
!11524 = !DILocation(line: 808, column: 1, scope: !11518)
!11525 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11308, file: !11308, line: 532, type: !11480, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11526)
!11526 = !{!11527, !11528}
!11527 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11525, file: !11308, line: 532, type: !1521)
!11528 = !DILocalVariable(name: "Parity", arg: 2, scope: !11525, file: !11308, line: 532, type: !108)
!11529 = !DILocation(line: 0, scope: !11525)
!11530 = !DILocation(line: 534, column: 3, scope: !11525)
!11531 = !DILocation(line: 535, column: 1, scope: !11525)
!11532 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11308, file: !11308, line: 1770, type: !11309, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11533)
!11533 = !{!11534}
!11534 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11532, file: !11308, line: 1770, type: !1521)
!11535 = !DILocation(line: 0, scope: !11532)
!11536 = !DILocation(line: 1772, column: 11, scope: !11532)
!11537 = !DILocation(line: 1772, column: 46, scope: !11532)
!11538 = !DILocation(line: 1772, column: 3, scope: !11532)
!11539 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11308, file: !11308, line: 1737, type: !11309, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11540)
!11540 = !{!11541}
!11541 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11539, file: !11308, line: 1737, type: !1521)
!11542 = !DILocation(line: 0, scope: !11539)
!11543 = !DILocation(line: 1739, column: 11, scope: !11539)
!11544 = !DILocation(line: 1739, column: 3, scope: !11539)
!11545 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11308, file: !11308, line: 1748, type: !11309, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11546)
!11546 = !{!11547}
!11547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11545, file: !11308, line: 1748, type: !1521)
!11548 = !DILocation(line: 0, scope: !11545)
!11549 = !DILocation(line: 1750, column: 11, scope: !11545)
!11550 = !DILocation(line: 1750, column: 45, scope: !11545)
!11551 = !DILocation(line: 1750, column: 3, scope: !11545)
!11552 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11308, file: !11308, line: 1827, type: !11309, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11553)
!11553 = !{!11554}
!11554 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11552, file: !11308, line: 1827, type: !1521)
!11555 = !DILocation(line: 0, scope: !11552)
!11556 = !DILocation(line: 1829, column: 11, scope: !11552)
!11557 = !DILocation(line: 1829, column: 46, scope: !11552)
!11558 = !DILocation(line: 1829, column: 3, scope: !11552)
!11559 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11308, file: !11308, line: 1992, type: !11371, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11560)
!11560 = !{!11561}
!11561 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11559, file: !11308, line: 1992, type: !1521)
!11562 = !DILocation(line: 0, scope: !11559)
!11563 = !DILocation(line: 1994, column: 3, scope: !11559)
!11564 = !DILocation(line: 1995, column: 1, scope: !11559)
!11565 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11308, file: !11308, line: 1934, type: !11371, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11566)
!11566 = !{!11567, !11568}
!11567 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11565, file: !11308, line: 1934, type: !1521)
!11568 = !DILocalVariable(name: "tmpreg", scope: !11565, file: !11308, line: 1936, type: !409)
!11569 = !DILocation(line: 0, scope: !11565)
!11570 = !DILocation(line: 1936, column: 3, scope: !11565)
!11571 = !DILocation(line: 1936, column: 17, scope: !11565)
!11572 = !DILocation(line: 1937, column: 20, scope: !11565)
!11573 = !DILocation(line: 1937, column: 10, scope: !11565)
!11574 = !DILocation(line: 1938, column: 10, scope: !11565)
!11575 = !DILocation(line: 1939, column: 20, scope: !11565)
!11576 = !DILocation(line: 1939, column: 10, scope: !11565)
!11577 = !DILocation(line: 1940, column: 10, scope: !11565)
!11578 = !DILocation(line: 1941, column: 1, scope: !11565)
!11579 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11308, file: !11308, line: 1877, type: !11371, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11580)
!11580 = !{!11581, !11582}
!11581 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11579, file: !11308, line: 1877, type: !1521)
!11582 = !DILocalVariable(name: "tmpreg", scope: !11579, file: !11308, line: 1879, type: !409)
!11583 = !DILocation(line: 0, scope: !11579)
!11584 = !DILocation(line: 1879, column: 3, scope: !11579)
!11585 = !DILocation(line: 1879, column: 17, scope: !11579)
!11586 = !DILocation(line: 1880, column: 20, scope: !11579)
!11587 = !DILocation(line: 1880, column: 10, scope: !11579)
!11588 = !DILocation(line: 1881, column: 10, scope: !11579)
!11589 = !DILocation(line: 1882, column: 20, scope: !11579)
!11590 = !DILocation(line: 1882, column: 10, scope: !11579)
!11591 = !DILocation(line: 1883, column: 10, scope: !11579)
!11592 = !DILocation(line: 1884, column: 1, scope: !11579)
!11593 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11308, file: !11308, line: 1896, type: !11371, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11594)
!11594 = !{!11595, !11596}
!11595 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11593, file: !11308, line: 1896, type: !1521)
!11596 = !DILocalVariable(name: "tmpreg", scope: !11593, file: !11308, line: 1898, type: !409)
!11597 = !DILocation(line: 0, scope: !11593)
!11598 = !DILocation(line: 1898, column: 3, scope: !11593)
!11599 = !DILocation(line: 1898, column: 17, scope: !11593)
!11600 = !DILocation(line: 1899, column: 20, scope: !11593)
!11601 = !DILocation(line: 1899, column: 10, scope: !11593)
!11602 = !DILocation(line: 1900, column: 10, scope: !11593)
!11603 = !DILocation(line: 1901, column: 20, scope: !11593)
!11604 = !DILocation(line: 1901, column: 10, scope: !11593)
!11605 = !DILocation(line: 1902, column: 10, scope: !11593)
!11606 = !DILocation(line: 1903, column: 1, scope: !11593)
!11607 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11308, file: !11308, line: 1915, type: !11371, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11608)
!11608 = !{!11609, !11610}
!11609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11607, file: !11308, line: 1915, type: !1521)
!11610 = !DILocalVariable(name: "tmpreg", scope: !11607, file: !11308, line: 1917, type: !409)
!11611 = !DILocation(line: 0, scope: !11607)
!11612 = !DILocation(line: 1917, column: 3, scope: !11607)
!11613 = !DILocation(line: 1917, column: 17, scope: !11607)
!11614 = !DILocation(line: 1918, column: 20, scope: !11607)
!11615 = !DILocation(line: 1918, column: 10, scope: !11607)
!11616 = !DILocation(line: 1919, column: 10, scope: !11607)
!11617 = !DILocation(line: 1920, column: 20, scope: !11607)
!11618 = !DILocation(line: 1920, column: 10, scope: !11607)
!11619 = !DILocation(line: 1921, column: 10, scope: !11607)
!11620 = !DILocation(line: 1922, column: 1, scope: !11607)
!11621 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11308, file: !11308, line: 1814, type: !11309, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11622)
!11622 = !{!11623}
!11623 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11621, file: !11308, line: 1814, type: !1521)
!11624 = !DILocation(line: 0, scope: !11621)
!11625 = !DILocation(line: 1816, column: 11, scope: !11621)
!11626 = !DILocation(line: 1816, column: 46, scope: !11621)
!11627 = !DILocation(line: 1816, column: 3, scope: !11621)
!11628 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11308, file: !11308, line: 2426, type: !11629, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11631)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{null, !1521, !185}
!11631 = !{!11632, !11633}
!11632 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11628, file: !11308, line: 2426, type: !1521)
!11633 = !DILocalVariable(name: "Value", arg: 2, scope: !11628, file: !11308, line: 2426, type: !185)
!11634 = !DILocation(line: 0, scope: !11628)
!11635 = !DILocation(line: 2428, column: 16, scope: !11628)
!11636 = !DILocation(line: 2428, column: 11, scope: !11628)
!11637 = !DILocation(line: 2428, column: 14, scope: !11628)
!11638 = !DILocation(line: 2429, column: 1, scope: !11628)
!11639 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11308, file: !11308, line: 1792, type: !11309, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11640)
!11640 = !{!11641}
!11641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11639, file: !11308, line: 1792, type: !1521)
!11642 = !DILocation(line: 0, scope: !11639)
!11643 = !DILocation(line: 1794, column: 11, scope: !11639)
!11644 = !DILocation(line: 1794, column: 47, scope: !11639)
!11645 = !DILocation(line: 1794, column: 3, scope: !11639)
!11646 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11308, file: !11308, line: 2403, type: !11647, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11649)
!11647 = !DISubroutineType(types: !11648)
!11648 = !{!185, !1521}
!11649 = !{!11650}
!11650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11646, file: !11308, line: 2403, type: !1521)
!11651 = !DILocation(line: 0, scope: !11646)
!11652 = !DILocation(line: 2405, column: 20, scope: !11646)
!11653 = !DILocation(line: 2405, column: 10, scope: !11646)
!11654 = !DILocation(line: 2405, column: 3, scope: !11646)
!11655 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1575, file: !1575, line: 1583, type: !1501, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11656)
!11656 = !{!11657, !11658, !11659, !11660, !11661, !11662}
!11657 = !DILocalVariable(name: "dev", arg: 1, scope: !11655, file: !1575, line: 1583, type: !1480)
!11658 = !DILocalVariable(name: "config", scope: !11655, file: !1575, line: 1585, type: !10999)
!11659 = !DILocalVariable(name: "data", scope: !11655, file: !1575, line: 1586, type: !11122)
!11660 = !DILocalVariable(name: "ll_parity", scope: !11655, file: !1575, line: 1587, type: !108)
!11661 = !DILocalVariable(name: "ll_datawidth", scope: !11655, file: !1575, line: 1588, type: !108)
!11662 = !DILocalVariable(name: "err", scope: !11655, file: !1575, line: 1589, type: !103)
!11663 = !DILocation(line: 0, scope: !11655)
!11664 = !DILocation(line: 1585, column: 48, scope: !11655)
!11665 = !DILocation(line: 1586, column: 38, scope: !11655)
!11666 = !DILocation(line: 1591, column: 2, scope: !11655)
!11667 = !DILocation(line: 1593, column: 29, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11655, file: !1575, line: 1593, column: 6)
!11669 = !DILocation(line: 1593, column: 7, scope: !11668)
!11670 = !DILocation(line: 1593, column: 6, scope: !11655)
!11671 = !DILocation(line: 1594, column: 3, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !1575, line: 1594, column: 3)
!11673 = distinct !DILexicalBlock(scope: !11674, file: !1575, line: 1594, column: 3)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !1575, line: 1594, column: 3)
!11675 = distinct !DILexicalBlock(scope: !11676, file: !1575, line: 1594, column: 3)
!11676 = distinct !DILexicalBlock(scope: !11668, file: !1575, line: 1593, column: 37)
!11677 = !DILocation(line: 1595, column: 3, scope: !11676)
!11678 = !DILocation(line: 1599, column: 31, scope: !11655)
!11679 = !DILocation(line: 1599, column: 71, scope: !11655)
!11680 = !DILocation(line: 1599, column: 8, scope: !11655)
!11681 = !DILocation(line: 1600, column: 10, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11655, file: !1575, line: 1600, column: 6)
!11683 = !DILocation(line: 1600, column: 6, scope: !11655)
!11684 = !DILocation(line: 1601, column: 3, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !1575, line: 1601, column: 3)
!11686 = distinct !DILexicalBlock(scope: !11687, file: !1575, line: 1601, column: 3)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !1575, line: 1601, column: 3)
!11688 = distinct !DILexicalBlock(scope: !11689, file: !1575, line: 1601, column: 3)
!11689 = distinct !DILexicalBlock(scope: !11682, file: !1575, line: 1600, column: 16)
!11690 = !DILocation(line: 1602, column: 3, scope: !11689)
!11691 = !DILocation(line: 1616, column: 36, scope: !11655)
!11692 = !DILocation(line: 1616, column: 8, scope: !11655)
!11693 = !DILocation(line: 1617, column: 10, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11655, file: !1575, line: 1617, column: 6)
!11695 = !DILocation(line: 1617, column: 6, scope: !11655)
!11696 = !DILocation(line: 1621, column: 27, scope: !11655)
!11697 = !DILocation(line: 1621, column: 2, scope: !11655)
!11698 = !DILocation(line: 1624, column: 40, scope: !11655)
!11699 = !DILocation(line: 1624, column: 2, scope: !11655)
!11700 = !DILocation(line: 1630, column: 14, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11655, file: !1575, line: 1630, column: 6)
!11702 = !DILocation(line: 1630, column: 6, scope: !11655)
!11703 = !DILocation(line: 1640, column: 4, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !1575, line: 1640, column: 4)
!11705 = distinct !DILexicalBlock(scope: !11706, file: !1575, line: 1640, column: 4)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !1575, line: 1640, column: 4)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !1575, line: 1640, column: 4)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !1575, line: 1639, column: 28)
!11709 = distinct !DILexicalBlock(scope: !11710, file: !1575, line: 1639, column: 7)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !1575, line: 1638, column: 9)
!11711 = distinct !DILexicalBlock(scope: !11701, file: !1575, line: 1634, column: 13)
!11712 = !DILocation(line: 0, scope: !11701)
!11713 = !DILocation(line: 1649, column: 35, scope: !11655)
!11714 = !DILocation(line: 1649, column: 2, scope: !11655)
!11715 = !DILocation(line: 1654, column: 14, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11655, file: !1575, line: 1654, column: 6)
!11717 = !DILocation(line: 1654, column: 6, scope: !11655)
!11718 = !DILocation(line: 1655, column: 3, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11716, file: !1575, line: 1654, column: 31)
!11720 = !DILocation(line: 1656, column: 2, scope: !11719)
!11721 = !DILocation(line: 1659, column: 37, scope: !11655)
!11722 = !DILocation(line: 1659, column: 2, scope: !11655)
!11723 = !DILocation(line: 1662, column: 14, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11655, file: !1575, line: 1662, column: 6)
!11725 = !DILocation(line: 1662, column: 6, scope: !11655)
!11726 = !DILocation(line: 1663, column: 37, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11724, file: !1575, line: 1662, column: 27)
!11728 = !DILocation(line: 1663, column: 3, scope: !11727)
!11729 = !DILocation(line: 1664, column: 2, scope: !11727)
!11730 = !DILocation(line: 1684, column: 26, scope: !11655)
!11731 = !DILocation(line: 1684, column: 2, scope: !11655)
!11732 = !DILocation(line: 1722, column: 2, scope: !11655)
!11733 = !DILocation(line: 1724, column: 1, scope: !11655)
!11734 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1575, file: !1575, line: 651, type: !11735, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11737)
!11735 = !DISubroutineType(types: !11736)
!11736 = !{null, !1480}
!11737 = !{!11738, !11739, !11740}
!11738 = !DILocalVariable(name: "dev", arg: 1, scope: !11734, file: !1575, line: 651, type: !1480)
!11739 = !DILocalVariable(name: "data", scope: !11734, file: !1575, line: 653, type: !11122)
!11740 = !DILocalVariable(name: "clk", scope: !11734, file: !1575, line: 654, type: !11741)
!11741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1480)
!11742 = !DILocation(line: 0, scope: !11734)
!11743 = !DILocation(line: 653, column: 38, scope: !11734)
!11744 = !DILocation(line: 656, column: 8, scope: !11734)
!11745 = !DILocation(line: 656, column: 14, scope: !11734)
!11746 = !DILocation(line: 657, column: 1, scope: !11734)
!11747 = distinct !DISubprogram(name: "device_is_ready", scope: !10137, file: !10137, line: 47, type: !11748, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11750)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{!131, !1480}
!11750 = !{!11751}
!11751 = !DILocalVariable(name: "dev", arg: 1, scope: !11747, file: !10137, line: 47, type: !1480)
!11752 = !DILocation(line: 0, scope: !11747)
!11753 = !DILocation(line: 55, column: 2, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11747, file: !10137, line: 55, column: 2)
!11755 = !{i64 2155035356}
!11756 = !DILocation(line: 56, column: 9, scope: !11747)
!11757 = !DILocation(line: 56, column: 2, scope: !11747)
!11758 = distinct !DISubprogram(name: "clock_control_on", scope: !935, file: !935, line: 123, type: !1539, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11759)
!11759 = !{!11760, !11761, !11762}
!11760 = !DILocalVariable(name: "dev", arg: 1, scope: !11758, file: !935, line: 123, type: !1480)
!11761 = !DILocalVariable(name: "sys", arg: 2, scope: !11758, file: !935, line: 124, type: !1028)
!11762 = !DILocalVariable(name: "api", scope: !11758, file: !935, line: 126, type: !1532)
!11763 = !DILocation(line: 0, scope: !11758)
!11764 = !DILocation(line: 127, column: 49, scope: !11758)
!11765 = !DILocation(line: 129, column: 14, scope: !11758)
!11766 = !DILocation(line: 129, column: 9, scope: !11758)
!11767 = !DILocation(line: 129, column: 2, scope: !11758)
!11768 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1615, file: !1615, line: 342, type: !11769, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11771)
!11769 = !DISubroutineType(types: !11770)
!11770 = !{!103, !1612, !185}
!11771 = !{!11772, !11773, !11774, !11775}
!11772 = !DILocalVariable(name: "config", arg: 1, scope: !11768, file: !1615, line: 342, type: !1612)
!11773 = !DILocalVariable(name: "id", arg: 2, scope: !11768, file: !1615, line: 343, type: !185)
!11774 = !DILocalVariable(name: "ret", scope: !11768, file: !1615, line: 345, type: !103)
!11775 = !DILocalVariable(name: "state", scope: !11768, file: !1615, line: 346, type: !1618)
!11776 = !DILocation(line: 0, scope: !11768)
!11777 = !DILocation(line: 346, column: 2, scope: !11768)
!11778 = !DILocation(line: 348, column: 8, scope: !11768)
!11779 = !DILocation(line: 349, column: 10, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11768, file: !1615, line: 349, column: 6)
!11781 = !DILocation(line: 349, column: 6, scope: !11768)
!11782 = !DILocation(line: 353, column: 44, scope: !11768)
!11783 = !DILocation(line: 353, column: 9, scope: !11768)
!11784 = !DILocation(line: 353, column: 2, scope: !11768)
!11785 = !DILocation(line: 354, column: 1, scope: !11768)
!11786 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11308, file: !11308, line: 497, type: !11480, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11787)
!11787 = !{!11788, !11789, !11790}
!11788 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11786, file: !11308, line: 497, type: !1521)
!11789 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11786, file: !11308, line: 497, type: !108)
!11790 = !DILocalVariable(name: "val", scope: !11791, file: !11308, line: 499, type: !108)
!11791 = distinct !DILexicalBlock(scope: !11786, file: !11308, line: 499, column: 3)
!11792 = !DILocation(line: 0, scope: !11786)
!11793 = !DILocation(line: 499, column: 3, scope: !11791)
!11794 = !DILocalVariable(name: "addr", arg: 1, scope: !11795, file: !7315, line: 476, type: !1571)
!11795 = distinct !DISubprogram(name: "__LDREXW", scope: !7315, file: !7315, line: 476, type: !11796, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11798)
!11796 = !DISubroutineType(types: !11797)
!11797 = !{!108, !1571}
!11798 = !{!11794, !11799}
!11799 = !DILocalVariable(name: "result", scope: !11795, file: !7315, line: 478, type: !108)
!11800 = !DILocation(line: 0, scope: !11795, inlinedAt: !11801)
!11801 = distinct !DILocation(line: 499, column: 3, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11791, file: !11308, line: 499, column: 3)
!11803 = !DILocation(line: 480, column: 4, scope: !11795, inlinedAt: !11801)
!11804 = !{i64 3528914}
!11805 = !DILocation(line: 499, column: 3, scope: !11802)
!11806 = !DILocation(line: 0, scope: !11791)
!11807 = !DILocalVariable(name: "value", arg: 1, scope: !11808, file: !7315, line: 527, type: !108)
!11808 = distinct !DISubprogram(name: "__STREXW", scope: !7315, file: !7315, line: 527, type: !11809, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11811)
!11809 = !DISubroutineType(types: !11810)
!11810 = !{!108, !108, !1571}
!11811 = !{!11807, !11812, !11813}
!11812 = !DILocalVariable(name: "addr", arg: 2, scope: !11808, file: !7315, line: 527, type: !1571)
!11813 = !DILocalVariable(name: "result", scope: !11808, file: !7315, line: 529, type: !108)
!11814 = !DILocation(line: 0, scope: !11808, inlinedAt: !11815)
!11815 = distinct !DILocation(line: 499, column: 3, scope: !11791)
!11816 = !DILocation(line: 531, column: 4, scope: !11808, inlinedAt: !11815)
!11817 = !{i64 3530350}
!11818 = distinct !{!11818, !11793, !11793}
!11819 = !DILocation(line: 500, column: 1, scope: !11786)
!11820 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11308, file: !11308, line: 850, type: !11489, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11821)
!11821 = !{!11822, !11823, !11824, !11825}
!11822 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11820, file: !11308, line: 850, type: !1521)
!11823 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11820, file: !11308, line: 850, type: !108)
!11824 = !DILocalVariable(name: "Parity", arg: 3, scope: !11820, file: !11308, line: 850, type: !108)
!11825 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11820, file: !11308, line: 851, type: !108)
!11826 = !DILocation(line: 0, scope: !11820)
!11827 = !DILocation(line: 853, column: 3, scope: !11820)
!11828 = !DILocation(line: 854, column: 3, scope: !11820)
!11829 = !DILocation(line: 855, column: 1, scope: !11820)
!11830 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11308, file: !11308, line: 1337, type: !11371, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11831)
!11831 = !{!11832}
!11832 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11830, file: !11308, line: 1337, type: !1521)
!11833 = !DILocation(line: 0, scope: !11830)
!11834 = !DILocation(line: 1339, column: 3, scope: !11830)
!11835 = !DILocation(line: 1340, column: 1, scope: !11830)
!11836 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1615, file: !1615, line: 316, type: !11837, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11839)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{!103, !1612, !1618}
!11839 = !{!11840, !11841, !11842}
!11840 = !DILocalVariable(name: "config", arg: 1, scope: !11836, file: !1615, line: 317, type: !1612)
!11841 = !DILocalVariable(name: "state", arg: 2, scope: !11836, file: !1615, line: 318, type: !1618)
!11842 = !DILocalVariable(name: "reg", scope: !11836, file: !1615, line: 320, type: !22)
!11843 = !DILocation(line: 0, scope: !11836)
!11844 = !DILocation(line: 329, column: 39, scope: !11836)
!11845 = !DILocation(line: 329, column: 52, scope: !11836)
!11846 = !DILocation(line: 329, column: 9, scope: !11836)
!11847 = !DILocation(line: 329, column: 2, scope: !11836)
!11848 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !11748, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1436, retainedNodes: !11849)
!11849 = !{!11850}
!11850 = !DILocalVariable(name: "dev", arg: 1, scope: !11848, file: !429, line: 730, type: !1480)
!11851 = !DILocation(line: 0, scope: !11848)
!11852 = !DILocation(line: 732, column: 9, scope: !11848)
!11853 = !DILocation(line: 732, column: 2, scope: !11848)
!11854 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1736, file: !1736, line: 270, type: !1742, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !11855)
!11855 = !{!11856}
!11856 = !DILocalVariable(name: "dev", arg: 1, scope: !11854, file: !1736, line: 270, type: !1744)
!11857 = !DILocation(line: 0, scope: !11854)
!11858 = !DILocation(line: 274, column: 2, scope: !11854)
!11859 = !DILocation(line: 275, column: 12, scope: !11854)
!11860 = !DILocation(line: 276, column: 15, scope: !11854)
!11861 = !DILocation(line: 277, column: 16, scope: !11854)
!11862 = !DILocation(line: 278, column: 15, scope: !11854)
!11863 = !DILocation(line: 279, column: 16, scope: !11854)
!11864 = !DILocation(line: 282, column: 2, scope: !11854)
!11865 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7349, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !11866)
!11866 = !{!11867, !11868}
!11867 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11865, file: !624, line: 1814, type: !891)
!11868 = !DILocalVariable(name: "priority", arg: 2, scope: !11865, file: !624, line: 1814, type: !108)
!11869 = !DILocation(line: 0, scope: !11865)
!11870 = !DILocation(line: 1822, column: 46, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !624, line: 1821, column: 3)
!11872 = distinct !DILexicalBlock(scope: !11865, file: !624, line: 1816, column: 7)
!11873 = !DILocation(line: 1824, column: 1, scope: !11865)
!11874 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1736, file: !1736, line: 118, type: !7252, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !11875)
!11875 = !{!11876, !11877}
!11876 = !DILocalVariable(name: "arg", arg: 1, scope: !11874, file: !1736, line: 118, type: !102)
!11877 = !DILocalVariable(name: "dticks", scope: !11874, file: !1736, line: 121, type: !108)
!11878 = !DILocation(line: 0, scope: !11874)
!11879 = !DILocation(line: 124, column: 2, scope: !11874)
!11880 = !DILocation(line: 129, column: 17, scope: !11874)
!11881 = !DILocation(line: 129, column: 14, scope: !11874)
!11882 = !DILocation(line: 130, column: 15, scope: !11874)
!11883 = !DILocation(line: 145, column: 27, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !1736, line: 132, column: 16)
!11885 = distinct !DILexicalBlock(scope: !11874, file: !1736, line: 132, column: 6)
!11886 = !DILocation(line: 145, column: 25, scope: !11884)
!11887 = !DILocation(line: 145, column: 45, scope: !11884)
!11888 = !DILocation(line: 146, column: 30, scope: !11884)
!11889 = !DILocation(line: 146, column: 20, scope: !11884)
!11890 = !DILocation(line: 147, column: 3, scope: !11884)
!11891 = !DILocation(line: 151, column: 2, scope: !11874)
!11892 = !DILocation(line: 152, column: 1, scope: !11874)
!11893 = distinct !DISubprogram(name: "elapsed", scope: !1736, file: !1736, line: 85, type: !3591, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !11894)
!11894 = !{!11895, !11896, !11897}
!11895 = !DILocalVariable(name: "val1", scope: !11893, file: !1736, line: 87, type: !108)
!11896 = !DILocalVariable(name: "ctrl", scope: !11893, file: !1736, line: 88, type: !108)
!11897 = !DILocalVariable(name: "val2", scope: !11893, file: !1736, line: 89, type: !108)
!11898 = !DILocation(line: 87, column: 27, scope: !11893)
!11899 = !DILocation(line: 0, scope: !11893)
!11900 = !DILocation(line: 88, column: 27, scope: !11893)
!11901 = !DILocation(line: 89, column: 27, scope: !11893)
!11902 = !DILocation(line: 105, column: 12, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11893, file: !1736, line: 105, column: 6)
!11904 = !DILocation(line: 106, column: 6, scope: !11903)
!11905 = !DILocation(line: 107, column: 16, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11903, file: !1736, line: 106, column: 24)
!11907 = !DILocation(line: 111, column: 18, scope: !11906)
!11908 = !DILocation(line: 112, column: 2, scope: !11906)
!11909 = !DILocation(line: 114, column: 20, scope: !11893)
!11910 = !DILocation(line: 114, column: 30, scope: !11893)
!11911 = !DILocation(line: 114, column: 28, scope: !11893)
!11912 = !DILocation(line: 114, column: 2, scope: !11893)
!11913 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1736, file: !1736, line: 154, type: !11914, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !11916)
!11914 = !DISubroutineType(types: !11915)
!11915 = !{null, !331, !131}
!11916 = !{!11917, !11918, !11919, !11920, !11921, !11922, !11923, !11928, !11929}
!11917 = !DILocalVariable(name: "ticks", arg: 1, scope: !11913, file: !1736, line: 154, type: !331)
!11918 = !DILocalVariable(name: "idle", arg: 2, scope: !11913, file: !1736, line: 154, type: !131)
!11919 = !DILocalVariable(name: "delay", scope: !11913, file: !1736, line: 169, type: !108)
!11920 = !DILocalVariable(name: "val1", scope: !11913, file: !1736, line: 170, type: !108)
!11921 = !DILocalVariable(name: "val2", scope: !11913, file: !1736, line: 170, type: !108)
!11922 = !DILocalVariable(name: "last_load_", scope: !11913, file: !1736, line: 171, type: !108)
!11923 = !DILocalVariable(name: "key", scope: !11913, file: !1736, line: 176, type: !11924)
!11924 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !11925)
!11925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !11926)
!11926 = !{!11927}
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11925, file: !250, line: 33, baseType: !103, size: 32)
!11928 = !DILocalVariable(name: "pending", scope: !11913, file: !1736, line: 178, type: !108)
!11929 = !DILocalVariable(name: "unannounced", scope: !11913, file: !1736, line: 185, type: !108)
!11930 = !DILocation(line: 0, scope: !11913)
!11931 = !DILocation(line: 162, column: 49, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11913, file: !1736, line: 162, column: 6)
!11933 = !DILocation(line: 163, column: 17, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11932, file: !1736, line: 162, column: 78)
!11935 = !DILocation(line: 164, column: 13, scope: !11934)
!11936 = !DILocation(line: 165, column: 3, scope: !11934)
!11937 = !DILocation(line: 171, column: 24, scope: !11913)
!11938 = !DILocation(line: 173, column: 10, scope: !11913)
!11939 = !DILocation(line: 174, column: 10, scope: !11913)
!11940 = !DILocalVariable(name: "l", arg: 1, scope: !11941, file: !250, line: 136, type: !11944)
!11941 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !11942, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !11945)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!11924, !11944}
!11944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!11945 = !{!11940, !11946}
!11946 = !DILocalVariable(name: "k", scope: !11941, file: !250, line: 139, type: !11924)
!11947 = !DILocation(line: 0, scope: !11941, inlinedAt: !11948)
!11948 = distinct !DILocation(line: 176, column: 25, scope: !11913)
!11949 = !DILocation(line: 55, column: 2, scope: !11950, inlinedAt: !11954)
!11950 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !11951)
!11951 = !{!11952, !11953}
!11952 = !DILocalVariable(name: "key", scope: !11950, file: !6997, line: 44, type: !32)
!11953 = !DILocalVariable(name: "tmp", scope: !11950, file: !6997, line: 53, type: !32)
!11954 = distinct !DILocation(line: 145, column: 10, scope: !11941, inlinedAt: !11948)
!11955 = !{i64 2222255}
!11956 = !DILocation(line: 0, scope: !11950, inlinedAt: !11954)
!11957 = !DILocation(line: 178, column: 21, scope: !11913)
!11958 = !DILocation(line: 180, column: 18, scope: !11913)
!11959 = !DILocation(line: 182, column: 14, scope: !11913)
!11960 = !DILocation(line: 183, column: 15, scope: !11913)
!11961 = !DILocation(line: 185, column: 39, scope: !11913)
!11962 = !DILocation(line: 185, column: 37, scope: !11913)
!11963 = !DILocation(line: 187, column: 27, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11913, file: !1736, line: 187, column: 6)
!11965 = !DILocation(line: 187, column: 6, scope: !11913)
!11966 = !DILocation(line: 202, column: 27, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11964, file: !1736, line: 195, column: 9)
!11968 = !DILocation(line: 202, column: 48, scope: !11967)
!11969 = !DILocation(line: 203, column: 9, scope: !11967)
!11970 = !DILocation(line: 204, column: 11, scope: !11967)
!11971 = !DILocation(line: 205, column: 13, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11967, file: !1736, line: 205, column: 7)
!11973 = !DILocation(line: 205, column: 7, scope: !11967)
!11974 = !DILocation(line: 0, scope: !11964)
!11975 = !DILocation(line: 212, column: 18, scope: !11913)
!11976 = !DILocation(line: 214, column: 28, scope: !11913)
!11977 = !DILocation(line: 214, column: 16, scope: !11913)
!11978 = !DILocation(line: 215, column: 15, scope: !11913)
!11979 = !DILocation(line: 227, column: 11, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11913, file: !1736, line: 227, column: 6)
!11981 = !DILocation(line: 227, column: 6, scope: !11913)
!11982 = !DILocation(line: 228, column: 15, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11980, file: !1736, line: 227, column: 19)
!11984 = !DILocation(line: 228, column: 38, scope: !11983)
!11985 = !DILocation(line: 228, column: 24, scope: !11983)
!11986 = !DILocation(line: 229, column: 2, scope: !11983)
!11987 = !DILocation(line: 230, column: 24, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11980, file: !1736, line: 229, column: 9)
!11989 = !DILocation(line: 230, column: 15, scope: !11988)
!11990 = !DILocation(line: 0, scope: !11980)
!11991 = !DILocalVariable(name: "key", arg: 2, scope: !11992, file: !250, line: 190, type: !11924)
!11992 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !11993, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !11995)
!11993 = !DISubroutineType(types: !11994)
!11994 = !{null, !11944, !11924}
!11995 = !{!11996, !11991}
!11996 = !DILocalVariable(name: "l", arg: 1, scope: !11992, file: !250, line: 189, type: !11944)
!11997 = !DILocation(line: 0, scope: !11992, inlinedAt: !11998)
!11998 = distinct !DILocation(line: 232, column: 2, scope: !11913)
!11999 = !DILocalVariable(name: "key", arg: 1, scope: !12000, file: !6997, line: 84, type: !32)
!12000 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !12001)
!12001 = !{!11999}
!12002 = !DILocation(line: 0, scope: !12000, inlinedAt: !12003)
!12003 = distinct !DILocation(line: 215, column: 2, scope: !11992, inlinedAt: !11998)
!12004 = !DILocation(line: 95, column: 2, scope: !12000, inlinedAt: !12003)
!12005 = !{i64 2223072}
!12006 = !DILocation(line: 234, column: 1, scope: !11913)
!12007 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1736, file: !1736, line: 236, type: !3591, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !12008)
!12008 = !{!12009, !12010}
!12009 = !DILocalVariable(name: "key", scope: !12007, file: !1736, line: 242, type: !11924)
!12010 = !DILocalVariable(name: "cyc", scope: !12007, file: !1736, line: 243, type: !108)
!12011 = !DILocation(line: 0, scope: !11941, inlinedAt: !12012)
!12012 = distinct !DILocation(line: 242, column: 25, scope: !12007)
!12013 = !DILocation(line: 55, column: 2, scope: !11950, inlinedAt: !12014)
!12014 = distinct !DILocation(line: 145, column: 10, scope: !11941, inlinedAt: !12012)
!12015 = !DILocation(line: 0, scope: !11950, inlinedAt: !12014)
!12016 = !DILocation(line: 0, scope: !12007)
!12017 = !DILocation(line: 243, column: 17, scope: !12007)
!12018 = !DILocation(line: 243, column: 29, scope: !12007)
!12019 = !DILocation(line: 243, column: 27, scope: !12007)
!12020 = !DILocation(line: 243, column: 43, scope: !12007)
!12021 = !DILocation(line: 243, column: 41, scope: !12007)
!12022 = !DILocation(line: 0, scope: !11992, inlinedAt: !12023)
!12023 = distinct !DILocation(line: 245, column: 2, scope: !12007)
!12024 = !DILocation(line: 0, scope: !12000, inlinedAt: !12025)
!12025 = distinct !DILocation(line: 215, column: 2, scope: !11992, inlinedAt: !12023)
!12026 = !DILocation(line: 95, column: 2, scope: !12000, inlinedAt: !12025)
!12027 = !DILocation(line: 246, column: 13, scope: !12007)
!12028 = !DILocation(line: 246, column: 2, scope: !12007)
!12029 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1736, file: !1736, line: 249, type: !3591, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !12030)
!12030 = !{!12031, !12032}
!12031 = !DILocalVariable(name: "key", scope: !12029, file: !1736, line: 251, type: !11924)
!12032 = !DILocalVariable(name: "ret", scope: !12029, file: !1736, line: 252, type: !108)
!12033 = !DILocation(line: 0, scope: !11941, inlinedAt: !12034)
!12034 = distinct !DILocation(line: 251, column: 25, scope: !12029)
!12035 = !DILocation(line: 55, column: 2, scope: !11950, inlinedAt: !12036)
!12036 = distinct !DILocation(line: 145, column: 10, scope: !11941, inlinedAt: !12034)
!12037 = !DILocation(line: 0, scope: !11950, inlinedAt: !12036)
!12038 = !DILocation(line: 0, scope: !12029)
!12039 = !DILocation(line: 252, column: 17, scope: !12029)
!12040 = !DILocation(line: 252, column: 29, scope: !12029)
!12041 = !DILocation(line: 252, column: 27, scope: !12029)
!12042 = !DILocation(line: 0, scope: !11992, inlinedAt: !12043)
!12043 = distinct !DILocation(line: 254, column: 2, scope: !12029)
!12044 = !DILocation(line: 0, scope: !12000, inlinedAt: !12045)
!12045 = distinct !DILocation(line: 215, column: 2, scope: !11992, inlinedAt: !12043)
!12046 = !DILocation(line: 95, column: 2, scope: !12000, inlinedAt: !12045)
!12047 = !DILocation(line: 255, column: 2, scope: !12029)
!12048 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1736, file: !1736, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !251)
!12049 = !DILocation(line: 260, column: 6, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12048, file: !1736, line: 260, column: 6)
!12051 = !DILocation(line: 260, column: 16, scope: !12050)
!12052 = !DILocation(line: 260, column: 6, scope: !12048)
!12053 = !DILocation(line: 261, column: 17, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12050, file: !1736, line: 260, column: 34)
!12055 = !DILocation(line: 262, column: 2, scope: !12054)
!12056 = !DILocation(line: 263, column: 1, scope: !12048)
!12057 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1736, file: !1736, line: 265, type: !334, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1660, retainedNodes: !251)
!12058 = !DILocation(line: 267, column: 16, scope: !12057)
!12059 = !DILocation(line: 268, column: 1, scope: !12057)
!12060 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12061, file: !12061, line: 9, type: !12062, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12085)
!12061 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12062 = !DISubroutineType(types: !12063)
!12063 = !{!103, !12064, !185, !12084}
!12064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12065, size: 32)
!12065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12066)
!12066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1615, line: 60, size: 64, elements: !12067)
!12067 = !{!12068, !12083}
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12066, file: !1615, line: 69, baseType: !12069, size: 32)
!12069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12070, size: 32)
!12070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12071)
!12071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1615, line: 50, size: 64, elements: !12072)
!12072 = !{!12073, !12081, !12082}
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12071, file: !1615, line: 52, baseType: !12074, size: 32)
!12074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12075, size: 32)
!12075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12076)
!12076 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1626, line: 37, baseType: !12077)
!12077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1626, line: 32, size: 64, elements: !12078)
!12078 = !{!12079, !12080}
!12079 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12077, file: !1626, line: 34, baseType: !108, size: 32)
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12077, file: !1626, line: 36, baseType: !108, size: 32, offset: 32)
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12071, file: !1615, line: 54, baseType: !185, size: 8, offset: 32)
!12082 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12071, file: !1615, line: 56, baseType: !185, size: 8, offset: 40)
!12083 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12066, file: !1615, line: 71, baseType: !185, size: 8, offset: 32)
!12084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12069, size: 32)
!12085 = !{!12086, !12087, !12088}
!12086 = !DILocalVariable(name: "config", arg: 1, scope: !12060, file: !12061, line: 9, type: !12064)
!12087 = !DILocalVariable(name: "id", arg: 2, scope: !12060, file: !12061, line: 9, type: !185)
!12088 = !DILocalVariable(name: "state", arg: 3, scope: !12060, file: !12061, line: 10, type: !12084)
!12089 = !DILocation(line: 0, scope: !12060)
!12090 = !DILocation(line: 12, column: 20, scope: !12060)
!12091 = !DILocation(line: 13, column: 27, scope: !12060)
!12092 = !DILocation(line: 13, column: 42, scope: !12060)
!12093 = !DILocation(line: 13, column: 19, scope: !12060)
!12094 = !DILocation(line: 13, column: 16, scope: !12060)
!12095 = !DILocation(line: 13, column: 2, scope: !12060)
!12096 = distinct !{!12096, !12095, !12097}
!12097 = !DILocation(line: 19, column: 2, scope: !12060)
!12098 = !DILocation(line: 14, column: 23, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !12061, line: 14, column: 7)
!12100 = distinct !DILexicalBlock(scope: !12060, file: !12061, line: 13, column: 54)
!12101 = !DILocation(line: 14, column: 10, scope: !12099)
!12102 = !DILocation(line: 18, column: 11, scope: !12100)
!12103 = !DILocation(line: 14, column: 7, scope: !12100)
!12104 = !DILocation(line: 22, column: 1, scope: !12060)
!12105 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1853, file: !1853, line: 193, type: !12106, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1771, retainedNodes: !12115)
!12106 = !DISubroutineType(types: !12107)
!12107 = !{!103, !12108, !185, !22}
!12108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12109, size: 32)
!12109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12110)
!12110 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1626, line: 37, baseType: !12111)
!12111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1626, line: 32, size: 64, elements: !12112)
!12112 = !{!12113, !12114}
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12111, file: !1626, line: 34, baseType: !108, size: 32)
!12114 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12111, file: !1626, line: 36, baseType: !108, size: 32, offset: 32)
!12115 = !{!12116, !12117, !12118, !12119, !12120, !12121, !12122, !12123, !12125}
!12116 = !DILocalVariable(name: "pins", arg: 1, scope: !12105, file: !1853, line: 193, type: !12108)
!12117 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12105, file: !1853, line: 193, type: !185)
!12118 = !DILocalVariable(name: "reg", arg: 3, scope: !12105, file: !1853, line: 194, type: !22)
!12119 = !DILocalVariable(name: "pin", scope: !12105, file: !1853, line: 196, type: !108)
!12120 = !DILocalVariable(name: "mux", scope: !12105, file: !1853, line: 196, type: !108)
!12121 = !DILocalVariable(name: "pin_cgf", scope: !12105, file: !1853, line: 197, type: !108)
!12122 = !DILocalVariable(name: "ret", scope: !12105, file: !1853, line: 198, type: !103)
!12123 = !DILocalVariable(name: "i", scope: !12124, file: !1853, line: 209, type: !185)
!12124 = distinct !DILexicalBlock(scope: !12105, file: !1853, line: 209, column: 2)
!12125 = !DILocalVariable(name: "gpio_out", scope: !12126, file: !1853, line: 239, type: !108)
!12126 = distinct !DILexicalBlock(scope: !12127, file: !1853, line: 238, column: 55)
!12127 = distinct !DILexicalBlock(scope: !12128, file: !1853, line: 238, column: 14)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !1853, line: 236, column: 14)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !1853, line: 234, column: 7)
!12130 = distinct !DILexicalBlock(scope: !12131, file: !1853, line: 209, column: 41)
!12131 = distinct !DILexicalBlock(scope: !12124, file: !1853, line: 209, column: 2)
!12132 = !DILocation(line: 0, scope: !12105)
!12133 = !DILocation(line: 0, scope: !12124)
!12134 = !DILocation(line: 209, column: 25, scope: !12131)
!12135 = !DILocation(line: 209, column: 2, scope: !12124)
!12136 = distinct !{!12136, !12135, !12137}
!12137 = !DILocation(line: 259, column: 2, scope: !12124)
!12138 = !DILocation(line: 210, column: 17, scope: !12130)
!12139 = !DILocation(line: 234, column: 7, scope: !12129)
!12140 = !DILocation(line: 234, column: 33, scope: !12129)
!12141 = !DILocation(line: 234, column: 7, scope: !12130)
!12142 = !DILocation(line: 235, column: 22, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12129, file: !1853, line: 234, column: 49)
!12144 = !DILocation(line: 235, column: 29, scope: !12143)
!12145 = !DILocation(line: 236, column: 3, scope: !12143)
!12146 = !DILocation(line: 236, column: 14, scope: !12129)
!12147 = !DILocation(line: 239, column: 32, scope: !12126)
!12148 = !DILocation(line: 0, scope: !12126)
!12149 = !DILocation(line: 241, column: 8, scope: !12126)
!12150 = !DILocation(line: 246, column: 3, scope: !12126)
!12151 = !DILocation(line: 252, column: 9, scope: !12130)
!12152 = !DILocation(line: 255, column: 9, scope: !12130)
!12153 = !DILocation(line: 256, column: 11, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12130, file: !1853, line: 256, column: 7)
!12155 = !DILocation(line: 209, column: 37, scope: !12131)
!12156 = !DILocation(line: 256, column: 7, scope: !12130)
!12157 = !DILocation(line: 262, column: 1, scope: !12105)
!12158 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1853, file: !1853, line: 176, type: !12159, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1771, retainedNodes: !12161)
!12159 = !DISubroutineType(types: !12160)
!12160 = !{!103, !108, !108, !108}
!12161 = !{!12162, !12163, !12164, !12165}
!12162 = !DILocalVariable(name: "pin", arg: 1, scope: !12158, file: !1853, line: 176, type: !108)
!12163 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12158, file: !1853, line: 176, type: !108)
!12164 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12158, file: !1853, line: 176, type: !108)
!12165 = !DILocalVariable(name: "port_device", scope: !12158, file: !1853, line: 178, type: !1783)
!12166 = !DILocation(line: 0, scope: !12158)
!12167 = !DILocation(line: 180, column: 22, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12158, file: !1853, line: 180, column: 6)
!12169 = !DILocation(line: 180, column: 6, scope: !12158)
!12170 = !DILocation(line: 180, column: 6, scope: !12168)
!12171 = !DILocation(line: 184, column: 16, scope: !12158)
!12172 = !DILocation(line: 186, column: 19, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12158, file: !1853, line: 186, column: 6)
!12174 = !DILocation(line: 186, column: 28, scope: !12173)
!12175 = !DILocation(line: 186, column: 33, scope: !12173)
!12176 = !DILocation(line: 186, column: 6, scope: !12158)
!12177 = !DILocation(line: 190, column: 43, scope: !12158)
!12178 = !DILocation(line: 190, column: 9, scope: !12158)
!12179 = !DILocation(line: 190, column: 2, scope: !12158)
!12180 = !DILocation(line: 191, column: 1, scope: !12158)
!12181 = distinct !DISubprogram(name: "device_is_ready", scope: !10137, file: !10137, line: 47, type: !12182, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1771, retainedNodes: !12184)
!12182 = !DISubroutineType(types: !12183)
!12183 = !{!131, !1783}
!12184 = !{!12185}
!12185 = !DILocalVariable(name: "dev", arg: 1, scope: !12181, file: !10137, line: 47, type: !1783)
!12186 = !DILocation(line: 0, scope: !12181)
!12187 = !DILocation(line: 55, column: 2, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12181, file: !10137, line: 55, column: 2)
!12189 = !{i64 2149460325}
!12190 = !DILocation(line: 56, column: 9, scope: !12181)
!12191 = !DILocation(line: 56, column: 2, scope: !12181)
!12192 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !12182, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1771, retainedNodes: !12193)
!12193 = !{!12194}
!12194 = !DILocalVariable(name: "dev", arg: 1, scope: !12192, file: !429, line: 730, type: !1783)
!12195 = !DILocation(line: 0, scope: !12192)
!12196 = !DILocation(line: 732, column: 9, scope: !12192)
!12197 = !DILocation(line: 732, column: 2, scope: !12192)
!12198 = distinct !DISubprogram(name: "SystemInit", scope: !1902, file: !1902, line: 167, type: !334, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !251)
!12199 = !DILocation(line: 182, column: 1, scope: !12198)
!12200 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1902, file: !1902, line: 220, type: !334, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1861, retainedNodes: !12201)
!12201 = !{!12202, !12203, !12204, !12205, !12206}
!12202 = !DILocalVariable(name: "tmp", scope: !12200, file: !1902, line: 222, type: !108)
!12203 = !DILocalVariable(name: "pllvco", scope: !12200, file: !1902, line: 222, type: !108)
!12204 = !DILocalVariable(name: "pllp", scope: !12200, file: !1902, line: 222, type: !108)
!12205 = !DILocalVariable(name: "pllsource", scope: !12200, file: !1902, line: 222, type: !108)
!12206 = !DILocalVariable(name: "pllm", scope: !12200, file: !1902, line: 222, type: !108)
!12207 = !DILocation(line: 0, scope: !12200)
!12208 = !DILocation(line: 225, column: 14, scope: !12200)
!12209 = !DILocation(line: 225, column: 19, scope: !12200)
!12210 = !DILocation(line: 227, column: 3, scope: !12200)
!12211 = !DILocation(line: 240, column: 25, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12200, file: !1902, line: 228, column: 3)
!12213 = !DILocation(line: 241, column: 19, scope: !12212)
!12214 = !DILocation(line: 241, column: 27, scope: !12212)
!12215 = !DILocation(line: 0, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12212, file: !1902, line: 243, column: 11)
!12217 = !DILocation(line: 254, column: 22, scope: !12212)
!12218 = !DILocation(line: 254, column: 62, scope: !12212)
!12219 = !DILocation(line: 255, column: 31, scope: !12212)
!12220 = !DILocation(line: 256, column: 7, scope: !12212)
!12221 = !DILocation(line: 0, scope: !12212)
!12222 = !DILocation(line: 263, column: 30, scope: !12200)
!12223 = !DILocation(line: 263, column: 52, scope: !12200)
!12224 = !DILocation(line: 263, column: 9, scope: !12200)
!12225 = !DILocation(line: 265, column: 19, scope: !12200)
!12226 = !DILocation(line: 266, column: 1, scope: !12200)
!12227 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12228, file: !12228, line: 200, type: !12229, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !251)
!12228 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12229 = !DISubroutineType(types: !12230)
!12230 = !{!12231}
!12231 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3064, line: 44, baseType: !3063)
!12232 = !DILocation(line: 202, column: 3, scope: !12227)
!12233 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12228, file: !12228, line: 219, type: !12234, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12259)
!12234 = !DISubroutineType(types: !12235)
!12235 = !{!12231, !12236}
!12236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12237, size: 32)
!12237 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12238, line: 70, baseType: !12239)
!12238 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12238, line: 49, size: 416, elements: !12240)
!12240 = !{!12241, !12242, !12243, !12244, !12245, !12246, !12247}
!12241 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12239, file: !12238, line: 51, baseType: !108, size: 32)
!12242 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12239, file: !12238, line: 54, baseType: !108, size: 32, offset: 32)
!12243 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12239, file: !12238, line: 57, baseType: !108, size: 32, offset: 64)
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12239, file: !12238, line: 60, baseType: !108, size: 32, offset: 96)
!12245 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12239, file: !12238, line: 63, baseType: !108, size: 32, offset: 128)
!12246 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12239, file: !12238, line: 66, baseType: !108, size: 32, offset: 160)
!12247 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12239, file: !12238, line: 69, baseType: !12248, size: 224, offset: 192)
!12248 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12249, line: 73, baseType: !12250)
!12249 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12249, line: 45, size: 224, elements: !12251)
!12251 = !{!12252, !12253, !12254, !12255, !12256, !12257, !12258}
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12250, file: !12249, line: 47, baseType: !108, size: 32)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12250, file: !12249, line: 50, baseType: !108, size: 32, offset: 32)
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12250, file: !12249, line: 53, baseType: !108, size: 32, offset: 64)
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12250, file: !12249, line: 56, baseType: !108, size: 32, offset: 96)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12250, file: !12249, line: 60, baseType: !108, size: 32, offset: 128)
!12257 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12250, file: !12249, line: 63, baseType: !108, size: 32, offset: 160)
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12250, file: !12249, line: 68, baseType: !108, size: 32, offset: 192)
!12259 = !{!12260, !12261, !12262, !12263, !12267}
!12260 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12233, file: !12228, line: 219, type: !12236)
!12261 = !DILocalVariable(name: "tickstart", scope: !12233, file: !12228, line: 221, type: !108)
!12262 = !DILocalVariable(name: "pll_config", scope: !12233, file: !12228, line: 221, type: !108)
!12263 = !DILocalVariable(name: "pwrclkchanged", scope: !12264, file: !12228, line: 391, type: !12266)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !12228, line: 390, column: 3)
!12265 = distinct !DILexicalBlock(scope: !12233, file: !12228, line: 389, column: 6)
!12266 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !930, line: 188, baseType: !3070)
!12267 = !DILocalVariable(name: "tmpreg", scope: !12268, file: !12228, line: 400, type: !409)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !12228, line: 400, column: 7)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !12228, line: 399, column: 5)
!12270 = distinct !DILexicalBlock(scope: !12264, file: !12228, line: 398, column: 8)
!12271 = !DILocation(line: 0, scope: !12233)
!12272 = !DILocation(line: 224, column: 24, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12233, file: !12228, line: 224, column: 6)
!12274 = !DILocation(line: 224, column: 6, scope: !12233)
!12275 = !DILocation(line: 232, column: 27, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12233, file: !12228, line: 232, column: 6)
!12277 = !DILocation(line: 232, column: 43, scope: !12276)
!12278 = !DILocation(line: 232, column: 69, scope: !12276)
!12279 = !DILocation(line: 232, column: 6, scope: !12233)
!12280 = !DILocation(line: 237, column: 9, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !12228, line: 237, column: 8)
!12282 = distinct !DILexicalBlock(scope: !12276, file: !12228, line: 233, column: 3)
!12283 = !DILocation(line: 237, column: 39, scope: !12281)
!12284 = !DILocation(line: 237, column: 60, scope: !12281)
!12285 = !DILocation(line: 238, column: 9, scope: !12281)
!12286 = !DILocation(line: 238, column: 39, scope: !12281)
!12287 = !DILocation(line: 238, column: 60, scope: !12281)
!12288 = !DILocation(line: 238, column: 70, scope: !12281)
!12289 = !DILocation(line: 238, column: 78, scope: !12281)
!12290 = !DILocation(line: 238, column: 100, scope: !12281)
!12291 = !DILocation(line: 237, column: 8, scope: !12282)
!12292 = !DILocation(line: 240, column: 11, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !12228, line: 240, column: 10)
!12294 = distinct !DILexicalBlock(scope: !12281, file: !12228, line: 239, column: 5)
!12295 = !DILocation(line: 240, column: 57, scope: !12293)
!12296 = !DILocation(line: 240, column: 80, scope: !12293)
!12297 = !DILocation(line: 240, column: 89, scope: !12293)
!12298 = !DILocation(line: 240, column: 10, scope: !12294)
!12299 = !DILocation(line: 248, column: 7, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12301, file: !12228, line: 248, column: 7)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !12228, line: 248, column: 7)
!12302 = distinct !DILexicalBlock(scope: !12281, file: !12228, line: 246, column: 5)
!12303 = !DILocation(line: 248, column: 7, scope: !12301)
!12304 = !DILocation(line: 248, column: 7, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12300, file: !12228, line: 248, column: 7)
!12306 = !DILocation(line: 248, column: 7, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12308, file: !12228, line: 248, column: 7)
!12308 = distinct !DILexicalBlock(scope: !12300, file: !12228, line: 248, column: 7)
!12309 = !DILocation(line: 248, column: 7, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12308, file: !12228, line: 248, column: 7)
!12311 = !DILocation(line: 0, scope: !12300)
!12312 = !DILocation(line: 251, column: 30, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12302, file: !12228, line: 251, column: 10)
!12314 = !DILocation(line: 251, column: 40, scope: !12313)
!12315 = !DILocation(line: 0, scope: !12313)
!12316 = !DILocation(line: 251, column: 10, scope: !12302)
!12317 = !DILocation(line: 257, column: 15, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12313, file: !12228, line: 252, column: 7)
!12319 = !DILocation(line: 257, column: 51, scope: !12318)
!12320 = !DILocation(line: 257, column: 9, scope: !12318)
!12321 = !DILocation(line: 259, column: 15, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !12228, line: 259, column: 14)
!12323 = distinct !DILexicalBlock(scope: !12318, file: !12228, line: 258, column: 9)
!12324 = !DILocation(line: 259, column: 29, scope: !12322)
!12325 = !DILocation(line: 259, column: 43, scope: !12322)
!12326 = !DILocation(line: 259, column: 14, scope: !12323)
!12327 = distinct !{!12327, !12320, !12328}
!12328 = !DILocation(line: 263, column: 9, scope: !12318)
!12329 = !DILocation(line: 271, column: 15, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12313, file: !12228, line: 266, column: 7)
!12331 = !DILocation(line: 271, column: 9, scope: !12330)
!12332 = !DILocation(line: 273, column: 15, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !12228, line: 273, column: 14)
!12334 = distinct !DILexicalBlock(scope: !12330, file: !12228, line: 272, column: 9)
!12335 = !DILocation(line: 273, column: 29, scope: !12333)
!12336 = !DILocation(line: 273, column: 43, scope: !12333)
!12337 = !DILocation(line: 273, column: 14, scope: !12334)
!12338 = distinct !{!12338, !12331, !12339}
!12339 = !DILocation(line: 277, column: 9, scope: !12330)
!12340 = !DILocation(line: 282, column: 27, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12233, file: !12228, line: 282, column: 6)
!12342 = !DILocation(line: 282, column: 43, scope: !12341)
!12343 = !DILocation(line: 282, column: 69, scope: !12341)
!12344 = !DILocation(line: 282, column: 6, scope: !12233)
!12345 = !DILocation(line: 289, column: 9, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12347, file: !12228, line: 289, column: 8)
!12347 = distinct !DILexicalBlock(scope: !12341, file: !12228, line: 283, column: 3)
!12348 = !DILocation(line: 289, column: 39, scope: !12346)
!12349 = !DILocation(line: 289, column: 60, scope: !12346)
!12350 = !DILocation(line: 290, column: 9, scope: !12346)
!12351 = !DILocation(line: 290, column: 39, scope: !12346)
!12352 = !DILocation(line: 290, column: 60, scope: !12346)
!12353 = !DILocation(line: 290, column: 70, scope: !12346)
!12354 = !DILocation(line: 290, column: 78, scope: !12346)
!12355 = !DILocation(line: 290, column: 100, scope: !12346)
!12356 = !DILocation(line: 289, column: 8, scope: !12347)
!12357 = !DILocation(line: 293, column: 11, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12359, file: !12228, line: 293, column: 10)
!12359 = distinct !DILexicalBlock(scope: !12346, file: !12228, line: 291, column: 5)
!12360 = !DILocation(line: 293, column: 57, scope: !12358)
!12361 = !DILocation(line: 293, column: 80, scope: !12358)
!12362 = !DILocation(line: 293, column: 89, scope: !12358)
!12363 = !DILocation(line: 293, column: 10, scope: !12359)
!12364 = !DILocation(line: 307, column: 30, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !12228, line: 307, column: 10)
!12366 = distinct !DILexicalBlock(scope: !12346, file: !12228, line: 305, column: 5)
!12367 = !DILocation(line: 307, column: 39, scope: !12365)
!12368 = !DILocation(line: 307, column: 10, scope: !12366)
!12369 = !DILocation(line: 310, column: 9, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12365, file: !12228, line: 308, column: 7)
!12371 = !DILocation(line: 313, column: 21, scope: !12370)
!12372 = !DILocation(line: 316, column: 9, scope: !12370)
!12373 = !DILocation(line: 316, column: 15, scope: !12370)
!12374 = !DILocation(line: 316, column: 51, scope: !12370)
!12375 = !DILocation(line: 318, column: 15, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12377, file: !12228, line: 318, column: 14)
!12377 = distinct !DILexicalBlock(scope: !12370, file: !12228, line: 317, column: 9)
!12378 = !DILocation(line: 318, column: 29, scope: !12376)
!12379 = !DILocation(line: 318, column: 43, scope: !12376)
!12380 = !DILocation(line: 318, column: 14, scope: !12377)
!12381 = distinct !{!12381, !12372, !12382}
!12382 = !DILocation(line: 322, column: 9, scope: !12370)
!12383 = !DILocation(line: 330, column: 9, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12365, file: !12228, line: 328, column: 7)
!12385 = !DILocation(line: 333, column: 21, scope: !12384)
!12386 = !DILocation(line: 336, column: 9, scope: !12384)
!12387 = !DILocation(line: 336, column: 15, scope: !12384)
!12388 = !DILocation(line: 338, column: 15, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12390, file: !12228, line: 338, column: 14)
!12390 = distinct !DILexicalBlock(scope: !12384, file: !12228, line: 337, column: 9)
!12391 = !DILocation(line: 338, column: 29, scope: !12389)
!12392 = !DILocation(line: 338, column: 43, scope: !12389)
!12393 = !DILocation(line: 338, column: 14, scope: !12390)
!12394 = distinct !{!12394, !12386, !12395}
!12395 = !DILocation(line: 342, column: 9, scope: !12384)
!12396 = !DILocation(line: 0, scope: !12346)
!12397 = !DILocation(line: 347, column: 27, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12233, file: !12228, line: 347, column: 6)
!12399 = !DILocation(line: 347, column: 43, scope: !12398)
!12400 = !DILocation(line: 347, column: 69, scope: !12398)
!12401 = !DILocation(line: 347, column: 6, scope: !12233)
!12402 = !DILocation(line: 353, column: 28, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12404, file: !12228, line: 353, column: 8)
!12404 = distinct !DILexicalBlock(scope: !12398, file: !12228, line: 348, column: 3)
!12405 = !DILocation(line: 353, column: 37, scope: !12403)
!12406 = !DILocation(line: 353, column: 8, scope: !12404)
!12407 = !DILocation(line: 356, column: 7, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12403, file: !12228, line: 354, column: 5)
!12409 = !DILocation(line: 359, column: 19, scope: !12408)
!12410 = !DILocation(line: 362, column: 7, scope: !12408)
!12411 = !DILocation(line: 362, column: 13, scope: !12408)
!12412 = !DILocation(line: 362, column: 49, scope: !12408)
!12413 = !DILocation(line: 364, column: 13, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !12228, line: 364, column: 12)
!12415 = distinct !DILexicalBlock(scope: !12408, file: !12228, line: 363, column: 7)
!12416 = !DILocation(line: 364, column: 27, scope: !12414)
!12417 = !DILocation(line: 364, column: 41, scope: !12414)
!12418 = !DILocation(line: 364, column: 12, scope: !12415)
!12419 = distinct !{!12419, !12410, !12420}
!12420 = !DILocation(line: 368, column: 7, scope: !12408)
!12421 = !DILocation(line: 373, column: 7, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12403, file: !12228, line: 371, column: 5)
!12423 = !DILocation(line: 376, column: 19, scope: !12422)
!12424 = !DILocation(line: 379, column: 7, scope: !12422)
!12425 = !DILocation(line: 379, column: 13, scope: !12422)
!12426 = !DILocation(line: 381, column: 13, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12428, file: !12228, line: 381, column: 12)
!12428 = distinct !DILexicalBlock(scope: !12422, file: !12228, line: 380, column: 7)
!12429 = !DILocation(line: 381, column: 27, scope: !12427)
!12430 = !DILocation(line: 381, column: 41, scope: !12427)
!12431 = !DILocation(line: 381, column: 12, scope: !12428)
!12432 = distinct !{!12432, !12424, !12433}
!12433 = !DILocation(line: 385, column: 7, scope: !12422)
!12434 = !DILocation(line: 389, column: 27, scope: !12265)
!12435 = !DILocation(line: 389, column: 43, scope: !12265)
!12436 = !DILocation(line: 389, column: 69, scope: !12265)
!12437 = !DILocation(line: 389, column: 6, scope: !12233)
!12438 = !DILocation(line: 0, scope: !12264)
!12439 = !DILocation(line: 398, column: 8, scope: !12270)
!12440 = !DILocation(line: 398, column: 8, scope: !12264)
!12441 = !DILocation(line: 400, column: 7, scope: !12268)
!12442 = !DILocation(line: 400, column: 7, scope: !12269)
!12443 = !DILocation(line: 402, column: 5, scope: !12269)
!12444 = !DILocation(line: 404, column: 8, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12264, file: !12228, line: 404, column: 8)
!12446 = !DILocation(line: 404, column: 8, scope: !12264)
!12447 = !DILocation(line: 407, column: 7, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12445, file: !12228, line: 405, column: 5)
!12449 = !DILocation(line: 410, column: 19, scope: !12448)
!12450 = !DILocation(line: 412, column: 7, scope: !12448)
!12451 = !DILocation(line: 412, column: 13, scope: !12448)
!12452 = !DILocation(line: 414, column: 13, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12454, file: !12228, line: 414, column: 12)
!12454 = distinct !DILexicalBlock(scope: !12448, file: !12228, line: 413, column: 7)
!12455 = !DILocation(line: 414, column: 27, scope: !12453)
!12456 = !DILocation(line: 414, column: 40, scope: !12453)
!12457 = !DILocation(line: 414, column: 12, scope: !12454)
!12458 = distinct !{!12458, !12450, !12459}
!12459 = !DILocation(line: 418, column: 7, scope: !12448)
!12460 = !DILocation(line: 422, column: 5, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !12228, line: 422, column: 5)
!12462 = distinct !DILexicalBlock(scope: !12264, file: !12228, line: 422, column: 5)
!12463 = !DILocation(line: 422, column: 5, scope: !12462)
!12464 = !DILocation(line: 422, column: 5, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12461, file: !12228, line: 422, column: 5)
!12466 = !DILocation(line: 422, column: 5, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12468, file: !12228, line: 422, column: 5)
!12468 = distinct !DILexicalBlock(scope: !12461, file: !12228, line: 422, column: 5)
!12469 = !DILocation(line: 422, column: 5, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12468, file: !12228, line: 422, column: 5)
!12471 = !DILocation(line: 0, scope: !12461)
!12472 = !DILocation(line: 424, column: 28, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12264, file: !12228, line: 424, column: 8)
!12474 = !DILocation(line: 424, column: 38, scope: !12473)
!12475 = !DILocation(line: 0, scope: !12473)
!12476 = !DILocation(line: 424, column: 8, scope: !12264)
!12477 = !DILocation(line: 430, column: 13, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12473, file: !12228, line: 425, column: 5)
!12479 = !DILocation(line: 430, column: 49, scope: !12478)
!12480 = !DILocation(line: 430, column: 7, scope: !12478)
!12481 = !DILocation(line: 432, column: 13, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !12228, line: 432, column: 12)
!12483 = distinct !DILexicalBlock(scope: !12478, file: !12228, line: 431, column: 7)
!12484 = !DILocation(line: 432, column: 27, scope: !12482)
!12485 = !DILocation(line: 432, column: 41, scope: !12482)
!12486 = !DILocation(line: 432, column: 12, scope: !12483)
!12487 = distinct !{!12487, !12480, !12488}
!12488 = !DILocation(line: 436, column: 7, scope: !12478)
!12489 = !DILocation(line: 444, column: 13, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12473, file: !12228, line: 439, column: 5)
!12491 = !DILocation(line: 444, column: 7, scope: !12490)
!12492 = !DILocation(line: 446, column: 13, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12494, file: !12228, line: 446, column: 12)
!12494 = distinct !DILexicalBlock(scope: !12490, file: !12228, line: 445, column: 7)
!12495 = !DILocation(line: 446, column: 27, scope: !12493)
!12496 = !DILocation(line: 446, column: 41, scope: !12493)
!12497 = !DILocation(line: 446, column: 12, scope: !12494)
!12498 = distinct !{!12498, !12491, !12499}
!12499 = !DILocation(line: 450, column: 7, scope: !12490)
!12500 = !DILocation(line: 454, column: 8, scope: !12264)
!12501 = !DILocation(line: 456, column: 7, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !12228, line: 455, column: 5)
!12503 = distinct !DILexicalBlock(scope: !12264, file: !12228, line: 454, column: 8)
!12504 = !DILocation(line: 457, column: 5, scope: !12502)
!12505 = !DILocation(line: 462, column: 31, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12233, file: !12228, line: 462, column: 7)
!12507 = !DILocation(line: 462, column: 41, scope: !12506)
!12508 = !DILocation(line: 462, column: 7, scope: !12233)
!12509 = !DILocation(line: 465, column: 8, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !12228, line: 465, column: 8)
!12511 = distinct !DILexicalBlock(scope: !12506, file: !12228, line: 463, column: 3)
!12512 = !DILocation(line: 465, column: 38, scope: !12510)
!12513 = !DILocation(line: 465, column: 8, scope: !12511)
!12514 = !DILocation(line: 467, column: 44, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !12228, line: 467, column: 10)
!12516 = distinct !DILexicalBlock(scope: !12510, file: !12228, line: 466, column: 5)
!12517 = !DILocation(line: 0, scope: !12515)
!12518 = !DILocation(line: 467, column: 10, scope: !12516)
!12519 = !DILocation(line: 483, column: 15, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12515, file: !12228, line: 468, column: 7)
!12521 = !DILocation(line: 483, column: 9, scope: !12520)
!12522 = !DILocation(line: 485, column: 15, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !12228, line: 485, column: 14)
!12524 = distinct !DILexicalBlock(scope: !12520, file: !12228, line: 484, column: 9)
!12525 = !DILocation(line: 485, column: 29, scope: !12523)
!12526 = !DILocation(line: 485, column: 43, scope: !12523)
!12527 = !DILocation(line: 485, column: 14, scope: !12524)
!12528 = distinct !{!12528, !12521, !12529}
!12529 = !DILocation(line: 489, column: 9, scope: !12520)
!12530 = !DILocation(line: 492, column: 9, scope: !12520)
!12531 = !DILocation(line: 498, column: 9, scope: !12520)
!12532 = !DILocation(line: 501, column: 21, scope: !12520)
!12533 = !DILocation(line: 504, column: 9, scope: !12520)
!12534 = !DILocation(line: 504, column: 15, scope: !12520)
!12535 = !DILocation(line: 504, column: 51, scope: !12520)
!12536 = !DILocation(line: 506, column: 15, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12538, file: !12228, line: 506, column: 14)
!12538 = distinct !DILexicalBlock(scope: !12520, file: !12228, line: 505, column: 9)
!12539 = !DILocation(line: 506, column: 29, scope: !12537)
!12540 = !DILocation(line: 506, column: 43, scope: !12537)
!12541 = !DILocation(line: 506, column: 14, scope: !12538)
!12542 = distinct !{!12542, !12533, !12543}
!12543 = !DILocation(line: 510, column: 9, scope: !12520)
!12544 = !DILocation(line: 521, column: 15, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12515, file: !12228, line: 513, column: 7)
!12546 = !DILocation(line: 521, column: 9, scope: !12545)
!12547 = !DILocation(line: 523, column: 15, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !12228, line: 523, column: 14)
!12549 = distinct !DILexicalBlock(scope: !12545, file: !12228, line: 522, column: 9)
!12550 = !DILocation(line: 523, column: 29, scope: !12548)
!12551 = !DILocation(line: 523, column: 43, scope: !12548)
!12552 = !DILocation(line: 523, column: 14, scope: !12549)
!12553 = distinct !{!12553, !12546, !12554}
!12554 = !DILocation(line: 527, column: 9, scope: !12545)
!12555 = !DILocation(line: 533, column: 44, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12557, file: !12228, line: 533, column: 10)
!12557 = distinct !DILexicalBlock(scope: !12510, file: !12228, line: 531, column: 5)
!12558 = !DILocation(line: 533, column: 10, scope: !12557)
!12559 = !DILocation(line: 540, column: 27, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12556, file: !12228, line: 538, column: 7)
!12561 = !DILocation(line: 543, column: 14, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12560, file: !12228, line: 542, column: 13)
!12563 = !DILocation(line: 543, column: 81, scope: !12562)
!12564 = !DILocation(line: 543, column: 55, scope: !12562)
!12565 = !DILocation(line: 543, column: 92, scope: !12562)
!12566 = !DILocation(line: 544, column: 14, scope: !12562)
!12567 = !DILocation(line: 544, column: 80, scope: !12562)
!12568 = !DILocation(line: 544, column: 53, scope: !12562)
!12569 = !DILocation(line: 544, column: 111, scope: !12562)
!12570 = !DILocation(line: 545, column: 14, scope: !12562)
!12571 = !DILocation(line: 545, column: 80, scope: !12562)
!12572 = !DILocation(line: 545, column: 86, scope: !12562)
!12573 = !DILocation(line: 545, column: 53, scope: !12562)
!12574 = !DILocation(line: 545, column: 111, scope: !12562)
!12575 = !DILocation(line: 546, column: 14, scope: !12562)
!12576 = !DILocation(line: 546, column: 82, scope: !12562)
!12577 = !DILocation(line: 546, column: 101, scope: !12562)
!12578 = !DILocation(line: 546, column: 53, scope: !12562)
!12579 = !DILocation(line: 546, column: 126, scope: !12562)
!12580 = !DILocation(line: 547, column: 14, scope: !12562)
!12581 = !DILocation(line: 547, column: 80, scope: !12562)
!12582 = !DILocation(line: 547, column: 85, scope: !12562)
!12583 = !DILocation(line: 547, column: 53, scope: !12562)
!12584 = !DILocation(line: 547, column: 111, scope: !12562)
!12585 = !DILocation(line: 548, column: 14, scope: !12562)
!12586 = !DILocation(line: 548, column: 80, scope: !12562)
!12587 = !DILocation(line: 548, column: 85, scope: !12562)
!12588 = !DILocation(line: 548, column: 53, scope: !12562)
!12589 = !DILocation(line: 542, column: 13, scope: !12560)
!12590 = !DILocation(line: 563, column: 3, scope: !12233)
!12591 = !DILocation(line: 564, column: 1, scope: !12233)
!12592 = !DISubprogram(name: "HAL_GetTick", scope: !12593, file: !12593, line: 234, type: !3591, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12593 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12594 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12228, file: !12228, line: 591, type: !12595, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12606)
!12595 = !DISubroutineType(types: !12596)
!12596 = !{!12231, !12597, !108}
!12597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12598, size: 32)
!12598 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12238, line: 92, baseType: !12599)
!12599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12238, line: 75, size: 160, elements: !12600)
!12600 = !{!12601, !12602, !12603, !12604, !12605}
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12599, file: !12238, line: 77, baseType: !108, size: 32)
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12599, file: !12238, line: 80, baseType: !108, size: 32, offset: 32)
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12599, file: !12238, line: 83, baseType: !108, size: 32, offset: 64)
!12604 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12599, file: !12238, line: 86, baseType: !108, size: 32, offset: 96)
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12599, file: !12238, line: 89, baseType: !108, size: 32, offset: 128)
!12606 = !{!12607, !12608, !12609}
!12607 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12594, file: !12228, line: 591, type: !12597)
!12608 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12594, file: !12228, line: 591, type: !108)
!12609 = !DILocalVariable(name: "tickstart", scope: !12594, file: !12228, line: 593, type: !108)
!12610 = !DILocation(line: 0, scope: !12594)
!12611 = !DILocation(line: 596, column: 24, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12594, file: !12228, line: 596, column: 6)
!12613 = !DILocation(line: 596, column: 6, scope: !12594)
!12614 = !DILocation(line: 610, column: 17, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12594, file: !12228, line: 610, column: 6)
!12616 = !DILocation(line: 610, column: 15, scope: !12615)
!12617 = !DILocation(line: 610, column: 6, scope: !12594)
!12618 = !DILocation(line: 613, column: 5, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12615, file: !12228, line: 611, column: 3)
!12620 = !DILocation(line: 617, column: 8, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12619, file: !12228, line: 617, column: 8)
!12622 = !DILocation(line: 617, column: 34, scope: !12621)
!12623 = !DILocation(line: 617, column: 8, scope: !12619)
!12624 = !DILocation(line: 624, column: 27, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12594, file: !12228, line: 624, column: 6)
!12626 = !DILocation(line: 624, column: 38, scope: !12625)
!12627 = !DILocation(line: 624, column: 60, scope: !12625)
!12628 = !DILocation(line: 624, column: 6, scope: !12594)
!12629 = !DILocation(line: 628, column: 40, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12631, file: !12228, line: 628, column: 8)
!12631 = distinct !DILexicalBlock(scope: !12625, file: !12228, line: 625, column: 3)
!12632 = !DILocation(line: 628, column: 63, scope: !12630)
!12633 = !DILocation(line: 628, column: 8, scope: !12631)
!12634 = !DILocation(line: 630, column: 7, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12630, file: !12228, line: 629, column: 5)
!12636 = !DILocation(line: 633, column: 29, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12631, file: !12228, line: 633, column: 8)
!12638 = !DILocation(line: 631, column: 5, scope: !12635)
!12639 = !DILocation(line: 633, column: 40, scope: !12637)
!12640 = !DILocation(line: 633, column: 63, scope: !12637)
!12641 = !DILocation(line: 633, column: 8, scope: !12631)
!12642 = !DILocation(line: 635, column: 7, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12637, file: !12228, line: 634, column: 5)
!12644 = !DILocation(line: 636, column: 5, scope: !12643)
!12645 = !DILocation(line: 639, column: 5, scope: !12631)
!12646 = !DILocation(line: 643, column: 27, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12594, file: !12228, line: 643, column: 6)
!12648 = !DILocation(line: 640, column: 3, scope: !12631)
!12649 = !DILocation(line: 643, column: 38, scope: !12647)
!12650 = !DILocation(line: 643, column: 62, scope: !12647)
!12651 = !DILocation(line: 643, column: 6, scope: !12594)
!12652 = !DILocation(line: 648, column: 27, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !12228, line: 648, column: 8)
!12654 = distinct !DILexicalBlock(scope: !12647, file: !12228, line: 644, column: 3)
!12655 = !DILocation(line: 648, column: 8, scope: !12654)
!12656 = !DILocation(line: 651, column: 10, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12658, file: !12228, line: 651, column: 10)
!12658 = distinct !DILexicalBlock(scope: !12653, file: !12228, line: 649, column: 5)
!12659 = !DILocation(line: 651, column: 46, scope: !12657)
!12660 = !DILocation(line: 651, column: 10, scope: !12658)
!12661 = !DILocation(line: 661, column: 10, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12663, file: !12228, line: 661, column: 10)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !12228, line: 659, column: 5)
!12664 = distinct !DILexicalBlock(scope: !12653, file: !12228, line: 657, column: 13)
!12665 = !DILocation(line: 661, column: 46, scope: !12662)
!12666 = !DILocation(line: 661, column: 10, scope: !12663)
!12667 = !DILocation(line: 670, column: 10, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !12228, line: 670, column: 10)
!12669 = distinct !DILexicalBlock(scope: !12664, file: !12228, line: 668, column: 5)
!12670 = !DILocation(line: 670, column: 46, scope: !12668)
!12671 = !DILocation(line: 670, column: 10, scope: !12669)
!12672 = !DILocation(line: 676, column: 5, scope: !12654)
!12673 = !DILocation(line: 679, column: 17, scope: !12654)
!12674 = !DILocation(line: 681, column: 5, scope: !12654)
!12675 = !DILocation(line: 681, column: 12, scope: !12654)
!12676 = !DILocation(line: 681, column: 65, scope: !12654)
!12677 = !DILocation(line: 681, column: 78, scope: !12654)
!12678 = !DILocation(line: 681, column: 42, scope: !12654)
!12679 = !DILocation(line: 683, column: 12, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !12228, line: 683, column: 11)
!12681 = distinct !DILexicalBlock(scope: !12654, file: !12228, line: 682, column: 5)
!12682 = !DILocation(line: 683, column: 26, scope: !12680)
!12683 = !DILocation(line: 683, column: 39, scope: !12680)
!12684 = !DILocation(line: 683, column: 11, scope: !12681)
!12685 = distinct !{!12685, !12674, !12686}
!12686 = !DILocation(line: 687, column: 5, scope: !12654)
!12687 = !DILocation(line: 691, column: 17, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12594, file: !12228, line: 691, column: 6)
!12689 = !DILocation(line: 691, column: 15, scope: !12688)
!12690 = !DILocation(line: 691, column: 6, scope: !12594)
!12691 = !DILocation(line: 694, column: 5, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12688, file: !12228, line: 692, column: 3)
!12693 = !DILocation(line: 698, column: 8, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12692, file: !12228, line: 698, column: 8)
!12695 = !DILocation(line: 698, column: 34, scope: !12694)
!12696 = !DILocation(line: 698, column: 8, scope: !12692)
!12697 = !DILocation(line: 705, column: 27, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12594, file: !12228, line: 705, column: 6)
!12699 = !DILocation(line: 705, column: 38, scope: !12698)
!12700 = !DILocation(line: 705, column: 61, scope: !12698)
!12701 = !DILocation(line: 705, column: 6, scope: !12594)
!12702 = !DILocation(line: 708, column: 5, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12698, file: !12228, line: 706, column: 3)
!12704 = !DILocation(line: 712, column: 27, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12594, file: !12228, line: 712, column: 6)
!12706 = !DILocation(line: 709, column: 3, scope: !12703)
!12707 = !DILocation(line: 712, column: 38, scope: !12705)
!12708 = !DILocation(line: 712, column: 61, scope: !12705)
!12709 = !DILocation(line: 712, column: 6, scope: !12594)
!12710 = !DILocation(line: 715, column: 5, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12705, file: !12228, line: 713, column: 3)
!12712 = !DILocation(line: 716, column: 3, scope: !12711)
!12713 = !DILocation(line: 719, column: 21, scope: !12594)
!12714 = !DILocation(line: 719, column: 70, scope: !12594)
!12715 = !DILocation(line: 719, column: 91, scope: !12594)
!12716 = !DILocation(line: 719, column: 50, scope: !12594)
!12717 = !DILocation(line: 719, column: 47, scope: !12594)
!12718 = !DILocation(line: 719, column: 19, scope: !12594)
!12719 = !DILocation(line: 722, column: 17, scope: !12594)
!12720 = !DILocation(line: 722, column: 3, scope: !12594)
!12721 = !DILocation(line: 724, column: 3, scope: !12594)
!12722 = !DILocation(line: 725, column: 1, scope: !12594)
!12723 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12228, file: !12228, line: 885, type: !3591, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12724)
!12724 = !{!12725, !12726, !12727, !12728}
!12725 = !DILocalVariable(name: "pllm", scope: !12723, file: !12228, line: 887, type: !108)
!12726 = !DILocalVariable(name: "pllvco", scope: !12723, file: !12228, line: 887, type: !108)
!12727 = !DILocalVariable(name: "pllp", scope: !12723, file: !12228, line: 887, type: !108)
!12728 = !DILocalVariable(name: "sysclockfreq", scope: !12723, file: !12228, line: 888, type: !108)
!12729 = !DILocation(line: 0, scope: !12723)
!12730 = !DILocation(line: 891, column: 16, scope: !12723)
!12731 = !DILocation(line: 891, column: 21, scope: !12723)
!12732 = !DILocation(line: 891, column: 3, scope: !12723)
!12733 = !DILocation(line: 907, column: 19, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12735, file: !12228, line: 904, column: 5)
!12735 = distinct !DILexicalBlock(scope: !12723, file: !12228, line: 892, column: 3)
!12736 = !DILocation(line: 907, column: 27, scope: !12734)
!12737 = !DILocation(line: 908, column: 10, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12734, file: !12228, line: 908, column: 10)
!12739 = !DILocation(line: 0, scope: !12738)
!12740 = !DILocation(line: 918, column: 23, scope: !12734)
!12741 = !DILocation(line: 918, column: 82, scope: !12734)
!12742 = !DILocation(line: 920, column: 28, scope: !12734)
!12743 = !DILocation(line: 921, column: 7, scope: !12734)
!12744 = !DILocation(line: 0, scope: !12735)
!12745 = !DILocation(line: 929, column: 3, scope: !12723)
!12746 = !DISubprogram(name: "HAL_InitTick", scope: !12593, file: !12593, line: 223, type: !12747, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{!12231, !108}
!12749 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12228, file: !12228, line: 775, type: !12750, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12752)
!12750 = !DISubroutineType(types: !12751)
!12751 = !{null, !108, !108, !108}
!12752 = !{!12753, !12754, !12755, !12756, !12766}
!12753 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12749, file: !12228, line: 775, type: !108)
!12754 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12749, file: !12228, line: 775, type: !108)
!12755 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12749, file: !12228, line: 775, type: !108)
!12756 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12749, file: !12228, line: 777, type: !12757)
!12757 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12758, line: 62, baseType: !12759)
!12758 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12758, line: 46, size: 160, elements: !12760)
!12760 = !{!12761, !12762, !12763, !12764, !12765}
!12761 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12759, file: !12758, line: 48, baseType: !108, size: 32)
!12762 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12759, file: !12758, line: 51, baseType: !108, size: 32, offset: 32)
!12763 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12759, file: !12758, line: 54, baseType: !108, size: 32, offset: 64)
!12764 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12759, file: !12758, line: 57, baseType: !108, size: 32, offset: 96)
!12765 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12759, file: !12758, line: 60, baseType: !108, size: 32, offset: 128)
!12766 = !DILocalVariable(name: "tmpreg", scope: !12767, file: !12228, line: 787, type: !409)
!12767 = distinct !DILexicalBlock(scope: !12768, file: !12228, line: 787, column: 5)
!12768 = distinct !DILexicalBlock(scope: !12769, file: !12228, line: 783, column: 3)
!12769 = distinct !DILexicalBlock(scope: !12749, file: !12228, line: 782, column: 6)
!12770 = !DILocation(line: 0, scope: !12749)
!12771 = !DILocation(line: 777, column: 3, scope: !12749)
!12772 = !DILocation(line: 777, column: 20, scope: !12749)
!12773 = !DILocation(line: 782, column: 15, scope: !12769)
!12774 = !DILocation(line: 782, column: 6, scope: !12749)
!12775 = !DILocation(line: 787, column: 5, scope: !12767)
!12776 = !DILocation(line: 787, column: 5, scope: !12768)
!12777 = !DILocation(line: 790, column: 21, scope: !12768)
!12778 = !DILocation(line: 790, column: 25, scope: !12768)
!12779 = !DILocation(line: 791, column: 21, scope: !12768)
!12780 = !DILocation(line: 791, column: 26, scope: !12768)
!12781 = !DILocation(line: 792, column: 21, scope: !12768)
!12782 = !DILocation(line: 792, column: 27, scope: !12768)
!12783 = !DILocation(line: 793, column: 21, scope: !12768)
!12784 = !DILocation(line: 793, column: 26, scope: !12768)
!12785 = !DILocation(line: 794, column: 21, scope: !12768)
!12786 = !DILocation(line: 794, column: 31, scope: !12768)
!12787 = !DILocation(line: 795, column: 5, scope: !12768)
!12788 = !DILocation(line: 798, column: 5, scope: !12768)
!12789 = !DILocation(line: 804, column: 3, scope: !12768)
!12790 = !DILocation(line: 830, column: 1, scope: !12749)
!12791 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12758, file: !12758, line: 224, type: !12792, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12792 = !DISubroutineType(types: !12793)
!12793 = !{null, !3132, !12794}
!12794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12757, size: 32)
!12795 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12228, file: !12228, line: 841, type: !334, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !251)
!12796 = !DILocation(line: 843, column: 38, scope: !12795)
!12797 = !DILocation(line: 844, column: 1, scope: !12795)
!12798 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12228, file: !12228, line: 850, type: !334, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !251)
!12799 = !DILocation(line: 852, column: 38, scope: !12798)
!12800 = !DILocation(line: 853, column: 1, scope: !12798)
!12801 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12228, file: !12228, line: 941, type: !3591, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !251)
!12802 = !DILocation(line: 943, column: 10, scope: !12801)
!12803 = !DILocation(line: 943, column: 3, scope: !12801)
!12804 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12228, file: !12228, line: 952, type: !3591, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !251)
!12805 = !DILocation(line: 955, column: 11, scope: !12804)
!12806 = !DILocation(line: 955, column: 56, scope: !12804)
!12807 = !DILocation(line: 955, column: 78, scope: !12804)
!12808 = !DILocation(line: 955, column: 36, scope: !12804)
!12809 = !DILocation(line: 955, column: 33, scope: !12804)
!12810 = !DILocation(line: 955, column: 3, scope: !12804)
!12811 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12228, file: !12228, line: 964, type: !3591, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !251)
!12812 = !DILocation(line: 967, column: 11, scope: !12811)
!12813 = !DILocation(line: 967, column: 55, scope: !12811)
!12814 = !DILocation(line: 967, column: 77, scope: !12811)
!12815 = !DILocation(line: 967, column: 35, scope: !12811)
!12816 = !DILocation(line: 967, column: 32, scope: !12811)
!12817 = !DILocation(line: 967, column: 3, scope: !12811)
!12818 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12228, file: !12228, line: 977, type: !12819, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12821)
!12819 = !DISubroutineType(types: !12820)
!12820 = !{null, !12236}
!12821 = !{!12822}
!12822 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12818, file: !12228, line: 977, type: !12236)
!12823 = !DILocation(line: 0, scope: !12818)
!12824 = !DILocation(line: 980, column: 22, scope: !12818)
!12825 = !DILocation(line: 980, column: 37, scope: !12818)
!12826 = !DILocation(line: 983, column: 12, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12818, file: !12228, line: 983, column: 6)
!12828 = !DILocation(line: 983, column: 15, scope: !12827)
!12829 = !DILocation(line: 983, column: 31, scope: !12827)
!12830 = !DILocation(line: 983, column: 6, scope: !12818)
!12831 = !DILocation(line: 985, column: 24, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12827, file: !12228, line: 984, column: 3)
!12833 = !DILocation(line: 985, column: 33, scope: !12832)
!12834 = !DILocation(line: 986, column: 3, scope: !12832)
!12835 = !DILocation(line: 987, column: 17, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12827, file: !12228, line: 987, column: 11)
!12837 = !DILocation(line: 987, column: 20, scope: !12836)
!12838 = !DILocation(line: 987, column: 35, scope: !12836)
!12839 = !DILocation(line: 0, scope: !12836)
!12840 = !DILocation(line: 987, column: 11, scope: !12827)
!12841 = !DILocation(line: 989, column: 33, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12836, file: !12228, line: 988, column: 3)
!12843 = !DILocation(line: 990, column: 3, scope: !12842)
!12844 = !DILocation(line: 993, column: 33, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12836, file: !12228, line: 992, column: 3)
!12846 = !DILocation(line: 997, column: 12, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12818, file: !12228, line: 997, column: 6)
!12848 = !DILocation(line: 997, column: 15, scope: !12847)
!12849 = !DILocation(line: 1003, column: 24, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12847, file: !12228, line: 1002, column: 3)
!12851 = !DILocation(line: 1003, column: 33, scope: !12850)
!12852 = !DILocation(line: 1006, column: 61, scope: !12818)
!12853 = !DILocation(line: 1006, column: 81, scope: !12818)
!12854 = !DILocation(line: 1006, column: 22, scope: !12818)
!12855 = !DILocation(line: 1006, column: 42, scope: !12818)
!12856 = !DILocation(line: 1009, column: 12, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12818, file: !12228, line: 1009, column: 6)
!12858 = !DILocation(line: 1009, column: 17, scope: !12857)
!12859 = !DILocation(line: 1009, column: 35, scope: !12857)
!12860 = !DILocation(line: 1009, column: 6, scope: !12818)
!12861 = !DILocation(line: 1011, column: 24, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12857, file: !12228, line: 1010, column: 3)
!12863 = !DILocation(line: 1011, column: 33, scope: !12862)
!12864 = !DILocation(line: 1012, column: 3, scope: !12862)
!12865 = !DILocation(line: 1013, column: 17, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12857, file: !12228, line: 1013, column: 11)
!12867 = !DILocation(line: 1013, column: 22, scope: !12866)
!12868 = !DILocation(line: 1013, column: 39, scope: !12866)
!12869 = !DILocation(line: 0, scope: !12866)
!12870 = !DILocation(line: 1013, column: 11, scope: !12857)
!12871 = !DILocation(line: 1015, column: 33, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12866, file: !12228, line: 1014, column: 3)
!12873 = !DILocation(line: 1016, column: 3, scope: !12872)
!12874 = !DILocation(line: 1019, column: 33, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12866, file: !12228, line: 1018, column: 3)
!12876 = !DILocation(line: 1023, column: 12, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12818, file: !12228, line: 1023, column: 6)
!12878 = !DILocation(line: 1023, column: 16, scope: !12877)
!12879 = !DILocation(line: 1029, column: 24, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12877, file: !12228, line: 1028, column: 3)
!12881 = !DILocation(line: 1029, column: 33, scope: !12880)
!12882 = !DILocation(line: 1033, column: 12, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12818, file: !12228, line: 1033, column: 6)
!12884 = !DILocation(line: 1033, column: 15, scope: !12883)
!12885 = !DILocation(line: 1033, column: 30, scope: !12883)
!12886 = !DILocation(line: 1033, column: 6, scope: !12818)
!12887 = !DILocation(line: 1039, column: 28, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12883, file: !12228, line: 1038, column: 3)
!12889 = !DILocation(line: 1039, column: 37, scope: !12888)
!12890 = !DILocation(line: 1041, column: 54, scope: !12818)
!12891 = !DILocation(line: 1041, column: 62, scope: !12818)
!12892 = !DILocation(line: 1041, column: 26, scope: !12818)
!12893 = !DILocation(line: 1041, column: 36, scope: !12818)
!12894 = !DILocation(line: 1042, column: 49, scope: !12818)
!12895 = !DILocation(line: 1042, column: 57, scope: !12818)
!12896 = !DILocation(line: 1042, column: 26, scope: !12818)
!12897 = !DILocation(line: 1042, column: 31, scope: !12818)
!12898 = !DILocation(line: 1043, column: 50, scope: !12818)
!12899 = !DILocation(line: 1043, column: 78, scope: !12818)
!12900 = !DILocation(line: 1043, column: 26, scope: !12818)
!12901 = !DILocation(line: 1043, column: 31, scope: !12818)
!12902 = !DILocation(line: 1044, column: 52, scope: !12818)
!12903 = !DILocation(line: 1044, column: 102, scope: !12818)
!12904 = !DILocation(line: 1044, column: 109, scope: !12818)
!12905 = !DILocation(line: 1044, column: 26, scope: !12818)
!12906 = !DILocation(line: 1044, column: 31, scope: !12818)
!12907 = !DILocation(line: 1045, column: 50, scope: !12818)
!12908 = !DILocation(line: 1045, column: 78, scope: !12818)
!12909 = !DILocation(line: 1045, column: 26, scope: !12818)
!12910 = !DILocation(line: 1045, column: 31, scope: !12818)
!12911 = !DILocation(line: 1046, column: 1, scope: !12818)
!12912 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12228, file: !12228, line: 1056, type: !12913, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12915)
!12913 = !DISubroutineType(types: !12914)
!12914 = !{null, !12597, !984}
!12915 = !{!12916, !12917}
!12916 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12912, file: !12228, line: 1056, type: !12597)
!12917 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12912, file: !12228, line: 1056, type: !984)
!12918 = !DILocation(line: 0, scope: !12912)
!12919 = !DILocation(line: 1059, column: 22, scope: !12912)
!12920 = !DILocation(line: 1059, column: 32, scope: !12912)
!12921 = !DILocation(line: 1062, column: 53, scope: !12912)
!12922 = !DILocation(line: 1062, column: 58, scope: !12912)
!12923 = !DILocation(line: 1062, column: 22, scope: !12912)
!12924 = !DILocation(line: 1062, column: 35, scope: !12912)
!12925 = !DILocation(line: 1065, column: 54, scope: !12912)
!12926 = !DILocation(line: 1065, column: 59, scope: !12912)
!12927 = !DILocation(line: 1065, column: 22, scope: !12912)
!12928 = !DILocation(line: 1065, column: 36, scope: !12912)
!12929 = !DILocation(line: 1068, column: 55, scope: !12912)
!12930 = !DILocation(line: 1068, column: 60, scope: !12912)
!12931 = !DILocation(line: 1068, column: 22, scope: !12912)
!12932 = !DILocation(line: 1068, column: 37, scope: !12912)
!12933 = !DILocation(line: 1071, column: 56, scope: !12912)
!12934 = !DILocation(line: 1071, column: 79, scope: !12912)
!12935 = !DILocation(line: 1071, column: 22, scope: !12912)
!12936 = !DILocation(line: 1071, column: 37, scope: !12912)
!12937 = !DILocation(line: 1074, column: 34, scope: !12912)
!12938 = !DILocation(line: 1074, column: 38, scope: !12912)
!12939 = !DILocation(line: 1074, column: 14, scope: !12912)
!12940 = !DILocation(line: 1075, column: 1, scope: !12912)
!12941 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12228, file: !12228, line: 1082, type: !334, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !251)
!12942 = !DILocation(line: 1085, column: 6, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12941, file: !12228, line: 1085, column: 6)
!12944 = !DILocation(line: 1085, column: 6, scope: !12941)
!12945 = !DILocation(line: 1088, column: 5, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12943, file: !12228, line: 1086, column: 3)
!12947 = !DILocation(line: 1091, column: 5, scope: !12946)
!12948 = !DILocation(line: 1092, column: 3, scope: !12946)
!12949 = !DILocation(line: 1093, column: 1, scope: !12941)
!12950 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12228, file: !12228, line: 1099, type: !334, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !251)
!12951 = !DILocation(line: 1104, column: 1, scope: !12950)
!12952 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12953, file: !12953, line: 257, type: !7404, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12954)
!12953 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12954 = !{!12955}
!12955 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12952, file: !12953, line: 257, type: !108)
!12956 = !DILocation(line: 0, scope: !12952)
!12957 = !DILocation(line: 260, column: 3, scope: !12952)
!12958 = !DILocation(line: 261, column: 1, scope: !12952)
!12959 = distinct !DISubprogram(name: "LL_InitTick", scope: !12960, file: !12960, line: 260, type: !10625, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12961)
!12960 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12961 = !{!12962, !12963}
!12962 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12959, file: !12960, line: 260, type: !108)
!12963 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12959, file: !12960, line: 260, type: !108)
!12964 = !DILocation(line: 0, scope: !12959)
!12965 = !DILocation(line: 263, column: 46, scope: !12959)
!12966 = !DILocation(line: 263, column: 55, scope: !12959)
!12967 = !DILocation(line: 263, column: 18, scope: !12959)
!12968 = !DILocation(line: 264, column: 18, scope: !12959)
!12969 = !DILocation(line: 265, column: 18, scope: !12959)
!12970 = !DILocation(line: 267, column: 1, scope: !12959)
!12971 = distinct !DISubprogram(name: "LL_mDelay", scope: !12953, file: !12953, line: 273, type: !7404, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12972)
!12972 = !{!12973, !12974}
!12973 = !DILocalVariable(name: "Delay", arg: 1, scope: !12971, file: !12953, line: 273, type: !108)
!12974 = !DILocalVariable(name: "tmp", scope: !12971, file: !12953, line: 275, type: !409)
!12975 = !DILocation(line: 0, scope: !12971)
!12976 = !DILocation(line: 275, column: 3, scope: !12971)
!12977 = !DILocation(line: 275, column: 18, scope: !12971)
!12978 = !DILocation(line: 275, column: 33, scope: !12971)
!12979 = !DILocation(line: 277, column: 10, scope: !12971)
!12980 = !DILocation(line: 280, column: 12, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12971, file: !12953, line: 280, column: 6)
!12982 = !DILocation(line: 285, column: 3, scope: !12971)
!12983 = !DILocation(line: 287, column: 18, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12985, file: !12953, line: 287, column: 8)
!12985 = distinct !DILexicalBlock(scope: !12971, file: !12953, line: 286, column: 3)
!12986 = !DILocation(line: 292, column: 1, scope: !12971)
!12987 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12953, file: !12953, line: 323, type: !7404, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12988)
!12988 = !{!12989}
!12989 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12987, file: !12953, line: 323, type: !108)
!12990 = !DILocation(line: 0, scope: !12987)
!12991 = !DILocation(line: 326, column: 19, scope: !12987)
!12992 = !DILocation(line: 327, column: 1, scope: !12987)
!12993 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12953, file: !12953, line: 338, type: !12994, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !12997)
!12994 = !DISubroutineType(types: !12995)
!12995 = !{!12996, !108}
!12996 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !930, line: 201, baseType: !929)
!12997 = !{!12998, !12999, !13000, !13001, !13002}
!12998 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12993, file: !12953, line: 338, type: !108)
!12999 = !DILocalVariable(name: "timeout", scope: !12993, file: !12953, line: 340, type: !108)
!13000 = !DILocalVariable(name: "getlatency", scope: !12993, file: !12953, line: 341, type: !108)
!13001 = !DILocalVariable(name: "latency", scope: !12993, file: !12953, line: 342, type: !108)
!13002 = !DILocalVariable(name: "status", scope: !12993, file: !12953, line: 343, type: !12996)
!13003 = !DILocation(line: 0, scope: !12993)
!13004 = !DILocation(line: 347, column: 21, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12993, file: !12953, line: 347, column: 6)
!13006 = !DILocation(line: 347, column: 6, scope: !12993)
!13007 = !DILocation(line: 353, column: 8, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !12953, line: 353, column: 8)
!13009 = distinct !DILexicalBlock(scope: !13005, file: !12953, line: 352, column: 3)
!13010 = !DILocation(line: 353, column: 40, scope: !13008)
!13011 = !DILocation(line: 353, column: 8, scope: !13009)
!13012 = !DILocation(line: 374, column: 55, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13014, file: !12953, line: 374, column: 10)
!13014 = distinct !DILexicalBlock(scope: !13008, file: !12953, line: 354, column: 5)
!13015 = !DILocation(line: 368, column: 26, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13014, file: !12953, line: 368, column: 10)
!13017 = !DILocation(line: 368, column: 55, scope: !13016)
!13018 = !DILocation(line: 380, column: 57, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13020, file: !12953, line: 380, column: 12)
!13020 = distinct !DILexicalBlock(scope: !13013, file: !12953, line: 379, column: 7)
!13021 = !DILocation(line: 387, column: 8, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13009, file: !12953, line: 387, column: 8)
!13023 = !DILocation(line: 387, column: 40, scope: !13022)
!13024 = !DILocation(line: 387, column: 8, scope: !13009)
!13025 = !DILocation(line: 407, column: 26, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !12953, line: 407, column: 10)
!13027 = distinct !DILexicalBlock(scope: !13022, file: !12953, line: 388, column: 5)
!13028 = !DILocation(line: 407, column: 55, scope: !13026)
!13029 = !DILocation(line: 413, column: 28, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !12953, line: 413, column: 12)
!13031 = distinct !DILexicalBlock(scope: !13026, file: !12953, line: 412, column: 7)
!13032 = !DILocation(line: 413, column: 57, scope: !13030)
!13033 = !DILocation(line: 0, scope: !13009)
!13034 = !DILocation(line: 420, column: 8, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13009, file: !12953, line: 420, column: 8)
!13036 = !DILocation(line: 420, column: 40, scope: !13035)
!13037 = !DILocation(line: 420, column: 8, scope: !13009)
!13038 = !DILocation(line: 429, column: 26, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13040, file: !12953, line: 429, column: 10)
!13040 = distinct !DILexicalBlock(scope: !13035, file: !12953, line: 421, column: 5)
!13041 = !DILocation(line: 429, column: 55, scope: !13039)
!13042 = !DILocation(line: 435, column: 28, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13044, file: !12953, line: 435, column: 12)
!13044 = distinct !DILexicalBlock(scope: !13039, file: !12953, line: 434, column: 7)
!13045 = !DILocation(line: 435, column: 57, scope: !13043)
!13046 = !DILocation(line: 444, column: 5, scope: !13009)
!13047 = !DILocation(line: 448, column: 5, scope: !13009)
!13048 = !DILocation(line: 451, column: 18, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13009, file: !12953, line: 449, column: 5)
!13050 = !DILocation(line: 452, column: 12, scope: !13049)
!13051 = !DILocation(line: 453, column: 26, scope: !13009)
!13052 = !DILocation(line: 453, column: 38, scope: !13009)
!13053 = !DILocation(line: 453, column: 5, scope: !13049)
!13054 = distinct !{!13054, !13047, !13055}
!13055 = !DILocation(line: 453, column: 54, scope: !13009)
!13056 = !DILocation(line: 0, scope: !13005)
!13057 = !DILocation(line: 464, column: 3, scope: !12993)
!13058 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13059, file: !13059, line: 519, type: !3591, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13059 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13060 = !DILocation(line: 521, column: 21, scope: !13058)
!13061 = !DILocation(line: 521, column: 3, scope: !13058)
!13062 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7018, file: !7018, line: 1543, type: !7404, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13063)
!13063 = !{!13064}
!13064 = !DILocalVariable(name: "Latency", arg: 1, scope: !13062, file: !7018, line: 1543, type: !108)
!13065 = !DILocation(line: 0, scope: !13062)
!13066 = !DILocation(line: 1545, column: 3, scope: !13062)
!13067 = !DILocation(line: 1546, column: 1, scope: !13062)
!13068 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7018, file: !7018, line: 1569, type: !3591, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13069 = !DILocation(line: 1571, column: 21, scope: !13068)
!13070 = !DILocation(line: 1571, column: 3, scope: !13068)
!13071 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12953, file: !12953, line: 483, type: !13072, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13088)
!13072 = !DISubroutineType(types: !13073)
!13073 = !{!12996, !13074, !13081}
!13074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13075, size: 32)
!13075 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12960, line: 114, baseType: !13076)
!13076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12960, line: 94, size: 96, elements: !13077)
!13077 = !{!13078, !13079, !13080}
!13078 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13076, file: !12960, line: 96, baseType: !108, size: 32)
!13079 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13076, file: !12960, line: 102, baseType: !108, size: 32, offset: 32)
!13080 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13076, file: !12960, line: 109, baseType: !108, size: 32, offset: 64)
!13081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13082, size: 32)
!13082 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12960, line: 139, baseType: !13083)
!13083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12960, line: 119, size: 96, elements: !13084)
!13084 = !{!13085, !13086, !13087}
!13085 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13083, file: !12960, line: 121, baseType: !108, size: 32)
!13086 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13083, file: !12960, line: 127, baseType: !108, size: 32, offset: 32)
!13087 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13083, file: !12960, line: 133, baseType: !108, size: 32, offset: 64)
!13088 = !{!13089, !13090, !13091, !13092}
!13089 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13071, file: !12953, line: 483, type: !13074)
!13090 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13071, file: !12953, line: 484, type: !13081)
!13091 = !DILocalVariable(name: "status", scope: !13071, file: !12953, line: 486, type: !12996)
!13092 = !DILocalVariable(name: "pllfreq", scope: !13071, file: !12953, line: 487, type: !108)
!13093 = !DILocation(line: 0, scope: !13071)
!13094 = !DILocation(line: 490, column: 6, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13071, file: !12953, line: 490, column: 6)
!13096 = !DILocation(line: 490, column: 25, scope: !13095)
!13097 = !DILocation(line: 490, column: 6, scope: !13071)
!13098 = !DILocation(line: 493, column: 15, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13095, file: !12953, line: 491, column: 3)
!13100 = !DILocation(line: 496, column: 8, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13099, file: !12953, line: 496, column: 8)
!13102 = !DILocation(line: 496, column: 29, scope: !13101)
!13103 = !DILocation(line: 496, column: 8, scope: !13099)
!13104 = !DILocation(line: 498, column: 7, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13101, file: !12953, line: 497, column: 5)
!13106 = !DILocation(line: 499, column: 7, scope: !13105)
!13107 = !DILocation(line: 499, column: 14, scope: !13105)
!13108 = !DILocation(line: 499, column: 35, scope: !13105)
!13109 = distinct !{!13109, !13106, !13110}
!13110 = !DILocation(line: 502, column: 7, scope: !13105)
!13111 = !DILocation(line: 506, column: 76, scope: !13099)
!13112 = !DILocation(line: 506, column: 103, scope: !13099)
!13113 = !DILocation(line: 507, column: 54, scope: !13099)
!13114 = !DILocation(line: 506, column: 5, scope: !13099)
!13115 = !DILocation(line: 510, column: 14, scope: !13099)
!13116 = !DILocation(line: 511, column: 3, scope: !13099)
!13117 = !DILocation(line: 0, scope: !13095)
!13118 = !DILocation(line: 518, column: 3, scope: !13071)
!13119 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12953, file: !12953, line: 642, type: !13120, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13122)
!13120 = !DISubroutineType(types: !13121)
!13121 = !{!12996}
!13122 = !{!13123}
!13123 = !DILocalVariable(name: "status", scope: !13119, file: !12953, line: 644, type: !12996)
!13124 = !DILocation(line: 0, scope: !13119)
!13125 = !DILocation(line: 647, column: 6, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13119, file: !12953, line: 647, column: 6)
!13127 = !DILocation(line: 647, column: 27, scope: !13126)
!13128 = !DILocation(line: 663, column: 6, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13119, file: !12953, line: 663, column: 6)
!13130 = !DILocation(line: 663, column: 30, scope: !13129)
!13131 = !DILocation(line: 663, column: 6, scope: !13119)
!13132 = !DILocation(line: 669, column: 3, scope: !13119)
!13133 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12953, file: !12953, line: 611, type: !13134, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13136)
!13134 = !DISubroutineType(types: !13135)
!13135 = !{!108, !108, !13074}
!13136 = !{!13137, !13138, !13139}
!13137 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13133, file: !12953, line: 611, type: !108)
!13138 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13133, file: !12953, line: 611, type: !13074)
!13139 = !DILocalVariable(name: "pllfreq", scope: !13133, file: !12953, line: 613, type: !108)
!13140 = !DILocation(line: 0, scope: !13133)
!13141 = !DILocation(line: 622, column: 56, scope: !13133)
!13142 = !DILocation(line: 622, column: 61, scope: !13133)
!13143 = !DILocation(line: 622, column: 32, scope: !13133)
!13144 = !DILocation(line: 626, column: 45, scope: !13133)
!13145 = !DILocation(line: 626, column: 50, scope: !13133)
!13146 = !DILocation(line: 626, column: 21, scope: !13133)
!13147 = !DILocation(line: 630, column: 47, scope: !13133)
!13148 = !DILocation(line: 630, column: 82, scope: !13133)
!13149 = !DILocation(line: 630, column: 21, scope: !13133)
!13150 = !DILocation(line: 633, column: 3, scope: !13133)
!13151 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9965, file: !9965, line: 3007, type: !3591, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13152 = !DILocation(line: 3009, column: 11, scope: !13151)
!13153 = !DILocation(line: 3009, column: 44, scope: !13151)
!13154 = !DILocation(line: 3009, column: 3, scope: !13151)
!13155 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9965, file: !9965, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13156 = !DILocation(line: 2989, column: 3, scope: !13155)
!13157 = !DILocation(line: 2990, column: 1, scope: !13155)
!13158 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9965, file: !9965, line: 4304, type: !10099, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13159)
!13159 = !{!13160, !13161, !13162, !13163}
!13160 = !DILocalVariable(name: "Source", arg: 1, scope: !13158, file: !9965, line: 4304, type: !108)
!13161 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13158, file: !9965, line: 4304, type: !108)
!13162 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13158, file: !9965, line: 4304, type: !108)
!13163 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13158, file: !9965, line: 4304, type: !108)
!13164 = !DILocation(line: 0, scope: !13158)
!13165 = !DILocation(line: 4306, column: 3, scope: !13158)
!13166 = !DILocation(line: 4308, column: 3, scope: !13158)
!13167 = !DILocation(line: 4312, column: 1, scope: !13158)
!13168 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12953, file: !12953, line: 681, type: !13169, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13171)
!13169 = !DISubroutineType(types: !13170)
!13170 = !{!12996, !108, !13081}
!13171 = !{!13172, !13173, !13174, !13175}
!13172 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13168, file: !12953, line: 681, type: !108)
!13173 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13168, file: !12953, line: 681, type: !13081)
!13174 = !DILocalVariable(name: "status", scope: !13168, file: !12953, line: 683, type: !12996)
!13175 = !DILocalVariable(name: "hclk_frequency", scope: !13168, file: !12953, line: 684, type: !108)
!13176 = !DILocation(line: 0, scope: !13168)
!13177 = !DILocation(line: 691, column: 20, scope: !13168)
!13178 = !DILocation(line: 694, column: 6, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13168, file: !12953, line: 694, column: 6)
!13180 = !DILocation(line: 694, column: 22, scope: !13179)
!13181 = !DILocation(line: 694, column: 6, scope: !13168)
!13182 = !DILocation(line: 697, column: 14, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13179, file: !12953, line: 695, column: 3)
!13184 = !DILocation(line: 701, column: 13, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13168, file: !12953, line: 701, column: 6)
!13186 = !DILocation(line: 701, column: 6, scope: !13168)
!13187 = !DILocation(line: 704, column: 5, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13185, file: !12953, line: 702, column: 3)
!13189 = !DILocation(line: 705, column: 5, scope: !13188)
!13190 = !DILocation(line: 705, column: 12, scope: !13188)
!13191 = !DILocation(line: 705, column: 33, scope: !13188)
!13192 = distinct !{!13192, !13189, !13193}
!13193 = !DILocation(line: 708, column: 5, scope: !13188)
!13194 = !DILocation(line: 711, column: 49, scope: !13188)
!13195 = !DILocation(line: 711, column: 5, scope: !13188)
!13196 = !DILocation(line: 712, column: 5, scope: !13188)
!13197 = !DILocation(line: 713, column: 5, scope: !13188)
!13198 = !DILocation(line: 713, column: 12, scope: !13188)
!13199 = !DILocation(line: 713, column: 37, scope: !13188)
!13200 = distinct !{!13200, !13197, !13201}
!13201 = !DILocation(line: 716, column: 5, scope: !13188)
!13202 = !DILocation(line: 719, column: 50, scope: !13188)
!13203 = !DILocation(line: 719, column: 5, scope: !13188)
!13204 = !DILocation(line: 720, column: 50, scope: !13188)
!13205 = !DILocation(line: 720, column: 5, scope: !13188)
!13206 = !DILocation(line: 721, column: 3, scope: !13188)
!13207 = !DILocation(line: 724, column: 6, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13168, file: !12953, line: 724, column: 6)
!13209 = !DILocation(line: 724, column: 22, scope: !13208)
!13210 = !DILocation(line: 724, column: 6, scope: !13168)
!13211 = !DILocation(line: 727, column: 14, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13208, file: !12953, line: 725, column: 3)
!13213 = !DILocation(line: 728, column: 3, scope: !13212)
!13214 = !DILocation(line: 731, column: 13, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13168, file: !12953, line: 731, column: 6)
!13216 = !DILocation(line: 731, column: 6, scope: !13168)
!13217 = !DILocation(line: 733, column: 5, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13215, file: !12953, line: 732, column: 3)
!13219 = !DILocation(line: 734, column: 3, scope: !13218)
!13220 = !DILocation(line: 736, column: 3, scope: !13168)
!13221 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9965, file: !9965, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13222 = !DILocation(line: 4186, column: 3, scope: !13221)
!13223 = !DILocation(line: 4187, column: 1, scope: !13221)
!13224 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9965, file: !9965, line: 4205, type: !3591, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13225 = !DILocation(line: 4207, column: 11, scope: !13224)
!13226 = !DILocation(line: 4207, column: 44, scope: !13224)
!13227 = !DILocation(line: 4207, column: 3, scope: !13224)
!13228 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9965, file: !9965, line: 3224, type: !7404, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13229)
!13229 = !{!13230}
!13230 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13228, file: !9965, line: 3224, type: !108)
!13231 = !DILocation(line: 0, scope: !13228)
!13232 = !DILocation(line: 3226, column: 3, scope: !13228)
!13233 = !DILocation(line: 3227, column: 1, scope: !13228)
!13234 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9965, file: !9965, line: 3188, type: !7404, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13235)
!13235 = !{!13236}
!13236 = !DILocalVariable(name: "Source", arg: 1, scope: !13234, file: !9965, line: 3188, type: !108)
!13237 = !DILocation(line: 0, scope: !13234)
!13238 = !DILocation(line: 3190, column: 3, scope: !13234)
!13239 = !DILocation(line: 3191, column: 1, scope: !13234)
!13240 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9965, file: !9965, line: 3204, type: !3591, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13241 = !DILocation(line: 3206, column: 21, scope: !13240)
!13242 = !DILocation(line: 3206, column: 3, scope: !13240)
!13243 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9965, file: !9965, line: 3240, type: !7404, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13244)
!13244 = !{!13245}
!13245 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13243, file: !9965, line: 3240, type: !108)
!13246 = !DILocation(line: 0, scope: !13243)
!13247 = !DILocation(line: 3242, column: 3, scope: !13243)
!13248 = !DILocation(line: 3243, column: 1, scope: !13243)
!13249 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9965, file: !9965, line: 3256, type: !7404, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13250)
!13250 = !{!13251}
!13251 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13249, file: !9965, line: 3256, type: !108)
!13252 = !DILocation(line: 0, scope: !13249)
!13253 = !DILocation(line: 3258, column: 3, scope: !13249)
!13254 = !DILocation(line: 3259, column: 1, scope: !13249)
!13255 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9965, file: !9965, line: 5153, type: !3591, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13256 = !DILocation(line: 5155, column: 11, scope: !13255)
!13257 = !DILocation(line: 5155, column: 47, scope: !13255)
!13258 = !DILocation(line: 5155, column: 3, scope: !13255)
!13259 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12953, file: !12953, line: 540, type: !13260, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !13262)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{!12996, !108, !108, !13074, !13081}
!13262 = !{!13263, !13264, !13265, !13266, !13267, !13268}
!13263 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13259, file: !12953, line: 540, type: !108)
!13264 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13259, file: !12953, line: 540, type: !108)
!13265 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13259, file: !12953, line: 541, type: !13074)
!13266 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13259, file: !12953, line: 541, type: !13081)
!13267 = !DILocalVariable(name: "status", scope: !13259, file: !12953, line: 543, type: !12996)
!13268 = !DILocalVariable(name: "pllfreq", scope: !13259, file: !12953, line: 544, type: !108)
!13269 = !DILocation(line: 0, scope: !13259)
!13270 = !DILocation(line: 551, column: 6, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13259, file: !12953, line: 551, column: 6)
!13272 = !DILocation(line: 551, column: 25, scope: !13271)
!13273 = !DILocation(line: 551, column: 6, scope: !13259)
!13274 = !DILocation(line: 554, column: 15, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13271, file: !12953, line: 552, column: 3)
!13276 = !DILocation(line: 557, column: 8, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13275, file: !12953, line: 557, column: 8)
!13278 = !DILocation(line: 557, column: 29, scope: !13277)
!13279 = !DILocation(line: 557, column: 8, scope: !13275)
!13280 = !DILocation(line: 560, column: 20, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13282, file: !12953, line: 560, column: 10)
!13282 = distinct !DILexicalBlock(scope: !13277, file: !12953, line: 558, column: 5)
!13283 = !DILocation(line: 560, column: 10, scope: !13282)
!13284 = !DILocation(line: 562, column: 9, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13281, file: !12953, line: 561, column: 7)
!13286 = !DILocation(line: 563, column: 7, scope: !13285)
!13287 = !DILocation(line: 566, column: 9, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13281, file: !12953, line: 565, column: 7)
!13289 = !DILocation(line: 570, column: 7, scope: !13282)
!13290 = !DILocation(line: 571, column: 7, scope: !13282)
!13291 = !DILocation(line: 571, column: 14, scope: !13282)
!13292 = !DILocation(line: 571, column: 35, scope: !13282)
!13293 = distinct !{!13293, !13290, !13294}
!13294 = !DILocation(line: 574, column: 7, scope: !13282)
!13295 = !DILocation(line: 578, column: 76, scope: !13275)
!13296 = !DILocation(line: 578, column: 103, scope: !13275)
!13297 = !DILocation(line: 579, column: 54, scope: !13275)
!13298 = !DILocation(line: 578, column: 5, scope: !13275)
!13299 = !DILocation(line: 582, column: 14, scope: !13275)
!13300 = !DILocation(line: 583, column: 3, scope: !13275)
!13301 = !DILocation(line: 0, scope: !13271)
!13302 = !DILocation(line: 590, column: 3, scope: !13259)
!13303 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9965, file: !9965, line: 2969, type: !3591, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13304 = !DILocation(line: 2971, column: 11, scope: !13303)
!13305 = !DILocation(line: 2971, column: 44, scope: !13303)
!13306 = !DILocation(line: 2971, column: 3, scope: !13303)
!13307 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9965, file: !9965, line: 2929, type: !334, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13308 = !DILocation(line: 2931, column: 3, scope: !13307)
!13309 = !DILocation(line: 2932, column: 1, scope: !13307)
!13310 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9965, file: !9965, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13311 = !DILocation(line: 2941, column: 3, scope: !13310)
!13312 = !DILocation(line: 2942, column: 1, scope: !13310)
!13313 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9965, file: !9965, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !251)
!13314 = !DILocation(line: 2951, column: 3, scope: !13313)
!13315 = !DILocation(line: 2952, column: 1, scope: !13313)
!13316 = distinct !DISubprogram(name: "z_device_state_init", scope: !13317, file: !13317, line: 23, type: !334, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13318)
!13317 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13318 = !{!13319}
!13319 = !DILocalVariable(name: "dev", scope: !13316, file: !13317, line: 25, type: !13320)
!13320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13321, size: 32)
!13321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13322)
!13322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !13323)
!13323 = !{!13324, !13325, !13326, !13327, !13333, !13334}
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13322, file: !429, line: 380, baseType: !337, size: 32)
!13325 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13322, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13322, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13322, file: !429, line: 386, baseType: !13328, size: 32, offset: 96)
!13328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13329, size: 32)
!13329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !13330)
!13330 = !{!13331, !13332}
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13329, file: !429, line: 359, baseType: !185, size: 8)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13329, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13322, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13322, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!13335 = !DILocation(line: 0, scope: !13316)
!13336 = !DILocation(line: 31, column: 1, scope: !13316)
!13337 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13317, file: !13317, line: 33, type: !13338, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13340)
!13338 = !DISubroutineType(types: !13339)
!13339 = !{!13320, !337}
!13340 = !{!13341, !13342}
!13341 = !DILocalVariable(name: "name", arg: 1, scope: !13337, file: !13317, line: 33, type: !337)
!13342 = !DILocalVariable(name: "dev", scope: !13337, file: !13317, line: 35, type: !13320)
!13343 = !DILocation(line: 0, scope: !13337)
!13344 = !DILocation(line: 40, column: 12, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13337, file: !13317, line: 40, column: 6)
!13346 = !DILocation(line: 40, column: 21, scope: !13345)
!13347 = !DILocation(line: 40, column: 25, scope: !13345)
!13348 = !DILocation(line: 40, column: 33, scope: !13345)
!13349 = !DILocation(line: 40, column: 6, scope: !13337)
!13350 = !DILocation(line: 55, column: 2, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13337, file: !13317, line: 55, column: 2)
!13352 = !DILocation(line: 50, column: 7, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13354, file: !13317, line: 50, column: 7)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !13317, line: 49, column: 57)
!13355 = distinct !DILexicalBlock(scope: !13356, file: !13317, line: 49, column: 2)
!13356 = distinct !DILexicalBlock(scope: !13337, file: !13317, line: 49, column: 2)
!13357 = !DILocation(line: 50, column: 30, scope: !13353)
!13358 = !DILocation(line: 50, column: 39, scope: !13353)
!13359 = !DILocation(line: 50, column: 44, scope: !13353)
!13360 = !DILocation(line: 50, column: 7, scope: !13354)
!13361 = !DILocation(line: 49, column: 53, scope: !13355)
!13362 = !DILocation(line: 49, column: 33, scope: !13355)
!13363 = !DILocation(line: 49, column: 2, scope: !13356)
!13364 = distinct !{!13364, !13363, !13365}
!13365 = !DILocation(line: 53, column: 2, scope: !13356)
!13366 = !DILocation(line: 56, column: 7, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !13317, line: 56, column: 7)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !13317, line: 55, column: 57)
!13369 = distinct !DILexicalBlock(scope: !13351, file: !13317, line: 55, column: 2)
!13370 = !DILocation(line: 56, column: 30, scope: !13367)
!13371 = !DILocation(line: 56, column: 52, scope: !13367)
!13372 = !DILocation(line: 56, column: 34, scope: !13367)
!13373 = !DILocation(line: 56, column: 58, scope: !13367)
!13374 = !DILocation(line: 56, column: 7, scope: !13368)
!13375 = !DILocation(line: 55, column: 53, scope: !13369)
!13376 = !DILocation(line: 55, column: 33, scope: !13369)
!13377 = distinct !{!13377, !13350, !13378}
!13378 = !DILocation(line: 59, column: 2, scope: !13351)
!13379 = !DILocation(line: 62, column: 1, scope: !13337)
!13380 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13317, file: !13317, line: 93, type: !13381, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13383)
!13381 = !DISubroutineType(types: !13382)
!13382 = !{!131, !13320}
!13383 = !{!13384}
!13384 = !DILocalVariable(name: "dev", arg: 1, scope: !13380, file: !13317, line: 93, type: !13320)
!13385 = !DILocation(line: 0, scope: !13380)
!13386 = !DILocation(line: 99, column: 10, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13380, file: !13317, line: 99, column: 6)
!13388 = !DILocation(line: 99, column: 6, scope: !13380)
!13389 = !DILocation(line: 103, column: 14, scope: !13380)
!13390 = !DILocation(line: 103, column: 21, scope: !13380)
!13391 = !DILocation(line: 103, column: 33, scope: !13380)
!13392 = !DILocation(line: 103, column: 49, scope: !13380)
!13393 = !DILocation(line: 103, column: 58, scope: !13380)
!13394 = !DILocation(line: 104, column: 1, scope: !13380)
!13395 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13317, file: !13317, line: 87, type: !13396, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13399)
!13396 = !DISubroutineType(types: !13397)
!13397 = !{!132, !13398}
!13398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13320, size: 32)
!13399 = !{!13400}
!13400 = !DILocalVariable(name: "devices", arg: 1, scope: !13395, file: !13317, line: 87, type: !13398)
!13401 = !DILocation(line: 0, scope: !13395)
!13402 = !DILocation(line: 89, column: 11, scope: !13395)
!13403 = !DILocation(line: 90, column: 2, scope: !13395)
!13404 = distinct !DISubprogram(name: "device_required_foreach", scope: !13317, file: !13317, line: 125, type: !13405, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13411)
!13405 = !DISubroutineType(types: !13406)
!13406 = !{!103, !13320, !13407, !102}
!13407 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !429, line: 471, baseType: !13408)
!13408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13409, size: 32)
!13409 = !DISubroutineType(types: !13410)
!13410 = !{!103, !13320, !102}
!13411 = !{!13412, !13413, !13414, !13415, !13416}
!13412 = !DILocalVariable(name: "dev", arg: 1, scope: !13404, file: !13317, line: 125, type: !13320)
!13413 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13404, file: !13317, line: 126, type: !13407)
!13414 = !DILocalVariable(name: "context", arg: 3, scope: !13404, file: !13317, line: 127, type: !102)
!13415 = !DILocalVariable(name: "handle_count", scope: !13404, file: !13317, line: 129, type: !132)
!13416 = !DILocalVariable(name: "handles", scope: !13404, file: !13317, line: 130, type: !442)
!13417 = !DILocation(line: 0, scope: !13404)
!13418 = !DILocation(line: 129, column: 2, scope: !13404)
!13419 = !DILocation(line: 129, column: 9, scope: !13404)
!13420 = !DILocation(line: 130, column: 35, scope: !13404)
!13421 = !DILocation(line: 132, column: 33, scope: !13404)
!13422 = !DILocation(line: 132, column: 9, scope: !13404)
!13423 = !DILocation(line: 133, column: 1, scope: !13404)
!13424 = !DILocation(line: 132, column: 2, scope: !13404)
!13425 = distinct !DISubprogram(name: "device_required_handles_get", scope: !429, file: !429, line: 493, type: !13426, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13428)
!13426 = !DISubroutineType(types: !13427)
!13427 = !{!442, !13320, !2705}
!13428 = !{!13429, !13430, !13431, !13432}
!13429 = !DILocalVariable(name: "dev", arg: 1, scope: !13425, file: !429, line: 493, type: !13320)
!13430 = !DILocalVariable(name: "count", arg: 2, scope: !13425, file: !429, line: 493, type: !2705)
!13431 = !DILocalVariable(name: "rv", scope: !13425, file: !429, line: 495, type: !442)
!13432 = !DILocalVariable(name: "i", scope: !13433, file: !429, line: 498, type: !132)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !429, line: 497, column: 18)
!13434 = distinct !DILexicalBlock(scope: !13425, file: !429, line: 497, column: 6)
!13435 = !DILocation(line: 0, scope: !13425)
!13436 = !DILocation(line: 495, column: 35, scope: !13425)
!13437 = !DILocation(line: 497, column: 9, scope: !13434)
!13438 = !DILocation(line: 497, column: 6, scope: !13425)
!13439 = !DILocation(line: 0, scope: !13433)
!13440 = !DILocation(line: 500, column: 11, scope: !13433)
!13441 = !DILocation(line: 500, column: 40, scope: !13433)
!13442 = !DILocation(line: 502, column: 4, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13433, file: !429, line: 501, column: 40)
!13444 = distinct !{!13444, !13445, !13446}
!13445 = !DILocation(line: 500, column: 3, scope: !13433)
!13446 = !DILocation(line: 503, column: 3, scope: !13433)
!13447 = !DILocation(line: 504, column: 10, scope: !13433)
!13448 = !DILocation(line: 505, column: 2, scope: !13433)
!13449 = !DILocation(line: 507, column: 2, scope: !13425)
!13450 = distinct !DISubprogram(name: "device_visitor", scope: !13317, file: !13317, line: 106, type: !13451, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13453)
!13451 = !DISubroutineType(types: !13452)
!13452 = !{!103, !442, !132, !13407, !102}
!13453 = !{!13454, !13455, !13456, !13457, !13458, !13460, !13463, !13464}
!13454 = !DILocalVariable(name: "handles", arg: 1, scope: !13450, file: !13317, line: 106, type: !442)
!13455 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13450, file: !13317, line: 107, type: !132)
!13456 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13450, file: !13317, line: 108, type: !13407)
!13457 = !DILocalVariable(name: "context", arg: 4, scope: !13450, file: !13317, line: 109, type: !102)
!13458 = !DILocalVariable(name: "i", scope: !13459, file: !13317, line: 112, type: !132)
!13459 = distinct !DILexicalBlock(scope: !13450, file: !13317, line: 112, column: 2)
!13460 = !DILocalVariable(name: "dh", scope: !13461, file: !13317, line: 113, type: !444)
!13461 = distinct !DILexicalBlock(scope: !13462, file: !13317, line: 112, column: 44)
!13462 = distinct !DILexicalBlock(scope: !13459, file: !13317, line: 112, column: 2)
!13463 = !DILocalVariable(name: "rdev", scope: !13461, file: !13317, line: 114, type: !13320)
!13464 = !DILocalVariable(name: "rc", scope: !13461, file: !13317, line: 115, type: !103)
!13465 = !DILocation(line: 0, scope: !13450)
!13466 = !DILocation(line: 0, scope: !13459)
!13467 = !DILocation(line: 112, column: 23, scope: !13462)
!13468 = !DILocation(line: 112, column: 2, scope: !13459)
!13469 = distinct !{!13469, !13468, !13470}
!13470 = !DILocation(line: 120, column: 2, scope: !13459)
!13471 = !DILocation(line: 113, column: 24, scope: !13461)
!13472 = !DILocation(line: 0, scope: !13461)
!13473 = !DILocation(line: 114, column: 31, scope: !13461)
!13474 = !DILocation(line: 115, column: 12, scope: !13461)
!13475 = !DILocation(line: 117, column: 10, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13461, file: !13317, line: 117, column: 7)
!13477 = !DILocation(line: 112, column: 39, scope: !13462)
!13478 = !DILocation(line: 123, column: 1, scope: !13450)
!13479 = distinct !DISubprogram(name: "device_from_handle", scope: !429, file: !429, line: 439, type: !13480, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13482)
!13480 = !DISubroutineType(types: !13481)
!13481 = !{!13320, !444}
!13482 = !{!13483, !13484, !13485}
!13483 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13479, file: !429, line: 439, type: !444)
!13484 = !DILocalVariable(name: "dev", scope: !13479, file: !429, line: 443, type: !13320)
!13485 = !DILocalVariable(name: "numdev", scope: !13479, file: !429, line: 444, type: !132)
!13486 = !DILocation(line: 0, scope: !13479)
!13487 = !DILocation(line: 446, column: 7, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13479, file: !429, line: 446, column: 6)
!13489 = !DILocation(line: 446, column: 18, scope: !13488)
!13490 = !DILocation(line: 446, column: 23, scope: !13488)
!13491 = !DILocation(line: 450, column: 2, scope: !13479)
!13492 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13317, file: !13317, line: 135, type: !13405, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13493)
!13493 = !{!13494, !13495, !13496, !13497, !13498}
!13494 = !DILocalVariable(name: "dev", arg: 1, scope: !13492, file: !13317, line: 135, type: !13320)
!13495 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13492, file: !13317, line: 136, type: !13407)
!13496 = !DILocalVariable(name: "context", arg: 3, scope: !13492, file: !13317, line: 137, type: !102)
!13497 = !DILocalVariable(name: "handle_count", scope: !13492, file: !13317, line: 139, type: !132)
!13498 = !DILocalVariable(name: "handles", scope: !13492, file: !13317, line: 140, type: !442)
!13499 = !DILocation(line: 0, scope: !13492)
!13500 = !DILocation(line: 139, column: 2, scope: !13492)
!13501 = !DILocation(line: 139, column: 9, scope: !13492)
!13502 = !DILocation(line: 140, column: 35, scope: !13492)
!13503 = !DILocation(line: 142, column: 33, scope: !13492)
!13504 = !DILocation(line: 142, column: 9, scope: !13492)
!13505 = !DILocation(line: 143, column: 1, scope: !13492)
!13506 = !DILocation(line: 142, column: 2, scope: !13492)
!13507 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !429, file: !429, line: 573, type: !13426, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3209, retainedNodes: !13508)
!13508 = !{!13509, !13510, !13511, !13512, !13513}
!13509 = !DILocalVariable(name: "dev", arg: 1, scope: !13507, file: !429, line: 573, type: !13320)
!13510 = !DILocalVariable(name: "count", arg: 2, scope: !13507, file: !429, line: 573, type: !2705)
!13511 = !DILocalVariable(name: "rv", scope: !13507, file: !429, line: 575, type: !442)
!13512 = !DILocalVariable(name: "region", scope: !13507, file: !429, line: 576, type: !132)
!13513 = !DILocalVariable(name: "i", scope: !13507, file: !429, line: 577, type: !132)
!13514 = !DILocation(line: 0, scope: !13507)
!13515 = !DILocation(line: 575, column: 35, scope: !13507)
!13516 = !DILocation(line: 579, column: 9, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13507, file: !429, line: 579, column: 6)
!13518 = !DILocation(line: 579, column: 6, scope: !13507)
!13519 = !DILocation(line: 582, column: 8, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !429, line: 582, column: 8)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !429, line: 581, column: 23)
!13522 = distinct !DILexicalBlock(scope: !13517, file: !429, line: 579, column: 18)
!13523 = !DILocation(line: 582, column: 12, scope: !13520)
!13524 = !DILocation(line: 585, column: 6, scope: !13521)
!13525 = !DILocation(line: 0, scope: !13522)
!13526 = !DILocation(line: 581, column: 17, scope: !13522)
!13527 = !DILocation(line: 581, column: 3, scope: !13522)
!13528 = !DILocation(line: 588, column: 10, scope: !13522)
!13529 = !DILocation(line: 588, column: 16, scope: !13522)
!13530 = !DILocation(line: 589, column: 4, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13522, file: !429, line: 588, column: 39)
!13532 = !DILocation(line: 588, column: 3, scope: !13522)
!13533 = distinct !{!13533, !13532, !13534}
!13534 = !DILocation(line: 590, column: 3, scope: !13522)
!13535 = !DILocation(line: 591, column: 10, scope: !13522)
!13536 = !DILocation(line: 592, column: 2, scope: !13522)
!13537 = !DILocation(line: 575, column: 25, scope: !13507)
!13538 = !DILocation(line: 594, column: 2, scope: !13507)
!13539 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1915, file: !1915, line: 49, type: !13540, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1912, retainedNodes: !251)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!374}
!13542 = !DILocation(line: 51, column: 10, scope: !13539)
!13543 = !DILocation(line: 51, column: 20, scope: !13539)
!13544 = !DILocation(line: 51, column: 2, scope: !13539)
!13545 = distinct !DISubprogram(name: "coredump", scope: !3216, file: !3216, line: 209, type: !13546, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13692)
!13546 = !DISubroutineType(types: !13547)
!13547 = !{null, !32, !13548, !13592}
!13548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13549, size: 32)
!13549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13550)
!13550 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2833, line: 141, baseType: !13551)
!13551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2833, line: 97, size: 256, elements: !13552)
!13552 = !{!13553}
!13553 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13551, file: !2833, line: 107, baseType: !13554, size: 256)
!13554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2833, line: 98, size: 256, elements: !13555)
!13555 = !{!13556, !13561, !13566, !13571, !13576, !13581, !13586, !13591}
!13556 = !DIDerivedType(tag: DW_TAG_member, scope: !13554, file: !2833, line: 99, baseType: !13557, size: 32)
!13557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13554, file: !2833, line: 99, size: 32, elements: !13558)
!13558 = !{!13559, !13560}
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13557, file: !2833, line: 99, baseType: !108, size: 32)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13557, file: !2833, line: 99, baseType: !108, size: 32)
!13561 = !DIDerivedType(tag: DW_TAG_member, scope: !13554, file: !2833, line: 100, baseType: !13562, size: 32, offset: 32)
!13562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13554, file: !2833, line: 100, size: 32, elements: !13563)
!13563 = !{!13564, !13565}
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13562, file: !2833, line: 100, baseType: !108, size: 32)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13562, file: !2833, line: 100, baseType: !108, size: 32)
!13566 = !DIDerivedType(tag: DW_TAG_member, scope: !13554, file: !2833, line: 101, baseType: !13567, size: 32, offset: 64)
!13567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13554, file: !2833, line: 101, size: 32, elements: !13568)
!13568 = !{!13569, !13570}
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13567, file: !2833, line: 101, baseType: !108, size: 32)
!13570 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13567, file: !2833, line: 101, baseType: !108, size: 32)
!13571 = !DIDerivedType(tag: DW_TAG_member, scope: !13554, file: !2833, line: 102, baseType: !13572, size: 32, offset: 96)
!13572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13554, file: !2833, line: 102, size: 32, elements: !13573)
!13573 = !{!13574, !13575}
!13574 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13572, file: !2833, line: 102, baseType: !108, size: 32)
!13575 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13572, file: !2833, line: 102, baseType: !108, size: 32)
!13576 = !DIDerivedType(tag: DW_TAG_member, scope: !13554, file: !2833, line: 103, baseType: !13577, size: 32, offset: 128)
!13577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13554, file: !2833, line: 103, size: 32, elements: !13578)
!13578 = !{!13579, !13580}
!13579 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13577, file: !2833, line: 103, baseType: !108, size: 32)
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13577, file: !2833, line: 103, baseType: !108, size: 32)
!13581 = !DIDerivedType(tag: DW_TAG_member, scope: !13554, file: !2833, line: 104, baseType: !13582, size: 32, offset: 160)
!13582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13554, file: !2833, line: 104, size: 32, elements: !13583)
!13583 = !{!13584, !13585}
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13582, file: !2833, line: 104, baseType: !108, size: 32)
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13582, file: !2833, line: 104, baseType: !108, size: 32)
!13586 = !DIDerivedType(tag: DW_TAG_member, scope: !13554, file: !2833, line: 105, baseType: !13587, size: 32, offset: 192)
!13587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13554, file: !2833, line: 105, size: 32, elements: !13588)
!13588 = !{!13589, !13590}
!13589 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13587, file: !2833, line: 105, baseType: !108, size: 32)
!13590 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13587, file: !2833, line: 105, baseType: !108, size: 32)
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13554, file: !2833, line: 106, baseType: !108, size: 32, offset: 224)
!13592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13593, size: 32)
!13593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !13594)
!13594 = !{!13595, !13653, !13665, !13666, !13667, !13668, !13674, !13687}
!13595 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13593, file: !163, line: 247, baseType: !13596, size: 384)
!13596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !13597)
!13597 = !{!13598, !13622, !13629, !13630, !13631, !13640, !13641, !13642}
!13598 = !DIDerivedType(tag: DW_TAG_member, scope: !13596, file: !163, line: 60, baseType: !13599, size: 64)
!13599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13596, file: !163, line: 60, size: 64, elements: !13600)
!13600 = !{!13601, !13616}
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13599, file: !163, line: 61, baseType: !13602, size: 64)
!13602 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !13603)
!13603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !13604)
!13604 = !{!13605, !13611}
!13605 = !DIDerivedType(tag: DW_TAG_member, scope: !13603, file: !146, line: 38, baseType: !13606, size: 32)
!13606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13603, file: !146, line: 38, size: 32, elements: !13607)
!13607 = !{!13608, !13610}
!13608 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13606, file: !146, line: 39, baseType: !13609, size: 32)
!13609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13603, size: 32)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13606, file: !146, line: 40, baseType: !13609, size: 32)
!13611 = !DIDerivedType(tag: DW_TAG_member, scope: !13603, file: !146, line: 42, baseType: !13612, size: 32, offset: 32)
!13612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13603, file: !146, line: 42, size: 32, elements: !13613)
!13613 = !{!13614, !13615}
!13614 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13612, file: !146, line: 43, baseType: !13609, size: 32)
!13615 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13612, file: !146, line: 44, baseType: !13609, size: 32)
!13616 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13599, file: !163, line: 62, baseType: !13617, size: 64)
!13617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !13618)
!13618 = !{!13619}
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13617, file: !175, line: 50, baseType: !13620, size: 64)
!13620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13621, size: 64, elements: !180)
!13621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13617, size: 32)
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13596, file: !163, line: 68, baseType: !13623, size: 32, offset: 64)
!13623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13624, size: 32)
!13624 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !13625)
!13625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !13626)
!13626 = !{!13627}
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13625, file: !141, line: 232, baseType: !13628, size: 64)
!13628 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !13603)
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13596, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13596, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!13631 = !DIDerivedType(tag: DW_TAG_member, scope: !13596, file: !163, line: 90, baseType: !13632, size: 16, offset: 112)
!13632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13596, file: !163, line: 90, size: 16, elements: !13633)
!13633 = !{!13634, !13639}
!13634 = !DIDerivedType(tag: DW_TAG_member, scope: !13632, file: !163, line: 91, baseType: !13635, size: 16)
!13635 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13632, file: !163, line: 91, size: 16, elements: !13636)
!13636 = !{!13637, !13638}
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13635, file: !163, line: 96, baseType: !195, size: 8)
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13635, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13632, file: !163, line: 100, baseType: !121, size: 16)
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13596, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13596, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13596, file: !163, line: 131, baseType: !13643, size: 192, offset: 192)
!13643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !13644)
!13644 = !{!13645, !13646, !13652}
!13645 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13643, file: !141, line: 245, baseType: !13602, size: 64)
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13643, file: !141, line: 246, baseType: !13647, size: 32, offset: 64)
!13647 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !13648)
!13648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13649, size: 32)
!13649 = !DISubroutineType(types: !13650)
!13650 = !{null, !13651}
!13651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13643, size: 32)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13643, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13593, file: !163, line: 250, baseType: !13654, size: 288, offset: 384)
!13654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !13655)
!13655 = !{!13656, !13657, !13658, !13659, !13660, !13661, !13662, !13663, !13664}
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13654, file: !214, line: 26, baseType: !108, size: 32)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13654, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13654, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13654, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13654, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13654, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13654, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13654, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13654, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13593, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13593, file: !163, line: 256, baseType: !13624, size: 64, offset: 704)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13593, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!13668 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13593, file: !163, line: 300, baseType: !13669, size: 96, offset: 800)
!13669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !13670)
!13670 = !{!13671, !13672, !13673}
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13669, file: !163, line: 153, baseType: !22, size: 32)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13669, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13669, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13593, file: !163, line: 325, baseType: !13675, size: 32, offset: 896)
!13675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13676, size: 32)
!13676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !13677)
!13677 = !{!13678, !13684, !13685}
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13676, file: !137, line: 5074, baseType: !13679, size: 96)
!13679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !13680)
!13680 = !{!13681, !13682, !13683}
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13679, file: !240, line: 57, baseType: !243, size: 32)
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13679, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!13683 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13679, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13676, file: !137, line: 5075, baseType: !13624, size: 64, offset: 96)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13676, file: !137, line: 5076, baseType: !13686, offset: 160)
!13686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13593, file: !163, line: 343, baseType: !13688, size: 64, offset: 928)
!13688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !13689)
!13689 = !{!13690, !13691}
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13688, file: !214, line: 63, baseType: !108, size: 32)
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13688, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!13692 = !{!13693, !13694, !13695}
!13693 = !DILocalVariable(name: "reason", arg: 1, scope: !13545, file: !3216, line: 209, type: !32)
!13694 = !DILocalVariable(name: "esf", arg: 2, scope: !13545, file: !3216, line: 209, type: !13548)
!13695 = !DILocalVariable(name: "thread", arg: 3, scope: !13545, file: !3216, line: 210, type: !13592)
!13696 = !DILocation(line: 0, scope: !13545)
!13697 = !DILocation(line: 212, column: 1, scope: !13545)
!13698 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3216, file: !3216, line: 214, type: !13699, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13701)
!13699 = !DISubroutineType(types: !13700)
!13700 = !{null, !22, !22}
!13701 = !{!13702, !13703}
!13702 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13698, file: !3216, line: 214, type: !22)
!13703 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13698, file: !3216, line: 214, type: !22)
!13704 = !DILocation(line: 0, scope: !13698)
!13705 = !DILocation(line: 216, column: 1, scope: !13698)
!13706 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3216, file: !3216, line: 218, type: !13707, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13709)
!13707 = !DISubroutineType(types: !13708)
!13708 = !{null, !379, !132}
!13709 = !{!13710, !13711}
!13710 = !DILocalVariable(name: "buf", arg: 1, scope: !13706, file: !3216, line: 218, type: !379)
!13711 = !DILocalVariable(name: "buflen", arg: 2, scope: !13706, file: !3216, line: 218, type: !132)
!13712 = !DILocation(line: 0, scope: !13706)
!13713 = !DILocation(line: 220, column: 1, scope: !13706)
!13714 = distinct !DISubprogram(name: "coredump_query", scope: !3216, file: !3216, line: 222, type: !13715, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13717)
!13715 = !DISubroutineType(types: !13716)
!13716 = !{!103, !3215, !102}
!13717 = !{!13718, !13719}
!13718 = !DILocalVariable(name: "query_id", arg: 1, scope: !13714, file: !3216, line: 222, type: !3215)
!13719 = !DILocalVariable(name: "arg", arg: 2, scope: !13714, file: !3216, line: 222, type: !102)
!13720 = !DILocation(line: 0, scope: !13714)
!13721 = !DILocation(line: 224, column: 2, scope: !13714)
!13722 = distinct !DISubprogram(name: "coredump_cmd", scope: !3216, file: !3216, line: 227, type: !13723, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13725)
!13723 = !DISubroutineType(types: !13724)
!13724 = !{!103, !3222, !102}
!13725 = !{!13726, !13727}
!13726 = !DILocalVariable(name: "query_id", arg: 1, scope: !13722, file: !3216, line: 227, type: !3222)
!13727 = !DILocalVariable(name: "arg", arg: 2, scope: !13722, file: !3216, line: 227, type: !102)
!13728 = !DILocation(line: 0, scope: !13722)
!13729 = !DILocation(line: 229, column: 2, scope: !13722)
!13730 = distinct !DISubprogram(name: "arch_system_halt", scope: !13731, file: !13731, line: 23, type: !7008, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13732)
!13731 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13732 = !{!13733}
!13733 = !DILocalVariable(name: "reason", arg: 1, scope: !13730, file: !13731, line: 23, type: !32)
!13734 = !DILocation(line: 0, scope: !13730)
!13735 = !DILocation(line: 55, column: 2, scope: !13736, inlinedAt: !13740)
!13736 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13737)
!13737 = !{!13738, !13739}
!13738 = !DILocalVariable(name: "key", scope: !13736, file: !6997, line: 44, type: !32)
!13739 = !DILocalVariable(name: "tmp", scope: !13736, file: !6997, line: 53, type: !32)
!13740 = distinct !DILocation(line: 31, column: 8, scope: !13730)
!13741 = !{i64 2242280}
!13742 = !DILocation(line: 0, scope: !13736, inlinedAt: !13740)
!13743 = !DILocation(line: 32, column: 2, scope: !13730)
!13744 = !DILocation(line: 32, column: 2, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13746, file: !13731, line: 32, column: 2)
!13746 = distinct !DILexicalBlock(scope: !13730, file: !13731, line: 32, column: 2)
!13747 = distinct !{!13747, !13748, !13749}
!13748 = !DILocation(line: 32, column: 2, scope: !13746)
!13749 = !DILocation(line: 34, column: 2, scope: !13746)
!13750 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13731, file: !13731, line: 39, type: !13751, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13753)
!13751 = !DISubroutineType(types: !13752)
!13752 = !{null, !32, !13548}
!13753 = !{!13754, !13755}
!13754 = !DILocalVariable(name: "reason", arg: 1, scope: !13750, file: !13731, line: 39, type: !32)
!13755 = !DILocalVariable(name: "esf", arg: 2, scope: !13750, file: !13731, line: 40, type: !13548)
!13756 = !DILocation(line: 0, scope: !13750)
!13757 = !DILocation(line: 45, column: 2, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13759, file: !13731, line: 45, column: 2)
!13759 = distinct !DILexicalBlock(scope: !13760, file: !13731, line: 45, column: 2)
!13760 = distinct !DILexicalBlock(scope: !13761, file: !13731, line: 45, column: 2)
!13761 = distinct !DILexicalBlock(scope: !13750, file: !13731, line: 45, column: 2)
!13762 = !DILocation(line: 46, column: 2, scope: !13750)
!13763 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13731, file: !13731, line: 81, type: !7008, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13764)
!13764 = !{!13765}
!13765 = !DILocalVariable(name: "reason", arg: 1, scope: !13763, file: !13731, line: 81, type: !32)
!13766 = !DILocation(line: 0, scope: !13763)
!13767 = !DILocation(line: 83, column: 2, scope: !13763)
!13768 = distinct !DISubprogram(name: "z_fatal_error", scope: !13731, file: !13731, line: 96, type: !13751, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13769)
!13769 = !{!13770, !13771, !13772, !13773}
!13770 = !DILocalVariable(name: "reason", arg: 1, scope: !13768, file: !13731, line: 96, type: !32)
!13771 = !DILocalVariable(name: "esf", arg: 2, scope: !13768, file: !13731, line: 96, type: !13548)
!13772 = !DILocalVariable(name: "key", scope: !13768, file: !13731, line: 102, type: !32)
!13773 = !DILocalVariable(name: "thread", scope: !13768, file: !13731, line: 103, type: !13592)
!13774 = !DILocation(line: 0, scope: !13768)
!13775 = !DILocation(line: 55, column: 2, scope: !13736, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 102, column: 21, scope: !13768)
!13777 = !DILocation(line: 0, scope: !13736, inlinedAt: !13776)
!13778 = !DILocation(line: 104, column: 4, scope: !13768)
!13779 = !DILocation(line: 109, column: 2, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13781, file: !13731, line: 109, column: 2)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !13731, line: 109, column: 2)
!13782 = distinct !DILexicalBlock(scope: !13783, file: !13731, line: 109, column: 2)
!13783 = distinct !DILexicalBlock(scope: !13768, file: !13731, line: 109, column: 2)
!13784 = !DILocation(line: 119, column: 11, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13768, file: !13731, line: 119, column: 6)
!13786 = !DILocation(line: 119, column: 20, scope: !13785)
!13787 = !DILocalVariable(name: "esf", arg: 1, scope: !13788, file: !8331, line: 71, type: !13548)
!13788 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8331, file: !8331, line: 71, type: !13789, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13791)
!13789 = !DISubroutineType(types: !13790)
!13790 = !{!131, !13548}
!13791 = !{!13787}
!13792 = !DILocation(line: 0, scope: !13788, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 119, column: 23, scope: !13785)
!13794 = !DILocation(line: 73, column: 21, scope: !13788, inlinedAt: !13793)
!13795 = !DILocation(line: 73, column: 26, scope: !13788, inlinedAt: !13793)
!13796 = !DILocation(line: 73, column: 9, scope: !13788, inlinedAt: !13793)
!13797 = !DILocation(line: 119, column: 6, scope: !13768)
!13798 = !DILocation(line: 120, column: 3, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !13731, line: 120, column: 3)
!13800 = distinct !DILexicalBlock(scope: !13801, file: !13731, line: 120, column: 3)
!13801 = distinct !DILexicalBlock(scope: !13802, file: !13731, line: 120, column: 3)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !13731, line: 120, column: 3)
!13803 = distinct !DILexicalBlock(scope: !13785, file: !13731, line: 119, column: 57)
!13804 = !DILocation(line: 121, column: 2, scope: !13803)
!13805 = !DILocation(line: 124, column: 2, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !13731, line: 124, column: 2)
!13807 = distinct !DILexicalBlock(scope: !13808, file: !13731, line: 124, column: 2)
!13808 = distinct !DILexicalBlock(scope: !13809, file: !13731, line: 124, column: 2)
!13809 = distinct !DILexicalBlock(scope: !13768, file: !13731, line: 124, column: 2)
!13810 = !DILocation(line: 131, column: 2, scope: !13768)
!13811 = !DILocation(line: 0, scope: !13788, inlinedAt: !13812)
!13812 = distinct !DILocation(line: 151, column: 24, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13814, file: !13731, line: 151, column: 7)
!13814 = distinct !DILexicalBlock(scope: !13815, file: !13731, line: 146, column: 32)
!13815 = distinct !DILexicalBlock(scope: !13768, file: !13731, line: 146, column: 6)
!13816 = !DILocation(line: 151, column: 7, scope: !13814)
!13817 = !DILocation(line: 151, column: 21, scope: !13813)
!13818 = !DILocalVariable(name: "key", arg: 1, scope: !13819, file: !6997, line: 84, type: !32)
!13819 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13820)
!13820 = !{!13818}
!13821 = !DILocation(line: 0, scope: !13819, inlinedAt: !13822)
!13822 = distinct !DILocation(line: 186, column: 2, scope: !13768)
!13823 = !DILocation(line: 95, column: 2, scope: !13819, inlinedAt: !13822)
!13824 = !{i64 2243097}
!13825 = !DILocation(line: 189, column: 3, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13827, file: !13731, line: 188, column: 41)
!13827 = distinct !DILexicalBlock(scope: !13768, file: !13731, line: 188, column: 6)
!13828 = !DILocation(line: 191, column: 1, scope: !13768)
!13829 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !13830, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !251)
!13830 = !DISubroutineType(types: !13831)
!13831 = !{!13832}
!13832 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !13592)
!13833 = !DILocation(line: 535, column: 9, scope: !13829)
!13834 = !DILocation(line: 535, column: 2, scope: !13829)
!13835 = distinct !DISubprogram(name: "reason_to_str", scope: !13731, file: !13731, line: 62, type: !13836, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13838)
!13836 = !DISubroutineType(types: !13837)
!13837 = !{!337, !32}
!13838 = !{!13839}
!13839 = !DILocalVariable(name: "reason", arg: 1, scope: !13835, file: !13731, line: 62, type: !32)
!13840 = !DILocation(line: 0, scope: !13835)
!13841 = !DILocation(line: 64, column: 2, scope: !13835)
!13842 = !DILocation(line: 0, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13835, file: !13731, line: 64, column: 18)
!13844 = !DILocation(line: 78, column: 1, scope: !13835)
!13845 = distinct !DISubprogram(name: "thread_name_get", scope: !13731, file: !13731, line: 51, type: !13846, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13848)
!13846 = !DISubroutineType(types: !13847)
!13847 = !{!337, !13592}
!13848 = !{!13849, !13850}
!13849 = !DILocalVariable(name: "thread", arg: 1, scope: !13845, file: !13731, line: 51, type: !13592)
!13850 = !DILocalVariable(name: "thread_name", scope: !13845, file: !13731, line: 53, type: !337)
!13851 = !DILocation(line: 0, scope: !13845)
!13852 = !DILocation(line: 53, column: 36, scope: !13845)
!13853 = !DILocation(line: 53, column: 28, scope: !13845)
!13854 = !DILocation(line: 53, column: 47, scope: !13845)
!13855 = !DILocation(line: 55, column: 19, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13845, file: !13731, line: 55, column: 6)
!13857 = !DILocation(line: 55, column: 28, scope: !13856)
!13858 = !DILocation(line: 55, column: 32, scope: !13856)
!13859 = !DILocation(line: 55, column: 47, scope: !13856)
!13860 = !DILocation(line: 55, column: 6, scope: !13845)
!13861 = !DILocation(line: 57, column: 2, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13856, file: !13731, line: 55, column: 57)
!13863 = !DILocation(line: 59, column: 2, scope: !13845)
!13864 = distinct !DISubprogram(name: "k_thread_abort", scope: !3611, file: !3611, line: 188, type: !13865, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !13867)
!13865 = !DISubroutineType(types: !13866)
!13866 = !{null, !13832}
!13867 = !{!13868}
!13868 = !DILocalVariable(name: "thread", arg: 1, scope: !13864, file: !3611, line: 188, type: !13832)
!13869 = !DILocation(line: 0, scope: !13864)
!13870 = !DILocation(line: 197, column: 2, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13864, file: !3611, line: 197, column: 2)
!13872 = !{i64 2154743062}
!13873 = !DILocation(line: 198, column: 2, scope: !13864)
!13874 = !DILocation(line: 199, column: 1, scope: !13864)
!13875 = distinct !DISubprogram(name: "z_current_get", scope: !3611, file: !3611, line: 173, type: !13830, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !251)
!13876 = !DILocation(line: 180, column: 2, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13875, file: !3611, line: 180, column: 2)
!13878 = !{i64 2154742994}
!13879 = !DILocation(line: 181, column: 9, scope: !13875)
!13880 = !DILocation(line: 181, column: 2, scope: !13875)
!13881 = distinct !DISubprogram(name: "z_early_memset", scope: !1923, file: !1923, line: 108, type: !13882, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13884)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{null, !102, !103, !132}
!13884 = !{!13885, !13886, !13887}
!13885 = !DILocalVariable(name: "dst", arg: 1, scope: !13881, file: !1923, line: 108, type: !102)
!13886 = !DILocalVariable(name: "c", arg: 2, scope: !13881, file: !1923, line: 108, type: !103)
!13887 = !DILocalVariable(name: "n", arg: 3, scope: !13881, file: !1923, line: 108, type: !132)
!13888 = !DILocation(line: 0, scope: !13881)
!13889 = !DILocation(line: 110, column: 9, scope: !13881)
!13890 = !DILocation(line: 111, column: 1, scope: !13881)
!13891 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1923, file: !1923, line: 121, type: !13892, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13894)
!13892 = !DISubroutineType(types: !13893)
!13893 = !{null, !102, !13, !132}
!13894 = !{!13895, !13896, !13897}
!13895 = !DILocalVariable(name: "dst", arg: 1, scope: !13891, file: !1923, line: 121, type: !102)
!13896 = !DILocalVariable(name: "src", arg: 2, scope: !13891, file: !1923, line: 121, type: !13)
!13897 = !DILocalVariable(name: "n", arg: 3, scope: !13891, file: !1923, line: 121, type: !132)
!13898 = !DILocation(line: 0, scope: !13891)
!13899 = !DILocation(line: 123, column: 9, scope: !13891)
!13900 = !DILocation(line: 124, column: 1, scope: !13891)
!13901 = distinct !DISubprogram(name: "z_bss_zero", scope: !1923, file: !1923, line: 132, type: !334, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !251)
!13902 = !DILocation(line: 143, column: 2, scope: !13901)
!13903 = !DILocation(line: 168, column: 1, scope: !13901)
!13904 = distinct !DISubprogram(name: "z_init_cpu", scope: !1923, file: !1923, line: 372, type: !9574, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13905)
!13905 = !{!13906}
!13906 = !DILocalVariable(name: "id", arg: 1, scope: !13904, file: !1923, line: 372, type: !103)
!13907 = !DILocation(line: 0, scope: !13904)
!13908 = !DILocation(line: 374, column: 2, scope: !13904)
!13909 = !DILocation(line: 375, column: 34, scope: !13904)
!13910 = !DILocation(line: 375, column: 19, scope: !13904)
!13911 = !DILocation(line: 375, column: 31, scope: !13904)
!13912 = !DILocation(line: 376, column: 24, scope: !13904)
!13913 = !DILocation(line: 376, column: 19, scope: !13904)
!13914 = !DILocation(line: 376, column: 22, scope: !13904)
!13915 = !DILocation(line: 378, column: 26, scope: !13904)
!13916 = !DILocation(line: 378, column: 4, scope: !13904)
!13917 = !DILocation(line: 378, column: 50, scope: !13904)
!13918 = !DILocation(line: 377, column: 19, scope: !13904)
!13919 = !DILocation(line: 377, column: 29, scope: !13904)
!13920 = !DILocation(line: 384, column: 1, scope: !13904)
!13921 = distinct !DISubprogram(name: "init_idle_thread", scope: !1923, file: !1923, line: 343, type: !9574, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13922)
!13922 = !{!13923, !13924, !13925, !13928}
!13923 = !DILocalVariable(name: "i", arg: 1, scope: !13921, file: !1923, line: 343, type: !103)
!13924 = !DILocalVariable(name: "thread", scope: !13921, file: !1923, line: 345, type: !2015)
!13925 = !DILocalVariable(name: "stack", scope: !13921, file: !1923, line: 346, type: !13926)
!13926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13927, size: 32)
!13927 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !2129)
!13928 = !DILocalVariable(name: "tname", scope: !13921, file: !1923, line: 358, type: !277)
!13929 = !DILocation(line: 0, scope: !13921)
!13930 = !DILocation(line: 345, column: 29, scope: !13921)
!13931 = !DILocation(line: 346, column: 28, scope: !13921)
!13932 = !DILocation(line: 362, column: 37, scope: !13921)
!13933 = !DILocation(line: 362, column: 36, scope: !13921)
!13934 = !DILocation(line: 361, column: 2, scope: !13921)
!13935 = !DILocation(line: 365, column: 2, scope: !13921)
!13936 = !DILocation(line: 370, column: 1, scope: !13921)
!13937 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !13938, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13940)
!13938 = !DISubroutineType(types: !13939)
!13939 = !{!277, !13926}
!13940 = !{!13941}
!13941 = !DILocalVariable(name: "sym", arg: 1, scope: !13937, file: !316, line: 331, type: !13926)
!13942 = !DILocation(line: 0, scope: !13937)
!13943 = !DILocation(line: 333, column: 21, scope: !13937)
!13944 = !DILocation(line: 333, column: 2, scope: !13937)
!13945 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13946, file: !13946, line: 155, type: !13947, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13949)
!13946 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13947 = !DISubroutineType(types: !13948)
!13948 = !{null, !2015}
!13949 = !{!13950}
!13950 = !DILocalVariable(name: "thread", arg: 1, scope: !13945, file: !13946, line: 155, type: !2015)
!13951 = !DILocation(line: 0, scope: !13945)
!13952 = !DILocation(line: 157, column: 15, scope: !13945)
!13953 = !DILocation(line: 157, column: 28, scope: !13945)
!13954 = !DILocation(line: 158, column: 1, scope: !13945)
!13955 = distinct !DISubprogram(name: "z_cstart", scope: !1923, file: !1923, line: 501, type: !334, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13956)
!13956 = !{!13957}
!13957 = !DILocalVariable(name: "dummy_thread", scope: !13955, file: !1923, line: 518, type: !2016)
!13958 = !DILocation(line: 507, column: 2, scope: !13955)
!13959 = !DILocation(line: 43, column: 14, scope: !13960, inlinedAt: !13964)
!13960 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13961, file: !13961, line: 40, type: !334, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13962)
!13961 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13962 = !{!13963}
!13963 = !DILocalVariable(name: "msp", scope: !13960, file: !13961, line: 42, type: !108)
!13964 = distinct !DILocation(line: 44, column: 2, scope: !13965, inlinedAt: !13967)
!13965 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13966, file: !13966, line: 42, type: !334, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !251)
!13966 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13967 = distinct !DILocation(line: 510, column: 2, scope: !13955)
!13968 = !DILocation(line: 43, column: 3, scope: !13960, inlinedAt: !13964)
!13969 = !DILocation(line: 43, column: 60, scope: !13960, inlinedAt: !13964)
!13970 = !DILocation(line: 0, scope: !13960, inlinedAt: !13964)
!13971 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13972, file: !7315, line: 1153, type: !108)
!13972 = distinct !DISubprogram(name: "__set_MSP", scope: !7315, file: !7315, line: 1153, type: !7404, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !13973)
!13973 = !{!13971}
!13974 = !DILocation(line: 0, scope: !13972, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 46, column: 2, scope: !13960, inlinedAt: !13964)
!13976 = !DILocation(line: 1155, column: 3, scope: !13972, inlinedAt: !13975)
!13977 = !{i64 3516656}
!13978 = !DILocation(line: 62, column: 11, scope: !13960, inlinedAt: !13964)
!13979 = !DILocation(line: 102, column: 2, scope: !13980, inlinedAt: !13981)
!13980 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8331, file: !8331, line: 97, type: !334, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !251)
!13981 = distinct !DILocation(line: 45, column: 2, scope: !13965, inlinedAt: !13967)
!13982 = !DILocation(line: 108, column: 2, scope: !13980, inlinedAt: !13981)
!13983 = !DILocation(line: 112, column: 2, scope: !13980, inlinedAt: !13981)
!13984 = !DILocation(line: 113, column: 2, scope: !13980, inlinedAt: !13981)
!13985 = !DILocation(line: 114, column: 2, scope: !13980, inlinedAt: !13981)
!13986 = !DILocation(line: 116, column: 2, scope: !13980, inlinedAt: !13981)
!13987 = !DILocation(line: 123, column: 13, scope: !13980, inlinedAt: !13981)
!13988 = !DILocation(line: 46, column: 2, scope: !13965, inlinedAt: !13967)
!13989 = !DILocation(line: 47, column: 2, scope: !13965, inlinedAt: !13967)
!13990 = !DILocation(line: 174, column: 12, scope: !13991, inlinedAt: !13992)
!13991 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8331, file: !8331, line: 169, type: !334, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !251)
!13992 = distinct !DILocation(line: 48, column: 2, scope: !13965, inlinedAt: !13967)
!13993 = !DILocation(line: 179, column: 12, scope: !13991, inlinedAt: !13992)
!13994 = !DILocation(line: 50, column: 2, scope: !13965, inlinedAt: !13967)
!13995 = !DILocation(line: 57, column: 2, scope: !13965, inlinedAt: !13967)
!13996 = !DILocation(line: 518, column: 2, scope: !13955)
!13997 = !DILocation(line: 518, column: 18, scope: !13955)
!13998 = !DILocation(line: 520, column: 2, scope: !13955)
!13999 = !DILocation(line: 523, column: 2, scope: !13955)
!14000 = !DILocation(line: 526, column: 2, scope: !13955)
!14001 = !DILocation(line: 527, column: 2, scope: !13955)
!14002 = !DILocation(line: 543, column: 24, scope: !13955)
!14003 = !DILocation(line: 543, column: 2, scope: !13955)
!14004 = !DILocation(line: 0, scope: !2151)
!14005 = !DILocation(line: 246, column: 15, scope: !2169)
!14006 = !DILocation(line: 246, column: 36, scope: !2168)
!14007 = !DILocation(line: 246, column: 2, scope: !2169)
!14008 = !DILocation(line: 247, column: 37, scope: !2167)
!14009 = !DILocation(line: 0, scope: !2167)
!14010 = !DILocation(line: 248, column: 19, scope: !2167)
!14011 = !DILocation(line: 248, column: 12, scope: !2167)
!14012 = !DILocation(line: 250, column: 11, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !2167, file: !1923, line: 250, column: 7)
!14014 = !DILocation(line: 250, column: 7, scope: !2167)
!14015 = !DILocation(line: 254, column: 11, scope: !14016)
!14016 = distinct !DILexicalBlock(scope: !14017, file: !1923, line: 254, column: 8)
!14017 = distinct !DILexicalBlock(scope: !14013, file: !1923, line: 250, column: 20)
!14018 = !DILocation(line: 254, column: 8, scope: !14017)
!14019 = !DILocation(line: 255, column: 9, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !14016, file: !1923, line: 254, column: 17)
!14021 = !DILocation(line: 258, column: 9, scope: !14020)
!14022 = !DILocation(line: 261, column: 28, scope: !14020)
!14023 = !DILocation(line: 261, column: 10, scope: !14020)
!14024 = !DILocation(line: 261, column: 17, scope: !14020)
!14025 = !DILocation(line: 261, column: 26, scope: !14020)
!14026 = !DILocation(line: 262, column: 4, scope: !14020)
!14027 = !DILocation(line: 263, column: 9, scope: !14017)
!14028 = !DILocation(line: 263, column: 16, scope: !14017)
!14029 = !DILocation(line: 263, column: 28, scope: !14017)
!14030 = !DILocation(line: 264, column: 3, scope: !14017)
!14031 = !DILocation(line: 246, column: 60, scope: !2168)
!14032 = distinct !{!14032, !14007, !14033}
!14033 = !DILocation(line: 265, column: 2, scope: !2169)
!14034 = !DILocation(line: 266, column: 1, scope: !2151)
!14035 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7349, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !14036)
!14036 = !{!14037, !14038}
!14037 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14035, file: !624, line: 1814, type: !891)
!14038 = !DILocalVariable(name: "priority", arg: 2, scope: !14035, file: !624, line: 1814, type: !108)
!14039 = !DILocation(line: 0, scope: !14035)
!14040 = !DILocation(line: 1822, column: 48, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14042, file: !624, line: 1821, column: 3)
!14042 = distinct !DILexicalBlock(scope: !14035, file: !624, line: 1816, column: 7)
!14043 = !DILocation(line: 1822, column: 32, scope: !14041)
!14044 = !DILocation(line: 1822, column: 40, scope: !14041)
!14045 = !DILocation(line: 1822, column: 5, scope: !14041)
!14046 = !DILocation(line: 1822, column: 46, scope: !14041)
!14047 = !DILocation(line: 1824, column: 1, scope: !14035)
!14048 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13966, file: !13966, line: 32, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14049 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14050, file: !14050, line: 215, type: !13947, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !14051)
!14050 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14051 = !{!14052}
!14052 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14049, file: !14050, line: 215, type: !2015)
!14053 = !DILocation(line: 0, scope: !14049)
!14054 = !DILocation(line: 217, column: 21, scope: !14049)
!14055 = !DILocation(line: 217, column: 34, scope: !14049)
!14056 = !DILocation(line: 221, column: 21, scope: !14049)
!14057 = !DILocation(line: 221, column: 34, scope: !14049)
!14058 = !DILocation(line: 223, column: 27, scope: !14049)
!14059 = !DILocation(line: 223, column: 33, scope: !14049)
!14060 = !DILocation(line: 224, column: 27, scope: !14049)
!14061 = !DILocation(line: 224, column: 32, scope: !14049)
!14062 = !DILocation(line: 230, column: 2, scope: !14049)
!14063 = !DILocation(line: 239, column: 24, scope: !14049)
!14064 = !DILocation(line: 240, column: 1, scope: !14049)
!14065 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1923, file: !1923, line: 399, type: !14066, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !14068)
!14066 = !DISubroutineType(types: !14067)
!14067 = !{!277}
!14068 = !{!14069}
!14069 = !DILocalVariable(name: "stack_ptr", scope: !14065, file: !1923, line: 401, type: !277)
!14070 = !DILocation(line: 404, column: 2, scope: !14065)
!14071 = !DILocation(line: 416, column: 24, scope: !14065)
!14072 = !DILocation(line: 418, column: 14, scope: !14065)
!14073 = !DILocation(line: 0, scope: !14065)
!14074 = !DILocation(line: 423, column: 2, scope: !14065)
!14075 = !DILocation(line: 424, column: 2, scope: !14065)
!14076 = !DILocation(line: 426, column: 2, scope: !14065)
!14077 = !DILocation(line: 428, column: 2, scope: !14065)
!14078 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1923, file: !1923, line: 432, type: !14079, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !14081)
!14079 = !DISubroutineType(types: !14080)
!14080 = !{null, !277}
!14081 = !{!14082}
!14082 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14078, file: !1923, line: 432, type: !277)
!14083 = !DILocation(line: 0, scope: !14078)
!14084 = !DILocation(line: 435, column: 2, scope: !14078)
!14085 = !DILocation(line: 445, column: 2, scope: !14078)
!14086 = distinct !DISubprogram(name: "bg_thread_main", scope: !1923, file: !1923, line: 277, type: !323, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1919, retainedNodes: !14087)
!14087 = !{!14088, !14089, !14090}
!14088 = !DILocalVariable(name: "unused1", arg: 1, scope: !14086, file: !1923, line: 277, type: !102)
!14089 = !DILocalVariable(name: "unused2", arg: 2, scope: !14086, file: !1923, line: 277, type: !102)
!14090 = !DILocalVariable(name: "unused3", arg: 3, scope: !14086, file: !1923, line: 277, type: !102)
!14091 = !DILocation(line: 0, scope: !14086)
!14092 = !DILocation(line: 291, column: 20, scope: !14086)
!14093 = !DILocation(line: 293, column: 2, scope: !14086)
!14094 = !DILocation(line: 297, column: 2, scope: !14086)
!14095 = !DILocation(line: 305, column: 2, scope: !14086)
!14096 = !DILocation(line: 307, column: 2, scope: !14086)
!14097 = !DILocation(line: 330, column: 8, scope: !14086)
!14098 = !DILocation(line: 333, column: 34, scope: !14086)
!14099 = !DILocation(line: 339, column: 1, scope: !14086)
!14100 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2180, file: !2180, line: 45, type: !14101, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14109)
!14101 = !DISubroutineType(types: !14102)
!14102 = !{null, !14103, !102}
!14103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !137, line: 103, baseType: !14104)
!14104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14105, size: 32)
!14105 = !DISubroutineType(types: !14106)
!14106 = !{null, !14107, !102}
!14107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14108, size: 32)
!14108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!14109 = !{!14110, !14111}
!14110 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14100, file: !2180, line: 45, type: !14103)
!14111 = !DILocalVariable(name: "user_data", arg: 2, scope: !14100, file: !2180, line: 45, type: !102)
!14112 = !DILocation(line: 0, scope: !14100)
!14113 = !DILocation(line: 71, column: 1, scope: !14100)
!14114 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2180, file: !2180, line: 73, type: !14101, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14115)
!14115 = !{!14116, !14117}
!14116 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14114, file: !2180, line: 73, type: !14103)
!14117 = !DILocalVariable(name: "user_data", arg: 2, scope: !14114, file: !2180, line: 73, type: !102)
!14118 = !DILocation(line: 0, scope: !14114)
!14119 = !DILocation(line: 95, column: 1, scope: !14114)
!14120 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2180, file: !2180, line: 97, type: !8332, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !251)
!14121 = !DILocation(line: 1031, column: 3, scope: !14122, inlinedAt: !14125)
!14122 = distinct !DISubprogram(name: "__get_IPSR", scope: !7315, file: !7315, line: 1027, type: !3591, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14123)
!14123 = !{!14124}
!14124 = !DILocalVariable(name: "result", scope: !14122, file: !7315, line: 1029, type: !108)
!14125 = distinct !DILocation(line: 48, column: 10, scope: !14126, inlinedAt: !14127)
!14126 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8331, file: !8331, line: 46, type: !8332, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !251)
!14127 = distinct !DILocation(line: 99, column: 9, scope: !14120)
!14128 = !{i64 3522307}
!14129 = !DILocation(line: 0, scope: !14122, inlinedAt: !14125)
!14130 = !DILocation(line: 48, column: 9, scope: !14126, inlinedAt: !14127)
!14131 = !DILocation(line: 99, column: 2, scope: !14120)
!14132 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2180, file: !2180, line: 106, type: !334, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !251)
!14133 = !DILocation(line: 108, column: 2, scope: !14132)
!14134 = !DILocation(line: 108, column: 17, scope: !14132)
!14135 = !DILocation(line: 108, column: 30, scope: !14132)
!14136 = !DILocation(line: 109, column: 1, scope: !14132)
!14137 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2180, file: !2180, line: 116, type: !334, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !251)
!14138 = !DILocation(line: 118, column: 2, scope: !14137)
!14139 = !DILocation(line: 118, column: 17, scope: !14137)
!14140 = !DILocation(line: 118, column: 30, scope: !14137)
!14141 = !DILocation(line: 119, column: 1, scope: !14137)
!14142 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2180, file: !2180, line: 126, type: !8332, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !251)
!14143 = !DILocation(line: 128, column: 10, scope: !14142)
!14144 = !DILocation(line: 128, column: 25, scope: !14142)
!14145 = !DILocation(line: 128, column: 38, scope: !14142)
!14146 = !DILocation(line: 128, column: 53, scope: !14142)
!14147 = !DILocation(line: 128, column: 2, scope: !14142)
!14148 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2180, file: !2180, line: 187, type: !14149, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14151)
!14149 = !DISubroutineType(types: !14150)
!14150 = !{!103, !2184, !337}
!14151 = !{!14152, !14153}
!14152 = !DILocalVariable(name: "thread", arg: 1, scope: !14148, file: !2180, line: 187, type: !2184)
!14153 = !DILocalVariable(name: "value", arg: 2, scope: !14148, file: !2180, line: 187, type: !337)
!14154 = !DILocation(line: 0, scope: !14148)
!14155 = !DILocation(line: 206, column: 2, scope: !14148)
!14156 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2180, file: !2180, line: 238, type: !14157, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{!337, !2184}
!14159 = !{!14160}
!14160 = !DILocalVariable(name: "thread", arg: 1, scope: !14156, file: !2180, line: 238, type: !2184)
!14161 = !DILocation(line: 0, scope: !14156)
!14162 = !DILocation(line: 244, column: 2, scope: !14156)
!14163 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2180, file: !2180, line: 248, type: !14164, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14166)
!14164 = !DISubroutineType(types: !14165)
!14165 = !{!103, !2183, !277, !132}
!14166 = !{!14167, !14168, !14169}
!14167 = !DILocalVariable(name: "thread", arg: 1, scope: !14163, file: !2180, line: 248, type: !2183)
!14168 = !DILocalVariable(name: "buf", arg: 2, scope: !14163, file: !2180, line: 248, type: !277)
!14169 = !DILocalVariable(name: "size", arg: 3, scope: !14163, file: !2180, line: 248, type: !132)
!14170 = !DILocation(line: 0, scope: !14163)
!14171 = !DILocation(line: 257, column: 2, scope: !14163)
!14172 = !DILocation(line: 0, scope: !2179)
!14173 = !DILocation(line: 281, column: 11, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !2179, file: !2180, line: 281, column: 6)
!14175 = !DILocation(line: 281, column: 20, scope: !14174)
!14176 = !DILocation(line: 275, column: 45, scope: !2179)
!14177 = !DILocation(line: 285, column: 10, scope: !2179)
!14178 = !DILocation(line: 0, scope: !2300)
!14179 = !DILocation(line: 293, column: 39, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !2300, file: !2180, line: 293, column: 2)
!14181 = !DILocation(line: 293, column: 2, scope: !2300)
!14182 = !DILocation(line: 273, column: 14, scope: !2179)
!14183 = !DILocation(line: 309, column: 2, scope: !2179)
!14184 = !DILocation(line: 309, column: 11, scope: !2179)
!14185 = !DILocation(line: 311, column: 2, scope: !2179)
!14186 = !DILocation(line: 293, column: 26, scope: !14180)
!14187 = !DILocation(line: 294, column: 9, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14180, file: !2180, line: 293, column: 54)
!14189 = !DILocation(line: 295, column: 21, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14188, file: !2180, line: 295, column: 7)
!14191 = !DILocation(line: 295, column: 28, scope: !14190)
!14192 = !DILocation(line: 295, column: 7, scope: !14188)
!14193 = !DILocation(line: 299, column: 25, scope: !14188)
!14194 = !DILocation(line: 299, column: 41, scope: !14188)
!14195 = !DILocation(line: 300, column: 7, scope: !14188)
!14196 = !DILocation(line: 300, column: 26, scope: !14188)
!14197 = !DILocation(line: 299, column: 10, scope: !14188)
!14198 = !DILocation(line: 299, column: 7, scope: !14188)
!14199 = !DILocation(line: 302, column: 16, scope: !14188)
!14200 = !DILocation(line: 304, column: 20, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14188, file: !2180, line: 304, column: 7)
!14202 = !DILocation(line: 304, column: 7, scope: !14188)
!14203 = !DILocation(line: 305, column: 26, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14201, file: !2180, line: 304, column: 26)
!14205 = !DILocation(line: 305, column: 42, scope: !14204)
!14206 = !DILocation(line: 305, column: 11, scope: !14204)
!14207 = !DILocation(line: 305, column: 8, scope: !14204)
!14208 = !DILocation(line: 306, column: 3, scope: !14204)
!14209 = !DILocation(line: 293, column: 50, scope: !14180)
!14210 = !DILocation(line: 312, column: 1, scope: !2179)
!14211 = distinct !DISubprogram(name: "copy_bytes", scope: !2180, file: !2180, line: 261, type: !14212, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14214)
!14212 = !DISubroutineType(types: !14213)
!14213 = !{!132, !277, !132, !337, !132}
!14214 = !{!14215, !14216, !14217, !14218, !14219}
!14215 = !DILocalVariable(name: "dest", arg: 1, scope: !14211, file: !2180, line: 261, type: !277)
!14216 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14211, file: !2180, line: 261, type: !132)
!14217 = !DILocalVariable(name: "src", arg: 3, scope: !14211, file: !2180, line: 261, type: !337)
!14218 = !DILocalVariable(name: "src_size", arg: 4, scope: !14211, file: !2180, line: 261, type: !132)
!14219 = !DILocalVariable(name: "bytes_to_copy", scope: !14211, file: !2180, line: 263, type: !132)
!14220 = !DILocation(line: 0, scope: !14211)
!14221 = !DILocation(line: 265, column: 18, scope: !14211)
!14222 = !DILocation(line: 266, column: 2, scope: !14211)
!14223 = !DILocation(line: 268, column: 2, scope: !14211)
!14224 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2180, file: !2180, line: 383, type: !14225, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14227)
!14225 = !DISubroutineType(types: !14226)
!14226 = !{null, !2184}
!14227 = !{!14228}
!14228 = !DILocalVariable(name: "thread", arg: 1, scope: !14224, file: !2180, line: 383, type: !2184)
!14229 = !DILocation(line: 0, scope: !14224)
!14230 = !DILocation(line: 387, column: 2, scope: !14224)
!14231 = !DILocation(line: 388, column: 1, scope: !14224)
!14232 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2180, file: !2180, line: 528, type: !14233, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14240)
!14233 = !DISubroutineType(types: !14234)
!14234 = !{!277, !2184, !14235, !132, !321, !102, !102, !102, !103, !108, !337}
!14235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14236, size: 32)
!14236 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !14237)
!14237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !14238)
!14238 = !{!14239}
!14239 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14237, file: !316, line: 48, baseType: !278, size: 8)
!14240 = !{!14241, !14242, !14243, !14244, !14245, !14246, !14247, !14248, !14249, !14250, !14251}
!14241 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14232, file: !2180, line: 528, type: !2184)
!14242 = !DILocalVariable(name: "stack", arg: 2, scope: !14232, file: !2180, line: 529, type: !14235)
!14243 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14232, file: !2180, line: 529, type: !132)
!14244 = !DILocalVariable(name: "entry", arg: 4, scope: !14232, file: !2180, line: 530, type: !321)
!14245 = !DILocalVariable(name: "p1", arg: 5, scope: !14232, file: !2180, line: 531, type: !102)
!14246 = !DILocalVariable(name: "p2", arg: 6, scope: !14232, file: !2180, line: 531, type: !102)
!14247 = !DILocalVariable(name: "p3", arg: 7, scope: !14232, file: !2180, line: 531, type: !102)
!14248 = !DILocalVariable(name: "prio", arg: 8, scope: !14232, file: !2180, line: 532, type: !103)
!14249 = !DILocalVariable(name: "options", arg: 9, scope: !14232, file: !2180, line: 532, type: !108)
!14250 = !DILocalVariable(name: "name", arg: 10, scope: !14232, file: !2180, line: 532, type: !337)
!14251 = !DILocalVariable(name: "stack_ptr", scope: !14232, file: !2180, line: 534, type: !277)
!14252 = !DILocation(line: 0, scope: !14232)
!14253 = !DILocation(line: 550, column: 28, scope: !14232)
!14254 = !DILocation(line: 550, column: 2, scope: !14232)
!14255 = !DILocation(line: 553, column: 34, scope: !14232)
!14256 = !DILocation(line: 553, column: 2, scope: !14232)
!14257 = !DILocation(line: 554, column: 14, scope: !14232)
!14258 = !DILocation(line: 564, column: 2, scope: !14232)
!14259 = !DILocation(line: 567, column: 14, scope: !14232)
!14260 = !DILocation(line: 567, column: 24, scope: !14232)
!14261 = !DILocation(line: 612, column: 7, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14232, file: !2180, line: 612, column: 6)
!14263 = !DILocation(line: 612, column: 6, scope: !14232)
!14264 = !DILocation(line: 627, column: 40, scope: !14232)
!14265 = !DILocation(line: 637, column: 2, scope: !14232)
!14266 = !DILocation(line: 613, column: 15, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14262, file: !2180, line: 612, column: 17)
!14268 = !DILocation(line: 613, column: 29, scope: !14267)
!14269 = !DILocation(line: 638, column: 1, scope: !14232)
!14270 = distinct !DISubprogram(name: "z_waitq_init", scope: !14271, file: !14271, line: 47, type: !14272, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14274)
!14271 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14272 = !DISubroutineType(types: !14273)
!14273 = !{null, !2215}
!14274 = !{!14275}
!14275 = !DILocalVariable(name: "w", arg: 1, scope: !14270, file: !14271, line: 47, type: !2215)
!14276 = !DILocation(line: 0, scope: !14270)
!14277 = !DILocation(line: 49, column: 21, scope: !14270)
!14278 = !DILocation(line: 49, column: 2, scope: !14270)
!14279 = !DILocation(line: 50, column: 1, scope: !14270)
!14280 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2180, file: !2180, line: 791, type: !14281, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14284)
!14281 = !DISubroutineType(types: !14282)
!14282 = !{null, !14283, !103, !108, !32}
!14283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!14284 = !{!14285, !14286, !14287, !14288}
!14285 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14280, file: !2180, line: 791, type: !14283)
!14286 = !DILocalVariable(name: "priority", arg: 2, scope: !14280, file: !2180, line: 791, type: !103)
!14287 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14280, file: !2180, line: 792, type: !108)
!14288 = !DILocalVariable(name: "options", arg: 4, scope: !14280, file: !2180, line: 792, type: !32)
!14289 = !DILocation(line: 0, scope: !14280)
!14290 = !DILocation(line: 795, column: 15, scope: !14280)
!14291 = !DILocation(line: 795, column: 25, scope: !14280)
!14292 = !DILocation(line: 796, column: 30, scope: !14280)
!14293 = !DILocation(line: 796, column: 15, scope: !14280)
!14294 = !DILocation(line: 796, column: 28, scope: !14280)
!14295 = !DILocation(line: 797, column: 30, scope: !14280)
!14296 = !DILocation(line: 797, column: 15, scope: !14280)
!14297 = !DILocation(line: 797, column: 28, scope: !14280)
!14298 = !DILocation(line: 799, column: 22, scope: !14280)
!14299 = !DILocation(line: 799, column: 15, scope: !14280)
!14300 = !DILocation(line: 799, column: 20, scope: !14280)
!14301 = !DILocation(line: 801, column: 15, scope: !14280)
!14302 = !DILocation(line: 801, column: 28, scope: !14280)
!14303 = !DILocation(line: 814, column: 2, scope: !14280)
!14304 = !DILocation(line: 815, column: 1, scope: !14280)
!14305 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2180, file: !2180, line: 449, type: !14306, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14308)
!14306 = !DISubroutineType(types: !14307)
!14307 = !{!277, !2184, !14235, !132}
!14308 = !{!14309, !14310, !14311, !14312, !14313, !14314, !14315, !14316}
!14309 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14305, file: !2180, line: 449, type: !2184)
!14310 = !DILocalVariable(name: "stack", arg: 2, scope: !14305, file: !2180, line: 450, type: !14235)
!14311 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14305, file: !2180, line: 450, type: !132)
!14312 = !DILocalVariable(name: "stack_obj_size", scope: !14305, file: !2180, line: 452, type: !132)
!14313 = !DILocalVariable(name: "stack_buf_size", scope: !14305, file: !2180, line: 452, type: !132)
!14314 = !DILocalVariable(name: "stack_ptr", scope: !14305, file: !2180, line: 453, type: !277)
!14315 = !DILocalVariable(name: "stack_buf_start", scope: !14305, file: !2180, line: 453, type: !277)
!14316 = !DILocalVariable(name: "delta", scope: !14305, file: !2180, line: 454, type: !132)
!14317 = !DILocation(line: 0, scope: !14305)
!14318 = !DILocation(line: 465, column: 20, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14305, file: !2180, line: 463, column: 2)
!14320 = !DILocation(line: 466, column: 21, scope: !14319)
!14321 = !DILocation(line: 473, column: 28, scope: !14305)
!14322 = !DILocation(line: 514, column: 33, scope: !14305)
!14323 = !DILocation(line: 514, column: 25, scope: !14305)
!14324 = !DILocation(line: 514, column: 31, scope: !14305)
!14325 = !DILocation(line: 515, column: 25, scope: !14305)
!14326 = !DILocation(line: 515, column: 30, scope: !14305)
!14327 = !DILocation(line: 516, column: 25, scope: !14305)
!14328 = !DILocation(line: 516, column: 31, scope: !14305)
!14329 = !DILocation(line: 520, column: 2, scope: !14305)
!14330 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !14331, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14333)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{!277, !14235}
!14333 = !{!14334}
!14334 = !DILocalVariable(name: "sym", arg: 1, scope: !14330, file: !316, line: 331, type: !14235)
!14335 = !DILocation(line: 0, scope: !14330)
!14336 = !DILocation(line: 333, column: 21, scope: !14330)
!14337 = !DILocation(line: 333, column: 2, scope: !14330)
!14338 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14339, file: !14339, line: 40, type: !14340, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14342)
!14339 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14340 = !DISubroutineType(types: !14341)
!14341 = !{null, !14283}
!14342 = !{!14343}
!14343 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14338, file: !14339, line: 40, type: !14283)
!14344 = !DILocation(line: 0, scope: !14338)
!14345 = !DILocation(line: 42, column: 31, scope: !14338)
!14346 = !DILocation(line: 42, column: 2, scope: !14338)
!14347 = !DILocation(line: 43, column: 1, scope: !14338)
!14348 = distinct !DISubprogram(name: "z_init_timeout", scope: !14339, file: !14339, line: 25, type: !2241, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14349)
!14349 = !{!14350}
!14350 = !DILocalVariable(name: "to", arg: 1, scope: !14348, file: !14339, line: 25, type: !2243)
!14351 = !DILocation(line: 0, scope: !14348)
!14352 = !DILocation(line: 27, column: 22, scope: !14348)
!14353 = !DILocation(line: 27, column: 2, scope: !14348)
!14354 = !DILocation(line: 28, column: 1, scope: !14348)
!14355 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !14356, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14358)
!14356 = !DISubroutineType(types: !14357)
!14357 = !{null, !2287}
!14358 = !{!14359}
!14359 = !DILocalVariable(name: "node", arg: 1, scope: !14355, file: !146, line: 211, type: !2287)
!14360 = !DILocation(line: 0, scope: !14355)
!14361 = !DILocation(line: 213, column: 8, scope: !14355)
!14362 = !DILocation(line: 213, column: 13, scope: !14355)
!14363 = !DILocation(line: 214, column: 8, scope: !14355)
!14364 = !DILocation(line: 214, column: 13, scope: !14355)
!14365 = !DILocation(line: 215, column: 1, scope: !14355)
!14366 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14367, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14370)
!14367 = !DISubroutineType(types: !14368)
!14368 = !{null, !14369}
!14369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!14370 = !{!14371}
!14371 = !DILocalVariable(name: "list", arg: 1, scope: !14366, file: !146, line: 197, type: !14369)
!14372 = !DILocation(line: 0, scope: !14366)
!14373 = !DILocation(line: 199, column: 8, scope: !14366)
!14374 = !DILocation(line: 199, column: 13, scope: !14366)
!14375 = !DILocation(line: 200, column: 8, scope: !14366)
!14376 = !DILocation(line: 200, column: 13, scope: !14366)
!14377 = !DILocation(line: 201, column: 1, scope: !14366)
!14378 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2180, file: !2180, line: 641, type: !14379, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14385)
!14379 = !DISubroutineType(types: !14380)
!14380 = !{!2183, !2184, !14235, !132, !321, !102, !102, !102, !103, !108, !14381}
!14381 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14382)
!14382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14383)
!14383 = !{!14384}
!14384 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14382, file: !105, line: 66, baseType: !104, size: 64)
!14385 = !{!14386, !14387, !14388, !14389, !14390, !14391, !14392, !14393, !14394, !14395}
!14386 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14378, file: !2180, line: 641, type: !2184)
!14387 = !DILocalVariable(name: "stack", arg: 2, scope: !14378, file: !2180, line: 642, type: !14235)
!14388 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14378, file: !2180, line: 643, type: !132)
!14389 = !DILocalVariable(name: "entry", arg: 4, scope: !14378, file: !2180, line: 643, type: !321)
!14390 = !DILocalVariable(name: "p1", arg: 5, scope: !14378, file: !2180, line: 644, type: !102)
!14391 = !DILocalVariable(name: "p2", arg: 6, scope: !14378, file: !2180, line: 644, type: !102)
!14392 = !DILocalVariable(name: "p3", arg: 7, scope: !14378, file: !2180, line: 644, type: !102)
!14393 = !DILocalVariable(name: "prio", arg: 8, scope: !14378, file: !2180, line: 645, type: !103)
!14394 = !DILocalVariable(name: "options", arg: 9, scope: !14378, file: !2180, line: 645, type: !108)
!14395 = !DILocalVariable(name: "delay", arg: 10, scope: !14378, file: !2180, line: 645, type: !14381)
!14396 = !DILocation(line: 0, scope: !14378)
!14397 = !DILocation(line: 649, column: 2, scope: !14378)
!14398 = !DILocation(line: 652, column: 7, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14378, file: !2180, line: 652, column: 6)
!14400 = !DILocation(line: 652, column: 6, scope: !14378)
!14401 = !DILocation(line: 653, column: 3, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14399, file: !2180, line: 652, column: 39)
!14403 = !DILocation(line: 654, column: 2, scope: !14402)
!14404 = !DILocation(line: 656, column: 2, scope: !14378)
!14405 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2180, file: !2180, line: 401, type: !14406, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14408)
!14406 = !DISubroutineType(types: !14407)
!14407 = !{null, !2184, !14381}
!14408 = !{!14409, !14410}
!14409 = !DILocalVariable(name: "thread", arg: 1, scope: !14405, file: !2180, line: 401, type: !2184)
!14410 = !DILocalVariable(name: "delay", arg: 2, scope: !14405, file: !2180, line: 401, type: !14381)
!14411 = !DILocation(line: 0, scope: !14405)
!14412 = !DILocation(line: 404, column: 6, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14405, file: !2180, line: 404, column: 6)
!14414 = !DILocation(line: 404, column: 6, scope: !14405)
!14415 = !DILocation(line: 405, column: 3, scope: !14416)
!14416 = distinct !DILexicalBlock(scope: !14413, file: !2180, line: 404, column: 38)
!14417 = !DILocation(line: 406, column: 2, scope: !14416)
!14418 = !DILocation(line: 407, column: 3, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14413, file: !2180, line: 406, column: 9)
!14420 = !DILocation(line: 413, column: 1, scope: !14405)
!14421 = distinct !DISubprogram(name: "k_thread_start", scope: !3611, file: !3611, line: 205, type: !14422, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14424)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{null, !2183}
!14424 = !{!14425}
!14425 = !DILocalVariable(name: "thread", arg: 1, scope: !14421, file: !3611, line: 205, type: !2183)
!14426 = !DILocation(line: 0, scope: !14421)
!14427 = !DILocation(line: 214, column: 2, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14421, file: !3611, line: 214, column: 2)
!14429 = !{i64 2154768286}
!14430 = !DILocation(line: 215, column: 2, scope: !14421)
!14431 = !DILocation(line: 216, column: 1, scope: !14421)
!14432 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14339, file: !14339, line: 47, type: !14406, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14433)
!14433 = !{!14434, !14435}
!14434 = !DILocalVariable(name: "thread", arg: 1, scope: !14432, file: !14339, line: 47, type: !2184)
!14435 = !DILocalVariable(name: "ticks", arg: 2, scope: !14432, file: !14339, line: 47, type: !14381)
!14436 = !DILocation(line: 0, scope: !14432)
!14437 = !DILocation(line: 49, column: 30, scope: !14432)
!14438 = !DILocation(line: 49, column: 2, scope: !14432)
!14439 = !DILocation(line: 50, column: 1, scope: !14432)
!14440 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2180, file: !2180, line: 748, type: !334, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14441)
!14441 = !{!14442, !14459}
!14442 = !DILocalVariable(name: "thread_data", scope: !14443, file: !2180, line: 750, type: !14444)
!14443 = distinct !DILexicalBlock(scope: !14440, file: !2180, line: 750, column: 2)
!14444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14445, size: 32)
!14445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !14446)
!14446 = !{!14447, !14448, !14449, !14450, !14451, !14452, !14453, !14454, !14455, !14456, !14457, !14458}
!14447 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14445, file: !137, line: 621, baseType: !2184, size: 32)
!14448 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14445, file: !137, line: 622, baseType: !14235, size: 32, offset: 32)
!14449 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14445, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!14450 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14445, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!14451 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14445, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!14452 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14445, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!14453 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14445, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!14454 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14445, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!14455 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14445, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!14456 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14445, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!14457 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14445, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!14458 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14445, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!14459 = !DILocalVariable(name: "thread_data", scope: !14460, file: !2180, line: 781, type: !14444)
!14460 = distinct !DILexicalBlock(scope: !14440, file: !2180, line: 781, column: 2)
!14461 = !DILocation(line: 0, scope: !14443)
!14462 = !DILocation(line: 750, column: 2, scope: !14443)
!14463 = !DILocation(line: 780, column: 2, scope: !14440)
!14464 = !DILocation(line: 0, scope: !14460)
!14465 = !DILocation(line: 781, column: 2, scope: !14460)
!14466 = !DILocation(line: 752, column: 17, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14468, file: !2180, line: 750, column: 38)
!14468 = distinct !DILexicalBlock(scope: !14443, file: !2180, line: 750, column: 2)
!14469 = !DILocation(line: 753, column: 17, scope: !14467)
!14470 = !DILocation(line: 754, column: 17, scope: !14467)
!14471 = !DILocation(line: 755, column: 17, scope: !14467)
!14472 = !DILocation(line: 756, column: 17, scope: !14467)
!14473 = !DILocation(line: 757, column: 17, scope: !14467)
!14474 = !DILocation(line: 758, column: 17, scope: !14467)
!14475 = !DILocation(line: 759, column: 17, scope: !14467)
!14476 = !DILocation(line: 760, column: 17, scope: !14467)
!14477 = !DILocation(line: 751, column: 3, scope: !14467)
!14478 = !DILocation(line: 763, column: 16, scope: !14467)
!14479 = !DILocation(line: 763, column: 29, scope: !14467)
!14480 = !DILocation(line: 763, column: 39, scope: !14467)
!14481 = !DILocation(line: 750, column: 2, scope: !14468)
!14482 = !DILocation(line: 750, column: 2, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14468, file: !2180, line: 750, column: 2)
!14484 = distinct !{!14484, !14462, !14485}
!14485 = !DILocation(line: 764, column: 2, scope: !14443)
!14486 = !DILocation(line: 787, column: 2, scope: !14440)
!14487 = !DILocation(line: 788, column: 1, scope: !14440)
!14488 = !DILocation(line: 782, column: 20, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14490, file: !2180, line: 782, column: 7)
!14490 = distinct !DILexicalBlock(scope: !14491, file: !2180, line: 781, column: 38)
!14491 = distinct !DILexicalBlock(scope: !14460, file: !2180, line: 781, column: 2)
!14492 = !DILocation(line: 782, column: 31, scope: !14489)
!14493 = !DILocation(line: 782, column: 7, scope: !14490)
!14494 = !DILocation(line: 783, column: 37, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14489, file: !2180, line: 782, column: 51)
!14496 = !DILocation(line: 784, column: 10, scope: !14495)
!14497 = !DILocation(line: 783, column: 4, scope: !14495)
!14498 = !DILocation(line: 785, column: 3, scope: !14495)
!14499 = !DILocation(line: 781, column: 2, scope: !14491)
!14500 = !DILocation(line: 781, column: 2, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14491, file: !2180, line: 781, column: 2)
!14502 = distinct !{!14502, !14465, !14503}
!14503 = !DILocation(line: 786, column: 2, scope: !14460)
!14504 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3597, file: !3597, line: 403, type: !3598, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14505)
!14505 = !{!14506}
!14506 = !DILocalVariable(name: "t", arg: 1, scope: !14504, file: !3597, line: 403, type: !109)
!14507 = !DILocation(line: 0, scope: !14504)
!14508 = !DILocalVariable(name: "t", arg: 1, scope: !14509, file: !3597, line: 102, type: !109)
!14509 = distinct !DISubprogram(name: "z_tmcvt", scope: !3597, file: !3597, line: 102, type: !3623, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14510)
!14510 = !{!14508, !14511, !14512, !14513, !14514, !14515, !14516, !14517, !14518, !14519, !14520}
!14511 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14509, file: !3597, line: 102, type: !108)
!14512 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14509, file: !3597, line: 103, type: !108)
!14513 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14509, file: !3597, line: 103, type: !131)
!14514 = !DILocalVariable(name: "result32", arg: 5, scope: !14509, file: !3597, line: 104, type: !131)
!14515 = !DILocalVariable(name: "round_up", arg: 6, scope: !14509, file: !3597, line: 104, type: !131)
!14516 = !DILocalVariable(name: "round_off", arg: 7, scope: !14509, file: !3597, line: 105, type: !131)
!14517 = !DILocalVariable(name: "mul_ratio", scope: !14509, file: !3597, line: 107, type: !131)
!14518 = !DILocalVariable(name: "div_ratio", scope: !14509, file: !3597, line: 109, type: !131)
!14519 = !DILocalVariable(name: "off", scope: !14509, file: !3597, line: 116, type: !109)
!14520 = !DILocalVariable(name: "rdivisor", scope: !14521, file: !3597, line: 119, type: !108)
!14521 = distinct !DILexicalBlock(scope: !14522, file: !3597, line: 118, column: 18)
!14522 = distinct !DILexicalBlock(scope: !14509, file: !3597, line: 118, column: 6)
!14523 = !DILocation(line: 0, scope: !14509, inlinedAt: !14524)
!14524 = distinct !DILocation(line: 406, column: 9, scope: !14504)
!14525 = !DILocation(line: 145, column: 13, scope: !14526, inlinedAt: !14524)
!14526 = distinct !DILexicalBlock(scope: !14527, file: !3597, line: 144, column: 10)
!14527 = distinct !DILexicalBlock(scope: !14528, file: !3597, line: 142, column: 7)
!14528 = distinct !DILexicalBlock(scope: !14529, file: !3597, line: 141, column: 24)
!14529 = distinct !DILexicalBlock(scope: !14530, file: !3597, line: 141, column: 13)
!14530 = distinct !DILexicalBlock(scope: !14509, file: !3597, line: 134, column: 6)
!14531 = !DILocation(line: 406, column: 2, scope: !14504)
!14532 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2180, file: !2180, line: 817, type: !4677, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14533)
!14533 = !{!14534, !14535, !14536, !14537}
!14534 = !DILocalVariable(name: "entry", arg: 1, scope: !14532, file: !2180, line: 817, type: !321)
!14535 = !DILocalVariable(name: "p1", arg: 2, scope: !14532, file: !2180, line: 818, type: !102)
!14536 = !DILocalVariable(name: "p2", arg: 3, scope: !14532, file: !2180, line: 818, type: !102)
!14537 = !DILocalVariable(name: "p3", arg: 4, scope: !14532, file: !2180, line: 818, type: !102)
!14538 = !DILocation(line: 0, scope: !14532)
!14539 = !DILocation(line: 822, column: 2, scope: !14532)
!14540 = !DILocation(line: 822, column: 17, scope: !14532)
!14541 = !DILocation(line: 822, column: 30, scope: !14532)
!14542 = !DILocation(line: 823, column: 2, scope: !14532)
!14543 = !DILocation(line: 845, column: 2, scope: !14532)
!14544 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2180, file: !2180, line: 888, type: !14545, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14547)
!14545 = !DISubroutineType(types: !14546)
!14546 = !{!103, !2184}
!14547 = !{!14548}
!14548 = !DILocalVariable(name: "thread", arg: 1, scope: !14544, file: !2180, line: 888, type: !2184)
!14549 = !DILocation(line: 0, scope: !14544)
!14550 = !DILocation(line: 893, column: 2, scope: !14544)
!14551 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2180, file: !2180, line: 897, type: !14552, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14554)
!14552 = !DISubroutineType(types: !14553)
!14553 = !{!103, !2184, !32}
!14554 = !{!14555, !14556}
!14555 = !DILocalVariable(name: "thread", arg: 1, scope: !14551, file: !2180, line: 897, type: !2184)
!14556 = !DILocalVariable(name: "options", arg: 2, scope: !14551, file: !2180, line: 897, type: !32)
!14557 = !DILocation(line: 0, scope: !14551)
!14558 = !DILocation(line: 902, column: 2, scope: !14551)
!14559 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2180, file: !2180, line: 1072, type: !14560, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14565)
!14560 = !DISubroutineType(types: !14561)
!14561 = !{!103, !2183, !14562}
!14562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14563, size: 32)
!14563 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !163, line: 234, baseType: !14564)
!14564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !163, line: 192, elements: !251)
!14565 = !{!14566, !14567}
!14566 = !DILocalVariable(name: "thread", arg: 1, scope: !14559, file: !2180, line: 1072, type: !2183)
!14567 = !DILocalVariable(name: "stats", arg: 2, scope: !14559, file: !2180, line: 1073, type: !14562)
!14568 = !DILocation(line: 0, scope: !14559)
!14569 = !DILocation(line: 1075, column: 14, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14559, file: !2180, line: 1075, column: 6)
!14571 = !DILocation(line: 1075, column: 23, scope: !14570)
!14572 = !DILocation(line: 1086, column: 1, scope: !14559)
!14573 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2180, file: !2180, line: 1088, type: !14574, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !14576)
!14574 = !DISubroutineType(types: !14575)
!14575 = !{!103, !14562}
!14576 = !{!14577}
!14577 = !DILocalVariable(name: "stats", arg: 1, scope: !14573, file: !2180, line: 1088, type: !14562)
!14578 = !DILocation(line: 0, scope: !14573)
!14579 = !DILocation(line: 1094, column: 12, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14573, file: !2180, line: 1094, column: 6)
!14581 = !DILocation(line: 1120, column: 1, scope: !14573)
!14582 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14583, file: !14583, line: 20, type: !334, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !251)
!14583 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14584 = !DILocation(line: 30, column: 2, scope: !14582)
!14585 = !DILocation(line: 31, column: 1, scope: !14582)
!14586 = distinct !DISubprogram(name: "idle", scope: !14583, file: !14583, line: 33, type: !323, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !14587)
!14587 = !{!14588, !14589, !14590}
!14588 = !DILocalVariable(name: "unused1", arg: 1, scope: !14586, file: !14583, line: 33, type: !102)
!14589 = !DILocalVariable(name: "unused2", arg: 2, scope: !14586, file: !14583, line: 33, type: !102)
!14590 = !DILocalVariable(name: "unused3", arg: 3, scope: !14586, file: !14583, line: 33, type: !102)
!14591 = !DILocation(line: 0, scope: !14586)
!14592 = !DILocation(line: 41, column: 2, scope: !14586)
!14593 = !DILocation(line: 55, column: 2, scope: !14594, inlinedAt: !14598)
!14594 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !14595)
!14595 = !{!14596, !14597}
!14596 = !DILocalVariable(name: "key", scope: !14594, file: !6997, line: 44, type: !32)
!14597 = !DILocalVariable(name: "tmp", scope: !14594, file: !6997, line: 53, type: !32)
!14598 = distinct !DILocation(line: 62, column: 10, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14586, file: !14583, line: 41, column: 15)
!14600 = !{i64 2240622}
!14601 = !DILocation(line: 0, scope: !14594, inlinedAt: !14598)
!14602 = !DILocation(line: 86, column: 3, scope: !14599)
!14603 = distinct !{!14603, !14592, !14604}
!14604 = !DILocation(line: 105, column: 2, scope: !14586)
!14605 = distinct !DISubprogram(name: "k_cpu_idle", scope: !137, file: !137, line: 5627, type: !334, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3230, retainedNodes: !251)
!14606 = !DILocation(line: 5629, column: 2, scope: !14605)
!14607 = !DILocation(line: 5630, column: 1, scope: !14605)
!14608 = !DISubprogram(name: "arch_cpu_idle", scope: !314, file: !314, line: 167, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14609 = distinct !DISubprogram(name: "k_msgq_init", scope: !14610, file: !14610, line: 35, type: !14611, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14626)
!14610 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14611 = !DISubroutineType(types: !14612)
!14612 = !{null, !14613, !277, !132, !108}
!14613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14614, size: 32)
!14614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !14615)
!14615 = !{!14616, !14617, !14618, !14619, !14620, !14621, !14622, !14623, !14624, !14625}
!14616 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14614, file: !137, line: 4206, baseType: !3268, size: 64)
!14617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14614, file: !137, line: 4208, baseType: !3330, offset: 64)
!14618 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14614, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!14619 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14614, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!14620 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14614, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!14621 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14614, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!14622 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14614, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!14623 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14614, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!14624 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14614, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!14625 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14614, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!14626 = !{!14627, !14628, !14629, !14630}
!14627 = !DILocalVariable(name: "msgq", arg: 1, scope: !14609, file: !14610, line: 35, type: !14613)
!14628 = !DILocalVariable(name: "buffer", arg: 2, scope: !14609, file: !14610, line: 35, type: !277)
!14629 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14609, file: !14610, line: 35, type: !132)
!14630 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14609, file: !14610, line: 36, type: !108)
!14631 = !DILocation(line: 0, scope: !14609)
!14632 = !DILocation(line: 38, column: 8, scope: !14609)
!14633 = !DILocation(line: 38, column: 17, scope: !14609)
!14634 = !DILocation(line: 39, column: 8, scope: !14609)
!14635 = !DILocation(line: 39, column: 17, scope: !14609)
!14636 = !DILocation(line: 40, column: 8, scope: !14609)
!14637 = !DILocation(line: 40, column: 21, scope: !14609)
!14638 = !DILocation(line: 41, column: 40, scope: !14609)
!14639 = !DILocation(line: 41, column: 28, scope: !14609)
!14640 = !DILocation(line: 41, column: 8, scope: !14609)
!14641 = !DILocation(line: 41, column: 19, scope: !14609)
!14642 = !DILocation(line: 42, column: 8, scope: !14609)
!14643 = !DILocation(line: 42, column: 17, scope: !14609)
!14644 = !DILocation(line: 43, column: 8, scope: !14609)
!14645 = !DILocation(line: 43, column: 18, scope: !14609)
!14646 = !DILocation(line: 44, column: 8, scope: !14609)
!14647 = !DILocation(line: 44, column: 18, scope: !14609)
!14648 = !DILocation(line: 45, column: 8, scope: !14609)
!14649 = !DILocation(line: 45, column: 14, scope: !14609)
!14650 = !DILocation(line: 46, column: 22, scope: !14609)
!14651 = !DILocation(line: 46, column: 2, scope: !14609)
!14652 = !DILocation(line: 55, column: 1, scope: !14609)
!14653 = distinct !DISubprogram(name: "z_waitq_init", scope: !14271, file: !14271, line: 47, type: !14654, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14656)
!14654 = !DISubroutineType(types: !14655)
!14655 = !{null, !3267}
!14656 = !{!14657}
!14657 = !DILocalVariable(name: "w", arg: 1, scope: !14653, file: !14271, line: 47, type: !3267)
!14658 = !DILocation(line: 0, scope: !14653)
!14659 = !DILocation(line: 49, column: 21, scope: !14653)
!14660 = !DILocation(line: 49, column: 2, scope: !14653)
!14661 = !DILocation(line: 50, column: 1, scope: !14653)
!14662 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14663, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14666)
!14663 = !DISubroutineType(types: !14664)
!14664 = !{null, !14665}
!14665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 32)
!14666 = !{!14667}
!14667 = !DILocalVariable(name: "list", arg: 1, scope: !14662, file: !146, line: 197, type: !14665)
!14668 = !DILocation(line: 0, scope: !14662)
!14669 = !DILocation(line: 199, column: 8, scope: !14662)
!14670 = !DILocation(line: 199, column: 13, scope: !14662)
!14671 = !DILocation(line: 200, column: 8, scope: !14662)
!14672 = !DILocation(line: 200, column: 13, scope: !14662)
!14673 = !DILocation(line: 201, column: 1, scope: !14662)
!14674 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14610, file: !14610, line: 57, type: !14675, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14677)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{!103, !14613, !132, !108}
!14677 = !{!14678, !14679, !14680, !14681, !14682, !14683}
!14678 = !DILocalVariable(name: "msgq", arg: 1, scope: !14674, file: !14610, line: 57, type: !14613)
!14679 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14674, file: !14610, line: 57, type: !132)
!14680 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14674, file: !14610, line: 58, type: !108)
!14681 = !DILocalVariable(name: "buffer", scope: !14674, file: !14610, line: 60, type: !102)
!14682 = !DILocalVariable(name: "ret", scope: !14674, file: !14610, line: 61, type: !103)
!14683 = !DILocalVariable(name: "total_size", scope: !14674, file: !14610, line: 62, type: !132)
!14684 = !DILocation(line: 0, scope: !14674)
!14685 = !DILocation(line: 62, column: 2, scope: !14674)
!14686 = !DILocation(line: 66, column: 6, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14674, file: !14610, line: 66, column: 6)
!14688 = !DILocation(line: 66, column: 6, scope: !14674)
!14689 = !DILocation(line: 69, column: 28, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14687, file: !14610, line: 68, column: 9)
!14691 = !DILocation(line: 69, column: 12, scope: !14690)
!14692 = !DILocation(line: 70, column: 14, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14690, file: !14610, line: 70, column: 7)
!14694 = !DILocation(line: 70, column: 7, scope: !14690)
!14695 = !DILocation(line: 71, column: 4, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14693, file: !14610, line: 70, column: 23)
!14697 = !DILocation(line: 72, column: 10, scope: !14696)
!14698 = !DILocation(line: 72, column: 16, scope: !14696)
!14699 = !DILocation(line: 74, column: 3, scope: !14696)
!14700 = !DILocation(line: 0, scope: !14687)
!14701 = !DILocation(line: 82, column: 1, scope: !14674)
!14702 = !DILocation(line: 81, column: 2, scope: !14674)
!14703 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14704, file: !14704, line: 105, type: !14705, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14707)
!14704 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14705 = !DISubroutineType(types: !14706)
!14706 = !{!131, !132, !132, !2705}
!14707 = !{!14708, !14709, !14710}
!14708 = !DILocalVariable(name: "a", arg: 1, scope: !14703, file: !14704, line: 105, type: !132)
!14709 = !DILocalVariable(name: "b", arg: 2, scope: !14703, file: !14704, line: 105, type: !132)
!14710 = !DILocalVariable(name: "result", arg: 3, scope: !14703, file: !14704, line: 105, type: !2705)
!14711 = !DILocation(line: 0, scope: !14703)
!14712 = !DILocation(line: 107, column: 9, scope: !14703)
!14713 = !DILocation(line: 107, column: 2, scope: !14703)
!14714 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14715, file: !14715, line: 102, type: !14716, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14717)
!14715 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14716 = !DISubroutineType(types: !3211)
!14717 = !{!14718}
!14718 = !DILocalVariable(name: "size", arg: 1, scope: !14714, file: !14715, line: 102, type: !132)
!14719 = !DILocation(line: 0, scope: !14714)
!14720 = !DILocation(line: 104, column: 9, scope: !14714)
!14721 = !DILocation(line: 104, column: 2, scope: !14714)
!14722 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14610, file: !14610, line: 95, type: !14723, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14725)
!14723 = !DISubroutineType(types: !14724)
!14724 = !{!103, !14613}
!14725 = !{!14726}
!14726 = !DILocalVariable(name: "msgq", arg: 1, scope: !14722, file: !14610, line: 95, type: !14613)
!14727 = !DILocation(line: 0, scope: !14722)
!14728 = !DILocation(line: 99, column: 2, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14722, file: !14610, line: 99, column: 2)
!14730 = !DILocation(line: 99, column: 2, scope: !14722)
!14731 = !DILocation(line: 105, column: 13, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14722, file: !14610, line: 105, column: 6)
!14733 = !DILocation(line: 105, column: 19, scope: !14732)
!14734 = !DILocation(line: 105, column: 40, scope: !14732)
!14735 = !DILocation(line: 105, column: 6, scope: !14722)
!14736 = !DILocation(line: 106, column: 16, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14732, file: !14610, line: 105, column: 47)
!14738 = !DILocation(line: 106, column: 3, scope: !14737)
!14739 = !DILocation(line: 107, column: 15, scope: !14737)
!14740 = !DILocation(line: 108, column: 2, scope: !14737)
!14741 = !DILocation(line: 113, column: 1, scope: !14722)
!14742 = distinct !DISubprogram(name: "z_waitq_head", scope: !14271, file: !14271, line: 52, type: !14743, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14745)
!14743 = !DISubroutineType(types: !14744)
!14744 = !{!3250, !3267}
!14745 = !{!14746}
!14746 = !DILocalVariable(name: "w", arg: 1, scope: !14742, file: !14271, line: 52, type: !3267)
!14747 = !DILocation(line: 0, scope: !14742)
!14748 = !DILocation(line: 54, column: 52, scope: !14742)
!14749 = !DILocation(line: 54, column: 28, scope: !14742)
!14750 = !DILocation(line: 54, column: 9, scope: !14742)
!14751 = !DILocation(line: 54, column: 2, scope: !14742)
!14752 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !14753, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14755)
!14753 = !DISubroutineType(types: !14754)
!14754 = !{!3235, !14665}
!14755 = !{!14756}
!14756 = !DILocalVariable(name: "list", arg: 1, scope: !14752, file: !146, line: 294, type: !14665)
!14757 = !DILocation(line: 0, scope: !14752)
!14758 = !DILocation(line: 296, column: 9, scope: !14752)
!14759 = !DILocation(line: 296, column: 49, scope: !14752)
!14760 = !DILocation(line: 296, column: 2, scope: !14752)
!14761 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !14762, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14764)
!14762 = !DISubroutineType(types: !14763)
!14763 = !{!131, !14665}
!14764 = !{!14765}
!14765 = !DILocalVariable(name: "list", arg: 1, scope: !14761, file: !146, line: 266, type: !14665)
!14766 = !DILocation(line: 0, scope: !14761)
!14767 = !DILocation(line: 268, column: 15, scope: !14761)
!14768 = !DILocation(line: 268, column: 20, scope: !14761)
!14769 = !DILocation(line: 268, column: 2, scope: !14761)
!14770 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14610, file: !14610, line: 116, type: !14771, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14777)
!14771 = !DISubroutineType(types: !14772)
!14772 = !{!103, !14613, !13, !14773}
!14773 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14774)
!14774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14775)
!14775 = !{!14776}
!14776 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14774, file: !105, line: 66, baseType: !104, size: 64)
!14777 = !{!14778, !14779, !14780, !14781, !14782, !14787}
!14778 = !DILocalVariable(name: "msgq", arg: 1, scope: !14770, file: !14610, line: 116, type: !14613)
!14779 = !DILocalVariable(name: "data", arg: 2, scope: !14770, file: !14610, line: 116, type: !13)
!14780 = !DILocalVariable(name: "timeout", arg: 3, scope: !14770, file: !14610, line: 116, type: !14773)
!14781 = !DILocalVariable(name: "pending_thread", scope: !14770, file: !14610, line: 120, type: !3250)
!14782 = !DILocalVariable(name: "key", scope: !14770, file: !14610, line: 121, type: !14783)
!14783 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !14784)
!14784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !14785)
!14785 = !{!14786}
!14786 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14784, file: !250, line: 33, baseType: !103, size: 32)
!14787 = !DILocalVariable(name: "result", scope: !14770, file: !14610, line: 122, type: !103)
!14788 = !DILocation(line: 0, scope: !14770)
!14789 = !DILocation(line: 124, column: 27, scope: !14770)
!14790 = !DILocalVariable(name: "l", arg: 1, scope: !14791, file: !250, line: 136, type: !14794)
!14791 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !14792, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14795)
!14792 = !DISubroutineType(types: !14793)
!14793 = !{!14783, !14794}
!14794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 32)
!14795 = !{!14790, !14796}
!14796 = !DILocalVariable(name: "k", scope: !14791, file: !250, line: 139, type: !14783)
!14797 = !DILocation(line: 0, scope: !14791, inlinedAt: !14798)
!14798 = distinct !DILocation(line: 124, column: 8, scope: !14770)
!14799 = !DILocation(line: 55, column: 2, scope: !14800, inlinedAt: !14804)
!14800 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14801)
!14801 = !{!14802, !14803}
!14802 = !DILocalVariable(name: "key", scope: !14800, file: !6997, line: 44, type: !32)
!14803 = !DILocalVariable(name: "tmp", scope: !14800, file: !6997, line: 53, type: !32)
!14804 = distinct !DILocation(line: 145, column: 10, scope: !14791, inlinedAt: !14798)
!14805 = !{i64 2246759}
!14806 = !DILocation(line: 0, scope: !14800, inlinedAt: !14804)
!14807 = !DILocation(line: 128, column: 12, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14770, file: !14610, line: 128, column: 6)
!14809 = !DILocation(line: 128, column: 30, scope: !14808)
!14810 = !DILocation(line: 128, column: 22, scope: !14808)
!14811 = !DILocation(line: 128, column: 6, scope: !14770)
!14812 = !DILocation(line: 130, column: 49, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14808, file: !14610, line: 128, column: 40)
!14814 = !DILocation(line: 130, column: 20, scope: !14813)
!14815 = !DILocation(line: 131, column: 22, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14813, file: !14610, line: 131, column: 7)
!14817 = !DILocation(line: 131, column: 7, scope: !14813)
!14818 = !DILocation(line: 135, column: 38, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14816, file: !14610, line: 131, column: 31)
!14820 = !DILocation(line: 136, column: 17, scope: !14819)
!14821 = !DILocation(line: 135, column: 10, scope: !14819)
!14822 = !DILocalVariable(name: "thread", arg: 1, scope: !14823, file: !13966, line: 65, type: !3250)
!14823 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13966, file: !13966, line: 65, type: !14824, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14826)
!14824 = !DISubroutineType(types: !14825)
!14825 = !{null, !3250, !32}
!14826 = !{!14822, !14827}
!14827 = !DILocalVariable(name: "value", arg: 2, scope: !14823, file: !13966, line: 65, type: !32)
!14828 = !DILocation(line: 0, scope: !14823, inlinedAt: !14829)
!14829 = distinct !DILocation(line: 138, column: 4, scope: !14819)
!14830 = !DILocation(line: 67, column: 15, scope: !14823, inlinedAt: !14829)
!14831 = !DILocation(line: 67, column: 33, scope: !14823, inlinedAt: !14829)
!14832 = !DILocation(line: 139, column: 4, scope: !14819)
!14833 = !DILocation(line: 140, column: 4, scope: !14819)
!14834 = !DILocation(line: 141, column: 4, scope: !14819)
!14835 = !DILocation(line: 144, column: 23, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14816, file: !14610, line: 142, column: 10)
!14837 = !DILocation(line: 144, column: 46, scope: !14836)
!14838 = !DILocation(line: 144, column: 10, scope: !14836)
!14839 = !DILocation(line: 145, column: 29, scope: !14836)
!14840 = !DILocation(line: 145, column: 20, scope: !14836)
!14841 = !DILocation(line: 146, column: 33, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14836, file: !14610, line: 146, column: 8)
!14843 = !DILocation(line: 146, column: 24, scope: !14842)
!14844 = !DILocation(line: 146, column: 8, scope: !14836)
!14845 = !DILocation(line: 147, column: 29, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14842, file: !14610, line: 146, column: 45)
!14847 = !DILocation(line: 147, column: 21, scope: !14846)
!14848 = !DILocation(line: 148, column: 4, scope: !14846)
!14849 = !DILocation(line: 149, column: 19, scope: !14836)
!14850 = !DILocation(line: 155, column: 2, scope: !14813)
!14851 = !DILocation(line: 155, column: 13, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14808, file: !14610, line: 155, column: 13)
!14853 = !DILocation(line: 155, column: 13, scope: !14808)
!14854 = !DILocation(line: 162, column: 3, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14852, file: !14610, line: 158, column: 9)
!14856 = !DILocation(line: 162, column: 18, scope: !14855)
!14857 = !DILocation(line: 162, column: 28, scope: !14855)
!14858 = !DILocation(line: 164, column: 49, scope: !14855)
!14859 = !DILocation(line: 164, column: 12, scope: !14855)
!14860 = !DILocation(line: 166, column: 3, scope: !14855)
!14861 = !DILocation(line: 0, scope: !14808)
!14862 = !DILocalVariable(name: "key", arg: 2, scope: !14863, file: !250, line: 190, type: !14783)
!14863 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !14864, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14866)
!14864 = !DISubroutineType(types: !14865)
!14865 = !{null, !14794, !14783}
!14866 = !{!14867, !14862}
!14867 = !DILocalVariable(name: "l", arg: 1, scope: !14863, file: !250, line: 189, type: !14794)
!14868 = !DILocation(line: 0, scope: !14863, inlinedAt: !14869)
!14869 = distinct !DILocation(line: 171, column: 2, scope: !14770)
!14870 = !DILocalVariable(name: "key", arg: 1, scope: !14871, file: !6997, line: 84, type: !32)
!14871 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14872)
!14872 = !{!14870}
!14873 = !DILocation(line: 0, scope: !14871, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 215, column: 2, scope: !14863, inlinedAt: !14869)
!14875 = !DILocation(line: 95, column: 2, scope: !14871, inlinedAt: !14874)
!14876 = !{i64 2247576}
!14877 = !DILocation(line: 173, column: 2, scope: !14770)
!14878 = !DILocation(line: 174, column: 1, scope: !14770)
!14879 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14610, file: !14610, line: 188, type: !14880, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14888)
!14880 = !DISubroutineType(types: !14881)
!14881 = !{null, !14613, !14882}
!14882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14883, size: 32)
!14883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !137, line: 4259, size: 96, elements: !14884)
!14884 = !{!14885, !14886, !14887}
!14885 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14883, file: !137, line: 4261, baseType: !132, size: 32)
!14886 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14883, file: !137, line: 4263, baseType: !108, size: 32, offset: 32)
!14887 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14883, file: !137, line: 4265, baseType: !108, size: 32, offset: 64)
!14888 = !{!14889, !14890}
!14889 = !DILocalVariable(name: "msgq", arg: 1, scope: !14879, file: !14610, line: 188, type: !14613)
!14890 = !DILocalVariable(name: "attrs", arg: 2, scope: !14879, file: !14610, line: 188, type: !14882)
!14891 = !DILocation(line: 0, scope: !14879)
!14892 = !DILocation(line: 190, column: 26, scope: !14879)
!14893 = !DILocation(line: 190, column: 9, scope: !14879)
!14894 = !DILocation(line: 190, column: 18, scope: !14879)
!14895 = !DILocation(line: 191, column: 26, scope: !14879)
!14896 = !DILocation(line: 191, column: 9, scope: !14879)
!14897 = !DILocation(line: 191, column: 18, scope: !14879)
!14898 = !DILocation(line: 192, column: 27, scope: !14879)
!14899 = !DILocation(line: 192, column: 9, scope: !14879)
!14900 = !DILocation(line: 192, column: 19, scope: !14879)
!14901 = !DILocation(line: 193, column: 1, scope: !14879)
!14902 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14610, file: !14610, line: 206, type: !14903, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14905)
!14903 = !DISubroutineType(types: !14904)
!14904 = !{!103, !14613, !102, !14773}
!14905 = !{!14906, !14907, !14908, !14909, !14910, !14911}
!14906 = !DILocalVariable(name: "msgq", arg: 1, scope: !14902, file: !14610, line: 206, type: !14613)
!14907 = !DILocalVariable(name: "data", arg: 2, scope: !14902, file: !14610, line: 206, type: !102)
!14908 = !DILocalVariable(name: "timeout", arg: 3, scope: !14902, file: !14610, line: 206, type: !14773)
!14909 = !DILocalVariable(name: "key", scope: !14902, file: !14610, line: 210, type: !14783)
!14910 = !DILocalVariable(name: "pending_thread", scope: !14902, file: !14610, line: 211, type: !3250)
!14911 = !DILocalVariable(name: "result", scope: !14902, file: !14610, line: 212, type: !103)
!14912 = !DILocation(line: 0, scope: !14902)
!14913 = !DILocation(line: 214, column: 27, scope: !14902)
!14914 = !DILocation(line: 0, scope: !14791, inlinedAt: !14915)
!14915 = distinct !DILocation(line: 214, column: 8, scope: !14902)
!14916 = !DILocation(line: 55, column: 2, scope: !14800, inlinedAt: !14917)
!14917 = distinct !DILocation(line: 145, column: 10, scope: !14791, inlinedAt: !14915)
!14918 = !DILocation(line: 0, scope: !14800, inlinedAt: !14917)
!14919 = !DILocation(line: 218, column: 12, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14902, file: !14610, line: 218, column: 6)
!14921 = !DILocation(line: 218, column: 22, scope: !14920)
!14922 = !DILocation(line: 218, column: 6, scope: !14902)
!14923 = !DILocation(line: 220, column: 28, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14920, file: !14610, line: 218, column: 28)
!14925 = !DILocation(line: 220, column: 44, scope: !14924)
!14926 = !DILocation(line: 220, column: 9, scope: !14924)
!14927 = !DILocation(line: 221, column: 27, scope: !14924)
!14928 = !DILocation(line: 221, column: 18, scope: !14924)
!14929 = !DILocation(line: 222, column: 31, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14924, file: !14610, line: 222, column: 7)
!14931 = !DILocation(line: 222, column: 22, scope: !14930)
!14932 = !DILocation(line: 222, column: 7, scope: !14924)
!14933 = !DILocation(line: 223, column: 27, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14930, file: !14610, line: 222, column: 43)
!14935 = !DILocation(line: 223, column: 19, scope: !14934)
!14936 = !DILocation(line: 224, column: 3, scope: !14934)
!14937 = !DILocation(line: 225, column: 18, scope: !14924)
!14938 = !DILocation(line: 228, column: 49, scope: !14924)
!14939 = !DILocation(line: 228, column: 20, scope: !14924)
!14940 = !DILocation(line: 229, column: 22, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14924, file: !14610, line: 229, column: 7)
!14942 = !DILocation(line: 229, column: 7, scope: !14924)
!14943 = !DILocation(line: 233, column: 23, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14941, file: !14610, line: 229, column: 31)
!14945 = !DILocation(line: 233, column: 55, scope: !14944)
!14946 = !DILocation(line: 234, column: 17, scope: !14944)
!14947 = !DILocation(line: 233, column: 10, scope: !14944)
!14948 = !DILocation(line: 235, column: 29, scope: !14944)
!14949 = !DILocation(line: 235, column: 20, scope: !14944)
!14950 = !DILocation(line: 236, column: 33, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14944, file: !14610, line: 236, column: 8)
!14952 = !DILocation(line: 236, column: 24, scope: !14951)
!14953 = !DILocation(line: 236, column: 8, scope: !14944)
!14954 = !DILocation(line: 237, column: 29, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14951, file: !14610, line: 236, column: 45)
!14956 = !DILocation(line: 237, column: 21, scope: !14955)
!14957 = !DILocation(line: 238, column: 4, scope: !14955)
!14958 = !DILocation(line: 239, column: 19, scope: !14944)
!14959 = !DILocation(line: 0, scope: !14823, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 242, column: 4, scope: !14944)
!14961 = !DILocation(line: 67, column: 15, scope: !14823, inlinedAt: !14960)
!14962 = !DILocation(line: 67, column: 33, scope: !14823, inlinedAt: !14960)
!14963 = !DILocation(line: 243, column: 4, scope: !14944)
!14964 = !DILocation(line: 244, column: 4, scope: !14944)
!14965 = !DILocation(line: 248, column: 4, scope: !14944)
!14966 = !DILocation(line: 251, column: 13, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14920, file: !14610, line: 251, column: 13)
!14968 = !DILocation(line: 251, column: 13, scope: !14920)
!14969 = !DILocation(line: 258, column: 3, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14967, file: !14610, line: 254, column: 9)
!14971 = !DILocation(line: 258, column: 18, scope: !14970)
!14972 = !DILocation(line: 258, column: 28, scope: !14970)
!14973 = !DILocation(line: 260, column: 49, scope: !14970)
!14974 = !DILocation(line: 260, column: 12, scope: !14970)
!14975 = !DILocation(line: 262, column: 3, scope: !14970)
!14976 = !DILocation(line: 0, scope: !14920)
!14977 = !DILocation(line: 0, scope: !14863, inlinedAt: !14978)
!14978 = distinct !DILocation(line: 267, column: 2, scope: !14902)
!14979 = !DILocation(line: 0, scope: !14871, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 215, column: 2, scope: !14863, inlinedAt: !14978)
!14981 = !DILocation(line: 95, column: 2, scope: !14871, inlinedAt: !14980)
!14982 = !DILocation(line: 269, column: 2, scope: !14902)
!14983 = !DILocation(line: 270, column: 1, scope: !14902)
!14984 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14610, file: !14610, line: 284, type: !14985, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !14987)
!14985 = !DISubroutineType(types: !14986)
!14986 = !{!103, !14613, !102}
!14987 = !{!14988, !14989, !14990, !14991}
!14988 = !DILocalVariable(name: "msgq", arg: 1, scope: !14984, file: !14610, line: 284, type: !14613)
!14989 = !DILocalVariable(name: "data", arg: 2, scope: !14984, file: !14610, line: 284, type: !102)
!14990 = !DILocalVariable(name: "key", scope: !14984, file: !14610, line: 286, type: !14783)
!14991 = !DILocalVariable(name: "result", scope: !14984, file: !14610, line: 287, type: !103)
!14992 = !DILocation(line: 0, scope: !14984)
!14993 = !DILocation(line: 0, scope: !14791, inlinedAt: !14994)
!14994 = distinct !DILocation(line: 289, column: 8, scope: !14984)
!14995 = !DILocation(line: 55, column: 2, scope: !14800, inlinedAt: !14996)
!14996 = distinct !DILocation(line: 145, column: 10, scope: !14791, inlinedAt: !14994)
!14997 = !DILocation(line: 0, scope: !14800, inlinedAt: !14996)
!14998 = !DILocation(line: 291, column: 12, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14984, file: !14610, line: 291, column: 6)
!15000 = !DILocation(line: 291, column: 22, scope: !14999)
!15001 = !DILocation(line: 291, column: 6, scope: !14984)
!15002 = !DILocation(line: 293, column: 28, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !14999, file: !14610, line: 291, column: 28)
!15004 = !DILocation(line: 293, column: 44, scope: !15003)
!15005 = !DILocation(line: 293, column: 9, scope: !15003)
!15006 = !DILocation(line: 295, column: 2, scope: !15003)
!15007 = !DILocation(line: 0, scope: !14999)
!15008 = !DILocation(line: 0, scope: !14863, inlinedAt: !15009)
!15009 = distinct !DILocation(line: 302, column: 2, scope: !14984)
!15010 = !DILocation(line: 0, scope: !14871, inlinedAt: !15011)
!15011 = distinct !DILocation(line: 215, column: 2, scope: !14863, inlinedAt: !15009)
!15012 = !DILocation(line: 95, column: 2, scope: !14871, inlinedAt: !15011)
!15013 = !DILocation(line: 304, column: 2, scope: !14984)
!15014 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14610, file: !14610, line: 318, type: !15015, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3232, retainedNodes: !15017)
!15015 = !DISubroutineType(types: !15016)
!15016 = !{null, !14613}
!15017 = !{!15018, !15019, !15020}
!15018 = !DILocalVariable(name: "msgq", arg: 1, scope: !15014, file: !14610, line: 318, type: !14613)
!15019 = !DILocalVariable(name: "key", scope: !15014, file: !14610, line: 320, type: !14783)
!15020 = !DILocalVariable(name: "pending_thread", scope: !15014, file: !14610, line: 321, type: !3250)
!15021 = !DILocation(line: 0, scope: !15014)
!15022 = !DILocation(line: 0, scope: !14791, inlinedAt: !15023)
!15023 = distinct !DILocation(line: 323, column: 8, scope: !15014)
!15024 = !DILocation(line: 55, column: 2, scope: !14800, inlinedAt: !15025)
!15025 = distinct !DILocation(line: 145, column: 10, scope: !14791, inlinedAt: !15023)
!15026 = !DILocation(line: 0, scope: !14800, inlinedAt: !15025)
!15027 = !DILocation(line: 328, column: 27, scope: !15014)
!15028 = !DILocation(line: 328, column: 65, scope: !15014)
!15029 = !DILocation(line: 328, column: 2, scope: !15014)
!15030 = !DILocation(line: 0, scope: !14823, inlinedAt: !15031)
!15031 = distinct !DILocation(line: 329, column: 3, scope: !15032)
!15032 = distinct !DILexicalBlock(scope: !15014, file: !14610, line: 328, column: 74)
!15033 = !DILocation(line: 67, column: 15, scope: !14823, inlinedAt: !15031)
!15034 = !DILocation(line: 67, column: 33, scope: !14823, inlinedAt: !15031)
!15035 = !DILocation(line: 330, column: 3, scope: !15032)
!15036 = distinct !{!15036, !15029, !15037}
!15037 = !DILocation(line: 331, column: 2, scope: !15014)
!15038 = !DILocation(line: 323, column: 27, scope: !15014)
!15039 = !DILocation(line: 333, column: 8, scope: !15014)
!15040 = !DILocation(line: 333, column: 18, scope: !15014)
!15041 = !DILocation(line: 334, column: 25, scope: !15014)
!15042 = !DILocation(line: 334, column: 8, scope: !15014)
!15043 = !DILocation(line: 334, column: 17, scope: !15014)
!15044 = !DILocation(line: 336, column: 2, scope: !15014)
!15045 = !DILocation(line: 337, column: 1, scope: !15014)
!15046 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2409, file: !2409, line: 49, type: !15047, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15056)
!15047 = !DISubroutineType(types: !15048)
!15048 = !{!103, !15049}
!15049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15050, size: 32)
!15050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !15051)
!15051 = !{!15052, !15053, !15054, !15055}
!15052 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15050, file: !137, line: 2722, baseType: !2340, size: 64)
!15053 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15050, file: !137, line: 2724, baseType: !2322, size: 32, offset: 64)
!15054 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15050, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!15055 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15050, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!15056 = !{!15057}
!15057 = !DILocalVariable(name: "mutex", arg: 1, scope: !15046, file: !2409, line: 49, type: !15049)
!15058 = !DILocation(line: 0, scope: !15046)
!15059 = !DILocation(line: 51, column: 9, scope: !15046)
!15060 = !DILocation(line: 51, column: 15, scope: !15046)
!15061 = !DILocation(line: 52, column: 9, scope: !15046)
!15062 = !DILocation(line: 52, column: 20, scope: !15046)
!15063 = !DILocation(line: 54, column: 23, scope: !15046)
!15064 = !DILocation(line: 54, column: 2, scope: !15046)
!15065 = !DILocation(line: 60, column: 2, scope: !15046)
!15066 = distinct !DISubprogram(name: "z_waitq_init", scope: !14271, file: !14271, line: 47, type: !15067, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15069)
!15067 = !DISubroutineType(types: !15068)
!15068 = !{null, !2339}
!15069 = !{!15070}
!15070 = !DILocalVariable(name: "w", arg: 1, scope: !15066, file: !14271, line: 47, type: !2339)
!15071 = !DILocation(line: 0, scope: !15066)
!15072 = !DILocation(line: 49, column: 21, scope: !15066)
!15073 = !DILocation(line: 49, column: 2, scope: !15066)
!15074 = !DILocation(line: 50, column: 1, scope: !15066)
!15075 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !15076, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15079)
!15076 = !DISubroutineType(types: !15077)
!15077 = !{null, !15078}
!15078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!15079 = !{!15080}
!15080 = !DILocalVariable(name: "list", arg: 1, scope: !15075, file: !146, line: 197, type: !15078)
!15081 = !DILocation(line: 0, scope: !15075)
!15082 = !DILocation(line: 199, column: 8, scope: !15075)
!15083 = !DILocation(line: 199, column: 13, scope: !15075)
!15084 = !DILocation(line: 200, column: 8, scope: !15075)
!15085 = !DILocation(line: 200, column: 13, scope: !15075)
!15086 = !DILocation(line: 201, column: 1, scope: !15075)
!15087 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2409, file: !2409, line: 95, type: !15088, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15094)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{!103, !15049, !15090}
!15090 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15091)
!15091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15092)
!15092 = !{!15093}
!15093 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15091, file: !105, line: 66, baseType: !104, size: 64)
!15094 = !{!15095, !15096, !15097, !15098, !15103, !15104, !15105}
!15095 = !DILocalVariable(name: "mutex", arg: 1, scope: !15087, file: !2409, line: 95, type: !15049)
!15096 = !DILocalVariable(name: "timeout", arg: 2, scope: !15087, file: !2409, line: 95, type: !15090)
!15097 = !DILocalVariable(name: "new_prio", scope: !15087, file: !2409, line: 97, type: !103)
!15098 = !DILocalVariable(name: "key", scope: !15087, file: !2409, line: 98, type: !15099)
!15099 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15100)
!15100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15101)
!15101 = !{!15102}
!15102 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15100, file: !250, line: 33, baseType: !103, size: 32)
!15103 = !DILocalVariable(name: "resched", scope: !15087, file: !2409, line: 99, type: !131)
!15104 = !DILocalVariable(name: "got_mutex", scope: !15087, file: !2409, line: 146, type: !103)
!15105 = !DILocalVariable(name: "waiter", scope: !15106, file: !2409, line: 169, type: !2322)
!15106 = distinct !DILexicalBlock(scope: !15107, file: !2409, line: 168, column: 36)
!15107 = distinct !DILexicalBlock(scope: !15087, file: !2409, line: 168, column: 6)
!15108 = !DILocation(line: 0, scope: !15087)
!15109 = !DILocalVariable(name: "l", arg: 1, scope: !15110, file: !250, line: 136, type: !15113)
!15110 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15111, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15114)
!15111 = !DISubroutineType(types: !15112)
!15112 = !{!15099, !15113}
!15113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!15114 = !{!15109, !15115}
!15115 = !DILocalVariable(name: "k", scope: !15110, file: !250, line: 139, type: !15099)
!15116 = !DILocation(line: 0, scope: !15110, inlinedAt: !15117)
!15117 = distinct !DILocation(line: 105, column: 8, scope: !15087)
!15118 = !DILocation(line: 55, column: 2, scope: !15119, inlinedAt: !15123)
!15119 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15120)
!15120 = !{!15121, !15122}
!15121 = !DILocalVariable(name: "key", scope: !15119, file: !6997, line: 44, type: !32)
!15122 = !DILocalVariable(name: "tmp", scope: !15119, file: !6997, line: 53, type: !32)
!15123 = distinct !DILocation(line: 145, column: 10, scope: !15110, inlinedAt: !15117)
!15124 = !{i64 2245030}
!15125 = !DILocation(line: 0, scope: !15119, inlinedAt: !15123)
!15126 = !DILocation(line: 107, column: 6, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15087, file: !2409, line: 107, column: 6)
!15128 = !DILocation(line: 107, column: 6, scope: !15087)
!15129 = !{!"branch_weights", i32 2000, i32 1}
!15130 = !DILocation(line: 110, column: 6, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15127, file: !2409, line: 107, column: 71)
!15132 = !DILocation(line: 110, column: 21, scope: !15131)
!15133 = !DILocation(line: 109, column: 28, scope: !15131)
!15134 = !DILocation(line: 111, column: 13, scope: !15131)
!15135 = !DILocation(line: 114, column: 18, scope: !15131)
!15136 = !DILocation(line: 109, column: 10, scope: !15131)
!15137 = !DILocation(line: 109, column: 26, scope: !15131)
!15138 = !DILocation(line: 113, column: 20, scope: !15131)
!15139 = !DILocation(line: 114, column: 10, scope: !15131)
!15140 = !DILocation(line: 114, column: 16, scope: !15131)
!15141 = !DILocalVariable(name: "key", arg: 2, scope: !15142, file: !250, line: 190, type: !15099)
!15142 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15143, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15145)
!15143 = !DISubroutineType(types: !15144)
!15144 = !{null, !15113, !15099}
!15145 = !{!15146, !15141}
!15146 = !DILocalVariable(name: "l", arg: 1, scope: !15142, file: !250, line: 189, type: !15113)
!15147 = !DILocation(line: 0, scope: !15142, inlinedAt: !15148)
!15148 = distinct !DILocation(line: 120, column: 3, scope: !15131)
!15149 = !DILocalVariable(name: "key", arg: 1, scope: !15150, file: !6997, line: 84, type: !32)
!15150 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15151)
!15151 = !{!15149}
!15152 = !DILocation(line: 0, scope: !15150, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 215, column: 2, scope: !15142, inlinedAt: !15148)
!15154 = !DILocation(line: 95, column: 2, scope: !15150, inlinedAt: !15153)
!15155 = !{i64 2245847}
!15156 = !DILocation(line: 124, column: 3, scope: !15131)
!15157 = !DILocation(line: 127, column: 6, scope: !15158)
!15158 = distinct !DILexicalBlock(scope: !15087, file: !2409, line: 127, column: 6)
!15159 = !DILocation(line: 127, column: 6, scope: !15087)
!15160 = !{!"branch_weights", i32 1, i32 2000}
!15161 = !DILocation(line: 0, scope: !15142, inlinedAt: !15162)
!15162 = distinct !DILocation(line: 128, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15158, file: !2409, line: 127, column: 50)
!15164 = !DILocation(line: 0, scope: !15150, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 215, column: 2, scope: !15142, inlinedAt: !15162)
!15166 = !DILocation(line: 95, column: 2, scope: !15150, inlinedAt: !15165)
!15167 = !DILocation(line: 132, column: 3, scope: !15163)
!15168 = !DILocation(line: 137, column: 53, scope: !15087)
!15169 = !DILocation(line: 137, column: 38, scope: !15087)
!15170 = !DILocation(line: 138, column: 29, scope: !15087)
!15171 = !DILocation(line: 138, column: 10, scope: !15087)
!15172 = !DILocation(line: 137, column: 13, scope: !15087)
!15173 = !DILocation(line: 142, column: 6, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15087, file: !2409, line: 142, column: 6)
!15175 = !DILocation(line: 142, column: 6, scope: !15087)
!15176 = !DILocation(line: 143, column: 13, scope: !15177)
!15177 = distinct !DILexicalBlock(scope: !15174, file: !2409, line: 142, column: 59)
!15178 = !DILocation(line: 144, column: 2, scope: !15177)
!15179 = !DILocation(line: 146, column: 50, scope: !15087)
!15180 = !DILocation(line: 146, column: 18, scope: !15087)
!15181 = !DILocation(line: 153, column: 16, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15087, file: !2409, line: 153, column: 6)
!15183 = !DILocation(line: 153, column: 6, scope: !15087)
!15184 = !DILocation(line: 0, scope: !15110, inlinedAt: !15185)
!15185 = distinct !DILocation(line: 162, column: 8, scope: !15087)
!15186 = !DILocation(line: 55, column: 2, scope: !15119, inlinedAt: !15187)
!15187 = distinct !DILocation(line: 145, column: 10, scope: !15110, inlinedAt: !15185)
!15188 = !DILocation(line: 0, scope: !15119, inlinedAt: !15187)
!15189 = !DILocation(line: 168, column: 6, scope: !15107)
!15190 = !DILocation(line: 168, column: 6, scope: !15087)
!15191 = !DILocation(line: 169, column: 29, scope: !15106)
!15192 = !DILocation(line: 0, scope: !15106)
!15193 = !DILocation(line: 171, column: 22, scope: !15106)
!15194 = !DILocation(line: 171, column: 14, scope: !15106)
!15195 = !DILocation(line: 172, column: 42, scope: !15106)
!15196 = !DILocation(line: 172, column: 29, scope: !15106)
!15197 = !DILocation(line: 172, column: 55, scope: !15106)
!15198 = !DILocation(line: 172, column: 4, scope: !15106)
!15199 = !DILocation(line: 173, column: 11, scope: !15106)
!15200 = !DILocation(line: 177, column: 13, scope: !15106)
!15201 = !DILocation(line: 177, column: 48, scope: !15106)
!15202 = !DILocation(line: 180, column: 6, scope: !15087)
!15203 = !DILocation(line: 181, column: 3, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !2409, line: 180, column: 15)
!15205 = distinct !DILexicalBlock(scope: !15087, file: !2409, line: 180, column: 6)
!15206 = !DILocation(line: 182, column: 2, scope: !15204)
!15207 = !DILocation(line: 0, scope: !15142, inlinedAt: !15208)
!15208 = distinct !DILocation(line: 183, column: 3, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15205, file: !2409, line: 182, column: 9)
!15210 = !DILocation(line: 0, scope: !15150, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 215, column: 2, scope: !15142, inlinedAt: !15208)
!15212 = !DILocation(line: 95, column: 2, scope: !15150, inlinedAt: !15211)
!15213 = !DILocation(line: 189, column: 1, scope: !15087)
!15214 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2409, file: !2409, line: 72, type: !15215, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15217)
!15215 = !DISubroutineType(types: !15216)
!15216 = !{!331, !331, !331}
!15217 = !{!15218, !15219, !15220}
!15218 = !DILocalVariable(name: "target", arg: 1, scope: !15214, file: !2409, line: 72, type: !331)
!15219 = !DILocalVariable(name: "limit", arg: 2, scope: !15214, file: !2409, line: 72, type: !331)
!15220 = !DILocalVariable(name: "new_prio", scope: !15214, file: !2409, line: 74, type: !103)
!15221 = !DILocation(line: 0, scope: !15214)
!15222 = !DILocation(line: 74, column: 17, scope: !15214)
!15223 = !DILocation(line: 76, column: 13, scope: !15214)
!15224 = !DILocation(line: 78, column: 2, scope: !15214)
!15225 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13946, file: !13946, line: 211, type: !15226, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15228)
!15226 = !DISubroutineType(types: !15227)
!15227 = !{!131, !103, !103}
!15228 = !{!15229, !15230}
!15229 = !DILocalVariable(name: "prio", arg: 1, scope: !15225, file: !13946, line: 211, type: !103)
!15230 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15225, file: !13946, line: 211, type: !103)
!15231 = !DILocation(line: 0, scope: !15225)
!15232 = !DILocation(line: 213, column: 9, scope: !15225)
!15233 = !DILocation(line: 213, column: 2, scope: !15225)
!15234 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2409, file: !2409, line: 81, type: !15235, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15237)
!15235 = !DISubroutineType(types: !15236)
!15236 = !{!131, !15049, !331}
!15237 = !{!15238, !15239}
!15238 = !DILocalVariable(name: "mutex", arg: 1, scope: !15234, file: !2409, line: 81, type: !15049)
!15239 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15234, file: !2409, line: 81, type: !331)
!15240 = !DILocation(line: 0, scope: !15234)
!15241 = !DILocation(line: 83, column: 13, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15234, file: !2409, line: 83, column: 6)
!15243 = !DILocation(line: 83, column: 25, scope: !15242)
!15244 = !DILocation(line: 83, column: 6, scope: !15242)
!15245 = !DILocation(line: 83, column: 30, scope: !15242)
!15246 = !DILocation(line: 83, column: 6, scope: !15234)
!15247 = !DILocation(line: 90, column: 10, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15242, file: !2409, line: 83, column: 43)
!15249 = !DILocation(line: 90, column: 3, scope: !15248)
!15250 = !DILocation(line: 93, column: 1, scope: !15234)
!15251 = distinct !DISubprogram(name: "z_waitq_head", scope: !14271, file: !14271, line: 52, type: !15252, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15254)
!15252 = !DISubroutineType(types: !15253)
!15253 = !{!2322, !2339}
!15254 = !{!15255}
!15255 = !DILocalVariable(name: "w", arg: 1, scope: !15251, file: !14271, line: 52, type: !2339)
!15256 = !DILocation(line: 0, scope: !15251)
!15257 = !DILocation(line: 54, column: 52, scope: !15251)
!15258 = !DILocation(line: 54, column: 28, scope: !15251)
!15259 = !DILocation(line: 54, column: 9, scope: !15251)
!15260 = !DILocation(line: 54, column: 2, scope: !15251)
!15261 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15262, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15264)
!15262 = !DISubroutineType(types: !15263)
!15263 = !{!2307, !15078}
!15264 = !{!15265}
!15265 = !DILocalVariable(name: "list", arg: 1, scope: !15261, file: !146, line: 294, type: !15078)
!15266 = !DILocation(line: 0, scope: !15261)
!15267 = !DILocation(line: 296, column: 9, scope: !15261)
!15268 = !DILocation(line: 296, column: 49, scope: !15261)
!15269 = !DILocation(line: 296, column: 2, scope: !15261)
!15270 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15271, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15273)
!15271 = !DISubroutineType(types: !15272)
!15272 = !{!131, !15078}
!15273 = !{!15274}
!15274 = !DILocalVariable(name: "list", arg: 1, scope: !15270, file: !146, line: 266, type: !15078)
!15275 = !DILocation(line: 0, scope: !15270)
!15276 = !DILocation(line: 268, column: 15, scope: !15270)
!15277 = !DILocation(line: 268, column: 20, scope: !15270)
!15278 = !DILocation(line: 268, column: 2, scope: !15270)
!15279 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13946, file: !13946, line: 206, type: !15226, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15280)
!15280 = !{!15281, !15282}
!15281 = !DILocalVariable(name: "prio1", arg: 1, scope: !15279, file: !13946, line: 206, type: !103)
!15282 = !DILocalVariable(name: "prio2", arg: 2, scope: !15279, file: !13946, line: 206, type: !103)
!15283 = !DILocation(line: 0, scope: !15279)
!15284 = !DILocation(line: 208, column: 15, scope: !15279)
!15285 = !DILocation(line: 208, column: 2, scope: !15279)
!15286 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !13946, file: !13946, line: 186, type: !396, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15287)
!15287 = !{!15288}
!15288 = !DILocalVariable(name: "prio", arg: 1, scope: !15286, file: !13946, line: 186, type: !103)
!15289 = !DILocation(line: 0, scope: !15286)
!15290 = !DILocation(line: 188, column: 9, scope: !15286)
!15291 = !DILocation(line: 188, column: 2, scope: !15286)
!15292 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !13946, file: !13946, line: 181, type: !15293, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15295)
!15293 = !DISubroutineType(types: !15294)
!15294 = !{!131, !103}
!15295 = !{!15296}
!15296 = !DILocalVariable(name: "prio", arg: 1, scope: !15292, file: !13946, line: 181, type: !103)
!15297 = !DILocation(line: 0, scope: !15292)
!15298 = !DILocation(line: 183, column: 14, scope: !15292)
!15299 = !DILocation(line: 183, column: 2, scope: !15292)
!15300 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2409, file: !2409, line: 201, type: !15047, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15301)
!15301 = !{!15302, !15303, !15304, !15305}
!15302 = !DILocalVariable(name: "mutex", arg: 1, scope: !15300, file: !2409, line: 201, type: !15049)
!15303 = !DILocalVariable(name: "new_owner", scope: !15300, file: !2409, line: 203, type: !2322)
!15304 = !DILocalVariable(name: "key", scope: !15300, file: !2409, line: 242, type: !15099)
!15305 = !DILabel(scope: !15300, name: "k_mutex_unlock_return", file: !2409, line: 270)
!15306 = !DILocation(line: 0, scope: !15300)
!15307 = !DILocation(line: 209, column: 2, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15300, file: !2409, line: 209, column: 2)
!15309 = !DILocation(line: 209, column: 2, scope: !15300)
!15310 = !DILocation(line: 217, column: 2, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15300, file: !2409, line: 217, column: 2)
!15312 = !DILocation(line: 217, column: 2, scope: !15300)
!15313 = !DILocation(line: 237, column: 13, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15300, file: !2409, line: 237, column: 6)
!15315 = !DILocation(line: 237, column: 24, scope: !15314)
!15316 = !DILocation(line: 237, column: 6, scope: !15300)
!15317 = !DILocation(line: 238, column: 20, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15314, file: !2409, line: 237, column: 30)
!15319 = !DILocation(line: 239, column: 3, scope: !15318)
!15320 = !DILocation(line: 0, scope: !15110, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 242, column: 25, scope: !15300)
!15322 = !DILocation(line: 55, column: 2, scope: !15119, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 145, column: 10, scope: !15110, inlinedAt: !15321)
!15324 = !DILocation(line: 0, scope: !15119, inlinedAt: !15323)
!15325 = !DILocation(line: 244, column: 34, scope: !15300)
!15326 = !DILocation(line: 244, column: 2, scope: !15300)
!15327 = !DILocation(line: 247, column: 44, scope: !15300)
!15328 = !DILocation(line: 247, column: 14, scope: !15300)
!15329 = !DILocation(line: 249, column: 15, scope: !15300)
!15330 = !DILocation(line: 254, column: 16, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15300, file: !2409, line: 254, column: 6)
!15332 = !DILocation(line: 254, column: 6, scope: !15300)
!15333 = !DILocation(line: 260, column: 44, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15331, file: !2409, line: 254, column: 25)
!15335 = !DILocation(line: 260, column: 28, scope: !15334)
!15336 = !DILocation(line: 260, column: 26, scope: !15334)
!15337 = !DILocalVariable(name: "thread", arg: 1, scope: !15338, file: !13966, line: 65, type: !2322)
!15338 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13966, file: !13966, line: 65, type: !15339, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !15341)
!15339 = !DISubroutineType(types: !15340)
!15340 = !{null, !2322, !32}
!15341 = !{!15337, !15342}
!15342 = !DILocalVariable(name: "value", arg: 2, scope: !15338, file: !13966, line: 65, type: !32)
!15343 = !DILocation(line: 0, scope: !15338, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 261, column: 3, scope: !15334)
!15345 = !DILocation(line: 67, column: 15, scope: !15338, inlinedAt: !15344)
!15346 = !DILocation(line: 67, column: 33, scope: !15338, inlinedAt: !15344)
!15347 = !DILocation(line: 262, column: 3, scope: !15334)
!15348 = !DILocation(line: 263, column: 3, scope: !15334)
!15349 = !DILocation(line: 264, column: 2, scope: !15334)
!15350 = !DILocation(line: 265, column: 21, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15331, file: !2409, line: 264, column: 9)
!15352 = !DILocation(line: 0, scope: !15142, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 266, column: 3, scope: !15351)
!15354 = !DILocation(line: 0, scope: !15150, inlinedAt: !15355)
!15355 = distinct !DILocation(line: 215, column: 2, scope: !15142, inlinedAt: !15353)
!15356 = !DILocation(line: 95, column: 2, scope: !15150, inlinedAt: !15355)
!15357 = !DILocation(line: 274, column: 1, scope: !15300)
!15358 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2520, file: !2520, line: 93, type: !15359, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15361)
!15359 = !DISubroutineType(types: !15360)
!15360 = !{!331, !2415, !2415}
!15361 = !{!15362, !15363, !15364, !15365}
!15362 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15358, file: !2520, line: 93, type: !2415)
!15363 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15358, file: !2520, line: 94, type: !2415)
!15364 = !DILocalVariable(name: "b1", scope: !15358, file: !2520, line: 97, type: !331)
!15365 = !DILocalVariable(name: "b2", scope: !15358, file: !2520, line: 98, type: !331)
!15366 = !DILocation(line: 0, scope: !15358)
!15367 = !DILocation(line: 97, column: 30, scope: !15358)
!15368 = !DILocation(line: 98, column: 30, scope: !15358)
!15369 = !DILocation(line: 100, column: 9, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15358, file: !2520, line: 100, column: 6)
!15371 = !DILocation(line: 100, column: 6, scope: !15358)
!15372 = !DILocation(line: 125, column: 1, scope: !15358)
!15373 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2520, file: !2520, line: 428, type: !15374, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15376)
!15374 = !DISubroutineType(types: !15375)
!15375 = !{null, !2415}
!15376 = !{!15377}
!15377 = !DILocalVariable(name: "curr", arg: 1, scope: !15373, file: !2520, line: 428, type: !2415)
!15378 = !DILocation(line: 0, scope: !15373)
!15379 = !DILocation(line: 434, column: 6, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15373, file: !2520, line: 434, column: 6)
!15381 = !DILocation(line: 434, column: 23, scope: !15380)
!15382 = !DILocation(line: 434, column: 6, scope: !15373)
!15383 = !DILocation(line: 435, column: 50, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15380, file: !2520, line: 434, column: 29)
!15385 = !DILocation(line: 435, column: 48, scope: !15384)
!15386 = !DILocation(line: 435, column: 29, scope: !15384)
!15387 = !DILocation(line: 436, column: 24, scope: !15384)
!15388 = !DILocation(line: 436, column: 3, scope: !15384)
!15389 = !DILocation(line: 437, column: 2, scope: !15384)
!15390 = !DILocation(line: 438, column: 1, scope: !15373)
!15391 = distinct !DISubprogram(name: "slice_time", scope: !2520, file: !2520, line: 407, type: !15392, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15394)
!15392 = !DISubroutineType(types: !15393)
!15393 = !{!103, !2415}
!15394 = !{!15395, !15396}
!15395 = !DILocalVariable(name: "curr", arg: 1, scope: !15391, file: !2520, line: 407, type: !2415)
!15396 = !DILocalVariable(name: "ret", scope: !15391, file: !2520, line: 409, type: !103)
!15397 = !DILocation(line: 0, scope: !15391)
!15398 = !DILocation(line: 409, column: 12, scope: !15391)
!15399 = !DILocation(line: 416, column: 2, scope: !15391)
!15400 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2520, file: !2520, line: 440, type: !15401, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15403)
!15401 = !DISubroutineType(types: !15402)
!15402 = !{null, !331, !103}
!15403 = !{!15404, !15405, !15406, !15412}
!15404 = !DILocalVariable(name: "slice", arg: 1, scope: !15400, file: !2520, line: 440, type: !331)
!15405 = !DILocalVariable(name: "prio", arg: 2, scope: !15400, file: !2520, line: 440, type: !103)
!15406 = !DILocalVariable(name: "__i", scope: !15407, file: !2520, line: 442, type: !15408)
!15407 = distinct !DILexicalBlock(scope: !15400, file: !2520, line: 442, column: 2)
!15408 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15409)
!15409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15410)
!15410 = !{!15411}
!15411 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15409, file: !250, line: 33, baseType: !103, size: 32)
!15412 = !DILocalVariable(name: "__key", scope: !15407, file: !2520, line: 442, type: !15408)
!15413 = !DILocation(line: 0, scope: !15400)
!15414 = !DILocation(line: 0, scope: !15407)
!15415 = !DILocalVariable(name: "l", arg: 1, scope: !15416, file: !250, line: 136, type: !15419)
!15416 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15417, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15420)
!15417 = !DISubroutineType(types: !15418)
!15418 = !{!15408, !15419}
!15419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!15420 = !{!15415, !15421}
!15421 = !DILocalVariable(name: "k", scope: !15416, file: !250, line: 139, type: !15408)
!15422 = !DILocation(line: 0, scope: !15416, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 442, column: 2, scope: !15407)
!15424 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !15429)
!15425 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15426)
!15426 = !{!15427, !15428}
!15427 = !DILocalVariable(name: "key", scope: !15425, file: !6997, line: 44, type: !32)
!15428 = !DILocalVariable(name: "tmp", scope: !15425, file: !6997, line: 53, type: !32)
!15429 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !15423)
!15430 = !{i64 2284593}
!15431 = !DILocation(line: 0, scope: !15425, inlinedAt: !15429)
!15432 = !DILocation(line: 443, column: 29, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15434, file: !2520, line: 442, column: 26)
!15434 = distinct !DILexicalBlock(scope: !15407, file: !2520, line: 442, column: 2)
!15435 = !DILocation(line: 444, column: 17, scope: !15433)
!15436 = !DILocation(line: 445, column: 51, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !15433, file: !2520, line: 445, column: 7)
!15438 = !DILocation(line: 445, column: 7, scope: !15433)
!15439 = !DILocation(line: 0, scope: !15433)
!15440 = !DILocation(line: 451, column: 18, scope: !15433)
!15441 = !DILocation(line: 452, column: 3, scope: !15433)
!15442 = !DILocalVariable(name: "key", arg: 2, scope: !15443, file: !250, line: 190, type: !15408)
!15443 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15444, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15446)
!15444 = !DISubroutineType(types: !15445)
!15445 = !{null, !15419, !15408}
!15446 = !{!15447, !15442}
!15447 = !DILocalVariable(name: "l", arg: 1, scope: !15443, file: !250, line: 189, type: !15419)
!15448 = !DILocation(line: 0, scope: !15443, inlinedAt: !15449)
!15449 = distinct !DILocation(line: 442, column: 2, scope: !15434)
!15450 = !DILocalVariable(name: "key", arg: 1, scope: !15451, file: !6997, line: 84, type: !32)
!15451 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15452)
!15452 = !{!15450}
!15453 = !DILocation(line: 0, scope: !15451, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !15449)
!15455 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !15454)
!15456 = !{i64 2285410}
!15457 = !DILocation(line: 454, column: 1, scope: !15400)
!15458 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3597, file: !3597, line: 389, type: !8558, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15459)
!15459 = !{!15460}
!15460 = !DILocalVariable(name: "t", arg: 1, scope: !15458, file: !3597, line: 389, type: !108)
!15461 = !DILocation(line: 0, scope: !15458)
!15462 = !DILocalVariable(name: "t", arg: 1, scope: !15463, file: !3597, line: 102, type: !109)
!15463 = distinct !DISubprogram(name: "z_tmcvt", scope: !3597, file: !3597, line: 102, type: !3623, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15464)
!15464 = !{!15462, !15465, !15466, !15467, !15468, !15469, !15470, !15471, !15472, !15473, !15474}
!15465 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15463, file: !3597, line: 102, type: !108)
!15466 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15463, file: !3597, line: 103, type: !108)
!15467 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15463, file: !3597, line: 103, type: !131)
!15468 = !DILocalVariable(name: "result32", arg: 5, scope: !15463, file: !3597, line: 104, type: !131)
!15469 = !DILocalVariable(name: "round_up", arg: 6, scope: !15463, file: !3597, line: 104, type: !131)
!15470 = !DILocalVariable(name: "round_off", arg: 7, scope: !15463, file: !3597, line: 105, type: !131)
!15471 = !DILocalVariable(name: "mul_ratio", scope: !15463, file: !3597, line: 107, type: !131)
!15472 = !DILocalVariable(name: "div_ratio", scope: !15463, file: !3597, line: 109, type: !131)
!15473 = !DILocalVariable(name: "off", scope: !15463, file: !3597, line: 116, type: !109)
!15474 = !DILocalVariable(name: "rdivisor", scope: !15475, file: !3597, line: 119, type: !108)
!15475 = distinct !DILexicalBlock(scope: !15476, file: !3597, line: 118, column: 18)
!15476 = distinct !DILexicalBlock(scope: !15463, file: !3597, line: 118, column: 6)
!15477 = !DILocation(line: 0, scope: !15463, inlinedAt: !15478)
!15478 = distinct !DILocation(line: 392, column: 9, scope: !15458)
!15479 = !DILocation(line: 143, column: 25, scope: !15480, inlinedAt: !15478)
!15480 = distinct !DILexicalBlock(scope: !15481, file: !3597, line: 142, column: 17)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !3597, line: 142, column: 7)
!15482 = distinct !DILexicalBlock(scope: !15483, file: !3597, line: 141, column: 24)
!15483 = distinct !DILexicalBlock(scope: !15484, file: !3597, line: 141, column: 13)
!15484 = distinct !DILexicalBlock(scope: !15463, file: !3597, line: 134, column: 6)
!15485 = !DILocation(line: 392, column: 2, scope: !15458)
!15486 = distinct !DISubprogram(name: "z_time_slice", scope: !2520, file: !2520, line: 502, type: !9574, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15487)
!15487 = !{!15488, !15489}
!15488 = !DILocalVariable(name: "ticks", arg: 1, scope: !15486, file: !2520, line: 502, type: !103)
!15489 = !DILocalVariable(name: "key", scope: !15486, file: !2520, line: 511, type: !15408)
!15490 = !DILocation(line: 0, scope: !15486)
!15491 = !DILocation(line: 0, scope: !15416, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 511, column: 25, scope: !15486)
!15493 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !15494)
!15494 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !15492)
!15495 = !DILocation(line: 0, scope: !15425, inlinedAt: !15494)
!15496 = !DILocation(line: 514, column: 6, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15486, file: !2520, line: 514, column: 6)
!15498 = !DILocation(line: 514, column: 25, scope: !15497)
!15499 = !DILocation(line: 514, column: 22, scope: !15497)
!15500 = !DILocation(line: 514, column: 6, scope: !15486)
!15501 = !DILocation(line: 515, column: 3, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15497, file: !2520, line: 514, column: 35)
!15503 = !DILocation(line: 0, scope: !15443, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 516, column: 3, scope: !15502)
!15505 = !DILocation(line: 0, scope: !15451, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !15504)
!15507 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !15506)
!15508 = !DILocation(line: 517, column: 3, scope: !15502)
!15509 = !DILocation(line: 519, column: 18, scope: !15486)
!15510 = !DILocation(line: 522, column: 6, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15486, file: !2520, line: 522, column: 6)
!15512 = !DILocation(line: 522, column: 27, scope: !15511)
!15513 = !DILocation(line: 522, column: 30, scope: !15511)
!15514 = !DILocation(line: 522, column: 6, scope: !15486)
!15515 = !DILocation(line: 523, column: 30, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15517, file: !2520, line: 523, column: 7)
!15517 = distinct !DILexicalBlock(scope: !15511, file: !2520, line: 522, column: 51)
!15518 = !DILocation(line: 523, column: 13, scope: !15516)
!15519 = !DILocation(line: 523, column: 7, scope: !15517)
!15520 = !DILocation(line: 530, column: 10, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15516, file: !2520, line: 523, column: 43)
!15522 = !DILocation(line: 531, column: 3, scope: !15521)
!15523 = !DILocation(line: 532, column: 30, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15516, file: !2520, line: 531, column: 10)
!15525 = !DILocation(line: 535, column: 29, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15511, file: !2520, line: 534, column: 9)
!15527 = !DILocation(line: 0, scope: !15443, inlinedAt: !15528)
!15528 = distinct !DILocation(line: 537, column: 2, scope: !15486)
!15529 = !DILocation(line: 0, scope: !15451, inlinedAt: !15530)
!15530 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !15528)
!15531 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !15530)
!15532 = !DILocation(line: 538, column: 1, scope: !15486)
!15533 = distinct !DISubprogram(name: "sliceable", scope: !2520, file: !2520, line: 468, type: !15534, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15536)
!15534 = !DISubroutineType(types: !15535)
!15535 = !{!131, !2415}
!15536 = !{!15537, !15538}
!15537 = !DILocalVariable(name: "thread", arg: 1, scope: !15533, file: !2520, line: 468, type: !2415)
!15538 = !DILocalVariable(name: "ret", scope: !15533, file: !2520, line: 470, type: !131)
!15539 = !DILocation(line: 0, scope: !15533)
!15540 = !DILocation(line: 470, column: 13, scope: !15533)
!15541 = !DILocation(line: 471, column: 3, scope: !15533)
!15542 = !DILocation(line: 471, column: 7, scope: !15533)
!15543 = !DILocation(line: 472, column: 3, scope: !15533)
!15544 = !DILocation(line: 472, column: 37, scope: !15533)
!15545 = !DILocation(line: 472, column: 24, scope: !15533)
!15546 = !DILocation(line: 472, column: 43, scope: !15533)
!15547 = !DILocation(line: 472, column: 7, scope: !15533)
!15548 = !DILocation(line: 473, column: 3, scope: !15533)
!15549 = !DILocation(line: 473, column: 7, scope: !15533)
!15550 = !DILocation(line: 473, column: 6, scope: !15533)
!15551 = !DILocation(line: 479, column: 2, scope: !15533)
!15552 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2520, file: !2520, line: 482, type: !15553, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15555)
!15553 = !DISubroutineType(types: !15554)
!15554 = !{!15408, !15408}
!15555 = !{!15556, !15557}
!15556 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15552, file: !2520, line: 482, type: !15408)
!15557 = !DILocalVariable(name: "curr", scope: !15552, file: !2520, line: 484, type: !2415)
!15558 = !DILocation(line: 0, scope: !15552)
!15559 = !DILocation(line: 484, column: 26, scope: !15552)
!15560 = !DILocation(line: 493, column: 7, scope: !15561)
!15561 = distinct !DILexicalBlock(scope: !15552, file: !2520, line: 493, column: 6)
!15562 = !DILocation(line: 493, column: 6, scope: !15552)
!15563 = !DILocation(line: 494, column: 3, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15561, file: !2520, line: 493, column: 49)
!15565 = !DILocation(line: 495, column: 2, scope: !15564)
!15566 = !DILocation(line: 496, column: 2, scope: !15552)
!15567 = !DILocation(line: 499, column: 1, scope: !15552)
!15568 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13946, file: !13946, line: 106, type: !15534, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15569)
!15569 = !{!15570, !15571}
!15570 = !DILocalVariable(name: "thread", arg: 1, scope: !15568, file: !13946, line: 106, type: !2415)
!15571 = !DILocalVariable(name: "state", scope: !15568, file: !13946, line: 108, type: !185)
!15572 = !DILocation(line: 0, scope: !15568)
!15573 = !DILocation(line: 108, column: 31, scope: !15568)
!15574 = !DILocation(line: 110, column: 16, scope: !15568)
!15575 = !DILocation(line: 111, column: 41, scope: !15568)
!15576 = !DILocation(line: 110, column: 2, scope: !15568)
!15577 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2520, file: !2520, line: 393, type: !15374, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15578)
!15578 = !{!15579}
!15579 = !DILocalVariable(name: "thread", arg: 1, scope: !15577, file: !2520, line: 393, type: !2415)
!15580 = !DILocation(line: 0, scope: !15577)
!15581 = !DILocation(line: 395, column: 6, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15577, file: !2520, line: 395, column: 6)
!15583 = !DILocation(line: 395, column: 6, scope: !15577)
!15584 = !DILocalVariable(name: "thread", arg: 1, scope: !15585, file: !2520, line: 264, type: !2415)
!15585 = distinct !DISubprogram(name: "dequeue_thread", scope: !2520, file: !2520, line: 264, type: !15374, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15586)
!15586 = !{!15584}
!15587 = !DILocation(line: 0, scope: !15585, inlinedAt: !15588)
!15588 = distinct !DILocation(line: 396, column: 3, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15582, file: !2520, line: 395, column: 34)
!15590 = !DILocation(line: 266, column: 15, scope: !15585, inlinedAt: !15588)
!15591 = !DILocation(line: 266, column: 28, scope: !15585, inlinedAt: !15588)
!15592 = !DILocalVariable(name: "thread", arg: 1, scope: !15593, file: !2520, line: 232, type: !2415)
!15593 = distinct !DISubprogram(name: "runq_remove", scope: !2520, file: !2520, line: 232, type: !15374, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15594)
!15594 = !{!15592}
!15595 = !DILocation(line: 0, scope: !15593, inlinedAt: !15596)
!15596 = distinct !DILocation(line: 268, column: 3, scope: !15597, inlinedAt: !15588)
!15597 = distinct !DILexicalBlock(scope: !15598, file: !2520, line: 267, column: 35)
!15598 = distinct !DILexicalBlock(scope: !15585, file: !2520, line: 267, column: 6)
!15599 = !DILocation(line: 234, column: 2, scope: !15593, inlinedAt: !15596)
!15600 = !DILocation(line: 397, column: 2, scope: !15589)
!15601 = !DILocalVariable(name: "thread", arg: 1, scope: !15602, file: !2520, line: 250, type: !2415)
!15602 = distinct !DISubprogram(name: "queue_thread", scope: !2520, file: !2520, line: 250, type: !15374, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15603)
!15603 = !{!15601}
!15604 = !DILocation(line: 0, scope: !15602, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 398, column: 2, scope: !15577)
!15606 = !DILocation(line: 252, column: 15, scope: !15602, inlinedAt: !15605)
!15607 = !DILocation(line: 252, column: 28, scope: !15602, inlinedAt: !15605)
!15608 = !DILocalVariable(name: "thread", arg: 1, scope: !15609, file: !2520, line: 227, type: !2415)
!15609 = distinct !DISubprogram(name: "runq_add", scope: !2520, file: !2520, line: 227, type: !15374, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15610)
!15610 = !{!15608}
!15611 = !DILocation(line: 0, scope: !15609, inlinedAt: !15612)
!15612 = distinct !DILocation(line: 254, column: 3, scope: !15613, inlinedAt: !15605)
!15613 = distinct !DILexicalBlock(scope: !15614, file: !2520, line: 253, column: 35)
!15614 = distinct !DILexicalBlock(scope: !15602, file: !2520, line: 253, column: 6)
!15615 = !DILocalVariable(name: "pq", arg: 1, scope: !15616, file: !2520, line: 181, type: !15619)
!15616 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2520, file: !2520, line: 181, type: !15617, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15620)
!15617 = !DISubroutineType(types: !15618)
!15618 = !{null, !15619, !2415}
!15619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!15620 = !{!15615, !15621, !15622}
!15621 = !DILocalVariable(name: "thread", arg: 2, scope: !15616, file: !2520, line: 182, type: !2415)
!15622 = !DILocalVariable(name: "t", scope: !15616, file: !2520, line: 184, type: !2415)
!15623 = !DILocation(line: 0, scope: !15616, inlinedAt: !15624)
!15624 = distinct !DILocation(line: 229, column: 2, scope: !15609, inlinedAt: !15612)
!15625 = !DILocation(line: 188, column: 2, scope: !15626, inlinedAt: !15624)
!15626 = distinct !DILexicalBlock(scope: !15616, file: !2520, line: 188, column: 2)
!15627 = !DILocation(line: 188, column: 2, scope: !15628, inlinedAt: !15624)
!15628 = distinct !DILexicalBlock(scope: !15626, file: !2520, line: 188, column: 2)
!15629 = !DILocation(line: 0, scope: !15626, inlinedAt: !15624)
!15630 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !15624)
!15631 = distinct !DILexicalBlock(scope: !15632, file: !2520, line: 189, column: 7)
!15632 = distinct !DILexicalBlock(scope: !15628, file: !2520, line: 188, column: 56)
!15633 = !DILocation(line: 189, column: 35, scope: !15631, inlinedAt: !15624)
!15634 = !DILocation(line: 189, column: 7, scope: !15632, inlinedAt: !15624)
!15635 = !DILocation(line: 191, column: 21, scope: !15636, inlinedAt: !15624)
!15636 = distinct !DILexicalBlock(scope: !15631, file: !2520, line: 189, column: 40)
!15637 = !DILocation(line: 190, column: 4, scope: !15636, inlinedAt: !15624)
!15638 = !DILocation(line: 192, column: 4, scope: !15636, inlinedAt: !15624)
!15639 = distinct !{!15639, !15625, !15640}
!15640 = !DILocation(line: 194, column: 2, scope: !15626, inlinedAt: !15624)
!15641 = !DILocation(line: 196, column: 37, scope: !15616, inlinedAt: !15624)
!15642 = !DILocation(line: 196, column: 2, scope: !15616, inlinedAt: !15624)
!15643 = !DILocation(line: 197, column: 1, scope: !15616, inlinedAt: !15624)
!15644 = !DILocation(line: 399, column: 25, scope: !15577)
!15645 = !DILocation(line: 399, column: 22, scope: !15577)
!15646 = !DILocation(line: 399, column: 2, scope: !15577)
!15647 = !DILocation(line: 400, column: 1, scope: !15577)
!15648 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13946, file: !13946, line: 136, type: !15534, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15649)
!15649 = !{!15650}
!15650 = !DILocalVariable(name: "thread", arg: 1, scope: !15648, file: !13946, line: 136, type: !2415)
!15651 = !DILocation(line: 0, scope: !15648)
!15652 = !DILocation(line: 138, column: 9, scope: !15648)
!15653 = !DILocation(line: 138, column: 2, scope: !15648)
!15654 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2520, file: !2520, line: 1137, type: !15617, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15655)
!15655 = !{!15656, !15657}
!15656 = !DILocalVariable(name: "pq", arg: 1, scope: !15654, file: !2520, line: 1137, type: !15619)
!15657 = !DILocalVariable(name: "thread", arg: 2, scope: !15654, file: !2520, line: 1137, type: !2415)
!15658 = !DILocation(line: 0, scope: !15654)
!15659 = !DILocation(line: 1141, column: 33, scope: !15654)
!15660 = !DILocation(line: 1141, column: 2, scope: !15654)
!15661 = !DILocation(line: 1142, column: 1, scope: !15654)
!15662 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15663, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15665)
!15663 = !DISubroutineType(types: !15664)
!15664 = !{!2516, !15619}
!15665 = !{!15666}
!15666 = !DILocalVariable(name: "list", arg: 1, scope: !15662, file: !146, line: 294, type: !15619)
!15667 = !DILocation(line: 0, scope: !15662)
!15668 = !DILocation(line: 296, column: 9, scope: !15662)
!15669 = !DILocation(line: 296, column: 49, scope: !15662)
!15670 = !DILocation(line: 296, column: 2, scope: !15662)
!15671 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !15672, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15674)
!15672 = !DISubroutineType(types: !15673)
!15673 = !{null, !2516, !2516}
!15674 = !{!15675, !15676, !15677}
!15675 = !DILocalVariable(name: "successor", arg: 1, scope: !15671, file: !146, line: 443, type: !2516)
!15676 = !DILocalVariable(name: "node", arg: 2, scope: !15671, file: !146, line: 443, type: !2516)
!15677 = !DILocalVariable(name: "prev", scope: !15671, file: !146, line: 445, type: !15678)
!15678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2516)
!15679 = !DILocation(line: 0, scope: !15671)
!15680 = !DILocation(line: 445, column: 39, scope: !15671)
!15681 = !DILocation(line: 447, column: 8, scope: !15671)
!15682 = !DILocation(line: 447, column: 13, scope: !15671)
!15683 = !DILocation(line: 448, column: 8, scope: !15671)
!15684 = !DILocation(line: 448, column: 13, scope: !15671)
!15685 = !DILocation(line: 449, column: 8, scope: !15671)
!15686 = !DILocation(line: 449, column: 13, scope: !15671)
!15687 = !DILocation(line: 450, column: 18, scope: !15671)
!15688 = !DILocation(line: 451, column: 1, scope: !15671)
!15689 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !15690, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15692)
!15690 = !DISubroutineType(types: !15691)
!15691 = !{!2516, !15619, !2516}
!15692 = !{!15693, !15694}
!15693 = !DILocalVariable(name: "list", arg: 1, scope: !15689, file: !146, line: 341, type: !15619)
!15694 = !DILocalVariable(name: "node", arg: 2, scope: !15689, file: !146, line: 342, type: !2516)
!15695 = !DILocation(line: 0, scope: !15689)
!15696 = !DILocation(line: 344, column: 15, scope: !15689)
!15697 = !DILocation(line: 344, column: 9, scope: !15689)
!15698 = !DILocation(line: 344, column: 26, scope: !15689)
!15699 = !DILocation(line: 344, column: 2, scope: !15689)
!15700 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !15701, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15703)
!15701 = !DISubroutineType(types: !15702)
!15702 = !{null, !15619, !2516}
!15703 = !{!15704, !15705, !15706}
!15704 = !DILocalVariable(name: "list", arg: 1, scope: !15700, file: !146, line: 404, type: !15619)
!15705 = !DILocalVariable(name: "node", arg: 2, scope: !15700, file: !146, line: 404, type: !2516)
!15706 = !DILocalVariable(name: "tail", scope: !15700, file: !146, line: 406, type: !15678)
!15707 = !DILocation(line: 0, scope: !15700)
!15708 = !DILocation(line: 406, column: 34, scope: !15700)
!15709 = !DILocation(line: 408, column: 8, scope: !15700)
!15710 = !DILocation(line: 408, column: 13, scope: !15700)
!15711 = !DILocation(line: 409, column: 8, scope: !15700)
!15712 = !DILocation(line: 409, column: 13, scope: !15700)
!15713 = !DILocation(line: 411, column: 8, scope: !15700)
!15714 = !DILocation(line: 411, column: 13, scope: !15700)
!15715 = !DILocation(line: 412, column: 13, scope: !15700)
!15716 = !DILocation(line: 413, column: 1, scope: !15700)
!15717 = distinct !DISubprogram(name: "update_cache", scope: !2520, file: !2520, line: 559, type: !9574, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15718)
!15718 = !{!15719, !15720}
!15719 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15717, file: !2520, line: 559, type: !103)
!15720 = !DILocalVariable(name: "thread", scope: !15717, file: !2520, line: 562, type: !2415)
!15721 = !DILocation(line: 0, scope: !15717)
!15722 = !DILocation(line: 239, column: 9, scope: !15723, inlinedAt: !15726)
!15723 = distinct !DISubprogram(name: "runq_best", scope: !2520, file: !2520, line: 237, type: !15724, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!15724 = !DISubroutineType(types: !15725)
!15725 = !{!2415}
!15726 = distinct !DILocation(line: 314, column: 28, scope: !15727, inlinedAt: !15730)
!15727 = distinct !DISubprogram(name: "next_up", scope: !2520, file: !2520, line: 312, type: !15724, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15728)
!15728 = !{!15729}
!15729 = !DILocalVariable(name: "thread", scope: !15727, file: !2520, line: 314, type: !2415)
!15730 = distinct !DILocation(line: 562, column: 28, scope: !15717)
!15731 = !DILocation(line: 0, scope: !15727, inlinedAt: !15730)
!15732 = !DILocation(line: 340, column: 17, scope: !15727, inlinedAt: !15730)
!15733 = !DILocation(line: 340, column: 9, scope: !15727, inlinedAt: !15730)
!15734 = !DILocalVariable(name: "thread", arg: 1, scope: !15735, file: !2520, line: 127, type: !2415)
!15735 = distinct !DISubprogram(name: "should_preempt", scope: !2520, file: !2520, line: 127, type: !15736, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15738)
!15736 = !DISubroutineType(types: !15737)
!15737 = !{!131, !2415, !103}
!15738 = !{!15734, !15739}
!15739 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15735, file: !2520, line: 128, type: !103)
!15740 = !DILocation(line: 0, scope: !15735, inlinedAt: !15741)
!15741 = distinct !DILocation(line: 564, column: 6, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15717, file: !2520, line: 564, column: 6)
!15743 = !DILocation(line: 133, column: 17, scope: !15744, inlinedAt: !15741)
!15744 = distinct !DILexicalBlock(scope: !15735, file: !2520, line: 133, column: 6)
!15745 = !DILocation(line: 0, scope: !15742)
!15746 = !DILocation(line: 133, column: 6, scope: !15735, inlinedAt: !15741)
!15747 = !DILocation(line: 140, column: 6, scope: !15748, inlinedAt: !15741)
!15748 = distinct !DILexicalBlock(scope: !15735, file: !2520, line: 140, column: 6)
!15749 = !DILocation(line: 140, column: 6, scope: !15735, inlinedAt: !15741)
!15750 = !DILocation(line: 150, column: 9, scope: !15751, inlinedAt: !15741)
!15751 = distinct !DILexicalBlock(scope: !15735, file: !2520, line: 149, column: 6)
!15752 = !DILocation(line: 149, column: 6, scope: !15735, inlinedAt: !15741)
!15753 = !DILocation(line: 157, column: 6, scope: !15754, inlinedAt: !15741)
!15754 = distinct !DILexicalBlock(scope: !15735, file: !2520, line: 157, column: 6)
!15755 = !DILocation(line: 564, column: 6, scope: !15717)
!15756 = !DILocation(line: 566, column: 14, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15758, file: !2520, line: 566, column: 7)
!15758 = distinct !DILexicalBlock(scope: !15742, file: !2520, line: 564, column: 42)
!15759 = !DILocation(line: 566, column: 7, scope: !15758)
!15760 = !DILocation(line: 567, column: 4, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15757, file: !2520, line: 566, column: 27)
!15762 = !DILocation(line: 568, column: 3, scope: !15761)
!15763 = !DILocation(line: 585, column: 1, scope: !15717)
!15764 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2520, file: !2520, line: 1144, type: !15765, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15767)
!15765 = !DISubroutineType(types: !15766)
!15766 = !{!2415, !15619}
!15767 = !{!15768, !15769, !15770}
!15768 = !DILocalVariable(name: "pq", arg: 1, scope: !15764, file: !2520, line: 1144, type: !15619)
!15769 = !DILocalVariable(name: "thread", scope: !15764, file: !2520, line: 1146, type: !2415)
!15770 = !DILocalVariable(name: "n", scope: !15764, file: !2520, line: 1147, type: !2516)
!15771 = !DILocation(line: 0, scope: !15764)
!15772 = !DILocation(line: 1147, column: 19, scope: !15764)
!15773 = !DILocation(line: 1152, column: 2, scope: !15764)
!15774 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13946, file: !13946, line: 115, type: !15534, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15775)
!15775 = !{!15776}
!15776 = !DILocalVariable(name: "thread", arg: 1, scope: !15774, file: !13946, line: 115, type: !2415)
!15777 = !DILocation(line: 0, scope: !15774)
!15778 = !DILocation(line: 117, column: 46, scope: !15774)
!15779 = !DILocation(line: 117, column: 10, scope: !15774)
!15780 = !DILocation(line: 117, column: 9, scope: !15774)
!15781 = !DILocation(line: 117, column: 2, scope: !15774)
!15782 = distinct !DISubprogram(name: "is_preempt", scope: !2520, file: !2520, line: 62, type: !15392, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15783)
!15783 = !{!15784}
!15784 = !DILocalVariable(name: "thread", arg: 1, scope: !15782, file: !2520, line: 62, type: !2415)
!15785 = !DILocation(line: 0, scope: !15782)
!15786 = !DILocation(line: 65, column: 22, scope: !15782)
!15787 = !DILocation(line: 65, column: 30, scope: !15782)
!15788 = !DILocation(line: 65, column: 2, scope: !15782)
!15789 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14339, file: !14339, line: 35, type: !15790, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15794)
!15790 = !DISubroutineType(types: !15791)
!15791 = !{!131, !15792}
!15792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15793, size: 32)
!15793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!15794 = !{!15795}
!15795 = !DILocalVariable(name: "to", arg: 1, scope: !15789, file: !14339, line: 35, type: !15792)
!15796 = !DILocation(line: 0, scope: !15789)
!15797 = !DILocation(line: 37, column: 35, scope: !15789)
!15798 = !DILocation(line: 37, column: 10, scope: !15789)
!15799 = !DILocation(line: 37, column: 9, scope: !15789)
!15800 = !DILocation(line: 37, column: 2, scope: !15789)
!15801 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !15802, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15806)
!15802 = !DISubroutineType(types: !15803)
!15803 = !{!131, !15804}
!15804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15805, size: 32)
!15805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2425)
!15806 = !{!15807}
!15807 = !DILocalVariable(name: "node", arg: 1, scope: !15801, file: !146, line: 225, type: !15804)
!15808 = !DILocation(line: 0, scope: !15801)
!15809 = !DILocation(line: 227, column: 15, scope: !15801)
!15810 = !DILocation(line: 227, column: 20, scope: !15801)
!15811 = !DILocation(line: 227, column: 2, scope: !15801)
!15812 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !15690, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15813)
!15813 = !{!15814, !15815}
!15814 = !DILocalVariable(name: "list", arg: 1, scope: !15812, file: !146, line: 325, type: !15619)
!15815 = !DILocalVariable(name: "node", arg: 2, scope: !15812, file: !146, line: 326, type: !2516)
!15816 = !DILocation(line: 0, scope: !15812)
!15817 = !DILocation(line: 328, column: 24, scope: !15812)
!15818 = !DILocation(line: 328, column: 15, scope: !15812)
!15819 = !DILocation(line: 328, column: 9, scope: !15812)
!15820 = !DILocation(line: 328, column: 45, scope: !15812)
!15821 = !DILocation(line: 328, column: 2, scope: !15812)
!15822 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15823, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15825)
!15823 = !DISubroutineType(types: !15824)
!15824 = !{!131, !15619}
!15825 = !{!15826}
!15826 = !DILocalVariable(name: "list", arg: 1, scope: !15822, file: !146, line: 266, type: !15619)
!15827 = !DILocation(line: 0, scope: !15822)
!15828 = !DILocation(line: 268, column: 15, scope: !15822)
!15829 = !DILocation(line: 268, column: 20, scope: !15822)
!15830 = !DILocation(line: 268, column: 2, scope: !15822)
!15831 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !15832, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15834)
!15832 = !DISubroutineType(types: !15833)
!15833 = !{null, !2516}
!15834 = !{!15835, !15836, !15837}
!15835 = !DILocalVariable(name: "node", arg: 1, scope: !15831, file: !146, line: 496, type: !2516)
!15836 = !DILocalVariable(name: "prev", scope: !15831, file: !146, line: 498, type: !15678)
!15837 = !DILocalVariable(name: "next", scope: !15831, file: !146, line: 499, type: !15678)
!15838 = !DILocation(line: 0, scope: !15831)
!15839 = !DILocation(line: 498, column: 34, scope: !15831)
!15840 = !DILocation(line: 499, column: 34, scope: !15831)
!15841 = !DILocation(line: 501, column: 8, scope: !15831)
!15842 = !DILocation(line: 501, column: 13, scope: !15831)
!15843 = !DILocation(line: 502, column: 8, scope: !15831)
!15844 = !DILocation(line: 502, column: 13, scope: !15831)
!15845 = !DILocation(line: 503, column: 2, scope: !15831)
!15846 = !DILocation(line: 504, column: 1, scope: !15831)
!15847 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !15832, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15848)
!15848 = !{!15849}
!15849 = !DILocalVariable(name: "node", arg: 1, scope: !15847, file: !146, line: 211, type: !2516)
!15850 = !DILocation(line: 0, scope: !15847)
!15851 = !DILocation(line: 213, column: 8, scope: !15847)
!15852 = !DILocation(line: 213, column: 13, scope: !15847)
!15853 = !DILocation(line: 214, column: 8, scope: !15847)
!15854 = !DILocation(line: 214, column: 13, scope: !15847)
!15855 = !DILocation(line: 215, column: 1, scope: !15847)
!15856 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13946, file: !13946, line: 131, type: !15857, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15859)
!15857 = !DISubroutineType(types: !15858)
!15858 = !{!131, !2415, !108}
!15859 = !{!15860, !15861}
!15860 = !DILocalVariable(name: "thread", arg: 1, scope: !15856, file: !13946, line: 131, type: !2415)
!15861 = !DILocalVariable(name: "state", arg: 2, scope: !15856, file: !13946, line: 131, type: !108)
!15862 = !DILocation(line: 0, scope: !15856)
!15863 = !DILocation(line: 133, column: 23, scope: !15856)
!15864 = !DILocation(line: 133, column: 45, scope: !15856)
!15865 = !DILocation(line: 133, column: 2, scope: !15856)
!15866 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13946, file: !13946, line: 211, type: !15226, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15867)
!15867 = !{!15868, !15869}
!15868 = !DILocalVariable(name: "prio", arg: 1, scope: !15866, file: !13946, line: 211, type: !103)
!15869 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15866, file: !13946, line: 211, type: !103)
!15870 = !DILocation(line: 0, scope: !15866)
!15871 = !DILocation(line: 213, column: 9, scope: !15866)
!15872 = !DILocation(line: 213, column: 2, scope: !15866)
!15873 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13946, file: !13946, line: 83, type: !15534, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15874)
!15874 = !{!15875}
!15875 = !DILocalVariable(name: "thread", arg: 1, scope: !15873, file: !13946, line: 83, type: !2415)
!15876 = !DILocation(line: 0, scope: !15873)
!15877 = !DILocation(line: 89, column: 16, scope: !15873)
!15878 = !DILocation(line: 89, column: 2, scope: !15873)
!15879 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13946, file: !13946, line: 206, type: !15226, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15880)
!15880 = !{!15881, !15882}
!15881 = !DILocalVariable(name: "prio1", arg: 1, scope: !15879, file: !13946, line: 206, type: !103)
!15882 = !DILocalVariable(name: "prio2", arg: 2, scope: !15879, file: !13946, line: 206, type: !103)
!15883 = !DILocation(line: 0, scope: !15879)
!15884 = !DILocation(line: 208, column: 15, scope: !15879)
!15885 = !DILocation(line: 208, column: 2, scope: !15879)
!15886 = distinct !DISubprogram(name: "z_ready_thread", scope: !2520, file: !2520, line: 635, type: !15374, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15887)
!15887 = !{!15888, !15889, !15891}
!15888 = !DILocalVariable(name: "thread", arg: 1, scope: !15886, file: !2520, line: 635, type: !2415)
!15889 = !DILocalVariable(name: "__i", scope: !15890, file: !2520, line: 637, type: !15408)
!15890 = distinct !DILexicalBlock(scope: !15886, file: !2520, line: 637, column: 2)
!15891 = !DILocalVariable(name: "__key", scope: !15890, file: !2520, line: 637, type: !15408)
!15892 = !DILocation(line: 0, scope: !15886)
!15893 = !DILocation(line: 0, scope: !15890)
!15894 = !DILocation(line: 0, scope: !15416, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 637, column: 2, scope: !15890)
!15896 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !15897)
!15897 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !15895)
!15898 = !DILocation(line: 0, scope: !15425, inlinedAt: !15897)
!15899 = !DILocation(line: 639, column: 4, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15901, file: !2520, line: 638, column: 41)
!15901 = distinct !DILexicalBlock(scope: !15902, file: !2520, line: 638, column: 7)
!15902 = distinct !DILexicalBlock(scope: !15903, file: !2520, line: 637, column: 26)
!15903 = distinct !DILexicalBlock(scope: !15890, file: !2520, line: 637, column: 2)
!15904 = !DILocation(line: 0, scope: !15443, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 637, column: 2, scope: !15903)
!15906 = !DILocation(line: 0, scope: !15451, inlinedAt: !15907)
!15907 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !15905)
!15908 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !15907)
!15909 = !DILocation(line: 642, column: 1, scope: !15886)
!15910 = distinct !DISubprogram(name: "ready_thread", scope: !2520, file: !2520, line: 617, type: !15374, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15911)
!15911 = !{!15912}
!15912 = !DILocalVariable(name: "thread", arg: 1, scope: !15910, file: !2520, line: 617, type: !2415)
!15913 = !DILocation(line: 0, scope: !15910)
!15914 = !DILocation(line: 626, column: 7, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15910, file: !2520, line: 626, column: 6)
!15916 = !DILocation(line: 626, column: 34, scope: !15915)
!15917 = !DILocation(line: 626, column: 37, scope: !15915)
!15918 = !DILocation(line: 626, column: 6, scope: !15910)
!15919 = !DILocation(line: 0, scope: !15602, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 629, column: 3, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15915, file: !2520, line: 626, column: 64)
!15922 = !DILocation(line: 252, column: 15, scope: !15602, inlinedAt: !15920)
!15923 = !DILocation(line: 252, column: 28, scope: !15602, inlinedAt: !15920)
!15924 = !DILocation(line: 0, scope: !15609, inlinedAt: !15925)
!15925 = distinct !DILocation(line: 254, column: 3, scope: !15613, inlinedAt: !15920)
!15926 = !DILocation(line: 0, scope: !15616, inlinedAt: !15927)
!15927 = distinct !DILocation(line: 229, column: 2, scope: !15609, inlinedAt: !15925)
!15928 = !DILocation(line: 188, column: 2, scope: !15626, inlinedAt: !15927)
!15929 = !DILocation(line: 188, column: 2, scope: !15628, inlinedAt: !15927)
!15930 = !DILocation(line: 0, scope: !15626, inlinedAt: !15927)
!15931 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !15927)
!15932 = !DILocation(line: 189, column: 35, scope: !15631, inlinedAt: !15927)
!15933 = !DILocation(line: 189, column: 7, scope: !15632, inlinedAt: !15927)
!15934 = !DILocation(line: 191, column: 21, scope: !15636, inlinedAt: !15927)
!15935 = !DILocation(line: 190, column: 4, scope: !15636, inlinedAt: !15927)
!15936 = !DILocation(line: 192, column: 4, scope: !15636, inlinedAt: !15927)
!15937 = distinct !{!15937, !15928, !15938}
!15938 = !DILocation(line: 194, column: 2, scope: !15626, inlinedAt: !15927)
!15939 = !DILocation(line: 196, column: 37, scope: !15616, inlinedAt: !15927)
!15940 = !DILocation(line: 196, column: 2, scope: !15616, inlinedAt: !15927)
!15941 = !DILocation(line: 197, column: 1, scope: !15616, inlinedAt: !15927)
!15942 = !DILocation(line: 630, column: 3, scope: !15921)
!15943 = !DILocation(line: 632, column: 2, scope: !15921)
!15944 = !DILocation(line: 633, column: 1, scope: !15910)
!15945 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13946, file: !13946, line: 120, type: !15534, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15946)
!15946 = !{!15947}
!15947 = !DILocalVariable(name: "thread", arg: 1, scope: !15945, file: !13946, line: 120, type: !2415)
!15948 = !DILocation(line: 0, scope: !15945)
!15949 = !DILocation(line: 122, column: 12, scope: !15945)
!15950 = !DILocation(line: 122, column: 62, scope: !15945)
!15951 = !DILocation(line: 123, column: 4, scope: !15945)
!15952 = !DILocation(line: 122, column: 2, scope: !15945)
!15953 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2520, file: !2520, line: 644, type: !15374, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15954)
!15954 = !{!15955, !15956, !15958}
!15955 = !DILocalVariable(name: "thread", arg: 1, scope: !15953, file: !2520, line: 644, type: !2415)
!15956 = !DILocalVariable(name: "__i", scope: !15957, file: !2520, line: 646, type: !15408)
!15957 = distinct !DILexicalBlock(scope: !15953, file: !2520, line: 646, column: 2)
!15958 = !DILocalVariable(name: "__key", scope: !15957, file: !2520, line: 646, type: !15408)
!15959 = !DILocation(line: 0, scope: !15953)
!15960 = !DILocation(line: 0, scope: !15957)
!15961 = !DILocation(line: 0, scope: !15416, inlinedAt: !15962)
!15962 = distinct !DILocation(line: 646, column: 2, scope: !15957)
!15963 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !15962)
!15965 = !DILocation(line: 0, scope: !15425, inlinedAt: !15964)
!15966 = !DILocation(line: 647, column: 3, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15968, file: !2520, line: 646, column: 26)
!15968 = distinct !DILexicalBlock(scope: !15957, file: !2520, line: 646, column: 2)
!15969 = !DILocation(line: 0, scope: !15443, inlinedAt: !15970)
!15970 = distinct !DILocation(line: 646, column: 2, scope: !15968)
!15971 = !DILocation(line: 0, scope: !15451, inlinedAt: !15972)
!15972 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !15970)
!15973 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !15972)
!15974 = !DILocation(line: 649, column: 1, scope: !15953)
!15975 = distinct !DISubprogram(name: "z_sched_start", scope: !2520, file: !2520, line: 651, type: !15374, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !15976)
!15976 = !{!15977, !15978}
!15977 = !DILocalVariable(name: "thread", arg: 1, scope: !15975, file: !2520, line: 651, type: !2415)
!15978 = !DILocalVariable(name: "key", scope: !15975, file: !2520, line: 653, type: !15408)
!15979 = !DILocation(line: 0, scope: !15975)
!15980 = !DILocation(line: 0, scope: !15416, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 653, column: 25, scope: !15975)
!15982 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !15981)
!15984 = !DILocation(line: 0, scope: !15425, inlinedAt: !15983)
!15985 = !DILocation(line: 655, column: 6, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15975, file: !2520, line: 655, column: 6)
!15987 = !DILocation(line: 655, column: 6, scope: !15975)
!15988 = !DILocation(line: 0, scope: !15443, inlinedAt: !15989)
!15989 = distinct !DILocation(line: 656, column: 3, scope: !15990)
!15990 = distinct !DILexicalBlock(scope: !15986, file: !2520, line: 655, column: 36)
!15991 = !DILocation(line: 0, scope: !15451, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !15989)
!15993 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !15992)
!15994 = !DILocation(line: 657, column: 3, scope: !15990)
!15995 = !DILocation(line: 660, column: 2, scope: !15975)
!15996 = !DILocation(line: 661, column: 2, scope: !15975)
!15997 = !DILocation(line: 662, column: 2, scope: !15975)
!15998 = !DILocation(line: 663, column: 1, scope: !15975)
!15999 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13946, file: !13946, line: 126, type: !15534, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16000)
!16000 = !{!16001}
!16001 = !DILocalVariable(name: "thread", arg: 1, scope: !15999, file: !13946, line: 126, type: !2415)
!16002 = !DILocation(line: 0, scope: !15999)
!16003 = !DILocation(line: 128, column: 23, scope: !15999)
!16004 = !DILocation(line: 128, column: 36, scope: !15999)
!16005 = !DILocation(line: 128, column: 56, scope: !15999)
!16006 = !DILocation(line: 128, column: 2, scope: !15999)
!16007 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13946, file: !13946, line: 155, type: !15374, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16008)
!16008 = !{!16009}
!16009 = !DILocalVariable(name: "thread", arg: 1, scope: !16007, file: !13946, line: 155, type: !2415)
!16010 = !DILocation(line: 0, scope: !16007)
!16011 = !DILocation(line: 157, column: 15, scope: !16007)
!16012 = !DILocation(line: 157, column: 28, scope: !16007)
!16013 = !DILocation(line: 158, column: 1, scope: !16007)
!16014 = distinct !DISubprogram(name: "z_reschedule", scope: !2520, file: !2520, line: 967, type: !15444, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16015)
!16015 = !{!16016, !16017}
!16016 = !DILocalVariable(name: "lock", arg: 1, scope: !16014, file: !2520, line: 967, type: !15419)
!16017 = !DILocalVariable(name: "key", arg: 2, scope: !16014, file: !2520, line: 967, type: !15408)
!16018 = !DILocation(line: 0, scope: !16014)
!16019 = !DILocation(line: 969, column: 6, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16014, file: !2520, line: 969, column: 6)
!16021 = !DILocation(line: 969, column: 23, scope: !16020)
!16022 = !DILocation(line: 969, column: 26, scope: !16020)
!16023 = !DILocation(line: 969, column: 6, scope: !16014)
!16024 = !DILocalVariable(name: "key", arg: 2, scope: !16025, file: !14050, line: 193, type: !15408)
!16025 = distinct !DISubprogram(name: "z_swap", scope: !14050, file: !14050, line: 193, type: !16026, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16028)
!16026 = !DISubroutineType(types: !16027)
!16027 = !{!103, !15419, !15408}
!16028 = !{!16029, !16024}
!16029 = !DILocalVariable(name: "lock", arg: 1, scope: !16025, file: !14050, line: 193, type: !15419)
!16030 = !DILocation(line: 0, scope: !16025, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 970, column: 3, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !16020, file: !2520, line: 969, column: 39)
!16033 = !DILocation(line: 196, column: 9, scope: !16025, inlinedAt: !16031)
!16034 = !DILocation(line: 971, column: 2, scope: !16032)
!16035 = !DILocation(line: 0, scope: !15443, inlinedAt: !16036)
!16036 = distinct !DILocation(line: 972, column: 3, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16020, file: !2520, line: 971, column: 9)
!16038 = !DILocation(line: 0, scope: !15451, inlinedAt: !16039)
!16039 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16036)
!16040 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16039)
!16041 = !DILocation(line: 975, column: 1, scope: !16014)
!16042 = distinct !DISubprogram(name: "resched", scope: !2520, file: !2520, line: 940, type: !16043, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16045)
!16043 = !DISubroutineType(types: !16044)
!16044 = !{!131, !108}
!16045 = !{!16046}
!16046 = !DILocalVariable(name: "key", arg: 1, scope: !16042, file: !2520, line: 940, type: !108)
!16047 = !DILocation(line: 0, scope: !16042)
!16048 = !DILocalVariable(name: "key", arg: 1, scope: !16049, file: !6997, line: 112, type: !32)
!16049 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6997, file: !6997, line: 112, type: !16050, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16052)
!16050 = !DISubroutineType(types: !16051)
!16051 = !{!131, !32}
!16052 = !{!16048}
!16053 = !DILocation(line: 0, scope: !16049, inlinedAt: !16054)
!16054 = distinct !DILocation(line: 946, column: 9, scope: !16042)
!16055 = !DILocation(line: 115, column: 13, scope: !16049, inlinedAt: !16054)
!16056 = !DILocation(line: 946, column: 32, scope: !16042)
!16057 = !DILocation(line: 1031, column: 3, scope: !16058, inlinedAt: !16061)
!16058 = distinct !DISubprogram(name: "__get_IPSR", scope: !7315, file: !7315, line: 1027, type: !3591, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16059)
!16059 = !{!16060}
!16060 = !DILocalVariable(name: "result", scope: !16058, file: !7315, line: 1029, type: !108)
!16061 = distinct !DILocation(line: 48, column: 10, scope: !16062, inlinedAt: !16063)
!16062 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8331, file: !8331, line: 46, type: !8332, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!16063 = distinct !DILocation(line: 946, column: 36, scope: !16042)
!16064 = !{i64 3539464}
!16065 = !DILocation(line: 0, scope: !16058, inlinedAt: !16061)
!16066 = !DILocation(line: 48, column: 9, scope: !16062, inlinedAt: !16063)
!16067 = !DILocation(line: 946, column: 2, scope: !16042)
!16068 = distinct !DISubprogram(name: "need_swap", scope: !2520, file: !2520, line: 953, type: !8332, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16069)
!16069 = !{!16070}
!16070 = !DILocalVariable(name: "new_thread", scope: !16068, file: !2520, line: 959, type: !2415)
!16071 = !DILocation(line: 962, column: 31, scope: !16068)
!16072 = !DILocation(line: 0, scope: !16068)
!16073 = !DILocation(line: 963, column: 23, scope: !16068)
!16074 = !DILocation(line: 963, column: 20, scope: !16068)
!16075 = !DILocation(line: 963, column: 2, scope: !16068)
!16076 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14050, file: !14050, line: 181, type: !7325, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16077)
!16077 = !{!16078, !16079}
!16078 = !DILocalVariable(name: "key", arg: 1, scope: !16076, file: !14050, line: 181, type: !32)
!16079 = !DILocalVariable(name: "ret", scope: !16076, file: !14050, line: 183, type: !103)
!16080 = !DILocation(line: 0, scope: !16076)
!16081 = !DILocation(line: 185, column: 8, scope: !16076)
!16082 = !DILocation(line: 186, column: 2, scope: !16076)
!16083 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2520, file: !2520, line: 665, type: !15374, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16084)
!16084 = !{!16085, !16086, !16088}
!16085 = !DILocalVariable(name: "thread", arg: 1, scope: !16083, file: !2520, line: 665, type: !2415)
!16086 = !DILocalVariable(name: "__i", scope: !16087, file: !2520, line: 671, type: !15408)
!16087 = distinct !DILexicalBlock(scope: !16083, file: !2520, line: 671, column: 2)
!16088 = !DILocalVariable(name: "__key", scope: !16087, file: !2520, line: 671, type: !15408)
!16089 = !DILocation(line: 0, scope: !16083)
!16090 = !DILocation(line: 669, column: 8, scope: !16083)
!16091 = !DILocation(line: 0, scope: !16087)
!16092 = !DILocation(line: 0, scope: !15416, inlinedAt: !16093)
!16093 = distinct !DILocation(line: 671, column: 2, scope: !16087)
!16094 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16095)
!16095 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16093)
!16096 = !DILocation(line: 0, scope: !15425, inlinedAt: !16095)
!16097 = !DILocation(line: 672, column: 7, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16099, file: !2520, line: 672, column: 7)
!16099 = distinct !DILexicalBlock(scope: !16100, file: !2520, line: 671, column: 26)
!16100 = distinct !DILexicalBlock(scope: !16087, file: !2520, line: 671, column: 2)
!16101 = !DILocation(line: 672, column: 7, scope: !16099)
!16102 = !DILocation(line: 0, scope: !15585, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 673, column: 4, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16098, file: !2520, line: 672, column: 35)
!16105 = !DILocation(line: 266, column: 15, scope: !15585, inlinedAt: !16103)
!16106 = !DILocation(line: 266, column: 28, scope: !15585, inlinedAt: !16103)
!16107 = !DILocation(line: 0, scope: !15593, inlinedAt: !16108)
!16108 = distinct !DILocation(line: 268, column: 3, scope: !15597, inlinedAt: !16103)
!16109 = !DILocation(line: 234, column: 2, scope: !15593, inlinedAt: !16108)
!16110 = !DILocation(line: 674, column: 3, scope: !16104)
!16111 = !DILocation(line: 675, column: 3, scope: !16099)
!16112 = !DILocation(line: 676, column: 26, scope: !16099)
!16113 = !DILocation(line: 676, column: 23, scope: !16099)
!16114 = !DILocation(line: 676, column: 3, scope: !16099)
!16115 = !DILocation(line: 0, scope: !15443, inlinedAt: !16116)
!16116 = distinct !DILocation(line: 671, column: 2, scope: !16100)
!16117 = !DILocation(line: 0, scope: !15451, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16116)
!16119 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16118)
!16120 = !DILocation(line: 679, column: 16, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16083, file: !2520, line: 679, column: 6)
!16122 = !DILocation(line: 679, column: 13, scope: !16121)
!16123 = !DILocation(line: 679, column: 6, scope: !16083)
!16124 = !DILocation(line: 680, column: 3, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16121, file: !2520, line: 679, column: 26)
!16126 = !DILocation(line: 681, column: 2, scope: !16125)
!16127 = !DILocation(line: 684, column: 1, scope: !16083)
!16128 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14339, file: !14339, line: 52, type: !15392, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16129)
!16129 = !{!16130}
!16130 = !DILocalVariable(name: "thread", arg: 1, scope: !16128, file: !14339, line: 52, type: !2415)
!16131 = !DILocation(line: 0, scope: !16128)
!16132 = !DILocation(line: 54, column: 39, scope: !16128)
!16133 = !DILocation(line: 54, column: 9, scope: !16128)
!16134 = !DILocation(line: 54, column: 2, scope: !16128)
!16135 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13946, file: !13946, line: 141, type: !15374, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16136)
!16136 = !{!16137}
!16137 = !DILocalVariable(name: "thread", arg: 1, scope: !16135, file: !13946, line: 141, type: !2415)
!16138 = !DILocation(line: 0, scope: !16135)
!16139 = !DILocation(line: 143, column: 15, scope: !16135)
!16140 = !DILocation(line: 143, column: 28, scope: !16135)
!16141 = !DILocation(line: 146, column: 1, scope: !16135)
!16142 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13946, file: !13946, line: 73, type: !334, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!16143 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16144)
!16144 = distinct !DILocation(line: 75, column: 30, scope: !16142)
!16145 = !DILocation(line: 0, scope: !15425, inlinedAt: !16144)
!16146 = !DILocation(line: 75, column: 9, scope: !16142)
!16147 = !DILocation(line: 76, column: 1, scope: !16142)
!16148 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2520, file: !2520, line: 977, type: !7404, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16149)
!16149 = !{!16150}
!16150 = !DILocalVariable(name: "key", arg: 1, scope: !16148, file: !2520, line: 977, type: !108)
!16151 = !DILocation(line: 0, scope: !16148)
!16152 = !DILocation(line: 979, column: 6, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16148, file: !2520, line: 979, column: 6)
!16154 = !DILocation(line: 979, column: 6, scope: !16148)
!16155 = !DILocation(line: 980, column: 3, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16153, file: !2520, line: 979, column: 20)
!16157 = !DILocation(line: 981, column: 2, scope: !16156)
!16158 = !DILocation(line: 0, scope: !15451, inlinedAt: !16159)
!16159 = distinct !DILocation(line: 982, column: 3, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16153, file: !2520, line: 981, column: 9)
!16161 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16159)
!16162 = !DILocation(line: 985, column: 1, scope: !16148)
!16163 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2520, file: !2520, line: 695, type: !15374, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16164)
!16164 = !{!16165, !16166}
!16165 = !DILocalVariable(name: "thread", arg: 1, scope: !16163, file: !2520, line: 695, type: !2415)
!16166 = !DILocalVariable(name: "key", scope: !16163, file: !2520, line: 699, type: !15408)
!16167 = !DILocation(line: 0, scope: !16163)
!16168 = !DILocation(line: 0, scope: !15416, inlinedAt: !16169)
!16169 = distinct !DILocation(line: 699, column: 25, scope: !16163)
!16170 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16171)
!16171 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16169)
!16172 = !DILocation(line: 0, scope: !15425, inlinedAt: !16171)
!16173 = !DILocation(line: 702, column: 7, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16163, file: !2520, line: 702, column: 6)
!16175 = !DILocation(line: 702, column: 6, scope: !16163)
!16176 = !DILocation(line: 0, scope: !15443, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 703, column: 3, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16174, file: !2520, line: 702, column: 38)
!16179 = !DILocation(line: 0, scope: !15451, inlinedAt: !16180)
!16180 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16177)
!16181 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16180)
!16182 = !DILocation(line: 704, column: 3, scope: !16178)
!16183 = !DILocation(line: 707, column: 2, scope: !16163)
!16184 = !DILocation(line: 708, column: 2, scope: !16163)
!16185 = !DILocation(line: 710, column: 2, scope: !16163)
!16186 = !DILocation(line: 713, column: 1, scope: !16163)
!16187 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13946, file: !13946, line: 96, type: !15534, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16188)
!16188 = !{!16189}
!16189 = !DILocalVariable(name: "thread", arg: 1, scope: !16187, file: !13946, line: 96, type: !2415)
!16190 = !DILocation(line: 0, scope: !16187)
!16191 = !DILocation(line: 98, column: 23, scope: !16187)
!16192 = !DILocation(line: 98, column: 36, scope: !16187)
!16193 = !DILocation(line: 98, column: 57, scope: !16187)
!16194 = !DILocation(line: 98, column: 2, scope: !16187)
!16195 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13946, file: !13946, line: 148, type: !15374, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16196)
!16196 = !{!16197}
!16197 = !DILocalVariable(name: "thread", arg: 1, scope: !16195, file: !13946, line: 148, type: !2415)
!16198 = !DILocation(line: 0, scope: !16195)
!16199 = !DILocation(line: 150, column: 15, scope: !16195)
!16200 = !DILocation(line: 150, column: 28, scope: !16195)
!16201 = !DILocation(line: 153, column: 1, scope: !16195)
!16202 = distinct !DISubprogram(name: "z_pend_thread", scope: !2520, file: !2520, line: 770, type: !16203, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16209)
!16203 = !DISubroutineType(types: !16204)
!16204 = !{null, !2415, !2446, !16205}
!16205 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16206)
!16206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16207)
!16207 = !{!16208}
!16208 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16206, file: !105, line: 66, baseType: !104, size: 64)
!16209 = !{!16210, !16211, !16212, !16213, !16215}
!16210 = !DILocalVariable(name: "thread", arg: 1, scope: !16202, file: !2520, line: 770, type: !2415)
!16211 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16202, file: !2520, line: 770, type: !2446)
!16212 = !DILocalVariable(name: "timeout", arg: 3, scope: !16202, file: !2520, line: 771, type: !16205)
!16213 = !DILocalVariable(name: "__i", scope: !16214, file: !2520, line: 774, type: !15408)
!16214 = distinct !DILexicalBlock(scope: !16202, file: !2520, line: 774, column: 2)
!16215 = !DILocalVariable(name: "__key", scope: !16214, file: !2520, line: 774, type: !15408)
!16216 = !DILocation(line: 0, scope: !16202)
!16217 = !DILocation(line: 0, scope: !16214)
!16218 = !DILocation(line: 0, scope: !15416, inlinedAt: !16219)
!16219 = distinct !DILocation(line: 774, column: 2, scope: !16214)
!16220 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16221)
!16221 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16219)
!16222 = !DILocation(line: 0, scope: !15425, inlinedAt: !16221)
!16223 = !DILocation(line: 775, column: 3, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16225, file: !2520, line: 774, column: 26)
!16225 = distinct !DILexicalBlock(scope: !16214, file: !2520, line: 774, column: 2)
!16226 = !DILocation(line: 0, scope: !15443, inlinedAt: !16227)
!16227 = distinct !DILocation(line: 774, column: 2, scope: !16225)
!16228 = !DILocation(line: 0, scope: !15451, inlinedAt: !16229)
!16229 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16227)
!16230 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16229)
!16231 = !DILocation(line: 777, column: 1, scope: !16202)
!16232 = distinct !DISubprogram(name: "pend_locked", scope: !2520, file: !2520, line: 760, type: !16203, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16233)
!16233 = !{!16234, !16235, !16236}
!16234 = !DILocalVariable(name: "thread", arg: 1, scope: !16232, file: !2520, line: 760, type: !2415)
!16235 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16232, file: !2520, line: 760, type: !2446)
!16236 = !DILocalVariable(name: "timeout", arg: 3, scope: !16232, file: !2520, line: 761, type: !16205)
!16237 = !DILocation(line: 0, scope: !16232)
!16238 = !DILocation(line: 766, column: 2, scope: !16232)
!16239 = !DILocation(line: 767, column: 2, scope: !16232)
!16240 = !DILocation(line: 768, column: 1, scope: !16232)
!16241 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2520, file: !2520, line: 740, type: !16242, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16244)
!16242 = !DISubroutineType(types: !16243)
!16243 = !{null, !2415, !2446}
!16244 = !{!16245, !16246}
!16245 = !DILocalVariable(name: "thread", arg: 1, scope: !16241, file: !2520, line: 740, type: !2415)
!16246 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16241, file: !2520, line: 740, type: !2446)
!16247 = !DILocation(line: 0, scope: !16241)
!16248 = !DILocation(line: 742, column: 2, scope: !16241)
!16249 = !DILocation(line: 743, column: 2, scope: !16241)
!16250 = !DILocation(line: 747, column: 13, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16241, file: !2520, line: 747, column: 6)
!16252 = !DILocation(line: 747, column: 6, scope: !16241)
!16253 = !DILocation(line: 748, column: 16, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16251, file: !2520, line: 747, column: 22)
!16255 = !DILocation(line: 748, column: 26, scope: !16254)
!16256 = !DILocation(line: 749, column: 28, scope: !16254)
!16257 = !DILocation(line: 0, scope: !15616, inlinedAt: !16258)
!16258 = distinct !DILocation(line: 749, column: 3, scope: !16254)
!16259 = !DILocation(line: 188, column: 2, scope: !15626, inlinedAt: !16258)
!16260 = !DILocation(line: 188, column: 2, scope: !15628, inlinedAt: !16258)
!16261 = !DILocation(line: 0, scope: !15626, inlinedAt: !16258)
!16262 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !16258)
!16263 = !DILocation(line: 189, column: 35, scope: !15631, inlinedAt: !16258)
!16264 = !DILocation(line: 189, column: 7, scope: !15632, inlinedAt: !16258)
!16265 = !DILocation(line: 191, column: 21, scope: !15636, inlinedAt: !16258)
!16266 = !DILocation(line: 190, column: 4, scope: !15636, inlinedAt: !16258)
!16267 = !DILocation(line: 192, column: 4, scope: !15636, inlinedAt: !16258)
!16268 = distinct !{!16268, !16259, !16269}
!16269 = !DILocation(line: 194, column: 2, scope: !15626, inlinedAt: !16258)
!16270 = !DILocation(line: 196, column: 37, scope: !15616, inlinedAt: !16258)
!16271 = !DILocation(line: 196, column: 2, scope: !15616, inlinedAt: !16258)
!16272 = !DILocation(line: 197, column: 1, scope: !15616, inlinedAt: !16258)
!16273 = !DILocation(line: 751, column: 1, scope: !16241)
!16274 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2520, file: !2520, line: 753, type: !16275, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16277)
!16275 = !DISubroutineType(types: !16276)
!16276 = !{null, !2415, !16205}
!16277 = !{!16278, !16279}
!16278 = !DILocalVariable(name: "thread", arg: 1, scope: !16274, file: !2520, line: 753, type: !2415)
!16279 = !DILocalVariable(name: "timeout", arg: 2, scope: !16274, file: !2520, line: 753, type: !16205)
!16280 = !DILocation(line: 0, scope: !16274)
!16281 = !DILocation(line: 755, column: 7, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16274, file: !2520, line: 755, column: 6)
!16283 = !DILocation(line: 755, column: 6, scope: !16274)
!16284 = !DILocation(line: 756, column: 3, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16282, file: !2520, line: 755, column: 41)
!16286 = !DILocation(line: 757, column: 2, scope: !16285)
!16287 = !DILocation(line: 758, column: 1, scope: !16274)
!16288 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14339, file: !14339, line: 47, type: !16275, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16289)
!16289 = !{!16290, !16291}
!16290 = !DILocalVariable(name: "thread", arg: 1, scope: !16288, file: !14339, line: 47, type: !2415)
!16291 = !DILocalVariable(name: "ticks", arg: 2, scope: !16288, file: !14339, line: 47, type: !16205)
!16292 = !DILocation(line: 0, scope: !16288)
!16293 = !DILocation(line: 49, column: 30, scope: !16288)
!16294 = !DILocation(line: 49, column: 2, scope: !16288)
!16295 = !DILocation(line: 50, column: 1, scope: !16288)
!16296 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2520, file: !2520, line: 795, type: !2472, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16297)
!16297 = !{!16298, !16299, !16300, !16302, !16303}
!16298 = !DILocalVariable(name: "timeout", arg: 1, scope: !16296, file: !2520, line: 795, type: !2474)
!16299 = !DILocalVariable(name: "thread", scope: !16296, file: !2520, line: 797, type: !2415)
!16300 = !DILocalVariable(name: "__i", scope: !16301, file: !2520, line: 800, type: !15408)
!16301 = distinct !DILexicalBlock(scope: !16296, file: !2520, line: 800, column: 2)
!16302 = !DILocalVariable(name: "__key", scope: !16301, file: !2520, line: 800, type: !15408)
!16303 = !DILocalVariable(name: "killed", scope: !16304, file: !2520, line: 801, type: !131)
!16304 = distinct !DILexicalBlock(scope: !16305, file: !2520, line: 800, column: 26)
!16305 = distinct !DILexicalBlock(scope: !16301, file: !2520, line: 800, column: 2)
!16306 = !DILocation(line: 0, scope: !16296)
!16307 = !DILocation(line: 797, column: 28, scope: !16296)
!16308 = !DILocation(line: 0, scope: !16301)
!16309 = !DILocation(line: 0, scope: !15416, inlinedAt: !16310)
!16310 = distinct !DILocation(line: 800, column: 2, scope: !16301)
!16311 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16312)
!16312 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16310)
!16313 = !DILocation(line: 0, scope: !15425, inlinedAt: !16312)
!16314 = !DILocation(line: 801, column: 27, scope: !16304)
!16315 = !DILocation(line: 801, column: 32, scope: !16304)
!16316 = !DILocation(line: 801, column: 61, scope: !16304)
!16317 = !DILocation(line: 0, scope: !16304)
!16318 = !DILocation(line: 804, column: 7, scope: !16304)
!16319 = !DILocation(line: 805, column: 21, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16321, file: !2520, line: 805, column: 8)
!16321 = distinct !DILexicalBlock(scope: !16322, file: !2520, line: 804, column: 16)
!16322 = distinct !DILexicalBlock(scope: !16304, file: !2520, line: 804, column: 7)
!16323 = !DILocation(line: 805, column: 31, scope: !16320)
!16324 = !DILocation(line: 805, column: 8, scope: !16321)
!16325 = !DILocation(line: 806, column: 5, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16320, file: !2520, line: 805, column: 40)
!16327 = !DILocation(line: 807, column: 4, scope: !16326)
!16328 = !DILocation(line: 808, column: 4, scope: !16321)
!16329 = !DILocation(line: 809, column: 4, scope: !16321)
!16330 = !DILocation(line: 810, column: 4, scope: !16321)
!16331 = !DILocation(line: 811, column: 3, scope: !16321)
!16332 = !DILocation(line: 0, scope: !15443, inlinedAt: !16333)
!16333 = distinct !DILocation(line: 800, column: 2, scope: !16305)
!16334 = !DILocation(line: 0, scope: !15451, inlinedAt: !16335)
!16335 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16333)
!16336 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16335)
!16337 = !DILocation(line: 813, column: 1, scope: !16296)
!16338 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2520, file: !2520, line: 779, type: !15374, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16339)
!16339 = !{!16340}
!16340 = !DILocalVariable(name: "thread", arg: 1, scope: !16338, file: !2520, line: 779, type: !2415)
!16341 = !DILocation(line: 0, scope: !16338)
!16342 = !DILocation(line: 781, column: 2, scope: !16338)
!16343 = !DILocation(line: 782, column: 2, scope: !16338)
!16344 = !DILocation(line: 783, column: 15, scope: !16338)
!16345 = !DILocation(line: 783, column: 25, scope: !16338)
!16346 = !DILocation(line: 784, column: 1, scope: !16338)
!16347 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13946, file: !13946, line: 165, type: !15374, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16348)
!16348 = !{!16349}
!16349 = !DILocalVariable(name: "thread", arg: 1, scope: !16347, file: !13946, line: 165, type: !2415)
!16350 = !DILocation(line: 0, scope: !16347)
!16351 = !DILocation(line: 167, column: 15, scope: !16347)
!16352 = !DILocation(line: 167, column: 28, scope: !16347)
!16353 = !DILocation(line: 168, column: 1, scope: !16347)
!16354 = distinct !DISubprogram(name: "unready_thread", scope: !2520, file: !2520, line: 731, type: !15374, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16355)
!16355 = !{!16356}
!16356 = !DILocalVariable(name: "thread", arg: 1, scope: !16354, file: !2520, line: 731, type: !2415)
!16357 = !DILocation(line: 0, scope: !16354)
!16358 = !DILocation(line: 733, column: 6, scope: !16359)
!16359 = distinct !DILexicalBlock(scope: !16354, file: !2520, line: 733, column: 6)
!16360 = !DILocation(line: 733, column: 6, scope: !16354)
!16361 = !DILocation(line: 0, scope: !15585, inlinedAt: !16362)
!16362 = distinct !DILocation(line: 734, column: 3, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16359, file: !2520, line: 733, column: 34)
!16364 = !DILocation(line: 266, column: 15, scope: !15585, inlinedAt: !16362)
!16365 = !DILocation(line: 266, column: 28, scope: !15585, inlinedAt: !16362)
!16366 = !DILocation(line: 0, scope: !15593, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 268, column: 3, scope: !15597, inlinedAt: !16362)
!16368 = !DILocation(line: 234, column: 2, scope: !15593, inlinedAt: !16367)
!16369 = !DILocation(line: 735, column: 2, scope: !16363)
!16370 = !DILocation(line: 736, column: 25, scope: !16354)
!16371 = !DILocation(line: 736, column: 22, scope: !16354)
!16372 = !DILocation(line: 736, column: 2, scope: !16354)
!16373 = !DILocation(line: 737, column: 1, scope: !16354)
!16374 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13946, file: !13946, line: 160, type: !15374, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16375)
!16375 = !{!16376}
!16376 = !DILocalVariable(name: "thread", arg: 1, scope: !16374, file: !13946, line: 160, type: !2415)
!16377 = !DILocation(line: 0, scope: !16374)
!16378 = !DILocation(line: 162, column: 15, scope: !16374)
!16379 = !DILocation(line: 162, column: 28, scope: !16374)
!16380 = !DILocation(line: 163, column: 1, scope: !16374)
!16381 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2520, file: !2520, line: 786, type: !15374, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16382)
!16382 = !{!16383, !16384, !16386}
!16383 = !DILocalVariable(name: "thread", arg: 1, scope: !16381, file: !2520, line: 786, type: !2415)
!16384 = !DILocalVariable(name: "__i", scope: !16385, file: !2520, line: 788, type: !15408)
!16385 = distinct !DILexicalBlock(scope: !16381, file: !2520, line: 788, column: 2)
!16386 = !DILocalVariable(name: "__key", scope: !16385, file: !2520, line: 788, type: !15408)
!16387 = !DILocation(line: 0, scope: !16381)
!16388 = !DILocation(line: 0, scope: !16385)
!16389 = !DILocation(line: 0, scope: !15416, inlinedAt: !16390)
!16390 = distinct !DILocation(line: 788, column: 2, scope: !16385)
!16391 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16392)
!16392 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16390)
!16393 = !DILocation(line: 0, scope: !15425, inlinedAt: !16392)
!16394 = !DILocation(line: 789, column: 3, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16396, file: !2520, line: 788, column: 26)
!16396 = distinct !DILexicalBlock(scope: !16385, file: !2520, line: 788, column: 2)
!16397 = !DILocation(line: 0, scope: !15443, inlinedAt: !16398)
!16398 = distinct !DILocation(line: 788, column: 2, scope: !16396)
!16399 = !DILocation(line: 0, scope: !15451, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16398)
!16401 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16400)
!16402 = !DILocation(line: 791, column: 1, scope: !16381)
!16403 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2520, file: !2520, line: 816, type: !16404, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16406)
!16404 = !DISubroutineType(types: !16405)
!16405 = !{!103, !108, !2446, !16205}
!16406 = !{!16407, !16408, !16409, !16410, !16411, !16413}
!16407 = !DILocalVariable(name: "key", arg: 1, scope: !16403, file: !2520, line: 816, type: !108)
!16408 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16403, file: !2520, line: 816, type: !2446)
!16409 = !DILocalVariable(name: "timeout", arg: 3, scope: !16403, file: !2520, line: 816, type: !16205)
!16410 = !DILocalVariable(name: "ret", scope: !16403, file: !2520, line: 828, type: !103)
!16411 = !DILocalVariable(name: "__i", scope: !16412, file: !2520, line: 829, type: !15408)
!16412 = distinct !DILexicalBlock(scope: !16403, file: !2520, line: 829, column: 2)
!16413 = !DILocalVariable(name: "__key", scope: !16412, file: !2520, line: 829, type: !15408)
!16414 = !DILocation(line: 0, scope: !16403)
!16415 = !DILocation(line: 823, column: 14, scope: !16403)
!16416 = !DILocation(line: 823, column: 2, scope: !16403)
!16417 = !DILocation(line: 826, column: 20, scope: !16403)
!16418 = !DILocation(line: 826, column: 18, scope: !16403)
!16419 = !DILocation(line: 828, column: 12, scope: !16403)
!16420 = !DILocation(line: 0, scope: !16412)
!16421 = !DILocation(line: 0, scope: !15416, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 829, column: 2, scope: !16412)
!16423 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16424)
!16424 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16422)
!16425 = !DILocation(line: 0, scope: !15425, inlinedAt: !16424)
!16426 = !DILocation(line: 830, column: 7, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16428, file: !2520, line: 830, column: 7)
!16428 = distinct !DILexicalBlock(scope: !16429, file: !2520, line: 829, column: 26)
!16429 = distinct !DILexicalBlock(scope: !16412, file: !2520, line: 829, column: 2)
!16430 = !DILocation(line: 830, column: 26, scope: !16427)
!16431 = !DILocation(line: 830, column: 23, scope: !16427)
!16432 = !DILocation(line: 830, column: 7, scope: !16428)
!16433 = !DILocation(line: 831, column: 20, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16427, file: !2520, line: 830, column: 36)
!16435 = !DILocation(line: 832, column: 3, scope: !16434)
!16436 = !DILocation(line: 0, scope: !15443, inlinedAt: !16437)
!16437 = distinct !DILocation(line: 829, column: 2, scope: !16429)
!16438 = !DILocation(line: 0, scope: !15451, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16437)
!16440 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16439)
!16441 = !DILocation(line: 834, column: 2, scope: !16403)
!16442 = distinct !DISubprogram(name: "z_pend_curr", scope: !2520, file: !2520, line: 840, type: !16443, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16445)
!16443 = !DISubroutineType(types: !16444)
!16444 = !{!103, !15419, !15408, !2446, !16205}
!16445 = !{!16446, !16447, !16448, !16449}
!16446 = !DILocalVariable(name: "lock", arg: 1, scope: !16442, file: !2520, line: 840, type: !15419)
!16447 = !DILocalVariable(name: "key", arg: 2, scope: !16442, file: !2520, line: 840, type: !15408)
!16448 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16442, file: !2520, line: 841, type: !2446)
!16449 = !DILocalVariable(name: "timeout", arg: 4, scope: !16442, file: !2520, line: 841, type: !16205)
!16450 = !DILocation(line: 0, scope: !16442)
!16451 = !DILocation(line: 844, column: 20, scope: !16442)
!16452 = !DILocation(line: 844, column: 18, scope: !16442)
!16453 = !DILocation(line: 0, scope: !15416, inlinedAt: !16454)
!16454 = distinct !DILocation(line: 856, column: 9, scope: !16442)
!16455 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16456)
!16456 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16454)
!16457 = !DILocation(line: 0, scope: !15425, inlinedAt: !16456)
!16458 = !DILocation(line: 857, column: 14, scope: !16442)
!16459 = !DILocation(line: 857, column: 2, scope: !16442)
!16460 = !DILocation(line: 0, scope: !16025, inlinedAt: !16461)
!16461 = distinct !DILocation(line: 859, column: 9, scope: !16442)
!16462 = !DILocation(line: 196, column: 9, scope: !16025, inlinedAt: !16461)
!16463 = !DILocation(line: 859, column: 2, scope: !16442)
!16464 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2520, file: !2520, line: 862, type: !16465, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16467)
!16465 = !DISubroutineType(types: !16466)
!16466 = !{!2415, !2446}
!16467 = !{!16468, !16469, !16470, !16472}
!16468 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16464, file: !2520, line: 862, type: !2446)
!16469 = !DILocalVariable(name: "thread", scope: !16464, file: !2520, line: 864, type: !2415)
!16470 = !DILocalVariable(name: "__i", scope: !16471, file: !2520, line: 866, type: !15408)
!16471 = distinct !DILexicalBlock(scope: !16464, file: !2520, line: 866, column: 2)
!16472 = !DILocalVariable(name: "__key", scope: !16471, file: !2520, line: 866, type: !15408)
!16473 = !DILocation(line: 0, scope: !16464)
!16474 = !DILocation(line: 0, scope: !16471)
!16475 = !DILocation(line: 0, scope: !15416, inlinedAt: !16476)
!16476 = distinct !DILocation(line: 866, column: 2, scope: !16471)
!16477 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16476)
!16479 = !DILocation(line: 0, scope: !15425, inlinedAt: !16478)
!16480 = !DILocation(line: 867, column: 12, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16482, file: !2520, line: 866, column: 26)
!16482 = distinct !DILexicalBlock(scope: !16471, file: !2520, line: 866, column: 2)
!16483 = !DILocation(line: 869, column: 14, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16481, file: !2520, line: 869, column: 7)
!16485 = !DILocation(line: 869, column: 7, scope: !16481)
!16486 = !DILocation(line: 870, column: 4, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !16484, file: !2520, line: 869, column: 23)
!16488 = !DILocation(line: 871, column: 3, scope: !16487)
!16489 = !DILocation(line: 0, scope: !15443, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 866, column: 2, scope: !16482)
!16491 = !DILocation(line: 0, scope: !15451, inlinedAt: !16492)
!16492 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16490)
!16493 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16492)
!16494 = !DILocation(line: 874, column: 2, scope: !16464)
!16495 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2520, file: !2520, line: 877, type: !16465, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16496)
!16496 = !{!16497, !16498, !16499, !16501}
!16497 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16495, file: !2520, line: 877, type: !2446)
!16498 = !DILocalVariable(name: "thread", scope: !16495, file: !2520, line: 879, type: !2415)
!16499 = !DILocalVariable(name: "__i", scope: !16500, file: !2520, line: 881, type: !15408)
!16500 = distinct !DILexicalBlock(scope: !16495, file: !2520, line: 881, column: 2)
!16501 = !DILocalVariable(name: "__key", scope: !16500, file: !2520, line: 881, type: !15408)
!16502 = !DILocation(line: 0, scope: !16495)
!16503 = !DILocation(line: 0, scope: !16500)
!16504 = !DILocation(line: 0, scope: !15416, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 881, column: 2, scope: !16500)
!16506 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16505)
!16508 = !DILocation(line: 0, scope: !15425, inlinedAt: !16507)
!16509 = !DILocation(line: 882, column: 12, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16511, file: !2520, line: 881, column: 26)
!16511 = distinct !DILexicalBlock(scope: !16500, file: !2520, line: 881, column: 2)
!16512 = !DILocation(line: 884, column: 14, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16510, file: !2520, line: 884, column: 7)
!16514 = !DILocation(line: 884, column: 7, scope: !16510)
!16515 = !DILocation(line: 885, column: 4, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16513, file: !2520, line: 884, column: 23)
!16517 = !DILocation(line: 886, column: 10, scope: !16516)
!16518 = !DILocation(line: 887, column: 3, scope: !16516)
!16519 = !DILocation(line: 0, scope: !15443, inlinedAt: !16520)
!16520 = distinct !DILocation(line: 881, column: 2, scope: !16511)
!16521 = !DILocation(line: 0, scope: !15451, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16520)
!16523 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16522)
!16524 = !DILocation(line: 890, column: 2, scope: !16495)
!16525 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2520, file: !2520, line: 893, type: !15374, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16526)
!16526 = !{!16527}
!16527 = !DILocalVariable(name: "thread", arg: 1, scope: !16525, file: !2520, line: 893, type: !2415)
!16528 = !DILocation(line: 0, scope: !16525)
!16529 = !DILocation(line: 0, scope: !16381, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 895, column: 2, scope: !16525)
!16531 = !DILocation(line: 0, scope: !16385, inlinedAt: !16530)
!16532 = !DILocation(line: 0, scope: !15416, inlinedAt: !16533)
!16533 = distinct !DILocation(line: 788, column: 2, scope: !16385, inlinedAt: !16530)
!16534 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16535)
!16535 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16533)
!16536 = !DILocation(line: 0, scope: !15425, inlinedAt: !16535)
!16537 = !DILocation(line: 789, column: 3, scope: !16395, inlinedAt: !16530)
!16538 = !DILocation(line: 0, scope: !15443, inlinedAt: !16539)
!16539 = distinct !DILocation(line: 788, column: 2, scope: !16396, inlinedAt: !16530)
!16540 = !DILocation(line: 0, scope: !15451, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16539)
!16542 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16541)
!16543 = !DILocation(line: 896, column: 8, scope: !16525)
!16544 = !DILocation(line: 897, column: 1, scope: !16525)
!16545 = distinct !DISubprogram(name: "z_set_prio", scope: !2520, file: !2520, line: 902, type: !15736, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16546)
!16546 = !{!16547, !16548, !16549, !16550, !16552}
!16547 = !DILocalVariable(name: "thread", arg: 1, scope: !16545, file: !2520, line: 902, type: !2415)
!16548 = !DILocalVariable(name: "prio", arg: 2, scope: !16545, file: !2520, line: 902, type: !103)
!16549 = !DILocalVariable(name: "need_sched", scope: !16545, file: !2520, line: 904, type: !131)
!16550 = !DILocalVariable(name: "__i", scope: !16551, file: !2520, line: 906, type: !15408)
!16551 = distinct !DILexicalBlock(scope: !16545, file: !2520, line: 906, column: 2)
!16552 = !DILocalVariable(name: "__key", scope: !16551, file: !2520, line: 906, type: !15408)
!16553 = !DILocation(line: 0, scope: !16545)
!16554 = !DILocation(line: 0, scope: !16551)
!16555 = !DILocation(line: 0, scope: !15416, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 906, column: 2, scope: !16551)
!16557 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16556)
!16559 = !DILocation(line: 0, scope: !15425, inlinedAt: !16558)
!16560 = !DILocation(line: 907, column: 16, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16562, file: !2520, line: 906, column: 26)
!16562 = distinct !DILexicalBlock(scope: !16551, file: !2520, line: 906, column: 2)
!16563 = !DILocation(line: 909, column: 7, scope: !16561)
!16564 = !DILocation(line: 0, scope: !15585, inlinedAt: !16565)
!16565 = distinct !DILocation(line: 912, column: 5, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16567, file: !2520, line: 911, column: 63)
!16567 = distinct !DILexicalBlock(scope: !16568, file: !2520, line: 911, column: 8)
!16568 = distinct !DILexicalBlock(scope: !16569, file: !2520, line: 909, column: 19)
!16569 = distinct !DILexicalBlock(scope: !16561, file: !2520, line: 909, column: 7)
!16570 = !DILocation(line: 266, column: 28, scope: !15585, inlinedAt: !16565)
!16571 = !DILocation(line: 0, scope: !15593, inlinedAt: !16572)
!16572 = distinct !DILocation(line: 268, column: 3, scope: !15597, inlinedAt: !16565)
!16573 = !DILocation(line: 234, column: 2, scope: !15593, inlinedAt: !16572)
!16574 = !DILocation(line: 913, column: 23, scope: !16566)
!16575 = !DILocation(line: 0, scope: !15602, inlinedAt: !16576)
!16576 = distinct !DILocation(line: 914, column: 5, scope: !16566)
!16577 = !DILocation(line: 252, column: 28, scope: !15602, inlinedAt: !16576)
!16578 = !DILocation(line: 0, scope: !15609, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 254, column: 3, scope: !15613, inlinedAt: !16576)
!16580 = !DILocation(line: 0, scope: !15616, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 229, column: 2, scope: !15609, inlinedAt: !16579)
!16582 = !DILocation(line: 188, column: 2, scope: !15626, inlinedAt: !16581)
!16583 = !DILocation(line: 188, column: 2, scope: !15628, inlinedAt: !16581)
!16584 = !DILocation(line: 0, scope: !15626, inlinedAt: !16581)
!16585 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !16581)
!16586 = !DILocation(line: 189, column: 35, scope: !15631, inlinedAt: !16581)
!16587 = !DILocation(line: 189, column: 7, scope: !15632, inlinedAt: !16581)
!16588 = !DILocation(line: 190, column: 4, scope: !15636, inlinedAt: !16581)
!16589 = !DILocation(line: 192, column: 4, scope: !15636, inlinedAt: !16581)
!16590 = distinct !{!16590, !16582, !16591}
!16591 = !DILocation(line: 194, column: 2, scope: !15626, inlinedAt: !16581)
!16592 = !DILocation(line: 196, column: 2, scope: !15616, inlinedAt: !16581)
!16593 = !DILocation(line: 197, column: 1, scope: !15616, inlinedAt: !16581)
!16594 = !DILocation(line: 918, column: 4, scope: !16568)
!16595 = !DILocation(line: 919, column: 3, scope: !16568)
!16596 = !DILocation(line: 920, column: 22, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16569, file: !2520, line: 919, column: 10)
!16598 = !DILocation(line: 0, scope: !15443, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 906, column: 2, scope: !16562)
!16600 = !DILocation(line: 0, scope: !15451, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16599)
!16602 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16601)
!16603 = !DILocation(line: 926, column: 2, scope: !16545)
!16604 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2520, file: !2520, line: 929, type: !16605, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16607)
!16605 = !DISubroutineType(types: !16606)
!16606 = !{null, !2415, !103}
!16607 = !{!16608, !16609, !16610}
!16608 = !DILocalVariable(name: "thread", arg: 1, scope: !16604, file: !2520, line: 929, type: !2415)
!16609 = !DILocalVariable(name: "prio", arg: 2, scope: !16604, file: !2520, line: 929, type: !103)
!16610 = !DILocalVariable(name: "need_sched", scope: !16604, file: !2520, line: 931, type: !131)
!16611 = !DILocation(line: 0, scope: !16604)
!16612 = !DILocation(line: 931, column: 20, scope: !16604)
!16613 = !DILocation(line: 935, column: 17, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16604, file: !2520, line: 935, column: 6)
!16615 = !DILocation(line: 935, column: 20, scope: !16614)
!16616 = !DILocation(line: 935, column: 35, scope: !16614)
!16617 = !DILocation(line: 935, column: 48, scope: !16614)
!16618 = !DILocation(line: 935, column: 6, scope: !16604)
!16619 = !DILocation(line: 936, column: 3, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16614, file: !2520, line: 935, column: 55)
!16621 = !DILocation(line: 937, column: 2, scope: !16620)
!16622 = !DILocation(line: 938, column: 1, scope: !16604)
!16623 = distinct !DISubprogram(name: "k_sched_lock", scope: !2520, file: !2520, line: 987, type: !334, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16624)
!16624 = !{!16625, !16627}
!16625 = !DILocalVariable(name: "__i", scope: !16626, file: !2520, line: 989, type: !15408)
!16626 = distinct !DILexicalBlock(scope: !16623, file: !2520, line: 989, column: 2)
!16627 = !DILocalVariable(name: "__key", scope: !16626, file: !2520, line: 989, type: !15408)
!16628 = !DILocation(line: 0, scope: !16626)
!16629 = !DILocation(line: 0, scope: !15416, inlinedAt: !16630)
!16630 = distinct !DILocation(line: 989, column: 2, scope: !16626)
!16631 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16632)
!16632 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16630)
!16633 = !DILocation(line: 0, scope: !15425, inlinedAt: !16632)
!16634 = !DILocation(line: 992, column: 3, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16636, file: !2520, line: 989, column: 26)
!16636 = distinct !DILexicalBlock(scope: !16626, file: !2520, line: 989, column: 2)
!16637 = !DILocation(line: 0, scope: !15443, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 989, column: 2, scope: !16636)
!16639 = !DILocation(line: 0, scope: !15451, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16638)
!16641 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16640)
!16642 = !DILocation(line: 994, column: 1, scope: !16623)
!16643 = distinct !DISubprogram(name: "z_sched_lock", scope: !13946, file: !13946, line: 251, type: !334, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!16644 = !DILocation(line: 256, column: 4, scope: !16643)
!16645 = !DILocation(line: 256, column: 19, scope: !16643)
!16646 = !DILocation(line: 256, column: 2, scope: !16643)
!16647 = !DILocation(line: 258, column: 2, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16643, file: !13946, line: 258, column: 2)
!16649 = !{i64 2154867462}
!16650 = !DILocation(line: 259, column: 1, scope: !16643)
!16651 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2520, file: !2520, line: 996, type: !334, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16652)
!16652 = !{!16653, !16655}
!16653 = !DILocalVariable(name: "__i", scope: !16654, file: !2520, line: 998, type: !15408)
!16654 = distinct !DILexicalBlock(scope: !16651, file: !2520, line: 998, column: 2)
!16655 = !DILocalVariable(name: "__key", scope: !16654, file: !2520, line: 998, type: !15408)
!16656 = !DILocation(line: 0, scope: !16654)
!16657 = !DILocation(line: 0, scope: !15416, inlinedAt: !16658)
!16658 = distinct !DILocation(line: 998, column: 2, scope: !16654)
!16659 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16660)
!16660 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16658)
!16661 = !DILocation(line: 0, scope: !15425, inlinedAt: !16660)
!16662 = !DILocation(line: 1002, column: 5, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16664, file: !2520, line: 998, column: 26)
!16664 = distinct !DILexicalBlock(scope: !16654, file: !2520, line: 998, column: 2)
!16665 = !DILocation(line: 1002, column: 20, scope: !16663)
!16666 = !DILocation(line: 1002, column: 3, scope: !16663)
!16667 = !DILocation(line: 1003, column: 3, scope: !16663)
!16668 = !DILocation(line: 0, scope: !15443, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 998, column: 2, scope: !16664)
!16670 = !DILocation(line: 0, scope: !15451, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !16669)
!16672 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !16671)
!16673 = !DILocation(line: 1011, column: 2, scope: !16651)
!16674 = !DILocation(line: 1012, column: 1, scope: !16651)
!16675 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2520, file: !2520, line: 1014, type: !15724, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!16676 = !DILocation(line: 1028, column: 25, scope: !16675)
!16677 = !DILocation(line: 1028, column: 2, scope: !16675)
!16678 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2520, file: !2520, line: 1155, type: !16679, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16681)
!16679 = !DISubroutineType(types: !16680)
!16680 = !{!131, !2444, !2444}
!16681 = !{!16682, !16683, !16684, !16685, !16686}
!16682 = !DILocalVariable(name: "a", arg: 1, scope: !16678, file: !2520, line: 1155, type: !2444)
!16683 = !DILocalVariable(name: "b", arg: 2, scope: !16678, file: !2520, line: 1155, type: !2444)
!16684 = !DILocalVariable(name: "thread_a", scope: !16678, file: !2520, line: 1157, type: !2415)
!16685 = !DILocalVariable(name: "thread_b", scope: !16678, file: !2520, line: 1157, type: !2415)
!16686 = !DILocalVariable(name: "cmp", scope: !16678, file: !2520, line: 1158, type: !331)
!16687 = !DILocation(line: 0, scope: !16678)
!16688 = !DILocation(line: 1160, column: 13, scope: !16678)
!16689 = !DILocation(line: 1161, column: 13, scope: !16678)
!16690 = !DILocation(line: 1163, column: 8, scope: !16678)
!16691 = !DILocation(line: 1165, column: 10, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16678, file: !2520, line: 1165, column: 6)
!16693 = !DILocation(line: 1165, column: 6, scope: !16678)
!16694 = !DILocation(line: 1167, column: 17, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16692, file: !2520, line: 1167, column: 13)
!16696 = !DILocation(line: 1167, column: 13, scope: !16692)
!16697 = !DILocation(line: 1170, column: 25, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16695, file: !2520, line: 1169, column: 9)
!16699 = !DILocation(line: 1170, column: 52, scope: !16698)
!16700 = !DILocation(line: 1170, column: 35, scope: !16698)
!16701 = !DILocation(line: 1170, column: 3, scope: !16698)
!16702 = !DILocation(line: 0, scope: !16692)
!16703 = !DILocation(line: 1173, column: 1, scope: !16678)
!16704 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2520, file: !2520, line: 1175, type: !16705, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16720)
!16705 = !DISubroutineType(types: !16706)
!16706 = !{null, !16707, !2415}
!16707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16708, size: 32)
!16708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16709, line: 37, size: 128, elements: !16710)
!16709 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16710 = !{!16711, !16719}
!16711 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16708, file: !16709, line: 38, baseType: !16712, size: 96)
!16712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !175, line: 83, size: 96, elements: !16713)
!16713 = !{!16714, !16715, !16718}
!16714 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16712, file: !175, line: 84, baseType: !2444, size: 32)
!16715 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16712, file: !175, line: 85, baseType: !16716, size: 32, offset: 32)
!16716 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !175, line: 81, baseType: !16717)
!16717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16679, size: 32)
!16718 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16712, file: !175, line: 86, baseType: !103, size: 32, offset: 64)
!16719 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16708, file: !16709, line: 39, baseType: !103, size: 32, offset: 96)
!16720 = !{!16721, !16722, !16723, !16724, !16733}
!16721 = !DILocalVariable(name: "pq", arg: 1, scope: !16704, file: !2520, line: 1175, type: !16707)
!16722 = !DILocalVariable(name: "thread", arg: 2, scope: !16704, file: !2520, line: 1175, type: !2415)
!16723 = !DILocalVariable(name: "t", scope: !16704, file: !2520, line: 1177, type: !2415)
!16724 = !DILocalVariable(name: "__f", scope: !16725, file: !2520, line: 1190, type: !16728)
!16725 = distinct !DILexicalBlock(scope: !16726, file: !2520, line: 1190, column: 3)
!16726 = distinct !DILexicalBlock(scope: !16727, file: !2520, line: 1189, column: 27)
!16727 = distinct !DILexicalBlock(scope: !16704, file: !2520, line: 1189, column: 6)
!16728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !175, line: 155, size: 96, elements: !16729)
!16729 = !{!16730, !16731, !16732}
!16730 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16728, file: !175, line: 156, baseType: !2515, size: 32)
!16731 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16728, file: !175, line: 157, baseType: !379, size: 32, offset: 32)
!16732 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16728, file: !175, line: 158, baseType: !331, size: 32, offset: 64)
!16733 = !DILocalVariable(name: "n", scope: !16734, file: !2520, line: 1190, type: !2444)
!16734 = distinct !DILexicalBlock(scope: !16735, file: !2520, line: 1190, column: 3)
!16735 = distinct !DILexicalBlock(scope: !16725, file: !2520, line: 1190, column: 3)
!16736 = !DILocation(line: 0, scope: !16704)
!16737 = !DILocation(line: 1181, column: 31, scope: !16704)
!16738 = !DILocation(line: 1181, column: 45, scope: !16704)
!16739 = !DILocation(line: 1181, column: 15, scope: !16704)
!16740 = !DILocation(line: 1181, column: 25, scope: !16704)
!16741 = !DILocation(line: 1189, column: 11, scope: !16727)
!16742 = !DILocation(line: 1189, column: 7, scope: !16727)
!16743 = !DILocation(line: 1189, column: 6, scope: !16704)
!16744 = !DILocation(line: 1190, column: 3, scope: !16725)
!16745 = !DILocation(line: 1190, column: 3, scope: !16734)
!16746 = !DILocation(line: 0, scope: !16734)
!16747 = !DILocation(line: 1190, column: 3, scope: !16735)
!16748 = !DILocation(line: 1193, column: 2, scope: !16726)
!16749 = !DILocation(line: 1191, column: 42, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16735, file: !2520, line: 1190, column: 54)
!16751 = !DILocation(line: 1191, column: 12, scope: !16750)
!16752 = !DILocation(line: 1191, column: 22, scope: !16750)
!16753 = distinct !{!16753, !16744, !16754}
!16754 = !DILocation(line: 1192, column: 3, scope: !16725)
!16755 = !DILocation(line: 1195, column: 17, scope: !16704)
!16756 = !DILocation(line: 1195, column: 37, scope: !16704)
!16757 = !DILocation(line: 1195, column: 2, scope: !16704)
!16758 = !DILocation(line: 1196, column: 1, scope: !16704)
!16759 = !DISubprogram(name: "z_rb_foreach_next", scope: !175, file: !175, line: 176, type: !16760, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16760 = !DISubroutineType(types: !16761)
!16761 = !{!2444, !16762, !16763}
!16762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16712, size: 32)
!16763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16728, size: 32)
!16764 = !DISubprogram(name: "rb_insert", scope: !175, file: !175, line: 105, type: !16765, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16765 = !DISubroutineType(types: !16766)
!16766 = !{null, !16762, !2444}
!16767 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2520, file: !2520, line: 1198, type: !16705, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16768)
!16768 = !{!16769, !16770}
!16769 = !DILocalVariable(name: "pq", arg: 1, scope: !16767, file: !2520, line: 1198, type: !16707)
!16770 = !DILocalVariable(name: "thread", arg: 2, scope: !16767, file: !2520, line: 1198, type: !2415)
!16771 = !DILocation(line: 0, scope: !16767)
!16772 = !DILocation(line: 1202, column: 17, scope: !16767)
!16773 = !DILocation(line: 1202, column: 37, scope: !16767)
!16774 = !DILocation(line: 1202, column: 2, scope: !16767)
!16775 = !DILocation(line: 1204, column: 16, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16767, file: !2520, line: 1204, column: 6)
!16777 = !DILocation(line: 1204, column: 7, scope: !16776)
!16778 = !DILocation(line: 1204, column: 6, scope: !16767)
!16779 = !DILocation(line: 1205, column: 7, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16776, file: !2520, line: 1204, column: 22)
!16781 = !DILocation(line: 1205, column: 22, scope: !16780)
!16782 = !DILocation(line: 1206, column: 2, scope: !16780)
!16783 = !DILocation(line: 1207, column: 1, scope: !16767)
!16784 = !DISubprogram(name: "rb_remove", scope: !175, file: !175, line: 110, type: !16765, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16785 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2520, file: !2520, line: 1209, type: !16786, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16788)
!16786 = !DISubroutineType(types: !16787)
!16787 = !{!2415, !16707}
!16788 = !{!16789, !16790, !16791}
!16789 = !DILocalVariable(name: "pq", arg: 1, scope: !16785, file: !2520, line: 1209, type: !16707)
!16790 = !DILocalVariable(name: "thread", scope: !16785, file: !2520, line: 1211, type: !2415)
!16791 = !DILocalVariable(name: "n", scope: !16785, file: !2520, line: 1212, type: !2444)
!16792 = !DILocation(line: 0, scope: !16785)
!16793 = !DILocation(line: 1212, column: 37, scope: !16785)
!16794 = !DILocation(line: 1212, column: 21, scope: !16785)
!16795 = !DILocation(line: 1217, column: 2, scope: !16785)
!16796 = distinct !DISubprogram(name: "rb_get_min", scope: !175, file: !175, line: 115, type: !16797, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16799)
!16797 = !DISubroutineType(types: !16798)
!16798 = !{!2444, !16762}
!16799 = !{!16800}
!16800 = !DILocalVariable(name: "tree", arg: 1, scope: !16796, file: !175, line: 115, type: !16762)
!16801 = !DILocation(line: 0, scope: !16796)
!16802 = !DILocation(line: 117, column: 9, scope: !16796)
!16803 = !DILocation(line: 117, column: 2, scope: !16796)
!16804 = !DISubprogram(name: "z_rb_get_minmax", scope: !175, file: !175, line: 100, type: !16805, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16805 = !DISubroutineType(types: !16806)
!16806 = !{!2444, !16762, !185}
!16807 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2520, file: !2520, line: 1246, type: !16808, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16818)
!16808 = !DISubroutineType(types: !16809)
!16809 = !{!2415, !16810}
!16810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16811, size: 32)
!16811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16709, line: 53, size: 2080, elements: !16812)
!16812 = !{!16813, !16817}
!16813 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16811, file: !16709, line: 54, baseType: !16814, size: 2048)
!16814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2451, size: 2048, elements: !16815)
!16815 = !{!16816}
!16816 = !DISubrange(count: 32)
!16817 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16811, file: !16709, line: 55, baseType: !32, size: 32, offset: 2048)
!16818 = !{!16819, !16820, !16821, !16822}
!16819 = !DILocalVariable(name: "pq", arg: 1, scope: !16807, file: !2520, line: 1246, type: !16810)
!16820 = !DILocalVariable(name: "thread", scope: !16807, file: !2520, line: 1252, type: !2415)
!16821 = !DILocalVariable(name: "l", scope: !16807, file: !2520, line: 1253, type: !15619)
!16822 = !DILocalVariable(name: "n", scope: !16807, file: !2520, line: 1254, type: !2516)
!16823 = !DILocation(line: 0, scope: !16807)
!16824 = !DILocation(line: 1248, column: 11, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16807, file: !2520, line: 1248, column: 6)
!16826 = !DILocation(line: 1248, column: 7, scope: !16825)
!16827 = !DILocation(line: 1248, column: 6, scope: !16807)
!16828 = !DILocation(line: 1253, column: 31, scope: !16807)
!16829 = !DILocation(line: 1253, column: 20, scope: !16807)
!16830 = !DILocation(line: 1254, column: 19, scope: !16807)
!16831 = !DILocation(line: 1260, column: 1, scope: !16807)
!16832 = distinct !DISubprogram(name: "z_unpend_all", scope: !2520, file: !2520, line: 1262, type: !16833, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16835)
!16833 = !DISubroutineType(types: !16834)
!16834 = !{!103, !2446}
!16835 = !{!16836, !16837, !16838}
!16836 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16832, file: !2520, line: 1262, type: !2446)
!16837 = !DILocalVariable(name: "need_sched", scope: !16832, file: !2520, line: 1264, type: !103)
!16838 = !DILocalVariable(name: "thread", scope: !16832, file: !2520, line: 1265, type: !2415)
!16839 = !DILocation(line: 0, scope: !16832)
!16840 = !DILocation(line: 1267, column: 19, scope: !16832)
!16841 = !DILocation(line: 1267, column: 41, scope: !16832)
!16842 = !DILocation(line: 1267, column: 2, scope: !16832)
!16843 = !DILocation(line: 1268, column: 3, scope: !16844)
!16844 = distinct !DILexicalBlock(scope: !16832, file: !2520, line: 1267, column: 50)
!16845 = !DILocation(line: 1269, column: 3, scope: !16844)
!16846 = distinct !{!16846, !16842, !16847}
!16847 = !DILocation(line: 1271, column: 2, scope: !16832)
!16848 = !DILocation(line: 1273, column: 2, scope: !16832)
!16849 = distinct !DISubprogram(name: "z_waitq_head", scope: !14271, file: !14271, line: 52, type: !16465, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16850)
!16850 = !{!16851}
!16851 = !DILocalVariable(name: "w", arg: 1, scope: !16849, file: !14271, line: 52, type: !2446)
!16852 = !DILocation(line: 0, scope: !16849)
!16853 = !DILocation(line: 54, column: 52, scope: !16849)
!16854 = !DILocation(line: 54, column: 28, scope: !16849)
!16855 = !DILocation(line: 54, column: 9, scope: !16849)
!16856 = !DILocation(line: 54, column: 2, scope: !16849)
!16857 = distinct !DISubprogram(name: "init_ready_q", scope: !2520, file: !2520, line: 1276, type: !16858, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16865)
!16858 = !DISubroutineType(types: !16859)
!16859 = !{null, !16860}
!16860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16861, size: 32)
!16861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !16862)
!16862 = !{!16863, !16864}
!16863 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16861, file: !141, line: 86, baseType: !2415, size: 32)
!16864 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16861, file: !141, line: 90, baseType: !2451, size: 64, offset: 32)
!16865 = !{!16866}
!16866 = !DILocalVariable(name: "rq", arg: 1, scope: !16857, file: !2520, line: 1276, type: !16860)
!16867 = !DILocation(line: 0, scope: !16857)
!16868 = !DILocation(line: 1289, column: 22, scope: !16857)
!16869 = !DILocation(line: 1289, column: 2, scope: !16857)
!16870 = !DILocation(line: 1291, column: 1, scope: !16857)
!16871 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !16872, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16874)
!16872 = !DISubroutineType(types: !16873)
!16873 = !{null, !15619}
!16874 = !{!16875}
!16875 = !DILocalVariable(name: "list", arg: 1, scope: !16871, file: !146, line: 197, type: !15619)
!16876 = !DILocation(line: 0, scope: !16871)
!16877 = !DILocation(line: 199, column: 8, scope: !16871)
!16878 = !DILocation(line: 199, column: 13, scope: !16871)
!16879 = !DILocation(line: 200, column: 8, scope: !16871)
!16880 = !DILocation(line: 200, column: 13, scope: !16871)
!16881 = !DILocation(line: 201, column: 1, scope: !16871)
!16882 = distinct !DISubprogram(name: "z_sched_init", scope: !2520, file: !2520, line: 1293, type: !334, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!16883 = !DILocation(line: 1302, column: 2, scope: !16882)
!16884 = !DILocation(line: 1306, column: 2, scope: !16882)
!16885 = !DILocation(line: 1309, column: 1, scope: !16882)
!16886 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2520, file: !2520, line: 1311, type: !16887, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16890)
!16887 = !DISubroutineType(types: !16888)
!16888 = !{!103, !16889}
!16889 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2415)
!16890 = !{!16891}
!16891 = !DILocalVariable(name: "thread", arg: 1, scope: !16886, file: !2520, line: 1311, type: !16889)
!16892 = !DILocation(line: 0, scope: !16886)
!16893 = !DILocation(line: 1313, column: 22, scope: !16886)
!16894 = !DILocation(line: 1313, column: 9, scope: !16886)
!16895 = !DILocation(line: 1313, column: 2, scope: !16886)
!16896 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2520, file: !2520, line: 1325, type: !16897, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16899)
!16897 = !DISubroutineType(types: !16898)
!16898 = !{null, !16889, !103}
!16899 = !{!16900, !16901, !16902}
!16900 = !DILocalVariable(name: "thread", arg: 1, scope: !16896, file: !2520, line: 1325, type: !16889)
!16901 = !DILocalVariable(name: "prio", arg: 2, scope: !16896, file: !2520, line: 1325, type: !103)
!16902 = !DILocalVariable(name: "th", scope: !16896, file: !2520, line: 1334, type: !2415)
!16903 = !DILocation(line: 0, scope: !16896)
!16904 = !DILocation(line: 1336, column: 2, scope: !16896)
!16905 = !DILocation(line: 1337, column: 1, scope: !16896)
!16906 = distinct !DISubprogram(name: "k_can_yield", scope: !2520, file: !2520, line: 1384, type: !8332, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!16907 = !DILocation(line: 1386, column: 11, scope: !16906)
!16908 = !DILocation(line: 1386, column: 29, scope: !16906)
!16909 = !DILocation(line: 1386, column: 32, scope: !16906)
!16910 = !DILocation(line: 1386, column: 46, scope: !16906)
!16911 = !DILocation(line: 1387, column: 28, scope: !16906)
!16912 = !DILocation(line: 1387, column: 4, scope: !16906)
!16913 = !DILocation(line: 1386, column: 2, scope: !16906)
!16914 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !137, file: !137, line: 989, type: !8332, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!16915 = !DILocation(line: 993, column: 10, scope: !16914)
!16916 = !DILocation(line: 993, column: 2, scope: !16914)
!16917 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2520, file: !2520, line: 1390, type: !334, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16918)
!16918 = !{!16919}
!16919 = !DILocalVariable(name: "key", scope: !16917, file: !2520, line: 1396, type: !15408)
!16920 = !DILocation(line: 0, scope: !15416, inlinedAt: !16921)
!16921 = distinct !DILocation(line: 1396, column: 25, scope: !16917)
!16922 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !16923)
!16923 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !16921)
!16924 = !DILocation(line: 0, scope: !15425, inlinedAt: !16923)
!16925 = !DILocation(line: 0, scope: !16917)
!16926 = !DILocation(line: 1400, column: 18, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16928, file: !2520, line: 1399, column: 36)
!16928 = distinct !DILexicalBlock(scope: !16917, file: !2520, line: 1398, column: 6)
!16929 = !DILocation(line: 0, scope: !15585, inlinedAt: !16930)
!16930 = distinct !DILocation(line: 1400, column: 3, scope: !16927)
!16931 = !DILocation(line: 266, column: 15, scope: !15585, inlinedAt: !16930)
!16932 = !DILocation(line: 266, column: 28, scope: !15585, inlinedAt: !16930)
!16933 = !DILocation(line: 0, scope: !15593, inlinedAt: !16934)
!16934 = distinct !DILocation(line: 268, column: 3, scope: !15597, inlinedAt: !16930)
!16935 = !DILocation(line: 234, column: 2, scope: !15593, inlinedAt: !16934)
!16936 = !DILocation(line: 1402, column: 15, scope: !16917)
!16937 = !DILocation(line: 0, scope: !15602, inlinedAt: !16938)
!16938 = distinct !DILocation(line: 1402, column: 2, scope: !16917)
!16939 = !DILocation(line: 252, column: 15, scope: !15602, inlinedAt: !16938)
!16940 = !DILocation(line: 252, column: 28, scope: !15602, inlinedAt: !16938)
!16941 = !DILocation(line: 0, scope: !15609, inlinedAt: !16942)
!16942 = distinct !DILocation(line: 254, column: 3, scope: !15613, inlinedAt: !16938)
!16943 = !DILocation(line: 0, scope: !15616, inlinedAt: !16944)
!16944 = distinct !DILocation(line: 229, column: 2, scope: !15609, inlinedAt: !16942)
!16945 = !DILocation(line: 188, column: 2, scope: !15626, inlinedAt: !16944)
!16946 = !DILocation(line: 188, column: 2, scope: !15628, inlinedAt: !16944)
!16947 = !DILocation(line: 0, scope: !15626, inlinedAt: !16944)
!16948 = !DILocation(line: 189, column: 7, scope: !15631, inlinedAt: !16944)
!16949 = !DILocation(line: 189, column: 35, scope: !15631, inlinedAt: !16944)
!16950 = !DILocation(line: 189, column: 7, scope: !15632, inlinedAt: !16944)
!16951 = !DILocation(line: 191, column: 21, scope: !15636, inlinedAt: !16944)
!16952 = !DILocation(line: 190, column: 4, scope: !15636, inlinedAt: !16944)
!16953 = !DILocation(line: 192, column: 4, scope: !15636, inlinedAt: !16944)
!16954 = distinct !{!16954, !16945, !16955}
!16955 = !DILocation(line: 194, column: 2, scope: !15626, inlinedAt: !16944)
!16956 = !DILocation(line: 196, column: 37, scope: !15616, inlinedAt: !16944)
!16957 = !DILocation(line: 196, column: 2, scope: !15616, inlinedAt: !16944)
!16958 = !DILocation(line: 197, column: 1, scope: !15616, inlinedAt: !16944)
!16959 = !DILocation(line: 1403, column: 2, scope: !16917)
!16960 = !DILocation(line: 0, scope: !16025, inlinedAt: !16961)
!16961 = distinct !DILocation(line: 1404, column: 2, scope: !16917)
!16962 = !DILocation(line: 196, column: 9, scope: !16025, inlinedAt: !16961)
!16963 = !DILocation(line: 1405, column: 1, scope: !16917)
!16964 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2520, file: !2520, line: 1459, type: !16965, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16967)
!16965 = !DISubroutineType(types: !16966)
!16966 = !{!331, !16205}
!16967 = !{!16968, !16969, !16970}
!16968 = !DILocalVariable(name: "timeout", arg: 1, scope: !16964, file: !2520, line: 1459, type: !16205)
!16969 = !DILocalVariable(name: "ticks", scope: !16964, file: !2520, line: 1461, type: !104)
!16970 = !DILocalVariable(name: "ret", scope: !16964, file: !2520, line: 1480, type: !331)
!16971 = !DILocation(line: 0, scope: !16964)
!16972 = !DILocation(line: 1468, column: 6, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16964, file: !2520, line: 1468, column: 6)
!16974 = !DILocation(line: 1468, column: 6, scope: !16964)
!16975 = !DILocation(line: 1469, column: 20, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16973, file: !2520, line: 1468, column: 40)
!16977 = !DILocation(line: 1469, column: 3, scope: !16976)
!16978 = !DILocation(line: 1473, column: 3, scope: !16976)
!16979 = !DILocation(line: 1478, column: 10, scope: !16964)
!16980 = !DILocation(line: 1480, column: 16, scope: !16964)
!16981 = !DILocation(line: 1485, column: 1, scope: !16964)
!16982 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3611, file: !3611, line: 310, type: !16983, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16985)
!16983 = !DISubroutineType(types: !16984)
!16984 = !{null, !16889}
!16985 = !{!16986}
!16986 = !DILocalVariable(name: "thread", arg: 1, scope: !16982, file: !3611, line: 310, type: !16889)
!16987 = !DILocation(line: 0, scope: !16982)
!16988 = !DILocation(line: 319, column: 2, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16982, file: !3611, line: 319, column: 2)
!16990 = !{i64 2154785851}
!16991 = !DILocation(line: 320, column: 2, scope: !16982)
!16992 = !DILocation(line: 321, column: 1, scope: !16982)
!16993 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2520, file: !2520, line: 1415, type: !16994, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !16996)
!16994 = !DISubroutineType(types: !16995)
!16995 = !{!331, !104}
!16996 = !{!16997, !16998, !16999, !17000}
!16997 = !DILocalVariable(name: "ticks", arg: 1, scope: !16993, file: !2520, line: 1415, type: !104)
!16998 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16993, file: !2520, line: 1418, type: !108)
!16999 = !DILocalVariable(name: "timeout", scope: !16993, file: !2520, line: 1430, type: !16205)
!17000 = !DILocalVariable(name: "key", scope: !16993, file: !2520, line: 1437, type: !15408)
!17001 = !DILocation(line: 0, scope: !16993)
!17002 = !DILocation(line: 1425, column: 12, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !16993, file: !2520, line: 1425, column: 6)
!17004 = !DILocation(line: 1425, column: 6, scope: !16993)
!17005 = !DILocation(line: 1426, column: 3, scope: !17006)
!17006 = distinct !DILexicalBlock(scope: !17003, file: !2520, line: 1425, column: 18)
!17007 = !DILocation(line: 1427, column: 3, scope: !17006)
!17008 = !DILocation(line: 1431, column: 24, scope: !17009)
!17009 = distinct !DILexicalBlock(scope: !16993, file: !2520, line: 1431, column: 6)
!17010 = !DILocation(line: 1431, column: 6, scope: !16993)
!17011 = !DILocation(line: 1432, column: 35, scope: !17012)
!17012 = distinct !DILexicalBlock(scope: !17009, file: !2520, line: 1431, column: 30)
!17013 = !DILocation(line: 1432, column: 27, scope: !17012)
!17014 = !DILocation(line: 1433, column: 2, scope: !17012)
!17015 = !DILocation(line: 1434, column: 27, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !17009, file: !2520, line: 1433, column: 9)
!17017 = !DILocation(line: 0, scope: !17009)
!17018 = !DILocation(line: 0, scope: !15416, inlinedAt: !17019)
!17019 = distinct !DILocation(line: 1437, column: 25, scope: !16993)
!17020 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !17021)
!17021 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !17019)
!17022 = !DILocation(line: 0, scope: !15425, inlinedAt: !17021)
!17023 = !DILocation(line: 1440, column: 20, scope: !16993)
!17024 = !DILocation(line: 1440, column: 18, scope: !16993)
!17025 = !DILocation(line: 1442, column: 2, scope: !16993)
!17026 = !DILocation(line: 1443, column: 23, scope: !16993)
!17027 = !DILocation(line: 1443, column: 2, scope: !16993)
!17028 = !DILocation(line: 1444, column: 29, scope: !16993)
!17029 = !DILocation(line: 1444, column: 2, scope: !16993)
!17030 = !DILocation(line: 0, scope: !16025, inlinedAt: !17031)
!17031 = distinct !DILocation(line: 1446, column: 8, scope: !16993)
!17032 = !DILocation(line: 196, column: 9, scope: !16025, inlinedAt: !17031)
!17033 = !DILocation(line: 1450, column: 10, scope: !16993)
!17034 = !DILocation(line: 1450, column: 45, scope: !16993)
!17035 = !DILocation(line: 1450, column: 43, scope: !16993)
!17036 = !DILocation(line: 1451, column: 6, scope: !16993)
!17037 = !DILocation(line: 1457, column: 1, scope: !16993)
!17038 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3597, file: !3597, line: 1103, type: !3598, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17039)
!17039 = !{!17040}
!17040 = !DILocalVariable(name: "t", arg: 1, scope: !17038, file: !3597, line: 1103, type: !109)
!17041 = !DILocation(line: 0, scope: !17038)
!17042 = !DILocation(line: 0, scope: !15463, inlinedAt: !17043)
!17043 = distinct !DILocation(line: 1106, column: 9, scope: !17038)
!17044 = !DILocation(line: 139, column: 13, scope: !17045, inlinedAt: !17043)
!17045 = distinct !DILexicalBlock(scope: !17046, file: !3597, line: 138, column: 10)
!17046 = distinct !DILexicalBlock(scope: !17047, file: !3597, line: 136, column: 7)
!17047 = distinct !DILexicalBlock(scope: !15484, file: !3597, line: 134, column: 17)
!17048 = !DILocation(line: 1106, column: 2, scope: !17038)
!17049 = distinct !DISubprogram(name: "k_yield", scope: !3611, file: !3611, line: 140, type: !334, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!17050 = !DILocation(line: 148, column: 2, scope: !17051)
!17051 = distinct !DILexicalBlock(scope: !17049, file: !3611, line: 148, column: 2)
!17052 = !{i64 2154785171}
!17053 = !DILocation(line: 149, column: 2, scope: !17049)
!17054 = !DILocation(line: 150, column: 1, scope: !17049)
!17055 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2520, file: !2520, line: 1495, type: !17056, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17058)
!17056 = !DISubroutineType(types: !17057)
!17057 = !{!331, !103}
!17058 = !{!17059, !17060}
!17059 = !DILocalVariable(name: "us", arg: 1, scope: !17055, file: !2520, line: 1495, type: !103)
!17060 = !DILocalVariable(name: "ticks", scope: !17055, file: !2520, line: 1497, type: !331)
!17061 = !DILocation(line: 0, scope: !17055)
!17062 = !DILocation(line: 1501, column: 31, scope: !17055)
!17063 = !DILocation(line: 1501, column: 10, scope: !17055)
!17064 = !DILocation(line: 1502, column: 23, scope: !17055)
!17065 = !DILocation(line: 1502, column: 10, scope: !17055)
!17066 = !DILocation(line: 1506, column: 31, scope: !17055)
!17067 = !DILocation(line: 1506, column: 9, scope: !17055)
!17068 = !DILocation(line: 1506, column: 2, scope: !17055)
!17069 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3597, file: !3597, line: 571, type: !3598, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17070)
!17070 = !{!17071}
!17071 = !DILocalVariable(name: "t", arg: 1, scope: !17069, file: !3597, line: 571, type: !109)
!17072 = !DILocation(line: 0, scope: !17069)
!17073 = !DILocation(line: 0, scope: !15463, inlinedAt: !17074)
!17074 = distinct !DILocation(line: 574, column: 9, scope: !17069)
!17075 = !DILocation(line: 135, column: 5, scope: !17047, inlinedAt: !17074)
!17076 = !DILocation(line: 139, column: 13, scope: !17045, inlinedAt: !17074)
!17077 = !DILocation(line: 574, column: 2, scope: !17069)
!17078 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3597, file: !3597, line: 1187, type: !3598, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17079)
!17079 = !{!17080}
!17080 = !DILocalVariable(name: "t", arg: 1, scope: !17078, file: !3597, line: 1187, type: !109)
!17081 = !DILocation(line: 0, scope: !17078)
!17082 = !DILocation(line: 0, scope: !15463, inlinedAt: !17083)
!17083 = distinct !DILocation(line: 1190, column: 9, scope: !17078)
!17084 = !DILocation(line: 145, column: 13, scope: !17085, inlinedAt: !17083)
!17085 = distinct !DILexicalBlock(scope: !15481, file: !3597, line: 144, column: 10)
!17086 = !DILocation(line: 1190, column: 2, scope: !17078)
!17087 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2520, file: !2520, line: 1517, type: !16983, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17088)
!17088 = !{!17089}
!17089 = !DILocalVariable(name: "thread", arg: 1, scope: !17087, file: !2520, line: 1517, type: !16889)
!17090 = !DILocation(line: 0, scope: !17087)
!17091 = !DILocation(line: 1521, column: 6, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17087, file: !2520, line: 1521, column: 6)
!17093 = !DILocation(line: 1521, column: 6, scope: !17087)
!17094 = !DILocation(line: 1525, column: 6, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17087, file: !2520, line: 1525, column: 6)
!17096 = !DILocation(line: 1525, column: 37, scope: !17095)
!17097 = !DILocation(line: 1525, column: 6, scope: !17087)
!17098 = !DILocation(line: 1527, column: 20, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17100, file: !2520, line: 1527, column: 7)
!17100 = distinct !DILexicalBlock(scope: !17095, file: !2520, line: 1525, column: 42)
!17101 = !DILocation(line: 1527, column: 33, scope: !17099)
!17102 = !DILocation(line: 1527, column: 7, scope: !17100)
!17103 = !DILocation(line: 1532, column: 2, scope: !17087)
!17104 = !DILocation(line: 1533, column: 2, scope: !17087)
!17105 = !DILocation(line: 1031, column: 3, scope: !16058, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 48, column: 10, scope: !16062, inlinedAt: !17107)
!17107 = distinct !DILocation(line: 1537, column: 7, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17087, file: !2520, line: 1537, column: 6)
!17109 = !DILocation(line: 0, scope: !16058, inlinedAt: !17106)
!17110 = !DILocation(line: 48, column: 9, scope: !16062, inlinedAt: !17107)
!17111 = !DILocation(line: 1537, column: 6, scope: !17087)
!17112 = !DILocation(line: 1538, column: 3, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17108, file: !2520, line: 1537, column: 25)
!17114 = !DILocation(line: 1539, column: 2, scope: !17113)
!17115 = !DILocation(line: 1540, column: 1, scope: !17087)
!17116 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13946, file: !13946, line: 101, type: !15534, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17117)
!17117 = !{!17118}
!17118 = !DILocalVariable(name: "thread", arg: 1, scope: !17116, file: !13946, line: 101, type: !2415)
!17119 = !DILocation(line: 0, scope: !17116)
!17120 = !DILocation(line: 103, column: 23, scope: !17116)
!17121 = !DILocation(line: 103, column: 36, scope: !17116)
!17122 = !DILocation(line: 103, column: 55, scope: !17116)
!17123 = !DILocation(line: 103, column: 2, scope: !17116)
!17124 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2520, file: !2520, line: 1567, type: !17125, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17127)
!17125 = !DISubroutineType(types: !17126)
!17126 = !{!16889}
!17127 = !{!17128}
!17128 = !DILocalVariable(name: "ret", scope: !17124, file: !2520, line: 1577, type: !16889)
!17129 = !DILocation(line: 1577, column: 30, scope: !17124)
!17130 = !DILocation(line: 0, scope: !17124)
!17131 = !DILocation(line: 1582, column: 2, scope: !17124)
!17132 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2520, file: !2520, line: 1593, type: !8620, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !251)
!17133 = !DILocation(line: 1031, column: 3, scope: !16058, inlinedAt: !17134)
!17134 = distinct !DILocation(line: 48, column: 10, scope: !16062, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 1595, column: 10, scope: !17132)
!17136 = !DILocation(line: 0, scope: !16058, inlinedAt: !17134)
!17137 = !DILocation(line: 48, column: 9, scope: !16062, inlinedAt: !17135)
!17138 = !DILocation(line: 1595, column: 27, scope: !17132)
!17139 = !DILocation(line: 1595, column: 41, scope: !17132)
!17140 = !DILocation(line: 1595, column: 30, scope: !17132)
!17141 = !DILocation(line: 1595, column: 2, scope: !17132)
!17142 = distinct !DISubprogram(name: "z_thread_abort", scope: !2520, file: !2520, line: 1725, type: !15374, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17143)
!17143 = !{!17144, !17145}
!17144 = !DILocalVariable(name: "thread", arg: 1, scope: !17142, file: !2520, line: 1725, type: !2415)
!17145 = !DILocalVariable(name: "key", scope: !17142, file: !2520, line: 1727, type: !15408)
!17146 = !DILocation(line: 0, scope: !17142)
!17147 = !DILocation(line: 0, scope: !15416, inlinedAt: !17148)
!17148 = distinct !DILocation(line: 1727, column: 25, scope: !17142)
!17149 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !17150)
!17150 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !17148)
!17151 = !DILocation(line: 0, scope: !15425, inlinedAt: !17150)
!17152 = !DILocation(line: 1729, column: 20, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17142, file: !2520, line: 1729, column: 6)
!17154 = !DILocation(line: 1729, column: 33, scope: !17153)
!17155 = !DILocation(line: 1729, column: 48, scope: !17153)
!17156 = !DILocation(line: 1729, column: 6, scope: !17142)
!17157 = !DILocation(line: 0, scope: !15443, inlinedAt: !17158)
!17158 = distinct !DILocation(line: 1730, column: 3, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17153, file: !2520, line: 1729, column: 54)
!17160 = !DILocation(line: 0, scope: !15451, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !17158)
!17162 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !17161)
!17163 = !DILocation(line: 1732, column: 3, scope: !17164)
!17164 = distinct !DILexicalBlock(scope: !17159, file: !2520, line: 1732, column: 3)
!17165 = !{i64 2155521167, i64 2155521183, i64 2155521209, i64 2155521237, i64 2155521257}
!17166 = !DILocation(line: 1733, column: 3, scope: !17159)
!17167 = !DILocation(line: 1736, column: 20, scope: !17168)
!17168 = distinct !DILexicalBlock(scope: !17142, file: !2520, line: 1736, column: 6)
!17169 = !DILocation(line: 1736, column: 33, scope: !17168)
!17170 = !DILocation(line: 1736, column: 49, scope: !17168)
!17171 = !DILocation(line: 1736, column: 6, scope: !17142)
!17172 = !DILocation(line: 0, scope: !15443, inlinedAt: !17173)
!17173 = distinct !DILocation(line: 1737, column: 3, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17168, file: !2520, line: 1736, column: 56)
!17175 = !DILocation(line: 0, scope: !15451, inlinedAt: !17176)
!17176 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !17173)
!17177 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !17176)
!17178 = !DILocation(line: 1738, column: 3, scope: !17174)
!17179 = !DILocation(line: 1775, column: 2, scope: !17142)
!17180 = !DILocation(line: 1776, column: 16, scope: !17181)
!17181 = distinct !DILexicalBlock(scope: !17142, file: !2520, line: 1776, column: 6)
!17182 = !DILocation(line: 1776, column: 13, scope: !17181)
!17183 = !DILocation(line: 1776, column: 25, scope: !17181)
!17184 = !DILocation(line: 1031, column: 3, scope: !16058, inlinedAt: !17185)
!17185 = distinct !DILocation(line: 48, column: 10, scope: !16062, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 1776, column: 29, scope: !17181)
!17187 = !DILocation(line: 0, scope: !16058, inlinedAt: !17185)
!17188 = !DILocation(line: 48, column: 9, scope: !16062, inlinedAt: !17186)
!17189 = !DILocation(line: 1776, column: 6, scope: !17142)
!17190 = !DILocation(line: 0, scope: !16025, inlinedAt: !17191)
!17191 = distinct !DILocation(line: 1777, column: 3, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17181, file: !2520, line: 1776, column: 47)
!17193 = !DILocation(line: 196, column: 9, scope: !16025, inlinedAt: !17191)
!17194 = !DILocation(line: 1779, column: 2, scope: !17192)
!17195 = !DILocation(line: 0, scope: !15443, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 1780, column: 2, scope: !17142)
!17197 = !DILocation(line: 0, scope: !15451, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !17196)
!17199 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !17198)
!17200 = !DILocation(line: 1781, column: 1, scope: !17142)
!17201 = distinct !DISubprogram(name: "end_thread", scope: !2520, file: !2520, line: 1690, type: !15374, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17202)
!17202 = !{!17203}
!17203 = !DILocalVariable(name: "thread", arg: 1, scope: !17201, file: !2520, line: 1690, type: !2415)
!17204 = !DILocation(line: 0, scope: !17201)
!17205 = !DILocation(line: 1695, column: 20, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17201, file: !2520, line: 1695, column: 6)
!17207 = !DILocation(line: 1695, column: 33, scope: !17206)
!17208 = !DILocation(line: 1695, column: 49, scope: !17206)
!17209 = !DILocation(line: 1695, column: 6, scope: !17201)
!17210 = !DILocation(line: 1697, column: 29, scope: !17211)
!17211 = distinct !DILexicalBlock(scope: !17206, file: !2520, line: 1695, column: 56)
!17212 = !DILocation(line: 1698, column: 7, scope: !17213)
!17213 = distinct !DILexicalBlock(scope: !17211, file: !2520, line: 1698, column: 7)
!17214 = !DILocation(line: 1698, column: 7, scope: !17211)
!17215 = !DILocation(line: 0, scope: !15585, inlinedAt: !17216)
!17216 = distinct !DILocation(line: 1699, column: 4, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17213, file: !2520, line: 1698, column: 35)
!17218 = !DILocation(line: 266, column: 28, scope: !15585, inlinedAt: !17216)
!17219 = !DILocation(line: 0, scope: !15593, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 268, column: 3, scope: !15597, inlinedAt: !17216)
!17221 = !DILocation(line: 234, column: 2, scope: !15593, inlinedAt: !17220)
!17222 = !DILocation(line: 1700, column: 3, scope: !17217)
!17223 = !DILocation(line: 1701, column: 20, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17211, file: !2520, line: 1701, column: 7)
!17225 = !DILocation(line: 1701, column: 30, scope: !17224)
!17226 = !DILocation(line: 1701, column: 7, scope: !17211)
!17227 = !DILocation(line: 1702, column: 4, scope: !17228)
!17228 = distinct !DILexicalBlock(scope: !17224, file: !2520, line: 1701, column: 39)
!17229 = !DILocation(line: 1703, column: 3, scope: !17228)
!17230 = !DILocation(line: 1704, column: 9, scope: !17211)
!17231 = !DILocation(line: 1705, column: 23, scope: !17211)
!17232 = !DILocation(line: 1705, column: 3, scope: !17211)
!17233 = !DILocation(line: 1706, column: 3, scope: !17211)
!17234 = !DILocation(line: 1722, column: 2, scope: !17211)
!17235 = !DILocation(line: 1723, column: 1, scope: !17201)
!17236 = distinct !DISubprogram(name: "unpend_all", scope: !2520, file: !2520, line: 1674, type: !17237, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17239)
!17237 = !DISubroutineType(types: !17238)
!17238 = !{null, !2446}
!17239 = !{!17240, !17241}
!17240 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17236, file: !2520, line: 1674, type: !2446)
!17241 = !DILocalVariable(name: "thread", scope: !17236, file: !2520, line: 1676, type: !2415)
!17242 = !DILocation(line: 0, scope: !17236)
!17243 = !DILocation(line: 1678, column: 19, scope: !17236)
!17244 = !DILocation(line: 1678, column: 41, scope: !17236)
!17245 = !DILocation(line: 1678, column: 2, scope: !17236)
!17246 = !DILocation(line: 1679, column: 3, scope: !17247)
!17247 = distinct !DILexicalBlock(scope: !17236, file: !2520, line: 1678, column: 50)
!17248 = !DILocation(line: 1680, column: 9, scope: !17247)
!17249 = !DILocalVariable(name: "thread", arg: 1, scope: !17250, file: !13966, line: 65, type: !2415)
!17250 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13966, file: !13966, line: 65, type: !17251, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17253)
!17251 = !DISubroutineType(types: !17252)
!17252 = !{null, !2415, !32}
!17253 = !{!17249, !17254}
!17254 = !DILocalVariable(name: "value", arg: 2, scope: !17250, file: !13966, line: 65, type: !32)
!17255 = !DILocation(line: 0, scope: !17250, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 1681, column: 3, scope: !17247)
!17257 = !DILocation(line: 67, column: 15, scope: !17250, inlinedAt: !17256)
!17258 = !DILocation(line: 67, column: 33, scope: !17250, inlinedAt: !17256)
!17259 = !DILocation(line: 1682, column: 3, scope: !17247)
!17260 = distinct !{!17260, !17245, !17261}
!17261 = !DILocation(line: 1683, column: 2, scope: !17236)
!17262 = !DILocation(line: 1684, column: 1, scope: !17236)
!17263 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2520, file: !2520, line: 1794, type: !17264, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17266)
!17264 = !DISubroutineType(types: !17265)
!17265 = !{!103, !2415, !16205}
!17266 = !{!17267, !17268, !17269, !17270}
!17267 = !DILocalVariable(name: "thread", arg: 1, scope: !17263, file: !2520, line: 1794, type: !2415)
!17268 = !DILocalVariable(name: "timeout", arg: 2, scope: !17263, file: !2520, line: 1794, type: !16205)
!17269 = !DILocalVariable(name: "key", scope: !17263, file: !2520, line: 1796, type: !15408)
!17270 = !DILocalVariable(name: "ret", scope: !17263, file: !2520, line: 1797, type: !103)
!17271 = !DILocation(line: 0, scope: !17263)
!17272 = !DILocation(line: 0, scope: !15416, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 1796, column: 25, scope: !17263)
!17274 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !17273)
!17276 = !DILocation(line: 0, scope: !15425, inlinedAt: !17275)
!17277 = !DILocation(line: 1801, column: 20, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17263, file: !2520, line: 1801, column: 6)
!17279 = !DILocation(line: 1801, column: 33, scope: !17278)
!17280 = !DILocation(line: 1801, column: 49, scope: !17278)
!17281 = !DILocation(line: 1801, column: 6, scope: !17263)
!17282 = !DILocation(line: 1803, column: 13, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17278, file: !2520, line: 1803, column: 13)
!17284 = !DILocation(line: 1803, column: 13, scope: !17278)
!17285 = !DILocation(line: 1805, column: 24, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17283, file: !2520, line: 1805, column: 13)
!17287 = !DILocation(line: 1805, column: 21, scope: !17286)
!17288 = !DILocation(line: 1805, column: 34, scope: !17286)
!17289 = !DILocation(line: 1806, column: 20, scope: !17286)
!17290 = !DILocation(line: 1806, column: 44, scope: !17286)
!17291 = !DILocation(line: 1806, column: 30, scope: !17286)
!17292 = !DILocation(line: 1805, column: 13, scope: !17283)
!17293 = !DILocation(line: 1810, column: 42, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17286, file: !2520, line: 1808, column: 9)
!17295 = !DILocation(line: 1810, column: 3, scope: !17294)
!17296 = !DILocation(line: 1811, column: 22, scope: !17294)
!17297 = !DILocation(line: 1811, column: 3, scope: !17294)
!17298 = !DILocation(line: 0, scope: !16025, inlinedAt: !17299)
!17299 = distinct !DILocation(line: 1814, column: 9, scope: !17294)
!17300 = !DILocation(line: 196, column: 9, scope: !16025, inlinedAt: !17299)
!17301 = !DILocation(line: 1817, column: 3, scope: !17294)
!17302 = !DILocation(line: 0, scope: !17278)
!17303 = !DILocation(line: 0, scope: !15443, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 1822, column: 2, scope: !17263)
!17305 = !DILocation(line: 0, scope: !15451, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !17304)
!17307 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !17306)
!17308 = !DILocation(line: 1823, column: 2, scope: !17263)
!17309 = !DILocation(line: 1824, column: 1, scope: !17263)
!17310 = distinct !DISubprogram(name: "z_sched_wake", scope: !2520, file: !2520, line: 1882, type: !17311, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17313)
!17311 = !DISubroutineType(types: !17312)
!17312 = !{!131, !2446, !103, !102}
!17313 = !{!17314, !17315, !17316, !17317, !17318, !17319, !17321}
!17314 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17310, file: !2520, line: 1882, type: !2446)
!17315 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17310, file: !2520, line: 1882, type: !103)
!17316 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17310, file: !2520, line: 1882, type: !102)
!17317 = !DILocalVariable(name: "thread", scope: !17310, file: !2520, line: 1884, type: !2415)
!17318 = !DILocalVariable(name: "ret", scope: !17310, file: !2520, line: 1885, type: !131)
!17319 = !DILocalVariable(name: "__i", scope: !17320, file: !2520, line: 1887, type: !15408)
!17320 = distinct !DILexicalBlock(scope: !17310, file: !2520, line: 1887, column: 2)
!17321 = !DILocalVariable(name: "__key", scope: !17320, file: !2520, line: 1887, type: !15408)
!17322 = !DILocation(line: 0, scope: !17310)
!17323 = !DILocation(line: 0, scope: !17320)
!17324 = !DILocation(line: 0, scope: !15416, inlinedAt: !17325)
!17325 = distinct !DILocation(line: 1887, column: 2, scope: !17320)
!17326 = !DILocation(line: 55, column: 2, scope: !15425, inlinedAt: !17327)
!17327 = distinct !DILocation(line: 145, column: 10, scope: !15416, inlinedAt: !17325)
!17328 = !DILocation(line: 0, scope: !15425, inlinedAt: !17327)
!17329 = !DILocation(line: 1888, column: 12, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17331, file: !2520, line: 1887, column: 26)
!17331 = distinct !DILexicalBlock(scope: !17320, file: !2520, line: 1887, column: 2)
!17332 = !DILocation(line: 1890, column: 14, scope: !17333)
!17333 = distinct !DILexicalBlock(scope: !17330, file: !2520, line: 1890, column: 7)
!17334 = !DILocation(line: 1890, column: 7, scope: !17330)
!17335 = !DILocalVariable(name: "thread", arg: 1, scope: !17336, file: !14715, line: 134, type: !2415)
!17336 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14715, file: !14715, line: 134, type: !17337, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17339)
!17337 = !DISubroutineType(types: !17338)
!17338 = !{null, !2415, !32, !102}
!17339 = !{!17335, !17340, !17341}
!17340 = !DILocalVariable(name: "value", arg: 2, scope: !17336, file: !14715, line: 135, type: !32)
!17341 = !DILocalVariable(name: "data", arg: 3, scope: !17336, file: !14715, line: 136, type: !102)
!17342 = !DILocation(line: 0, scope: !17336, inlinedAt: !17343)
!17343 = distinct !DILocation(line: 1891, column: 4, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17333, file: !2520, line: 1890, column: 23)
!17345 = !DILocation(line: 0, scope: !17250, inlinedAt: !17346)
!17346 = distinct !DILocation(line: 138, column: 2, scope: !17336, inlinedAt: !17343)
!17347 = !DILocation(line: 67, column: 15, scope: !17250, inlinedAt: !17346)
!17348 = !DILocation(line: 67, column: 33, scope: !17250, inlinedAt: !17346)
!17349 = !DILocation(line: 139, column: 15, scope: !17336, inlinedAt: !17343)
!17350 = !DILocation(line: 139, column: 25, scope: !17336, inlinedAt: !17343)
!17351 = !DILocation(line: 1894, column: 4, scope: !17344)
!17352 = !DILocation(line: 1895, column: 10, scope: !17344)
!17353 = !DILocation(line: 1896, column: 4, scope: !17344)
!17354 = !DILocation(line: 1898, column: 3, scope: !17344)
!17355 = !DILocation(line: 0, scope: !15443, inlinedAt: !17356)
!17356 = distinct !DILocation(line: 1887, column: 2, scope: !17331)
!17357 = !DILocation(line: 0, scope: !15451, inlinedAt: !17358)
!17358 = distinct !DILocation(line: 215, column: 2, scope: !15443, inlinedAt: !17356)
!17359 = !DILocation(line: 95, column: 2, scope: !15451, inlinedAt: !17358)
!17360 = !DILocation(line: 1901, column: 2, scope: !17310)
!17361 = distinct !DISubprogram(name: "z_sched_wait", scope: !2520, file: !2520, line: 1904, type: !17362, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2412, retainedNodes: !17365)
!17362 = !DISubroutineType(types: !17363)
!17363 = !{!103, !15419, !15408, !2446, !16205, !17364}
!17364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!17365 = !{!17366, !17367, !17368, !17369, !17370, !17371}
!17366 = !DILocalVariable(name: "lock", arg: 1, scope: !17361, file: !2520, line: 1904, type: !15419)
!17367 = !DILocalVariable(name: "key", arg: 2, scope: !17361, file: !2520, line: 1904, type: !15408)
!17368 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17361, file: !2520, line: 1905, type: !2446)
!17369 = !DILocalVariable(name: "timeout", arg: 4, scope: !17361, file: !2520, line: 1905, type: !16205)
!17370 = !DILocalVariable(name: "data", arg: 5, scope: !17361, file: !2520, line: 1905, type: !17364)
!17371 = !DILocalVariable(name: "ret", scope: !17361, file: !2520, line: 1907, type: !103)
!17372 = !DILocation(line: 0, scope: !17361)
!17373 = !DILocation(line: 1907, column: 12, scope: !17361)
!17374 = !DILocation(line: 1909, column: 11, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17361, file: !2520, line: 1909, column: 6)
!17376 = !DILocation(line: 1909, column: 6, scope: !17361)
!17377 = !DILocation(line: 1910, column: 11, scope: !17378)
!17378 = distinct !DILexicalBlock(scope: !17375, file: !2520, line: 1909, column: 20)
!17379 = !DILocation(line: 1910, column: 26, scope: !17378)
!17380 = !DILocation(line: 1910, column: 9, scope: !17378)
!17381 = !DILocation(line: 1911, column: 2, scope: !17378)
!17382 = !DILocation(line: 1912, column: 2, scope: !17361)
!17383 = distinct !DISubprogram(name: "z_data_copy", scope: !17384, file: !17384, line: 22, type: !334, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3336, retainedNodes: !251)
!17384 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17385 = !DILocation(line: 24, column: 2, scope: !17383)
!17386 = !DILocation(line: 27, column: 2, scope: !17383)
!17387 = !DILocation(line: 71, column: 1, scope: !17383)
!17388 = distinct !DISubprogram(name: "z_add_timeout", scope: !2557, file: !2557, line: 88, type: !17389, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17395)
!17389 = !DISubroutineType(types: !17390)
!17390 = !{null, !2530, !2549, !17391}
!17391 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17392)
!17392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17393)
!17393 = !{!17394}
!17394 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17392, file: !105, line: 66, baseType: !104, size: 64)
!17395 = !{!17396, !17397, !17398, !17399, !17405, !17406, !17409, !17412}
!17396 = !DILocalVariable(name: "to", arg: 1, scope: !17388, file: !2557, line: 88, type: !2530)
!17397 = !DILocalVariable(name: "fn", arg: 2, scope: !17388, file: !2557, line: 88, type: !2549)
!17398 = !DILocalVariable(name: "timeout", arg: 3, scope: !17388, file: !2557, line: 89, type: !17391)
!17399 = !DILocalVariable(name: "__i", scope: !17400, file: !2557, line: 102, type: !17401)
!17400 = distinct !DILexicalBlock(scope: !17388, file: !2557, line: 102, column: 2)
!17401 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !17402)
!17402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !17403)
!17403 = !{!17404}
!17404 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17402, file: !250, line: 33, baseType: !103, size: 32)
!17405 = !DILocalVariable(name: "__key", scope: !17400, file: !2557, line: 102, type: !17401)
!17406 = !DILocalVariable(name: "t", scope: !17407, file: !2557, line: 103, type: !2530)
!17407 = distinct !DILexicalBlock(scope: !17408, file: !2557, line: 102, column: 24)
!17408 = distinct !DILexicalBlock(scope: !17400, file: !2557, line: 102, column: 2)
!17409 = !DILocalVariable(name: "ticks", scope: !17410, file: !2557, line: 107, type: !104)
!17410 = distinct !DILexicalBlock(scope: !17411, file: !2557, line: 106, column: 39)
!17411 = distinct !DILexicalBlock(scope: !17407, file: !2557, line: 105, column: 7)
!17412 = !DILocalVariable(name: "next_time", scope: !17413, file: !2557, line: 137, type: !331)
!17413 = distinct !DILexicalBlock(scope: !17414, file: !2557, line: 127, column: 22)
!17414 = distinct !DILexicalBlock(scope: !17407, file: !2557, line: 127, column: 7)
!17415 = !DILocation(line: 0, scope: !17388)
!17416 = !DILocation(line: 91, column: 6, scope: !17417)
!17417 = distinct !DILexicalBlock(scope: !17388, file: !2557, line: 91, column: 6)
!17418 = !DILocation(line: 91, column: 6, scope: !17388)
!17419 = !DILocation(line: 100, column: 6, scope: !17388)
!17420 = !DILocation(line: 100, column: 9, scope: !17388)
!17421 = !DILocation(line: 0, scope: !17400)
!17422 = !DILocalVariable(name: "l", arg: 1, scope: !17423, file: !250, line: 136, type: !17426)
!17423 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !17424, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17427)
!17424 = !DISubroutineType(types: !17425)
!17425 = !{!17401, !17426}
!17426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!17427 = !{!17422, !17428}
!17428 = !DILocalVariable(name: "k", scope: !17423, file: !250, line: 139, type: !17401)
!17429 = !DILocation(line: 0, scope: !17423, inlinedAt: !17430)
!17430 = distinct !DILocation(line: 102, column: 2, scope: !17400)
!17431 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17436)
!17432 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17433)
!17433 = !{!17434, !17435}
!17434 = !DILocalVariable(name: "key", scope: !17432, file: !6997, line: 44, type: !32)
!17435 = !DILocalVariable(name: "tmp", scope: !17432, file: !6997, line: 53, type: !32)
!17436 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17430)
!17437 = !{i64 2246135}
!17438 = !DILocation(line: 0, scope: !17432, inlinedAt: !17436)
!17439 = !DILocation(line: 106, column: 33, scope: !17411)
!17440 = !DILocation(line: 105, column: 7, scope: !17407)
!17441 = !DILocation(line: 107, column: 50, scope: !17410)
!17442 = !DILocation(line: 107, column: 48, scope: !17410)
!17443 = !DILocation(line: 0, scope: !17410)
!17444 = !DILocation(line: 109, column: 17, scope: !17410)
!17445 = !DILocation(line: 110, column: 3, scope: !17410)
!17446 = !DILocation(line: 111, column: 31, scope: !17447)
!17447 = distinct !DILexicalBlock(scope: !17411, file: !2557, line: 110, column: 10)
!17448 = !DILocation(line: 111, column: 37, scope: !17447)
!17449 = !DILocation(line: 111, column: 35, scope: !17447)
!17450 = !DILocation(line: 0, scope: !17411)
!17451 = !DILocation(line: 109, column: 8, scope: !17410)
!17452 = !DILocation(line: 109, column: 15, scope: !17410)
!17453 = !DILocation(line: 114, column: 12, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17407, file: !2557, line: 114, column: 3)
!17455 = !DILocation(line: 0, scope: !17407)
!17456 = !DILocation(line: 114, column: 3, scope: !17454)
!17457 = !DILocation(line: 115, column: 24, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17459, file: !2557, line: 115, column: 8)
!17459 = distinct !DILexicalBlock(scope: !17460, file: !2557, line: 114, column: 45)
!17460 = distinct !DILexicalBlock(scope: !17454, file: !2557, line: 114, column: 3)
!17461 = !DILocation(line: 115, column: 11, scope: !17458)
!17462 = !DILocation(line: 115, column: 18, scope: !17458)
!17463 = !DILocation(line: 115, column: 8, scope: !17459)
!17464 = !DILocation(line: 116, column: 15, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17458, file: !2557, line: 115, column: 32)
!17466 = !DILocation(line: 117, column: 26, scope: !17465)
!17467 = !DILocation(line: 117, column: 37, scope: !17465)
!17468 = !DILocation(line: 117, column: 5, scope: !17465)
!17469 = !DILocation(line: 123, column: 7, scope: !17407)
!17470 = !DILocation(line: 120, column: 15, scope: !17459)
!17471 = !DILocation(line: 114, column: 36, scope: !17460)
!17472 = distinct !{!17472, !17456, !17473}
!17473 = !DILocation(line: 121, column: 3, scope: !17454)
!17474 = !DILocation(line: 124, column: 41, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17476, file: !2557, line: 123, column: 18)
!17476 = distinct !DILexicalBlock(scope: !17407, file: !2557, line: 123, column: 7)
!17477 = !DILocation(line: 124, column: 4, scope: !17475)
!17478 = !DILocation(line: 125, column: 3, scope: !17475)
!17479 = !DILocation(line: 127, column: 13, scope: !17414)
!17480 = !DILocation(line: 127, column: 10, scope: !17414)
!17481 = !DILocation(line: 127, column: 7, scope: !17407)
!17482 = !DILocation(line: 137, column: 24, scope: !17413)
!17483 = !DILocation(line: 0, scope: !17413)
!17484 = !DILocation(line: 139, column: 18, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17413, file: !2557, line: 139, column: 8)
!17486 = !DILocation(line: 139, column: 23, scope: !17485)
!17487 = !DILocation(line: 141, column: 5, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17485, file: !2557, line: 140, column: 48)
!17489 = !DILocation(line: 142, column: 4, scope: !17488)
!17490 = !DILocalVariable(name: "key", arg: 2, scope: !17491, file: !250, line: 190, type: !17401)
!17491 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !17492, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17494)
!17492 = !DISubroutineType(types: !17493)
!17493 = !{null, !17426, !17401}
!17494 = !{!17495, !17490}
!17495 = !DILocalVariable(name: "l", arg: 1, scope: !17491, file: !250, line: 189, type: !17426)
!17496 = !DILocation(line: 0, scope: !17491, inlinedAt: !17497)
!17497 = distinct !DILocation(line: 102, column: 2, scope: !17408)
!17498 = !DILocalVariable(name: "key", arg: 1, scope: !17499, file: !6997, line: 84, type: !32)
!17499 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17500)
!17500 = !{!17498}
!17501 = !DILocation(line: 0, scope: !17499, inlinedAt: !17502)
!17502 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17497)
!17503 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17502)
!17504 = !{i64 2246952}
!17505 = !DILocation(line: 148, column: 1, scope: !17388)
!17506 = distinct !DISubprogram(name: "elapsed", scope: !2557, file: !2557, line: 62, type: !17507, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !251)
!17507 = !DISubroutineType(types: !17508)
!17508 = !{!331}
!17509 = !DILocation(line: 64, column: 9, scope: !17506)
!17510 = !DILocation(line: 64, column: 28, scope: !17506)
!17511 = !DILocation(line: 64, column: 35, scope: !17506)
!17512 = !DILocation(line: 64, column: 2, scope: !17506)
!17513 = distinct !DISubprogram(name: "first", scope: !2557, file: !2557, line: 39, type: !17514, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17516)
!17514 = !DISubroutineType(types: !17515)
!17515 = !{!2530}
!17516 = !{!17517}
!17517 = !DILocalVariable(name: "t", scope: !17513, file: !2557, line: 41, type: !17518)
!17518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 32)
!17519 = !DILocation(line: 41, column: 19, scope: !17513)
!17520 = !DILocation(line: 0, scope: !17513)
!17521 = !DILocation(line: 43, column: 9, scope: !17513)
!17522 = !DILocation(line: 43, column: 2, scope: !17513)
!17523 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !17524, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17526)
!17524 = !DISubroutineType(types: !17525)
!17525 = !{null, !17518, !17518}
!17526 = !{!17527, !17528, !17529}
!17527 = !DILocalVariable(name: "successor", arg: 1, scope: !17523, file: !146, line: 443, type: !17518)
!17528 = !DILocalVariable(name: "node", arg: 2, scope: !17523, file: !146, line: 443, type: !17518)
!17529 = !DILocalVariable(name: "prev", scope: !17523, file: !146, line: 445, type: !17530)
!17530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17518)
!17531 = !DILocation(line: 0, scope: !17523)
!17532 = !DILocation(line: 445, column: 39, scope: !17523)
!17533 = !DILocation(line: 447, column: 8, scope: !17523)
!17534 = !DILocation(line: 447, column: 13, scope: !17523)
!17535 = !DILocation(line: 448, column: 8, scope: !17523)
!17536 = !DILocation(line: 448, column: 13, scope: !17523)
!17537 = !DILocation(line: 449, column: 8, scope: !17523)
!17538 = !DILocation(line: 449, column: 13, scope: !17523)
!17539 = !DILocation(line: 450, column: 18, scope: !17523)
!17540 = !DILocation(line: 451, column: 1, scope: !17523)
!17541 = distinct !DISubprogram(name: "next", scope: !2557, file: !2557, line: 46, type: !17542, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17544)
!17542 = !DISubroutineType(types: !17543)
!17543 = !{!2530, !2530}
!17544 = !{!17545, !17546}
!17545 = !DILocalVariable(name: "t", arg: 1, scope: !17541, file: !2557, line: 46, type: !2530)
!17546 = !DILocalVariable(name: "n", scope: !17541, file: !2557, line: 48, type: !17518)
!17547 = !DILocation(line: 0, scope: !17541)
!17548 = !DILocation(line: 48, column: 58, scope: !17541)
!17549 = !DILocation(line: 48, column: 19, scope: !17541)
!17550 = !DILocation(line: 50, column: 9, scope: !17541)
!17551 = !DILocation(line: 50, column: 2, scope: !17541)
!17552 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !17553, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17556)
!17553 = !DISubroutineType(types: !17554)
!17554 = !{null, !17555, !17518}
!17555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!17556 = !{!17557, !17558, !17559}
!17557 = !DILocalVariable(name: "list", arg: 1, scope: !17552, file: !146, line: 404, type: !17555)
!17558 = !DILocalVariable(name: "node", arg: 2, scope: !17552, file: !146, line: 404, type: !17518)
!17559 = !DILocalVariable(name: "tail", scope: !17552, file: !146, line: 406, type: !17530)
!17560 = !DILocation(line: 0, scope: !17552)
!17561 = !DILocation(line: 406, column: 34, scope: !17552)
!17562 = !DILocation(line: 408, column: 8, scope: !17552)
!17563 = !DILocation(line: 408, column: 13, scope: !17552)
!17564 = !DILocation(line: 409, column: 8, scope: !17552)
!17565 = !DILocation(line: 409, column: 13, scope: !17552)
!17566 = !DILocation(line: 411, column: 8, scope: !17552)
!17567 = !DILocation(line: 411, column: 13, scope: !17552)
!17568 = !DILocation(line: 412, column: 13, scope: !17552)
!17569 = !DILocation(line: 413, column: 1, scope: !17552)
!17570 = distinct !DISubprogram(name: "next_timeout", scope: !2557, file: !2557, line: 67, type: !17507, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17571)
!17571 = !{!17572, !17573, !17574}
!17572 = !DILocalVariable(name: "to", scope: !17570, file: !2557, line: 69, type: !2530)
!17573 = !DILocalVariable(name: "ticks_elapsed", scope: !17570, file: !2557, line: 70, type: !331)
!17574 = !DILocalVariable(name: "ret", scope: !17570, file: !2557, line: 71, type: !331)
!17575 = !DILocation(line: 69, column: 24, scope: !17570)
!17576 = !DILocation(line: 0, scope: !17570)
!17577 = !DILocation(line: 70, column: 26, scope: !17570)
!17578 = !DILocation(line: 73, column: 10, scope: !17579)
!17579 = distinct !DILexicalBlock(scope: !17570, file: !2557, line: 73, column: 6)
!17580 = !DILocation(line: 73, column: 19, scope: !17579)
!17581 = !DILocation(line: 74, column: 21, scope: !17579)
!17582 = !DILocation(line: 74, column: 30, scope: !17579)
!17583 = !DILocation(line: 74, column: 28, scope: !17579)
!17584 = !DILocation(line: 74, column: 45, scope: !17579)
!17585 = !DILocation(line: 73, column: 6, scope: !17570)
!17586 = !DILocation(line: 77, column: 9, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17579, file: !2557, line: 76, column: 9)
!17588 = !DILocation(line: 0, scope: !17579)
!17589 = !DILocation(line: 81, column: 20, scope: !17590)
!17590 = distinct !DILexicalBlock(scope: !17570, file: !2557, line: 81, column: 6)
!17591 = !DILocation(line: 81, column: 6, scope: !17590)
!17592 = !DILocation(line: 81, column: 32, scope: !17590)
!17593 = !DILocation(line: 85, column: 2, scope: !17570)
!17594 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !17595, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17597)
!17595 = !DISubroutineType(types: !17596)
!17596 = !{!17518, !17555, !17518}
!17597 = !{!17598, !17599}
!17598 = !DILocalVariable(name: "list", arg: 1, scope: !17594, file: !146, line: 341, type: !17555)
!17599 = !DILocalVariable(name: "node", arg: 2, scope: !17594, file: !146, line: 342, type: !17518)
!17600 = !DILocation(line: 0, scope: !17594)
!17601 = !DILocation(line: 344, column: 15, scope: !17594)
!17602 = !DILocation(line: 344, column: 9, scope: !17594)
!17603 = !DILocation(line: 344, column: 26, scope: !17594)
!17604 = !DILocation(line: 344, column: 2, scope: !17594)
!17605 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !17595, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17606)
!17606 = !{!17607, !17608}
!17607 = !DILocalVariable(name: "list", arg: 1, scope: !17605, file: !146, line: 325, type: !17555)
!17608 = !DILocalVariable(name: "node", arg: 2, scope: !17605, file: !146, line: 326, type: !17518)
!17609 = !DILocation(line: 0, scope: !17605)
!17610 = !DILocation(line: 328, column: 24, scope: !17605)
!17611 = !DILocation(line: 328, column: 15, scope: !17605)
!17612 = !DILocation(line: 328, column: 9, scope: !17605)
!17613 = !DILocation(line: 328, column: 45, scope: !17605)
!17614 = !DILocation(line: 328, column: 2, scope: !17605)
!17615 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !17616, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17618)
!17616 = !DISubroutineType(types: !17617)
!17617 = !{!17518, !17555}
!17618 = !{!17619}
!17619 = !DILocalVariable(name: "list", arg: 1, scope: !17615, file: !146, line: 294, type: !17555)
!17620 = !DILocation(line: 0, scope: !17615)
!17621 = !DILocation(line: 296, column: 9, scope: !17615)
!17622 = !DILocation(line: 296, column: 2, scope: !17615)
!17623 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !17624, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17626)
!17624 = !DISubroutineType(types: !17625)
!17625 = !{!131, !17555}
!17626 = !{!17627}
!17627 = !DILocalVariable(name: "list", arg: 1, scope: !17623, file: !146, line: 266, type: !17555)
!17628 = !DILocation(line: 0, scope: !17623)
!17629 = !DILocation(line: 268, column: 15, scope: !17623)
!17630 = !DILocation(line: 268, column: 20, scope: !17623)
!17631 = !DILocation(line: 268, column: 2, scope: !17623)
!17632 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2557, file: !2557, line: 150, type: !17633, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17635)
!17633 = !DISubroutineType(types: !17634)
!17634 = !{!103, !2530}
!17635 = !{!17636, !17637, !17638, !17640}
!17636 = !DILocalVariable(name: "to", arg: 1, scope: !17632, file: !2557, line: 150, type: !2530)
!17637 = !DILocalVariable(name: "ret", scope: !17632, file: !2557, line: 152, type: !103)
!17638 = !DILocalVariable(name: "__i", scope: !17639, file: !2557, line: 154, type: !17401)
!17639 = distinct !DILexicalBlock(scope: !17632, file: !2557, line: 154, column: 2)
!17640 = !DILocalVariable(name: "__key", scope: !17639, file: !2557, line: 154, type: !17401)
!17641 = !DILocation(line: 0, scope: !17632)
!17642 = !DILocation(line: 0, scope: !17639)
!17643 = !DILocation(line: 0, scope: !17423, inlinedAt: !17644)
!17644 = distinct !DILocation(line: 154, column: 2, scope: !17639)
!17645 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17646)
!17646 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17644)
!17647 = !DILocation(line: 0, scope: !17432, inlinedAt: !17646)
!17648 = !DILocation(line: 155, column: 7, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17650, file: !2557, line: 155, column: 7)
!17650 = distinct !DILexicalBlock(scope: !17651, file: !2557, line: 154, column: 24)
!17651 = distinct !DILexicalBlock(scope: !17639, file: !2557, line: 154, column: 2)
!17652 = !DILocation(line: 155, column: 7, scope: !17650)
!17653 = !DILocation(line: 156, column: 4, scope: !17654)
!17654 = distinct !DILexicalBlock(scope: !17649, file: !2557, line: 155, column: 39)
!17655 = !DILocation(line: 158, column: 3, scope: !17654)
!17656 = !DILocation(line: 0, scope: !17491, inlinedAt: !17657)
!17657 = distinct !DILocation(line: 154, column: 2, scope: !17651)
!17658 = !DILocation(line: 0, scope: !17499, inlinedAt: !17659)
!17659 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17657)
!17660 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17659)
!17661 = !DILocation(line: 161, column: 2, scope: !17632)
!17662 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !17663, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17667)
!17663 = !DISubroutineType(types: !17664)
!17664 = !{!131, !17665}
!17665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17666, size: 32)
!17666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2534)
!17667 = !{!17668}
!17668 = !DILocalVariable(name: "node", arg: 1, scope: !17662, file: !146, line: 225, type: !17665)
!17669 = !DILocation(line: 0, scope: !17662)
!17670 = !DILocation(line: 227, column: 15, scope: !17662)
!17671 = !DILocation(line: 227, column: 20, scope: !17662)
!17672 = !DILocation(line: 227, column: 2, scope: !17662)
!17673 = distinct !DISubprogram(name: "remove_timeout", scope: !2557, file: !2557, line: 53, type: !2551, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17674)
!17674 = !{!17675}
!17675 = !DILocalVariable(name: "t", arg: 1, scope: !17673, file: !2557, line: 53, type: !2530)
!17676 = !DILocation(line: 0, scope: !17673)
!17677 = !DILocation(line: 55, column: 6, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17673, file: !2557, line: 55, column: 6)
!17679 = !DILocation(line: 55, column: 14, scope: !17678)
!17680 = !DILocation(line: 55, column: 6, scope: !17673)
!17681 = !DILocation(line: 56, column: 25, scope: !17682)
!17682 = distinct !DILexicalBlock(scope: !17678, file: !2557, line: 55, column: 23)
!17683 = !DILocation(line: 56, column: 12, scope: !17682)
!17684 = !DILocation(line: 56, column: 19, scope: !17682)
!17685 = !DILocation(line: 57, column: 2, scope: !17682)
!17686 = !DILocation(line: 59, column: 23, scope: !17673)
!17687 = !DILocation(line: 59, column: 2, scope: !17673)
!17688 = !DILocation(line: 60, column: 1, scope: !17673)
!17689 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !17690, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17692)
!17690 = !DISubroutineType(types: !17691)
!17691 = !{null, !17518}
!17692 = !{!17693, !17694, !17695}
!17693 = !DILocalVariable(name: "node", arg: 1, scope: !17689, file: !146, line: 496, type: !17518)
!17694 = !DILocalVariable(name: "prev", scope: !17689, file: !146, line: 498, type: !17530)
!17695 = !DILocalVariable(name: "next", scope: !17689, file: !146, line: 499, type: !17530)
!17696 = !DILocation(line: 0, scope: !17689)
!17697 = !DILocation(line: 498, column: 34, scope: !17689)
!17698 = !DILocation(line: 499, column: 34, scope: !17689)
!17699 = !DILocation(line: 501, column: 8, scope: !17689)
!17700 = !DILocation(line: 501, column: 13, scope: !17689)
!17701 = !DILocation(line: 502, column: 8, scope: !17689)
!17702 = !DILocation(line: 502, column: 13, scope: !17689)
!17703 = !DILocation(line: 503, column: 2, scope: !17689)
!17704 = !DILocation(line: 504, column: 1, scope: !17689)
!17705 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !17690, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17706)
!17706 = !{!17707}
!17707 = !DILocalVariable(name: "node", arg: 1, scope: !17705, file: !146, line: 211, type: !17518)
!17708 = !DILocation(line: 0, scope: !17705)
!17709 = !DILocation(line: 213, column: 8, scope: !17705)
!17710 = !DILocation(line: 213, column: 13, scope: !17705)
!17711 = !DILocation(line: 214, column: 8, scope: !17705)
!17712 = !DILocation(line: 214, column: 13, scope: !17705)
!17713 = !DILocation(line: 215, column: 1, scope: !17705)
!17714 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2557, file: !2557, line: 183, type: !17715, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17719)
!17715 = !DISubroutineType(types: !17716)
!17716 = !{!104, !17717}
!17717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17718, size: 32)
!17718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2531)
!17719 = !{!17720, !17721, !17722, !17724}
!17720 = !DILocalVariable(name: "timeout", arg: 1, scope: !17714, file: !2557, line: 183, type: !17717)
!17721 = !DILocalVariable(name: "ticks", scope: !17714, file: !2557, line: 185, type: !104)
!17722 = !DILocalVariable(name: "__i", scope: !17723, file: !2557, line: 187, type: !17401)
!17723 = distinct !DILexicalBlock(scope: !17714, file: !2557, line: 187, column: 2)
!17724 = !DILocalVariable(name: "__key", scope: !17723, file: !2557, line: 187, type: !17401)
!17725 = !DILocation(line: 0, scope: !17714)
!17726 = !DILocation(line: 0, scope: !17723)
!17727 = !DILocation(line: 0, scope: !17423, inlinedAt: !17728)
!17728 = distinct !DILocation(line: 187, column: 2, scope: !17723)
!17729 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17730)
!17730 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17728)
!17731 = !DILocation(line: 0, scope: !17432, inlinedAt: !17730)
!17732 = !DILocation(line: 188, column: 11, scope: !17733)
!17733 = distinct !DILexicalBlock(scope: !17734, file: !2557, line: 187, column: 24)
!17734 = distinct !DILexicalBlock(scope: !17723, file: !2557, line: 187, column: 2)
!17735 = !DILocation(line: 0, scope: !17491, inlinedAt: !17736)
!17736 = distinct !DILocation(line: 187, column: 2, scope: !17734)
!17737 = !DILocation(line: 0, scope: !17499, inlinedAt: !17738)
!17738 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17736)
!17739 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17738)
!17740 = !DILocation(line: 191, column: 2, scope: !17714)
!17741 = distinct !DISubprogram(name: "timeout_rem", scope: !2557, file: !2557, line: 165, type: !17715, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17742)
!17742 = !{!17743, !17744, !17745}
!17743 = !DILocalVariable(name: "timeout", arg: 1, scope: !17741, file: !2557, line: 165, type: !17717)
!17744 = !DILocalVariable(name: "ticks", scope: !17741, file: !2557, line: 167, type: !104)
!17745 = !DILocalVariable(name: "t", scope: !17746, file: !2557, line: 173, type: !2530)
!17746 = distinct !DILexicalBlock(scope: !17741, file: !2557, line: 173, column: 2)
!17747 = !DILocation(line: 0, scope: !17741)
!17748 = !DILocation(line: 169, column: 6, scope: !17749)
!17749 = distinct !DILexicalBlock(scope: !17741, file: !2557, line: 169, column: 6)
!17750 = !DILocation(line: 169, column: 6, scope: !17741)
!17751 = !DILocation(line: 173, column: 28, scope: !17746)
!17752 = !DILocation(line: 0, scope: !17746)
!17753 = !DILocation(line: 173, column: 39, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17746, file: !2557, line: 173, column: 2)
!17755 = !DILocation(line: 173, column: 2, scope: !17746)
!17756 = !DILocation(line: 174, column: 15, scope: !17757)
!17757 = distinct !DILexicalBlock(scope: !17754, file: !2557, line: 173, column: 61)
!17758 = !DILocation(line: 174, column: 9, scope: !17757)
!17759 = !DILocation(line: 175, column: 15, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17757, file: !2557, line: 175, column: 7)
!17761 = !DILocation(line: 175, column: 7, scope: !17757)
!17762 = !DILocation(line: 173, column: 52, scope: !17754)
!17763 = distinct !{!17763, !17755, !17764}
!17764 = !DILocation(line: 178, column: 2, scope: !17746)
!17765 = !DILocation(line: 180, column: 17, scope: !17741)
!17766 = !DILocation(line: 180, column: 15, scope: !17741)
!17767 = !DILocation(line: 180, column: 2, scope: !17741)
!17768 = !DILocation(line: 181, column: 1, scope: !17741)
!17769 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14339, file: !14339, line: 35, type: !17770, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17772)
!17770 = !DISubroutineType(types: !17771)
!17771 = !{!131, !17717}
!17772 = !{!17773}
!17773 = !DILocalVariable(name: "to", arg: 1, scope: !17769, file: !14339, line: 35, type: !17717)
!17774 = !DILocation(line: 0, scope: !17769)
!17775 = !DILocation(line: 37, column: 35, scope: !17769)
!17776 = !DILocation(line: 37, column: 10, scope: !17769)
!17777 = !DILocation(line: 37, column: 9, scope: !17769)
!17778 = !DILocation(line: 37, column: 2, scope: !17769)
!17779 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2557, file: !2557, line: 194, type: !17715, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17780)
!17780 = !{!17781, !17782, !17783, !17785}
!17781 = !DILocalVariable(name: "timeout", arg: 1, scope: !17779, file: !2557, line: 194, type: !17717)
!17782 = !DILocalVariable(name: "ticks", scope: !17779, file: !2557, line: 196, type: !104)
!17783 = !DILocalVariable(name: "__i", scope: !17784, file: !2557, line: 198, type: !17401)
!17784 = distinct !DILexicalBlock(scope: !17779, file: !2557, line: 198, column: 2)
!17785 = !DILocalVariable(name: "__key", scope: !17784, file: !2557, line: 198, type: !17401)
!17786 = !DILocation(line: 0, scope: !17779)
!17787 = !DILocation(line: 0, scope: !17784)
!17788 = !DILocation(line: 0, scope: !17423, inlinedAt: !17789)
!17789 = distinct !DILocation(line: 198, column: 2, scope: !17784)
!17790 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17791)
!17791 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17789)
!17792 = !DILocation(line: 0, scope: !17432, inlinedAt: !17791)
!17793 = !DILocation(line: 199, column: 11, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17795, file: !2557, line: 198, column: 24)
!17795 = distinct !DILexicalBlock(scope: !17784, file: !2557, line: 198, column: 2)
!17796 = !DILocation(line: 199, column: 23, scope: !17794)
!17797 = !DILocation(line: 0, scope: !17491, inlinedAt: !17798)
!17798 = distinct !DILocation(line: 198, column: 2, scope: !17795)
!17799 = !DILocation(line: 0, scope: !17499, inlinedAt: !17800)
!17800 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17798)
!17801 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17800)
!17802 = !DILocation(line: 199, column: 21, scope: !17794)
!17803 = !DILocation(line: 202, column: 2, scope: !17779)
!17804 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2557, file: !2557, line: 205, type: !17507, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17805)
!17805 = !{!17806, !17807, !17809}
!17806 = !DILocalVariable(name: "ret", scope: !17804, file: !2557, line: 207, type: !331)
!17807 = !DILocalVariable(name: "__i", scope: !17808, file: !2557, line: 209, type: !17401)
!17808 = distinct !DILexicalBlock(scope: !17804, file: !2557, line: 209, column: 2)
!17809 = !DILocalVariable(name: "__key", scope: !17808, file: !2557, line: 209, type: !17401)
!17810 = !DILocation(line: 0, scope: !17804)
!17811 = !DILocation(line: 0, scope: !17808)
!17812 = !DILocation(line: 0, scope: !17423, inlinedAt: !17813)
!17813 = distinct !DILocation(line: 209, column: 2, scope: !17808)
!17814 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17815)
!17815 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17813)
!17816 = !DILocation(line: 0, scope: !17432, inlinedAt: !17815)
!17817 = !DILocation(line: 210, column: 9, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17819, file: !2557, line: 209, column: 24)
!17819 = distinct !DILexicalBlock(scope: !17808, file: !2557, line: 209, column: 2)
!17820 = !DILocation(line: 0, scope: !17491, inlinedAt: !17821)
!17821 = distinct !DILocation(line: 209, column: 2, scope: !17819)
!17822 = !DILocation(line: 0, scope: !17499, inlinedAt: !17823)
!17823 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17821)
!17824 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17823)
!17825 = !DILocation(line: 212, column: 2, scope: !17804)
!17826 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2557, file: !2557, line: 215, type: !11914, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17827)
!17827 = !{!17828, !17829, !17830, !17832, !17833, !17836, !17837}
!17828 = !DILocalVariable(name: "ticks", arg: 1, scope: !17826, file: !2557, line: 215, type: !331)
!17829 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17826, file: !2557, line: 215, type: !131)
!17830 = !DILocalVariable(name: "__i", scope: !17831, file: !2557, line: 217, type: !17401)
!17831 = distinct !DILexicalBlock(scope: !17826, file: !2557, line: 217, column: 2)
!17832 = !DILocalVariable(name: "__key", scope: !17831, file: !2557, line: 217, type: !17401)
!17833 = !DILocalVariable(name: "next_to", scope: !17834, file: !2557, line: 218, type: !103)
!17834 = distinct !DILexicalBlock(scope: !17835, file: !2557, line: 217, column: 24)
!17835 = distinct !DILexicalBlock(scope: !17831, file: !2557, line: 217, column: 2)
!17836 = !DILocalVariable(name: "sooner", scope: !17834, file: !2557, line: 219, type: !131)
!17837 = !DILocalVariable(name: "imminent", scope: !17834, file: !2557, line: 221, type: !131)
!17838 = !DILocation(line: 0, scope: !17826)
!17839 = !DILocation(line: 0, scope: !17831)
!17840 = !DILocation(line: 0, scope: !17423, inlinedAt: !17841)
!17841 = distinct !DILocation(line: 217, column: 2, scope: !17831)
!17842 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17843)
!17843 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17841)
!17844 = !DILocation(line: 0, scope: !17432, inlinedAt: !17843)
!17845 = !DILocation(line: 218, column: 17, scope: !17834)
!17846 = !DILocation(line: 0, scope: !17834)
!17847 = !DILocation(line: 221, column: 27, scope: !17834)
!17848 = !DILocation(line: 233, column: 17, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17834, file: !2557, line: 233, column: 7)
!17850 = !DILocation(line: 234, column: 26, scope: !17851)
!17851 = distinct !DILexicalBlock(scope: !17849, file: !2557, line: 233, column: 56)
!17852 = !DILocation(line: 234, column: 4, scope: !17851)
!17853 = !DILocation(line: 235, column: 3, scope: !17851)
!17854 = !DILocation(line: 0, scope: !17491, inlinedAt: !17855)
!17855 = distinct !DILocation(line: 217, column: 2, scope: !17835)
!17856 = !DILocation(line: 0, scope: !17499, inlinedAt: !17857)
!17857 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17855)
!17858 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17857)
!17859 = !DILocation(line: 237, column: 1, scope: !17826)
!17860 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2557, file: !2557, line: 239, type: !17861, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17863)
!17861 = !DISubroutineType(types: !17862)
!17862 = !{null, !331}
!17863 = !{!17864, !17865, !17866, !17868}
!17864 = !DILocalVariable(name: "ticks", arg: 1, scope: !17860, file: !2557, line: 239, type: !331)
!17865 = !DILocalVariable(name: "key", scope: !17860, file: !2557, line: 245, type: !17401)
!17866 = !DILocalVariable(name: "t", scope: !17867, file: !2557, line: 262, type: !2530)
!17867 = distinct !DILexicalBlock(scope: !17860, file: !2557, line: 261, column: 67)
!17868 = !DILocalVariable(name: "dt", scope: !17867, file: !2557, line: 263, type: !103)
!17869 = !DILocation(line: 0, scope: !17860)
!17870 = !DILocation(line: 242, column: 2, scope: !17860)
!17871 = !DILocation(line: 0, scope: !17423, inlinedAt: !17872)
!17872 = distinct !DILocation(line: 245, column: 25, scope: !17860)
!17873 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17874)
!17874 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17872)
!17875 = !DILocation(line: 0, scope: !17432, inlinedAt: !17874)
!17876 = !DILocation(line: 261, column: 9, scope: !17860)
!17877 = !DILocation(line: 261, column: 17, scope: !17860)
!17878 = !DILocation(line: 261, column: 25, scope: !17860)
!17879 = !DILocation(line: 261, column: 37, scope: !17860)
!17880 = !DILocation(line: 261, column: 47, scope: !17860)
!17881 = !DILocation(line: 261, column: 44, scope: !17860)
!17882 = !DILocation(line: 261, column: 2, scope: !17860)
!17883 = !DILocation(line: 0, scope: !17867)
!17884 = !DILocation(line: 263, column: 12, scope: !17867)
!17885 = !DILocation(line: 265, column: 16, scope: !17867)
!17886 = !DILocation(line: 265, column: 13, scope: !17867)
!17887 = !DILocation(line: 266, column: 13, scope: !17867)
!17888 = !DILocation(line: 267, column: 3, scope: !17867)
!17889 = !DILocation(line: 0, scope: !17491, inlinedAt: !17890)
!17890 = distinct !DILocation(line: 269, column: 3, scope: !17867)
!17891 = !DILocation(line: 0, scope: !17499, inlinedAt: !17892)
!17892 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17890)
!17893 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17892)
!17894 = !DILocation(line: 270, column: 6, scope: !17867)
!17895 = !DILocation(line: 270, column: 3, scope: !17867)
!17896 = !DILocation(line: 0, scope: !17423, inlinedAt: !17897)
!17897 = distinct !DILocation(line: 271, column: 9, scope: !17867)
!17898 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17899)
!17899 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17897)
!17900 = !DILocation(line: 0, scope: !17432, inlinedAt: !17899)
!17901 = !DILocation(line: 272, column: 22, scope: !17867)
!17902 = distinct !{!17902, !17882, !17903}
!17903 = !DILocation(line: 273, column: 2, scope: !17860)
!17904 = !DILocation(line: 276, column: 19, scope: !17905)
!17905 = distinct !DILexicalBlock(scope: !17906, file: !2557, line: 275, column: 23)
!17906 = distinct !DILexicalBlock(scope: !17860, file: !2557, line: 275, column: 6)
!17907 = !DILocation(line: 277, column: 2, scope: !17905)
!17908 = !DILocation(line: 279, column: 15, scope: !17860)
!17909 = !DILocation(line: 279, column: 12, scope: !17860)
!17910 = !DILocation(line: 280, column: 21, scope: !17860)
!17911 = !DILocation(line: 282, column: 24, scope: !17860)
!17912 = !DILocation(line: 282, column: 2, scope: !17860)
!17913 = !DILocation(line: 0, scope: !17491, inlinedAt: !17914)
!17914 = distinct !DILocation(line: 284, column: 2, scope: !17860)
!17915 = !DILocation(line: 0, scope: !17499, inlinedAt: !17916)
!17916 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17914)
!17917 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17916)
!17918 = !DILocation(line: 285, column: 1, scope: !17860)
!17919 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2557, file: !2557, line: 287, type: !3605, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17920)
!17920 = !{!17921, !17922, !17924}
!17921 = !DILocalVariable(name: "t", scope: !17919, file: !2557, line: 289, type: !109)
!17922 = !DILocalVariable(name: "__i", scope: !17923, file: !2557, line: 291, type: !17401)
!17923 = distinct !DILexicalBlock(scope: !17919, file: !2557, line: 291, column: 2)
!17924 = !DILocalVariable(name: "__key", scope: !17923, file: !2557, line: 291, type: !17401)
!17925 = !DILocation(line: 0, scope: !17919)
!17926 = !DILocation(line: 0, scope: !17923)
!17927 = !DILocation(line: 0, scope: !17423, inlinedAt: !17928)
!17928 = distinct !DILocation(line: 291, column: 2, scope: !17923)
!17929 = !DILocation(line: 55, column: 2, scope: !17432, inlinedAt: !17930)
!17930 = distinct !DILocation(line: 145, column: 10, scope: !17423, inlinedAt: !17928)
!17931 = !DILocation(line: 0, scope: !17432, inlinedAt: !17930)
!17932 = !DILocation(line: 292, column: 7, scope: !17933)
!17933 = distinct !DILexicalBlock(scope: !17934, file: !2557, line: 291, column: 24)
!17934 = distinct !DILexicalBlock(scope: !17923, file: !2557, line: 291, column: 2)
!17935 = !DILocation(line: 292, column: 19, scope: !17933)
!17936 = !DILocation(line: 0, scope: !17491, inlinedAt: !17937)
!17937 = distinct !DILocation(line: 291, column: 2, scope: !17934)
!17938 = !DILocation(line: 0, scope: !17499, inlinedAt: !17939)
!17939 = distinct !DILocation(line: 215, column: 2, scope: !17491, inlinedAt: !17937)
!17940 = !DILocation(line: 95, column: 2, scope: !17499, inlinedAt: !17939)
!17941 = !DILocation(line: 292, column: 17, scope: !17933)
!17942 = !DILocation(line: 294, column: 2, scope: !17919)
!17943 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2557, file: !2557, line: 297, type: !3591, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !251)
!17944 = !DILocation(line: 300, column: 19, scope: !17943)
!17945 = !DILocation(line: 300, column: 9, scope: !17943)
!17946 = !DILocation(line: 300, column: 2, scope: !17943)
!17947 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2557, file: !2557, line: 306, type: !3605, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !251)
!17948 = !DILocation(line: 308, column: 9, scope: !17947)
!17949 = !DILocation(line: 308, column: 2, scope: !17947)
!17950 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2557, file: !2557, line: 319, type: !7404, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17951)
!17951 = !{!17952, !17953, !17954, !17955}
!17952 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17950, file: !2557, line: 319, type: !108)
!17953 = !DILocalVariable(name: "start_cycles", scope: !17950, file: !2557, line: 328, type: !108)
!17954 = !DILocalVariable(name: "cycles_to_wait", scope: !17950, file: !2557, line: 331, type: !108)
!17955 = !DILocalVariable(name: "current_cycles", scope: !17956, file: !2557, line: 338, type: !108)
!17956 = distinct !DILexicalBlock(scope: !17957, file: !2557, line: 337, column: 11)
!17957 = distinct !DILexicalBlock(scope: !17958, file: !2557, line: 337, column: 2)
!17958 = distinct !DILexicalBlock(scope: !17950, file: !2557, line: 337, column: 2)
!17959 = !DILocation(line: 0, scope: !17950)
!17960 = !DILocation(line: 322, column: 19, scope: !17961)
!17961 = distinct !DILexicalBlock(scope: !17950, file: !2557, line: 322, column: 6)
!17962 = !DILocation(line: 322, column: 6, scope: !17950)
!17963 = !DILocation(line: 328, column: 26, scope: !17950)
!17964 = !DILocation(line: 333, column: 43, scope: !17950)
!17965 = !DILocation(line: 337, column: 2, scope: !17950)
!17966 = !DILocation(line: 338, column: 29, scope: !17956)
!17967 = !DILocation(line: 0, scope: !17956)
!17968 = !DILocation(line: 341, column: 23, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17956, file: !2557, line: 341, column: 7)
!17970 = !DILocation(line: 341, column: 39, scope: !17969)
!17971 = !DILocation(line: 349, column: 1, scope: !17950)
!17972 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !137, file: !137, line: 1675, type: !3591, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !251)
!17973 = !DILocation(line: 1677, column: 9, scope: !17972)
!17974 = !DILocation(line: 1677, column: 2, scope: !17972)
!17975 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17976, file: !17976, line: 24, type: !3591, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !251)
!17976 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17977 = !DILocation(line: 26, column: 9, scope: !17975)
!17978 = !DILocation(line: 26, column: 2, scope: !17975)
!17979 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2557, file: !2557, line: 364, type: !17980, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !17982)
!17980 = !DISubroutineType(types: !17981)
!17981 = !{!109, !17391}
!17982 = !{!17983, !17984}
!17983 = !DILocalVariable(name: "timeout", arg: 1, scope: !17979, file: !2557, line: 364, type: !17391)
!17984 = !DILocalVariable(name: "dt", scope: !17979, file: !2557, line: 366, type: !104)
!17985 = !DILocation(line: 0, scope: !17979)
!17986 = !DILocation(line: 368, column: 6, scope: !17979)
!17987 = !DILocation(line: 371, column: 10, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17989, file: !2557, line: 370, column: 47)
!17989 = distinct !DILexicalBlock(scope: !17990, file: !2557, line: 370, column: 13)
!17990 = distinct !DILexicalBlock(scope: !17979, file: !2557, line: 368, column: 6)
!17991 = !DILocation(line: 371, column: 3, scope: !17988)
!17992 = !DILocation(line: 376, column: 58, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17994, file: !2557, line: 376, column: 7)
!17994 = distinct !DILexicalBlock(scope: !17989, file: !2557, line: 372, column: 9)
!17995 = !DILocation(line: 376, column: 7, scope: !17994)
!17996 = !DILocation(line: 376, column: 43, scope: !17993)
!17997 = !DILocation(line: 377, column: 4, scope: !17998)
!17998 = distinct !DILexicalBlock(scope: !17993, file: !2557, line: 376, column: 64)
!17999 = !DILocation(line: 379, column: 10, scope: !17994)
!18000 = !DILocation(line: 379, column: 33, scope: !17994)
!18001 = !DILocation(line: 379, column: 31, scope: !17994)
!18002 = !DILocation(line: 379, column: 3, scope: !17994)
!18003 = !DILocation(line: 0, scope: !17990)
!18004 = !DILocation(line: 381, column: 1, scope: !17979)
!18005 = distinct !DISubprogram(name: "k_free", scope: !2571, file: !2571, line: 43, type: !7252, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18006)
!18006 = !{!18007, !18008}
!18007 = !DILocalVariable(name: "ptr", arg: 1, scope: !18005, file: !2571, line: 43, type: !102)
!18008 = !DILocalVariable(name: "heap_ref", scope: !18005, file: !2571, line: 45, type: !18009)
!18009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18010, size: 32)
!18010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!18011 = !DILocation(line: 0, scope: !18005)
!18012 = !DILocation(line: 47, column: 10, scope: !18013)
!18013 = distinct !DILexicalBlock(scope: !18005, file: !2571, line: 47, column: 6)
!18014 = !DILocation(line: 47, column: 6, scope: !18005)
!18015 = !DILocation(line: 49, column: 9, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18013, file: !2571, line: 47, column: 19)
!18017 = !DILocation(line: 53, column: 15, scope: !18016)
!18018 = !DILocation(line: 53, column: 3, scope: !18016)
!18019 = !DILocation(line: 56, column: 2, scope: !18016)
!18020 = !DILocation(line: 57, column: 1, scope: !18005)
!18021 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2571, file: !2571, line: 64, type: !18022, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18024)
!18022 = !DISubroutineType(types: !18023)
!18023 = !{!102, !132, !132}
!18024 = !{!18025, !18026, !18027}
!18025 = !DILocalVariable(name: "align", arg: 1, scope: !18021, file: !2571, line: 64, type: !132)
!18026 = !DILocalVariable(name: "size", arg: 2, scope: !18021, file: !2571, line: 64, type: !132)
!18027 = !DILocalVariable(name: "ret", scope: !18021, file: !2571, line: 75, type: !102)
!18028 = !DILocation(line: 0, scope: !18021)
!18029 = !DILocation(line: 75, column: 14, scope: !18021)
!18030 = !DILocation(line: 79, column: 2, scope: !18021)
!18031 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2571, file: !2571, line: 12, type: !18032, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18034)
!18032 = !DISubroutineType(types: !18033)
!18033 = !{!102, !18010, !132, !132}
!18034 = !{!18035, !18036, !18037, !18038, !18039, !18040}
!18035 = !DILocalVariable(name: "heap", arg: 1, scope: !18031, file: !2571, line: 12, type: !18010)
!18036 = !DILocalVariable(name: "align", arg: 2, scope: !18031, file: !2571, line: 12, type: !132)
!18037 = !DILocalVariable(name: "size", arg: 3, scope: !18031, file: !2571, line: 12, type: !132)
!18038 = !DILocalVariable(name: "mem", scope: !18031, file: !2571, line: 14, type: !102)
!18039 = !DILocalVariable(name: "heap_ref", scope: !18031, file: !2571, line: 15, type: !18009)
!18040 = !DILocalVariable(name: "__align", scope: !18031, file: !2571, line: 16, type: !132)
!18041 = !DILocation(line: 0, scope: !18031)
!18042 = !DILocation(line: 24, column: 6, scope: !18043)
!18043 = distinct !DILexicalBlock(scope: !18031, file: !2571, line: 24, column: 6)
!18044 = !DILocation(line: 24, column: 6, scope: !18031)
!18045 = !DILocation(line: 27, column: 18, scope: !18031)
!18046 = !DILocation(line: 29, column: 44, scope: !18031)
!18047 = !DILocation(line: 29, column: 8, scope: !18031)
!18048 = !DILocation(line: 30, column: 10, scope: !18049)
!18049 = distinct !DILexicalBlock(scope: !18031, file: !2571, line: 30, column: 6)
!18050 = !DILocation(line: 30, column: 6, scope: !18031)
!18051 = !DILocation(line: 34, column: 13, scope: !18031)
!18052 = !DILocation(line: 35, column: 12, scope: !18031)
!18053 = !DILocation(line: 36, column: 8, scope: !18031)
!18054 = !DILocation(line: 40, column: 2, scope: !18031)
!18055 = !DILocation(line: 41, column: 1, scope: !18031)
!18056 = distinct !DISubprogram(name: "size_add_overflow", scope: !14704, file: !14704, line: 47, type: !14705, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18057)
!18057 = !{!18058, !18059, !18060}
!18058 = !DILocalVariable(name: "a", arg: 1, scope: !18056, file: !14704, line: 47, type: !132)
!18059 = !DILocalVariable(name: "b", arg: 2, scope: !18056, file: !14704, line: 47, type: !132)
!18060 = !DILocalVariable(name: "result", arg: 3, scope: !18056, file: !14704, line: 47, type: !2705)
!18061 = !DILocation(line: 0, scope: !18056)
!18062 = !DILocation(line: 49, column: 9, scope: !18056)
!18063 = !DILocation(line: 49, column: 2, scope: !18056)
!18064 = distinct !DISubprogram(name: "k_malloc", scope: !2571, file: !2571, line: 82, type: !14716, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18065)
!18065 = !{!18066, !18067}
!18066 = !DILocalVariable(name: "size", arg: 1, scope: !18064, file: !2571, line: 82, type: !132)
!18067 = !DILocalVariable(name: "ret", scope: !18064, file: !2571, line: 86, type: !102)
!18068 = !DILocation(line: 0, scope: !18064)
!18069 = !DILocation(line: 86, column: 14, scope: !18064)
!18070 = !DILocation(line: 90, column: 2, scope: !18064)
!18071 = distinct !DISubprogram(name: "k_calloc", scope: !2571, file: !2571, line: 93, type: !18022, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18072)
!18072 = !{!18073, !18074, !18075, !18076}
!18073 = !DILocalVariable(name: "nmemb", arg: 1, scope: !18071, file: !2571, line: 93, type: !132)
!18074 = !DILocalVariable(name: "size", arg: 2, scope: !18071, file: !2571, line: 93, type: !132)
!18075 = !DILocalVariable(name: "ret", scope: !18071, file: !2571, line: 95, type: !102)
!18076 = !DILocalVariable(name: "bounds", scope: !18071, file: !2571, line: 96, type: !132)
!18077 = !DILocation(line: 0, scope: !18071)
!18078 = !DILocation(line: 96, column: 2, scope: !18071)
!18079 = !DILocation(line: 100, column: 6, scope: !18080)
!18080 = distinct !DILexicalBlock(scope: !18071, file: !2571, line: 100, column: 6)
!18081 = !DILocation(line: 100, column: 6, scope: !18071)
!18082 = !DILocation(line: 106, column: 17, scope: !18071)
!18083 = !DILocation(line: 106, column: 8, scope: !18071)
!18084 = !DILocation(line: 107, column: 10, scope: !18085)
!18085 = distinct !DILexicalBlock(scope: !18071, file: !2571, line: 107, column: 6)
!18086 = !DILocation(line: 107, column: 6, scope: !18071)
!18087 = !DILocation(line: 108, column: 9, scope: !18088)
!18088 = distinct !DILexicalBlock(scope: !18085, file: !2571, line: 107, column: 19)
!18089 = !DILocation(line: 109, column: 2, scope: !18088)
!18090 = !DILocation(line: 114, column: 1, scope: !18071)
!18091 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14704, file: !14704, line: 105, type: !14705, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18092)
!18092 = !{!18093, !18094, !18095}
!18093 = !DILocalVariable(name: "a", arg: 1, scope: !18091, file: !14704, line: 105, type: !132)
!18094 = !DILocalVariable(name: "b", arg: 2, scope: !18091, file: !14704, line: 105, type: !132)
!18095 = !DILocalVariable(name: "result", arg: 3, scope: !18091, file: !14704, line: 105, type: !2705)
!18096 = !DILocation(line: 0, scope: !18091)
!18097 = !DILocation(line: 107, column: 9, scope: !18091)
!18098 = !DILocation(line: 107, column: 2, scope: !18091)
!18099 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2571, file: !2571, line: 116, type: !18100, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18172)
!18100 = !DISubroutineType(types: !18101)
!18101 = !{null, !18102}
!18102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18103, size: 32)
!18103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !18104)
!18104 = !{!18105, !18145, !18157, !18158, !18159, !18160, !18166, !18167}
!18105 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !18103, file: !163, line: 247, baseType: !18106, size: 384)
!18106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !18107)
!18107 = !{!18108, !18119, !18121, !18122, !18123, !18132, !18133, !18134}
!18108 = !DIDerivedType(tag: DW_TAG_member, scope: !18106, file: !163, line: 60, baseType: !18109, size: 64)
!18109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18106, file: !163, line: 60, size: 64, elements: !18110)
!18110 = !{!18111, !18113}
!18111 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !18109, file: !163, line: 61, baseType: !18112, size: 64)
!18112 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2586)
!18113 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !18109, file: !163, line: 62, baseType: !18114, size: 64)
!18114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !18115)
!18115 = !{!18116}
!18116 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !18114, file: !175, line: 50, baseType: !18117, size: 64)
!18117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18118, size: 64, elements: !180)
!18118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18114, size: 32)
!18119 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !18106, file: !163, line: 68, baseType: !18120, size: 32, offset: 64)
!18120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!18121 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !18106, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!18122 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !18106, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!18123 = !DIDerivedType(tag: DW_TAG_member, scope: !18106, file: !163, line: 90, baseType: !18124, size: 16, offset: 112)
!18124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18106, file: !163, line: 90, size: 16, elements: !18125)
!18125 = !{!18126, !18131}
!18126 = !DIDerivedType(tag: DW_TAG_member, scope: !18124, file: !163, line: 91, baseType: !18127, size: 16)
!18127 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18124, file: !163, line: 91, size: 16, elements: !18128)
!18128 = !{!18129, !18130}
!18129 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18127, file: !163, line: 96, baseType: !195, size: 8)
!18130 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !18127, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!18131 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !18124, file: !163, line: 100, baseType: !121, size: 16)
!18132 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !18106, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!18133 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !18106, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!18134 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !18106, file: !163, line: 131, baseType: !18135, size: 192, offset: 192)
!18135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !18136)
!18136 = !{!18137, !18138, !18144}
!18137 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !18135, file: !141, line: 245, baseType: !18112, size: 64)
!18138 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !18135, file: !141, line: 246, baseType: !18139, size: 32, offset: 64)
!18139 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !18140)
!18140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18141, size: 32)
!18141 = !DISubroutineType(types: !18142)
!18142 = !{null, !18143}
!18143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18135, size: 32)
!18144 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !18135, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!18145 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !18103, file: !163, line: 250, baseType: !18146, size: 288, offset: 384)
!18146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !18147)
!18147 = !{!18148, !18149, !18150, !18151, !18152, !18153, !18154, !18155, !18156}
!18148 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !18146, file: !214, line: 26, baseType: !108, size: 32)
!18149 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !18146, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!18150 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !18146, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!18151 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !18146, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!18152 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !18146, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!18153 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !18146, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!18154 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !18146, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!18155 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !18146, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!18156 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !18146, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!18157 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !18103, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!18158 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !18103, file: !163, line: 256, baseType: !2581, size: 64, offset: 704)
!18159 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !18103, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!18160 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !18103, file: !163, line: 300, baseType: !18161, size: 96, offset: 800)
!18161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !18162)
!18162 = !{!18163, !18164, !18165}
!18163 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !18161, file: !163, line: 153, baseType: !22, size: 32)
!18164 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !18161, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!18165 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !18161, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!18166 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !18103, file: !163, line: 325, baseType: !18010, size: 32, offset: 896)
!18167 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !18103, file: !163, line: 343, baseType: !18168, size: 64, offset: 928)
!18168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !18169)
!18169 = !{!18170, !18171}
!18170 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !18168, file: !214, line: 63, baseType: !108, size: 32)
!18171 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !18168, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!18172 = !{!18173}
!18173 = !DILocalVariable(name: "thread", arg: 1, scope: !18099, file: !2571, line: 116, type: !18102)
!18174 = !DILocation(line: 0, scope: !18099)
!18175 = !DILocation(line: 118, column: 10, scope: !18099)
!18176 = !DILocation(line: 118, column: 24, scope: !18099)
!18177 = !DILocation(line: 119, column: 1, scope: !18099)
!18178 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2571, file: !2571, line: 124, type: !18022, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !18179)
!18179 = !{!18180, !18181, !18182, !18183}
!18180 = !DILocalVariable(name: "align", arg: 1, scope: !18178, file: !2571, line: 124, type: !132)
!18181 = !DILocalVariable(name: "size", arg: 2, scope: !18178, file: !2571, line: 124, type: !132)
!18182 = !DILocalVariable(name: "ret", scope: !18178, file: !2571, line: 126, type: !102)
!18183 = !DILocalVariable(name: "heap", scope: !18178, file: !2571, line: 127, type: !18010)
!18184 = !DILocation(line: 0, scope: !18178)
!18185 = !DILocation(line: 129, column: 6, scope: !18186)
!18186 = distinct !DILexicalBlock(scope: !18178, file: !2571, line: 129, column: 6)
!18187 = !DILocation(line: 129, column: 6, scope: !18178)
!18188 = !DILocation(line: 132, column: 10, scope: !18189)
!18189 = distinct !DILexicalBlock(scope: !18186, file: !2571, line: 131, column: 9)
!18190 = !DILocation(line: 132, column: 20, scope: !18189)
!18191 = !DILocation(line: 135, column: 11, scope: !18192)
!18192 = distinct !DILexicalBlock(scope: !18178, file: !2571, line: 135, column: 6)
!18193 = !DILocation(line: 135, column: 6, scope: !18178)
!18194 = !DILocation(line: 136, column: 9, scope: !18195)
!18195 = distinct !DILexicalBlock(scope: !18192, file: !2571, line: 135, column: 20)
!18196 = !DILocation(line: 137, column: 2, scope: !18195)
!18197 = !DILocation(line: 0, scope: !18192)
!18198 = !DILocation(line: 141, column: 2, scope: !18178)
!18199 = distinct !DISubprogram(name: "main", scope: !18200, file: !18200, line: 27, type: !334, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !251)
!18200 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18201 = !DILocation(line: 38, column: 2, scope: !18202, inlinedAt: !18203)
!18202 = distinct !DISubprogram(name: "arch_nop", scope: !17976, file: !17976, line: 36, type: !334, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3339, retainedNodes: !251)
!18203 = distinct !DILocation(line: 31, column: 2, scope: !18199)
!18204 = !{i64 2242046}
!18205 = !DILocation(line: 36, column: 1, scope: !18199)
!18206 = distinct !DISubprogram(name: "boot_banner", scope: !18207, file: !18207, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3341, retainedNodes: !251)
!18207 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18208 = !DILocation(line: 34, column: 2, scope: !18206)
!18209 = !DILocation(line: 36, column: 1, scope: !18206)
!18210 = distinct !DISubprogram(name: "statics_init", scope: !2625, file: !2625, line: 21, type: !2631, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18211)
!18211 = !{!18212, !18213}
!18212 = !DILocalVariable(name: "unused", arg: 1, scope: !18210, file: !2625, line: 21, type: !2633)
!18213 = !DILocalVariable(name: "h", scope: !18214, file: !2625, line: 24, type: !18215)
!18214 = distinct !DILexicalBlock(scope: !18210, file: !2625, line: 24, column: 2)
!18215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18216, size: 32)
!18216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !18217)
!18217 = !{!18218, !18224, !18230}
!18218 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18216, file: !137, line: 5074, baseType: !18219, size: 96)
!18219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !18220)
!18220 = !{!18221, !18222, !18223}
!18221 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18219, file: !240, line: 57, baseType: !243, size: 32)
!18222 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18219, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!18223 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18219, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!18224 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18216, file: !137, line: 5075, baseType: !18225, size: 64, offset: 96)
!18225 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !18226)
!18226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !18227)
!18227 = !{!18228}
!18228 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18226, file: !141, line: 232, baseType: !18229, size: 64)
!18229 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2611)
!18230 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18216, file: !137, line: 5076, baseType: !18231, offset: 160)
!18231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!18232 = !DILocation(line: 0, scope: !18210)
!18233 = !DILocation(line: 0, scope: !18214)
!18234 = !DILocation(line: 24, column: 2, scope: !18214)
!18235 = !DILocation(line: 52, column: 2, scope: !18210)
!18236 = !DILocation(line: 49, column: 27, scope: !18237)
!18237 = distinct !DILexicalBlock(scope: !18238, file: !2625, line: 48, column: 3)
!18238 = distinct !DILexicalBlock(scope: !18239, file: !2625, line: 24, column: 36)
!18239 = distinct !DILexicalBlock(scope: !18214, file: !2625, line: 24, column: 2)
!18240 = !DILocation(line: 49, column: 45, scope: !18237)
!18241 = !DILocation(line: 49, column: 4, scope: !18237)
!18242 = !DILocation(line: 24, column: 2, scope: !18239)
!18243 = !DILocation(line: 24, column: 2, scope: !18244)
!18244 = distinct !DILexicalBlock(scope: !18239, file: !2625, line: 24, column: 2)
!18245 = distinct !{!18245, !18234, !18246}
!18246 = !DILocation(line: 51, column: 2, scope: !18214)
!18247 = distinct !DISubprogram(name: "k_heap_init", scope: !2625, file: !2625, line: 13, type: !18248, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18250)
!18248 = !DISubroutineType(types: !18249)
!18249 = !{null, !18215, !102, !132}
!18250 = !{!18251, !18252, !18253}
!18251 = !DILocalVariable(name: "h", arg: 1, scope: !18247, file: !2625, line: 13, type: !18215)
!18252 = !DILocalVariable(name: "mem", arg: 2, scope: !18247, file: !2625, line: 13, type: !102)
!18253 = !DILocalVariable(name: "bytes", arg: 3, scope: !18247, file: !2625, line: 13, type: !132)
!18254 = !DILocation(line: 0, scope: !18247)
!18255 = !DILocation(line: 15, column: 19, scope: !18247)
!18256 = !DILocation(line: 15, column: 2, scope: !18247)
!18257 = !DILocation(line: 16, column: 20, scope: !18247)
!18258 = !DILocation(line: 16, column: 2, scope: !18247)
!18259 = !DILocation(line: 19, column: 1, scope: !18247)
!18260 = distinct !DISubprogram(name: "z_waitq_init", scope: !14271, file: !14271, line: 47, type: !18261, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18264)
!18261 = !DISubroutineType(types: !18262)
!18262 = !{null, !18263}
!18263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18225, size: 32)
!18264 = !{!18265}
!18265 = !DILocalVariable(name: "w", arg: 1, scope: !18260, file: !14271, line: 47, type: !18263)
!18266 = !DILocation(line: 0, scope: !18260)
!18267 = !DILocation(line: 49, column: 21, scope: !18260)
!18268 = !DILocation(line: 49, column: 2, scope: !18260)
!18269 = !DILocation(line: 50, column: 1, scope: !18260)
!18270 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !18271, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18274)
!18271 = !DISubroutineType(types: !18272)
!18272 = !{null, !18273}
!18273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18229, size: 32)
!18274 = !{!18275}
!18275 = !DILocalVariable(name: "list", arg: 1, scope: !18270, file: !146, line: 197, type: !18273)
!18276 = !DILocation(line: 0, scope: !18270)
!18277 = !DILocation(line: 199, column: 8, scope: !18270)
!18278 = !DILocation(line: 199, column: 13, scope: !18270)
!18279 = !DILocation(line: 200, column: 8, scope: !18270)
!18280 = !DILocation(line: 200, column: 13, scope: !18270)
!18281 = !DILocation(line: 201, column: 1, scope: !18270)
!18282 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2625, file: !2625, line: 64, type: !18283, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18289)
!18283 = !DISubroutineType(types: !18284)
!18284 = !{!102, !18215, !132, !132, !18285}
!18285 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18286)
!18286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18287)
!18287 = !{!18288}
!18288 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18286, file: !105, line: 66, baseType: !104, size: 64)
!18289 = !{!18290, !18291, !18292, !18293, !18294, !18295, !18296, !18297, !18302}
!18290 = !DILocalVariable(name: "h", arg: 1, scope: !18282, file: !2625, line: 64, type: !18215)
!18291 = !DILocalVariable(name: "align", arg: 2, scope: !18282, file: !2625, line: 64, type: !132)
!18292 = !DILocalVariable(name: "bytes", arg: 3, scope: !18282, file: !2625, line: 64, type: !132)
!18293 = !DILocalVariable(name: "timeout", arg: 4, scope: !18282, file: !2625, line: 65, type: !18285)
!18294 = !DILocalVariable(name: "now", scope: !18282, file: !2625, line: 67, type: !106)
!18295 = !DILocalVariable(name: "end", scope: !18282, file: !2625, line: 67, type: !106)
!18296 = !DILocalVariable(name: "ret", scope: !18282, file: !2625, line: 68, type: !102)
!18297 = !DILocalVariable(name: "key", scope: !18282, file: !2625, line: 72, type: !18298)
!18298 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !18299)
!18299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !18300)
!18300 = !{!18301}
!18301 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18299, file: !250, line: 33, baseType: !103, size: 32)
!18302 = !DILocalVariable(name: "blocked_alloc", scope: !18282, file: !2625, line: 78, type: !131)
!18303 = !DILocation(line: 0, scope: !18282)
!18304 = !DILocation(line: 67, column: 21, scope: !18282)
!18305 = !DILocation(line: 70, column: 8, scope: !18282)
!18306 = !DILocation(line: 72, column: 41, scope: !18282)
!18307 = !DILocalVariable(name: "l", arg: 1, scope: !18308, file: !250, line: 136, type: !18311)
!18308 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !18309, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18312)
!18309 = !DISubroutineType(types: !18310)
!18310 = !{!18298, !18311}
!18311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18231, size: 32)
!18312 = !{!18307, !18313}
!18313 = !DILocalVariable(name: "k", scope: !18308, file: !250, line: 139, type: !18298)
!18314 = !DILocation(line: 0, scope: !18308, inlinedAt: !18315)
!18315 = distinct !DILocation(line: 72, column: 25, scope: !18282)
!18316 = !DILocation(line: 55, column: 2, scope: !18317, inlinedAt: !18321)
!18317 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6997, file: !6997, line: 42, type: !6998, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18318)
!18318 = !{!18319, !18320}
!18319 = !DILocalVariable(name: "key", scope: !18317, file: !6997, line: 44, type: !32)
!18320 = !DILocalVariable(name: "tmp", scope: !18317, file: !6997, line: 53, type: !32)
!18321 = distinct !DILocation(line: 145, column: 10, scope: !18308, inlinedAt: !18315)
!18322 = !{i64 2241189}
!18323 = !DILocation(line: 0, scope: !18317, inlinedAt: !18321)
!18324 = !DILocation(line: 81, column: 9, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18282, file: !2625, line: 80, column: 22)
!18326 = !DILocation(line: 83, column: 9, scope: !18325)
!18327 = !DILocation(line: 85, column: 12, scope: !18328)
!18328 = distinct !DILexicalBlock(scope: !18325, file: !2625, line: 84, column: 7)
!18329 = !DILocation(line: 85, column: 21, scope: !18328)
!18330 = !DILocation(line: 85, column: 30, scope: !18328)
!18331 = !DILocation(line: 85, column: 37, scope: !18328)
!18332 = !DILocation(line: 84, column: 7, scope: !18325)
!18333 = !DILocation(line: 99, column: 10, scope: !18325)
!18334 = !DILocation(line: 0, scope: !18308, inlinedAt: !18335)
!18335 = distinct !DILocation(line: 101, column: 9, scope: !18325)
!18336 = !DILocation(line: 55, column: 2, scope: !18317, inlinedAt: !18337)
!18337 = distinct !DILocation(line: 145, column: 10, scope: !18308, inlinedAt: !18335)
!18338 = !DILocation(line: 0, scope: !18317, inlinedAt: !18337)
!18339 = distinct !{!18339, !18340, !18341}
!18340 = !DILocation(line: 80, column: 2, scope: !18282)
!18341 = !DILocation(line: 102, column: 2, scope: !18282)
!18342 = !DILocalVariable(name: "key", arg: 2, scope: !18343, file: !250, line: 190, type: !18298)
!18343 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !18344, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18346)
!18344 = !DISubroutineType(types: !18345)
!18345 = !{null, !18311, !18298}
!18346 = !{!18347, !18342}
!18347 = !DILocalVariable(name: "l", arg: 1, scope: !18343, file: !250, line: 189, type: !18311)
!18348 = !DILocation(line: 0, scope: !18343, inlinedAt: !18349)
!18349 = distinct !DILocation(line: 106, column: 2, scope: !18282)
!18350 = !DILocalVariable(name: "key", arg: 1, scope: !18351, file: !6997, line: 84, type: !32)
!18351 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6997, file: !6997, line: 84, type: !7008, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18352)
!18352 = !{!18350}
!18353 = !DILocation(line: 0, scope: !18351, inlinedAt: !18354)
!18354 = distinct !DILocation(line: 215, column: 2, scope: !18343, inlinedAt: !18349)
!18355 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18354)
!18356 = !{i64 2242006}
!18357 = !DILocation(line: 107, column: 2, scope: !18282)
!18358 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2625, file: !2625, line: 110, type: !18359, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18361)
!18359 = !DISubroutineType(types: !18360)
!18360 = !{!102, !18215, !132, !18285}
!18361 = !{!18362, !18363, !18364, !18365}
!18362 = !DILocalVariable(name: "h", arg: 1, scope: !18358, file: !2625, line: 110, type: !18215)
!18363 = !DILocalVariable(name: "bytes", arg: 2, scope: !18358, file: !2625, line: 110, type: !132)
!18364 = !DILocalVariable(name: "timeout", arg: 3, scope: !18358, file: !2625, line: 110, type: !18285)
!18365 = !DILocalVariable(name: "ret", scope: !18358, file: !2625, line: 114, type: !102)
!18366 = !DILocation(line: 0, scope: !18358)
!18367 = !DILocation(line: 114, column: 14, scope: !18358)
!18368 = !DILocation(line: 118, column: 2, scope: !18358)
!18369 = distinct !DISubprogram(name: "k_heap_free", scope: !2625, file: !2625, line: 121, type: !18370, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !18372)
!18370 = !DISubroutineType(types: !18371)
!18371 = !{null, !18215, !102}
!18372 = !{!18373, !18374, !18375}
!18373 = !DILocalVariable(name: "h", arg: 1, scope: !18369, file: !2625, line: 121, type: !18215)
!18374 = !DILocalVariable(name: "mem", arg: 2, scope: !18369, file: !2625, line: 121, type: !102)
!18375 = !DILocalVariable(name: "key", scope: !18369, file: !2625, line: 123, type: !18298)
!18376 = !DILocation(line: 0, scope: !18369)
!18377 = !DILocation(line: 0, scope: !18308, inlinedAt: !18378)
!18378 = distinct !DILocation(line: 123, column: 25, scope: !18369)
!18379 = !DILocation(line: 55, column: 2, scope: !18317, inlinedAt: !18380)
!18380 = distinct !DILocation(line: 145, column: 10, scope: !18308, inlinedAt: !18378)
!18381 = !DILocation(line: 0, scope: !18317, inlinedAt: !18380)
!18382 = !DILocation(line: 125, column: 20, scope: !18369)
!18383 = !DILocation(line: 125, column: 2, scope: !18369)
!18384 = !DILocation(line: 128, column: 60, scope: !18385)
!18385 = distinct !DILexicalBlock(scope: !18369, file: !2625, line: 128, column: 6)
!18386 = !DILocation(line: 128, column: 43, scope: !18385)
!18387 = !DILocation(line: 128, column: 68, scope: !18385)
!18388 = !DILocation(line: 128, column: 6, scope: !18369)
!18389 = !DILocation(line: 123, column: 41, scope: !18369)
!18390 = !DILocation(line: 129, column: 3, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18385, file: !2625, line: 128, column: 74)
!18392 = !DILocation(line: 130, column: 2, scope: !18391)
!18393 = !DILocation(line: 0, scope: !18343, inlinedAt: !18394)
!18394 = distinct !DILocation(line: 131, column: 3, scope: !18395)
!18395 = distinct !DILexicalBlock(scope: !18385, file: !2625, line: 130, column: 9)
!18396 = !DILocation(line: 0, scope: !18351, inlinedAt: !18397)
!18397 = distinct !DILocation(line: 215, column: 2, scope: !18343, inlinedAt: !18394)
!18398 = !DILocation(line: 95, column: 2, scope: !18351, inlinedAt: !18397)
!18399 = !DILocation(line: 133, column: 1, scope: !18369)
