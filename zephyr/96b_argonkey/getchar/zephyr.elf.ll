; ModuleID = 'build/96b_argonkey/getchar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230139 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230119 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230109 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230209 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230199 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230189 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230179 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230169 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230159 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232772 to i8*), void (i8*)* inttoptr (i32 134231489 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230149 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232556 to i8*), void (i8*)* inttoptr (i32 134230129 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [56 x i8] c"Start typing characters to see their hex codes printed\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"char: [0x%x] %c\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [39 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !195
@console_txbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !292
@console_rxbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !286
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !339
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !347
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !488
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !524
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.33, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !534
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !539
@.str.32 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.33 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !559
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !751
@.str.34 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !713
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !696
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !669
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !685
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !715
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !728
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !730
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !732
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !734
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !736
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !738
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !740
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !742
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !746
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !756
@.str.36 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !783
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !878
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !867
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !919
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1070
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1020
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1062
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1064
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1013
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1080
@esc_state = internal global i32 0, align 4, !dbg !1105
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1113
@end = internal unnamed_addr global i8 0, align 1, !dbg !1115
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1109
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1111
@.str.59 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.58 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !776
@.str.63 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1121
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1402
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1372
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1358
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1300
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !774
@.str.1.64 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1404
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1376
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1374
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1314
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !772
@.str.2.65 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1417
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1380
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1378
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1323
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !770
@.str.3.66 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1419
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1384
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1382
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !768
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1421
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1388
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1386
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1338
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !766
@.str.5.67 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1423
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1392
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1390
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1344
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !764
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1425
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1396
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1394
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1350
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !762
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1427
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1400
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1398
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !778
@.str.73 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1429
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1665
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1615
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1667
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1606
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1608
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1617
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1625
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1648
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1651
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*) }, section ".intList", align 4, !dbg !1654
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !851
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1693
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1802
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1804
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1800
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1771
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1806
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1298
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1312
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1321
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1336
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1342
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1348
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1896
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1937
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1940
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1944
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1950
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2159
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2168
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2175
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2180
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.125 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.130, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.134, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.128, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.135, i32 0, i32 0)], align 4, !dbg !2206
@.str.129 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.130 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.131 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.132 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.133 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.134 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.128 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.135 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2318
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2331
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2354
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2462
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2465
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2467
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2173
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2170
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2469
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2505
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2037
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2503
@.str.205 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2508
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3235 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3293, !srcloc !3296
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3323, !srcloc !3324
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3325, !srcloc !3326
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3327, !srcloc !3328
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3329, !srcloc !3330
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3331, !srcloc !3332
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3333, !srcloc !3334
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3335, !srcloc !3336
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3337, !srcloc !3338
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3339, !srcloc !3340
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3341, !srcloc !3342
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3343, !srcloc !3344
  ret void, !dbg !3345
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3348 {
  %1 = tail call i32 @console_init() #25, !dbg !3353
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3354
  br label %2, !dbg !3355

2:                                                ; preds = %0, %2
  %3 = tail call i32 @console_getchar() #25, !dbg !3356
  %4 = and i32 %3, 255, !dbg !3357
  call void @llvm.dbg.value(metadata i32 %3, metadata !3351, metadata !DIExpression()), !dbg !3358
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %4) #25, !dbg !3359
  br label %2, !dbg !3355, !llvm.loop !3360
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3364, metadata !DIExpression()), !dbg !3365
  ret i32 0, !dbg !3366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3367 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3371, metadata !DIExpression()), !dbg !3372
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3373
  ret void, !dbg !3374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3375 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3378
  ret i8* %1, !dbg !3379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3380 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3392, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i8* %0, metadata !3391, metadata !DIExpression()), !dbg !3401
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3402
  ret void, !dbg !3404
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3409, metadata !DIExpression()), !dbg !3411
  call void @llvm.dbg.value(metadata i8* %1, metadata !3410, metadata !DIExpression()), !dbg !3411
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3412
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3412
  ret i32 %4, !dbg !3413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3414 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3423, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8* %1, metadata !3424, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8* %2, metadata !3425, metadata !DIExpression()), !dbg !3427
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3428
  ret void, !dbg !3429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3430 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3434, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata i32 %1, metadata !3435, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.value(metadata i32 0, metadata !3436, metadata !DIExpression()), !dbg !3437
  %3 = icmp eq i32 %1, 0, !dbg !3438
  br i1 %3, label %13, label %4, !dbg !3441

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3436, metadata !DIExpression()), !dbg !3437
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3442
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3444
  %8 = load i8, i8* %7, align 1, !dbg !3444
  %9 = zext i8 %8 to i32, !dbg !3444
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3442
  %11 = add nuw i32 %5, 1, !dbg !3445
  call void @llvm.dbg.value(metadata i32 %11, metadata !3436, metadata !DIExpression()), !dbg !3437
  %12 = icmp eq i32 %11, %1, !dbg !3438
  br i1 %12, label %13, label %4, !dbg !3441, !llvm.loop !3446

13:                                               ; preds = %4, %2
  ret void, !dbg !3448
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3449 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3453, metadata !DIExpression()), !dbg !3455
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3456
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3454, metadata !DIExpression()), !dbg !3457
  call void @llvm.va_start(i8* nonnull %3), !dbg !3458
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3459
  %5 = load i32, i32* %4, align 4, !dbg !3459
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3459
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3459
  call void @llvm.va_end(i8* nonnull %3), !dbg !3460
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3461
  ret void, !dbg !3461
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3462 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3466, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 %1, metadata !3467, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i8* %2, metadata !3468, metadata !DIExpression()), !dbg !3471
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3472
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3472
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3469, metadata !DIExpression()), !dbg !3473
  call void @llvm.va_start(i8* nonnull %5), !dbg !3474
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3475
  %7 = load i32, i32* %6, align 4, !dbg !3475
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3475
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %9, metadata !3470, metadata !DIExpression()), !dbg !3471
  call void @llvm.va_end(i8* nonnull %5), !dbg !3476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3477
  ret i32 %9, !dbg !3478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3479 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3486, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8* %0, metadata !3483, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i32 %1, metadata !3484, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8* %2, metadata !3485, metadata !DIExpression()), !dbg !3493
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3494
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3494
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3487, metadata !DIExpression()), !dbg !3495
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3496
  store i8* %0, i8** %7, align 4, !dbg !3496
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3496
  store i32 %1, i32* %8, align 4, !dbg !3496
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3496
  store i32 0, i32* %9, align 4, !dbg !3496
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3497
  %10 = load i32, i32* %9, align 4, !dbg !3498
  %11 = load i32, i32* %8, align 4, !dbg !3500
  %12 = icmp slt i32 %10, %11, !dbg !3501
  br i1 %12, label %13, label %15, !dbg !3502

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3503
  store i8 0, i8* %14, align 1, !dbg !3505
  br label %15, !dbg !3506

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3507
  ret i32 %10, !dbg !3508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3514, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3515, metadata !DIExpression()), !dbg !3516
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3517
  %4 = load i8*, i8** %3, align 4, !dbg !3517
  %5 = icmp eq i8* %4, null, !dbg !3519
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3520
  br i1 %5, label %12, label %8, !dbg !3521

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3522
  %10 = load i32, i32* %9, align 4, !dbg !3522
  %11 = icmp slt i32 %7, %10, !dbg !3523
  br i1 %11, label %15, label %12, !dbg !3524

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3525
  %14 = add nsw i32 %7, 1, !dbg !3527
  store i32 %14, i32* %13, align 4, !dbg !3527
  br label %25, !dbg !3528

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3529
  %17 = icmp eq i32 %7, %16, !dbg !3531
  br i1 %17, label %18, label %21, !dbg !3532

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3533
  store i32 %19, i32* %6, align 4, !dbg !3533
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3535
  store i8 0, i8* %20, align 1, !dbg !3536
  br label %25, !dbg !3537

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3538
  %23 = add nsw i32 %7, 1, !dbg !3540
  store i32 %23, i32* %6, align 4, !dbg !3540
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3541
  store i8 %22, i8* %24, align 1, !dbg !3542
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3543
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3544 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3554, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.value(metadata i8* %1, metadata !3555, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.value(metadata i8* %2, metadata !3556, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.value(metadata i8* %3, metadata !3557, metadata !DIExpression()), !dbg !3558
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3559
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3560
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3561
  unreachable, !dbg !3562
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3563 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3667
  ret %struct.k_thread* %1, !dbg !3668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3674, metadata !DIExpression()), !dbg !3675
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3676, !srcloc !3678
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3679
  ret void, !dbg !3680
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3681 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3682, !srcloc !3684
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3685
  ret %struct.k_thread* %1, !dbg !3686
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3687 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3698, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata i8* %1, metadata !3699, metadata !DIExpression()), !dbg !3702
  %3 = icmp eq i8* %1, null, !dbg !3703
  br i1 %3, label %8, label %4, !dbg !3705

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3706
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3706
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3700, metadata !DIExpression()), !dbg !3702
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3707, !range !3708
  call void @llvm.dbg.value(metadata i32 %7, metadata !3701, metadata !DIExpression()), !dbg !3702
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3709
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3710
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3712 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3716, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i8* %1, metadata !3717, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i8* %1, metadata !3718, metadata !DIExpression()), !dbg !3720
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3721
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3719, metadata !DIExpression()), !dbg !3720
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3722
  %5 = ptrtoint i8* %4 to i32, !dbg !3723
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3723
  %7 = sub i32 %5, %6, !dbg !3723
  %8 = lshr i32 %7, 3, !dbg !3724
  ret i32 %8, !dbg !3725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3726 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3730, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i32 %1, metadata !3731, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i1 %2, metadata !3732, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3735
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3736
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3733, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3734, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3735
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3737
  %6 = bitcast i8* %5 to i16*, !dbg !3737
  %7 = load i16, i16* %6, align 2, !dbg !3737
  %8 = and i16 %7, -2, !dbg !3741
  %9 = zext i1 %2 to i16, !dbg !3741
  %10 = or i16 %8, %9, !dbg !3741
  store i16 %10, i16* %6, align 2, !dbg !3737
  ret void, !dbg !3742
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3743 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3747, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %1, metadata !3748, metadata !DIExpression()), !dbg !3749
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3750
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3752
  br i1 %4, label %7, label %5, !dbg !3753

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3754
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3756
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3757
  br label %7, !dbg !3758

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3759, !range !3761
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3762
  br i1 %9, label %13, label %10, !dbg !3763

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3764
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3766, !range !3761
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3767
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3768
  call void @llvm.dbg.value(metadata i32 %12, metadata !3748, metadata !DIExpression()), !dbg !3749
  br label %13, !dbg !3769

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3748, metadata !DIExpression()), !dbg !3749
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3770
  ret void, !dbg !3771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3772 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3776, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i32 %1, metadata !3777, metadata !DIExpression()), !dbg !3778
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3779
  %4 = add i32 %3, %1, !dbg !3780
  ret i32 %4, !dbg !3781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3782 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3786, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %1, metadata !3787, metadata !DIExpression()), !dbg !3788
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3789
  %4 = and i32 %3, 1, !dbg !3790
  %5 = icmp ne i32 %4, 0, !dbg !3789
  ret i1 %5, !dbg !3791
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3792 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3794, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i32 %1, metadata !3795, metadata !DIExpression()), !dbg !3799
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3800, !range !3801
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3802
  call void @llvm.dbg.value(metadata i32 %4, metadata !3796, metadata !DIExpression()), !dbg !3803
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3804
  ret void, !dbg !3805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3806 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3810, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 %1, metadata !3811, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 %2, metadata !3812, metadata !DIExpression()), !dbg !3815
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3816
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3817
  %6 = add i32 %5, %4, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %6, metadata !3813, metadata !DIExpression()), !dbg !3815
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3819
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3820
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3821
  ret void, !dbg !3822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3823 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3825, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 %1, metadata !3826, metadata !DIExpression()), !dbg !3827
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3828
  %4 = sub i32 %1, %3, !dbg !3829
  ret i32 %4, !dbg !3830
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3831 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3833, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.value(metadata i32 %1, metadata !3834, metadata !DIExpression()), !dbg !3838
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3839, !range !3801
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %4, metadata !3835, metadata !DIExpression()), !dbg !3841
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3842
  ret void, !dbg !3843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3844 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3848, metadata !DIExpression()), !dbg !3850
  call void @llvm.dbg.value(metadata i32 %1, metadata !3849, metadata !DIExpression()), !dbg !3850
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3851
  %4 = lshr i32 %3, 1, !dbg !3852
  ret i32 %4, !dbg !3853
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3854 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3858, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 %1, metadata !3859, metadata !DIExpression()), !dbg !3861
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3862
  %4 = add i32 %1, 1, !dbg !3863
  %5 = sub i32 %4, %3, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %5, metadata !3860, metadata !DIExpression()), !dbg !3861
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3865, !range !3866
  %7 = sub nsw i32 31, %6, !dbg !3867
  ret i32 %7, !dbg !3868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3869 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3873, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.value(metadata i32 %1, metadata !3874, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.value(metadata i32 %2, metadata !3875, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3876, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3882
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3883
  %5 = load i32, i32* %4, align 4, !dbg !3883
  %6 = icmp eq i32 %5, 0, !dbg !3884
  br i1 %6, label %7, label %12, !dbg !3885

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3886
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3888
  %10 = load i32, i32* %9, align 4, !dbg !3889
  %11 = or i32 %10, %8, !dbg !3889
  store i32 %11, i32* %9, align 4, !dbg !3889
  store i32 %1, i32* %4, align 4, !dbg !3890
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3891
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3892
  br label %14, !dbg !3893

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3878, metadata !DIExpression()), !dbg !3894
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3895, !range !3896
  call void @llvm.dbg.value(metadata i32 %13, metadata !3881, metadata !DIExpression()), !dbg !3894
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3897
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3898
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3899
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3900
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3902 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3904, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 %1, metadata !3905, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.value(metadata i32 %2, metadata !3906, metadata !DIExpression()), !dbg !3907
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3908
  ret void, !dbg !3909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3910 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3912, metadata !DIExpression()), !dbg !3915
  call void @llvm.dbg.value(metadata i32 %1, metadata !3913, metadata !DIExpression()), !dbg !3915
  call void @llvm.dbg.value(metadata i32 %2, metadata !3914, metadata !DIExpression()), !dbg !3915
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3916
  ret void, !dbg !3917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3918 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3920, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i32 %1, metadata !3921, metadata !DIExpression()), !dbg !3922
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3923
  ret i32 %3, !dbg !3924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3925 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3929, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i32 %1, metadata !3930, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i32 %2, metadata !3931, metadata !DIExpression()), !dbg !3934
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3935
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3932, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3934
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3934
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %5, metadata !3933, metadata !DIExpression()), !dbg !3934
  %6 = bitcast i8* %5 to i16*, !dbg !3937
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3940
  %8 = load i16, i16* %7, align 2, !dbg !3940
  %9 = zext i16 %8 to i32, !dbg !3940
  ret i32 %9, !dbg !3941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3942 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3946, metadata !DIExpression()), !dbg !3947
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3948
  ret %struct.chunk_unit_t* %2, !dbg !3949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3950 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3954, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %1, metadata !3955, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %2, metadata !3956, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %3, metadata !3957, metadata !DIExpression()), !dbg !3960
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3961
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3958, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3959, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3960
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3962
  call void @llvm.dbg.value(metadata i8* %6, metadata !3959, metadata !DIExpression()), !dbg !3960
  %7 = trunc i32 %3 to i16, !dbg !3963
  %8 = bitcast i8* %6 to i16*, !dbg !3966
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3967
  store i16 %7, i16* %9, align 2, !dbg !3968
  ret void, !dbg !3969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3970 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3974, metadata !DIExpression()), !dbg !3975
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3976
  ret i32 %2, !dbg !3977
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3978 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3982, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %1, metadata !3983, metadata !DIExpression()), !dbg !3984
  %3 = add i32 %1, 4, !dbg !3985
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3986
  ret i32 %4, !dbg !3987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3992, metadata !DIExpression()), !dbg !3993
  %2 = add i32 %0, 7, !dbg !3994
  %3 = lshr i32 %2, 3, !dbg !3995
  ret i32 %3, !dbg !3996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3997 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4001, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i32 %1, metadata !4002, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i32 %2, metadata !4003, metadata !DIExpression()), !dbg !4004
  %4 = shl i32 %2, 1, !dbg !4005
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4006
  ret void, !dbg !4007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4008 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4010, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %1, metadata !4011, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i32 %2, metadata !4012, metadata !DIExpression()), !dbg !4013
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4014
  ret void, !dbg !4015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4016 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4018, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata i32 %1, metadata !4019, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata i32 %2, metadata !4020, metadata !DIExpression()), !dbg !4026
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4027
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4021, metadata !DIExpression()), !dbg !4026
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4028
  %6 = icmp eq i32 %5, %1, !dbg !4029
  br i1 %6, label %7, label %14, !dbg !4030

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4031
  %9 = xor i32 %8, -1, !dbg !4033
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4034
  %11 = load i32, i32* %10, align 4, !dbg !4035
  %12 = and i32 %11, %9, !dbg !4035
  store i32 %12, i32* %10, align 4, !dbg !4035
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4036
  store i32 0, i32* %13, align 4, !dbg !4037
  br label %17, !dbg !4038

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4039
  call void @llvm.dbg.value(metadata i32 %15, metadata !4022, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata i32 %5, metadata !4025, metadata !DIExpression()), !dbg !4040
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4041
  store i32 %5, i32* %16, align 4, !dbg !4042
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4043
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4044
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4046 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4048, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata i32 %1, metadata !4049, metadata !DIExpression()), !dbg !4050
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4051
  ret i32 %3, !dbg !4052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4053 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4057, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i8* %1, metadata !4058, metadata !DIExpression()), !dbg !4064
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4065
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4065
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4059, metadata !DIExpression()), !dbg !4064
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %5, metadata !4060, metadata !DIExpression()), !dbg !4064
  %6 = ptrtoint i8* %1 to i32, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %6, metadata !4061, metadata !DIExpression()), !dbg !4064
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4068
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4068
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %9, metadata !4062, metadata !DIExpression()), !dbg !4064
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4070
  %11 = shl i32 %10, 3, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %11, metadata !4063, metadata !DIExpression()), !dbg !4064
  %12 = sub i32 %9, %6, !dbg !4072
  %13 = add i32 %12, %11, !dbg !4073
  ret i32 %13, !dbg !4074
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4075 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4079, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %1, metadata !4080, metadata !DIExpression()), !dbg !4085
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4086
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4086
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4081, metadata !DIExpression()), !dbg !4085
  %5 = icmp eq i32 %1, 0, !dbg !4087
  br i1 %5, label %19, label %6, !dbg !4089

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4090
  br i1 %7, label %19, label %8, !dbg !4091

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4092, !range !3708
  call void @llvm.dbg.value(metadata i32 %9, metadata !4083, metadata !DIExpression()), !dbg !4085
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4093
  call void @llvm.dbg.value(metadata i32 %10, metadata !4084, metadata !DIExpression()), !dbg !4085
  %11 = icmp eq i32 %10, 0, !dbg !4094
  br i1 %11, label %19, label %12, !dbg !4096

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4097
  %14 = icmp ugt i32 %13, %9, !dbg !4099
  br i1 %14, label %15, label %17, !dbg !4100

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4101
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4103
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4104
  br label %17, !dbg !4105

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4106
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4107
  call void @llvm.dbg.value(metadata i8* %18, metadata !4082, metadata !DIExpression()), !dbg !4085
  br label %19, !dbg !4108

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4085
  ret i8* %20, !dbg !4109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4110 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4114, metadata !DIExpression()), !dbg !4116
  call void @llvm.dbg.value(metadata i32 %1, metadata !4115, metadata !DIExpression()), !dbg !4116
  %3 = lshr i32 %1, 3, !dbg !4117
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4118
  %5 = load i32, i32* %4, align 4, !dbg !4118
  %6 = icmp uge i32 %3, %5, !dbg !4119
  ret i1 %6, !dbg !4120
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4121 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4125, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata i32 %1, metadata !4126, metadata !DIExpression()), !dbg !4140
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %3, metadata !4127, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4128, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4140
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4142
  %5 = load i32, i32* %4, align 4, !dbg !4142
  %6 = icmp eq i32 %5, 0, !dbg !4143
  br i1 %6, label %19, label %7, !dbg !4144

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4145
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4146
  call void @llvm.dbg.value(metadata i32 %9, metadata !4132, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.value(metadata i32 %8, metadata !4133, metadata !DIExpression()), !dbg !4147
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4148
  %11 = icmp ult i32 %10, %1, !dbg !4150
  br i1 %11, label %13, label %12, !dbg !4151

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4152
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4154
  store i32 %14, i32* %4, align 4, !dbg !4155
  %15 = add nsw i32 %9, -1, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %15, metadata !4132, metadata !DIExpression()), !dbg !4146
  %16 = icmp eq i32 %15, 0, !dbg !4156
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4157
  br i1 %18, label %19, label %7, !dbg !4157, !llvm.loop !4158

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4161
  %21 = load i32, i32* %20, align 4, !dbg !4161
  %22 = add nsw i32 %3, 1, !dbg !4162
  %23 = shl nsw i32 -1, %22, !dbg !4162
  %24 = and i32 %21, %23, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %24, metadata !4135, metadata !DIExpression()), !dbg !4140
  %25 = icmp eq i32 %24, 0, !dbg !4164
  br i1 %25, label %30, label %26, !dbg !4165

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4166, !range !3866
  call void @llvm.dbg.value(metadata i32 %27, metadata !4136, metadata !DIExpression()), !dbg !4167
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4168
  %29 = load i32, i32* %28, align 4, !dbg !4168
  call void @llvm.dbg.value(metadata i32 %29, metadata !4139, metadata !DIExpression()), !dbg !4167
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4169
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4140
  ret i32 %31, !dbg !4170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4171 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4173, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 %1, metadata !4174, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata i32 %2, metadata !4175, metadata !DIExpression()), !dbg !4179
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %4, metadata !4176, metadata !DIExpression()), !dbg !4179
  %5 = sub i32 %2, %1, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %5, metadata !4177, metadata !DIExpression()), !dbg !4179
  %6 = sub i32 %4, %5, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %6, metadata !4178, metadata !DIExpression()), !dbg !4179
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4183
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4184
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4185
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4186
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4187
  ret void, !dbg !4188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4189 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4193, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata i32 %1, metadata !4194, metadata !DIExpression()), !dbg !4197
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4198
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4195, metadata !DIExpression()), !dbg !4197
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4199
  call void @llvm.dbg.value(metadata i8* %4, metadata !4196, metadata !DIExpression()), !dbg !4197
  ret i8* %4, !dbg !4200
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4201 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4205, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %1, metadata !4206, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %2, metadata !4207, metadata !DIExpression()), !dbg !4217
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4218
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4218
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4208, metadata !DIExpression()), !dbg !4217
  %6 = sub i32 0, %1, !dbg !4219
  %7 = and i32 %6, %1, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %7, metadata !4210, metadata !DIExpression()), !dbg !4217
  %8 = icmp eq i32 %7, %1, !dbg !4221
  br i1 %8, label %13, label %9, !dbg !4223

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %10, metadata !4206, metadata !DIExpression()), !dbg !4217
  %11 = icmp ult i32 %7, 4, !dbg !4226
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4226
  br label %17, !dbg !4226

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4227
  br i1 %14, label %15, label %17, !dbg !4230

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4231
  br label %57, !dbg !4233

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4217
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4234
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4206, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %19, metadata !4209, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %18, metadata !4210, metadata !DIExpression()), !dbg !4217
  %21 = icmp eq i32 %2, 0, !dbg !4235
  br i1 %21, label %57, label %22, !dbg !4237

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4238
  br i1 %23, label %57, label %24, !dbg !4239

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4240
  %26 = add i32 %25, %20, !dbg !4241
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4242, !range !3708
  call void @llvm.dbg.value(metadata i32 %27, metadata !4211, metadata !DIExpression()), !dbg !4217
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %28, metadata !4212, metadata !DIExpression()), !dbg !4217
  %29 = icmp eq i32 %28, 0, !dbg !4244
  br i1 %29, label %57, label %30, !dbg !4246

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4247
  call void @llvm.dbg.value(metadata i8* %31, metadata !4213, metadata !DIExpression()), !dbg !4217
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4248
  %33 = ptrtoint i8* %32 to i32, !dbg !4248
  %34 = add i32 %20, -1, !dbg !4248
  %35 = add i32 %34, %33, !dbg !4248
  %36 = sub i32 0, %20, !dbg !4248
  %37 = and i32 %35, %36, !dbg !4248
  %38 = inttoptr i32 %37 to i8*, !dbg !4249
  %39 = sub i32 0, %18, !dbg !4250
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4250
  call void @llvm.dbg.value(metadata i8* %40, metadata !4213, metadata !DIExpression()), !dbg !4217
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4251
  %42 = ptrtoint i8* %41 to i32, !dbg !4251
  %43 = add i32 %42, 7, !dbg !4251
  %44 = and i32 %43, -8, !dbg !4251
  call void @llvm.dbg.value(metadata i32 %44, metadata !4214, metadata !DIExpression()), !dbg !4217
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4252
  call void @llvm.dbg.value(metadata i32 %45, metadata !4215, metadata !DIExpression()), !dbg !4217
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4253
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4254
  %48 = sub i32 %44, %47, !dbg !4254
  %49 = ashr exact i32 %48, 3, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %49, metadata !4216, metadata !DIExpression()), !dbg !4217
  %50 = icmp ugt i32 %45, %28, !dbg !4255
  br i1 %50, label %51, label %52, !dbg !4257

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4258
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4260
  br label %52, !dbg !4261

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4262
  %54 = icmp ugt i32 %53, %49, !dbg !4264
  br i1 %54, label %55, label %56, !dbg !4265

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4266
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4268
  br label %56, !dbg !4269

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4270
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4217
  ret i8* %58, !dbg !4271
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4272 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4276, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i8* %1, metadata !4277, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i32 %2, metadata !4278, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i32 %3, metadata !4279, metadata !DIExpression()), !dbg !4295
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4296
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4296
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4280, metadata !DIExpression()), !dbg !4295
  %7 = icmp eq i8* %1, null, !dbg !4297
  br i1 %7, label %8, label %10, !dbg !4299

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4300
  br label %59, !dbg !4302

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4303
  br i1 %11, label %12, label %13, !dbg !4305

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4306
  br label %59, !dbg !4308

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4309
  br i1 %14, label %59, label %15, !dbg !4311

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4312, !range !3708
  call void @llvm.dbg.value(metadata i32 %16, metadata !4281, metadata !DIExpression()), !dbg !4295
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4313
  call void @llvm.dbg.value(metadata i32 %17, metadata !4282, metadata !DIExpression()), !dbg !4295
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4314
  %19 = ptrtoint i8* %1 to i32, !dbg !4315
  %20 = ptrtoint i8* %18 to i32, !dbg !4315
  %21 = sub i32 %19, %20, !dbg !4315
  call void @llvm.dbg.value(metadata i32 %21, metadata !4283, metadata !DIExpression()), !dbg !4295
  %22 = add i32 %21, %3, !dbg !4316
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %23, metadata !4284, metadata !DIExpression()), !dbg !4295
  %24 = icmp eq i32 %2, 0, !dbg !4318
  br i1 %24, label %29, label %25, !dbg !4319

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4320
  %27 = and i32 %26, %19, !dbg !4321
  %28 = icmp eq i32 %27, 0, !dbg !4321
  br i1 %28, label %29, label %49, !dbg !4322

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4323
  %31 = icmp eq i32 %23, %30, !dbg !4324
  br i1 %31, label %59, label %32, !dbg !4325

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4326
  br i1 %33, label %34, label %36, !dbg !4327

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4328
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4330
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4331
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4332
  br label %59, !dbg !4333

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4334
  br i1 %37, label %49, label %38, !dbg !4335

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4336
  %40 = add i32 %39, %30, !dbg !4337
  %41 = icmp ult i32 %40, %23, !dbg !4338
  br i1 %41, label %49, label %42, !dbg !4339

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %43, metadata !4285, metadata !DIExpression()), !dbg !4341
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4342
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4343
  %45 = icmp ult i32 %43, %44, !dbg !4345
  br i1 %45, label %46, label %48, !dbg !4346

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4347
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4349
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4350
  br label %48, !dbg !4351

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4352
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4353
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4354
  call void @llvm.dbg.value(metadata i8* %50, metadata !4291, metadata !DIExpression()), !dbg !4295
  %51 = icmp eq i8* %50, null, !dbg !4355
  br i1 %51, label %59, label %52, !dbg !4356

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4357, !range !3801
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4358
  %55 = sub i32 %54, %21, !dbg !4359
  call void @llvm.dbg.value(metadata i32 %55, metadata !4292, metadata !DIExpression()), !dbg !4360
  %56 = icmp ult i32 %55, %3, !dbg !4361
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4361
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4362
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4363
  br label %59, !dbg !4364

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4295
  ret i8* %60, !dbg !4365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4366 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4370, metadata !DIExpression()), !dbg !4372
  call void @llvm.dbg.value(metadata i32 %1, metadata !4371, metadata !DIExpression()), !dbg !4372
  %3 = shl i32 %1, 3, !dbg !4373
  %4 = add i32 %3, -4, !dbg !4374
  ret i32 %4, !dbg !4375
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4376 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4380, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8* %1, metadata !4381, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 %2, metadata !4382, metadata !DIExpression()), !dbg !4391
  %4 = add i32 %2, -4, !dbg !4392
  call void @llvm.dbg.value(metadata i32 %4, metadata !4382, metadata !DIExpression()), !dbg !4391
  %5 = ptrtoint i8* %1 to i32, !dbg !4393
  %6 = add i32 %5, 7, !dbg !4393
  %7 = and i32 %6, -8, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %7, metadata !4383, metadata !DIExpression()), !dbg !4391
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4394
  %9 = ptrtoint i8* %8 to i32, !dbg !4394
  %10 = and i32 %9, -8, !dbg !4394
  call void @llvm.dbg.value(metadata i32 %10, metadata !4384, metadata !DIExpression()), !dbg !4391
  %11 = sub i32 %10, %7, !dbg !4395
  %12 = lshr exact i32 %11, 3, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %12, metadata !4385, metadata !DIExpression()), !dbg !4391
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4397
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4386, metadata !DIExpression()), !dbg !4391
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4398
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4399
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4400
  store i32 %12, i32* %15, align 8, !dbg !4401
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4402
  store i32 0, i32* %16, align 4, !dbg !4403
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4404
  call void @llvm.dbg.value(metadata i32 %17, metadata !4387, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4391
  %18 = shl i32 %17, 2, !dbg !4405
  %19 = add i32 %18, 20, !dbg !4406
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %20, metadata !4388, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 0, metadata !4389, metadata !DIExpression()), !dbg !4408
  %21 = icmp slt i32 %17, 0, !dbg !4409
  br i1 %21, label %22, label %24, !dbg !4411

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4412
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4413
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4414
  %23 = sub i32 %12, %20, !dbg !4415
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4416
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4417
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4418
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4419
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4420
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4421
  ret void, !dbg !4422

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4389, metadata !DIExpression()), !dbg !4408
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4423
  store i32 0, i32* %26, align 4, !dbg !4425
  %27 = add nuw i32 %25, 1, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %27, metadata !4389, metadata !DIExpression()), !dbg !4408
  %28 = icmp eq i32 %25, %17, !dbg !4409
  br i1 %28, label %22, label %24, !dbg !4411, !llvm.loop !4427
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4429 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4442, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4439, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %1, metadata !4440, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %2, metadata !4441, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %4, metadata !4443, metadata !DIExpression()), !dbg !4570
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4571
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4571
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4444, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 0, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i1 undef, metadata !4450, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4570
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4573

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4573

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4574
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4442, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %30, metadata !4441, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %29, metadata !4448, metadata !DIExpression()), !dbg !4570
  %31 = load i8, i8* %30, align 1, !dbg !4575
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4573

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4575
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4576
  call void @llvm.dbg.value(metadata i8* %34, metadata !4441, metadata !DIExpression()), !dbg !4570
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4576
  call void @llvm.dbg.value(metadata i32 %35, metadata !4452, metadata !DIExpression()), !dbg !4577
  %36 = icmp slt i32 %35, 0, !dbg !4578
  %37 = add i32 %29, 1, !dbg !4576
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %36, label %365, label %28, !llvm.loop !4580

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4582
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4457, metadata !DIExpression()), !dbg !4583
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4583
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4502, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4505, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i8* %30, metadata !4508, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i32 -1, metadata !4509, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i32 -1, metadata !4510, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i8* null, metadata !4511, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i8* %14, metadata !4512, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i8 0, metadata !4513, metadata !DIExpression()), !dbg !4584
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4585
  call void @llvm.dbg.value(metadata i8* %39, metadata !4441, metadata !DIExpression()), !dbg !4570
  %40 = load i24, i24* %15, align 8, !dbg !4586
  %41 = and i24 %40, 256, !dbg !4586
  %42 = icmp eq i24 %41, 0, !dbg !4586
  br i1 %42, label %51, label %43, !dbg !4588

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4589
  call void @llvm.dbg.value(metadata i8* %44, metadata !4442, metadata !DIExpression()), !dbg !4570
  %45 = bitcast i8* %27 to i32*, !dbg !4589
  %46 = load i32, i32* %45, align 4, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %46, metadata !4509, metadata !DIExpression()), !dbg !4584
  %47 = icmp slt i32 %46, 0, !dbg !4591
  br i1 %47, label %48, label %56, !dbg !4593

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4594
  store i24 %49, i24* %15, align 8, !dbg !4594
  %50 = sub nsw i32 0, %46, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %50, metadata !4509, metadata !DIExpression()), !dbg !4584
  br label %56, !dbg !4597

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4598
  %53 = icmp eq i24 %52, 0, !dbg !4598
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4600
  br label %56, !dbg !4600

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4601
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4584
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4442, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %58, metadata !4509, metadata !DIExpression()), !dbg !4584
  %60 = and i24 %57, 1024, !dbg !4601
  %61 = icmp eq i24 %60, 0, !dbg !4601
  br i1 %61, label %69, label %62, !dbg !4602

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4603
  call void @llvm.dbg.value(metadata i8* %63, metadata !4442, metadata !DIExpression()), !dbg !4570
  %64 = bitcast i8* %59 to i32*, !dbg !4603
  %65 = load i32, i32* %64, align 4, !dbg !4603
  call void @llvm.dbg.value(metadata i32 %65, metadata !4514, metadata !DIExpression()), !dbg !4604
  %66 = icmp slt i32 %65, 0, !dbg !4605
  br i1 %66, label %67, label %74, !dbg !4607

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4608
  store i24 %68, i24* %15, align 8, !dbg !4608
  br label %74, !dbg !4610

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4611
  %71 = icmp eq i24 %70, 0, !dbg !4611
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4613
  br label %74, !dbg !4613

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4614
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4584
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4584
  call void @llvm.dbg.value(metadata i8* %77, metadata !4442, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %76, metadata !4510, metadata !DIExpression()), !dbg !4584
  store i32 0, i32* %16, align 4, !dbg !4615
  store i32 0, i32* %17, align 8, !dbg !4616
  %78 = lshr i24 %75, 16, !dbg !4614
  call void @llvm.dbg.value(metadata i24 %78, metadata !4517, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4584
  %79 = lshr i24 %75, 11, !dbg !4617
  %80 = and i24 %79, 15, !dbg !4617
  %81 = zext i24 %80 to i32, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %81, metadata !4518, metadata !DIExpression()), !dbg !4584
  %82 = trunc i24 %78 to i3, !dbg !4618
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4618

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4619

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4622
  call void @llvm.dbg.value(metadata i8* %85, metadata !4442, metadata !DIExpression()), !dbg !4570
  %86 = bitcast i8* %77 to i32*, !dbg !4622
  %87 = load i32, i32* %86, align 4, !dbg !4622
  %88 = sext i32 %87 to i64, !dbg !4622
  store i64 %88, i64* %20, align 8, !dbg !4624
  br label %115, !dbg !4625

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4626
  call void @llvm.dbg.value(metadata i8* %90, metadata !4442, metadata !DIExpression()), !dbg !4570
  %91 = bitcast i8* %77 to i32*, !dbg !4626
  %92 = load i32, i32* %91, align 4, !dbg !4626
  %93 = sext i32 %92 to i64, !dbg !4626
  store i64 %93, i64* %20, align 8, !dbg !4629
  br label %115, !dbg !4630

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4631
  %96 = add i32 %95, 7, !dbg !4631
  %97 = and i32 %96, -8, !dbg !4631
  %98 = inttoptr i32 %97 to i8*, !dbg !4631
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4631
  call void @llvm.dbg.value(metadata i8* %99, metadata !4442, metadata !DIExpression()), !dbg !4570
  %100 = inttoptr i32 %97 to i64*, !dbg !4631
  %101 = load i64, i64* %100, align 8, !dbg !4631
  store i64 %101, i64* %20, align 8, !dbg !4632
  br label %115, !dbg !4633

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4634
  %104 = add i32 %103, 7, !dbg !4634
  %105 = and i32 %104, -8, !dbg !4634
  %106 = inttoptr i32 %105 to i8*, !dbg !4634
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4634
  call void @llvm.dbg.value(metadata i8* %107, metadata !4442, metadata !DIExpression()), !dbg !4570
  %108 = inttoptr i32 %105 to i64*, !dbg !4634
  %109 = load i64, i64* %108, align 8, !dbg !4634
  store i64 %109, i64* %20, align 8, !dbg !4635
  br label %115, !dbg !4636

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4637
  call void @llvm.dbg.value(metadata i8* %111, metadata !4442, metadata !DIExpression()), !dbg !4570
  %112 = bitcast i8* %77 to i32*, !dbg !4637
  %113 = load i32, i32* %112, align 4, !dbg !4637
  %114 = sext i32 %113 to i64, !dbg !4638
  store i64 %114, i64* %20, align 8, !dbg !4639
  br label %115, !dbg !4640

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4641
  call void @llvm.dbg.value(metadata i8* %117, metadata !4442, metadata !DIExpression()), !dbg !4570
  %118 = trunc i24 %79 to i4, !dbg !4642
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4642

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4643
  %121 = ashr exact i64 %120, 56, !dbg !4643
  store i64 %121, i64* %20, align 8, !dbg !4646
  br label %177, !dbg !4647

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4648
  %124 = ashr exact i64 %123, 48, !dbg !4648
  store i64 %124, i64* %20, align 8, !dbg !4651
  br label %177, !dbg !4652

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4653

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %127, metadata !4442, metadata !DIExpression()), !dbg !4570
  %128 = bitcast i8* %77 to i32*, !dbg !4656
  %129 = load i32, i32* %128, align 4, !dbg !4656
  %130 = zext i32 %129 to i64, !dbg !4656
  store i64 %130, i64* %20, align 8, !dbg !4658
  br label %157, !dbg !4659

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4660
  call void @llvm.dbg.value(metadata i8* %132, metadata !4442, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %132, metadata !4442, metadata !DIExpression()), !dbg !4570
  %133 = bitcast i8* %77 to i32*, !dbg !4660
  %134 = load i32, i32* %133, align 4, !dbg !4660
  %135 = zext i32 %134 to i64, !dbg !4660
  store i64 %135, i64* %20, align 8, !dbg !4660
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4662
  %138 = add i32 %137, 7, !dbg !4662
  %139 = and i32 %138, -8, !dbg !4662
  %140 = inttoptr i32 %139 to i8*, !dbg !4662
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4662
  call void @llvm.dbg.value(metadata i8* %141, metadata !4442, metadata !DIExpression()), !dbg !4570
  %142 = inttoptr i32 %139 to i64*, !dbg !4662
  %143 = load i64, i64* %142, align 8, !dbg !4662
  store i64 %143, i64* %20, align 8, !dbg !4663
  br label %157, !dbg !4664

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4665
  %146 = add i32 %145, 7, !dbg !4665
  %147 = and i32 %146, -8, !dbg !4665
  %148 = inttoptr i32 %147 to i8*, !dbg !4665
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4665
  call void @llvm.dbg.value(metadata i8* %149, metadata !4442, metadata !DIExpression()), !dbg !4570
  %150 = inttoptr i32 %147 to i64*, !dbg !4665
  %151 = load i64, i64* %150, align 8, !dbg !4665
  store i64 %151, i64* %20, align 8, !dbg !4666
  br label %157, !dbg !4667

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4668
  call void @llvm.dbg.value(metadata i8* %153, metadata !4442, metadata !DIExpression()), !dbg !4570
  %154 = bitcast i8* %77 to i32*, !dbg !4668
  %155 = load i32, i32* %154, align 4, !dbg !4668
  %156 = zext i32 %155 to i64, !dbg !4669
  store i64 %156, i64* %20, align 8, !dbg !4670
  br label %157, !dbg !4671

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4672
  call void @llvm.dbg.value(metadata i8* %159, metadata !4442, metadata !DIExpression()), !dbg !4570
  %160 = trunc i24 %79 to i4, !dbg !4673
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4673

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4674
  store i64 %162, i64* %20, align 8, !dbg !4677
  br label %177, !dbg !4678

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4679
  store i64 %164, i64* %20, align 8, !dbg !4682
  br label %177, !dbg !4683

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4684
  %167 = add i32 %166, 7, !dbg !4684
  %168 = and i32 %167, -8, !dbg !4684
  %169 = inttoptr i32 %168 to i8*, !dbg !4684
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4684
  call void @llvm.dbg.value(metadata i8* %170, metadata !4442, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %170, metadata !4442, metadata !DIExpression()), !dbg !4570
  %171 = inttoptr i32 %168 to double*, !dbg !4684
  %172 = load double, double* %171, align 8, !dbg !4684
  store double %172, double* %19, align 8, !dbg !4684
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %174, metadata !4442, metadata !DIExpression()), !dbg !4570
  %175 = bitcast i8* %77 to i8**, !dbg !4688
  %176 = load i8*, i8** %175, align 4, !dbg !4688
  store i8* %176, i8** %18, align 8, !dbg !4691
  br label %177, !dbg !4692

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4584
  call void @llvm.dbg.value(metadata i8* %178, metadata !4442, metadata !DIExpression()), !dbg !4570
  %179 = and i24 %75, 3, !dbg !4693
  %180 = icmp eq i24 %179, 0, !dbg !4693
  br i1 %180, label %185, label %181, !dbg !4693

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %182, metadata !4519, metadata !DIExpression()), !dbg !4695
  %183 = icmp slt i32 %182, 0, !dbg !4696
  %184 = add i32 %182, %29, !dbg !4694
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4698
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4699

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %188, metadata !4523, metadata !DIExpression()), !dbg !4701
  %189 = icmp slt i32 %188, 0, !dbg !4702
  %190 = add i32 %29, 1, !dbg !4700
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4704
  call void @llvm.dbg.value(metadata i8* %192, metadata !4511, metadata !DIExpression()), !dbg !4584
  %193 = icmp sgt i32 %76, -1, !dbg !4705
  br i1 %193, label %194, label %196, !dbg !4707

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %195, metadata !4526, metadata !DIExpression()), !dbg !4710
  br label %241, !dbg !4711

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %197, metadata !4526, metadata !DIExpression()), !dbg !4710
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4511, metadata !DIExpression()), !dbg !4584
  %199 = load i64, i64* %20, align 8, !dbg !4714
  %200 = trunc i64 %199 to i8, !dbg !4715
  store i8 %200, i8* %10, align 1, !dbg !4716
  call void @llvm.dbg.value(metadata i8* %23, metadata !4512, metadata !DIExpression()), !dbg !4584
  br label %245, !dbg !4717

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4718
  %203 = icmp eq i24 %202, 0, !dbg !4718
  %204 = trunc i24 %75 to i8, !dbg !4720
  %205 = shl i8 %204, 1, !dbg !4720
  %206 = and i8 %205, 32, !dbg !4720
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4720
  call void @llvm.dbg.value(metadata i8 %207, metadata !4513, metadata !DIExpression()), !dbg !4584
  %208 = load i64, i64* %20, align 8, !dbg !4721
  call void @llvm.dbg.value(metadata i64 %208, metadata !4449, metadata !DIExpression()), !dbg !4570
  %209 = icmp slt i64 %208, 0, !dbg !4722
  br i1 %209, label %210, label %212, !dbg !4724

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4513, metadata !DIExpression()), !dbg !4584
  %211 = sub nsw i64 0, %208, !dbg !4725
  store i64 %211, i64* %20, align 8, !dbg !4727
  br label %212, !dbg !4728

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4584
  call void @llvm.dbg.value(metadata i8 %213, metadata !4513, metadata !DIExpression()), !dbg !4584
  %214 = load i64, i64* %20, align 8, !dbg !4729
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4730
  call void @llvm.dbg.value(metadata i8* %215, metadata !4511, metadata !DIExpression()), !dbg !4584
  br label %216, !dbg !4731

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4732
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4733
  call void @llvm.dbg.value(metadata i8* %218, metadata !4511, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i8 %217, metadata !4513, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.label(metadata !4569), !dbg !4734
  %219 = icmp sgt i32 %76, -1, !dbg !4735
  br i1 %219, label %222, label %220, !dbg !4736

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4737
  br label %245, !dbg !4736

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4739
  %224 = sub i32 %22, %223, !dbg !4739
  call void @llvm.dbg.value(metadata i32 %224, metadata !4528, metadata !DIExpression()), !dbg !4740
  %225 = load i24, i24* %15, align 8, !dbg !4741
  %226 = and i24 %225, -65, !dbg !4741
  store i24 %226, i24* %15, align 8, !dbg !4741
  %227 = icmp ugt i32 %76, %224, !dbg !4742
  br i1 %227, label %228, label %245, !dbg !4744

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4745
  store i32 %229, i32* %16, align 4, !dbg !4747
  br label %245, !dbg !4748

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4749
  %232 = icmp eq i8* %231, null, !dbg !4751
  br i1 %232, label %245, label %233, !dbg !4752

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4753
  %235 = zext i32 %234 to i64, !dbg !4753
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4755
  call void @llvm.dbg.value(metadata i8* %236, metadata !4511, metadata !DIExpression()), !dbg !4584
  %237 = load i24, i24* %15, align 8, !dbg !4756
  %238 = or i24 %237, 1048576, !dbg !4756
  store i24 %238, i24* %15, align 8, !dbg !4756
  store i8 120, i8* %21, align 1, !dbg !4757
  br label %216, !dbg !4758

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4759
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4762
  br label %363, !dbg !4763

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %242, metadata !4526, metadata !DIExpression()), !dbg !4710
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4765
  call void @llvm.dbg.value(metadata i32 -1, metadata !4510, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i32 %29, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %192, metadata !4511, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i8* %243, metadata !4512, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i8 0, metadata !4513, metadata !DIExpression()), !dbg !4584
  %244 = icmp eq i8* %192, null, !dbg !4766
  br i1 %244, label %363, label %245, !dbg !4768, !llvm.loop !4580

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4737
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4584
  call void @llvm.dbg.value(metadata i32 0, metadata !4532, metadata !DIExpression()), !dbg !4584
  %250 = zext i8 %249 to i32, !dbg !4769
  %251 = icmp eq i8 %249, 0, !dbg !4771
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  call void @llvm.dbg.value(metadata i32 undef, metadata !4531, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  call void @llvm.dbg.value(metadata i32 undef, metadata !4531, metadata !DIExpression()), !dbg !4584
  %252 = icmp sgt i32 %58, 0, !dbg !4772
  br i1 %252, label %253, label %302, !dbg !4773

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4737
  %255 = icmp eq i24 %254, 0, !dbg !4737
  %256 = ptrtoint i8* %248 to i32, !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  %257 = ptrtoint i8* %247 to i32, !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  %258 = xor i1 %251, true, !dbg !4775
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  %259 = sext i1 %258 to i32, !dbg !4775
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  %260 = lshr i24 %246, 19, !dbg !4776
  %261 = and i24 %260, 1, !dbg !4776
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4776
  %263 = zext i24 %262 to i32, !dbg !4776
  %264 = add i32 %257, %259, !dbg !4776
  %265 = add i32 %256, %263, !dbg !4776
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  %266 = and i24 %246, 4194304, !dbg !4777
  %267 = icmp eq i24 %266, 0, !dbg !4777
  %268 = load i32, i32* %16, align 4, !dbg !4779
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4531, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4584
  call void @llvm.dbg.value(metadata i32 undef, metadata !4531, metadata !DIExpression()), !dbg !4584
  %269 = load i32, i32* %17, align 8, !dbg !4780
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4780
  call void @llvm.dbg.value(metadata i32 undef, metadata !4531, metadata !DIExpression()), !dbg !4584
  %271 = add i32 %264, %58, !dbg !4780
  %272 = add i32 %265, %268, !dbg !4780
  %273 = add i32 %272, %270, !dbg !4781
  %274 = sub i32 %271, %273, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %274, metadata !4509, metadata !DIExpression()), !dbg !4584
  %275 = and i24 %246, 4, !dbg !4782
  %276 = icmp eq i24 %275, 0, !dbg !4782
  br i1 %276, label %277, label %302, !dbg !4783

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4533, metadata !DIExpression()), !dbg !4784
  %278 = and i24 %246, 64, !dbg !4785
  %279 = icmp eq i24 %278, 0, !dbg !4785
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4786
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4786
  %282 = select i1 %279, i32 32, i32 48, !dbg !4786
  br i1 %280, label %287, label %283, !dbg !4786

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %284, metadata !4538, metadata !DIExpression()), !dbg !4788
  %285 = icmp slt i32 %284, 0, !dbg !4789
  %286 = add i32 %29, 1, !dbg !4787
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4584
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %290, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8 undef, metadata !4533, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8 %288, metadata !4513, metadata !DIExpression()), !dbg !4584
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4791
  %292 = add i32 %291, -1, !dbg !4791
  br label %293, !dbg !4791

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4792
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %295, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %294, metadata !4509, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i32 %294, metadata !4509, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4584
  %296 = icmp sgt i32 %294, 0, !dbg !4793
  br i1 %296, label %297, label %302, !dbg !4791

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %298, metadata !4509, metadata !DIExpression()), !dbg !4584
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4795
  call void @llvm.dbg.value(metadata i32 %299, metadata !4544, metadata !DIExpression()), !dbg !4796
  %300 = icmp slt i32 %299, 0, !dbg !4797
  %301 = add i32 %295, 1, !dbg !4795
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %300, label %361, label %293, !llvm.loop !4799

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4584
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4584
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %305, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %304, metadata !4509, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i8 %303, metadata !4513, metadata !DIExpression()), !dbg !4584
  %306 = icmp eq i8 %303, 0, !dbg !4801
  br i1 %306, label %312, label %307, !dbg !4802

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4803
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %309, metadata !4547, metadata !DIExpression()), !dbg !4805
  %310 = icmp slt i32 %309, 0, !dbg !4806
  %311 = add i32 %305, 1, !dbg !4804
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %313, metadata !4448, metadata !DIExpression()), !dbg !4570
  %314 = lshr i24 %246, 20, !dbg !4808
  %315 = lshr i24 %246, 19, !dbg !4809
  %316 = or i24 %314, %315, !dbg !4810
  %317 = and i24 %316, 1, !dbg !4810
  %318 = icmp eq i24 %317, 0, !dbg !4810
  br i1 %318, label %323, label %319, !dbg !4811

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %320, metadata !4551, metadata !DIExpression()), !dbg !4813
  %321 = icmp slt i32 %320, 0, !dbg !4814
  %322 = add i32 %313, 1, !dbg !4812
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %324, metadata !4448, metadata !DIExpression()), !dbg !4570
  %325 = and i24 %246, 1048576, !dbg !4816
  %326 = icmp eq i24 %325, 0, !dbg !4816
  br i1 %326, label %333, label %327, !dbg !4817

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4818
  %329 = zext i8 %328 to i32, !dbg !4818
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %330, metadata !4557, metadata !DIExpression()), !dbg !4819
  %331 = icmp slt i32 %330, 0, !dbg !4820
  %332 = add i32 %324, 1, !dbg !4818
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %334, metadata !4448, metadata !DIExpression()), !dbg !4570
  %335 = load i32, i32* %16, align 4, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %335, metadata !4532, metadata !DIExpression()), !dbg !4584
  br label %336, !dbg !4823

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4824
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %338, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %337, metadata !4532, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4584
  %339 = icmp sgt i32 %337, 0, !dbg !4825
  br i1 %339, label %340, label %345, !dbg !4823

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %341, metadata !4532, metadata !DIExpression()), !dbg !4584
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4827
  call void @llvm.dbg.value(metadata i32 %342, metadata !4561, metadata !DIExpression()), !dbg !4828
  %343 = icmp slt i32 %342, 0, !dbg !4829
  %344 = add i32 %338, 1, !dbg !4827
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %343, label %361, label %336, !llvm.loop !4831

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %346, metadata !4564, metadata !DIExpression()), !dbg !4834
  %347 = icmp slt i32 %346, 0, !dbg !4835
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %349, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %304, metadata !4509, metadata !DIExpression()), !dbg !4584
  %350 = icmp sgt i32 %304, 0, !dbg !4837
  br i1 %350, label %351, label %363, !dbg !4838

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4838
  %353 = add i32 %352, %338, !dbg !4838
  br label %354, !dbg !4838

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %355, metadata !4509, metadata !DIExpression()), !dbg !4584
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %356, metadata !4566, metadata !DIExpression()), !dbg !4840
  %357 = icmp slt i32 %356, 0, !dbg !4841
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4843
  call void @llvm.dbg.value(metadata i32 undef, metadata !4448, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4570
  call void @llvm.dbg.value(metadata i32 %359, metadata !4509, metadata !DIExpression()), !dbg !4584
  %360 = icmp sgt i32 %355, 1, !dbg !4837
  br i1 %360, label %354, label %363, !dbg !4838, !llvm.loop !4844

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4581
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4574
  call void @llvm.dbg.value(metadata i32 %364, metadata !4448, metadata !DIExpression()), !dbg !4570
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4581
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4570
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4846
  ret i32 %366, !dbg !4846
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4847 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4851, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i8* %1, metadata !4852, metadata !DIExpression()), !dbg !4853
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4854
  store i24 0, i24* %3, align 4, !dbg !4854
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4854
  store i8 0, i8* %4, align 1, !dbg !4854
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4854
  store i32 0, i32* %5, align 4, !dbg !4854
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4854
  store i32 0, i32* %6, align 4, !dbg !4854
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4855
  call void @llvm.dbg.value(metadata i8* %7, metadata !4852, metadata !DIExpression()), !dbg !4853
  %8 = load i8, i8* %7, align 1, !dbg !4856
  %9 = icmp eq i8 %8, 37, !dbg !4858
  br i1 %9, label %10, label %12, !dbg !4859

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4860
  call void @llvm.dbg.value(metadata i8* %11, metadata !4852, metadata !DIExpression()), !dbg !4853
  store i8 37, i8* %4, align 1, !dbg !4862
  br label %18, !dbg !4863

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4864
  call void @llvm.dbg.value(metadata i8* %13, metadata !4852, metadata !DIExpression()), !dbg !4853
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %14, metadata !4852, metadata !DIExpression()), !dbg !4853
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4866
  call void @llvm.dbg.value(metadata i8* %15, metadata !4852, metadata !DIExpression()), !dbg !4853
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %16, metadata !4852, metadata !DIExpression()), !dbg !4853
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4868
  call void @llvm.dbg.value(metadata i8* %17, metadata !4852, metadata !DIExpression()), !dbg !4853
  br label %18, !dbg !4869

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4853
  ret i8* %19, !dbg !4870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4871 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4875, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i8* %1, metadata !4876, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i8* %2, metadata !4877, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i8* %3, metadata !4878, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i32 0, metadata !4879, metadata !DIExpression()), !dbg !4882
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4883

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4884
  call void @llvm.dbg.value(metadata i32 %9, metadata !4879, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata i8* %8, metadata !4877, metadata !DIExpression()), !dbg !4882
  %10 = icmp ult i8* %8, %3, !dbg !4885
  br i1 %10, label %11, label %13, !dbg !4886

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4887
  br label %17, !dbg !4886

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4888

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4889
  %16 = icmp eq i8 %15, 0, !dbg !4888
  br i1 %16, label %24, label %17, !dbg !4883

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4887
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %19, metadata !4877, metadata !DIExpression()), !dbg !4882
  %20 = zext i8 %18 to i32, !dbg !4891
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4892
  call void @llvm.dbg.value(metadata i32 %21, metadata !4880, metadata !DIExpression()), !dbg !4893
  %22 = icmp slt i32 %21, 0, !dbg !4894
  %23 = add i32 %9, 1, !dbg !4896
  call void @llvm.dbg.value(metadata i32 undef, metadata !4879, metadata !DIExpression()), !dbg !4882
  br i1 %22, label %24, label %7, !llvm.loop !4897

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4882
  ret i32 %25, !dbg !4899
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4900 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4904, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4905, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8* %2, metadata !4906, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8* %3, metadata !4907, metadata !DIExpression()), !dbg !4914
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4915
  %6 = load i8, i8* %5, align 1, !dbg !4915
  %7 = zext i8 %6 to i32, !dbg !4916
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4917
  %9 = icmp eq i32 %8, 0, !dbg !4917
  call void @llvm.dbg.value(metadata i1 %9, metadata !4908, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4914
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %10, metadata !4909, metadata !DIExpression()), !dbg !4914
  %11 = ptrtoint i8* %3 to i32, !dbg !4919
  %12 = ptrtoint i8* %2 to i32, !dbg !4919
  %13 = sub i32 %11, %12, !dbg !4919
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4920
  call void @llvm.dbg.value(metadata i8* %14, metadata !4911, metadata !DIExpression()), !dbg !4914
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4921

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4914
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4904, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8* %18, metadata !4911, metadata !DIExpression()), !dbg !4914
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4922
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %25, metadata !4912, metadata !DIExpression()), !dbg !4924
  %26 = icmp ult i32 %25, 10, !dbg !4925
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4926
  %28 = add i32 %27, %25, !dbg !4924
  %29 = trunc i32 %28 to i8, !dbg !4926
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4927
  call void @llvm.dbg.value(metadata i8* %30, metadata !4911, metadata !DIExpression()), !dbg !4914
  store i8 %29, i8* %30, align 1, !dbg !4928
  call void @llvm.dbg.value(metadata i64 %22, metadata !4904, metadata !DIExpression()), !dbg !4914
  %31 = icmp uge i64 %19, %15, !dbg !4929
  %32 = icmp ugt i8* %30, %2, !dbg !4930
  %33 = and i1 %31, %32, !dbg !4930
  br i1 %33, label %17, label %34, !dbg !4931, !llvm.loop !4932

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4934
  %36 = load i24, i24* %35, align 4, !dbg !4934
  %37 = and i24 %36, 32, !dbg !4934
  %38 = icmp eq i24 %37, 0, !dbg !4934
  br i1 %38, label %44, label %39, !dbg !4936

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4937

40:                                               ; preds = %39
  br label %41, !dbg !4939

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4943
  store i24 %43, i24* %35, align 4, !dbg !4943
  br label %44, !dbg !4944

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4944
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4945 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4951, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.value(metadata i8* %1, metadata !4952, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.value(metadata i32 %2, metadata !4953, metadata !DIExpression()), !dbg !4954
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4955
  %5 = load i24, i24* %4, align 4, !dbg !4955
  %6 = lshr i24 %5, 11, !dbg !4955
  %7 = and i24 %6, 15, !dbg !4955
  %8 = zext i24 %7 to i32, !dbg !4955
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4956

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4957
  store i32 %2, i32* %10, align 4, !dbg !4959
  br label %28, !dbg !4960

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4961
  store i8 %12, i8* %1, align 1, !dbg !4962
  br label %28, !dbg !4963

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4964
  %15 = bitcast i8* %1 to i16*, !dbg !4965
  store i16 %14, i16* %15, align 2, !dbg !4966
  br label %28, !dbg !4967

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4968
  store i32 %2, i32* %17, align 4, !dbg !4969
  br label %28, !dbg !4970

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4971
  %20 = bitcast i8* %1 to i64*, !dbg !4972
  store i64 %19, i64* %20, align 8, !dbg !4973
  br label %28, !dbg !4974

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4975
  %23 = bitcast i8* %1 to i64*, !dbg !4976
  store i64 %22, i64* %23, align 8, !dbg !4977
  br label %28, !dbg !4978

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4979
  store i32 %2, i32* %25, align 4, !dbg !4980
  br label %28, !dbg !4981

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4982
  store i32 %2, i32* %27, align 4, !dbg !4983
  br label %28, !dbg !4984

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4985
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4989, metadata !DIExpression()), !dbg !4990
  %2 = add i32 %0, -65, !dbg !4991
  %3 = icmp ult i32 %2, 26, !dbg !4992
  %4 = zext i1 %3 to i32, !dbg !4992
  ret i32 %4, !dbg !4993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4994 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4998, metadata !DIExpression()), !dbg !4999
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5000

2:                                                ; preds = %1
  br label %4, !dbg !5001

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5003

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5004
  ret i32 %5, !dbg !5005
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5006 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5008, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i8* %1, metadata !5009, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i8 1, metadata !5010, metadata !DIExpression()), !dbg !5011
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5012

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5010, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i8* %5, metadata !5009, metadata !DIExpression()), !dbg !5011
  %6 = load i8, i8* %5, align 1, !dbg !5013
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5015

7:                                                ; preds = %4
  br label %11, !dbg !5016

8:                                                ; preds = %4
  br label %11, !dbg !5018

9:                                                ; preds = %4
  br label %11, !dbg !5019

10:                                               ; preds = %4
  br label %11, !dbg !5020

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5021
  %14 = or i24 %13, %12, !dbg !5021
  store i24 %14, i24* %3, align 4, !dbg !5021
  call void @llvm.dbg.value(metadata i8 poison, metadata !5010, metadata !DIExpression()), !dbg !5011
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5009, metadata !DIExpression()), !dbg !5011
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5010, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.value(metadata i8* %15, metadata !5009, metadata !DIExpression()), !dbg !5011
  %17 = load i24, i24* %3, align 4, !dbg !5022
  %18 = and i24 %17, 68, !dbg !5024
  %19 = icmp eq i24 %18, 68, !dbg !5024
  br i1 %19, label %20, label %22, !dbg !5024

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5025
  store i24 %21, i24* %3, align 4, !dbg !5025
  br label %22, !dbg !5027

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5028
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5029 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5031, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %1, metadata !5032, metadata !DIExpression()), !dbg !5035
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5036
  %5 = load i24, i24* %4, align 4, !dbg !5037
  %6 = or i24 %5, 128, !dbg !5037
  store i24 %6, i24* %4, align 4, !dbg !5037
  call void @llvm.dbg.value(metadata i8* %1, metadata !5032, metadata !DIExpression()), !dbg !5035
  %7 = load i8, i8* %1, align 1, !dbg !5038
  %8 = icmp eq i8 %7, 42, !dbg !5040
  br i1 %8, label %9, label %12, !dbg !5041

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5042
  store i24 %10, i24* %4, align 4, !dbg !5042
  call void @llvm.dbg.value(metadata i8* %1, metadata !5032, metadata !DIExpression()), !dbg !5035
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5044
  call void @llvm.dbg.value(metadata i8* %11, metadata !5032, metadata !DIExpression()), !dbg !5035
  store i8* %11, i8** %3, align 4, !dbg !5044
  br label %29, !dbg !5045

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5033, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8** %3, metadata !5032, metadata !DIExpression(DW_OP_deref)), !dbg !5035
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5046
  call void @llvm.dbg.value(metadata i32 %13, metadata !5034, metadata !DIExpression()), !dbg !5035
  %14 = load i8*, i8** %3, align 4, !dbg !5047
  call void @llvm.dbg.value(metadata i8* %14, metadata !5032, metadata !DIExpression()), !dbg !5035
  %15 = icmp eq i8* %14, %1, !dbg !5049
  br i1 %15, label %29, label %16, !dbg !5050

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5051
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5053
  store i32 %13, i32* %18, align 4, !dbg !5054
  %19 = lshr i32 %13, 31, !dbg !5055
  %20 = lshr i24 %17, 1, !dbg !5056
  %21 = and i24 %20, 1, !dbg !5056
  %22 = zext i24 %21 to i32, !dbg !5056
  %23 = or i32 %19, %22, !dbg !5056
  %24 = trunc i32 %23 to i24, !dbg !5056
  %25 = shl nuw nsw i24 %24, 1, !dbg !5056
  %26 = and i24 %17, -131, !dbg !5056
  %27 = or i24 %26, 128, !dbg !5056
  %28 = or i24 %25, %27, !dbg !5056
  store i24 %28, i24* %4, align 4, !dbg !5056
  br label %29, !dbg !5057

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5035
  ret i8* %30, !dbg !5058
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5059 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5061, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.value(metadata i8* %1, metadata !5062, metadata !DIExpression()), !dbg !5064
  %4 = load i8, i8* %1, align 1, !dbg !5065
  %5 = icmp eq i8 %4, 46, !dbg !5066
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5067
  %7 = load i24, i24* %6, align 4, !dbg !5068
  %8 = select i1 %5, i24 512, i24 0, !dbg !5068
  %9 = and i24 %7, -513, !dbg !5068
  %10 = or i24 %9, %8, !dbg !5068
  store i24 %10, i24* %6, align 4, !dbg !5068
  br i1 %5, label %11, label %32, !dbg !5069

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5062, metadata !DIExpression()), !dbg !5064
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %12, metadata !5062, metadata !DIExpression()), !dbg !5064
  store i8* %12, i8** %3, align 4, !dbg !5070
  %13 = load i8, i8* %12, align 1, !dbg !5071
  %14 = icmp eq i8 %13, 42, !dbg !5073
  br i1 %14, label %15, label %18, !dbg !5074

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5075
  store i24 %16, i24* %6, align 4, !dbg !5075
  call void @llvm.dbg.value(metadata i8* %12, metadata !5062, metadata !DIExpression()), !dbg !5064
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5077
  call void @llvm.dbg.value(metadata i8* %17, metadata !5062, metadata !DIExpression()), !dbg !5064
  store i8* %17, i8** %3, align 4, !dbg !5077
  br label %32, !dbg !5078

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5062, metadata !DIExpression(DW_OP_deref)), !dbg !5064
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5079
  call void @llvm.dbg.value(metadata i32 %19, metadata !5063, metadata !DIExpression()), !dbg !5064
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5080
  store i32 %19, i32* %20, align 4, !dbg !5081
  %21 = lshr i32 %19, 31, !dbg !5082
  %22 = load i24, i24* %6, align 4, !dbg !5083
  %23 = lshr i24 %22, 1, !dbg !5083
  %24 = and i24 %23, 1, !dbg !5083
  %25 = zext i24 %24 to i32, !dbg !5083
  %26 = or i32 %21, %25, !dbg !5083
  %27 = trunc i32 %26 to i24, !dbg !5083
  %28 = shl nuw nsw i24 %27, 1, !dbg !5083
  %29 = and i24 %22, -3, !dbg !5083
  %30 = or i24 %28, %29, !dbg !5083
  store i24 %30, i24* %6, align 4, !dbg !5083
  %31 = load i8*, i8** %3, align 4, !dbg !5084
  call void @llvm.dbg.value(metadata i8* %31, metadata !5062, metadata !DIExpression()), !dbg !5064
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5064
  ret i8* %33, !dbg !5085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5086 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5088, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i8* %1, metadata !5089, metadata !DIExpression()), !dbg !5090
  %3 = load i8, i8* %1, align 1, !dbg !5091
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5092

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5093
  call void @llvm.dbg.value(metadata i8* %5, metadata !5089, metadata !DIExpression()), !dbg !5090
  %6 = load i8, i8* %5, align 1, !dbg !5096
  %7 = icmp eq i8 %6, 104, !dbg !5097
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5098
  %9 = load i24, i24* %8, align 4, !dbg !5098
  %10 = and i24 %9, -30721, !dbg !5098
  br i1 %7, label %11, label %14, !dbg !5099

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5100
  store i24 %12, i24* %8, align 4, !dbg !5100
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5102
  call void @llvm.dbg.value(metadata i8* %13, metadata !5089, metadata !DIExpression()), !dbg !5090
  br label %56, !dbg !5103

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5104
  store i24 %15, i24* %8, align 4, !dbg !5104
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5106
  call void @llvm.dbg.value(metadata i8* %17, metadata !5089, metadata !DIExpression()), !dbg !5090
  %18 = load i8, i8* %17, align 1, !dbg !5108
  %19 = icmp eq i8 %18, 108, !dbg !5109
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5110
  %21 = load i24, i24* %20, align 4, !dbg !5110
  %22 = and i24 %21, -30721, !dbg !5110
  br i1 %19, label %23, label %26, !dbg !5111

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5112
  store i24 %24, i24* %20, align 4, !dbg !5112
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5114
  call void @llvm.dbg.value(metadata i8* %25, metadata !5089, metadata !DIExpression()), !dbg !5090
  br label %56, !dbg !5115

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5116
  store i24 %27, i24* %20, align 4, !dbg !5116
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5118
  %30 = load i24, i24* %29, align 4, !dbg !5119
  %31 = and i24 %30, -30721, !dbg !5119
  %32 = or i24 %31, 10240, !dbg !5119
  store i24 %32, i24* %29, align 4, !dbg !5119
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %33, metadata !5089, metadata !DIExpression()), !dbg !5090
  br label %56, !dbg !5121

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5122
  %36 = load i24, i24* %35, align 4, !dbg !5123
  %37 = and i24 %36, -30721, !dbg !5123
  %38 = or i24 %37, 12288, !dbg !5123
  store i24 %38, i24* %35, align 4, !dbg !5123
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5124
  call void @llvm.dbg.value(metadata i8* %39, metadata !5089, metadata !DIExpression()), !dbg !5090
  br label %56, !dbg !5125

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5126
  %42 = load i24, i24* %41, align 4, !dbg !5127
  %43 = and i24 %42, -30721, !dbg !5127
  %44 = or i24 %43, 14336, !dbg !5127
  store i24 %44, i24* %41, align 4, !dbg !5127
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5128
  call void @llvm.dbg.value(metadata i8* %45, metadata !5089, metadata !DIExpression()), !dbg !5090
  br label %56, !dbg !5129

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5130
  %48 = load i24, i24* %47, align 4, !dbg !5131
  %49 = and i24 %48, -30723, !dbg !5131
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5132
  call void @llvm.dbg.value(metadata i8* %50, metadata !5089, metadata !DIExpression()), !dbg !5090
  %51 = or i24 %49, 16386, !dbg !5133
  store i24 %51, i24* %47, align 4, !dbg !5133
  br label %56, !dbg !5134

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5135
  %54 = load i24, i24* %53, align 4, !dbg !5136
  %55 = and i24 %54, -30721, !dbg !5136
  store i24 %55, i24* %53, align 4, !dbg !5136
  br label %56, !dbg !5137

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5089, metadata !DIExpression()), !dbg !5090
  ret i8* %57, !dbg !5138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5139 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5141, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8* %1, metadata !5142, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8 0, metadata !5143, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8* %1, metadata !5142, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5146
  %3 = load i8, i8* %1, align 1, !dbg !5147
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5148
  store i8 %3, i8* %4, align 1, !dbg !5149
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5150

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5151

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5152
  %9 = load i24, i24* %8, align 4, !dbg !5152
  %10 = and i24 %9, -458753, !dbg !5152
  %11 = or i24 %10, %7, !dbg !5152
  call void @llvm.dbg.label(metadata !5144), !dbg !5153
  %12 = and i24 %9, 30720, !dbg !5154
  %13 = icmp eq i24 %12, 16384, !dbg !5154
  %14 = zext i1 %13 to i24, !dbg !5156
  %15 = or i24 %11, %14, !dbg !5156
  %16 = icmp eq i8 %3, 99, !dbg !5157
  br i1 %16, label %17, label %43, !dbg !5159

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5160
  %19 = icmp ne i24 %18, 0, !dbg !5160
  call void @llvm.dbg.value(metadata i1 %19, metadata !5143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5146
  br label %43, !dbg !5162

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5163
  %22 = load i24, i24* %21, align 4, !dbg !5164
  %23 = and i24 %22, -458753, !dbg !5164
  %24 = or i24 %23, 262144, !dbg !5164
  call void @llvm.dbg.value(metadata i8 1, metadata !5143, metadata !DIExpression()), !dbg !5146
  br label %43, !dbg !5165

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5168
  %27 = load i24, i24* %26, align 4, !dbg !5169
  %28 = and i24 %27, -458753, !dbg !5169
  %29 = or i24 %28, 196608, !dbg !5169
  %30 = and i24 %27, 30720, !dbg !5170
  %31 = icmp eq i24 %30, 16384, !dbg !5170
  br label %43, !dbg !5172

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5173
  %34 = load i24, i24* %33, align 4, !dbg !5174
  %35 = and i24 %34, -458753, !dbg !5174
  %36 = or i24 %35, 196608, !dbg !5174
  %37 = and i24 %34, 30720, !dbg !5175
  %38 = icmp ne i24 %37, 0, !dbg !5175
  br label %43, !dbg !5177

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5178
  %41 = load i24, i24* %40, align 4, !dbg !5179
  %42 = or i24 %41, 1, !dbg !5179
  br label %43, !dbg !5180

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5181
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5182
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5183
  call void @llvm.dbg.value(metadata i8* %48, metadata !5142, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8 poison, metadata !5143, metadata !DIExpression()), !dbg !5146
  %49 = lshr i24 %44, 1, !dbg !5181
  %50 = and i24 %49, 1, !dbg !5181
  %51 = zext i24 %50 to i32, !dbg !5181
  %52 = or i32 %51, %47, !dbg !5181
  %53 = trunc i32 %52 to i24, !dbg !5181
  %54 = shl nuw nsw i24 %53, 1, !dbg !5181
  %55 = and i24 %44, -3, !dbg !5181
  %56 = or i24 %54, %55, !dbg !5181
  store i24 %56, i24* %46, align 4, !dbg !5181
  ret i8* %48, !dbg !5184
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5185 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5190, metadata !DIExpression()), !dbg !5193
  %2 = load i8*, i8** %0, align 4, !dbg !5194
  call void @llvm.dbg.value(metadata i8* %2, metadata !5191, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 0, metadata !5192, metadata !DIExpression()), !dbg !5193
  %3 = load i8, i8* %2, align 1, !dbg !5195
  %4 = zext i8 %3 to i32, !dbg !5196
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5197
  %6 = icmp eq i32 %5, 0, !dbg !5198
  br i1 %6, label %19, label %7, !dbg !5198

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5192, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i8* %10, metadata !5191, metadata !DIExpression()), !dbg !5193
  %11 = mul i32 %9, 10, !dbg !5199
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5201
  call void @llvm.dbg.value(metadata i8* %12, metadata !5191, metadata !DIExpression()), !dbg !5193
  %13 = add i32 %11, -48, !dbg !5202
  %14 = add i32 %13, %8, !dbg !5203
  call void @llvm.dbg.value(metadata i32 %14, metadata !5192, metadata !DIExpression()), !dbg !5193
  %15 = load i8, i8* %12, align 1, !dbg !5195
  %16 = zext i8 %15 to i32, !dbg !5196
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5197
  %18 = icmp eq i32 %17, 0, !dbg !5198
  br i1 %18, label %19, label %7, !dbg !5198, !llvm.loop !5204

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5193
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5193
  store i8* %20, i8** %0, align 4, !dbg !5206
  ret i32 %21, !dbg !5207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5210, metadata !DIExpression()), !dbg !5211
  %2 = add i32 %0, -48, !dbg !5212
  %3 = icmp ult i32 %2, 10, !dbg !5213
  %4 = zext i1 %3 to i32, !dbg !5213
  ret i32 %4, !dbg !5214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5215 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5217, !srcloc !5218
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5219, !srcloc !5220
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5221, !srcloc !5222
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5225, !srcloc !5226
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #24, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #24, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #24, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #24, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #24, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #24, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #24, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #24, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #24, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #24, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #24, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5793, !srcloc !5794
  ret void, !dbg !5795
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5796 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5798, metadata !DIExpression()), !dbg !5800
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5801
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5802
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5803, !srcloc !5812
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5803
  call void @llvm.dbg.value(metadata i32 %3, metadata !5809, metadata !DIExpression()) #24, !dbg !5813
  call void @llvm.dbg.value(metadata i32 undef, metadata !5810, metadata !DIExpression()) #24, !dbg !5813
  call void @llvm.dbg.value(metadata i32 %3, metadata !5799, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i32 %3, metadata !5814, metadata !DIExpression()) #24, !dbg !5819
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5821, !srcloc !5822
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5823
  ret i32 0, !dbg !5824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5825 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5827
  %2 = or i32 %1, 512, !dbg !5827
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5827
  ret void, !dbg !5828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5829 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5830
  %2 = or i32 %1, 1024, !dbg !5830
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5830
  ret void, !dbg !5831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5834, metadata !DIExpression()), !dbg !5835
  ret i32 0, !dbg !5836
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5837 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5883, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8* %1, metadata !5884, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %2, metadata !5885, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8* %1, metadata !5886, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 0, metadata !5887, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 0, metadata !5888, metadata !DIExpression()), !dbg !5889
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5890
  %5 = load i32, i32* %4, align 4, !dbg !5890
  %6 = icmp eq i32 %5, 0, !dbg !5892
  %7 = icmp eq i32 %2, 0, !dbg !5889
  br i1 %6, label %9, label %8, !dbg !5893

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5887, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8* %1, metadata !5886, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %2, metadata !5885, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %2, metadata !5885, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5889
  br i1 %7, label %37, label %20, !dbg !5894

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5886, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %2, metadata !5885, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %2, metadata !5885, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5889
  br i1 %7, label %37, label %10, !dbg !5895

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5895

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5886, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %14, metadata !5885, metadata !DIExpression()), !dbg !5889
  %15 = add i32 %14, -1, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %15, metadata !5885, metadata !DIExpression()), !dbg !5889
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5898
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5900
  call void @llvm.dbg.value(metadata i8* %17, metadata !5886, metadata !DIExpression()), !dbg !5889
  %18 = load i8, i8* %13, align 1, !dbg !5901
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5902
  call void @llvm.dbg.value(metadata i32 %15, metadata !5885, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5889
  %19 = icmp eq i32 %15, 0, !dbg !5895
  br i1 %19, label %37, label %12, !dbg !5895, !llvm.loop !5903

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %22, metadata !5887, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8* %23, metadata !5886, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8* %23, metadata !5886, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5889
  %25 = load i8, i8* %23, align 1, !dbg !5906
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5908
  call void @llvm.dbg.value(metadata i32 %26, metadata !5888, metadata !DIExpression()), !dbg !5889
  %27 = icmp slt i32 %26, 0, !dbg !5909
  br i1 %27, label %28, label %33, !dbg !5911

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5912
  br i1 %29, label %30, label %37, !dbg !5915

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5916
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5918
  store i32 %31, i32* %32, align 4, !dbg !5919
  br label %37, !dbg !5920

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5921
  call void @llvm.dbg.value(metadata i8* %34, metadata !5886, metadata !DIExpression()), !dbg !5889
  %35 = add nuw i32 %22, 1, !dbg !5922
  call void @llvm.dbg.value(metadata i32 %35, metadata !5887, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %24, metadata !5885, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i32 %24, metadata !5885, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5889
  %36 = icmp eq i32 %24, 0, !dbg !5894
  br i1 %36, label %37, label %20, !dbg !5894, !llvm.loop !5923

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5889
  ret i32 %38, !dbg !5925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5929, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata i8 %1, metadata !5930, metadata !DIExpression()), !dbg !5931
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5932, !srcloc !5934
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !5935
  ret void, !dbg !5936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5937 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5941, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.value(metadata i8 %1, metadata !5942, metadata !DIExpression()), !dbg !5946
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5947
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !5948
  br i1 %4, label %14, label %5, !dbg !5948

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5949
  %7 = load i32, i32* %6, align 4, !dbg !5949
  %8 = icmp eq i32 %7, -1, !dbg !5949
  br i1 %8, label %14, label %9, !dbg !5949

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5949
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5949
  %12 = zext i32 %11 to i64, !dbg !5949
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !5949
  br label %14, !dbg !5949

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5946
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5950
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !5950
  call void @llvm.dbg.value(metadata i32 %17, metadata !5945, metadata !DIExpression()), !dbg !5946
  %18 = icmp slt i32 %17, 0, !dbg !5951
  br i1 %18, label %42, label %19, !dbg !5953

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5954, !srcloc !5960
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5954
  call void @llvm.dbg.value(metadata i32 %21, metadata !5957, metadata !DIExpression()) #24, !dbg !5961
  call void @llvm.dbg.value(metadata i32 undef, metadata !5958, metadata !DIExpression()) #24, !dbg !5961
  call void @llvm.dbg.value(metadata i32 %21, metadata !5943, metadata !DIExpression()), !dbg !5946
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5962
  %23 = load i16, i16* %22, align 2, !dbg !5962
  %24 = zext i16 %23 to i32, !dbg !5963
  %25 = add nuw nsw i32 %24, 1, !dbg !5964
  call void @llvm.dbg.value(metadata i32 %25, metadata !5944, metadata !DIExpression()), !dbg !5946
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5965
  %27 = load i32, i32* %26, align 4, !dbg !5965
  %28 = icmp ult i32 %25, %27, !dbg !5967
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %29, metadata !5944, metadata !DIExpression()), !dbg !5946
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5969
  %31 = load i16, i16* %30, align 4, !dbg !5969
  %32 = zext i16 %31 to i32, !dbg !5971
  %33 = icmp eq i32 %29, %32, !dbg !5972
  br i1 %33, label %34, label %35, !dbg !5973

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5974, metadata !DIExpression()) #24, !dbg !5977
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5980, !srcloc !5981
  br label %42, !dbg !5982

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !5983
  %37 = load i8*, i8** %36, align 4, !dbg !5983
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !5984
  store i8 %1, i8* %38, align 1, !dbg !5985
  %39 = trunc i32 %29 to i16, !dbg !5986
  store i16 %39, i16* %22, align 2, !dbg !5987
  call void @llvm.dbg.value(metadata i32 %21, metadata !5974, metadata !DIExpression()) #24, !dbg !5988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5990, !srcloc !5981
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !5991
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !5991
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !5992
  br label %42, !dbg !5993

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5946
  ret i32 %43, !dbg !5994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !5995 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5999, !srcloc !6001
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !6002
  ret i32* %1, !dbg !6003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !6004 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6009, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i64 %0, metadata !6011, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i32 1000, metadata !6016, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i32 10000, metadata !6017, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i8 1, metadata !6018, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i8 0, metadata !6019, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i8 1, metadata !6020, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i8 0, metadata !6021, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i8 1, metadata !6022, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i8 0, metadata !6023, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i64 0, metadata !6024, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.value(metadata i64 0, metadata !6024, metadata !DIExpression()), !dbg !6028
  %2 = mul i64 %0, 10, !dbg !6030
  ret i64 %2, !dbg !6036
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6037 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6047, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6046, metadata !DIExpression()), !dbg !6048
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6049, !srcloc !6051
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6052
  ret i32 %3, !dbg !6053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6056, metadata !DIExpression()), !dbg !6057
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6058, !srcloc !6060
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6061
  ret void, !dbg !6062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6063 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6065, metadata !DIExpression()), !dbg !6067
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6068
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6068
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6068
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6066, metadata !DIExpression()), !dbg !6067
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6069
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6069
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6071
  br i1 %7, label %9, label %8, !dbg !6072

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6073
  br label %9, !dbg !6075

9:                                                ; preds = %8, %1
  ret void, !dbg !6076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6079, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i8 %1, metadata !6080, metadata !DIExpression()), !dbg !6082
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6083
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6083
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6083
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6081, metadata !DIExpression()), !dbg !6082
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6084
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6084
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6085
  ret void, !dbg !6086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6087 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6091, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i8* %1, metadata !6092, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %2, metadata !6093, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i8* %1, metadata !6094, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 0, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 0, metadata !6096, metadata !DIExpression()), !dbg !6097
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6098
  %5 = load i32, i32* %4, align 4, !dbg !6098
  %6 = icmp eq i32 %5, 0, !dbg !6100
  br i1 %6, label %9, label %7, !dbg !6101

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i8* %1, metadata !6094, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %2, metadata !6093, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %2, metadata !6093, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6097
  %8 = icmp eq i32 %2, 0, !dbg !6102
  br i1 %8, label %28, label %11, !dbg !6102

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6103
  br label %28, !dbg !6105

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %13, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i8* %14, metadata !6094, metadata !DIExpression()), !dbg !6097
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6107
  call void @llvm.dbg.value(metadata i32 %16, metadata !6096, metadata !DIExpression()), !dbg !6097
  %17 = icmp slt i32 %16, 0, !dbg !6109
  br i1 %17, label %18, label %23, !dbg !6111

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6112
  br i1 %19, label %20, label %28, !dbg !6115

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6116
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6118
  store i32 %21, i32* %22, align 4, !dbg !6119
  br label %28, !dbg !6120

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6121
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6122
  call void @llvm.dbg.value(metadata i8* %25, metadata !6094, metadata !DIExpression()), !dbg !6097
  store i8 %24, i8* %14, align 1, !dbg !6123
  %26 = add nuw i32 %13, 1, !dbg !6124
  call void @llvm.dbg.value(metadata i32 %26, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %15, metadata !6093, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 %15, metadata !6093, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6097
  %27 = icmp eq i32 %15, 0, !dbg !6102
  br i1 %27, label %28, label %11, !dbg !6102, !llvm.loop !6125

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6097
  ret i32 %29, !dbg !6127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6128 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6130, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i8* %1, metadata !6131, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 %2, metadata !6132, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i8* %1, metadata !6133, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 0, metadata !6134, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 0, metadata !6135, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 undef, metadata !6136, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 0, metadata !6134, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i8* %1, metadata !6133, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 %2, metadata !6132, metadata !DIExpression()), !dbg !6139
  %5 = icmp eq i32 %2, 0, !dbg !6140
  br i1 %5, label %48, label %6, !dbg !6140

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6141
  %8 = load i32, i32* %7, align 4, !dbg !6141
  call void @llvm.dbg.value(metadata i32 %8, metadata !6136, metadata !DIExpression()), !dbg !6139
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6140

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6136, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 %12, metadata !6134, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i8* %13, metadata !6133, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 %14, metadata !6132, metadata !DIExpression()), !dbg !6139
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6142
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6143
  call void @llvm.dbg.value(metadata i8* %4, metadata !6137, metadata !DIExpression(DW_OP_deref)), !dbg !6144
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6145
  call void @llvm.dbg.value(metadata i32 %16, metadata !6135, metadata !DIExpression()), !dbg !6139
  %17 = icmp slt i32 %16, -1, !dbg !6146
  br i1 %17, label %18, label %22, !dbg !6148

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6149
  br i1 %19, label %20, label %44, !dbg !6152

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6153
  store i32 %16, i32* %21, align 4, !dbg !6155
  call void @llvm.dbg.value(metadata i32 %39, metadata !6136, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 undef, metadata !6134, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i8* %32, metadata !6133, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 %33, metadata !6132, metadata !DIExpression()), !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6156
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6157
  br i1 %23, label %24, label %30, !dbg !6159

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6160
  call void @llvm.dbg.value(metadata i8 %25, metadata !6137, metadata !DIExpression()), !dbg !6144
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6162
  call void @llvm.dbg.value(metadata i8* %26, metadata !6133, metadata !DIExpression()), !dbg !6139
  store i8 %25, i8* %13, align 1, !dbg !6163
  %27 = add i32 %12, 1, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %27, metadata !6134, metadata !DIExpression()), !dbg !6139
  %28 = add i32 %14, -1, !dbg !6165
  call void @llvm.dbg.value(metadata i32 %28, metadata !6132, metadata !DIExpression()), !dbg !6139
  %29 = icmp eq i32 %28, 0, !dbg !6166
  br i1 %29, label %44, label %30, !dbg !6168

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6169
  br i1 %34, label %38, label %35, !dbg !6170

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6171
  call void @llvm.dbg.value(metadata i32 %36, metadata !6136, metadata !DIExpression()), !dbg !6139
  %37 = icmp eq i32 %11, 0, !dbg !6172
  br i1 %37, label %44, label %38, !dbg !6173

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6139
  call void @llvm.dbg.value(metadata i32 %39, metadata !6136, metadata !DIExpression()), !dbg !6139
  %40 = icmp eq i32 %16, -1, !dbg !6174
  br i1 %40, label %41, label %46, !dbg !6176

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6177
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6179
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6179
  br label %46, !dbg !6180

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6136, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 undef, metadata !6134, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i8* %32, metadata !6133, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 %33, metadata !6132, metadata !DIExpression()), !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6156
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6136, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 %31, metadata !6134, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i8* %32, metadata !6133, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 %33, metadata !6132, metadata !DIExpression()), !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6156
  %47 = icmp eq i32 %33, 0, !dbg !6140
  br i1 %47, label %48, label %10, !dbg !6140

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6139
  ret i32 %49, !dbg !6181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6182 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6186, metadata !DIExpression()), !dbg !6190
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6191
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6192
  %4 = load i32, i32* %3, align 4, !dbg !6192
  %5 = icmp eq i32 %4, -1, !dbg !6192
  br i1 %5, label %11, label %6, !dbg !6192

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6192
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6192
  %9 = zext i32 %8 to i64, !dbg !6192
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6192
  br label %11, !dbg !6192

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6192
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6193
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6193
  call void @llvm.dbg.value(metadata i32 %14, metadata !6189, metadata !DIExpression()), !dbg !6190
  %15 = icmp slt i32 %14, 0, !dbg !6194
  br i1 %15, label %33, label %16, !dbg !6196

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6197, !srcloc !5960
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6197
  call void @llvm.dbg.value(metadata i32 %18, metadata !5957, metadata !DIExpression()) #24, !dbg !6199
  call void @llvm.dbg.value(metadata i32 undef, metadata !5958, metadata !DIExpression()) #24, !dbg !6199
  call void @llvm.dbg.value(metadata i32 %18, metadata !6187, metadata !DIExpression()), !dbg !6190
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6200
  %20 = load i8*, i8** %19, align 4, !dbg !6200
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6201
  %22 = load i16, i16* %21, align 4, !dbg !6202
  %23 = add i16 %22, 1, !dbg !6202
  store i16 %23, i16* %21, align 4, !dbg !6202
  %24 = zext i16 %22 to i32, !dbg !6203
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6203
  %26 = load i8, i8* %25, align 1, !dbg !6203
  call void @llvm.dbg.value(metadata i8 %26, metadata !6188, metadata !DIExpression()), !dbg !6190
  %27 = zext i16 %23 to i32, !dbg !6204
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6206
  %29 = load i32, i32* %28, align 4, !dbg !6206
  %30 = icmp ugt i32 %29, %27, !dbg !6207
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6208
  store i16 %31, i16* %21, align 4, !dbg !6190
  call void @llvm.dbg.value(metadata i32 %18, metadata !5974, metadata !DIExpression()) #24, !dbg !6209
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6211, !srcloc !5981
  %32 = zext i8 %26 to i32, !dbg !6212
  br label %33, !dbg !6213

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6190
  ret i32 %34, !dbg !6214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6215 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6217, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.value(metadata i8* %1, metadata !6218, metadata !DIExpression()), !dbg !6219
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6220, !srcloc !6222
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6223
  ret i32 %3, !dbg !6224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6225 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6229, metadata !DIExpression()), !dbg !6230
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6231, !srcloc !6233
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6234
  ret void, !dbg !6235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6236 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6238, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.value(metadata i8* %1, metadata !6239, metadata !DIExpression()), !dbg !6241
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6242
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6242
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6242
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6240, metadata !DIExpression()), !dbg !6241
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6243
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6243
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6245
  br i1 %8, label %11, label %9, !dbg !6246

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6247
  br label %11, !dbg !6248

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6241
  ret i32 %12, !dbg !6249
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6250 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6254, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6255, metadata !DIExpression()), !dbg !6256
  %3 = icmp eq %struct.device* %1, null, !dbg !6257
  br i1 %3, label %17, label %4, !dbg !6259

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6260
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6261
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6262
  store i8* null, i8** %6, align 4, !dbg !6263
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6264
  store i32 0, i32* %7, align 4, !dbg !6265
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6266
  store i8* null, i8** %8, align 4, !dbg !6267
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6268
  store i32 0, i32* %9, align 4, !dbg !6269
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6270
  store i16 0, i16* %10, align 2, !dbg !6271
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6272
  store i16 0, i16* %11, align 4, !dbg !6273
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6274
  store i16 0, i16* %12, align 2, !dbg !6275
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6276
  store i16 0, i16* %13, align 4, !dbg !6277
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6278
  store i32 -1, i32* %14, align 4, !dbg !6279
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6280
  store i32 -1, i32* %15, align 4, !dbg !6281
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6282
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6283
  br label %17, !dbg !6284

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6256
  ret i32 %18, !dbg !6285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6286 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6288, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6289, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata i8* %1, metadata !6290, metadata !DIExpression()), !dbg !6292
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6293
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6293
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6293
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6291, metadata !DIExpression()), !dbg !6292
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6294
  br i1 %6, label %12, label %7, !dbg !6296

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6297
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6297
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6298
  br i1 %10, label %12, label %11, !dbg !6299

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6300
  br label %12, !dbg !6302

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6303
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6304 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6306, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.value(metadata i8* %1, metadata !6307, metadata !DIExpression()), !dbg !6312
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6313
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6308, metadata !DIExpression()), !dbg !6312
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6314
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6315
  %6 = icmp eq i32 %5, 0, !dbg !6315
  br i1 %6, label %15, label %7, !dbg !6316

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6317
  call void @llvm.dbg.value(metadata i8* %3, metadata !6309, metadata !DIExpression(DW_OP_deref)), !dbg !6318
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6319
  %9 = icmp eq i32 %8, 0, !dbg !6322
  br i1 %9, label %14, label %10, !dbg !6323

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6324
  call void @llvm.dbg.value(metadata i8 %11, metadata !6309, metadata !DIExpression()), !dbg !6318
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6325
  call void @llvm.dbg.value(metadata i8* %3, metadata !6309, metadata !DIExpression(DW_OP_deref)), !dbg !6318
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6319
  %13 = icmp eq i32 %12, 0, !dbg !6322
  br i1 %13, label %14, label %10, !dbg !6323, !llvm.loop !6326

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6329
  br label %15, !dbg !6330

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6331
  %17 = icmp eq i32 %16, 0, !dbg !6331
  br i1 %17, label %44, label %18, !dbg !6333

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6334
  %20 = bitcast i8* %19 to i16*, !dbg !6334
  %21 = load i16, i16* %20, align 4, !dbg !6334
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6337
  %23 = bitcast i8* %22 to i16*, !dbg !6337
  %24 = load i16, i16* %23, align 2, !dbg !6337
  %25 = icmp eq i16 %21, %24, !dbg !6338
  br i1 %25, label %26, label %27, !dbg !6339

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6340
  br label %44, !dbg !6342

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6343
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6344
  %30 = bitcast i8* %29 to i8**, !dbg !6344
  %31 = load i8*, i8** %30, align 4, !dbg !6344
  %32 = add i16 %21, 1, !dbg !6346
  store i16 %32, i16* %20, align 4, !dbg !6346
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6347
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6348
  %34 = load i16, i16* %20, align 4, !dbg !6349
  %35 = zext i16 %34 to i32, !dbg !6351
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6352
  %37 = bitcast i8* %36 to i32*, !dbg !6352
  %38 = load i32, i32* %37, align 4, !dbg !6352
  %39 = icmp ugt i32 %38, %35, !dbg !6353
  br i1 %39, label %41, label %40, !dbg !6354

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6355
  br label %41, !dbg !6357

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6358
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6358
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6359
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6363, metadata !DIExpression()), !dbg !6364
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6365, !srcloc !6367
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6368
  ret void, !dbg !6369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6372, metadata !DIExpression()), !dbg !6374
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6375
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6375
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6375
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6373, metadata !DIExpression()), !dbg !6374
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6376
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6376
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6378
  br i1 %7, label %10, label %8, !dbg !6379

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6380
  br label %10, !dbg !6381

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6374
  ret i32 %11, !dbg !6382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6383 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6385, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.value(metadata i8* %1, metadata !6386, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.value(metadata i32 1, metadata !6387, metadata !DIExpression()), !dbg !6389
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6390
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6390
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6390
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6388, metadata !DIExpression()), !dbg !6389
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6391
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6391
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6393
  br i1 %8, label %11, label %9, !dbg !6394

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6395
  br label %11, !dbg !6396

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6389
  ret i32 %12, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6398 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6400, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.value(metadata i8 %1, metadata !6401, metadata !DIExpression()), !dbg !6403
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6404
  %4 = load i16, i16* %3, align 2, !dbg !6404
  %5 = zext i16 %4 to i32, !dbg !6405
  %6 = add nuw nsw i32 %5, 1, !dbg !6406
  call void @llvm.dbg.value(metadata i32 %6, metadata !6402, metadata !DIExpression()), !dbg !6403
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6407
  %8 = load i32, i32* %7, align 4, !dbg !6407
  %9 = icmp ult i32 %6, %8, !dbg !6409
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6410
  call void @llvm.dbg.value(metadata i32 %10, metadata !6402, metadata !DIExpression()), !dbg !6403
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6411
  %12 = load i16, i16* %11, align 4, !dbg !6411
  %13 = zext i16 %12 to i32, !dbg !6413
  %14 = icmp eq i32 %10, %13, !dbg !6414
  br i1 %14, label %15, label %17, !dbg !6415

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6416
  br label %23, !dbg !6418

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6419
  %19 = load i8*, i8** %18, align 4, !dbg !6419
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6420
  store i8 %1, i8* %20, align 1, !dbg !6421
  %21 = trunc i32 %10 to i16, !dbg !6422
  store i16 %21, i16* %3, align 2, !dbg !6423
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6424
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6425
  br label %23, !dbg !6426

23:                                               ; preds = %17, %15
  ret void, !dbg !6427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6430, metadata !DIExpression()), !dbg !6432
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6433
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6433
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6433
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6431, metadata !DIExpression()), !dbg !6432
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6434
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6434
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6436
  br i1 %7, label %10, label %8, !dbg !6437

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6438
  br label %10, !dbg !6439

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6432
  ret i32 %11, !dbg !6440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6443, metadata !DIExpression()), !dbg !6444
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6445, !srcloc !6447
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6448
  ret void, !dbg !6449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6450 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6452, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i8* %1, metadata !6453, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.value(metadata i32 1, metadata !6454, metadata !DIExpression()), !dbg !6456
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6457
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6457
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6457
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6455, metadata !DIExpression()), !dbg !6456
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6458
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6458
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6460
  br i1 %8, label %11, label %9, !dbg !6461

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6462
  br label %11, !dbg !6463

11:                                               ; preds = %2, %9
  ret void, !dbg !6464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6465 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6469, metadata !DIExpression()), !dbg !6470
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6471, !srcloc !6473
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6474
  ret void, !dbg !6475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6478, metadata !DIExpression()), !dbg !6480
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6481
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6481
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6481
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6479, metadata !DIExpression()), !dbg !6480
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6482
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6482
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6484
  br i1 %7, label %9, label %8, !dbg !6485

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6486
  br label %9, !dbg !6488

9:                                                ; preds = %8, %1
  ret void, !dbg !6489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6492, metadata !DIExpression()), !dbg !6494
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6495
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6495
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6495
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6493, metadata !DIExpression()), !dbg !6494
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6496
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6496
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6498
  br i1 %7, label %10, label %8, !dbg !6499

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6500
  br label %10, !dbg !6501

10:                                               ; preds = %1, %8
  ret void, !dbg !6502
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6503 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6507, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i8* %1, metadata !6508, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 %2, metadata !6509, metadata !DIExpression()), !dbg !6510
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6511
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6511
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6512
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6513
  store i8* %1, i8** %6, align 4, !dbg !6514
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6515
  store i32 %2, i32* %7, align 4, !dbg !6516
  %8 = icmp eq i32 %2, 0, !dbg !6517
  br i1 %8, label %12, label %9, !dbg !6519

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6520
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6522
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6523
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6524
  br label %12, !dbg !6525

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6529, metadata !DIExpression()), !dbg !6530
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6531, !srcloc !6533
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6534
  ret void, !dbg !6535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6536 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6540, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 %1, metadata !6541, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 -1, metadata !6542, metadata !DIExpression()), !dbg !6543
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6544, !srcloc !6546
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6547
  ret void, !dbg !6548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6549 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6551, metadata !DIExpression()), !dbg !6552
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6553, !srcloc !6555
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6556
  ret void, !dbg !6557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6560, metadata !DIExpression()), !dbg !6562
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6563
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6563
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6563
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6561, metadata !DIExpression()), !dbg !6562
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6564
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6564
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6566
  br i1 %7, label %9, label %8, !dbg !6567

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6568
  br label %9, !dbg !6570

9:                                                ; preds = %8, %1
  ret void, !dbg !6571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6572 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6574, metadata !DIExpression()), !dbg !6576
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6577
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6577
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6577
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6575, metadata !DIExpression()), !dbg !6576
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6578
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6578
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6580
  br i1 %7, label %9, label %8, !dbg !6581

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6582
  br label %9, !dbg !6584

9:                                                ; preds = %8, %1
  ret void, !dbg !6585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6586 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6588, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata i8* %1, metadata !6589, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.value(metadata i32 %2, metadata !6590, metadata !DIExpression()), !dbg !6591
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6592
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6592
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6593
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6594
  store i8* %1, i8** %6, align 4, !dbg !6595
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6596
  store i32 %2, i32* %7, align 4, !dbg !6597
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6598
  %9 = add i32 %2, -1, !dbg !6599
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6600
  ret i32 0, !dbg !6601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6606, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8* %1, metadata !6607, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 %2, metadata !6608, metadata !DIExpression()), !dbg !6609
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6610
  ret i32 %4, !dbg !6611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6616, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.value(metadata i8* %1, metadata !6617, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.value(metadata i32 %2, metadata !6618, metadata !DIExpression()), !dbg !6619
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6620
  ret i32 %4, !dbg !6621
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6622 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6624, metadata !DIExpression()), !dbg !6625
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6624, metadata !DIExpression(DW_OP_deref)), !dbg !6625
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6626
  ret i32 %3, !dbg !6627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6628 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6634
  call void @llvm.dbg.value(metadata i8* %1, metadata !6632, metadata !DIExpression(DW_OP_deref)), !dbg !6635
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6636
  call void @llvm.dbg.value(metadata i32 %2, metadata !6633, metadata !DIExpression()), !dbg !6635
  %3 = icmp slt i32 %2, 0, !dbg !6637
  %4 = load i8, i8* %1, align 1, !dbg !6639
  %5 = zext i8 %4 to i32, !dbg !6639
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6639
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6640
  ret i32 %6, !dbg !6640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6641 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !6643, metadata !DIExpression()), !dbg !6648
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6649
  br i1 %1, label %2, label %13, !dbg !6651

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !6652
  call void @llvm.dbg.value(metadata i32 %3, metadata !6644, metadata !DIExpression()), !dbg !6648
  %4 = icmp eq i32 %3, 0, !dbg !6653
  br i1 %4, label %5, label %13, !dbg !6655

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6656
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6645, metadata !DIExpression()), !dbg !6657
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6658
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6658
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6660
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6661
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6662
  br label %13, !dbg !6663

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6665 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !6670, metadata !DIExpression()), !dbg !6671
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6672, !srcloc !6674
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6675
  ret i1 %1, !dbg !6676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6677 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !6679, metadata !DIExpression()), !dbg !6680
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !6681
  ret i1 %1, !dbg !6682
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6732, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6733, metadata !DIExpression()), !dbg !6734
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6735
  ret void, !dbg !6736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6737 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6754, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6755, metadata !DIExpression()), !dbg !6757
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6758
  %4 = load i32, i32* %3, align 4, !dbg !6758
  call void @llvm.dbg.value(metadata i32 %4, metadata !6756, metadata !DIExpression()), !dbg !6757
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6759
  ret void, !dbg !6760
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6761 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6765, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i8* %0, metadata !6766, metadata !DIExpression()), !dbg !6768
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6769
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6769
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6767, metadata !DIExpression()), !dbg !6770
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6770
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6771
  %5 = bitcast i8* %4 to i32*, !dbg !6771
  %6 = load i32, i32* %5, align 4, !dbg !6771
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6772
  store i32 %6, i32* %7, align 4, !dbg !6773
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6774
  unreachable, !dbg !6775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6779, metadata !DIExpression()), !dbg !6780
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6781
  ret void, !dbg !6782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6787, metadata !DIExpression()), !dbg !6788
  %2 = icmp sgt i32 %0, -1, !dbg !6789
  br i1 %2, label %3, label %8, !dbg !6791

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6792, !srcloc !6794
  %4 = and i32 %0, 31, !dbg !6795
  %5 = shl nuw i32 1, %4, !dbg !6796
  %6 = lshr i32 %0, 5, !dbg !6797
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6798
  store volatile i32 %5, i32* %7, align 4, !dbg !6799
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6800, !srcloc !6801
  br label %8, !dbg !6802

8:                                                ; preds = %3, %1
  ret void, !dbg !6803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6806, metadata !DIExpression()), !dbg !6807
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6808
  ret void, !dbg !6809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6812, metadata !DIExpression()), !dbg !6813
  %2 = icmp sgt i32 %0, -1, !dbg !6814
  br i1 %2, label %3, label %8, !dbg !6816

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6817
  %5 = shl nuw i32 1, %4, !dbg !6819
  %6 = lshr i32 %0, 5, !dbg !6820
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6821
  store volatile i32 %5, i32* %7, align 4, !dbg !6822
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6823, !srcloc !6827
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6828, !srcloc !6831
  br label %8, !dbg !6832

8:                                                ; preds = %3, %1
  ret void, !dbg !6833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6838, metadata !DIExpression()), !dbg !6839
  %2 = lshr i32 %0, 5, !dbg !6840
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6841
  %4 = load volatile i32, i32* %3, align 4, !dbg !6841
  %5 = and i32 %0, 31, !dbg !6842
  %6 = shl nuw i32 1, %5, !dbg !6842
  %7 = and i32 %4, %6, !dbg !6843
  ret i32 %7, !dbg !6844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6849, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i32 %1, metadata !6850, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i32 %2, metadata !6851, metadata !DIExpression()), !dbg !6852
  %4 = add i32 %1, 1, !dbg !6853
  call void @llvm.dbg.value(metadata i32 %4, metadata !6850, metadata !DIExpression()), !dbg !6852
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6856
  ret void, !dbg !6857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6862, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i32 %1, metadata !6863, metadata !DIExpression()), !dbg !6864
  %3 = trunc i32 %1 to i8, !dbg !6865
  %4 = shl i8 %3, 4, !dbg !6865
  %5 = and i32 %0, 15, !dbg !6867
  %6 = add nsw i32 %5, -4, !dbg !6867
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6867
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6867
  %9 = icmp slt i32 %0, 0, !dbg !6867
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6867
  store volatile i8 %4, i8* %10, align 1, !dbg !6865
  ret void, !dbg !6868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6869 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6871, metadata !DIExpression()), !dbg !6872
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6873
  ret void, !dbg !6874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6875 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6877
  tail call void @z_arm_int_exit() #25, !dbg !6878
  ret void, !dbg !6879
}

; Function Attrs: optsize
declare !dbg !6880 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6881 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6883 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6885
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6886
  tail call void @z_bss_zero() #25, !dbg !6887
  tail call void @z_data_copy() #25, !dbg !6888
  tail call void @z_arm_interrupt_init() #25, !dbg !6889
  tail call void @z_cstart() #28, !dbg !6890
  unreachable, !dbg !6890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6891 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6892
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6893, !srcloc !6896
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6897, !srcloc !6900
  ret void, !dbg !6901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6902 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6903
  %2 = and i32 %1, -15728641, !dbg !6903
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6903
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6904, !srcloc !6911
  call void @llvm.dbg.value(metadata i32 %3, metadata !6909, metadata !DIExpression()) #24, !dbg !6912
  %4 = and i32 %3, -5, !dbg !6913
  call void @llvm.dbg.value(metadata i32 %4, metadata !6914, metadata !DIExpression()) #24, !dbg !6919
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6923, !srcloc !6900
  ret void, !dbg !6925
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6929, metadata !DIExpression()), !dbg !6930
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6931
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6932
  store i32 %0, i32* %3, align 4, !dbg !6933
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6934
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6935
  store i32 %4, i32* %5, align 4, !dbg !6936
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6937
  %7 = or i32 %6, 268435456, !dbg !6937
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6937
  call void @llvm.dbg.value(metadata i32 0, metadata !6938, metadata !DIExpression()) #24, !dbg !6941
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6943, !srcloc !6944
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6945
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6946
  %10 = load i32, i32* %9, align 4, !dbg !6946
  ret i32 %10, !dbg !6947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6948 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7058, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7059, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i8* %2, metadata !7060, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7061, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i8* %4, metadata !7062, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i8* %5, metadata !7063, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i8* %6, metadata !7064, metadata !DIExpression()), !dbg !7066
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7067
  call void @llvm.dbg.value(metadata i8* %8, metadata !7065, metadata !DIExpression()), !dbg !7066
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7068
  %10 = bitcast i8* %9 to i32*, !dbg !7068
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7069
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7070
  %12 = bitcast i8* %8 to i32*, !dbg !7071
  store i32 %11, i32* %12, align 4, !dbg !7072
  %13 = ptrtoint i8* %4 to i32, !dbg !7073
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7074
  %15 = bitcast i8* %14 to i32*, !dbg !7074
  store i32 %13, i32* %15, align 4, !dbg !7075
  %16 = ptrtoint i8* %5 to i32, !dbg !7076
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7077
  %18 = bitcast i8* %17 to i32*, !dbg !7077
  store i32 %16, i32* %18, align 4, !dbg !7078
  %19 = ptrtoint i8* %6 to i32, !dbg !7079
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7080
  %21 = bitcast i8* %20 to i32*, !dbg !7080
  store i32 %19, i32* %21, align 4, !dbg !7081
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7082
  %23 = bitcast i8* %22 to i32*, !dbg !7082
  store i32 16777216, i32* %23, align 4, !dbg !7083
  %24 = ptrtoint i8* %8 to i32, !dbg !7084
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7085
  store i32 %24, i32* %25, align 8, !dbg !7086
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7087
  store i32 0, i32* %26, align 4, !dbg !7088
  ret void, !dbg !7089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7095, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i32 %1, metadata !7096, metadata !DIExpression()), !dbg !7101
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7102
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7097, metadata !DIExpression()), !dbg !7101
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7103
  br i1 %4, label %19, label %5, !dbg !7105

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7100, metadata !DIExpression()), !dbg !7101
  %6 = icmp eq i32 %0, -22, !dbg !7106
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7106
  %8 = load i32, i32* %7, align 4, !dbg !7106
  br i1 %6, label %16, label %9, !dbg !7108

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7106
  %11 = icmp ule i32 %10, %0, !dbg !7106
  %12 = icmp ugt i32 %8, %0, !dbg !7106
  %13 = and i1 %12, %11, !dbg !7106
  %14 = icmp ugt i32 %8, %1, !dbg !7106
  %15 = and i1 %14, %13, !dbg !7106
  br i1 %15, label %18, label %19, !dbg !7106

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7106
  br i1 %17, label %18, label %19, !dbg !7108

18:                                               ; preds = %9, %16
  br label %19, !dbg !7109

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7101
  ret i32 %20, !dbg !7111
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7116, metadata !DIExpression()), !dbg !7119
  call void @llvm.dbg.value(metadata i8* %1, metadata !7117, metadata !DIExpression()), !dbg !7119
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7118, metadata !DIExpression()), !dbg !7119
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7120
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7121
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7122, !srcloc !7123
  unreachable, !dbg !7124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7125 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7143, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.value(metadata i32 %1, metadata !7144, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.value(metadata i32 %2, metadata !7145, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7146, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.value(metadata i32 0, metadata !7147, metadata !DIExpression()), !dbg !7153
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7154
  %9 = and i32 %8, 511, !dbg !7155
  call void @llvm.dbg.value(metadata i32 %9, metadata !7148, metadata !DIExpression()), !dbg !7153
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7156
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7156
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7157
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7152, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.value(metadata i32 0, metadata !7159, metadata !DIExpression()) #24, !dbg !7162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7164, !srcloc !7165
  call void @llvm.dbg.value(metadata i8* %6, metadata !7150, metadata !DIExpression(DW_OP_deref)), !dbg !7153
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7166
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7151, metadata !DIExpression()), !dbg !7153
  call void @llvm.dbg.value(metadata i8* %5, metadata !7149, metadata !DIExpression(DW_OP_deref)), !dbg !7153
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7167
  call void @llvm.dbg.value(metadata i32 %12, metadata !7147, metadata !DIExpression()), !dbg !7153
  %13 = load i8, i8* %5, align 1, !dbg !7168, !range !7170
  call void @llvm.dbg.value(metadata i8 %13, metadata !7149, metadata !DIExpression()), !dbg !7153
  %14 = icmp eq i8 %13, 0, !dbg !7168
  br i1 %14, label %15, label %32, !dbg !7171

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7172
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7173
  %18 = load i8, i8* %6, align 1, !dbg !7174, !range !7170
  call void @llvm.dbg.value(metadata i8 %18, metadata !7150, metadata !DIExpression()), !dbg !7153
  %19 = icmp eq i8 %18, 0, !dbg !7174
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7176
  %21 = load i32, i32* %20, align 4, !dbg !7176
  br i1 %19, label %27, label %22, !dbg !7177

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7178
  %24 = icmp eq i32 %23, 0, !dbg !7181
  br i1 %24, label %25, label %31, !dbg !7182

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7183
  br label %29, !dbg !7185

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7186
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7176
  br label %31, !dbg !7188

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7188
  br label %32, !dbg !7189

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7189
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7189
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7189
  ret void, !dbg !7189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7195, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.value(metadata i32 %1, metadata !7196, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.value(metadata i32 %2, metadata !7197, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.value(metadata i8* %3, metadata !7198, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.value(metadata i8 0, metadata !7199, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7200, metadata !DIExpression()), !dbg !7201
  store i8 0, i8* %3, align 1, !dbg !7202
  %5 = icmp ult i32 %2, -16777216, !dbg !7203
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7205
  br i1 %8, label %16, label %9, !dbg !7205

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7206
  %11 = icmp eq i32 %10, 0, !dbg !7206
  br i1 %11, label %12, label %13, !dbg !7208

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7200, metadata !DIExpression()), !dbg !7201
  store i8 1, i8* %3, align 1, !dbg !7211
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7201
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7200, metadata !DIExpression()), !dbg !7201
  br label %16, !dbg !7214

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7201
  ret %struct.__esf* %17, !dbg !7215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7216 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7220, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 %1, metadata !7221, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i8* %2, metadata !7222, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 0, metadata !7223, metadata !DIExpression()), !dbg !7224
  store i8 0, i8* %2, align 1, !dbg !7225
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7226

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7227
  call void @llvm.dbg.value(metadata i32 %5, metadata !7223, metadata !DIExpression()), !dbg !7224
  br label %11, !dbg !7229

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7230
  call void @llvm.dbg.value(metadata i32 %7, metadata !7223, metadata !DIExpression()), !dbg !7224
  br label %11, !dbg !7231

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7232
  call void @llvm.dbg.value(metadata i32 0, metadata !7223, metadata !DIExpression()), !dbg !7224
  br label %11, !dbg !7233

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7234
  call void @llvm.dbg.value(metadata i32 0, metadata !7223, metadata !DIExpression()), !dbg !7224
  br label %11, !dbg !7235

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7236
  br label %11, !dbg !7237

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7239 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7243, metadata !DIExpression()), !dbg !7246
  call void @llvm.dbg.value(metadata i8* %1, metadata !7244, metadata !DIExpression()), !dbg !7246
  call void @llvm.dbg.value(metadata i32 0, metadata !7245, metadata !DIExpression()), !dbg !7246
  store i8 0, i8* %1, align 1, !dbg !7247
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7248
  %4 = and i32 %3, 2, !dbg !7250
  %5 = icmp eq i32 %4, 0, !dbg !7251
  br i1 %5, label %6, label %33, !dbg !7252

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7253
  %8 = icmp sgt i32 %7, -1, !dbg !7255
  br i1 %8, label %9, label %33, !dbg !7256

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7257
  %11 = and i32 %10, 1073741824, !dbg !7259
  %12 = icmp eq i32 %11, 0, !dbg !7260
  br i1 %12, label %33, label %13, !dbg !7261

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7262
  br i1 %14, label %15, label %18, !dbg !7265

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7266
  %17 = load i32, i32* %16, align 4, !dbg !7266
  call void @llvm.dbg.value(metadata i32 %17, metadata !7245, metadata !DIExpression()), !dbg !7246
  br label %33, !dbg !7268

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7269
  %20 = and i32 %19, 255, !dbg !7271
  %21 = icmp eq i32 %20, 0, !dbg !7272
  br i1 %21, label %24, label %22, !dbg !7273

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7274
  call void @llvm.dbg.value(metadata i32 %23, metadata !7245, metadata !DIExpression()), !dbg !7246
  br label %33, !dbg !7276

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7277
  %26 = and i32 %25, 65280, !dbg !7279
  %27 = icmp eq i32 %26, 0, !dbg !7280
  br i1 %27, label %29, label %28, !dbg !7281

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7282
  call void @llvm.dbg.value(metadata i32 0, metadata !7245, metadata !DIExpression()), !dbg !7246
  br label %33, !dbg !7284

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7285
  %31 = icmp ult i32 %30, 65536, !dbg !7287
  br i1 %31, label %33, label %32, !dbg !7288

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7289
  call void @llvm.dbg.value(metadata i32 0, metadata !7245, metadata !DIExpression()), !dbg !7246
  br label %33, !dbg !7291

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7246
  call void @llvm.dbg.value(metadata i32 %34, metadata !7245, metadata !DIExpression()), !dbg !7246
  ret i32 %34, !dbg !7292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7293 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7295, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata i32 %1, metadata !7296, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata i8* %2, metadata !7297, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata i32 0, metadata !7298, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata i32 -22, metadata !7299, metadata !DIExpression()), !dbg !7308
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7309
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7311
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7313
  %7 = and i32 %6, 2, !dbg !7314
  %8 = icmp eq i32 %7, 0, !dbg !7315
  br i1 %8, label %19, label %9, !dbg !7316

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7317
  call void @llvm.dbg.value(metadata i32 %10, metadata !7300, metadata !DIExpression()), !dbg !7318
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7319
  %12 = and i32 %11, 128, !dbg !7321
  %13 = icmp eq i32 %12, 0, !dbg !7322
  br i1 %13, label %19, label %14, !dbg !7323

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7299, metadata !DIExpression()), !dbg !7308
  %15 = icmp eq i32 %1, 0, !dbg !7324
  br i1 %15, label %19, label %16, !dbg !7327

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7328
  %18 = and i32 %17, -129, !dbg !7328
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7328
  br label %19, !dbg !7330

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7308
  call void @llvm.dbg.value(metadata i32 %20, metadata !7299, metadata !DIExpression()), !dbg !7308
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7331
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7333
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7335
  %24 = and i32 %23, 16, !dbg !7336
  %25 = icmp eq i32 %24, 0, !dbg !7336
  br i1 %25, label %26, label %30, !dbg !7337

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7338
  %28 = and i32 %27, 2, !dbg !7339
  %29 = icmp eq i32 %28, 0, !dbg !7339
  br i1 %29, label %39, label %30, !dbg !7340

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7341
  %32 = and i32 %31, 2048, !dbg !7342
  %33 = icmp eq i32 %32, 0, !dbg !7342
  br i1 %33, label %39, label %34, !dbg !7343

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7344
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %36, metadata !7303, metadata !DIExpression()), !dbg !7346
  %37 = icmp eq i32 %36, 0, !dbg !7347
  br i1 %37, label %39, label %38, !dbg !7349

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7350, metadata !DIExpression()) #24, !dbg !7353
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !7356, !srcloc !7357
  call void @llvm.dbg.value(metadata i32 2, metadata !7298, metadata !DIExpression()), !dbg !7308
  br label %39, !dbg !7358

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !7308
  call void @llvm.dbg.value(metadata i32 %40, metadata !7298, metadata !DIExpression()), !dbg !7308
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7359
  %42 = and i32 %41, 32, !dbg !7361
  %43 = icmp eq i32 %42, 0, !dbg !7362
  br i1 %43, label %47, label %44, !dbg !7363

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7364
  %46 = and i32 %45, -8193, !dbg !7364
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7364
  br label %47, !dbg !7366

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7367
  %49 = or i32 %48, 255, !dbg !7367
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7367
  store i8 0, i8* %2, align 1, !dbg !7368
  ret i32 %40, !dbg !7369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7370 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7374, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i32 %0, metadata !7375, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i8* %1, metadata !7376, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.value(metadata i32 0, metadata !7377, metadata !DIExpression()), !dbg !7381
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7382
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7384
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7386
  %6 = and i32 %5, 512, !dbg !7387
  %7 = icmp eq i32 %6, 0, !dbg !7387
  br i1 %7, label %18, label %8, !dbg !7388

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7389
  call void @llvm.dbg.value(metadata i32 %9, metadata !7378, metadata !DIExpression()), !dbg !7390
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7391
  %11 = and i32 %10, 32768, !dbg !7393
  %12 = icmp ne i32 %11, 0, !dbg !7394
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7395
  br i1 %14, label %15, label %18, !dbg !7395

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7396
  %17 = and i32 %16, -32769, !dbg !7396
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7396
  br label %18, !dbg !7400

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7401
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7403
  %21 = and i32 %20, 256, !dbg !7405
  %22 = icmp eq i32 %21, 0, !dbg !7406
  br i1 %22, label %23, label %25, !dbg !7407

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7408
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7410
  %27 = or i32 %26, 65280, !dbg !7410
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7410
  store i8 0, i8* %1, align 1, !dbg !7411
  ret void, !dbg !7412
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7413 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7419, metadata !DIExpression()), !dbg !7421
  call void @llvm.dbg.value(metadata i32 0, metadata !7420, metadata !DIExpression()), !dbg !7421
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7422
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7424
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7426
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7428
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7430
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7432
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7434
  %8 = or i32 %7, -65536, !dbg !7434
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7434
  ret void, !dbg !7435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7436 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7440, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata i8* %0, metadata !7441, metadata !DIExpression()), !dbg !7442
  store i8 0, i8* %0, align 1, !dbg !7443
  ret void, !dbg !7444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7445 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7449, metadata !DIExpression()), !dbg !7452
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7453
  %3 = load i32, i32* %2, align 4, !dbg !7453
  %4 = inttoptr i32 %3 to i16*, !dbg !7454
  call void @llvm.dbg.value(metadata i16* %4, metadata !7450, metadata !DIExpression()), !dbg !7452
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7455
  %6 = or i32 %5, 256, !dbg !7455
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7455
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7456, !srcloc !7459
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7460, !srcloc !7463
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7464
  %8 = load i16, i16* %7, align 2, !dbg !7465
  call void @llvm.dbg.value(metadata i16 %8, metadata !7451, metadata !DIExpression()), !dbg !7452
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7466
  %10 = and i32 %9, -257, !dbg !7466
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7466
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7467, !srcloc !7459
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7469, !srcloc !7463
  %11 = icmp eq i16 %8, -8446, !dbg !7471
  ret i1 %11, !dbg !7473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7474 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7475
  %2 = or i32 %1, 16, !dbg !7475
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7475
  ret void, !dbg !7476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7477 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7480, metadata !DIExpression()), !dbg !7481
  br label %1, !dbg !7482

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7480, metadata !DIExpression()), !dbg !7481
  tail call fastcc void @__NVIC_SetPriority.15(i32 noundef %2) #26, !dbg !7484
  %3 = add nuw nsw i32 %2, 1, !dbg !7487
  call void @llvm.dbg.value(metadata i32 %3, metadata !7480, metadata !DIExpression()), !dbg !7481
  %4 = icmp eq i32 %3, 97, !dbg !7488
  br i1 %4, label %5, label %1, !dbg !7482, !llvm.loop !7489

5:                                                ; preds = %1
  ret void, !dbg !7491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.15(i32 noundef %0) unnamed_addr #15 !dbg !7492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7494, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.value(metadata i32 1, metadata !7495, metadata !DIExpression()), !dbg !7496
  %2 = and i32 %0, 15, !dbg !7497
  %3 = add nsw i32 %2, -4, !dbg !7497
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7497
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7497
  %6 = icmp slt i32 %0, 0, !dbg !7497
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7497
  store volatile i8 16, i8* %7, align 1, !dbg !7498
  ret void, !dbg !7500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7607, metadata !DIExpression()), !dbg !7608
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7609
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7611
  br i1 %3, label %4, label %12, !dbg !7612

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7613, !srcloc !7625
  call void @llvm.dbg.value(metadata i32 %5, metadata !7616, metadata !DIExpression()) #24, !dbg !7626
  %6 = icmp eq i32 %5, 0, !dbg !7627
  br i1 %6, label %12, label %7, !dbg !7628

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7629
  %9 = or i32 %8, 268435456, !dbg !7629
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7629
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7631
  %11 = and i32 %10, -32769, !dbg !7631
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7631
  br label %12, !dbg !7632

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7633
  ret void, !dbg !7634
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7635 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7636
  ret void, !dbg !7637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !468, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8 0, metadata !469, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 64, metadata !471, metadata !DIExpression()), !dbg !7638
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7639
  %3 = load i32, i32* %2, align 4, !dbg !7639
  %4 = add i32 %3, -64, !dbg !7641
  call void @llvm.dbg.value(metadata i32 %4, metadata !470, metadata !DIExpression()), !dbg !7638
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7642
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7643
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7644
  call void @llvm.dbg.value(metadata i8 1, metadata !469, metadata !DIExpression()), !dbg !7638
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7645
  ret void, !dbg !7646
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7647 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7648
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7649, !srcloc !7652
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7653, !srcloc !7656
  ret void, !dbg !7657
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7658 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7659, !srcloc !7662
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7663
  ret void, !dbg !7664
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7665 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7680, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i8 %1, metadata !7681, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 %2, metadata !7682, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 %3, metadata !7683, metadata !DIExpression()), !dbg !7684
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7685
  ret void, !dbg !7687
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7688 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7693, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i8 %1, metadata !7694, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 undef, metadata !7695, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 undef, metadata !7696, metadata !DIExpression()), !dbg !7698
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7699
  call void @llvm.dbg.value(metadata i8 %3, metadata !7697, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7698
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7700
  call void @llvm.dbg.value(metadata i32 %4, metadata !7697, metadata !DIExpression()), !dbg !7698
  %5 = trunc i32 %4 to i8, !dbg !7701
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7702
  ret void, !dbg !7703
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7704 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7708, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i8 %1, metadata !7709, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i8 %2, metadata !7710, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i1 %3, metadata !7711, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7714
  %5 = zext i8 %2 to i32, !dbg !7715
  call void @llvm.dbg.value(metadata i32 %5, metadata !7713, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i32 0, metadata !7712, metadata !DIExpression()), !dbg !7714
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7713, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i32 0, metadata !7712, metadata !DIExpression()), !dbg !7714
  %7 = icmp eq i8 %1, 0, !dbg !7716
  br i1 %7, label %29, label %8, !dbg !7719

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7713, metadata !DIExpression()), !dbg !7714
  call void @llvm.dbg.value(metadata i32 %10, metadata !7712, metadata !DIExpression()), !dbg !7714
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7720
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7723
  %13 = load i32, i32* %12, align 4, !dbg !7723
  %14 = icmp eq i32 %13, 0, !dbg !7724
  br i1 %14, label %25, label %15, !dbg !7725

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7726

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7728
  %18 = icmp eq i32 %17, 0, !dbg !7728
  br i1 %18, label %29, label %19, !dbg !7729

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7730
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7731
  call void @llvm.dbg.value(metadata i32 %21, metadata !7713, metadata !DIExpression()), !dbg !7714
  %22 = icmp eq i32 %21, -22, !dbg !7732
  br i1 %22, label %29, label %23, !dbg !7734

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %24, metadata !7713, metadata !DIExpression()), !dbg !7714
  br label %25, !dbg !7736

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7714
  call void @llvm.dbg.value(metadata i32 %26, metadata !7713, metadata !DIExpression()), !dbg !7714
  %27 = add nuw nsw i32 %10, 1, !dbg !7737
  call void @llvm.dbg.value(metadata i32 %27, metadata !7712, metadata !DIExpression()), !dbg !7714
  %28 = icmp eq i32 %27, %6, !dbg !7716
  br i1 %28, label %29, label %8, !dbg !7719, !llvm.loop !7738

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7714
  ret i32 %30, !dbg !7740
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7741 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7745, metadata !DIExpression()), !dbg !7747
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7748
  %3 = load i32, i32* %2, align 4, !dbg !7748
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7749, !range !3866
  %5 = icmp ult i32 %4, 2, !dbg !7749
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7750
  br i1 %7, label %8, label %15, !dbg !7750

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7751
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7752
  %11 = load i32, i32* %10, align 4, !dbg !7752
  %12 = and i32 %11, %9, !dbg !7753
  %13 = icmp eq i32 %12, 0, !dbg !7754
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7746, metadata !DIExpression()), !dbg !7747
  ret i32 %16, !dbg !7755
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7756 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7760, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7761, metadata !DIExpression()), !dbg !7763
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7764
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7764
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7762, metadata !DIExpression()), !dbg !7765
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7766
  %6 = load i32, i32* %5, align 4, !dbg !7766
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7767
  store i32 %6, i32* %7, align 4, !dbg !7768
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7769
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7770
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7771
  %11 = load i32, i32* %10, align 4, !dbg !7771
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7772
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7773
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7774
  ret i32 %12, !dbg !7775
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7776 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7783, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7784, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i32 undef, metadata !7785, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i32 %2, metadata !7786, metadata !DIExpression()), !dbg !7787
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7788
  %5 = load i32, i32* %4, align 4, !dbg !7788
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7789
  %7 = or i32 %6, %5, !dbg !7790
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7791
  store i32 %7, i32* %8, align 4, !dbg !7792
  ret void, !dbg !7793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7794 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7798, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7799, metadata !DIExpression()), !dbg !7800
  %3 = zext i8 %0 to i32, !dbg !7801
  %4 = icmp ugt i8 %0, 7, !dbg !7803
  br i1 %4, label %6, label %5, !dbg !7804

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7805
  br label %6, !dbg !7806

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7800
  ret i32 %7, !dbg !7807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7812, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7813, metadata !DIExpression()), !dbg !7814
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7815
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7816
  %4 = load i32, i32* %3, align 4, !dbg !7816
  %5 = and i32 %4, -32, !dbg !7817
  %6 = or i32 %5, %0, !dbg !7818
  %7 = or i32 %6, 16, !dbg !7818
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7819
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7820
  %9 = load i32, i32* %8, align 4, !dbg !7820
  %10 = or i32 %9, 1, !dbg !7821
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7822
  ret void, !dbg !7823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7827, metadata !DIExpression()), !dbg !7828
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7829
  ret void, !dbg !7830
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7835, metadata !DIExpression()), !dbg !7836
  %2 = icmp ult i32 %0, 33, !dbg !7837
  br i1 %2, label %11, label %3, !dbg !7839

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7840
  br i1 %4, label %11, label %5, !dbg !7842

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7843
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7844, !range !3866
  %8 = mul nsw i32 %7, -2, !dbg !7845
  %9 = add nsw i32 %8, 62, !dbg !7845
  %10 = and i32 %9, 62, !dbg !7846
  br label %11, !dbg !7847

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7836
  ret i32 %12, !dbg !7848
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7849 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i8 %1, metadata !7854, metadata !DIExpression()), !dbg !7855
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7856
  ret void, !dbg !7858
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7859 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7863, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i8 %1, metadata !7864, metadata !DIExpression()), !dbg !7870
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7871
  call void @llvm.dbg.value(metadata i8 %3, metadata !7865, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7870
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %4, metadata !7865, metadata !DIExpression()), !dbg !7870
  %5 = icmp ne i32 %4, -22, !dbg !7873
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %4, metadata !7866, metadata !DIExpression()), !dbg !7875
  br i1 %7, label %8, label %12, !dbg !7874

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7866, metadata !DIExpression()), !dbg !7875
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7876
  %10 = add i32 %9, 1, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %10, metadata !7866, metadata !DIExpression()), !dbg !7875
  %11 = icmp eq i32 %10, 8, !dbg !7880
  br i1 %11, label %12, label %8, !dbg !7881, !llvm.loop !7882

12:                                               ; preds = %8, %2
  ret void, !dbg !7884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7888, metadata !DIExpression()), !dbg !7889
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7890
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7891
  ret void, !dbg !7892
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7893 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7896
  %2 = icmp ugt i32 %1, 8, !dbg !7898
  br i1 %2, label %14, label %3, !dbg !7899

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7900
  call void @llvm.dbg.value(metadata i32 0, metadata !7895, metadata !DIExpression()), !dbg !7901
  %4 = icmp eq i32 %1, 0, !dbg !7902
  br i1 %4, label %12, label %5, !dbg !7905

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7905

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7895, metadata !DIExpression()), !dbg !7901
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7906
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7908
  %10 = add nuw i32 %8, 1, !dbg !7909
  call void @llvm.dbg.value(metadata i32 %10, metadata !7895, metadata !DIExpression()), !dbg !7901
  %11 = icmp eq i32 %10, %1, !dbg !7902
  br i1 %11, label %12, label %7, !dbg !7905, !llvm.loop !7910

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7912
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7913
  tail call void @arm_core_mpu_enable() #26, !dbg !7914
  br label %14, !dbg !7915

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7901
  ret i32 %15, !dbg !7916
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7917 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7924, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %1, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %0, metadata !7926, metadata !DIExpression()), !dbg !7927
  %3 = load i8, i8* %1, align 1, !dbg !7928
  %4 = icmp eq i8 %3, 0, !dbg !7929
  br i1 %4, label %13, label %5, !dbg !7930

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7924, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %8, metadata !7925, metadata !DIExpression()), !dbg !7927
  store i8 %6, i8* %7, align 1, !dbg !7931
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7933
  call void @llvm.dbg.value(metadata i8* %9, metadata !7924, metadata !DIExpression()), !dbg !7927
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7934
  call void @llvm.dbg.value(metadata i8* %10, metadata !7925, metadata !DIExpression()), !dbg !7927
  %11 = load i8, i8* %10, align 1, !dbg !7928
  %12 = icmp eq i8 %11, 0, !dbg !7929
  br i1 %12, label %13, label %5, !dbg !7930, !llvm.loop !7935

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7937
  ret i8* %0, !dbg !7938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7943, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %1, metadata !7944, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %2, metadata !7945, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %0, metadata !7946, metadata !DIExpression()), !dbg !7947
  %4 = icmp eq i32 %2, 0, !dbg !7948
  br i1 %4, label %22, label %5, !dbg !7949

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7943, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %7, metadata !7945, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i8* %8, metadata !7944, metadata !DIExpression()), !dbg !7947
  %9 = load i8, i8* %8, align 1, !dbg !7950
  %10 = icmp eq i8 %9, 0, !dbg !7951
  br i1 %10, label %16, label %11, !dbg !7952

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7953
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7955
  call void @llvm.dbg.value(metadata i8* %12, metadata !7944, metadata !DIExpression()), !dbg !7947
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7956
  call void @llvm.dbg.value(metadata i8* %13, metadata !7943, metadata !DIExpression()), !dbg !7947
  %14 = add i32 %7, -1, !dbg !7957
  call void @llvm.dbg.value(metadata i32 %14, metadata !7945, metadata !DIExpression()), !dbg !7947
  %15 = icmp eq i32 %14, 0, !dbg !7948
  br i1 %15, label %22, label %5, !dbg !7949, !llvm.loop !7958

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7943, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %18, metadata !7945, metadata !DIExpression()), !dbg !7947
  store i8 0, i8* %17, align 1, !dbg !7960
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7962
  call void @llvm.dbg.value(metadata i8* %19, metadata !7943, metadata !DIExpression()), !dbg !7947
  %20 = add i32 %18, -1, !dbg !7963
  call void @llvm.dbg.value(metadata i32 %20, metadata !7945, metadata !DIExpression()), !dbg !7947
  %21 = icmp eq i32 %20, 0, !dbg !7964
  br i1 %21, label %22, label %16, !dbg !7965, !llvm.loop !7966

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7973, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %1, metadata !7974, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %1, metadata !7975, metadata !DIExpression()), !dbg !7976
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7977

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7973, metadata !DIExpression()), !dbg !7976
  %6 = load i8, i8* %5, align 1, !dbg !7978
  %7 = icmp eq i8 %6, %3, !dbg !7979
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7980
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7981
  call void @llvm.dbg.value(metadata i8* %10, metadata !7973, metadata !DIExpression()), !dbg !7976
  br i1 %9, label %11, label %4, !dbg !7980, !llvm.loop !7983

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7985
  ret i8* %12, !dbg !7986
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7987 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7989, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %1, metadata !7990, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i8* null, metadata !7991, metadata !DIExpression()), !dbg !7992
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7993

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7992
  call void @llvm.dbg.value(metadata i8* %6, metadata !7991, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i8* %5, metadata !7989, metadata !DIExpression()), !dbg !7992
  %7 = load i8, i8* %5, align 1, !dbg !7994
  %8 = icmp eq i8 %7, %3, !dbg !7997
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7998
  call void @llvm.dbg.value(metadata i8* %9, metadata !7991, metadata !DIExpression()), !dbg !7992
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %10, metadata !7989, metadata !DIExpression()), !dbg !7992
  %11 = icmp eq i8 %7, 0, !dbg !8000
  br i1 %11, label %12, label %4, !dbg !8000, !llvm.loop !8001

12:                                               ; preds = %4
  ret i8* %9, !dbg !8003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !8004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8008, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i32 0, metadata !8009, metadata !DIExpression()), !dbg !8010
  %2 = load i8, i8* %0, align 1, !dbg !8011
  %3 = icmp eq i8 %2, 0, !dbg !8012
  br i1 %3, label %11, label %4, !dbg !8013

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8009, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i8* %6, metadata !8008, metadata !DIExpression()), !dbg !8010
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8014
  call void @llvm.dbg.value(metadata i8* %7, metadata !8008, metadata !DIExpression()), !dbg !8010
  %8 = add i32 %5, 1, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %8, metadata !8009, metadata !DIExpression()), !dbg !8010
  %9 = load i8, i8* %7, align 1, !dbg !8011
  %10 = icmp eq i8 %9, 0, !dbg !8012
  br i1 %10, label %11, label %4, !dbg !8013, !llvm.loop !8017

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8010
  ret i32 %12, !dbg !8019
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8024, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32 %1, metadata !8025, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32 0, metadata !8026, metadata !DIExpression()), !dbg !8027
  %3 = load i8, i8* %0, align 1, !dbg !8028
  %4 = icmp ne i8 %3, 0, !dbg !8029
  %5 = icmp ne i32 %1, 0, !dbg !8030
  %6 = and i1 %4, %5, !dbg !8030
  br i1 %6, label %7, label %16, !dbg !8031

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8026, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i8* %9, metadata !8024, metadata !DIExpression()), !dbg !8027
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8032
  call void @llvm.dbg.value(metadata i8* %10, metadata !8024, metadata !DIExpression()), !dbg !8027
  %11 = add nuw i32 %8, 1, !dbg !8034
  call void @llvm.dbg.value(metadata i32 %11, metadata !8026, metadata !DIExpression()), !dbg !8027
  %12 = load i8, i8* %10, align 1, !dbg !8028
  %13 = icmp ne i8 %12, 0, !dbg !8029
  %14 = icmp ult i32 %11, %1, !dbg !8030
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8030
  br i1 %15, label %7, label %16, !dbg !8031, !llvm.loop !8035

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8027
  ret i32 %17, !dbg !8037
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8042, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i8* %1, metadata !8043, metadata !DIExpression()), !dbg !8044
  %3 = load i8, i8* %0, align 1, !dbg !8045
  %4 = load i8, i8* %1, align 1, !dbg !8046
  %5 = icmp ne i8 %3, %4, !dbg !8047
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8048
  br i1 %7, label %18, label %8, !dbg !8048

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8043, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i8* %10, metadata !8042, metadata !DIExpression()), !dbg !8044
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8049
  call void @llvm.dbg.value(metadata i8* %11, metadata !8042, metadata !DIExpression()), !dbg !8044
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8051
  call void @llvm.dbg.value(metadata i8* %12, metadata !8043, metadata !DIExpression()), !dbg !8044
  %13 = load i8, i8* %11, align 1, !dbg !8045
  %14 = load i8, i8* %12, align 1, !dbg !8046
  %15 = icmp ne i8 %13, %14, !dbg !8047
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8048
  br i1 %17, label %18, label %8, !dbg !8048, !llvm.loop !8052

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8045
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8046
  %21 = zext i8 %19 to i32, !dbg !8055
  %22 = zext i8 %20 to i32, !dbg !8056
  %23 = sub nsw i32 %21, %22, !dbg !8057
  ret i32 %23, !dbg !8058
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8059 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8063, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i8* %1, metadata !8064, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %2, metadata !8065, metadata !DIExpression()), !dbg !8066
  %4 = icmp eq i32 %2, 0, !dbg !8067
  br i1 %4, label %23, label %5, !dbg !8067

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8065, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i8* %7, metadata !8064, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i8* %8, metadata !8063, metadata !DIExpression()), !dbg !8066
  %9 = load i8, i8* %8, align 1, !dbg !8068
  %10 = load i8, i8* %7, align 1, !dbg !8069
  %11 = icmp ne i8 %9, %10, !dbg !8070
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8071
  br i1 %13, label %19, label %14, !dbg !8071

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8072
  call void @llvm.dbg.value(metadata i8* %15, metadata !8063, metadata !DIExpression()), !dbg !8066
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8074
  call void @llvm.dbg.value(metadata i8* %16, metadata !8064, metadata !DIExpression()), !dbg !8066
  %17 = add i32 %6, -1, !dbg !8075
  call void @llvm.dbg.value(metadata i32 %17, metadata !8065, metadata !DIExpression()), !dbg !8066
  %18 = icmp eq i32 %17, 0, !dbg !8067
  br i1 %18, label %23, label %5, !dbg !8067, !llvm.loop !8076

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8079
  %21 = zext i8 %10 to i32, !dbg !8080
  %22 = sub nsw i32 %20, %21, !dbg !8081
  br label %23, !dbg !8082

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8082
  ret i32 %24, !dbg !8083
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8084 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8089, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i8* %1, metadata !8090, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i8** %2, metadata !8091, metadata !DIExpression()), !dbg !8094
  %4 = icmp eq i8* %0, null, !dbg !8095
  br i1 %4, label %5, label %7, !dbg !8095

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8096
  br label %7, !dbg !8095

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8095
  call void @llvm.dbg.value(metadata i8* %8, metadata !8092, metadata !DIExpression()), !dbg !8094
  %9 = load i8, i8* %8, align 1, !dbg !8097
  %10 = icmp eq i8 %9, 0, !dbg !8097
  br i1 %10, label %33, label %11, !dbg !8098

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8092, metadata !DIExpression()), !dbg !8094
  %14 = zext i8 %12 to i32, !dbg !8097
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8099
  %16 = icmp eq i8* %15, null, !dbg !8098
  br i1 %16, label %21, label %17, !dbg !8100

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8101
  call void @llvm.dbg.value(metadata i8* %18, metadata !8092, metadata !DIExpression()), !dbg !8094
  %19 = load i8, i8* %18, align 1, !dbg !8097
  %20 = icmp eq i8 %19, 0, !dbg !8097
  br i1 %20, label %33, label %11, !dbg !8098, !llvm.loop !8103

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8093, metadata !DIExpression()), !dbg !8094
  %24 = zext i8 %22 to i32, !dbg !8105
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8106
  %26 = icmp eq i8* %25, null, !dbg !8107
  br i1 %26, label %27, label %31, !dbg !8108

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8109
  call void @llvm.dbg.value(metadata i8* %28, metadata !8093, metadata !DIExpression()), !dbg !8094
  %29 = load i8, i8* %28, align 1, !dbg !8105
  %30 = icmp eq i8 %29, 0, !dbg !8105
  br i1 %30, label %33, label %21, !dbg !8111, !llvm.loop !8112

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8114
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8117
  br label %33, !dbg !8118

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8094
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8094
  store i8* %34, i8** %2, align 4, !dbg !8094
  ret i8* %35, !dbg !8119
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8120 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8122, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i8* %1, metadata !8123, metadata !DIExpression()), !dbg !8124
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8125
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8126
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8127
  ret i8* %0, !dbg !8128
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8131, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %1, metadata !8132, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %2, metadata !8133, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %0, metadata !8134, metadata !DIExpression()), !dbg !8136
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8137
  call void @llvm.dbg.value(metadata i32 %4, metadata !8135, metadata !DIExpression()), !dbg !8136
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8138
  call void @llvm.dbg.value(metadata i8* %5, metadata !8131, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %1, metadata !8132, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %2, metadata !8133, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %2, metadata !8133, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8136
  %6 = icmp eq i32 %2, 0, !dbg !8139
  br i1 %6, label %18, label %7, !dbg !8140

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8141
  call void @llvm.dbg.value(metadata i8* %9, metadata !8131, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i8* %10, metadata !8132, metadata !DIExpression()), !dbg !8136
  %12 = load i8, i8* %10, align 1, !dbg !8142
  %13 = icmp eq i8 %12, 0, !dbg !8143
  br i1 %13, label %18, label %14, !dbg !8144

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8145
  call void @llvm.dbg.value(metadata i8* %15, metadata !8132, metadata !DIExpression()), !dbg !8136
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8147
  call void @llvm.dbg.value(metadata i8* %16, metadata !8131, metadata !DIExpression()), !dbg !8136
  store i8 %12, i8* %9, align 1, !dbg !8148
  call void @llvm.dbg.value(metadata i32 %11, metadata !8133, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %11, metadata !8133, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8136
  %17 = icmp eq i32 %11, 0, !dbg !8139
  br i1 %17, label %18, label %7, !dbg !8140, !llvm.loop !8149

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8136
  store i8 0, i8* %19, align 1, !dbg !8151
  ret i8* %0, !dbg !8152
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8157, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %1, metadata !8158, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 %2, metadata !8159, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %0, metadata !8160, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %1, metadata !8161, metadata !DIExpression()), !dbg !8162
  %4 = icmp eq i32 %2, 0, !dbg !8163
  br i1 %4, label %31, label %5, !dbg !8165

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8161, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %0, metadata !8160, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 %2, metadata !8159, metadata !DIExpression()), !dbg !8162
  %6 = add i32 %2, -1, !dbg !8166
  call void @llvm.dbg.value(metadata i32 %6, metadata !8159, metadata !DIExpression()), !dbg !8162
  %7 = icmp eq i32 %6, 0, !dbg !8167
  br i1 %7, label %23, label %8, !dbg !8168

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8169
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8169
  br label %11, !dbg !8169

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8161, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i8* %14, metadata !8160, metadata !DIExpression()), !dbg !8162
  %15 = load i8, i8* %14, align 1, !dbg !8170
  %16 = load i8, i8* %13, align 1, !dbg !8171
  %17 = icmp eq i8 %15, %16, !dbg !8172
  br i1 %17, label %18, label %23, !dbg !8169

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8173
  call void @llvm.dbg.value(metadata i8* %19, metadata !8160, metadata !DIExpression()), !dbg !8162
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8175
  call void @llvm.dbg.value(metadata i8* %20, metadata !8161, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 %12, metadata !8159, metadata !DIExpression()), !dbg !8162
  %21 = add i32 %12, -1, !dbg !8166
  call void @llvm.dbg.value(metadata i32 %21, metadata !8159, metadata !DIExpression()), !dbg !8162
  %22 = icmp eq i32 %21, 0, !dbg !8167
  br i1 %22, label %23, label %11, !dbg !8168, !llvm.loop !8176

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8162
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8162
  %26 = load i8, i8* %24, align 1, !dbg !8178
  %27 = zext i8 %26 to i32, !dbg !8178
  %28 = load i8, i8* %25, align 1, !dbg !8179
  %29 = zext i8 %28 to i32, !dbg !8179
  %30 = sub nsw i32 %27, %29, !dbg !8180
  br label %31, !dbg !8181

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8162
  ret i32 %32, !dbg !8182
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8183 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8187, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i8* %1, metadata !8188, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i32 %2, metadata !8189, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i8* %0, metadata !8190, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i8* %1, metadata !8191, metadata !DIExpression()), !dbg !8192
  %4 = ptrtoint i8* %0 to i32, !dbg !8193
  %5 = ptrtoint i8* %1 to i32, !dbg !8193
  %6 = sub i32 %4, %5, !dbg !8193
  %7 = icmp ult i32 %6, %2, !dbg !8195
  br i1 %7, label %10, label %8, !dbg !8196

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8191, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i8* %0, metadata !8190, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i32 %2, metadata !8189, metadata !DIExpression()), !dbg !8192
  %9 = icmp eq i32 %2, 0, !dbg !8197
  br i1 %9, label %26, label %17, !dbg !8199

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8189, metadata !DIExpression()), !dbg !8192
  %12 = add i32 %11, -1, !dbg !8200
  call void @llvm.dbg.value(metadata i32 %12, metadata !8189, metadata !DIExpression()), !dbg !8192
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8203
  %14 = load i8, i8* %13, align 1, !dbg !8203
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8204
  store i8 %14, i8* %15, align 1, !dbg !8205
  %16 = icmp eq i32 %12, 0, !dbg !8206
  br i1 %16, label %26, label %10, !dbg !8207, !llvm.loop !8208

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8191, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i8* %19, metadata !8190, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i32 %20, metadata !8189, metadata !DIExpression()), !dbg !8192
  %21 = load i8, i8* %18, align 1, !dbg !8210
  store i8 %21, i8* %19, align 1, !dbg !8212
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8213
  call void @llvm.dbg.value(metadata i8* %22, metadata !8190, metadata !DIExpression()), !dbg !8192
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8214
  call void @llvm.dbg.value(metadata i8* %23, metadata !8191, metadata !DIExpression()), !dbg !8192
  %24 = add i32 %20, -1, !dbg !8215
  call void @llvm.dbg.value(metadata i32 %24, metadata !8189, metadata !DIExpression()), !dbg !8192
  %25 = icmp eq i32 %24, 0, !dbg !8197
  br i1 %25, label %26, label %17, !dbg !8199, !llvm.loop !8216

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8225, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i8* %1, metadata !8226, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %2, metadata !8227, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i8* %0, metadata !8228, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i8* %1, metadata !8229, metadata !DIExpression()), !dbg !8230
  %4 = icmp eq i32 %2, 0, !dbg !8231
  br i1 %4, label %14, label %5, !dbg !8232

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8229, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i8* %7, metadata !8228, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %8, metadata !8227, metadata !DIExpression()), !dbg !8230
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8233
  call void @llvm.dbg.value(metadata i8* %9, metadata !8229, metadata !DIExpression()), !dbg !8230
  %10 = load i8, i8* %6, align 1, !dbg !8235
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8236
  call void @llvm.dbg.value(metadata i8* %11, metadata !8228, metadata !DIExpression()), !dbg !8230
  store i8 %10, i8* %7, align 1, !dbg !8237
  %12 = add i32 %8, -1, !dbg !8238
  call void @llvm.dbg.value(metadata i32 %12, metadata !8227, metadata !DIExpression()), !dbg !8230
  %13 = icmp eq i32 %12, 0, !dbg !8231
  br i1 %13, label %14, label %5, !dbg !8232, !llvm.loop !8239

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8241
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8242 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8246, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i32 %1, metadata !8247, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i32 %2, metadata !8248, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %0, metadata !8249, metadata !DIExpression()), !dbg !8251
  %4 = trunc i32 %1 to i8, !dbg !8252
  call void @llvm.dbg.value(metadata i8 %4, metadata !8250, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i32 %2, metadata !8248, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %0, metadata !8249, metadata !DIExpression()), !dbg !8251
  %5 = icmp eq i32 %2, 0, !dbg !8253
  br i1 %5, label %12, label %6, !dbg !8254

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8248, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %8, metadata !8249, metadata !DIExpression()), !dbg !8251
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8255
  call void @llvm.dbg.value(metadata i8* %9, metadata !8249, metadata !DIExpression()), !dbg !8251
  store i8 %4, i8* %8, align 1, !dbg !8257
  %10 = add i32 %7, -1, !dbg !8258
  call void @llvm.dbg.value(metadata i32 %10, metadata !8248, metadata !DIExpression()), !dbg !8251
  %11 = icmp eq i32 %10, 0, !dbg !8253
  br i1 %11, label %12, label %6, !dbg !8254, !llvm.loop !8259

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8261
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8262 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8266, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i32 %1, metadata !8267, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i32 %2, metadata !8268, metadata !DIExpression()), !dbg !8272
  %4 = icmp eq i32 %2, 0, !dbg !8273
  br i1 %4, label %17, label %5, !dbg !8274

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8275

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8276
  call void @llvm.dbg.value(metadata i8* %9, metadata !8269, metadata !DIExpression()), !dbg !8276
  call void @llvm.dbg.value(metadata i32 %8, metadata !8268, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i8* %9, metadata !8269, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8276
  %10 = load i8, i8* %9, align 1, !dbg !8277
  %11 = icmp eq i8 %10, %6, !dbg !8280
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8281
  call void @llvm.dbg.value(metadata i8* %12, metadata !8269, metadata !DIExpression()), !dbg !8276
  call void @llvm.dbg.value(metadata i32 %13, metadata !8268, metadata !DIExpression()), !dbg !8272
  br i1 %15, label %16, label %7, !dbg !8281, !llvm.loop !8282

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8284

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8272
  ret i8* %19, !dbg !8285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8286 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8288, metadata !DIExpression()), !dbg !8289
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8290
  ret void, !dbg !8291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8294, metadata !DIExpression()), !dbg !8295
  ret i32 -1, !dbg !8296
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8301, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i32* %1, metadata !8302, metadata !DIExpression()), !dbg !8303
  %3 = ptrtoint i32* %1 to i32, !dbg !8304
  %4 = and i32 %3, -2, !dbg !8304
  %5 = icmp eq i32 %4, 2, !dbg !8304
  br i1 %5, label %6, label %9, !dbg !8304

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8305
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8305
  br label %9, !dbg !8306

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8306
  ret i32 %10, !dbg !8307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8310, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.value(metadata i32* %1, metadata !8311, metadata !DIExpression()), !dbg !8312
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8313
  ret i32 %3, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8318, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.value(metadata i32* %1, metadata !8319, metadata !DIExpression()), !dbg !8320
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8321, !srcloc !8323
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8324
  ret i32 %3, !dbg !8325
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8331, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i32* %1, metadata !8332, metadata !DIExpression()), !dbg !8335
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8336
  call void @llvm.dbg.value(metadata i32 %3, metadata !8333, metadata !DIExpression()), !dbg !8335
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %4, metadata !8334, metadata !DIExpression()), !dbg !8335
  %5 = icmp ne i32 %3, %4, !dbg !8338
  %6 = sext i1 %5 to i32, !dbg !8339
  ret i32 %6, !dbg !8340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8341 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8345, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.value(metadata i32 %1, metadata !8346, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.value(metadata i32 %2, metadata !8347, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.value(metadata i32* %3, metadata !8348, metadata !DIExpression()), !dbg !8349
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8350
  ret i32 %5, !dbg !8351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8352 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8354, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 %1, metadata !8355, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 %2, metadata !8356, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32* %3, metadata !8357, metadata !DIExpression()), !dbg !8358
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8359, !srcloc !8361
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8362
  ret i32 %5, !dbg !8363
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8364 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8366, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.value(metadata i32 %1, metadata !8367, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.value(metadata i32 %2, metadata !8368, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.value(metadata i32* %3, metadata !8369, metadata !DIExpression()), !dbg !8374
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8375
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8377
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8377
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8377
  br i1 %11, label %33, label %12, !dbg !8377

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8374
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8374
  call void @llvm.dbg.value(metadata i8* %14, metadata !8372, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.value(metadata i32 %13, metadata !8370, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.value(metadata i32 %1, metadata !8371, metadata !DIExpression()), !dbg !8374
  br label %15, !dbg !8378

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8380
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8374
  call void @llvm.dbg.value(metadata i8* %17, metadata !8372, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.value(metadata i32 %16, metadata !8371, metadata !DIExpression()), !dbg !8374
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8381
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8384
  call void @llvm.dbg.value(metadata i8* %19, metadata !8372, metadata !DIExpression()), !dbg !8374
  %20 = load i8, i8* %17, align 1, !dbg !8385
  %21 = zext i8 %20 to i32, !dbg !8386
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8381
  %23 = icmp eq i32 %22, -1, !dbg !8387
  br i1 %23, label %30, label %24, !dbg !8388

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8389
  call void @llvm.dbg.value(metadata i32 %25, metadata !8371, metadata !DIExpression()), !dbg !8374
  %26 = icmp eq i32 %25, 0, !dbg !8390
  br i1 %26, label %27, label %15, !dbg !8391, !llvm.loop !8392

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8394
  call void @llvm.dbg.value(metadata i32 %28, metadata !8370, metadata !DIExpression()), !dbg !8374
  %29 = icmp eq i32 %28, 0, !dbg !8395
  br i1 %29, label %30, label %12, !dbg !8396, !llvm.loop !8397

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8374
  call void @llvm.dbg.value(metadata i32 %31, metadata !8370, metadata !DIExpression()), !dbg !8374
  call void @llvm.dbg.label(metadata !8373), !dbg !8400
  %32 = sub i32 %2, %31, !dbg !8401
  br label %33, !dbg !8402

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8374
  ret i32 %34, !dbg !8403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8404 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8408, metadata !DIExpression()), !dbg !8409
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8410
  %3 = icmp eq i32 %2, -1, !dbg !8412
  br i1 %3, label %8, label %4, !dbg !8413

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8414
  %6 = icmp eq i32 %5, -1, !dbg !8415
  %7 = sext i1 %6 to i32, !dbg !8414
  br label %8, !dbg !8416

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8409
  ret i32 %9, !dbg !8417
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8420, metadata !DIExpression()), !dbg !8421
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8422
  ret void, !dbg !8423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8428, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i32 %1, metadata !8429, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8430, metadata !DIExpression()), !dbg !8434
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8435
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8435
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8435
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8431, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.value(metadata i32 %0, metadata !8433, metadata !DIExpression()), !dbg !8434
  %7 = icmp slt i32 %0, %1, !dbg !8436
  br i1 %7, label %8, label %22, !dbg !8439

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8433, metadata !DIExpression()), !dbg !8434
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8440
  %11 = icmp eq i32 %10, 0, !dbg !8440
  br i1 %11, label %19, label %12, !dbg !8443

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8444
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8446
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8446
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8448
  br i1 %15, label %19, label %16, !dbg !8449

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8450
  %18 = load i8*, i8** %17, align 4, !dbg !8450
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8451
  br label %19, !dbg !8452

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8453
  call void @llvm.dbg.value(metadata i32 %20, metadata !8433, metadata !DIExpression()), !dbg !8434
  %21 = icmp eq i32 %20, %1, !dbg !8436
  br i1 %21, label %22, label %8, !dbg !8439, !llvm.loop !8454

22:                                               ; preds = %19, %3
  ret void, !dbg !8456
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8459, metadata !DIExpression()), !dbg !8460
  %2 = shl nuw i32 1, %0, !dbg !8461
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8464
  ret i32 %3, !dbg !8465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8470, metadata !DIExpression()), !dbg !8471
  %2 = shl nuw i32 1, %0, !dbg !8472
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8475
  ret void, !dbg !8476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8480, metadata !DIExpression()), !dbg !8481
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8482
  ret void, !dbg !8483
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8486, metadata !DIExpression()), !dbg !8487
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8488
  %3 = and i32 %2, %0, !dbg !8488
  %4 = icmp eq i32 %3, %0, !dbg !8489
  %5 = zext i1 %4 to i32, !dbg !8489
  ret i32 %5, !dbg !8490
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8493, metadata !DIExpression()), !dbg !8494
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8495
  ret void, !dbg !8496
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8497 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8499, metadata !DIExpression()), !dbg !8500
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8501
  ret void, !dbg !8502
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8503 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8505, metadata !DIExpression()), !dbg !8506
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8507
  ret void, !dbg !8508
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8509 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8511, metadata !DIExpression()), !dbg !8512
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8513
  ret void, !dbg !8514
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8515 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8517, metadata !DIExpression()), !dbg !8518
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8521 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8523, metadata !DIExpression()), !dbg !8524
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8525
  ret void, !dbg !8526
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8533 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8535, metadata !DIExpression()), !dbg !8536
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8537
  ret void, !dbg !8538
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8539 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8541, metadata !DIExpression()), !dbg !8542
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8543
  ret void, !dbg !8544
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8547, metadata !DIExpression()), !dbg !8548
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8549
  ret void, !dbg !8550
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8553, metadata !DIExpression()), !dbg !8554
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8555
  ret i32 0, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !717 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !721, metadata !DIExpression()), !dbg !8557
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8558
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8560
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8562
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8564
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8566
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8568
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8570
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8572
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8574
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8576
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8578
  ret void, !dbg !8580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8583, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.value(metadata i32 0, metadata !8584, metadata !DIExpression()), !dbg !8585
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8586
  %3 = load i32, i32* %2, align 4, !dbg !8586
  call void @llvm.dbg.value(metadata i32 %3, metadata !8584, metadata !DIExpression()), !dbg !8585
  %4 = shl nuw i32 1, %0, !dbg !8587
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8588
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8589
  ret void, !dbg !8590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8593, metadata !DIExpression()), !dbg !8594
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8595
  %3 = or i32 %2, %0, !dbg !8595
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8595
  ret void, !dbg !8596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8599, metadata !DIExpression()), !dbg !8600
  %2 = icmp slt i32 %0, 32, !dbg !8601
  br i1 %2, label %3, label %5, !dbg !8603

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8604
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8606
  br label %5, !dbg !8607

5:                                                ; preds = %1, %3
  ret void, !dbg !8608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8611, metadata !DIExpression()), !dbg !8612
  %2 = xor i32 %0, -1, !dbg !8613
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8613
  %4 = and i32 %3, %2, !dbg !8613
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8613
  ret void, !dbg !8614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8619, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i32 %1, metadata !8620, metadata !DIExpression()), !dbg !8621
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8622

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8623
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8625
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8626
  br label %11, !dbg !8627

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8628
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8629
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8630
  br label %11, !dbg !8631

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8632
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8633
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8634
  br label %11, !dbg !8635

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8636
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8637
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8638
  br label %11, !dbg !8639

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8643, metadata !DIExpression()), !dbg !8644
  %2 = xor i32 %0, -1, !dbg !8645
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8645
  %4 = and i32 %3, %2, !dbg !8645
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8645
  ret void, !dbg !8646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8649, metadata !DIExpression()), !dbg !8650
  %2 = xor i32 %0, -1, !dbg !8651
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8651
  %4 = and i32 %3, %2, !dbg !8651
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8651
  ret void, !dbg !8652
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8655, metadata !DIExpression()), !dbg !8656
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8657
  %3 = or i32 %2, %0, !dbg !8657
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8657
  ret void, !dbg !8658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8661, metadata !DIExpression()), !dbg !8662
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8663
  %3 = or i32 %2, %0, !dbg !8663
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8663
  ret void, !dbg !8664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8669, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8670, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata i8* %2, metadata !8671, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8672, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8674, metadata !DIExpression()), !dbg !8675
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8676
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8676
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8678
  br i1 %6, label %7, label %9, !dbg !8679

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8680
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8681
  store i8* %2, i8** %8, align 4, !dbg !8682
  br label %9, !dbg !8683

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8675
  ret i32 %10, !dbg !8684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8687, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8688, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8689, metadata !DIExpression()), !dbg !8690
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8691
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8692
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8693
  store i8* null, i8** %3, align 4, !dbg !8694
  ret void, !dbg !8695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8696 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8698, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.value(metadata i8* %1, metadata !8699, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.value(metadata i8* %1, metadata !8700, metadata !DIExpression()), !dbg !8703
  %3 = bitcast i8* %1 to i32*, !dbg !8704
  %4 = load i32, i32* %3, align 4, !dbg !8704
  %5 = add i32 %4, -169, !dbg !8704
  %6 = icmp ult i32 %5, -121, !dbg !8704
  br i1 %6, label %15, label %7, !dbg !8706

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8707
  %9 = inttoptr i32 %8 to i32*, !dbg !8708
  call void @llvm.dbg.value(metadata i32* %9, metadata !8701, metadata !DIExpression()), !dbg !8703
  %10 = load volatile i32, i32* %9, align 4, !dbg !8709
  call void @llvm.dbg.value(metadata i32 %10, metadata !8702, metadata !DIExpression()), !dbg !8703
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8710
  %12 = bitcast i8* %11 to i32*, !dbg !8710
  %13 = load i32, i32* %12, align 4, !dbg !8710
  %14 = or i32 %13, %10, !dbg !8711
  call void @llvm.dbg.value(metadata i32 %14, metadata !8702, metadata !DIExpression()), !dbg !8703
  store volatile i32 %14, i32* %9, align 4, !dbg !8712
  br label %15, !dbg !8713

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8703
  ret i32 %16, !dbg !8714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8717, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i8* %1, metadata !8718, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i8* %1, metadata !8719, metadata !DIExpression()), !dbg !8722
  %3 = bitcast i8* %1 to i32*, !dbg !8723
  %4 = load i32, i32* %3, align 4, !dbg !8723
  %5 = add i32 %4, -169, !dbg !8723
  %6 = icmp ult i32 %5, -121, !dbg !8723
  br i1 %6, label %16, label %7, !dbg !8725

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8726
  %9 = inttoptr i32 %8 to i32*, !dbg !8727
  call void @llvm.dbg.value(metadata i32* %9, metadata !8720, metadata !DIExpression()), !dbg !8722
  %10 = load volatile i32, i32* %9, align 4, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %10, metadata !8721, metadata !DIExpression()), !dbg !8722
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8729
  %12 = bitcast i8* %11 to i32*, !dbg !8729
  %13 = load i32, i32* %12, align 4, !dbg !8729
  %14 = xor i32 %13, -1, !dbg !8730
  %15 = and i32 %10, %14, !dbg !8731
  call void @llvm.dbg.value(metadata i32 %15, metadata !8721, metadata !DIExpression()), !dbg !8722
  store volatile i32 %15, i32* %9, align 4, !dbg !8732
  br label %16, !dbg !8733

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8722
  ret i32 %17, !dbg !8734
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8737, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i8* %1, metadata !8738, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i32* %2, metadata !8739, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i8* %1, metadata !8740, metadata !DIExpression()), !dbg !8745
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %4, metadata !8741, metadata !DIExpression()), !dbg !8745
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #26, !dbg !8747
  call void @llvm.dbg.value(metadata i32 %5, metadata !8742, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i32 %5, metadata !8743, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i32 %4, metadata !8744, metadata !DIExpression()), !dbg !8745
  %6 = bitcast i8* %1 to i32*, !dbg !8748
  %7 = load i32, i32* %6, align 4, !dbg !8748
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8749

8:                                                ; preds = %3
  br label %18, !dbg !8750

9:                                                ; preds = %3
  br label %18, !dbg !8752

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8753
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #26, !dbg !8754
  br label %18, !dbg !8755

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8756
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #26, !dbg !8757
  br label %18, !dbg !8758

16:                                               ; preds = %3
  br label %18, !dbg !8759

17:                                               ; preds = %3
  br label %18, !dbg !8760

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8761
  br label %20, !dbg !8762

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8745
  ret i32 %21, !dbg !8762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %1, metadata !8766, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %2, metadata !8767, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %1, metadata !8768, metadata !DIExpression()), !dbg !8773
  %4 = bitcast i8* %1 to i32*, !dbg !8774
  %5 = load i32, i32* %4, align 4, !dbg !8774
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8775
  call void @llvm.dbg.value(metadata i32 %6, metadata !8772, metadata !DIExpression()), !dbg !8773
  %7 = icmp slt i32 %6, 0, !dbg !8776
  br i1 %7, label %22, label %8, !dbg !8778

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8768, metadata !DIExpression()), !dbg !8773
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8779
  %10 = bitcast i8* %9 to i32*, !dbg !8779
  %11 = load i32, i32* %10, align 4, !dbg !8779
  %12 = lshr i32 %11, 16, !dbg !8779
  %13 = and i32 %12, 7, !dbg !8779
  %14 = lshr i32 %11, 8, !dbg !8780
  %15 = and i32 %14, 31, !dbg !8780
  %16 = shl i32 %13, %15, !dbg !8781
  call void @llvm.dbg.value(metadata i32 %16, metadata !8771, metadata !DIExpression()), !dbg !8773
  %17 = and i32 %11, 255, !dbg !8782
  %18 = or i32 %17, 1073887232, !dbg !8783
  %19 = inttoptr i32 %18 to i32*, !dbg !8784
  call void @llvm.dbg.value(metadata i32* %19, metadata !8769, metadata !DIExpression()), !dbg !8773
  %20 = load volatile i32, i32* %19, align 4, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %20, metadata !8770, metadata !DIExpression()), !dbg !8773
  %21 = or i32 %16, %20, !dbg !8786
  call void @llvm.dbg.value(metadata i32 %21, metadata !8770, metadata !DIExpression()), !dbg !8773
  store volatile i32 %21, i32* %19, align 4, !dbg !8787
  br label %22, !dbg !8788

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8773
  ret i32 %23, !dbg !8789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8794, metadata !DIExpression()), !dbg !8796
  call void @llvm.dbg.value(metadata i32 0, metadata !8795, metadata !DIExpression()), !dbg !8796
  %2 = add i32 %0, -1, !dbg !8797
  %3 = icmp ult i32 %2, 6, !dbg !8797
  br i1 %3, label %4, label %7, !dbg !8797

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8797
  %6 = load i32, i32* %5, align 4, !dbg !8797
  call void @llvm.dbg.value(metadata i32 %6, metadata !8795, metadata !DIExpression()), !dbg !8796
  br label %7, !dbg !8798

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8796
  ret i32 %8, !dbg !8799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #11 !dbg !8800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8804, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata i32 2, metadata !8805, metadata !DIExpression()), !dbg !8806
  %2 = lshr i32 %0, 1, !dbg !8807
  ret i32 %2, !dbg !8808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8813, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 8, metadata !8814, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 84, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 %1, metadata !8816, metadata !DIExpression()), !dbg !8817
  %3 = mul i32 %0, 84, !dbg !8818
  %4 = shl nsw i32 %1, 3, !dbg !8819
  %5 = udiv i32 %3, %4, !dbg !8820
  ret i32 %5, !dbg !8821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8822 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8824, metadata !DIExpression()), !dbg !8827
  tail call void @config_enable_default_clocks() #25, !dbg !8828
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8829
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8829
  %4 = lshr i32 %3, 4, !dbg !8829
  %5 = and i32 %4, 15, !dbg !8829
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8829
  %7 = load i8, i8* %6, align 1, !dbg !8829
  %8 = zext i8 %7 to i32, !dbg !8829
  %9 = lshr i32 %2, %8, !dbg !8829
  call void @llvm.dbg.value(metadata i32 %9, metadata !8825, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8826, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8827
  %10 = icmp ult i32 %9, 84000000, !dbg !8830
  br i1 %10, label %11, label %13, !dbg !8832

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8833
  br label %13, !dbg !8835

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8836
  tail call fastcc void @set_up_plls() #26, !dbg !8837
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8838
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8841
  br label %14, !dbg !8842

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8843
  %16 = icmp eq i32 %15, 8, !dbg !8844
  br i1 %16, label %17, label %14, !dbg !8842, !llvm.loop !8845

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8847
  br i1 %18, label %19, label %21, !dbg !8849

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8850
  br label %21, !dbg !8852

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8853
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8854
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8855
  ret i32 0, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8857 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8859
  %2 = and i32 %1, 240, !dbg !8859
  ret i32 %2, !dbg !8860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8861 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8862
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8867
  br label %1, !dbg !8868

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8869
  %3 = icmp eq i32 %2, 1, !dbg !8870
  br i1 %3, label %4, label %1, !dbg !8868, !llvm.loop !8871

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8873
  br label %5, !dbg !8876

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8877
  %7 = icmp eq i32 %6, 1, !dbg !8878
  br i1 %7, label %8, label %5, !dbg !8876, !llvm.loop !8879

8:                                                ; preds = %5
  ret void, !dbg !8881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8882 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8883
  %2 = icmp eq i32 %1, 8, !dbg !8885
  br i1 %2, label %3, label %4, !dbg !8886

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8887
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8889
  br label %4, !dbg !8890

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8891
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8892
  %6 = and i32 %5, -196609, !dbg !8892
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8892
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8893
  %8 = and i32 %7, -251658241, !dbg !8893
  %9 = or i32 %8, 134217728, !dbg !8893
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8893
  tail call void @config_pll_sysclock() #25, !dbg !8894
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8895
  br label %10, !dbg !8896

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8897
  %12 = icmp eq i32 %11, 1, !dbg !8898
  br i1 %12, label %13, label %10, !dbg !8896, !llvm.loop !8899

13:                                               ; preds = %10
  ret void, !dbg !8901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8902 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8905
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8906
  %2 = and i32 %1, -241, !dbg !8906
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8906
  ret void, !dbg !8907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8910, metadata !DIExpression()), !dbg !8911
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8912
  %3 = and i32 %2, -4, !dbg !8912
  %4 = or i32 %3, %0, !dbg !8912
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8912
  ret void, !dbg !8913
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8914 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8915
  %2 = and i32 %1, 12, !dbg !8915
  ret i32 %2, !dbg !8916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8917 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8919, metadata !DIExpression()), !dbg !8920
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8921
  %2 = and i32 %1, -7169, !dbg !8921
  %3 = or i32 %2, 4096, !dbg !8921
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8921
  ret void, !dbg !8922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8923 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8925, metadata !DIExpression()), !dbg !8926
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8927
  %2 = and i32 %1, -57345, !dbg !8927
  %3 = or i32 %2, 32768, !dbg !8927
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8927
  ret void, !dbg !8928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8929 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8930
  %2 = icmp eq i32 %1, 1, !dbg !8932
  br i1 %2, label %7, label %3, !dbg !8933

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8934
  br label %4, !dbg !8936

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8937
  %6 = icmp eq i32 %5, 1, !dbg !8938
  br i1 %6, label %7, label %4, !dbg !8936, !llvm.loop !8939

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8941
  br label %8, !dbg !8942

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8943
  %10 = icmp eq i32 %9, 0, !dbg !8944
  br i1 %10, label %11, label %8, !dbg !8942, !llvm.loop !8945

11:                                               ; preds = %8
  ret void, !dbg !8947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8948 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8949
  %2 = and i32 %1, -16777217, !dbg !8949
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8949
  ret void, !dbg !8950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8951 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8952
  %2 = or i32 %1, 16777216, !dbg !8952
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8952
  ret void, !dbg !8953
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8954 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8955
  %2 = lshr i32 %1, 25, !dbg !8956
  %3 = and i32 %2, 1, !dbg !8956
  ret i32 %3, !dbg !8957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8958 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8959
  %2 = lshr i32 %1, 1, !dbg !8960
  %3 = and i32 %2, 1, !dbg !8960
  ret i32 %3, !dbg !8961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8962 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8963
  %2 = or i32 %1, 1, !dbg !8963
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8963
  ret void, !dbg !8964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8965 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8966
  %2 = and i32 %1, -262145, !dbg !8966
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8966
  ret void, !dbg !8967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8968 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8969
  %2 = or i32 %1, 65536, !dbg !8969
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8969
  ret void, !dbg !8970
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8971 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8972
  %2 = lshr i32 %1, 17, !dbg !8973
  %3 = and i32 %2, 1, !dbg !8973
  ret i32 %3, !dbg !8974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8975 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8976
  %2 = or i32 %1, 1, !dbg !8976
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8976
  ret void, !dbg !8977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8978 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8979
  %2 = lshr i32 %1, 1, !dbg !8980
  %3 = and i32 %2, 1, !dbg !8980
  ret i32 %3, !dbg !8981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8982 {
  ret i32 16000000, !dbg !8984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8988 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8989
  ret void, !dbg !8990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8991 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8995, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 8, metadata !8996, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 84, metadata !8997, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 0, metadata !8998, metadata !DIExpression()), !dbg !8999
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9000
  %2 = and i32 %1, -4227072, !dbg !9000
  %3 = or i32 %2, 4199688, !dbg !9000
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9000
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9001
  %5 = and i32 %4, -196609, !dbg !9001
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9001
  ret void, !dbg !9002
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !9003 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !9004
  ret void, !dbg !9005
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !9006 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9009, metadata !DIExpression()), !dbg !9011
  %2 = bitcast i32* %1 to i8*, !dbg !9012
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9012
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9010, metadata !DIExpression()), !dbg !9013
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9014
  %4 = or i32 %3, 268435456, !dbg !9014
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9014
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9015
  %6 = and i32 %5, 268435456, !dbg !9015
  store volatile i32 %6, i32* %1, align 4, !dbg !9016
  %7 = load volatile i32, i32* %1, align 4, !dbg !9017
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9018
  ret void, !dbg !9018
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9021, metadata !DIExpression()), !dbg !9022
  %2 = tail call fastcc zeroext i1 @device_is_ready.45() #26, !dbg !9023
  br i1 %2, label %3, label %4, !dbg !9025

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9026
  br label %4, !dbg !9027

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9022
  ret i32 %5, !dbg !9028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.45() unnamed_addr #1 !dbg !9029 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9033, metadata !DIExpression()), !dbg !9034
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9035, !srcloc !9037
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.48() #26, !dbg !9038
  ret i1 %1, !dbg !9039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9040 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9041
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9046, metadata !DIExpression()), !dbg !9048
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9049
  %3 = trunc i32 %0 to i8, !dbg !9049
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9049
  %5 = icmp eq i32 %4, 1, !dbg !9049
  call void @llvm.dbg.value(metadata i1 %5, metadata !9047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9048
  br i1 %5, label %10, label %6, !dbg !9050

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9051
  br i1 %7, label %8, label %9, !dbg !9053

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 13) #26, !dbg !9054
  br label %9, !dbg !9056

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %3) #26, !dbg !9057
  br label %10, !dbg !9058

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.46(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9060 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9062, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i8 %0, metadata !9063, metadata !DIExpression()), !dbg !9064
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9065, !srcloc !9067
  tail call fastcc void @z_impl_uart_poll_out.47(i8 noundef zeroext %0) #26, !dbg !9068
  ret void, !dbg !9069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.47(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9070 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9072, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.value(metadata i8 %0, metadata !9073, metadata !DIExpression()), !dbg !9075
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9076
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9074, metadata !DIExpression()), !dbg !9075
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9077
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9077
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #25, !dbg !9078
  ret void, !dbg !9079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9080 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9082, metadata !DIExpression()), !dbg !9083
  ret i32 0, !dbg !9084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.48() unnamed_addr #1 !dbg !9085 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9087, metadata !DIExpression()), !dbg !9088
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9089
  ret i1 %1, !dbg !9090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9091 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9095, metadata !DIExpression()), !dbg !9096
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9097
  ret void, !dbg !9098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9099 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9103, metadata !DIExpression()), !dbg !9104
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9105
  ret void, !dbg !9106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9107 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9111, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9112, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9113, metadata !DIExpression()), !dbg !9114
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9115
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9116
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9117
  tail call fastcc void @console_input_init() #26, !dbg !9118
  ret void, !dbg !9119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9120 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9123
  tail call fastcc void @uart_irq_rx_disable.49() #26, !dbg !9124
  tail call fastcc void @uart_irq_tx_disable.50() #26, !dbg !9125
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9126
  %2 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9127
  %3 = icmp eq i32 %2, 0, !dbg !9128
  br i1 %3, label %8, label %4, !dbg !9128

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9122, metadata !DIExpression(DW_OP_deref)), !dbg !9129
  %5 = call fastcc i32 @uart_fifo_read.52(i8* noundef nonnull %1) #26, !dbg !9130
  %6 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9127
  %7 = icmp eq i32 %6, 0, !dbg !9128
  br i1 %7, label %8, label %4, !dbg !9128, !llvm.loop !9132

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.53() #26, !dbg !9134
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9135
  ret void, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.49() unnamed_addr #1 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9138, metadata !DIExpression()), !dbg !9139
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9140, !srcloc !9142
  tail call fastcc void @z_impl_uart_irq_rx_disable.62() #26, !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.50() unnamed_addr #1 !dbg !9145 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9147, metadata !DIExpression()), !dbg !9148
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9149, !srcloc !9151
  tail call fastcc void @z_impl_uart_irq_tx_disable.61() #26, !dbg !9152
  ret void, !dbg !9153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9154 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9158, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9159, metadata !DIExpression()), !dbg !9160
  tail call fastcc void @uart_irq_callback_user_data_set.55() #26, !dbg !9161
  ret void, !dbg !9162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.51() unnamed_addr #1 !dbg !9163 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9165, metadata !DIExpression()), !dbg !9167
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9168
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9166, metadata !DIExpression()), !dbg !9167
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9169
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9169
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9171
  br i1 %4, label %7, label %5, !dbg !9172

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9173
  br label %7, !dbg !9174

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9167
  ret i32 %8, !dbg !9175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.52(i8* noundef %0) unnamed_addr #1 !dbg !9176 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9178, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.value(metadata i8* %0, metadata !9179, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.value(metadata i32 1, metadata !9180, metadata !DIExpression()), !dbg !9182
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9183
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9181, metadata !DIExpression()), !dbg !9182
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9184
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9184
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9186
  br i1 %5, label %8, label %6, !dbg !9187

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8* noundef %0, i32 noundef 1) #25, !dbg !9188
  br label %8, !dbg !9189

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9182
  ret i32 %9, !dbg !9190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.53() unnamed_addr #1 !dbg !9191 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9193, metadata !DIExpression()), !dbg !9194
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9195, !srcloc !9197
  tail call fastcc void @z_impl_uart_irq_rx_enable.54() #26, !dbg !9198
  ret void, !dbg !9199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.54() unnamed_addr #1 !dbg !9200 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9202, metadata !DIExpression()), !dbg !9204
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9205
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9203, metadata !DIExpression()), !dbg !9204
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9206
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9206
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9208
  br i1 %4, label %6, label %5, !dbg !9209

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9210
  br label %6, !dbg !9212

6:                                                ; preds = %5, %0
  ret void, !dbg !9213
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1082 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1084, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.value(metadata i8* %1, metadata !1085, metadata !DIExpression()), !dbg !9214
  %4 = call fastcc i32 @uart_irq_update.56() #26, !dbg !9215
  %5 = icmp eq i32 %4, 0, !dbg !9215
  br i1 %5, label %96, label %6, !dbg !9216

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9217
  %8 = icmp eq i32 %7, 0, !dbg !9216
  br i1 %8, label %96, label %9, !dbg !9218

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9219
  %10 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9220
  %11 = icmp eq i32 %10, 0, !dbg !9220
  br i1 %11, label %93, label %12, !dbg !9222, !llvm.loop !9223

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1086, metadata !DIExpression(DW_OP_deref)), !dbg !9225
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9226
  call void @llvm.dbg.value(metadata i32 %13, metadata !1088, metadata !DIExpression()), !dbg !9225
  %14 = icmp slt i32 %13, 0, !dbg !9227
  br i1 %14, label %92, label %15, !dbg !9229

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9230
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9232
  br i1 %17, label %22, label %18, !dbg !9233

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9234
  call void @llvm.dbg.value(metadata i8 %19, metadata !1086, metadata !DIExpression()), !dbg !9225
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9235
  %21 = icmp eq i32 %20, 0, !dbg !9236
  br i1 %21, label %22, label %92, !dbg !9237

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9238
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9238
  br i1 %24, label %25, label %30, !dbg !9239

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9240
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9240
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9240
  call void @llvm.dbg.value(metadata i8* %28, metadata !1089, metadata !DIExpression()), !dbg !9241
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9242
  %29 = icmp eq i8* %28, null, !dbg !9243
  br i1 %29, label %92, label %30, !dbg !9245

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9246
  br i1 %31, label %32, label %36, !dbg !9248

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9249
  call void @llvm.dbg.value(metadata i8 %33, metadata !1086, metadata !DIExpression()), !dbg !9225
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9251
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9251
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9252
  br label %93, !dbg !9253, !llvm.loop !9223

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9254
  %38 = load i8, i8* %3, align 1, !dbg !9225
  call void @llvm.dbg.value(metadata i8 %38, metadata !1086, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i8 %38, metadata !1086, metadata !DIExpression()), !dbg !9225
  br i1 %37, label %39, label %42, !dbg !9256

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9257
  br i1 %40, label %41, label %93, !dbg !9260, !llvm.loop !9223

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9261
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9263
  br label %93, !dbg !9264, !llvm.loop !9223

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9265
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9267
  %45 = icmp eq i32 %44, 0, !dbg !9267
  br i1 %45, label %46, label %81, !dbg !9268

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1086, metadata !DIExpression()), !dbg !9225
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9269, !llvm.loop !9223

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9271
  %49 = icmp eq i8 %48, 0, !dbg !9274
  br i1 %49, label %93, label %50, !dbg !9275, !llvm.loop !9223

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9276
  %52 = add i8 %48, -1, !dbg !9278
  store i8 %52, i8* @cur, align 1, !dbg !9278
  %53 = zext i8 %52 to i32, !dbg !9276
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9276
  %55 = load i8, i8* @end, align 1, !dbg !9279
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9280
  br label %93, !dbg !9281, !llvm.loop !9223

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9282
  br label %93, !dbg !9283, !llvm.loop !9223

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9284
  %59 = load i8, i8* @cur, align 1, !dbg !9285
  %60 = zext i8 %59 to i32, !dbg !9285
  %61 = load i8, i8* @end, align 1, !dbg !9286
  %62 = zext i8 %61 to i32, !dbg !9286
  %63 = add nuw nsw i32 %62, %60, !dbg !9287
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9284
  store i8 0, i8* %64, align 1, !dbg !9288
  call fastcc void @uart_poll_out.46(i8 noundef zeroext 13) #26, !dbg !9289
  call fastcc void @uart_poll_out.46(i8 noundef zeroext 10) #26, !dbg !9290
  store i8 0, i8* @cur, align 1, !dbg !9291
  store i8 0, i8* @end, align 1, !dbg !9292
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9293
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9293
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9293
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9293
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9295
  br label %93, !dbg !9296, !llvm.loop !9223

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9297
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9297
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9299
  br i1 %73, label %93, label %74, !dbg !9299, !llvm.loop !9223

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9300
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9300
  %77 = load i8, i8* @cur, align 1, !dbg !9302
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9303
  %79 = load i8, i8* @cur, align 1, !dbg !9304
  %80 = add i8 %79, %78, !dbg !9304
  store i8 %80, i8* @cur, align 1, !dbg !9304
  br label %93, !dbg !9305, !llvm.loop !9223

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9306
  %83 = zext i8 %82 to i32, !dbg !9306
  %84 = load i8, i8* @end, align 1, !dbg !9308
  %85 = zext i8 %84 to i32, !dbg !9308
  %86 = add nuw nsw i32 %85, %83, !dbg !9309
  %87 = icmp ult i32 %86, 127, !dbg !9310
  br i1 %87, label %88, label %93, !dbg !9311

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9312
  %90 = add i8 %82, 1, !dbg !9314
  store i8 %90, i8* @cur, align 1, !dbg !9314
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9312
  call void @llvm.dbg.value(metadata i8 %38, metadata !1086, metadata !DIExpression()), !dbg !9225
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9315
  br label %93, !dbg !9316

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9224
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9224
  %94 = call fastcc i32 @uart_irq_update.56() #26, !dbg !9215
  %95 = icmp eq i32 %94, 0, !dbg !9215
  br i1 %95, label %96, label %6, !dbg !9216

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.55() unnamed_addr #1 !dbg !9318 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9320, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9321, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.value(metadata i8* null, metadata !9322, metadata !DIExpression()), !dbg !9324
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9325
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9323, metadata !DIExpression()), !dbg !9324
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9326
  br i1 %2, label %8, label %3, !dbg !9328

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9329
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9329
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9330
  br i1 %6, label %8, label %7, !dbg !9331

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_44, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9332
  br label %8, !dbg !9334

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.56() unnamed_addr #1 !dbg !9336 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9338, metadata !DIExpression()), !dbg !9339
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9340, !srcloc !9342
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.60() #26, !dbg !9343
  ret i32 %1, !dbg !9344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9345 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9347, metadata !DIExpression()), !dbg !9348
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9349, !srcloc !9351
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9352
  ret i32 %1, !dbg !9353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9354 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9358, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i8* %0, metadata !9359, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i32 1, metadata !9360, metadata !DIExpression()), !dbg !9362
  %2 = tail call fastcc i32 @uart_fifo_read.52(i8* noundef %0) #26, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %2, metadata !9361, metadata !DIExpression()), !dbg !9362
  %3 = icmp slt i32 %2, 0, !dbg !9364
  br i1 %3, label %4, label %5, !dbg !9366

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.49() #26, !dbg !9367
  br label %5, !dbg !9369

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9362
  ret i32 %6, !dbg !9370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9371 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9380, metadata !DIExpression()), !dbg !9382
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9383, !srcloc !9385
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9386
  ret i8* %2, !dbg !9387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !9388 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9394, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32 %0, metadata !9395, metadata !DIExpression()), !dbg !9398
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9399
  call void @llvm.dbg.value(metadata i32 %2, metadata !9396, metadata !DIExpression()), !dbg !9398
  %3 = and i32 %0, 31, !dbg !9400
  %4 = shl nuw i32 1, %3, !dbg !9401
  %5 = and i32 %2, %4, !dbg !9401
  %6 = icmp ne i32 %5, 0, !dbg !9401
  ret i1 %6, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9407, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %1, metadata !9408, metadata !DIExpression()), !dbg !9410
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9411
  br i1 %3, label %4, label %11, !dbg !9413

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9414
  %6 = tail call fastcc i32 @isdigit.57(i32 noundef %5) #26, !dbg !9417
  %7 = icmp eq i32 %6, 0, !dbg !9417
  br i1 %7, label %8, label %9, !dbg !9418

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9419
  br label %34, !dbg !9421

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9422
  %10 = add nsw i32 %5, -48, !dbg !9423
  store i32 %10, i32* @ansi_val, align 4, !dbg !9424
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9425
  br label %81, !dbg !9426

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9427
  br i1 %12, label %13, label %34, !dbg !9429

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9430
  %15 = tail call fastcc i32 @isdigit.57(i32 noundef %14) #26, !dbg !9433
  %16 = icmp eq i32 %15, 0, !dbg !9433
  br i1 %16, label %29, label %17, !dbg !9434

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9435
  br i1 %18, label %19, label %24, !dbg !9438

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9439
  %21 = mul i32 %20, 10, !dbg !9439
  %22 = add nsw i32 %14, -48, !dbg !9441
  %23 = add i32 %22, %21, !dbg !9442
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9442
  br label %81, !dbg !9443

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9444
  %26 = mul i32 %25, 10, !dbg !9444
  %27 = add nsw i32 %14, -48, !dbg !9446
  %28 = add i32 %27, %26, !dbg !9447
  store i32 %28, i32* @ansi_val, align 4, !dbg !9447
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9448
  br i1 %30, label %31, label %33, !dbg !9450

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9451
  br i1 %32, label %33, label %81, !dbg !9452

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9453
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9454
  br label %34, !dbg !9455

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9409), !dbg !9456
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9457

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9458
  %37 = load i8, i8* @cur, align 1, !dbg !9461
  %38 = zext i8 %37 to i32, !dbg !9461
  %39 = icmp ugt i32 %36, %38, !dbg !9462
  br i1 %39, label %80, label %40, !dbg !9463

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9464
  %42 = trunc i32 %36 to i8, !dbg !9464
  %43 = add i8 %41, %42, !dbg !9464
  store i8 %43, i8* @end, align 1, !dbg !9464
  %44 = sub i8 %37, %42, !dbg !9465
  store i8 %44, i8* @cur, align 1, !dbg !9465
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9466
  br label %80, !dbg !9467

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9468
  %47 = load i8, i8* @end, align 1, !dbg !9470
  %48 = zext i8 %47 to i32, !dbg !9470
  %49 = icmp ugt i32 %46, %48, !dbg !9471
  br i1 %49, label %80, label %50, !dbg !9472

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9473
  %52 = sub i8 %47, %51, !dbg !9473
  store i8 %52, i8* @end, align 1, !dbg !9473
  %53 = load i8, i8* @cur, align 1, !dbg !9474
  %54 = add i8 %53, %51, !dbg !9474
  store i8 %54, i8* @cur, align 1, !dbg !9474
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9475
  br label %80, !dbg !9476

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9477
  %57 = icmp eq i8 %56, 0, !dbg !9477
  br i1 %57, label %80, label %58, !dbg !9479

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9480
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9481
  %60 = load i8, i8* @cur, align 1, !dbg !9482
  %61 = load i8, i8* @end, align 1, !dbg !9483
  %62 = add i8 %61, %60, !dbg !9483
  store i8 %62, i8* @end, align 1, !dbg !9483
  store i8 0, i8* @cur, align 1, !dbg !9484
  br label %80, !dbg !9485

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9486
  %65 = icmp eq i8 %64, 0, !dbg !9486
  br i1 %65, label %80, label %66, !dbg !9488

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9489
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9490
  %68 = load i8, i8* @end, align 1, !dbg !9491
  %69 = load i8, i8* @cur, align 1, !dbg !9492
  %70 = add i8 %69, %68, !dbg !9492
  store i8 %70, i8* @cur, align 1, !dbg !9492
  store i8 0, i8* @end, align 1, !dbg !9493
  br label %80, !dbg !9494

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9495
  %73 = icmp eq i8 %72, 0, !dbg !9495
  br i1 %73, label %80, label %74, !dbg !9497

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9498
  %75 = load i8, i8* @cur, align 1, !dbg !9499
  %76 = zext i8 %75 to i32, !dbg !9500
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9500
  %78 = load i8, i8* @end, align 1, !dbg !9501
  %79 = add i8 %78, -1, !dbg !9501
  store i8 %79, i8* @end, align 1, !dbg !9501
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9502
  br label %80, !dbg !9503

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9504
  br label %81, !dbg !9505

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9505
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9506 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9511, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.value(metadata i32 %0, metadata !9512, metadata !DIExpression()), !dbg !9515
  %2 = and i32 %0, 31, !dbg !9516
  %3 = shl nuw i32 1, %2, !dbg !9516
  call void @llvm.dbg.value(metadata i32 %3, metadata !9513, metadata !DIExpression()), !dbg !9515
  %4 = xor i32 %3, -1, !dbg !9517
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %5, metadata !9514, metadata !DIExpression()), !dbg !9515
  %6 = and i32 %5, %3, !dbg !9519
  %7 = icmp ne i32 %6, 0, !dbg !9520
  ret i1 %7, !dbg !9521
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !9522 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9526, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %0, metadata !9527, metadata !DIExpression()), !dbg !9529
  %2 = and i32 %0, 31, !dbg !9530
  %3 = shl nuw i32 1, %2, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %3, metadata !9528, metadata !DIExpression()), !dbg !9529
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9531
  ret void, !dbg !9532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9535, metadata !DIExpression()), !dbg !9536
  %2 = add i32 %0, -32, !dbg !9537
  %3 = icmp ult i32 %2, 95, !dbg !9537
  %4 = zext i1 %3 to i32, !dbg !9537
  ret i32 %4, !dbg !9538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9539 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9543, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8 %1, metadata !9544, metadata !DIExpression()), !dbg !9545
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 8) #26, !dbg !9546
  %3 = icmp eq i8 %1, 0, !dbg !9547
  br i1 %3, label %4, label %5, !dbg !9549

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 32) #26, !dbg !9550
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 8) #26, !dbg !9552
  br label %14, !dbg !9553

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9554
  call void @llvm.dbg.value(metadata i8 %1, metadata !9544, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8* %0, metadata !9543, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8 %1, metadata !9544, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9545
  br label %6, !dbg !9555

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9544, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8* %8, metadata !9543, metadata !DIExpression()), !dbg !9545
  %9 = add i8 %7, -1, !dbg !9556
  call void @llvm.dbg.value(metadata i8 %9, metadata !9544, metadata !DIExpression()), !dbg !9545
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9557
  %11 = load i8, i8* %10, align 1, !dbg !9559
  store i8 %11, i8* %8, align 1, !dbg !9560
  call void @llvm.dbg.value(metadata i8* %10, metadata !9543, metadata !DIExpression()), !dbg !9545
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %11) #26, !dbg !9561
  call void @llvm.dbg.value(metadata i8 %9, metadata !9544, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9545
  %12 = icmp eq i8 %9, 0, !dbg !9562
  br i1 %12, label %13, label %6, !dbg !9555, !llvm.loop !9563

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 32) #26, !dbg !9565
  tail call fastcc void @cursor_restore() #26, !dbg !9566
  br label %14, !dbg !9567

14:                                               ; preds = %13, %4
  ret void, !dbg !9567
}

; Function Attrs: optsize
declare !dbg !9568 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9575, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %1, metadata !9576, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %2, metadata !9577, metadata !DIExpression()), !dbg !9579
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %1) #26, !dbg !9580
  %4 = icmp eq i8 %2, 0, !dbg !9581
  br i1 %4, label %5, label %6, !dbg !9583

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9584
  br label %17, !dbg !9586

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9587
  call void @llvm.dbg.value(metadata i8 %7, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8* %0, metadata !9575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9579
  store i8 %1, i8* %0, align 1, !dbg !9588
  tail call fastcc void @cursor_save() #26, !dbg !9589
  call void @llvm.dbg.value(metadata i8 %7, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %2, metadata !9577, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8* %0, metadata !9575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %2, metadata !9577, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9579
  br label %8, !dbg !9590

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9579
  call void @llvm.dbg.value(metadata i8 %10, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %11, metadata !9577, metadata !DIExpression()), !dbg !9579
  %13 = add i8 %11, -1, !dbg !9591
  call void @llvm.dbg.value(metadata i8 %13, metadata !9577, metadata !DIExpression()), !dbg !9579
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %10) #26, !dbg !9592
  %14 = load i8, i8* %12, align 1, !dbg !9594
  call void @llvm.dbg.value(metadata i8 %14, metadata !9576, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8* %12, metadata !9575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9579
  store i8 %10, i8* %12, align 1, !dbg !9595
  call void @llvm.dbg.value(metadata i8 %14, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8* %12, metadata !9575, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %13, metadata !9577, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9579
  %15 = icmp eq i8 %13, 0, !dbg !9596
  br i1 %15, label %16, label %8, !dbg !9590, !llvm.loop !9597

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9599
  br label %17, !dbg !9600

17:                                               ; preds = %16, %5
  ret void, !dbg !9600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9601 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9602
  ret void, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9604 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9605
  ret void, !dbg !9606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !9607 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9612, metadata !DIExpression()), !dbg !9614
  call void @llvm.dbg.value(metadata i32 %0, metadata !9613, metadata !DIExpression()), !dbg !9614
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9615
  ret i32 %2, !dbg !9616
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !9617 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9619, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata i32 %0, metadata !9620, metadata !DIExpression()), !dbg !9621
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9622
  ret i32 %2, !dbg !9623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.57(i32 noundef %0) unnamed_addr #11 !dbg !9624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9626, metadata !DIExpression()), !dbg !9627
  %2 = add i32 %0, -48, !dbg !9628
  %3 = icmp ult i32 %2, 10, !dbg !9629
  %4 = zext i1 %3 to i32, !dbg !9629
  ret i32 %4, !dbg !9630
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !9631 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9633, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 4, metadata !9634, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 16, metadata !9635, metadata !DIExpression()), !dbg !9637
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9638
  call void @llvm.dbg.value(metadata i32 %1, metadata !9636, metadata !DIExpression()), !dbg !9637
  %2 = and i32 %1, 16, !dbg !9639
  %3 = icmp ne i32 %2, 0, !dbg !9640
  ret i1 %3, !dbg !9641
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9642 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9644, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 %0, metadata !9645, metadata !DIExpression()), !dbg !9647
  %2 = and i32 %0, 31, !dbg !9648
  %3 = shl nuw i32 1, %2, !dbg !9648
  call void @llvm.dbg.value(metadata i32 %3, metadata !9646, metadata !DIExpression()), !dbg !9647
  %4 = xor i32 %3, -1, !dbg !9649
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9650
  ret void, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9654, metadata !DIExpression()), !dbg !9655
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), i32 noundef %0) #25, !dbg !9656
  ret void, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9660, metadata !DIExpression()), !dbg !9661
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef %0) #25, !dbg !9662
  ret void, !dbg !9663
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !9664 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9668, metadata !DIExpression()), !dbg !9669
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9670
  ret i32 %1, !dbg !9671
}

; Function Attrs: optsize
declare !dbg !9672 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9673 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9675, metadata !DIExpression()), !dbg !9677
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9678
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9676, metadata !DIExpression()), !dbg !9677
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9679
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9679
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9681
  br i1 %4, label %7, label %5, !dbg !9682

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9683
  br label %7, !dbg !9684

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9677
  ret i32 %8, !dbg !9685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.60() unnamed_addr #1 !dbg !9686 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9688, metadata !DIExpression()), !dbg !9690
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9691
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9689, metadata !DIExpression()), !dbg !9690
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9692
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9692
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9694
  br i1 %4, label %7, label %5, !dbg !9695

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9696
  br label %7, !dbg !9697

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9690
  ret i32 %8, !dbg !9698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.61() unnamed_addr #1 !dbg !9699 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9701, metadata !DIExpression()), !dbg !9703
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9704
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9702, metadata !DIExpression()), !dbg !9703
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9705
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9705
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9707
  br i1 %4, label %6, label %5, !dbg !9708

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9709
  br label %6, !dbg !9711

6:                                                ; preds = %5, %0
  ret void, !dbg !9712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.62() unnamed_addr #1 !dbg !9713 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !9715, metadata !DIExpression()), !dbg !9717
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9718
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9716, metadata !DIExpression()), !dbg !9717
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9719
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9719
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9721
  br i1 %4, label %6, label %5, !dbg !9722

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !9723
  br label %6, !dbg !9725

6:                                                ; preds = %5, %0
  ret void, !dbg !9726
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9727 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9729, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i8 %1, metadata !9730, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %2, metadata !9731, metadata !DIExpression()), !dbg !9734
  %5 = bitcast i32* %4 to i8*, !dbg !9735
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9735
  call void @llvm.dbg.value(metadata i32* %4, metadata !9733, metadata !DIExpression(DW_OP_deref)), !dbg !9734
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %6, metadata !9732, metadata !DIExpression()), !dbg !9734
  %7 = icmp eq i32 %6, 0, !dbg !9737
  br i1 %7, label %8, label %31, !dbg !9739

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9732, metadata !DIExpression()), !dbg !9734
  %9 = and i32 %2, 131072, !dbg !9740
  %10 = icmp eq i32 %9, 0, !dbg !9742
  br i1 %10, label %28, label %11, !dbg !9743

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9744
  %13 = icmp eq i32 %12, 0, !dbg !9747
  br i1 %13, label %18, label %14, !dbg !9748

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9749
  %16 = shl nuw i32 1, %15, !dbg !9749
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9751
  br label %25, !dbg !9752

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9753
  %20 = icmp eq i32 %19, 0, !dbg !9755
  %21 = zext i8 %1 to i32, !dbg !9734
  br i1 %20, label %25, label %22, !dbg !9756

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9757
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9759
  br label %25, !dbg !9760

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9761
  %27 = load i32, i32* %4, align 4, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %30, metadata !9733, metadata !DIExpression()), !dbg !9734
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9763
  br label %31, !dbg !9764

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9761
  %30 = load i32, i32* %4, align 4, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %30, metadata !9733, metadata !DIExpression()), !dbg !9734
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9763
  call void @llvm.dbg.value(metadata i32 0, metadata !9732, metadata !DIExpression()), !dbg !9734
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9765
  ret i32 %6, !dbg !9765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32* %1, metadata !9771, metadata !DIExpression()), !dbg !9775
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9776
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9776
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9776
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9772, metadata !DIExpression()), !dbg !9775
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9777
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9777
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9774, metadata !DIExpression()), !dbg !9775
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9778
  store i32 %9, i32* %1, align 4, !dbg !9779
  ret i32 0, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9783, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i32 %1, metadata !9784, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i32 %2, metadata !9785, metadata !DIExpression()), !dbg !9789
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9790
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9790
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9790
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9786, metadata !DIExpression()), !dbg !9789
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9791
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9791
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9791
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9787, metadata !DIExpression()), !dbg !9789
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9792
  call void @llvm.dbg.value(metadata i32 %10, metadata !9788, metadata !DIExpression()), !dbg !9789
  %11 = xor i32 %1, -1, !dbg !9793
  %12 = and i32 %10, %11, !dbg !9794
  %13 = and i32 %2, %1, !dbg !9795
  %14 = or i32 %12, %13, !dbg !9796
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9797
  ret i32 0, !dbg !9798
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9799 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9801, metadata !DIExpression()), !dbg !9805
  call void @llvm.dbg.value(metadata i32 %1, metadata !9802, metadata !DIExpression()), !dbg !9805
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9806
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9806
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9806
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9803, metadata !DIExpression()), !dbg !9805
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9807
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9807
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9807
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9804, metadata !DIExpression()), !dbg !9805
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9808
  store volatile i32 %1, i32* %9, align 4, !dbg !9808
  ret i32 0, !dbg !9809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9812, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 %1, metadata !9813, metadata !DIExpression()), !dbg !9816
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9817
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9817
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9817
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9814, metadata !DIExpression()), !dbg !9816
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9818
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9818
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9818
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9815, metadata !DIExpression()), !dbg !9816
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9819
  ret i32 0, !dbg !9820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9823, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.value(metadata i32 %1, metadata !9824, metadata !DIExpression()), !dbg !9827
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9828
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9828
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9828
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9825, metadata !DIExpression()), !dbg !9827
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9829
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9829
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9829
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9826, metadata !DIExpression()), !dbg !9827
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9830
  %10 = load volatile i32, i32* %9, align 4, !dbg !9830
  %11 = xor i32 %10, %1, !dbg !9830
  store volatile i32 %11, i32* %9, align 4, !dbg !9830
  ret i32 0, !dbg !9831
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9834, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i8 %1, metadata !9835, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 %2, metadata !9836, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 %3, metadata !9837, metadata !DIExpression()), !dbg !9844
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9845
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9845
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9845
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9838, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i8* undef, metadata !9839, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 0, metadata !9841, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i32 0, metadata !9842, metadata !DIExpression()), !dbg !9844
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9846

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9847
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9851
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9852
  %12 = load i32, i32* %11, align 4, !dbg !9852
  %13 = icmp eq i32 %10, %12, !dbg !9853
  br i1 %13, label %14, label %29, !dbg !9854

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9855
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9857
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9858
  br label %29, !dbg !9859

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9860
  %17 = load i8*, i8** %16, align 4, !dbg !9860
  call void @llvm.dbg.value(metadata i8* %17, metadata !9839, metadata !DIExpression()), !dbg !9844
  %18 = zext i8 %1 to i32, !dbg !9861
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9863
  %20 = icmp eq i32 %19, 0, !dbg !9864
  br i1 %20, label %21, label %29, !dbg !9865

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9866
  %23 = load i32, i32* %22, align 4, !dbg !9866
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9867
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9868

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9841, metadata !DIExpression()), !dbg !9844
  br label %27, !dbg !9869

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9841, metadata !DIExpression()), !dbg !9844
  br label %27, !dbg !9871

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9841, metadata !DIExpression()), !dbg !9844
  br label %27, !dbg !9872

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9844
  call void @llvm.dbg.value(metadata i32 %28, metadata !9841, metadata !DIExpression()), !dbg !9844
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9873
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9874
  br label %29, !dbg !9874

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9844
  call void @llvm.dbg.value(metadata i32 %30, metadata !9842, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.label(metadata !9843), !dbg !9875
  ret i32 %30, !dbg !9876
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9879, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9880, metadata !DIExpression()), !dbg !9883
  call void @llvm.dbg.value(metadata i1 %2, metadata !9881, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9883
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9884
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9884
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9884
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9882, metadata !DIExpression()), !dbg !9883
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9885
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9886
  ret i32 %8, !dbg !9887
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9888 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9894, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9895, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i1 %2, metadata !9896, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9897
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9898
  br i1 %4, label %10, label %5, !dbg !9900

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9901
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9904
  %8 = or i1 %7, %2, !dbg !9905
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9905
  br i1 %2, label %11, label %13, !dbg !9905

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9906

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9907
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9910
  br label %13, !dbg !9911

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9897
  ret i32 %14, !dbg !9912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9917, metadata !DIExpression()), !dbg !9918
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9919
  %3 = icmp eq %struct._snode* %2, null, !dbg !9919
  ret i1 %3, !dbg !9919
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9924, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9925, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9926, metadata !DIExpression()), !dbg !9928
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9929
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9926, metadata !DIExpression()), !dbg !9928
  %4 = icmp eq %struct._snode* %3, null, !dbg !9931
  br i1 %4, label %15, label %5, !dbg !9929

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9926, metadata !DIExpression()), !dbg !9928
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9933
  br i1 %6, label %9, label %11, !dbg !9936

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9926, metadata !DIExpression()), !dbg !9928
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9933
  br i1 %8, label %9, label %11, !dbg !9936, !llvm.loop !9937

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9938
  br label %15, !dbg !9938

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9926, metadata !DIExpression()), !dbg !9928
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9931
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9927, metadata !DIExpression()), !dbg !9928
  %14 = icmp eq %struct._snode* %13, null, !dbg !9931
  br i1 %14, label %15, label %7, !dbg !9929, !llvm.loop !9937

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9941 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9945, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9946, metadata !DIExpression()), !dbg !9947
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9948
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9948
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9948
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9949
  %5 = icmp eq %struct._snode* %4, null, !dbg !9949
  br i1 %5, label %6, label %8, !dbg !9948

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9951
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9951
  br label %8, !dbg !9951

8:                                                ; preds = %6, %2
  ret void, !dbg !9948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9957, metadata !DIExpression()), !dbg !9958
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9959
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9959
  ret %struct._snode* %3, !dbg !9960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9961 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9965, metadata !DIExpression()), !dbg !9967
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9966, metadata !DIExpression()), !dbg !9967
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9968
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9969
  ret void, !dbg !9970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9973, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9974, metadata !DIExpression()), !dbg !9975
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9976
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9977
  ret void, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9979 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9981, metadata !DIExpression()), !dbg !9982
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9983
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9983
  ret %struct._snode* %3, !dbg !9984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9985 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9987, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9988, metadata !DIExpression()), !dbg !9989
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9990
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9991
  ret void, !dbg !9992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9993 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9997, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9998, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9999, metadata !DIExpression()), !dbg !10000
  %4 = icmp eq %struct._snode* %1, null, !dbg !10001
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10003
  br i1 %4, label %6, label %11, !dbg !10004

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10005
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10007
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10007
  br i1 %8, label %9, label %15, !dbg !10005

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10009
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10009
  br label %15, !dbg !10009

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10011
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10013
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10013
  br i1 %13, label %14, label %15, !dbg !10011

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10015
  br label %15, !dbg !10015

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10004
  ret void, !dbg !10004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !10017 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10021, metadata !DIExpression()), !dbg !10022
  %2 = icmp eq %struct._snode* %0, null, !dbg !10023
  br i1 %2, label %5, label %3, !dbg !10023

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10023
  br label %5, !dbg !10023

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10023
  ret %struct._snode* %6, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10026, metadata !DIExpression()), !dbg !10027
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10028
  ret %struct._snode* %2, !dbg !10028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10029 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10031, metadata !DIExpression()), !dbg !10032
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10033
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10033
  ret %struct._snode* %3, !dbg !10034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10037, metadata !DIExpression()), !dbg !10040
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10041, !range !10042
  call void @llvm.dbg.value(metadata i32 %2, metadata !10038, metadata !DIExpression()), !dbg !10040
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10043
  call void @llvm.dbg.value(metadata i32 %3, metadata !10039, metadata !DIExpression()), !dbg !10040
  ret i32 %3, !dbg !10044
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10047, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i8* %1, metadata !10048, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i8* %1, metadata !10049, metadata !DIExpression()), !dbg !10050
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10051
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10051
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10052
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10052
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10052
  %8 = shl nuw i32 1, %0, !dbg !10053
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10054
  ret void, !dbg !10055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10056 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10060, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata i32 %1, metadata !10061, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10062, metadata !DIExpression()), !dbg !10066
  %4 = bitcast i64* %3 to i8*, !dbg !10067
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10067
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10064, metadata !DIExpression()), !dbg !10066
  store i64 70368744177732, i64* %3, align 8, !dbg !10068
  call void @llvm.dbg.value(metadata i64* %3, metadata !10064, metadata !DIExpression(DW_OP_deref)), !dbg !10066
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10069
  call void @llvm.dbg.value(metadata i32 %5, metadata !10065, metadata !DIExpression()), !dbg !10066
  %6 = icmp eq i32 %5, 0, !dbg !10070
  br i1 %6, label %7, label %8, !dbg !10072

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10073
  br label %8, !dbg !10074

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10075
  ret void, !dbg !10075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10076 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata i8* %0, metadata !10079, metadata !DIExpression()), !dbg !10081
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10082
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10080, metadata !DIExpression()), !dbg !10081
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10083
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10083
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10084
  ret i32 %5, !dbg !10085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10088, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i32 %1, metadata !10089, metadata !DIExpression()), !dbg !10091
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10092
  call void @llvm.dbg.value(metadata i32 %3, metadata !10090, metadata !DIExpression()), !dbg !10091
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10093
  ret void, !dbg !10094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10099, metadata !DIExpression()), !dbg !10100
  %2 = sdiv i32 %0, 4, !dbg !10101
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10102
  %6 = add nsw i32 %5, 16, !dbg !10103
  %7 = shl i32 15, %6, !dbg !10104
  %8 = or i32 %7, %2, !dbg !10105
  ret i32 %8, !dbg !10106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10111, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %1, metadata !10112, metadata !DIExpression()), !dbg !10113
  %3 = and i32 %1, 255, !dbg !10114
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10114
  %5 = load volatile i32, i32* %4, align 4, !dbg !10114
  %6 = lshr i32 %1, 16, !dbg !10114
  %7 = xor i32 %6, -1, !dbg !10114
  %8 = and i32 %5, %7, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %6, metadata !10115, metadata !DIExpression()) #24, !dbg !10119
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10121, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %9, metadata !10118, metadata !DIExpression()) #24, !dbg !10119
  call void @llvm.dbg.value(metadata i32 %9, metadata !10123, metadata !DIExpression()) #24, !dbg !10128
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10130, !range !3866
  %11 = shl i32 %0, %10, !dbg !10114
  %12 = or i32 %11, %8, !dbg !10114
  store volatile i32 %12, i32* %4, align 4, !dbg !10114
  ret void, !dbg !10131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10132 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10136, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10137, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i32 %2, metadata !10138, metadata !DIExpression()), !dbg !10141
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10142
  %5 = icmp eq %struct._snode* %4, null, !dbg !10142
  br i1 %5, label %21, label %6, !dbg !10142

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10144
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10140, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10139, metadata !DIExpression()), !dbg !10141
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10145
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10145
  %11 = load i32, i32* %10, align 4, !dbg !10145
  %12 = and i32 %11, %2, !dbg !10149
  %13 = icmp eq i32 %12, 0, !dbg !10149
  br i1 %13, label %19, label %14, !dbg !10150

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10139, metadata !DIExpression()), !dbg !10141
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10151
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10151
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10151
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10153
  br label %19, !dbg !10154

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10139, metadata !DIExpression()), !dbg !10141
  %20 = icmp eq %struct._snode* %8, null, !dbg !10155
  br i1 %20, label %21, label %6, !dbg !10155

21:                                               ; preds = %19, %3
  ret void, !dbg !10156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10159, metadata !DIExpression()), !dbg !10160
  %2 = and i32 %0, 255, !dbg !10161
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10161
  %4 = load volatile i32, i32* %3, align 4, !dbg !10161
  %5 = lshr i32 %0, 16, !dbg !10161
  %6 = and i32 %4, %5, !dbg !10161
  call void @llvm.dbg.value(metadata i32 %5, metadata !10115, metadata !DIExpression()) #24, !dbg !10162
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10164, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %7, metadata !10118, metadata !DIExpression()) #24, !dbg !10162
  call void @llvm.dbg.value(metadata i32 %7, metadata !10123, metadata !DIExpression()) #24, !dbg !10165
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10167, !range !3866
  %9 = lshr i32 %6, %8, !dbg !10168
  ret i32 %9, !dbg !10169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10170 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10175, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i32 %1, metadata !10176, metadata !DIExpression()), !dbg !10177
  %3 = shl i32 %1, 16, !dbg !10178
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10178
  store volatile i32 %3, i32* %4, align 4, !dbg !10178
  ret void, !dbg !10179
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10180 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10186
  %3 = load volatile i32, i32* %2, align 4, !dbg !10186
  ret i32 %3, !dbg !10187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10188 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10190, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata i32 %1, metadata !10191, metadata !DIExpression()), !dbg !10192
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10193
  store volatile i32 %1, i32* %3, align 4, !dbg !10193
  ret void, !dbg !10194
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10195 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10197, metadata !DIExpression()), !dbg !10198
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10199
  %3 = load volatile i32, i32* %2, align 4, !dbg !10199
  ret i32 %3, !dbg !10200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10205, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata i32* %1, metadata !10206, metadata !DIExpression()), !dbg !10207
  %3 = and i32 %0, 131072, !dbg !10208
  %4 = icmp eq i32 %3, 0, !dbg !10210
  br i1 %4, label %22, label %5, !dbg !10211

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10212
  %6 = and i32 %0, 2, !dbg !10214
  %7 = icmp eq i32 %6, 0, !dbg !10216
  br i1 %7, label %11, label %8, !dbg !10217

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10218
  %10 = icmp eq i32 %9, 0, !dbg !10218
  br i1 %10, label %33, label %11, !dbg !10221

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10222
  store i32 %12, i32* %1, align 4, !dbg !10222
  %13 = and i32 %0, 16, !dbg !10223
  %14 = icmp eq i32 %13, 0, !dbg !10225
  br i1 %14, label %17, label %15, !dbg !10226

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10227
  br label %31, !dbg !10229

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10230
  %19 = icmp eq i32 %18, 0, !dbg !10232
  br i1 %19, label %33, label %20, !dbg !10233

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10234
  br label %31, !dbg !10236

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10237
  %24 = icmp eq i32 %23, 0, !dbg !10239
  br i1 %24, label %31, label %25, !dbg !10240

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10241
  %27 = icmp eq i32 %26, 0, !dbg !10244
  br i1 %27, label %28, label %31, !dbg !10245

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10246
  br label %33, !dbg !10247

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10207
  ret i32 %34, !dbg !10247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10248 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10252, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %1, metadata !10253, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10254, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %3, metadata !10255, metadata !DIExpression()), !dbg !10263
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10264
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10264
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10264
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10256, metadata !DIExpression()), !dbg !10263
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10265
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10265
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10265
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10257, metadata !DIExpression()), !dbg !10263
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10266
  call void @llvm.dbg.value(metadata i32 %11, metadata !10258, metadata !DIExpression()), !dbg !10263
  %12 = and i32 %2, 48, !dbg !10267
  call void @llvm.dbg.value(metadata i32 %12, metadata !10259, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10260, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10261, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10262, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10263
  %13 = lshr i32 %2, 6, !dbg !10268
  %14 = and i32 %13, 1, !dbg !10268
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10269
  %15 = lshr i32 %2, 7, !dbg !10270
  %16 = and i32 %15, 3, !dbg !10270
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10271
  %17 = lshr i32 %2, 9, !dbg !10272
  %18 = and i32 %17, 3, !dbg !10272
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10273
  %19 = icmp eq i32 %12, 32, !dbg !10274
  br i1 %19, label %20, label %24, !dbg !10276

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10277
  br i1 %21, label %22, label %23, !dbg !10280

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10281
  br label %24, !dbg !10283

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10284
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10286
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10287
  ret void, !dbg !10288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10291, metadata !DIExpression()), !dbg !10293
  %2 = shl nuw i32 1, %0, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %2, metadata !10292, metadata !DIExpression()), !dbg !10293
  ret i32 %2, !dbg !10295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10296 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10300, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %1, metadata !10301, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %2, metadata !10302, metadata !DIExpression()), !dbg !10303
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10304
  %5 = load volatile i32, i32* %4, align 4, !dbg !10304
  %6 = xor i32 %1, -1, !dbg !10304
  %7 = and i32 %5, %6, !dbg !10304
  %8 = mul i32 %2, %1, !dbg !10304
  %9 = or i32 %7, %8, !dbg !10304
  store volatile i32 %9, i32* %4, align 4, !dbg !10304
  ret void, !dbg !10305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10306 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10308, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %1, metadata !10309, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %2, metadata !10310, metadata !DIExpression()), !dbg !10311
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10312
  %5 = load volatile i32, i32* %4, align 4, !dbg !10312
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10313
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10315, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10316
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10318, !range !3866
  %8 = shl nuw nsw i32 %7, 1, !dbg !10312
  %9 = shl i32 3, %8, !dbg !10312
  %10 = xor i32 %9, -1, !dbg !10312
  %11 = and i32 %5, %10, !dbg !10312
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10321
  %12 = shl i32 %2, %8, !dbg !10312
  %13 = or i32 %11, %12, !dbg !10312
  store volatile i32 %13, i32* %4, align 4, !dbg !10312
  ret void, !dbg !10323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10324 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10326, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 %1, metadata !10327, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 %2, metadata !10328, metadata !DIExpression()), !dbg !10329
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10330
  %5 = load volatile i32, i32* %4, align 4, !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10331
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10333, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10334
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10336, !range !3866
  %8 = shl nuw nsw i32 %7, 1, !dbg !10330
  %9 = shl i32 3, %8, !dbg !10330
  %10 = xor i32 %9, -1, !dbg !10330
  %11 = and i32 %5, %10, !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10339
  %12 = shl i32 %2, %8, !dbg !10330
  %13 = or i32 %11, %12, !dbg !10330
  store volatile i32 %13, i32* %4, align 4, !dbg !10330
  ret void, !dbg !10341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10342 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10344, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.value(metadata i32 %1, metadata !10345, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.value(metadata i32 %2, metadata !10346, metadata !DIExpression()), !dbg !10347
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10348
  %5 = load volatile i32, i32* %4, align 4, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10349
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10351, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10352
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10354, !range !3866
  %8 = shl nuw nsw i32 %7, 2, !dbg !10348
  %9 = shl i32 15, %8, !dbg !10348
  %10 = xor i32 %9, -1, !dbg !10348
  %11 = and i32 %5, %10, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10357
  %12 = shl i32 %2, %8, !dbg !10348
  %13 = or i32 %11, %12, !dbg !10348
  store volatile i32 %13, i32* %4, align 4, !dbg !10348
  ret void, !dbg !10359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10360 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10362, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %1, metadata !10363, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %2, metadata !10364, metadata !DIExpression()), !dbg !10365
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10366
  %5 = load volatile i32, i32* %4, align 4, !dbg !10366
  %6 = lshr i32 %1, 8, !dbg !10366
  call void @llvm.dbg.value(metadata i32 %6, metadata !10115, metadata !DIExpression()) #24, !dbg !10367
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10369, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %7, metadata !10118, metadata !DIExpression()) #24, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %7, metadata !10123, metadata !DIExpression()) #24, !dbg !10370
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10372, !range !3866
  %9 = shl nuw nsw i32 %8, 2, !dbg !10366
  %10 = shl i32 15, %9, !dbg !10366
  %11 = xor i32 %10, -1, !dbg !10366
  %12 = and i32 %5, %11, !dbg !10366
  call void @llvm.dbg.value(metadata i32 %6, metadata !10115, metadata !DIExpression()) #24, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %7, metadata !10118, metadata !DIExpression()) #24, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %7, metadata !10123, metadata !DIExpression()) #24, !dbg !10375
  %13 = shl i32 %2, %9, !dbg !10366
  %14 = or i32 %12, %13, !dbg !10366
  store volatile i32 %14, i32* %4, align 4, !dbg !10366
  ret void, !dbg !10377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10378 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10380, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 %1, metadata !10381, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 %2, metadata !10382, metadata !DIExpression()), !dbg !10383
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10384
  %5 = load volatile i32, i32* %4, align 4, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10385
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10387, !srcloc !10122
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10388
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10390, !range !3866
  %8 = shl nuw nsw i32 %7, 1, !dbg !10384
  %9 = shl i32 3, %8, !dbg !10384
  %10 = xor i32 %9, -1, !dbg !10384
  %11 = and i32 %5, %10, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10115, metadata !DIExpression()) #24, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %6, metadata !10118, metadata !DIExpression()) #24, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %6, metadata !10123, metadata !DIExpression()) #24, !dbg !10393
  %12 = shl i32 %2, %8, !dbg !10384
  %13 = or i32 %11, %12, !dbg !10384
  store volatile i32 %13, i32* %4, align 4, !dbg !10384
  ret void, !dbg !10395
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10398, metadata !DIExpression()), !dbg !10401
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10402
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10402
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10402
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10399, metadata !DIExpression()), !dbg !10401
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10403
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10404
  %6 = tail call fastcc zeroext i1 @device_is_ready.69() #26, !dbg !10405
  br i1 %6, label %7, label %11, !dbg !10407

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10408
  call void @llvm.dbg.value(metadata i32 %8, metadata !10400, metadata !DIExpression()), !dbg !10401
  %9 = icmp slt i32 %8, 0, !dbg !10409
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10411
  br label %11, !dbg !10411

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10401
  ret i32 %12, !dbg !10412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.69() unnamed_addr #1 !dbg !10413 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10417, metadata !DIExpression()), !dbg !10418
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10419, !srcloc !10421
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.70() #26, !dbg !10422
  ret i1 %1, !dbg !10423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10428, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i8 1, metadata !10429, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10430, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 0, metadata !10431, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10432, metadata !DIExpression()), !dbg !10433
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10434
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10434
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10430, metadata !DIExpression()), !dbg !10433
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10435
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10438
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %7, metadata !10431, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 %7, metadata !10431, metadata !DIExpression()), !dbg !10433
  ret i32 %7, !dbg !10440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.70() unnamed_addr #1 !dbg !10441 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10443, metadata !DIExpression()), !dbg !10444
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10445
  ret i1 %1, !dbg !10446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10451, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %1, metadata !10452, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %2, metadata !10453, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %3, metadata !10454, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 0, metadata !10455, metadata !DIExpression()), !dbg !10459
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10460
  %5 = icmp eq i32 %3, 17, !dbg !10461
  br i1 %5, label %6, label %14, !dbg !10462

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %7, metadata !10456, metadata !DIExpression()), !dbg !10464
  %8 = icmp eq i32 %7, 0, !dbg !10465
  %9 = shl nuw i32 1, %1, !dbg !10467
  br i1 %8, label %12, label %10, !dbg !10468

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10469
  br label %14, !dbg !10471

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10472
  br label %14, !dbg !10475

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10476
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !10477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10479, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata i8* %1, metadata !10480, metadata !DIExpression()), !dbg !10483
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10484
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10484
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10484
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10481, metadata !DIExpression()), !dbg !10483
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10485
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10485
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10487
  %9 = icmp eq i32 %8, 0, !dbg !10487
  br i1 %9, label %12, label %10, !dbg !10488

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10489
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10491
  br label %12, !dbg !10492

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10493
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10495
  %15 = icmp eq i32 %14, 0, !dbg !10495
  br i1 %15, label %19, label %16, !dbg !10496

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10497
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10498
  store i8 %18, i8* %1, align 1, !dbg !10499
  br label %19, !dbg !10500

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10483
  ret i32 %20, !dbg !10501
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10504, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i8 %1, metadata !10505, metadata !DIExpression()), !dbg !10508
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10509
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10509
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10506, metadata !DIExpression()), !dbg !10508
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10510

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10511
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10514
  %10 = icmp eq i32 %9, 0, !dbg !10514
  br i1 %10, label %18, label %11, !dbg !10515

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10516, !srcloc !10523
  call void @llvm.dbg.value(metadata i32 undef, metadata !10519, metadata !DIExpression()) #24, !dbg !10524
  call void @llvm.dbg.value(metadata i32 undef, metadata !10520, metadata !DIExpression()) #24, !dbg !10524
  call void @llvm.dbg.value(metadata i32 undef, metadata !10507, metadata !DIExpression()), !dbg !10508
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10525
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10527
  %15 = icmp eq i32 %14, 0, !dbg !10527
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10516
  br i1 %15, label %17, label %19, !dbg !10528

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10519, metadata !DIExpression()) #24, !dbg !10524
  call void @llvm.dbg.value(metadata i32 %16, metadata !10507, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 undef, metadata !10529, metadata !DIExpression()) #24, !dbg !10532
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10534, !srcloc !10535
  br label %18, !dbg !10536

18:                                               ; preds = %17, %7
  br label %7, !dbg !10511, !llvm.loop !10537

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10516
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10539
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %20, metadata !10529, metadata !DIExpression()) #24, !dbg !10541
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10543, !srcloc !10535
  ret void, !dbg !10544
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !10545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10547, metadata !DIExpression()), !dbg !10550
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10551
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10551
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10551
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10548, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata i32 0, metadata !10549, metadata !DIExpression()), !dbg !10550
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10552
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10552
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10554
  %8 = icmp ne i32 %7, 0, !dbg !10554
  %9 = zext i1 %8 to i32, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %9, metadata !10549, metadata !DIExpression()), !dbg !10550
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10556
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10558
  %12 = icmp eq i32 %11, 0, !dbg !10558
  %13 = or i32 %9, 2, !dbg !10559
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %14, metadata !10549, metadata !DIExpression()), !dbg !10550
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10560
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10562
  %17 = icmp eq i32 %16, 0, !dbg !10562
  %18 = or i32 %14, 4, !dbg !10563
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %19, metadata !10549, metadata !DIExpression()), !dbg !10550
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10564
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10566
  %22 = icmp eq i32 %21, 0, !dbg !10566
  %23 = or i32 %19, 8, !dbg !10567
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10567
  call void @llvm.dbg.value(metadata i32 %24, metadata !10549, metadata !DIExpression()), !dbg !10550
  %25 = and i32 %24, 8, !dbg !10568
  %26 = icmp eq i32 %25, 0, !dbg !10568
  br i1 %26, label %29, label %27, !dbg !10570

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10571
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10573
  br label %29, !dbg !10574

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10575
  %31 = icmp eq i32 %30, 0, !dbg !10575
  br i1 %31, label %34, label %32, !dbg !10577

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10578
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10580
  br label %34, !dbg !10581

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10582
  %36 = icmp eq i32 %35, 0, !dbg !10582
  br i1 %36, label %39, label %37, !dbg !10584

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10585
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10587
  br label %39, !dbg !10588

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10589
  %41 = icmp eq i32 %40, 0, !dbg !10589
  br i1 %41, label %44, label %42, !dbg !10591

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10592
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10594
  br label %44, !dbg !10595

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10596
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10597
  ret i32 %24, !dbg !10598
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10601, metadata !DIExpression()), !dbg !10610
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10602, metadata !DIExpression()), !dbg !10610
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10611
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10611
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10611
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10603, metadata !DIExpression()), !dbg !10610
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10612
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10612
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10612
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10604, metadata !DIExpression()), !dbg !10610
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10613
  %10 = load i8, i8* %9, align 4, !dbg !10613
  %11 = zext i8 %10 to i32, !dbg !10614
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10615
  call void @llvm.dbg.value(metadata i32 %12, metadata !10606, metadata !DIExpression()), !dbg !10610
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10616
  %14 = load i8, i8* %13, align 1, !dbg !10616
  %15 = zext i8 %14 to i32, !dbg !10617
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10618
  call void @llvm.dbg.value(metadata i32 %16, metadata !10607, metadata !DIExpression()), !dbg !10610
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10619
  %18 = load i8, i8* %17, align 2, !dbg !10619
  %19 = zext i8 %18 to i32, !dbg !10620
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10621
  call void @llvm.dbg.value(metadata i32 %20, metadata !10608, metadata !DIExpression()), !dbg !10610
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10622
  %22 = load i8, i8* %21, align 1, !dbg !10622
  %23 = zext i8 %22 to i32, !dbg !10623
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %24, metadata !10609, metadata !DIExpression()), !dbg !10610
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10625

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10627
  br i1 %26, label %69, label %27, !dbg !10629

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10630

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10631
  br i1 %29, label %65, label %30, !dbg !10631

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10633
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10610
  br i1 %31, label %38, label %34, !dbg !10635

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10636
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10636

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10639
  br i1 %37, label %38, label %69, !dbg !10640

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10641
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10642
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10643
  %41 = icmp eq i32 %12, %40, !dbg !10645
  br i1 %41, label %43, label %42, !dbg !10646

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10647
  br label %43, !dbg !10649

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10650
  %45 = icmp eq i32 %16, %44, !dbg !10652
  br i1 %45, label %47, label %46, !dbg !10653

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10654
  br label %47, !dbg !10656

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10657
  %49 = icmp eq i32 %20, %48, !dbg !10659
  br i1 %49, label %51, label %50, !dbg !10660

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10661
  br label %51, !dbg !10663

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10664
  %53 = icmp eq i32 %24, %52, !dbg !10666
  br i1 %53, label %55, label %54, !dbg !10667

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10668
  br label %55, !dbg !10670

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10671
  %57 = load i32, i32* %56, align 4, !dbg !10671
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10673
  %59 = load i32, i32* %58, align 4, !dbg !10673
  %60 = icmp eq i32 %57, %59, !dbg !10674
  br i1 %60, label %63, label %61, !dbg !10675

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10676
  %62 = load i32, i32* %56, align 4, !dbg !10678
  store i32 %62, i32* %58, align 4, !dbg !10679
  br label %63, !dbg !10680

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10681
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10682
  br label %69, !dbg !10683

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10631
  %67 = and i8 %66, 1, !dbg !10631
  %68 = icmp eq i8 %67, 0, !dbg !10631
  br i1 %68, label %30, label %69, !dbg !10631

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10610
  ret i32 %70, !dbg !10684
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10685 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10687, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10688, metadata !DIExpression()), !dbg !10690
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10691
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10691
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10691
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10689, metadata !DIExpression()), !dbg !10690
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10692
  %7 = load i32, i32* %6, align 4, !dbg !10692
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10693
  store i32 %7, i32* %8, align 4, !dbg !10694
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10695, !range !10696
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10697
  %11 = trunc i32 %10 to i8, !dbg !10697
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10698
  store i8 %11, i8* %12, align 4, !dbg !10699
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10700, !range !10701
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10702
  %15 = trunc i32 %14 to i8, !dbg !10702
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10703
  store i8 %15, i8* %16, align 1, !dbg !10704
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10705
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10706, !range !10696
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10707
  %20 = trunc i32 %19 to i8, !dbg !10707
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10708
  store i8 %20, i8* %21, align 2, !dbg !10709
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10710, !range !10711
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10712
  %24 = trunc i32 %23 to i8, !dbg !10712
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10713
  store i8 %24, i8* %25, align 1, !dbg !10714
  ret i32 0, !dbg !10715
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10716 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10718, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i8* %1, metadata !10719, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 %2, metadata !10720, metadata !DIExpression()), !dbg !10724
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10725
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10725
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10725
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10721, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i8 0, metadata !10722, metadata !DIExpression()), !dbg !10724
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10726
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10726
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10728
  %10 = icmp eq i32 %9, 0, !dbg !10728
  br i1 %10, label %30, label %11, !dbg !10729

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10730, !srcloc !10523
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %13, metadata !10519, metadata !DIExpression()) #24, !dbg !10732
  call void @llvm.dbg.value(metadata i32 undef, metadata !10520, metadata !DIExpression()) #24, !dbg !10732
  call void @llvm.dbg.value(metadata i32 %13, metadata !10723, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i8 0, metadata !10722, metadata !DIExpression()), !dbg !10724
  %14 = icmp sgt i32 %2, 0, !dbg !10733
  br i1 %14, label %15, label %28, !dbg !10734

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10722, metadata !DIExpression()), !dbg !10724
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10735
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10736
  %20 = icmp eq i32 %19, 0, !dbg !10734
  br i1 %20, label %28, label %21, !dbg !10737

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10738
  %23 = add i8 %17, 1, !dbg !10740
  call void @llvm.dbg.value(metadata i8 %23, metadata !10722, metadata !DIExpression()), !dbg !10724
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10741
  %25 = load i8, i8* %24, align 1, !dbg !10741
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10742
  %26 = zext i8 %23 to i32, !dbg !10743
  %27 = icmp slt i32 %26, %2, !dbg !10733
  br i1 %27, label %15, label %28, !dbg !10734, !llvm.loop !10744

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10743
  call void @llvm.dbg.value(metadata i32 %13, metadata !10529, metadata !DIExpression()) #24, !dbg !10746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10748, !srcloc !10535
  br label %30, !dbg !10749

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10724
  ret i32 %31, !dbg !10750
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !10751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10753, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i8* %1, metadata !10754, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 %2, metadata !10755, metadata !DIExpression()), !dbg !10758
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10759
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10759
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10759
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10756, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i8 0, metadata !10757, metadata !DIExpression()), !dbg !10758
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10760
  call void @llvm.dbg.value(metadata i8 0, metadata !10757, metadata !DIExpression()), !dbg !10758
  %8 = icmp sgt i32 %2, 0, !dbg !10761
  br i1 %8, label %9, label %28, !dbg !10762

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10757, metadata !DIExpression()), !dbg !10758
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10760
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10763
  %14 = icmp eq i32 %13, 0, !dbg !10762
  br i1 %14, label %28, label %15, !dbg !10764

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10765
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10767
  %18 = add i8 %11, 1, !dbg !10768
  call void @llvm.dbg.value(metadata i8 %18, metadata !10757, metadata !DIExpression()), !dbg !10758
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10769
  store i8 %17, i8* %19, align 1, !dbg !10770
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10771
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10773
  %22 = icmp eq i32 %21, 0, !dbg !10773
  br i1 %22, label %25, label %23, !dbg !10774

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10775
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10777
  br label %25, !dbg !10778

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10757, metadata !DIExpression()), !dbg !10758
  %26 = zext i8 %18 to i32, !dbg !10779
  %27 = icmp slt i32 %26, %2, !dbg !10761
  br i1 %27, label %9, label %28, !dbg !10762, !llvm.loop !10780

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10779
  ret i32 %29, !dbg !10782
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10785, metadata !DIExpression()), !dbg !10787
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10788
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10788
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10788
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10786, metadata !DIExpression()), !dbg !10787
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10789
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10789
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10790
  ret void, !dbg !10791
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10794, metadata !DIExpression()), !dbg !10796
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10797
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10797
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10797
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10795, metadata !DIExpression()), !dbg !10796
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10798
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10798
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10799
  ret void, !dbg !10800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10803, metadata !DIExpression()), !dbg !10805
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10806
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10806
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10806
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10804, metadata !DIExpression()), !dbg !10805
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10807
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10807
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10808
  %8 = icmp eq i32 %7, 0, !dbg !10808
  br i1 %8, label %14, label %9, !dbg !10809

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10810
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10811
  %12 = icmp ne i32 %11, 0, !dbg !10809
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10812
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10815, metadata !DIExpression()), !dbg !10817
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10818
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10818
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10818
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10816, metadata !DIExpression()), !dbg !10817
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10819
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10819
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10820
  ret void, !dbg !10821
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10822 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10824, metadata !DIExpression()), !dbg !10826
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10827
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10827
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10827
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10825, metadata !DIExpression()), !dbg !10826
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10828
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10828
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10829
  ret void, !dbg !10830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10833, metadata !DIExpression()), !dbg !10835
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10836
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10836
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10836
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10834, metadata !DIExpression()), !dbg !10835
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10837
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10837
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10838
  ret i32 %7, !dbg !10839
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10840 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10842, metadata !DIExpression()), !dbg !10844
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10845
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10845
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10845
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10843, metadata !DIExpression()), !dbg !10844
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10846
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10846
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10847
  ret i32 %7, !dbg !10848
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10849 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10851, metadata !DIExpression()), !dbg !10853
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10854
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10854
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10854
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10852, metadata !DIExpression()), !dbg !10853
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10855
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10855
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10856
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10857
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10857
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073812480, label %9
  ], !dbg !10857

9:                                                ; preds = %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10859
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10861
  br label %11, !dbg !10862

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10861
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10863
  ret void, !dbg !10864
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10867, metadata !DIExpression()), !dbg !10869
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10870
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10870
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10870
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10868, metadata !DIExpression()), !dbg !10869
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10871
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10871
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10872
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10873
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10873
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073812480, label %9
  ], !dbg !10873

9:                                                ; preds = %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10875
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10877
  br label %11, !dbg !10878

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10877
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10879
  ret void, !dbg !10880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10881 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10883, metadata !DIExpression()), !dbg !10885
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10886
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10886
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10886
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10884, metadata !DIExpression()), !dbg !10885
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10887
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10887
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10888
  %8 = icmp eq i32 %7, 0, !dbg !10888
  br i1 %8, label %13, label %9, !dbg !10889

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10890
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10891
  %12 = icmp eq i32 %11, 0, !dbg !10891
  br i1 %12, label %13, label %22, !dbg !10892

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10893
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10894
  %16 = icmp eq i32 %15, 0, !dbg !10894
  br i1 %16, label %22, label %17, !dbg !10895

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10896
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10897
  %20 = icmp ne i32 %19, 0, !dbg !10895
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10899 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10901, metadata !DIExpression()), !dbg !10902
  ret i32 1, !dbg !10903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10906, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10907, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i8* %2, metadata !10908, metadata !DIExpression()), !dbg !10910
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10911
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10911
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10911
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10909, metadata !DIExpression()), !dbg !10910
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10912
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10913
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10914
  store i8* %2, i8** %8, align 4, !dbg !10915
  ret void, !dbg !10916
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10917 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10922, metadata !DIExpression()), !dbg !10923
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10924
  %3 = load volatile i32, i32* %2, align 4, !dbg !10924
  %4 = lshr i32 %3, 5, !dbg !10925
  %5 = and i32 %4, 1, !dbg !10925
  ret i32 %5, !dbg !10926
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10927 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10929, metadata !DIExpression()), !dbg !10930
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10931
  %3 = load volatile i32, i32* %2, align 4, !dbg !10931
  %4 = lshr i32 %3, 5, !dbg !10932
  %5 = and i32 %4, 1, !dbg !10932
  ret i32 %5, !dbg !10933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10934 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10938
  %3 = load volatile i32, i32* %2, align 4, !dbg !10938
  %4 = lshr i32 %3, 6, !dbg !10939
  %5 = and i32 %4, 1, !dbg !10939
  ret i32 %5, !dbg !10940
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10941 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10943, metadata !DIExpression()), !dbg !10944
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10945
  %3 = load volatile i32, i32* %2, align 4, !dbg !10945
  %4 = lshr i32 %3, 6, !dbg !10946
  %5 = and i32 %4, 1, !dbg !10946
  ret i32 %5, !dbg !10947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10948 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10952, metadata !DIExpression()), !dbg !10955
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10956

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !10963
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10966, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !10963
  %5 = and i32 %4, -2, !dbg !10968
  call void @llvm.dbg.value(metadata i32 %5, metadata !10953, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !10977
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !10977
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10979, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !10977
  %7 = icmp eq i32 %6, 0, !dbg !10956
  br i1 %7, label %8, label %3, !dbg !10968, !llvm.loop !10981

8:                                                ; preds = %3
  ret void, !dbg !10982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10985, metadata !DIExpression()), !dbg !10986
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10987
  %3 = load volatile i32, i32* %2, align 4, !dbg !10987
  %4 = and i32 %3, -65, !dbg !10987
  store volatile i32 %4, i32* %2, align 4, !dbg !10987
  ret void, !dbg !10988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10989 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10991, metadata !DIExpression()), !dbg !10994
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10995

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !10996
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10999, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !10996
  %5 = and i32 %4, -257, !dbg !11000
  call void @llvm.dbg.value(metadata i32 %5, metadata !10992, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11002
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11002
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11004, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11002
  %7 = icmp eq i32 %6, 0, !dbg !10995
  br i1 %7, label %8, label %3, !dbg !11000, !llvm.loop !11005

8:                                                ; preds = %3
  ret void, !dbg !11006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11007 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11009, metadata !DIExpression()), !dbg !11012
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !11013

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11014
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11017, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11014
  %5 = or i32 %4, 1, !dbg !11018
  call void @llvm.dbg.value(metadata i32 %5, metadata !11010, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11020
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11020
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11022, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11020
  %7 = icmp eq i32 %6, 0, !dbg !11013
  br i1 %7, label %8, label %3, !dbg !11018, !llvm.loop !11023

8:                                                ; preds = %3
  ret void, !dbg !11024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11027, metadata !DIExpression()), !dbg !11028
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11029
  %3 = load volatile i32, i32* %2, align 4, !dbg !11029
  %4 = or i32 %3, 64, !dbg !11029
  store volatile i32 %4, i32* %2, align 4, !dbg !11029
  ret void, !dbg !11030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11033, metadata !DIExpression()), !dbg !11036
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11037

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11038
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11041, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11038
  %5 = or i32 %4, 256, !dbg !11042
  call void @llvm.dbg.value(metadata i32 %5, metadata !11034, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11044
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11044
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11046, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11044
  %7 = icmp eq i32 %6, 0, !dbg !11037
  br i1 %7, label %8, label %3, !dbg !11042, !llvm.loop !11047

8:                                                ; preds = %3
  ret void, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11049 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11051, metadata !DIExpression()), !dbg !11054
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11055

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11056
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11059, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11056
  %5 = and i32 %4, -33, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %5, metadata !11052, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11062
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11062
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11064, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11062
  %7 = icmp eq i32 %6, 0, !dbg !11055
  br i1 %7, label %8, label %3, !dbg !11060, !llvm.loop !11065

8:                                                ; preds = %3
  ret void, !dbg !11066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11067 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11069, metadata !DIExpression()), !dbg !11072
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11073

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11074
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11077, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11074
  %5 = or i32 %4, 32, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %5, metadata !11070, metadata !DIExpression()), !dbg !11079
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11080
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11080
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11082, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11080
  %7 = icmp eq i32 %6, 0, !dbg !11073
  br i1 %7, label %8, label %3, !dbg !11078, !llvm.loop !11083

8:                                                ; preds = %3
  ret void, !dbg !11084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11085 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11087, metadata !DIExpression()), !dbg !11088
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11089
  %3 = load volatile i32, i32* %2, align 4, !dbg !11089
  %4 = lshr i32 %3, 7, !dbg !11090
  %5 = and i32 %4, 1, !dbg !11090
  ret i32 %5, !dbg !11091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11092 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11094, metadata !DIExpression()), !dbg !11097
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11098

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11099
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11102, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11099
  %5 = and i32 %4, -65, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %5, metadata !11095, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11105
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11105
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11107, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11105
  %7 = icmp eq i32 %6, 0, !dbg !11098
  br i1 %7, label %8, label %3, !dbg !11103, !llvm.loop !11108

8:                                                ; preds = %3
  ret void, !dbg !11109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11110 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11112, metadata !DIExpression()), !dbg !11115
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11116

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11117
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11120, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11117
  %5 = or i32 %4, 64, !dbg !11121
  call void @llvm.dbg.value(metadata i32 %5, metadata !11113, metadata !DIExpression()), !dbg !11122
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11123
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11123
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11125, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11123
  %7 = icmp eq i32 %6, 0, !dbg !11116
  br i1 %7, label %8, label %3, !dbg !11121, !llvm.loop !11126

8:                                                ; preds = %3
  ret void, !dbg !11127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11128 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11132, metadata !DIExpression()), !dbg !11133
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11134
  %3 = load volatile i32, i32* %2, align 4, !dbg !11134
  %4 = trunc i32 %3 to i8, !dbg !11135
  ret i8 %4, !dbg !11136
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11137 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11139, metadata !DIExpression()), !dbg !11140
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11141
  %3 = load volatile i32, i32* %2, align 4, !dbg !11141
  %4 = lshr i32 %3, 3, !dbg !11142
  %5 = and i32 %4, 1, !dbg !11142
  ret i32 %5, !dbg !11143
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11144 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11146, metadata !DIExpression()), !dbg !11148
  %3 = bitcast i32* %2 to i8*, !dbg !11149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11149
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11147, metadata !DIExpression()), !dbg !11150
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11151
  %5 = load volatile i32, i32* %4, align 4, !dbg !11151
  store volatile i32 %5, i32* %2, align 4, !dbg !11152
  %6 = load volatile i32, i32* %2, align 4, !dbg !11153
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11154
  %8 = load volatile i32, i32* %7, align 4, !dbg !11154
  store volatile i32 %8, i32* %2, align 4, !dbg !11155
  %9 = load volatile i32, i32* %2, align 4, !dbg !11156
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11157
  ret void, !dbg !11157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11158 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11162, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.value(metadata i8 %1, metadata !11163, metadata !DIExpression()), !dbg !11164
  %3 = zext i8 %1 to i32, !dbg !11165
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11166
  store volatile i32 %3, i32* %4, align 4, !dbg !11167
  ret void, !dbg !11168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11169 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11173, metadata !DIExpression()), !dbg !11175
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11176
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11176
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11176
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11174, metadata !DIExpression()), !dbg !11175
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11177
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11177
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11178
  ret i32 %7, !dbg !11179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11184, metadata !DIExpression()), !dbg !11185
  %2 = icmp eq i32 %0, 1024, !dbg !11186
  %3 = select i1 %2, i32 2, i32 0, !dbg !11186
  %4 = icmp eq i32 %0, 1536, !dbg !11186
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11186
  ret i32 %5, !dbg !11187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11190, metadata !DIExpression()), !dbg !11192
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11193
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11193
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11193
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11191, metadata !DIExpression()), !dbg !11192
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11194
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11194
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11195
  ret i32 %7, !dbg !11196
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11201, metadata !DIExpression()), !dbg !11202
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11203
  %3 = icmp ult i32 %2, 4, !dbg !11203
  br i1 %3, label %4, label %7, !dbg !11203

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11203
  %6 = load i32, i32* %5, align 4, !dbg !11203
  br label %7, !dbg !11203

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11204
  ret i32 %8, !dbg !11206
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11209, metadata !DIExpression()), !dbg !11211
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11212
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11212
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11210, metadata !DIExpression()), !dbg !11211
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11213
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11213
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11214
  ret i32 %7, !dbg !11215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11220, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.value(metadata i32 %1, metadata !11221, metadata !DIExpression()), !dbg !11222
  %3 = icmp eq i32 %0, 4096, !dbg !11223
  %4 = icmp eq i32 %1, 0, !dbg !11223
  %5 = select i1 %4, i32 4, i32 3, !dbg !11223
  %6 = select i1 %4, i32 3, i32 2, !dbg !11223
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11223
  ret i32 %7, !dbg !11224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11227, metadata !DIExpression()), !dbg !11229
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11230
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11230
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11230
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11228, metadata !DIExpression()), !dbg !11229
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11231
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11231
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11232
  ret i32 %7, !dbg !11233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11238, metadata !DIExpression()), !dbg !11239
  %2 = icmp eq i32 %0, 768, !dbg !11240
  %3 = zext i1 %2 to i32, !dbg !11239
  ret i32 %3, !dbg !11242
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11243 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11245, metadata !DIExpression()), !dbg !11246
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11247
  %3 = load volatile i32, i32* %2, align 4, !dbg !11247
  %4 = and i32 %3, 768, !dbg !11247
  ret i32 %4, !dbg !11248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11249 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11251, metadata !DIExpression()), !dbg !11252
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11253
  %3 = load volatile i32, i32* %2, align 4, !dbg !11253
  %4 = and i32 %3, 4096, !dbg !11253
  ret i32 %4, !dbg !11254
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11257, metadata !DIExpression()), !dbg !11258
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11259
  %3 = load volatile i32, i32* %2, align 4, !dbg !11259
  %4 = and i32 %3, 12288, !dbg !11259
  ret i32 %4, !dbg !11260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11261 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11263, metadata !DIExpression()), !dbg !11264
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11265
  %3 = load volatile i32, i32* %2, align 4, !dbg !11265
  %4 = and i32 %3, 1536, !dbg !11265
  ret i32 %4, !dbg !11266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11271, metadata !DIExpression()), !dbg !11272
  %2 = icmp eq i32 %0, 2, !dbg !11273
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11273
  %4 = icmp eq i32 %0, 1, !dbg !11273
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11273
  ret i32 %5, !dbg !11274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11279, metadata !DIExpression()), !dbg !11280
  %2 = icmp ult i32 %0, 3, !dbg !11281
  br i1 %2, label %3, label %6, !dbg !11281

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11281
  %5 = load i32, i32* %4, align 4, !dbg !11281
  br label %6, !dbg !11281

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11282
  ret i32 %7, !dbg !11284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11289, metadata !DIExpression()), !dbg !11291
  call void @llvm.dbg.value(metadata i32 %1, metadata !11290, metadata !DIExpression()), !dbg !11291
  %3 = icmp eq i32 %0, 4, !dbg !11292
  %4 = icmp eq i32 %1, 0, !dbg !11292
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11292
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11292
  ret i32 %6, !dbg !11293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11298, metadata !DIExpression()), !dbg !11299
  %2 = icmp eq i32 %0, 1, !dbg !11300
  %3 = select i1 %2, i32 768, i32 0, !dbg !11299
  ret i32 %3, !dbg !11302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11303 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11305, metadata !DIExpression()), !dbg !11306
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11307
  %3 = load volatile i32, i32* %2, align 4, !dbg !11307
  %4 = and i32 %3, -8193, !dbg !11307
  store volatile i32 %4, i32* %2, align 4, !dbg !11307
  ret void, !dbg !11308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11313, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 %1, metadata !11314, metadata !DIExpression()), !dbg !11316
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11317
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11317
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11317
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11315, metadata !DIExpression()), !dbg !11316
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11318
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11318
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11319
  ret void, !dbg !11320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11323, metadata !DIExpression()), !dbg !11326
  call void @llvm.dbg.value(metadata i32 %1, metadata !11324, metadata !DIExpression()), !dbg !11326
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11327
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11327
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11327
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11325, metadata !DIExpression()), !dbg !11326
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11328
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11328
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11329
  ret void, !dbg !11330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11331 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11333, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.value(metadata i32 %1, metadata !11334, metadata !DIExpression()), !dbg !11336
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11337
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11337
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11337
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11335, metadata !DIExpression()), !dbg !11336
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11338
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11338
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11339
  ret void, !dbg !11340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11343, metadata !DIExpression()), !dbg !11346
  call void @llvm.dbg.value(metadata i32 %1, metadata !11344, metadata !DIExpression()), !dbg !11346
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11347
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11347
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11347
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11345, metadata !DIExpression()), !dbg !11346
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11348
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11348
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11349
  ret void, !dbg !11350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11351 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11353, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32 %1, metadata !11354, metadata !DIExpression()), !dbg !11358
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11359
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11359
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11359
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11355, metadata !DIExpression()), !dbg !11358
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11360
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11360
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11360
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11356, metadata !DIExpression()), !dbg !11358
  %10 = bitcast i32* %3 to i8*, !dbg !11361
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11361
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11362
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11362
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11366
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11366
  %15 = load i8*, i8** %14, align 4, !dbg !11366
  call void @llvm.dbg.value(metadata i32* %3, metadata !11357, metadata !DIExpression(DW_OP_deref)), !dbg !11358
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11367
  %17 = icmp slt i32 %16, 0, !dbg !11368
  br i1 %17, label %23, label %18, !dbg !11369

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11370
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11370
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11371
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11372
  %22 = load i32, i32* %3, align 4, !dbg !11373
  call void @llvm.dbg.value(metadata i32 %22, metadata !11357, metadata !DIExpression()), !dbg !11358
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11374
  br label %23, !dbg !11375

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11375
  ret void, !dbg !11375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11378, metadata !DIExpression()), !dbg !11379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11380
  %3 = load volatile i32, i32* %2, align 4, !dbg !11380
  %4 = or i32 %3, 8192, !dbg !11380
  store volatile i32 %4, i32* %2, align 4, !dbg !11380
  ret void, !dbg !11381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11384, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata i8* %1, metadata !11385, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata i32* %2, metadata !11386, metadata !DIExpression()), !dbg !11388
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11389
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11389
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11389
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11387, metadata !DIExpression()), !dbg !11388
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11390
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11390
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11392
  br i1 %9, label %12, label %10, !dbg !11393

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11394
  br label %12, !dbg !11395

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11388
  ret i32 %13, !dbg !11396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11397 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11401, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.value(metadata i32 0, metadata !11402, metadata !DIExpression()), !dbg !11403
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11404
  %3 = load volatile i32, i32* %2, align 4, !dbg !11404
  %4 = and i32 %3, -32769, !dbg !11404
  store volatile i32 %4, i32* %2, align 4, !dbg !11404
  ret void, !dbg !11405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11406 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11410, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i32 %1, metadata !11411, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i32 0, metadata !11412, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i32 %2, metadata !11413, metadata !DIExpression()), !dbg !11414
  %4 = zext i32 %1 to i64, !dbg !11415
  %5 = mul nuw nsw i64 %4, 25, !dbg !11415
  %6 = zext i32 %2 to i64, !dbg !11415
  %7 = shl nuw nsw i64 %6, 2, !dbg !11415
  %8 = udiv i64 %5, %7, !dbg !11415
  %9 = trunc i64 %8 to i32, !dbg !11415
  %10 = udiv i32 %9, 100, !dbg !11415
  %11 = shl nuw nsw i32 %10, 4, !dbg !11415
  %12 = mul i32 %10, -100, !dbg !11415
  %13 = add i32 %12, %9, !dbg !11415
  %14 = shl i32 %13, 4, !dbg !11415
  %15 = add i32 %14, 50, !dbg !11415
  %16 = udiv i32 %15, 100, !dbg !11415
  %17 = and i32 %16, 240, !dbg !11415
  %18 = add nuw nsw i32 %17, %11, !dbg !11415
  %19 = and i32 %16, 15, !dbg !11415
  %20 = and i32 %18, 65520, !dbg !11418
  %21 = or i32 %20, %19, !dbg !11418
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11419
  store volatile i32 %21, i32* %22, align 4, !dbg !11420
  ret void, !dbg !11421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11424, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata i32 %1, metadata !11425, metadata !DIExpression()), !dbg !11426
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11427
  %4 = load volatile i32, i32* %3, align 4, !dbg !11427
  %5 = and i32 %4, -769, !dbg !11427
  %6 = or i32 %5, %1, !dbg !11427
  store volatile i32 %6, i32* %3, align 4, !dbg !11427
  ret void, !dbg !11428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11429 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11431, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.value(metadata i32 %1, metadata !11432, metadata !DIExpression()), !dbg !11433
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11434
  %4 = load volatile i32, i32* %3, align 4, !dbg !11434
  %5 = and i32 %4, -4097, !dbg !11434
  %6 = or i32 %5, %1, !dbg !11434
  store volatile i32 %6, i32* %3, align 4, !dbg !11434
  ret void, !dbg !11435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11436 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11438, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.value(metadata i32 %1, metadata !11439, metadata !DIExpression()), !dbg !11440
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11441
  %4 = load volatile i32, i32* %3, align 4, !dbg !11441
  %5 = and i32 %4, -12289, !dbg !11441
  %6 = or i32 %5, %1, !dbg !11441
  store volatile i32 %6, i32* %3, align 4, !dbg !11441
  ret void, !dbg !11442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11445, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.value(metadata i32 %1, metadata !11446, metadata !DIExpression()), !dbg !11447
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11448
  %4 = load volatile i32, i32* %3, align 4, !dbg !11448
  %5 = and i32 %4, -1537, !dbg !11448
  %6 = or i32 %5, %1, !dbg !11448
  store volatile i32 %6, i32* %3, align 4, !dbg !11448
  ret void, !dbg !11449
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11450 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11452, metadata !DIExpression()), !dbg !11453
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11454
  %3 = load volatile i32, i32* %2, align 4, !dbg !11454
  %4 = and i32 %3, 1, !dbg !11454
  ret i32 %4, !dbg !11455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11458, metadata !DIExpression()), !dbg !11459
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11460
  %3 = load volatile i32, i32* %2, align 4, !dbg !11460
  %4 = lshr i32 %3, 1, !dbg !11461
  %5 = and i32 %4, 1, !dbg !11461
  ret i32 %5, !dbg !11462
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11465, metadata !DIExpression()), !dbg !11466
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11467
  %3 = load volatile i32, i32* %2, align 4, !dbg !11467
  %4 = lshr i32 %3, 8, !dbg !11468
  %5 = and i32 %4, 1, !dbg !11468
  ret i32 %5, !dbg !11469
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11470 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11472, metadata !DIExpression()), !dbg !11473
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11474
  store volatile i32 -257, i32* %2, align 4, !dbg !11474
  ret void, !dbg !11475
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11476 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11478, metadata !DIExpression()), !dbg !11480
  %3 = bitcast i32* %2 to i8*, !dbg !11481
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11481
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11479, metadata !DIExpression()), !dbg !11482
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11483
  %5 = load volatile i32, i32* %4, align 4, !dbg !11483
  store volatile i32 %5, i32* %2, align 4, !dbg !11484
  %6 = load volatile i32, i32* %2, align 4, !dbg !11485
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11486
  %8 = load volatile i32, i32* %7, align 4, !dbg !11486
  store volatile i32 %8, i32* %2, align 4, !dbg !11487
  %9 = load volatile i32, i32* %2, align 4, !dbg !11488
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11489
  ret void, !dbg !11489
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11490 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11492, metadata !DIExpression()), !dbg !11494
  %3 = bitcast i32* %2 to i8*, !dbg !11495
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11495
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11493, metadata !DIExpression()), !dbg !11496
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11497
  %5 = load volatile i32, i32* %4, align 4, !dbg !11497
  store volatile i32 %5, i32* %2, align 4, !dbg !11498
  %6 = load volatile i32, i32* %2, align 4, !dbg !11499
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11500
  %8 = load volatile i32, i32* %7, align 4, !dbg !11500
  store volatile i32 %8, i32* %2, align 4, !dbg !11501
  %9 = load volatile i32, i32* %2, align 4, !dbg !11502
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11503
  ret void, !dbg !11503
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11504 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11506, metadata !DIExpression()), !dbg !11508
  %3 = bitcast i32* %2 to i8*, !dbg !11509
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11509
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11507, metadata !DIExpression()), !dbg !11510
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11511
  %5 = load volatile i32, i32* %4, align 4, !dbg !11511
  store volatile i32 %5, i32* %2, align 4, !dbg !11512
  %6 = load volatile i32, i32* %2, align 4, !dbg !11513
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11514
  %8 = load volatile i32, i32* %7, align 4, !dbg !11514
  store volatile i32 %8, i32* %2, align 4, !dbg !11515
  %9 = load volatile i32, i32* %2, align 4, !dbg !11516
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11517
  ret void, !dbg !11517
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1658, metadata !DIExpression()), !dbg !11518
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #25, !dbg !11519
  tail call void @arch_irq_enable(i32 noundef 37) #25, !dbg !11521
  ret void, !dbg !11521
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11524, metadata !DIExpression()), !dbg !11526
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11527
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11527
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11527
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11525, metadata !DIExpression()), !dbg !11526
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11528
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11528
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11530
  br i1 %7, label %11, label %8, !dbg !11531

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11532
  %10 = load i8*, i8** %9, align 4, !dbg !11532
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11534
  br label %11, !dbg !11535

11:                                               ; preds = %8, %1
  ret void, !dbg !11536
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11539, metadata !DIExpression()), !dbg !11545
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11546
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11546
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11546
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11540, metadata !DIExpression()), !dbg !11545
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11547
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11547
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11547
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11541, metadata !DIExpression()), !dbg !11545
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11548
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11549
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11549
  %10 = tail call fastcc zeroext i1 @device_is_ready.75(%struct.device* noundef %9) #26, !dbg !11551
  br i1 %10, label %11, label %51, !dbg !11552

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11553
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11554
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11554
  %15 = load i8*, i8** %14, align 4, !dbg !11554
  %16 = tail call fastcc i32 @clock_control_on.76(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %16, metadata !11544, metadata !DIExpression()), !dbg !11545
  %17 = icmp eq i32 %16, 0, !dbg !11556
  br i1 %17, label %18, label %51, !dbg !11558

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11559
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11559
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %21, metadata !11544, metadata !DIExpression()), !dbg !11545
  %22 = icmp slt i32 %21, 0, !dbg !11561
  br i1 %22, label %51, label %23, !dbg !11563

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11564
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11564
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11565
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11566
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11567
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11568
  %28 = load i32, i32* %27, align 4, !dbg !11568
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11570

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11542, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 4096, metadata !11543, metadata !DIExpression()), !dbg !11545
  br label %31, !dbg !11571

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11542, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 0, metadata !11543, metadata !DIExpression()), !dbg !11545
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11574
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11574
  call void @llvm.dbg.value(metadata i32 %33, metadata !11543, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %32, metadata !11542, metadata !DIExpression()), !dbg !11545
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11575
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11576
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11577
  %36 = load i8, i8* %35, align 4, !dbg !11577, !range !7170
  %37 = icmp eq i8 %36, 0, !dbg !11577
  br i1 %37, label %39, label %38, !dbg !11579

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11580
  br label %39, !dbg !11582

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11583
  %41 = load i32, i32* %40, align 4, !dbg !11583
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11584
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11585
  %43 = load i8, i8* %42, align 4, !dbg !11585, !range !7170
  %44 = icmp eq i8 %43, 0, !dbg !11585
  br i1 %44, label %47, label %45, !dbg !11587

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11588
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11590
  br label %47, !dbg !11591

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11592
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11593
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11594
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11594
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11595
  br label %51, !dbg !11596

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11545
  ret i32 %52, !dbg !11597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11598 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11600, metadata !DIExpression()), !dbg !11604
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11605
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11605
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11605
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11601, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11602, metadata !DIExpression()), !dbg !11604
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11606
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11607
  ret void, !dbg !11608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.75(%struct.device* noundef %0) unnamed_addr #1 !dbg !11609 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11613, metadata !DIExpression()), !dbg !11614
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11615, !srcloc !11617
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) #26, !dbg !11618
  ret i1 %2, !dbg !11619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.76(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11620 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11622, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i8* %1, metadata !11623, metadata !DIExpression()), !dbg !11625
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11626
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11626
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11626
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11624, metadata !DIExpression()), !dbg !11625
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11627
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11627
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11628
  ret i32 %8, !dbg !11629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11630 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11634, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.value(metadata i8 0, metadata !11635, metadata !DIExpression()), !dbg !11638
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11639
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11637, metadata !DIExpression(DW_OP_deref)), !dbg !11638
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %4, metadata !11636, metadata !DIExpression()), !dbg !11638
  %5 = icmp slt i32 %4, 0, !dbg !11641
  br i1 %5, label %9, label %6, !dbg !11643

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11644
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11637, metadata !DIExpression()), !dbg !11638
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11645
  br label %9, !dbg !11646

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11638
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11647
  ret i32 %10, !dbg !11647
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11648 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11650, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i32 12, metadata !11651, metadata !DIExpression()), !dbg !11654
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11655

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10957, metadata !DIExpression()) #24, !dbg !11656
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11659, !srcloc !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10962, metadata !DIExpression()) #24, !dbg !11656
  %5 = or i32 %4, 12, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %5, metadata !11652, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32 %5, metadata !10970, metadata !DIExpression()) #24, !dbg !11662
  call void @llvm.dbg.value(metadata i32* %2, metadata !10975, metadata !DIExpression()) #24, !dbg !11662
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11664, !srcloc !10980
  call void @llvm.dbg.value(metadata i32 %6, metadata !10976, metadata !DIExpression()) #24, !dbg !11662
  %7 = icmp eq i32 %6, 0, !dbg !11655
  br i1 %7, label %8, label %3, !dbg !11660, !llvm.loop !11665

8:                                                ; preds = %3
  ret void, !dbg !11666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11669, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %1, metadata !11670, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %2, metadata !11671, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 0, metadata !11672, metadata !DIExpression()), !dbg !11673
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11674
  %5 = load volatile i32, i32* %4, align 4, !dbg !11674
  %6 = and i32 %5, -5633, !dbg !11674
  %7 = or i32 %2, %1, !dbg !11674
  %8 = or i32 %7, %6, !dbg !11674
  store volatile i32 %8, i32* %4, align 4, !dbg !11674
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11675
  %10 = load volatile i32, i32* %9, align 4, !dbg !11675
  %11 = and i32 %10, -12289, !dbg !11675
  store volatile i32 %11, i32* %9, align 4, !dbg !11675
  ret void, !dbg !11676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11677 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11679, metadata !DIExpression()), !dbg !11680
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11681
  %3 = load volatile i32, i32* %2, align 4, !dbg !11681
  %4 = or i32 %3, 8, !dbg !11681
  store volatile i32 %4, i32* %2, align 4, !dbg !11681
  ret void, !dbg !11682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11687, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11688, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 0, metadata !11689, metadata !DIExpression()), !dbg !11690
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11691
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11691
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11692
  %5 = load i8, i8* %4, align 4, !dbg !11692
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11693
  ret i32 %6, !dbg !11694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !11695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11697, metadata !DIExpression()), !dbg !11698
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11699
  ret i1 %2, !dbg !11700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11701 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11703, metadata !DIExpression()), !dbg !11704
  tail call fastcc void @__NVIC_SetPriority.79() #26, !dbg !11705
  store i32 8399, i32* @last_load, align 4, !dbg !11706
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11707
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11708
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11709
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11710
  %3 = or i32 %2, 7, !dbg !11710
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11710
  ret i32 0, !dbg !11711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.79() unnamed_addr #15 !dbg !11712 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11714, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.value(metadata i32 1, metadata !11715, metadata !DIExpression()), !dbg !11716
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11717
  ret void, !dbg !11720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11721 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11723, metadata !DIExpression()), !dbg !11725
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11726
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11727
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11728
  %5 = add i32 %4, %3, !dbg !11728
  store i32 %5, i32* @cycle_count, align 4, !dbg !11728
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11729
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11730
  %7 = sub i32 %5, %6, !dbg !11733
  %8 = udiv i32 %7, 8400, !dbg !11734
  call void @llvm.dbg.value(metadata i32 %8, metadata !11724, metadata !DIExpression()), !dbg !11725
  %9 = mul nuw i32 %8, 8400, !dbg !11735
  %10 = add i32 %9, %6, !dbg !11736
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11736
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11737
  tail call void @z_arm_int_exit() #25, !dbg !11738
  ret void, !dbg !11739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11740 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11745
  call void @llvm.dbg.value(metadata i32 %1, metadata !11742, metadata !DIExpression()), !dbg !11746
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11747
  call void @llvm.dbg.value(metadata i32 %2, metadata !11743, metadata !DIExpression()), !dbg !11746
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11748
  call void @llvm.dbg.value(metadata i32 %3, metadata !11744, metadata !DIExpression()), !dbg !11746
  %4 = and i32 %2, 65536, !dbg !11749
  %5 = icmp ne i32 %4, 0, !dbg !11749
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11751
  %8 = load i32, i32* @last_load, align 4, !dbg !11746
  br i1 %7, label %9, label %13, !dbg !11751

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11752
  %11 = add i32 %10, %8, !dbg !11752
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11752
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11754
  br label %13, !dbg !11755

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11756
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11757
  %16 = add i32 %14, %15, !dbg !11758
  ret i32 %16, !dbg !11759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11764, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i1 %1, metadata !11765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11777
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11778
  br i1 %4, label %5, label %8, !dbg !11778

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11780
  %7 = and i32 %6, -2, !dbg !11780
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11780
  store i32 -16777216, i32* @last_load, align 4, !dbg !11782
  br label %54, !dbg !11783

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %9, metadata !11769, metadata !DIExpression()), !dbg !11777
  br i1 %3, label %18, label %10, !dbg !11785

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11785
  call void @llvm.dbg.value(metadata i32 undef, metadata !11764, metadata !DIExpression()), !dbg !11777
  %12 = icmp slt i32 %11, 1, !dbg !11786
  br i1 %12, label %18, label %13, !dbg !11786

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11786
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11786
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11786
  %17 = add nuw nsw i32 %16, 8399, !dbg !11786
  br label %18, !dbg !11786

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11764, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11787, metadata !DIExpression()) #24, !dbg !11794
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11796, !srcloc !11802
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11796
  call void @llvm.dbg.value(metadata i32 %21, metadata !11799, metadata !DIExpression()) #24, !dbg !11803
  call void @llvm.dbg.value(metadata i32 undef, metadata !11800, metadata !DIExpression()) #24, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %21, metadata !11793, metadata !DIExpression()) #24, !dbg !11794
  call void @llvm.dbg.value(metadata i32 %21, metadata !11770, metadata !DIExpression()), !dbg !11777
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11804
  call void @llvm.dbg.value(metadata i32 %22, metadata !11775, metadata !DIExpression()), !dbg !11777
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %23, metadata !11767, metadata !DIExpression()), !dbg !11777
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11806
  %25 = add i32 %24, %22, !dbg !11806
  store i32 %25, i32* @cycle_count, align 4, !dbg !11806
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11807
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11808
  %27 = sub i32 %25, %26, !dbg !11809
  call void @llvm.dbg.value(metadata i32 %27, metadata !11776, metadata !DIExpression()), !dbg !11777
  %28 = icmp slt i32 %27, 0, !dbg !11810
  br i1 %28, label %38, label %29, !dbg !11812

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11766, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i32 undef, metadata !11766, metadata !DIExpression()), !dbg !11777
  %30 = add nuw i32 %19, %27, !dbg !11813
  %31 = urem i32 %30, 8400, !dbg !11815
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11766, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11777
  %32 = sub nuw nsw i32 %19, %31, !dbg !11816
  call void @llvm.dbg.value(metadata i32 %32, metadata !11766, metadata !DIExpression()), !dbg !11777
  %33 = icmp ugt i32 %32, 1024, !dbg !11817
  br i1 %33, label %34, label %36, !dbg !11817

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11766, metadata !DIExpression()), !dbg !11777
  %35 = icmp ugt i32 %32, 16766400, !dbg !11818
  br i1 %35, label %38, label %36, !dbg !11820

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11821
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11822
  call void @llvm.dbg.value(metadata i32 %40, metadata !11768, metadata !DIExpression()), !dbg !11777
  %41 = add nsw i32 %39, -1, !dbg !11823
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11824
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11825
  %42 = icmp ult i32 %23, %40, !dbg !11826
  br i1 %42, label %43, label %48, !dbg !11828

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11829
  %45 = add i32 %23, %9, !dbg !11831
  %46 = sub i32 %45, %40, !dbg !11832
  %47 = add i32 %46, %44, !dbg !11829
  br label %52, !dbg !11833

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11834
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11836
  %51 = add i32 %49, %50, !dbg !11836
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11837
  store i32 %53, i32* @cycle_count, align 4, !dbg !11837
  call void @llvm.dbg.value(metadata i32 %21, metadata !11838, metadata !DIExpression()) #24, !dbg !11844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11843, metadata !DIExpression()) #24, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %21, metadata !11846, metadata !DIExpression()) #24, !dbg !11849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11851, !srcloc !11852
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11853
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11854 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11787, metadata !DIExpression()) #24, !dbg !11858
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11860, !srcloc !11802
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %2, metadata !11799, metadata !DIExpression()) #24, !dbg !11862
  call void @llvm.dbg.value(metadata i32 undef, metadata !11800, metadata !DIExpression()) #24, !dbg !11862
  call void @llvm.dbg.value(metadata i32 %2, metadata !11793, metadata !DIExpression()) #24, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %2, metadata !11856, metadata !DIExpression()), !dbg !11863
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11864
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11865
  %5 = add i32 %4, %3, !dbg !11866
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11867
  %7 = sub i32 %5, %6, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %7, metadata !11857, metadata !DIExpression()), !dbg !11863
  call void @llvm.dbg.value(metadata i32 %2, metadata !11838, metadata !DIExpression()) #24, !dbg !11869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11843, metadata !DIExpression()) #24, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %2, metadata !11846, metadata !DIExpression()) #24, !dbg !11871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11873, !srcloc !11852
  %8 = udiv i32 %7, 8400, !dbg !11874
  ret i32 %8, !dbg !11875
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11876 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11787, metadata !DIExpression()) #24, !dbg !11880
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11882, !srcloc !11802
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11882
  call void @llvm.dbg.value(metadata i32 %2, metadata !11799, metadata !DIExpression()) #24, !dbg !11884
  call void @llvm.dbg.value(metadata i32 undef, metadata !11800, metadata !DIExpression()) #24, !dbg !11884
  call void @llvm.dbg.value(metadata i32 %2, metadata !11793, metadata !DIExpression()) #24, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %2, metadata !11878, metadata !DIExpression()), !dbg !11885
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11886
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11887
  %5 = add i32 %4, %3, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %5, metadata !11879, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.value(metadata i32 %2, metadata !11838, metadata !DIExpression()) #24, !dbg !11889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11843, metadata !DIExpression()) #24, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %2, metadata !11846, metadata !DIExpression()) #24, !dbg !11891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11893, !srcloc !11852
  ret i32 %5, !dbg !11894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11895 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11896
  %2 = icmp eq i32 %1, -16777216, !dbg !11898
  br i1 %2, label %3, label %6, !dbg !11899

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11900
  %5 = or i32 %4, 1, !dbg !11900
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11900
  br label %6, !dbg !11902

6:                                                ; preds = %3, %0
  ret void, !dbg !11903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11904 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11905
  %2 = and i32 %1, -2, !dbg !11905
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11905
  ret void, !dbg !11906
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11907 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11933, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata i8 %1, metadata !11934, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11935, metadata !DIExpression()), !dbg !11936
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11937
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11937
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11936
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11938
  %8 = load i8, i8* %6, align 4, !dbg !11939
  %9 = zext i8 %8 to i32, !dbg !11940
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11940
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11941
  br i1 %11, label %18, label %24, !dbg !11942

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11936
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11938
  %14 = load i8, i8* %6, align 4, !dbg !11939
  %15 = zext i8 %14 to i32, !dbg !11940
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11940
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11941
  br i1 %17, label %18, label %24, !dbg !11942, !llvm.loop !11943

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11945
  %21 = load i8, i8* %20, align 1, !dbg !11945
  %22 = icmp eq i8 %21, %1, !dbg !11948
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11949
  br i1 %22, label %24, label %12, !dbg !11950

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11936
  ret i32 %25, !dbg !11951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11952 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11963, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i8 %1, metadata !11964, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 %2, metadata !11965, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 0, metadata !11968, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 0, metadata !11969, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i8 0, metadata !11970, metadata !DIExpression()), !dbg !11980
  %4 = icmp eq i8 %1, 0, !dbg !11981
  br i1 %4, label %35, label %5, !dbg !11982

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11981
  br label %9, !dbg !11982

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11970, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %29, metadata !11968, metadata !DIExpression()), !dbg !11979
  %8 = icmp eq i32 %34, %6, !dbg !11981
  br i1 %8, label %35, label %9, !dbg !11982, !llvm.loop !11983

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11970, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %11, metadata !11968, metadata !DIExpression()), !dbg !11979
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11985
  %13 = load i32, i32* %12, align 4, !dbg !11985
  call void @llvm.dbg.value(metadata i32 %13, metadata !11967, metadata !DIExpression()), !dbg !11979
  %14 = and i32 %13, 31, !dbg !11986
  %15 = icmp ult i32 %14, 16, !dbg !11987
  br i1 %15, label %16, label %20, !dbg !11988

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11989
  %18 = load i32, i32* %17, align 4, !dbg !11989
  %19 = or i32 %18, 32, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %19, metadata !11968, metadata !DIExpression()), !dbg !11979
  br label %28, !dbg !11992

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11993

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11994
  %23 = load i32, i32* %22, align 4, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %23, metadata !11972, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11995
  %24 = lshr i32 %23, 7, !dbg !11996
  %25 = and i32 %24, 16, !dbg !11996
  %26 = or i32 %25, %23, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %26, metadata !11968, metadata !DIExpression()), !dbg !11979
  br label %28, !dbg !11997

27:                                               ; preds = %20
  br label %28, !dbg !11998

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11979
  call void @llvm.dbg.value(metadata i32 %29, metadata !11968, metadata !DIExpression()), !dbg !11979
  %30 = lshr i32 %13, 5, !dbg !11998
  %31 = and i32 %30, 255, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %31, metadata !11966, metadata !DIExpression()), !dbg !11979
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !11999
  call void @llvm.dbg.value(metadata i32 %32, metadata !11969, metadata !DIExpression()), !dbg !11979
  %33 = icmp slt i32 %32, 0, !dbg !12000
  %34 = add nuw nsw i32 %10, 1, !dbg !12002
  call void @llvm.dbg.value(metadata i32 %34, metadata !11970, metadata !DIExpression()), !dbg !11980
  br i1 %33, label %35, label %7, !dbg !12003

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12009, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %1, metadata !12010, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %2, metadata !12011, metadata !DIExpression()), !dbg !12013
  %4 = icmp ugt i32 %0, 175, !dbg !12014
  br i1 %4, label %16, label %5, !dbg !12016

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12017
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12018
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12018
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12012, metadata !DIExpression()), !dbg !12013
  %9 = add nsw i32 %6, -8, !dbg !12019
  %10 = icmp ult i32 %9, 3, !dbg !12019
  br i1 %10, label %16, label %11, !dbg !12021

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.84(%struct.device* noundef %8) #26, !dbg !12022
  br i1 %12, label %13, label %16, !dbg !12023

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12024
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !12025
  br label %16, !dbg !12026

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12013
  ret i32 %17, !dbg !12027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.84(%struct.device* noundef %0) unnamed_addr #1 !dbg !12028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12032, metadata !DIExpression()), !dbg !12033
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12034, !srcloc !12036
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.85(%struct.device* noundef %0) #26, !dbg !12037
  ret i1 %2, !dbg !12038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.85(%struct.device* noundef %0) unnamed_addr #1 !dbg !12039 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12041, metadata !DIExpression()), !dbg !12042
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12043
  ret i1 %2, !dbg !12044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !12045 {
  ret void, !dbg !12046
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !12047 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12049, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12050, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 2, metadata !12051, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 2, metadata !12053, metadata !DIExpression()), !dbg !12054
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12055
  %2 = and i32 %1, 12, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %2, metadata !12049, metadata !DIExpression()), !dbg !12054
  %3 = icmp eq i32 %2, 8, !dbg !12057
  br i1 %3, label %4, label %18, !dbg !12057

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %5, metadata !12052, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12054
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12060
  %7 = and i32 %6, 63, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %7, metadata !12053, metadata !DIExpression()), !dbg !12054
  %8 = udiv i32 16000000, %7, !dbg !12062
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12062
  %10 = lshr i32 %9, 6, !dbg !12062
  %11 = and i32 %10, 511, !dbg !12062
  %12 = mul i32 %11, %8, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %12, metadata !12050, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %12, metadata !12050, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %12, metadata !12050, metadata !DIExpression()), !dbg !12054
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12064
  %14 = lshr i32 %13, 15, !dbg !12065
  %15 = and i32 %14, 6, !dbg !12065
  %16 = add nuw nsw i32 %15, 2, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %16, metadata !12051, metadata !DIExpression()), !dbg !12054
  %17 = udiv i32 %12, %16, !dbg !12066
  br label %18, !dbg !12067

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12068
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12069
  %21 = lshr i32 %20, 4, !dbg !12070
  %22 = and i32 %21, 15, !dbg !12070
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12071
  %24 = load i8, i8* %23, align 1, !dbg !12071
  %25 = zext i8 %24 to i32, !dbg !12071
  call void @llvm.dbg.value(metadata i32 %25, metadata !12049, metadata !DIExpression()), !dbg !12054
  %26 = lshr i32 %19, %25, !dbg !12072
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12072
  ret void, !dbg !12073
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12074 {
  ret i32 0, !dbg !12079
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12080 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12107, metadata !DIExpression()), !dbg !12118
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12119
  br i1 %3, label %317, label %4, !dbg !12121

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12122
  %6 = load i32, i32* %5, align 4, !dbg !12122
  %7 = and i32 %6, 1, !dbg !12124
  %8 = icmp eq i32 %7, 0, !dbg !12125
  br i1 %8, label %66, label %9, !dbg !12126

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12127
  %11 = and i32 %10, 12, !dbg !12127
  %12 = icmp eq i32 %11, 4, !dbg !12130
  br i1 %12, label %21, label %13, !dbg !12131

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12132
  %15 = and i32 %14, 12, !dbg !12132
  %16 = icmp eq i32 %15, 8, !dbg !12133
  br i1 %16, label %17, label %29, !dbg !12134

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12135
  %19 = and i32 %18, 4194304, !dbg !12136
  %20 = icmp eq i32 %19, 0, !dbg !12137
  br i1 %20, label %29, label %21, !dbg !12138

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12139
  %23 = and i32 %22, 131072, !dbg !12139
  %24 = icmp eq i32 %23, 0, !dbg !12139
  br i1 %24, label %66, label %25, !dbg !12142

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12143
  %27 = load i32, i32* %26, align 4, !dbg !12143
  %28 = icmp eq i32 %27, 0, !dbg !12144
  br i1 %28, label %317, label %66, !dbg !12145

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12146
  %31 = load i32, i32* %30, align 4, !dbg !12146
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12150

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12151
  %34 = or i32 %33, 65536, !dbg !12151
  br label %45, !dbg !12151

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12153
  %37 = or i32 %36, 262144, !dbg !12153
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12153
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12153
  %39 = or i32 %38, 65536, !dbg !12153
  br label %45, !dbg !12153

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12156
  %42 = and i32 %41, -65537, !dbg !12156
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12156
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12156
  %44 = and i32 %43, -262145, !dbg !12156
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12158
  %47 = load i32, i32* %30, align 4, !dbg !12159
  %48 = icmp eq i32 %47, 0, !dbg !12161
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %49, metadata !12108, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i32 %49, metadata !12108, metadata !DIExpression()), !dbg !12118
  br i1 %48, label %58, label %50, !dbg !12163

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12164
  %52 = and i32 %51, 131072, !dbg !12166
  %53 = icmp eq i32 %52, 0, !dbg !12166
  br i1 %53, label %54, label %66, !dbg !12167

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12168
  %56 = sub i32 %55, %49, !dbg !12171
  %57 = icmp ugt i32 %56, 100, !dbg !12172
  br i1 %57, label %317, label %50, !dbg !12173, !llvm.loop !12174

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %60 = and i32 %59, 131072, !dbg !12176
  %61 = icmp eq i32 %60, 0, !dbg !12176
  br i1 %61, label %66, label %62, !dbg !12178

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12179
  %64 = sub i32 %63, %49, !dbg !12182
  %65 = icmp ugt i32 %64, 100, !dbg !12183
  br i1 %65, label %317, label %58, !dbg !12184, !llvm.loop !12185

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12187
  %68 = and i32 %67, 2, !dbg !12189
  %69 = icmp eq i32 %68, 0, !dbg !12190
  br i1 %69, label %121, label %70, !dbg !12191

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12192
  %72 = and i32 %71, 12, !dbg !12192
  %73 = icmp eq i32 %72, 0, !dbg !12195
  br i1 %73, label %82, label %74, !dbg !12196

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12197
  %76 = and i32 %75, 12, !dbg !12197
  %77 = icmp eq i32 %76, 8, !dbg !12198
  br i1 %77, label %78, label %90, !dbg !12199

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12200
  %80 = and i32 %79, 4194304, !dbg !12201
  %81 = icmp eq i32 %80, 0, !dbg !12202
  br i1 %81, label %82, label %90, !dbg !12203

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12204
  %84 = and i32 %83, 2, !dbg !12204
  %85 = icmp eq i32 %84, 0, !dbg !12204
  br i1 %85, label %114, label %86, !dbg !12207

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12208
  %88 = load i32, i32* %87, align 4, !dbg !12208
  %89 = icmp eq i32 %88, 1, !dbg !12209
  br i1 %89, label %114, label %317, !dbg !12210

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12211
  %92 = load i32, i32* %91, align 4, !dbg !12211
  %93 = icmp eq i32 %92, 0, !dbg !12214
  br i1 %93, label %104, label %94, !dbg !12215

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12216
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %95, metadata !12108, metadata !DIExpression()), !dbg !12118
  br label %96, !dbg !12219

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12220
  %98 = and i32 %97, 2, !dbg !12221
  %99 = icmp eq i32 %98, 0, !dbg !12221
  br i1 %99, label %100, label %114, !dbg !12219

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12222
  %102 = sub i32 %101, %95, !dbg !12225
  %103 = icmp ugt i32 %102, 2, !dbg !12226
  br i1 %103, label %317, label %96, !dbg !12227, !llvm.loop !12228

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12230
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %105, metadata !12108, metadata !DIExpression()), !dbg !12118
  br label %106, !dbg !12233

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12234
  %108 = and i32 %107, 2, !dbg !12234
  %109 = icmp eq i32 %108, 0, !dbg !12234
  br i1 %109, label %121, label %110, !dbg !12233

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12235
  %112 = sub i32 %111, %105, !dbg !12238
  %113 = icmp ugt i32 %112, 2, !dbg !12239
  br i1 %113, label %317, label %106, !dbg !12240, !llvm.loop !12241

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12243
  %116 = and i32 %115, -249, !dbg !12243
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12243
  %118 = load i32, i32* %117, align 4, !dbg !12243
  %119 = shl i32 %118, 3, !dbg !12243
  %120 = or i32 %119, %116, !dbg !12243
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12243
  br label %121, !dbg !12244

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12244
  %123 = and i32 %122, 8, !dbg !12246
  %124 = icmp eq i32 %123, 0, !dbg !12247
  br i1 %124, label %149, label %125, !dbg !12248

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12249
  %127 = load i32, i32* %126, align 4, !dbg !12249
  %128 = icmp eq i32 %127, 0, !dbg !12252
  br i1 %128, label %139, label %129, !dbg !12253

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12254
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12256
  call void @llvm.dbg.value(metadata i32 %130, metadata !12108, metadata !DIExpression()), !dbg !12118
  br label %131, !dbg !12257

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12258
  %133 = and i32 %132, 2, !dbg !12259
  %134 = icmp eq i32 %133, 0, !dbg !12259
  br i1 %134, label %135, label %149, !dbg !12257

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12260
  %137 = sub i32 %136, %130, !dbg !12263
  %138 = icmp ugt i32 %137, 2, !dbg !12264
  br i1 %138, label %317, label %131, !dbg !12265, !llvm.loop !12266

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12268
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %140, metadata !12108, metadata !DIExpression()), !dbg !12118
  br label %141, !dbg !12271

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12272
  %143 = and i32 %142, 2, !dbg !12272
  %144 = icmp eq i32 %143, 0, !dbg !12272
  br i1 %144, label %149, label %145, !dbg !12271

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12273
  %147 = sub i32 %146, %140, !dbg !12276
  %148 = icmp ugt i32 %147, 2, !dbg !12277
  br i1 %148, label %317, label %141, !dbg !12278, !llvm.loop !12279

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12281
  %151 = and i32 %150, 4, !dbg !12282
  %152 = icmp eq i32 %151, 0, !dbg !12283
  br i1 %152, label %221, label %153, !dbg !12284

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12110, metadata !DIExpression()), !dbg !12285
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12286
  %155 = and i32 %154, 268435456, !dbg !12286
  %156 = icmp eq i32 %155, 0, !dbg !12286
  br i1 %156, label %157, label %164, !dbg !12287

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12288
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12288
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12114, metadata !DIExpression()), !dbg !12288
  store volatile i32 0, i32* %2, align 4, !dbg !12288
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12288
  %160 = or i32 %159, 268435456, !dbg !12288
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12288
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12288
  %162 = and i32 %161, 268435456, !dbg !12288
  store volatile i32 %162, i32* %2, align 4, !dbg !12288
  %163 = load volatile i32, i32* %2, align 4, !dbg !12288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12289
  call void @llvm.dbg.value(metadata i32 1, metadata !12110, metadata !DIExpression()), !dbg !12285
  br label %164, !dbg !12290

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12110, metadata !DIExpression()), !dbg !12285
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12291
  %166 = and i32 %165, 256, !dbg !12291
  %167 = icmp eq i32 %166, 0, !dbg !12291
  br i1 %167, label %168, label %180, !dbg !12293

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12294
  %170 = or i32 %169, 256, !dbg !12294
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12294
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %171, metadata !12108, metadata !DIExpression()), !dbg !12118
  br label %172, !dbg !12297

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12298
  %174 = and i32 %173, 256, !dbg !12298
  %175 = icmp eq i32 %174, 0, !dbg !12298
  br i1 %175, label %176, label %180, !dbg !12297

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12299
  %178 = sub i32 %177, %171, !dbg !12302
  %179 = icmp ugt i32 %178, 2, !dbg !12303
  br i1 %179, label %317, label %172, !dbg !12304, !llvm.loop !12305

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12307
  %182 = load i32, i32* %181, align 4, !dbg !12307
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12310

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12311
  %185 = or i32 %184, 1, !dbg !12311
  br label %196, !dbg !12311

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12313
  %188 = or i32 %187, 4, !dbg !12313
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12313
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12313
  %190 = or i32 %189, 1, !dbg !12313
  br label %196, !dbg !12313

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12316
  %193 = and i32 %192, -2, !dbg !12316
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12316
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12316
  %195 = and i32 %194, -5, !dbg !12316
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12318
  %198 = load i32, i32* %181, align 4, !dbg !12319
  %199 = icmp eq i32 %198, 0, !dbg !12321
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12322
  call void @llvm.dbg.value(metadata i32 %200, metadata !12108, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i32 %200, metadata !12108, metadata !DIExpression()), !dbg !12118
  br i1 %199, label %209, label %201, !dbg !12323

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12324
  %203 = and i32 %202, 2, !dbg !12326
  %204 = icmp eq i32 %203, 0, !dbg !12326
  br i1 %204, label %205, label %217, !dbg !12327

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12328
  %207 = sub i32 %206, %200, !dbg !12331
  %208 = icmp ugt i32 %207, 5000, !dbg !12332
  br i1 %208, label %317, label %201, !dbg !12333, !llvm.loop !12334

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12336
  %211 = and i32 %210, 2, !dbg !12336
  %212 = icmp eq i32 %211, 0, !dbg !12336
  br i1 %212, label %217, label %213, !dbg !12338

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12339
  %215 = sub i32 %214, %200, !dbg !12342
  %216 = icmp ugt i32 %215, 5000, !dbg !12343
  br i1 %216, label %317, label %209, !dbg !12344, !llvm.loop !12345

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12347

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12348
  %220 = and i32 %219, -268435457, !dbg !12348
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12348
  br label %221, !dbg !12351

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12352
  %223 = load i32, i32* %222, align 4, !dbg !12352
  %224 = icmp eq i32 %223, 0, !dbg !12354
  br i1 %224, label %316, label %225, !dbg !12355

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12356
  %227 = and i32 %226, 12, !dbg !12356
  %228 = icmp eq i32 %227, 8, !dbg !12359
  br i1 %228, label %277, label %229, !dbg !12360

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12361
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12364
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12364
  call void @llvm.dbg.value(metadata i32 %231, metadata !12108, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i32 %231, metadata !12108, metadata !DIExpression()), !dbg !12118
  br i1 %230, label %232, label %269, !dbg !12365

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12366
  %234 = and i32 %233, 33554432, !dbg !12366
  %235 = icmp eq i32 %234, 0, !dbg !12366
  br i1 %235, label %240, label %236, !dbg !12368

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12369
  %238 = sub i32 %237, %231, !dbg !12372
  %239 = icmp ugt i32 %238, 2, !dbg !12373
  br i1 %239, label %317, label %232, !dbg !12374, !llvm.loop !12375

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12377
  %242 = load i32, i32* %241, align 4, !dbg !12377
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12377
  %244 = load i32, i32* %243, align 4, !dbg !12377
  %245 = or i32 %244, %242, !dbg !12377
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12377
  %247 = load i32, i32* %246, align 4, !dbg !12377
  %248 = shl i32 %247, 6, !dbg !12377
  %249 = or i32 %245, %248, !dbg !12377
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12377
  %251 = load i32, i32* %250, align 4, !dbg !12377
  %252 = shl i32 %251, 15, !dbg !12377
  %253 = add i32 %252, -65536, !dbg !12377
  %254 = and i32 %253, -65536, !dbg !12377
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12377
  %256 = load i32, i32* %255, align 4, !dbg !12377
  %257 = shl i32 %256, 24, !dbg !12377
  %258 = or i32 %249, %257, !dbg !12377
  %259 = or i32 %258, %254, !dbg !12377
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12377
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12378
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12379
  call void @llvm.dbg.value(metadata i32 %260, metadata !12108, metadata !DIExpression()), !dbg !12118
  br label %261, !dbg !12380

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12381
  %263 = and i32 %262, 33554432, !dbg !12382
  %264 = icmp eq i32 %263, 0, !dbg !12382
  br i1 %264, label %265, label %316, !dbg !12380

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12383
  %267 = sub i32 %266, %260, !dbg !12386
  %268 = icmp ugt i32 %267, 2, !dbg !12387
  br i1 %268, label %317, label %261, !dbg !12388, !llvm.loop !12389

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12391
  %271 = and i32 %270, 33554432, !dbg !12391
  %272 = icmp eq i32 %271, 0, !dbg !12391
  br i1 %272, label %316, label %273, !dbg !12393

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12394
  %275 = sub i32 %274, %231, !dbg !12397
  %276 = icmp ugt i32 %275, 2, !dbg !12398
  br i1 %276, label %317, label %269, !dbg !12399, !llvm.loop !12400

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12402
  br i1 %278, label %317, label %279, !dbg !12405

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12406
  call void @llvm.dbg.value(metadata i32 %280, metadata !12109, metadata !DIExpression()), !dbg !12118
  %281 = and i32 %280, 4194304, !dbg !12408
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12410
  %283 = load i32, i32* %282, align 4, !dbg !12410
  %284 = icmp eq i32 %281, %283, !dbg !12411
  br i1 %284, label %285, label %317, !dbg !12412

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12413
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12414
  %288 = load i32, i32* %287, align 4, !dbg !12414
  %289 = icmp eq i32 %286, %288, !dbg !12415
  br i1 %289, label %290, label %317, !dbg !12416

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12417
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12418
  %293 = load i32, i32* %292, align 4, !dbg !12418
  %294 = shl i32 %293, 6, !dbg !12419
  %295 = icmp eq i32 %291, %294, !dbg !12420
  br i1 %295, label %296, label %317, !dbg !12421

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12422
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12423
  %299 = load i32, i32* %298, align 4, !dbg !12423
  %300 = shl i32 %299, 15, !dbg !12424
  %301 = add i32 %300, -65536, !dbg !12424
  %302 = and i32 %301, -65536, !dbg !12424
  %303 = icmp eq i32 %297, %302, !dbg !12425
  br i1 %303, label %304, label %317, !dbg !12426

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12427
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12428
  %307 = load i32, i32* %306, align 4, !dbg !12428
  %308 = shl i32 %307, 24, !dbg !12429
  %309 = icmp eq i32 %305, %308, !dbg !12430
  br i1 %309, label %310, label %317, !dbg !12431

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !12432
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12433
  %313 = load i32, i32* %312, align 4, !dbg !12433
  %314 = shl i32 %313, 28, !dbg !12434
  %315 = icmp eq i32 %311, %314, !dbg !12435
  br i1 %315, label %316, label %317, !dbg !12436

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !12437

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12118
  ret i32 %318, !dbg !12438
}

; Function Attrs: optsize
declare !dbg !12439 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12441 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12454, metadata !DIExpression()), !dbg !12457
  call void @llvm.dbg.value(metadata i32 %1, metadata !12455, metadata !DIExpression()), !dbg !12457
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12458
  br i1 %3, label %115, label %4, !dbg !12460

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12461
  %6 = and i32 %5, 7, !dbg !12461
  %7 = icmp ult i32 %6, %1, !dbg !12463
  br i1 %7, label %8, label %13, !dbg !12464

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12465
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12465
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12467
  %11 = and i32 %10, 7, !dbg !12467
  %12 = icmp eq i32 %11, %1, !dbg !12469
  br i1 %12, label %13, label %115, !dbg !12470

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12471
  %15 = load i32, i32* %14, align 4, !dbg !12471
  %16 = and i32 %15, 2, !dbg !12473
  %17 = icmp eq i32 %16, 0, !dbg !12474
  br i1 %17, label %39, label %18, !dbg !12475

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12476
  %20 = icmp eq i32 %19, 0, !dbg !12479
  br i1 %20, label %25, label %21, !dbg !12480

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12481
  %23 = or i32 %22, 7168, !dbg !12481
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12481
  %24 = load i32, i32* %14, align 4, !dbg !12483
  br label %25, !dbg !12485

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12483
  %27 = and i32 %26, 8, !dbg !12486
  %28 = icmp eq i32 %27, 0, !dbg !12487
  br i1 %28, label %32, label %29, !dbg !12488

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12489
  %31 = or i32 %30, 57344, !dbg !12489
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12489
  br label %32, !dbg !12491

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12492
  %34 = and i32 %33, -241, !dbg !12492
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12492
  %36 = load i32, i32* %35, align 4, !dbg !12492
  %37 = or i32 %34, %36, !dbg !12492
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12492
  %38 = load i32, i32* %14, align 4, !dbg !12493
  br label %39, !dbg !12495

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12493
  %41 = and i32 %40, 1, !dbg !12496
  %42 = icmp eq i32 %41, 0, !dbg !12497
  br i1 %42, label %73, label %43, !dbg !12498

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12499
  %45 = load i32, i32* %44, align 4, !dbg !12499
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12502

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12503
  %48 = and i32 %47, 131072, !dbg !12506
  %49 = icmp eq i32 %48, 0, !dbg !12506
  br i1 %49, label %115, label %58, !dbg !12507

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12508
  %52 = and i32 %51, 33554432, !dbg !12512
  %53 = icmp eq i32 %52, 0, !dbg !12512
  br i1 %53, label %115, label %58, !dbg !12513

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12514
  %56 = and i32 %55, 2, !dbg !12517
  %57 = icmp eq i32 %56, 0, !dbg !12517
  br i1 %57, label %115, label %58, !dbg !12518

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12519
  %60 = and i32 %59, -4, !dbg !12519
  %61 = or i32 %60, %45, !dbg !12519
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12519
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12520
  call void @llvm.dbg.value(metadata i32 %62, metadata !12456, metadata !DIExpression()), !dbg !12457
  br label %63, !dbg !12521

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12522
  %65 = and i32 %64, 12, !dbg !12522
  %66 = load i32, i32* %44, align 4, !dbg !12523
  %67 = shl i32 %66, 2, !dbg !12524
  %68 = icmp eq i32 %65, %67, !dbg !12525
  br i1 %68, label %73, label %69, !dbg !12521

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12526
  %71 = sub i32 %70, %62, !dbg !12529
  %72 = icmp ugt i32 %71, 5000, !dbg !12530
  br i1 %72, label %115, label %63, !dbg !12531, !llvm.loop !12532

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12534
  %75 = and i32 %74, 7, !dbg !12534
  %76 = icmp ugt i32 %75, %1, !dbg !12536
  br i1 %76, label %77, label %82, !dbg !12537

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12538
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12538
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12540
  %80 = and i32 %79, 7, !dbg !12540
  %81 = icmp eq i32 %80, %1, !dbg !12542
  br i1 %81, label %82, label %115, !dbg !12543

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12544
  %84 = and i32 %83, 4, !dbg !12546
  %85 = icmp eq i32 %84, 0, !dbg !12547
  br i1 %85, label %93, label %86, !dbg !12548

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12549
  %88 = and i32 %87, -7169, !dbg !12549
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12549
  %90 = load i32, i32* %89, align 4, !dbg !12549
  %91 = or i32 %88, %90, !dbg !12549
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12549
  %92 = load i32, i32* %14, align 4, !dbg !12551
  br label %93, !dbg !12553

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12551
  %95 = and i32 %94, 8, !dbg !12554
  %96 = icmp eq i32 %95, 0, !dbg !12555
  br i1 %96, label %104, label %97, !dbg !12556

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12557
  %99 = and i32 %98, -57345, !dbg !12557
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12557
  %101 = load i32, i32* %100, align 4, !dbg !12557
  %102 = shl i32 %101, 3, !dbg !12557
  %103 = or i32 %102, %99, !dbg !12557
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12557
  br label %104, !dbg !12559

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12560
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12561
  %107 = lshr i32 %106, 4, !dbg !12562
  %108 = and i32 %107, 15, !dbg !12562
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12563
  %110 = load i8, i8* %109, align 1, !dbg !12563
  %111 = zext i8 %110 to i32, !dbg !12563
  %112 = lshr i32 %105, %111, !dbg !12564
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12565
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12566
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12567
  br label %115, !dbg !12568

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12457
  ret i32 %116, !dbg !12569
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12570 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12572, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 0, metadata !12573, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 0, metadata !12574, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 0, metadata !12575, metadata !DIExpression()), !dbg !12576
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12577
  %2 = and i32 %1, 12, !dbg !12578
  %3 = icmp eq i32 %2, 8, !dbg !12579
  br i1 %3, label %4, label %21, !dbg !12579

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12580
  %6 = and i32 %5, 63, !dbg !12583
  call void @llvm.dbg.value(metadata i32 %6, metadata !12572, metadata !DIExpression()), !dbg !12576
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12584
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12586
  %9 = lshr i32 %8, 6, !dbg !12586
  %10 = and i32 %9, 511, !dbg !12586
  %11 = zext i32 %10 to i64, !dbg !12586
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12586
  %13 = zext i32 %6 to i64, !dbg !12586
  %14 = udiv i64 %12, %13, !dbg !12586
  %15 = trunc i64 %14 to i32, !dbg !12586
  call void @llvm.dbg.value(metadata i32 %15, metadata !12573, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %15, metadata !12573, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %15, metadata !12573, metadata !DIExpression()), !dbg !12576
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12587
  %17 = lshr i32 %16, 15, !dbg !12588
  %18 = and i32 %17, 6, !dbg !12588
  %19 = add nuw nsw i32 %18, 2, !dbg !12588
  call void @llvm.dbg.value(metadata i32 %19, metadata !12574, metadata !DIExpression()), !dbg !12576
  %20 = udiv i32 %15, %19, !dbg !12589
  call void @llvm.dbg.value(metadata i32 %20, metadata !12575, metadata !DIExpression()), !dbg !12576
  br label %21, !dbg !12590

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12591
  call void @llvm.dbg.value(metadata i32 %22, metadata !12575, metadata !DIExpression()), !dbg !12576
  ret i32 %22, !dbg !12592
}

; Function Attrs: optsize
declare !dbg !12593 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12596 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12600, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i32 %1, metadata !12601, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata i32 %2, metadata !12602, metadata !DIExpression()), !dbg !12617
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12618
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #24, !dbg !12618
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12603, metadata !DIExpression()), !dbg !12619
  %7 = icmp eq i32 %0, 0, !dbg !12620
  br i1 %7, label %8, label %24, !dbg !12621

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !12622
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !12622
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12613, metadata !DIExpression()), !dbg !12622
  store volatile i32 0, i32* %5, align 4, !dbg !12622
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12622
  %11 = or i32 %10, 1, !dbg !12622
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12622
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12622
  %13 = and i32 %12, 1, !dbg !12622
  store volatile i32 %13, i32* %5, align 4, !dbg !12622
  %14 = load volatile i32, i32* %5, align 4, !dbg !12622
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !12623
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12624
  store i32 256, i32* %15, align 4, !dbg !12625
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12626
  store i32 2, i32* %16, align 4, !dbg !12627
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12628
  store i32 3, i32* %17, align 4, !dbg !12629
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12630
  store i32 0, i32* %18, align 4, !dbg !12631
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12632
  store i32 0, i32* %19, align 4, !dbg !12633
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12634
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12635
  %21 = and i32 %20, -123731969, !dbg !12635
  %22 = or i32 %2, %1, !dbg !12635
  %23 = or i32 %22, %21, !dbg !12635
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12635
  br label %24, !dbg !12636

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #24, !dbg !12637
  ret void, !dbg !12637
}

; Function Attrs: optsize
declare !dbg !12638 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12642 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12643
  ret void, !dbg !12644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12645 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12646
  ret void, !dbg !12647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !12648 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12649
  ret i32 %1, !dbg !12650
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !12651 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12652
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12653
  %3 = lshr i32 %2, 10, !dbg !12654
  %4 = and i32 %3, 7, !dbg !12654
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12655
  %6 = load i8, i8* %5, align 1, !dbg !12655
  %7 = zext i8 %6 to i32, !dbg !12655
  %8 = lshr i32 %1, %7, !dbg !12656
  ret i32 %8, !dbg !12657
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !12658 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12659
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12660
  %3 = lshr i32 %2, 13, !dbg !12661
  %4 = and i32 %3, 7, !dbg !12661
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12662
  %6 = load i8, i8* %5, align 1, !dbg !12662
  %7 = zext i8 %6 to i32, !dbg !12662
  %8 = lshr i32 %1, %7, !dbg !12663
  ret i32 %8, !dbg !12664
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12665 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12669, metadata !DIExpression()), !dbg !12670
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12671
  store i32 15, i32* %2, align 4, !dbg !12672
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12673
  %4 = and i32 %3, 262144, !dbg !12675
  %5 = icmp eq i32 %4, 0, !dbg !12676
  br i1 %5, label %8, label %6, !dbg !12677

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12678
  store i32 327680, i32* %7, align 4, !dbg !12680
  br label %15, !dbg !12681

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12682
  %10 = and i32 %9, 65536, !dbg !12684
  %11 = icmp eq i32 %10, 0, !dbg !12685
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12686
  br i1 %11, label %14, label %13, !dbg !12687

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12688
  br label %15, !dbg !12690

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12691
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12693
  %17 = and i32 %16, 1, !dbg !12695
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12696
  store i32 %17, i32* %18, align 4, !dbg !12698
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12699
  %20 = lshr i32 %19, 3, !dbg !12700
  %21 = and i32 %20, 31, !dbg !12700
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12701
  store i32 %21, i32* %22, align 4, !dbg !12702
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12703
  %24 = and i32 %23, 4, !dbg !12705
  %25 = icmp eq i32 %24, 0, !dbg !12706
  br i1 %25, label %28, label %26, !dbg !12707

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12708
  store i32 5, i32* %27, align 4, !dbg !12710
  br label %35, !dbg !12711

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12712
  %30 = and i32 %29, 1, !dbg !12714
  %31 = icmp eq i32 %30, 0, !dbg !12715
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12716
  br i1 %31, label %34, label %33, !dbg !12717

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12718
  br label %35, !dbg !12720

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12721
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12723
  %37 = and i32 %36, 1, !dbg !12725
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12726
  store i32 %37, i32* %38, align 4, !dbg !12728
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12729
  %40 = and i32 %39, 16777216, !dbg !12731
  %41 = icmp eq i32 %40, 0, !dbg !12732
  %42 = select i1 %41, i32 1, i32 2, !dbg !12733
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12734
  store i32 %42, i32* %43, align 4, !dbg !12736
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12737
  %45 = and i32 %44, 4194304, !dbg !12738
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12739
  store i32 %45, i32* %46, align 4, !dbg !12740
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12741
  %48 = and i32 %47, 63, !dbg !12742
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12743
  store i32 %48, i32* %49, align 4, !dbg !12744
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12745
  %51 = lshr i32 %50, 6, !dbg !12746
  %52 = and i32 %51, 511, !dbg !12746
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12747
  store i32 %52, i32* %53, align 4, !dbg !12748
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12749
  %55 = shl i32 %54, 1, !dbg !12750
  %56 = and i32 %55, 393216, !dbg !12750
  %57 = add nuw nsw i32 %56, 131072, !dbg !12750
  %58 = lshr exact i32 %57, 16, !dbg !12751
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12752
  store i32 %58, i32* %59, align 4, !dbg !12753
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12754
  %61 = lshr i32 %60, 24, !dbg !12755
  %62 = and i32 %61, 15, !dbg !12755
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12756
  store i32 %62, i32* %63, align 4, !dbg !12757
  ret void, !dbg !12758
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12759 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12763, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata i32* %1, metadata !12764, metadata !DIExpression()), !dbg !12765
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12766
  store i32 15, i32* %3, align 4, !dbg !12767
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12768
  %5 = and i32 %4, 3, !dbg !12769
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12770
  store i32 %5, i32* %6, align 4, !dbg !12771
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12772
  %8 = and i32 %7, 240, !dbg !12773
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12774
  store i32 %8, i32* %9, align 4, !dbg !12775
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12776
  %11 = and i32 %10, 7168, !dbg !12777
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12778
  store i32 %11, i32* %12, align 4, !dbg !12779
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12780
  %14 = lshr i32 %13, 3, !dbg !12781
  %15 = and i32 %14, 7168, !dbg !12781
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12782
  store i32 %15, i32* %16, align 4, !dbg !12783
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12784
  %18 = and i32 %17, 7, !dbg !12785
  store i32 %18, i32* %1, align 4, !dbg !12786
  ret void, !dbg !12787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12788 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12789
  %2 = and i32 %1, 128, !dbg !12789
  %3 = icmp eq i32 %2, 0, !dbg !12789
  br i1 %3, label %5, label %4, !dbg !12791

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12792
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12794
  br label %5, !dbg !12795

5:                                                ; preds = %4, %0
  ret void, !dbg !12796
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12797 {
  ret void, !dbg !12798
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12802, metadata !DIExpression()), !dbg !12803
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12804
  ret void, !dbg !12805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12809, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.value(metadata i32 1000, metadata !12810, metadata !DIExpression()), !dbg !12811
  %2 = udiv i32 %0, 1000, !dbg !12812
  %3 = add nsw i32 %2, -1, !dbg !12813
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12814
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12815
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12816
  ret void, !dbg !12817
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12818 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12820, metadata !DIExpression()), !dbg !12822
  %3 = bitcast i32* %2 to i8*, !dbg !12823
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12823
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12821, metadata !DIExpression()), !dbg !12824
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12825
  store volatile i32 %4, i32* %2, align 4, !dbg !12824
  %5 = load volatile i32, i32* %2, align 4, !dbg !12826
  %6 = icmp eq i32 %0, -1, !dbg !12827
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12820, metadata !DIExpression()), !dbg !12822
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12822
  call void @llvm.dbg.value(metadata i32 %8, metadata !12820, metadata !DIExpression()), !dbg !12822
  br label %9, !dbg !12829

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12820, metadata !DIExpression()), !dbg !12822
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12830
  call void @llvm.dbg.value(metadata i32 undef, metadata !12820, metadata !DIExpression()), !dbg !12822
  %12 = shl i32 %11, 15, !dbg !12822
  %13 = ashr i32 %12, 31, !dbg !12822
  %14 = add i32 %13, %10, !dbg !12822
  call void @llvm.dbg.value(metadata i32 %14, metadata !12820, metadata !DIExpression()), !dbg !12822
  %15 = icmp eq i32 %14, 0, !dbg !12829
  br i1 %15, label %16, label %9, !dbg !12829

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12833
  ret void, !dbg !12833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12836, metadata !DIExpression()), !dbg !12837
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12838
  ret void, !dbg !12839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12845, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata i32 0, metadata !12848, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata i32 0, metadata !12849, metadata !DIExpression()), !dbg !12850
  %2 = icmp eq i32 %0, 0, !dbg !12851
  br i1 %2, label %50, label %3, !dbg !12853

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12854
  %5 = icmp eq i32 %4, 49152, !dbg !12857
  br i1 %5, label %6, label %15, !dbg !12858

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12848, metadata !DIExpression()), !dbg !12850
  %7 = add i32 %0, -64000001, !dbg !12859
  %8 = icmp ult i32 %7, 26000000, !dbg !12859
  br i1 %8, label %15, label %9, !dbg !12859

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12862
  %11 = select i1 %10, i32 0, i32 3, !dbg !12864
  call void @llvm.dbg.value(metadata i32 %11, metadata !12848, metadata !DIExpression()), !dbg !12850
  %12 = add i32 %0, -30000001, !dbg !12865
  %13 = icmp ult i32 %12, 60000000, !dbg !12865
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12865
  call void @llvm.dbg.value(metadata i32 %14, metadata !12848, metadata !DIExpression()), !dbg !12850
  br label %15, !dbg !12865

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12850
  call void @llvm.dbg.value(metadata i32 %16, metadata !12848, metadata !DIExpression()), !dbg !12850
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12868
  %18 = icmp eq i32 %17, 32768, !dbg !12870
  br i1 %18, label %19, label %27, !dbg !12871

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !12872
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !12875
  br i1 %22, label %27, label %23, !dbg !12875

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !12876
  %25 = and i1 %24, %21, !dbg !12879
  %26 = select i1 %25, i32 1, i32 %16, !dbg !12879
  call void @llvm.dbg.value(metadata i32 %26, metadata !12848, metadata !DIExpression()), !dbg !12850
  br label %27, !dbg !12879

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !12880
  call void @llvm.dbg.value(metadata i32 %28, metadata !12848, metadata !DIExpression()), !dbg !12850
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12881
  %30 = icmp eq i32 %29, 16384, !dbg !12883
  br i1 %30, label %31, label %39, !dbg !12884

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !12885
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !12888
  br i1 %34, label %39, label %35, !dbg !12888

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !12889
  %37 = select i1 %36, i1 %33, i1 false, !dbg !12892
  %38 = select i1 %37, i32 1, i32 %28, !dbg !12892
  call void @llvm.dbg.value(metadata i32 %38, metadata !12848, metadata !DIExpression()), !dbg !12850
  br label %39, !dbg !12892

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !12880
  call void @llvm.dbg.value(metadata i32 %40, metadata !12848, metadata !DIExpression()), !dbg !12850
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !12893
  call void @llvm.dbg.value(metadata i32 2, metadata !12846, metadata !DIExpression()), !dbg !12850
  br label %41, !dbg !12894

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !12880
  call void @llvm.dbg.value(metadata i32 %42, metadata !12846, metadata !DIExpression()), !dbg !12850
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12895
  call void @llvm.dbg.value(metadata i32 %43, metadata !12847, metadata !DIExpression()), !dbg !12850
  %44 = add nsw i32 %42, -1, !dbg !12897
  call void @llvm.dbg.value(metadata i32 %44, metadata !12846, metadata !DIExpression()), !dbg !12850
  %45 = icmp ne i32 %43, %40, !dbg !12898
  %46 = icmp ne i32 %44, 0, !dbg !12899
  %47 = select i1 %45, i1 %46, i1 false, !dbg !12899
  br i1 %47, label %41, label %48, !dbg !12900, !llvm.loop !12901

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12903
  call void @llvm.dbg.value(metadata i32 %51, metadata !12849, metadata !DIExpression()), !dbg !12850
  ret i32 %51, !dbg !12904
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12905 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12907
  %2 = and i32 %1, 49152, !dbg !12907
  ret i32 %2, !dbg !12908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12911, metadata !DIExpression()), !dbg !12912
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12913
  %3 = and i32 %2, -8, !dbg !12913
  %4 = or i32 %3, %0, !dbg !12913
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12913
  ret void, !dbg !12914
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12915 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12916
  %2 = and i32 %1, 7, !dbg !12916
  ret i32 %2, !dbg !12917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12918 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12936, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12937, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata i32 0, metadata !12938, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata i32 0, metadata !12939, metadata !DIExpression()), !dbg !12940
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12941
  %4 = icmp eq i32 %3, 0, !dbg !12943
  br i1 %4, label %5, label %21, !dbg !12944

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !12945
  call void @llvm.dbg.value(metadata i32 %6, metadata !12939, metadata !DIExpression()), !dbg !12940
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.94() #26, !dbg !12947
  %8 = icmp eq i32 %7, 1, !dbg !12949
  br i1 %8, label %13, label %9, !dbg !12950

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.95() #26, !dbg !12951
  br label %10, !dbg !12953

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.94() #26, !dbg !12954
  %12 = icmp eq i32 %11, 1, !dbg !12955
  br i1 %12, label %13, label %10, !dbg !12953, !llvm.loop !12956

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12958
  %15 = load i32, i32* %14, align 4, !dbg !12958
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12959
  %17 = load i32, i32* %16, align 4, !dbg !12959
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12960
  %19 = load i32, i32* %18, align 4, !dbg !12960
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12961
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !12962
  call void @llvm.dbg.value(metadata i32 %20, metadata !12938, metadata !DIExpression()), !dbg !12940
  br label %21, !dbg !12963

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12964
  call void @llvm.dbg.value(metadata i32 %22, metadata !12938, metadata !DIExpression()), !dbg !12940
  ret i32 %22, !dbg !12965
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12966 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12970, metadata !DIExpression()), !dbg !12971
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.98() #26, !dbg !12972
  %2 = icmp ne i32 %1, 0, !dbg !12974
  call void @llvm.dbg.value(metadata i1 %2, metadata !12970, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12971
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !12975
  %4 = icmp ne i32 %3, 0, !dbg !12977
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12978
  %6 = zext i1 %5 to i32, !dbg !12978
  call void @llvm.dbg.value(metadata i32 %6, metadata !12970, metadata !DIExpression()), !dbg !12971
  ret i32 %6, !dbg !12979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12984, metadata !DIExpression()), !dbg !12987
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12985, metadata !DIExpression()), !dbg !12987
  call void @llvm.dbg.value(metadata i32 0, metadata !12986, metadata !DIExpression()), !dbg !12987
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12988
  %4 = load i32, i32* %3, align 4, !dbg !12988
  %5 = and i32 %4, 63, !dbg !12989
  %6 = udiv i32 %0, %5, !dbg !12990
  call void @llvm.dbg.value(metadata i32 %6, metadata !12986, metadata !DIExpression()), !dbg !12987
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12991
  %8 = load i32, i32* %7, align 4, !dbg !12991
  %9 = and i32 %8, 511, !dbg !12992
  %10 = mul i32 %9, %6, !dbg !12993
  call void @llvm.dbg.value(metadata i32 %10, metadata !12986, metadata !DIExpression()), !dbg !12987
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12994
  %12 = load i32, i32* %11, align 4, !dbg !12994
  %13 = lshr i32 %12, 15, !dbg !12995
  %14 = and i32 %13, 131070, !dbg !12995
  %15 = add nuw nsw i32 %14, 2, !dbg !12995
  %16 = udiv i32 %10, %15, !dbg !12996
  call void @llvm.dbg.value(metadata i32 %16, metadata !12986, metadata !DIExpression()), !dbg !12987
  ret i32 %16, !dbg !12997
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.94() unnamed_addr #16 !dbg !12998 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12999
  %2 = lshr i32 %1, 1, !dbg !13000
  %3 = and i32 %2, 1, !dbg !13000
  ret i32 %3, !dbg !13001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.95() unnamed_addr #15 !dbg !13002 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13003
  %2 = or i32 %1, 1, !dbg !13003
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13003
  ret void, !dbg !13004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13007, metadata !DIExpression()), !dbg !13011
  call void @llvm.dbg.value(metadata i32 %1, metadata !13008, metadata !DIExpression()), !dbg !13011
  call void @llvm.dbg.value(metadata i32 %2, metadata !13009, metadata !DIExpression()), !dbg !13011
  call void @llvm.dbg.value(metadata i32 %3, metadata !13010, metadata !DIExpression()), !dbg !13011
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13012
  %6 = and i32 %5, -4227072, !dbg !13012
  %7 = or i32 %1, %0, !dbg !13012
  %8 = shl i32 %2, 6, !dbg !13012
  %9 = or i32 %7, %8, !dbg !13012
  %10 = or i32 %9, %6, !dbg !13012
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13012
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13013
  %12 = and i32 %11, -196609, !dbg !13013
  %13 = or i32 %12, %3, !dbg !13013
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13013
  ret void, !dbg !13014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13019, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13020, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 0, metadata !13021, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 0, metadata !13022, metadata !DIExpression()), !dbg !13023
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13024
  %4 = load i32, i32* %3, align 4, !dbg !13024
  %5 = lshr i32 %4, 4, !dbg !13024
  %6 = and i32 %5, 15, !dbg !13024
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13024
  %8 = load i8, i8* %7, align 1, !dbg !13024
  %9 = zext i8 %8 to i32, !dbg !13024
  %10 = lshr i32 %0, %9, !dbg !13024
  call void @llvm.dbg.value(metadata i32 %10, metadata !13022, metadata !DIExpression()), !dbg !13023
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13025
  %12 = icmp ult i32 %11, %10, !dbg !13027
  br i1 %12, label %13, label %16, !dbg !13028

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13029
  call void @llvm.dbg.value(metadata i32 %14, metadata !13021, metadata !DIExpression()), !dbg !13023
  %15 = icmp eq i32 %14, 0, !dbg !13031
  br i1 %15, label %16, label %30, !dbg !13033

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.97() #26, !dbg !13034
  br label %17, !dbg !13036

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.98() #26, !dbg !13037
  %19 = icmp eq i32 %18, 1, !dbg !13038
  br i1 %19, label %20, label %17, !dbg !13036, !llvm.loop !13039

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13041
  tail call fastcc void @LL_RCC_SetAHBPrescaler.99(i32 noundef %21) #26, !dbg !13042
  tail call fastcc void @LL_RCC_SetSysClkSource.100() #26, !dbg !13043
  br label %22, !dbg !13044

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.101() #26, !dbg !13045
  %24 = icmp eq i32 %23, 8, !dbg !13046
  br i1 %24, label %25, label %22, !dbg !13044, !llvm.loop !13047

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13049
  %27 = load i32, i32* %26, align 4, !dbg !13049
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.102(i32 noundef %27) #26, !dbg !13050
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13051
  %29 = load i32, i32* %28, align 4, !dbg !13051
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.103(i32 noundef %29) #26, !dbg !13052
  br label %30, !dbg !13053

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13054
  %33 = icmp ugt i32 %32, %10, !dbg !13056
  br i1 %33, label %34, label %36, !dbg !13057

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13058
  call void @llvm.dbg.value(metadata i32 %35, metadata !13021, metadata !DIExpression()), !dbg !13023
  br label %36, !dbg !13060

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13023
  call void @llvm.dbg.value(metadata i32 %37, metadata !13021, metadata !DIExpression()), !dbg !13023
  %38 = icmp eq i32 %37, 0, !dbg !13061
  br i1 %38, label %39, label %40, !dbg !13063

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13064
  br label %40, !dbg !13066

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.97() unnamed_addr #15 !dbg !13068 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13069
  %2 = or i32 %1, 16777216, !dbg !13069
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13069
  ret void, !dbg !13070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.98() unnamed_addr #16 !dbg !13071 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13072
  %2 = lshr i32 %1, 25, !dbg !13073
  %3 = and i32 %2, 1, !dbg !13073
  ret i32 %3, !dbg !13074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.99(i32 noundef %0) unnamed_addr #15 !dbg !13075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13077, metadata !DIExpression()), !dbg !13078
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13079
  %3 = and i32 %2, -241, !dbg !13079
  %4 = or i32 %3, %0, !dbg !13079
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13079
  ret void, !dbg !13080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.100() unnamed_addr #15 !dbg !13081 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13083, metadata !DIExpression()), !dbg !13084
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13085
  %2 = and i32 %1, -4, !dbg !13085
  %3 = or i32 %2, 2, !dbg !13085
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13085
  ret void, !dbg !13086
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.101() unnamed_addr #16 !dbg !13087 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13088
  %2 = and i32 %1, 12, !dbg !13088
  ret i32 %2, !dbg !13089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.102(i32 noundef %0) unnamed_addr #15 !dbg !13090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13092, metadata !DIExpression()), !dbg !13093
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13094
  %3 = and i32 %2, -7169, !dbg !13094
  %4 = or i32 %3, %0, !dbg !13094
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13094
  ret void, !dbg !13095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.103(i32 noundef %0) unnamed_addr #15 !dbg !13096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13098, metadata !DIExpression()), !dbg !13099
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13100
  %3 = and i32 %2, -57345, !dbg !13100
  %4 = or i32 %3, %0, !dbg !13100
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13100
  ret void, !dbg !13101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !13102 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13103
  %2 = lshr i32 %1, 27, !dbg !13104
  %3 = and i32 %2, 1, !dbg !13104
  ret i32 %3, !dbg !13105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13110, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata i32 %1, metadata !13111, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13112, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13113, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata i32 0, metadata !13114, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata i32 0, metadata !13115, metadata !DIExpression()), !dbg !13116
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13117
  %6 = icmp eq i32 %5, 0, !dbg !13119
  br i1 %6, label %7, label %27, !dbg !13120

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13121
  call void @llvm.dbg.value(metadata i32 %8, metadata !13115, metadata !DIExpression()), !dbg !13116
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.104() #26, !dbg !13123
  %10 = icmp eq i32 %9, 1, !dbg !13125
  br i1 %10, label %19, label %11, !dbg !13126

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13127
  br i1 %12, label %13, label %14, !dbg !13130

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13131
  br label %15, !dbg !13133

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.105() #26, !dbg !13134
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.106() #26, !dbg !13136
  br label %16, !dbg !13137

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.104() #26, !dbg !13138
  %18 = icmp eq i32 %17, 1, !dbg !13139
  br i1 %18, label %19, label %16, !dbg !13137, !llvm.loop !13140

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13142
  %21 = load i32, i32* %20, align 4, !dbg !13142
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13143
  %23 = load i32, i32* %22, align 4, !dbg !13143
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13144
  %25 = load i32, i32* %24, align 4, !dbg !13144
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13145
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13146
  call void @llvm.dbg.value(metadata i32 %26, metadata !13114, metadata !DIExpression()), !dbg !13116
  br label %27, !dbg !13147

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13148
  call void @llvm.dbg.value(metadata i32 %28, metadata !13114, metadata !DIExpression()), !dbg !13116
  ret i32 %28, !dbg !13149
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.104() unnamed_addr #16 !dbg !13150 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13151
  %2 = lshr i32 %1, 17, !dbg !13152
  %3 = and i32 %2, 1, !dbg !13152
  ret i32 %3, !dbg !13153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13154 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13155
  %2 = or i32 %1, 262144, !dbg !13155
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13155
  ret void, !dbg !13156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.105() unnamed_addr #15 !dbg !13157 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13158
  %2 = and i32 %1, -262145, !dbg !13158
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13158
  ret void, !dbg !13159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.106() unnamed_addr #15 !dbg !13160 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13161
  %2 = or i32 %1, 65536, !dbg !13161
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13161
  ret void, !dbg !13162
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13163 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13166, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13166, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13166, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13182
  ret void, !dbg !13183
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13184 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13188, metadata !DIExpression()), !dbg !13190
  %2 = icmp eq i8* %0, null, !dbg !13191
  br i1 %2, label %29, label %3, !dbg !13193

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13194
  %5 = icmp eq i8 %4, 0, !dbg !13195
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13196
  br i1 %6, label %29, label %8, !dbg !13196

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13189, metadata !DIExpression()), !dbg !13190
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13197

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13189, metadata !DIExpression()), !dbg !13190
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13199
  br i1 %10, label %11, label %15, !dbg !13204

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13205
  %13 = load i8*, i8** %12, align 4, !dbg !13205
  %14 = icmp eq i8* %13, %0, !dbg !13206
  br i1 %14, label %29, label %15, !dbg !13207

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13208
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13189, metadata !DIExpression()), !dbg !13190
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13209
  br i1 %17, label %7, label %8, !dbg !13210, !llvm.loop !13211

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13189, metadata !DIExpression()), !dbg !13190
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13213
  br i1 %20, label %21, label %26, !dbg !13217

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13218
  %23 = load i8*, i8** %22, align 4, !dbg !13218
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13219
  %25 = icmp eq i32 %24, 0, !dbg !13220
  br i1 %25, label %29, label %26, !dbg !13221

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13222
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13189, metadata !DIExpression()), !dbg !13190
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13223
  br i1 %28, label %29, label %18, !dbg !13197, !llvm.loop !13224

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13190
  ret %struct.device* %30, !dbg !13226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13227 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %2 = icmp eq %struct.device* %0, null, !dbg !13233
  br i1 %2, label %14, label %3, !dbg !13235

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13236
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13236
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13237
  %7 = load i8, i8* %6, align 1, !dbg !13237
  %8 = and i8 %7, 1, !dbg !13237
  %9 = icmp eq i8 %8, 0, !dbg !13237
  br i1 %9, label %14, label %10, !dbg !13238

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13239
  %12 = load i8, i8* %11, align 1, !dbg !13239
  %13 = icmp eq i8 %12, 0, !dbg !13240
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13232
  ret i1 %15, !dbg !13241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13242 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13247, metadata !DIExpression()), !dbg !13248
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13249
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13251 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13259, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13260, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.value(metadata i8* %2, metadata !13261, metadata !DIExpression()), !dbg !13264
  %5 = bitcast i32* %4 to i8*, !dbg !13265
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13265
  call void @llvm.dbg.value(metadata i32 0, metadata !13262, metadata !DIExpression()), !dbg !13264
  store i32 0, i32* %4, align 4, !dbg !13266
  call void @llvm.dbg.value(metadata i32* %4, metadata !13262, metadata !DIExpression(DW_OP_deref)), !dbg !13264
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13267
  call void @llvm.dbg.value(metadata i16* %6, metadata !13263, metadata !DIExpression()), !dbg !13264
  %7 = load i32, i32* %4, align 4, !dbg !13268
  call void @llvm.dbg.value(metadata i32 %7, metadata !13262, metadata !DIExpression()), !dbg !13264
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13270
  ret i32 %8, !dbg !13271
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13272 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13276, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i32* %1, metadata !13277, metadata !DIExpression()), !dbg !13282
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13283
  %4 = load i16*, i16** %3, align 4, !dbg !13283
  call void @llvm.dbg.value(metadata i16* %4, metadata !13278, metadata !DIExpression()), !dbg !13282
  %5 = icmp eq i16* %4, null, !dbg !13284
  br i1 %5, label %14, label %6, !dbg !13285

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13286
  call void @llvm.dbg.value(metadata i32 %7, metadata !13279, metadata !DIExpression()), !dbg !13286
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13287
  %9 = load i16, i16* %8, align 2, !dbg !13287
  %10 = add i16 %9, -32767, !dbg !13288
  %11 = icmp ult i16 %10, 2, !dbg !13288
  %12 = add i32 %7, 1, !dbg !13289
  call void @llvm.dbg.value(metadata i32 %12, metadata !13279, metadata !DIExpression()), !dbg !13286
  br i1 %11, label %13, label %6, !dbg !13288, !llvm.loop !13291

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13294
  br label %14, !dbg !13295

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13297 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13301, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata i32 %1, metadata !13302, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13303, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata i8* %3, metadata !13304, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata i32 0, metadata !13305, metadata !DIExpression()), !dbg !13313
  %5 = icmp eq i32 %1, 0, !dbg !13314
  br i1 %5, label %16, label %8, !dbg !13315

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13305, metadata !DIExpression()), !dbg !13313
  %7 = icmp eq i32 %15, %1, !dbg !13314
  br i1 %7, label %16, label %8, !dbg !13315, !llvm.loop !13316

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13305, metadata !DIExpression()), !dbg !13313
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13318
  %11 = load i16, i16* %10, align 2, !dbg !13318
  call void @llvm.dbg.value(metadata i16 %11, metadata !13307, metadata !DIExpression()), !dbg !13319
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13320
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13310, metadata !DIExpression()), !dbg !13319
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13321
  call void @llvm.dbg.value(metadata i32 %13, metadata !13311, metadata !DIExpression()), !dbg !13319
  %14 = icmp slt i32 %13, 0, !dbg !13322
  %15 = add nuw i32 %9, 1, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %15, metadata !13305, metadata !DIExpression()), !dbg !13313
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13326 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13330, metadata !DIExpression()), !dbg !13333
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13331, metadata !DIExpression()), !dbg !13333
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13332, metadata !DIExpression()), !dbg !13333
  %2 = sext i16 %0 to i32, !dbg !13334
  %3 = icmp slt i16 %0, 1, !dbg !13336
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13337
  %6 = add nsw i32 %2, -1, !dbg !13337
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13337
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13337
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13331, metadata !DIExpression()), !dbg !13333
  ret %struct.device* %8, !dbg !13338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13339 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13341, metadata !DIExpression()), !dbg !13346
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13342, metadata !DIExpression()), !dbg !13346
  call void @llvm.dbg.value(metadata i8* %2, metadata !13343, metadata !DIExpression()), !dbg !13346
  %5 = bitcast i32* %4 to i8*, !dbg !13347
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13347
  call void @llvm.dbg.value(metadata i32 0, metadata !13344, metadata !DIExpression()), !dbg !13346
  store i32 0, i32* %4, align 4, !dbg !13348
  call void @llvm.dbg.value(metadata i32* %4, metadata !13344, metadata !DIExpression(DW_OP_deref)), !dbg !13346
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13349
  call void @llvm.dbg.value(metadata i16* %6, metadata !13345, metadata !DIExpression()), !dbg !13346
  %7 = load i32, i32* %4, align 4, !dbg !13350
  call void @llvm.dbg.value(metadata i32 %7, metadata !13344, metadata !DIExpression()), !dbg !13346
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13351
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13352
  ret i32 %8, !dbg !13353
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13354 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13356, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata i32* %1, metadata !13357, metadata !DIExpression()), !dbg !13361
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13362
  %4 = load i16*, i16** %3, align 4, !dbg !13362
  call void @llvm.dbg.value(metadata i16* %4, metadata !13358, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata i32 0, metadata !13359, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata i32 0, metadata !13360, metadata !DIExpression()), !dbg !13361
  %5 = icmp eq i16* %4, null, !dbg !13363
  br i1 %5, label %22, label %6, !dbg !13365

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13359, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.value(metadata i16* %8, metadata !13358, metadata !DIExpression()), !dbg !13361
  %9 = load i16, i16* %8, align 2, !dbg !13366
  %10 = icmp eq i16 %9, -32768, !dbg !13370
  call void @llvm.dbg.value(metadata i32 undef, metadata !13359, metadata !DIExpression()), !dbg !13361
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13371
  call void @llvm.dbg.value(metadata i16* %11, metadata !13358, metadata !DIExpression()), !dbg !13361
  %12 = zext i1 %10 to i32, !dbg !13372
  %13 = add i32 %7, %12, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %13, metadata !13359, metadata !DIExpression()), !dbg !13361
  %14 = icmp eq i32 %13, 2, !dbg !13373
  br i1 %14, label %15, label %6, !dbg !13374

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13361
  call void @llvm.dbg.value(metadata i32 %16, metadata !13360, metadata !DIExpression()), !dbg !13361
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13375
  %18 = load i16, i16* %17, align 2, !dbg !13375
  %19 = icmp eq i16 %18, 32767, !dbg !13376
  %20 = add i32 %16, 1, !dbg !13377
  call void @llvm.dbg.value(metadata i32 %20, metadata !13360, metadata !DIExpression()), !dbg !13361
  br i1 %19, label %21, label %15, !dbg !13379, !llvm.loop !13380

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13382
  br label %22, !dbg !13383

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13384
  call void @llvm.dbg.value(metadata i16* %23, metadata !13358, metadata !DIExpression()), !dbg !13361
  ret i16* %23, !dbg !13385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13386 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13387
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13388
  ret i32* %2, !dbg !13389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13390 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13538, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13539, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13540, metadata !DIExpression()), !dbg !13541
  ret void, !dbg !13542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13547, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.value(metadata i32 %1, metadata !13548, metadata !DIExpression()), !dbg !13549
  ret void, !dbg !13550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13551 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13555, metadata !DIExpression()), !dbg !13557
  call void @llvm.dbg.value(metadata i32 %1, metadata !13556, metadata !DIExpression()), !dbg !13557
  ret void, !dbg !13558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13563, metadata !DIExpression()), !dbg !13565
  call void @llvm.dbg.value(metadata i8* %1, metadata !13564, metadata !DIExpression()), !dbg !13565
  ret i32 -134, !dbg !13566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13571, metadata !DIExpression()), !dbg !13573
  call void @llvm.dbg.value(metadata i8* %1, metadata !13572, metadata !DIExpression()), !dbg !13573
  ret i32 -134, !dbg !13574
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13578, metadata !DIExpression()), !dbg !13579
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13580, !srcloc !13586
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #24, !dbg !13587
  call void @llvm.dbg.value(metadata i32 undef, metadata !13584, metadata !DIExpression()) #24, !dbg !13587
  br label %3, !dbg !13588

3:                                                ; preds = %3, %1
  br label %3, !dbg !13589, !llvm.loop !13592
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13599, metadata !DIExpression()), !dbg !13601
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13600, metadata !DIExpression()), !dbg !13601
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13602
  unreachable, !dbg !13602
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13605, metadata !DIExpression()), !dbg !13606
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13607
  unreachable, !dbg !13607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13610, metadata !DIExpression()), !dbg !13614
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13611, metadata !DIExpression()), !dbg !13614
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13615, !srcloc !13586
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #24, !dbg !13617
  call void @llvm.dbg.value(metadata i32 undef, metadata !13584, metadata !DIExpression()) #24, !dbg !13617
  call void @llvm.dbg.value(metadata i32 undef, metadata !13612, metadata !DIExpression()), !dbg !13614
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13613, metadata !DIExpression()), !dbg !13614
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13618
  br i1 %4, label %6, label %5, !dbg !13620

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13621
  br label %7, !dbg !13622

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13621
  br label %7, !dbg !13625

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13615
  call void @llvm.dbg.value(metadata i32 %8, metadata !13583, metadata !DIExpression()) #24, !dbg !13617
  call void @llvm.dbg.value(metadata i32 %8, metadata !13612, metadata !DIExpression()), !dbg !13614
  %9 = tail call fastcc %struct.k_thread* @k_current_get.115() #27, !dbg !13627
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13613, metadata !DIExpression()), !dbg !13614
  call void @llvm.dbg.value(metadata i32 undef, metadata !13628, metadata !DIExpression()) #24, !dbg !13631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13633, !srcloc !13634
  tail call fastcc void @k_thread_abort.116(%struct.k_thread* noundef %9) #26, !dbg !13635
  ret void, !dbg !13638
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.115() unnamed_addr #9 !dbg !13639 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.117() #27, !dbg !13643
  ret %struct.k_thread* %1, !dbg !13644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.116(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13645 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13649, metadata !DIExpression()), !dbg !13650
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13651, !srcloc !13653
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13654
  ret void, !dbg !13655
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.117() unnamed_addr #9 !dbg !13656 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13657, !srcloc !13659
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13660
  ret %struct.k_thread* %1, !dbg !13661
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13666, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i32 %1, metadata !13667, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i32 %2, metadata !13668, metadata !DIExpression()), !dbg !13669
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13670
  ret void, !dbg !13671
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13672 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13676, metadata !DIExpression()), !dbg !13679
  call void @llvm.dbg.value(metadata i8* %1, metadata !13677, metadata !DIExpression()), !dbg !13679
  call void @llvm.dbg.value(metadata i32 %2, metadata !13678, metadata !DIExpression()), !dbg !13679
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13680
  ret void, !dbg !13681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13682 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13683
  ret void, !dbg !13684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13687, metadata !DIExpression()), !dbg !13688
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13689
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13690
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13691
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13692
  %4 = trunc i32 %0 to i8, !dbg !13693
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13694
  store i8 %4, i8* %5, align 4, !dbg !13695
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13696
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13697
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13698
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13699
  store i8* %8, i8** %9, align 4, !dbg !13700
  ret void, !dbg !13701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13704, metadata !DIExpression()), !dbg !13710
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13711
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13705, metadata !DIExpression()), !dbg !13710
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13712
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13706, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata i8* null, metadata !13709, metadata !DIExpression()), !dbg !13710
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13713
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13714
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13715
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13716
  ret void, !dbg !13717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13718 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13722, metadata !DIExpression()), !dbg !13723
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13724
  ret i8* %2, !dbg !13725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13731, metadata !DIExpression()), !dbg !13732
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13733
  %3 = load i8, i8* %2, align 1, !dbg !13734
  %4 = and i8 %3, -5, !dbg !13734
  store i8 %4, i8* %2, align 1, !dbg !13734
  ret void, !dbg !13735
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13736 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13739
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13740
  %3 = ptrtoint i8* %2 to i32, !dbg !13749
  %4 = add i32 %3, 2048, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %4, metadata !13744, metadata !DIExpression()) #24, !dbg !13751
  call void @llvm.dbg.value(metadata i32 %4, metadata !13752, metadata !DIExpression()) #24, !dbg !13755
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13757, !srcloc !13758
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13759
  %6 = or i32 %5, 512, !dbg !13759
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13759
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -2, i32 noundef 255) #25, !dbg !13760
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -5, i32 noundef 0) #25, !dbg !13763
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -12, i32 noundef 0) #25, !dbg !13764
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -11, i32 noundef 0) #25, !dbg !13765
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -10, i32 noundef 0) #25, !dbg !13766
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -4, i32 noundef 0) #25, !dbg !13767
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13768
  %8 = or i32 %7, 458752, !dbg !13768
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13768
  tail call void @z_arm_fault_init() #25, !dbg !13769
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13770
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13771
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13774
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13775
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13776
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13777
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13777
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13738, metadata !DIExpression()), !dbg !13778
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13779
  call void @z_device_state_init() #25, !dbg !13780
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13781
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13782
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13783
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13784
  unreachable, !dbg !13784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2186, metadata !DIExpression()), !dbg !13785
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13786
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13786
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2187, metadata !DIExpression()), !dbg !13785
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2187, metadata !DIExpression()), !dbg !13785
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13787
  br i1 %7, label %8, label %35, !dbg !13788

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2187, metadata !DIExpression()), !dbg !13785
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13789
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13789
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2197, metadata !DIExpression()), !dbg !13790
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13791
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13791
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13792
  call void @llvm.dbg.value(metadata i32 %14, metadata !2201, metadata !DIExpression()), !dbg !13790
  %15 = icmp eq %struct.device* %11, null, !dbg !13793
  br i1 %15, label %32, label %16, !dbg !13795

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13796
  br i1 %17, label %26, label %18, !dbg !13799

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13800
  call void @llvm.dbg.value(metadata i32 %19, metadata !2201, metadata !DIExpression()), !dbg !13790
  %20 = icmp ult i32 %19, 255, !dbg !13802
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13802
  call void @llvm.dbg.value(metadata i32 %21, metadata !2201, metadata !DIExpression()), !dbg !13790
  %22 = trunc i32 %21 to i8, !dbg !13803
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13804
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13804
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13805
  store i8 %22, i8* %25, align 1, !dbg !13806
  br label %26, !dbg !13807

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13808
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13808
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13809
  %30 = load i8, i8* %29, align 1, !dbg !13810
  %31 = or i8 %30, 1, !dbg !13810
  store i8 %31, i8* %29, align 1, !dbg !13810
  br label %32, !dbg !13811

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13812
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2187, metadata !DIExpression()), !dbg !13785
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13787
  br i1 %34, label %8, label %35, !dbg !13788, !llvm.loop !13813

35:                                               ; preds = %32, %1
  ret void, !dbg !13815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.124(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13818, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata i32 %1, metadata !13819, metadata !DIExpression()), !dbg !13820
  %3 = trunc i32 %1 to i8, !dbg !13821
  %4 = shl i8 %3, 4, !dbg !13821
  %5 = and i32 %0, 15, !dbg !13824
  %6 = add nsw i32 %5, -4, !dbg !13825
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13826
  store volatile i8 %4, i8* %7, align 1, !dbg !13827
  ret void, !dbg !13828
}

; Function Attrs: optsize
declare !dbg !13829 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13833, metadata !DIExpression()), !dbg !13834
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13835
  store i8 1, i8* %2, align 1, !dbg !13836
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13837
  store i8 1, i8* %3, align 4, !dbg !13838
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13839
  store i32 0, i32* %4, align 4, !dbg !13840
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13841
  store i32 0, i32* %5, align 4, !dbg !13842
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13843
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13844
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13845
  ret void, !dbg !13846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13847 {
  tail call void @z_sched_init() #25, !dbg !13852
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13853
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0)) #25, !dbg !13854
  call void @llvm.dbg.value(metadata i8* %1, metadata !13851, metadata !DIExpression()), !dbg !13855
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13856
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13857
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13858
  ret i8* %1, !dbg !13859
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13860 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13864, metadata !DIExpression()), !dbg !13865
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13866
  unreachable, !dbg !13867
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13868 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13870, metadata !DIExpression()), !dbg !13873
  call void @llvm.dbg.value(metadata i8* %1, metadata !13871, metadata !DIExpression()), !dbg !13873
  call void @llvm.dbg.value(metadata i8* %2, metadata !13872, metadata !DIExpression()), !dbg !13873
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13874
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13875
  tail call void @boot_banner() #25, !dbg !13876
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13877
  tail call void @z_init_static_threads() #25, !dbg !13878
  tail call void @main() #25, !dbg !13879
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13880
  %5 = and i8 %4, -2, !dbg !13880
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13880
  ret void, !dbg !13881
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13882 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13892, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata i8* %1, metadata !13893, metadata !DIExpression()), !dbg !13894
  ret void, !dbg !13895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13896 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13898, metadata !DIExpression()), !dbg !13900
  call void @llvm.dbg.value(metadata i8* %1, metadata !13899, metadata !DIExpression()), !dbg !13900
  ret void, !dbg !13901
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13902 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13903, !srcloc !13910
  call void @llvm.dbg.value(metadata i32 %1, metadata !13906, metadata !DIExpression()) #24, !dbg !13911
  %2 = icmp ne i32 %1, 0, !dbg !13912
  ret i1 %2, !dbg !13913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13914 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13915
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13916
  %3 = load i8, i8* %2, align 4, !dbg !13917
  %4 = or i8 %3, 1, !dbg !13917
  store i8 %4, i8* %2, align 4, !dbg !13917
  ret void, !dbg !13918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13919 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13920
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13921
  %3 = load i8, i8* %2, align 4, !dbg !13922
  %4 = and i8 %3, -2, !dbg !13922
  store i8 %4, i8* %2, align 4, !dbg !13922
  ret void, !dbg !13923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13924 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13925
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13926
  %3 = load i8, i8* %2, align 4, !dbg !13926
  %4 = and i8 %3, 1, !dbg !13927
  %5 = icmp ne i8 %4, 0, !dbg !13928
  ret i1 %5, !dbg !13929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13930 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13934, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i8* %1, metadata !13935, metadata !DIExpression()), !dbg !13936
  ret i32 -88, !dbg !13937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13938 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13942, metadata !DIExpression()), !dbg !13943
  ret i8* null, !dbg !13944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13949, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i8* %1, metadata !13950, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i32 %2, metadata !13951, metadata !DIExpression()), !dbg !13952
  ret i32 -88, !dbg !13953
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2322, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i8* %1, metadata !2323, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 %2, metadata !2324, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 0, metadata !2325, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i8 undef, metadata !2327, metadata !DIExpression()), !dbg !13954
  %4 = icmp eq i8* %1, null, !dbg !13955
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13957
  br i1 %6, label %46, label %7, !dbg !13957

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13958
  %9 = load i8, i8* %8, align 1, !dbg !13958
  call void @llvm.dbg.value(metadata i8 %9, metadata !2327, metadata !DIExpression()), !dbg !13954
  %10 = add i32 %2, -1, !dbg !13959
  call void @llvm.dbg.value(metadata i32 %10, metadata !2324, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i8 0, metadata !2328, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata i8 %9, metadata !2327, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 0, metadata !2325, metadata !DIExpression()), !dbg !13954
  %11 = icmp eq i8 %9, 0, !dbg !13961
  br i1 %11, label %12, label %15, !dbg !13963

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13964
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13965
  store i8 0, i8* %14, align 1, !dbg !13966
  br label %46, !dbg !13967

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2328, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata i8 %17, metadata !2327, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 %18, metadata !2325, metadata !DIExpression()), !dbg !13954
  %19 = zext i8 %17 to i32, !dbg !13968
  %20 = zext i8 %16 to i32, !dbg !13969
  %21 = shl nuw i32 1, %20, !dbg !13969
  call void @llvm.dbg.value(metadata i32 %21, metadata !2326, metadata !DIExpression()), !dbg !13954
  %22 = and i32 %21, %19, !dbg !13971
  %23 = icmp eq i32 %22, 0, !dbg !13973
  br i1 %23, label %42, label %24, !dbg !13974

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13975
  %26 = sub i32 %10, %18, !dbg !13976
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13977
  %28 = load i8*, i8** %27, align 4, !dbg !13977
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13978
  %30 = load i32, i32* %29, align 4, !dbg !13978
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !13979
  %32 = add i32 %31, %18, !dbg !13980
  call void @llvm.dbg.value(metadata i32 %32, metadata !2325, metadata !DIExpression()), !dbg !13954
  %33 = trunc i32 %21 to i8, !dbg !13981
  %34 = xor i8 %33, -1, !dbg !13981
  %35 = and i8 %17, %34, !dbg !13981
  call void @llvm.dbg.value(metadata i8 %35, metadata !2327, metadata !DIExpression()), !dbg !13954
  %36 = icmp eq i8 %35, 0, !dbg !13982
  br i1 %36, label %12, label %37, !dbg !13984

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13985
  %39 = sub i32 %10, %32, !dbg !13987
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !13988
  %41 = add i32 %40, %32, !dbg !13989
  call void @llvm.dbg.value(metadata i32 %41, metadata !2325, metadata !DIExpression()), !dbg !13954
  br label %42, !dbg !13990

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13954
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13954
  call void @llvm.dbg.value(metadata i8 %44, metadata !2327, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 %43, metadata !2325, metadata !DIExpression()), !dbg !13954
  %45 = add i8 %16, 1, !dbg !13991
  call void @llvm.dbg.value(metadata i8 %45, metadata !2328, metadata !DIExpression()), !dbg !13960
  br label %15, !dbg !13963

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.128, i32 0, i32 0), %3 ], !dbg !13954
  ret i8* %47, !dbg !13992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13993 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13997, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata i32 %1, metadata !13998, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata i8* %2, metadata !13999, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata i32 %3, metadata !14000, metadata !DIExpression()), !dbg !14002
  %5 = icmp ult i32 %1, %3, !dbg !14003
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14003
  call void @llvm.dbg.value(metadata i32 %6, metadata !14001, metadata !DIExpression()), !dbg !14002
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14004
  ret i32 %6, !dbg !14005
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14010, metadata !DIExpression()), !dbg !14011
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14012
  ret void, !dbg !14013
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14023, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14024, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i32 %2, metadata !14025, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14026, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i8* %4, metadata !14027, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i8* %5, metadata !14028, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i8* %6, metadata !14029, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i32 %7, metadata !14030, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i32 %8, metadata !14031, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i8* undef, metadata !14032, metadata !DIExpression()), !dbg !14034
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14035
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14036
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14037
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14038
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14039
  call void @llvm.dbg.value(metadata i8* %13, metadata !14033, metadata !DIExpression()), !dbg !14034
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14040
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14041
  store i8* null, i8** %14, align 4, !dbg !14042
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14043
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14043
  br i1 %16, label %20, label %17, !dbg !14045

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14046
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14046
  br label %20, !dbg !14047

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14034
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14048
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14050
  ret i8* %13, !dbg !14051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14052 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14057, metadata !DIExpression()), !dbg !14058
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14059
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14060
  ret void, !dbg !14061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14062 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14067, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %1, metadata !14068, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %2, metadata !14069, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %3, metadata !14070, metadata !DIExpression()), !dbg !14071
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14072
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14073
  %6 = trunc i32 %3 to i8, !dbg !14074
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14075
  store i8 %6, i8* %7, align 4, !dbg !14076
  %8 = trunc i32 %2 to i8, !dbg !14077
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14078
  store i8 %8, i8* %9, align 1, !dbg !14079
  %10 = trunc i32 %1 to i8, !dbg !14080
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14081
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14081
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14081
  store i8 %10, i8* %13, align 2, !dbg !14082
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14083
  store i8 0, i8* %14, align 1, !dbg !14084
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14085
  ret void, !dbg !14086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14091, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14092, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 %2, metadata !14093, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 0, metadata !14098, metadata !DIExpression()), !dbg !14099
  %4 = add i32 %2, 7, !dbg !14100
  %5 = and i32 %4, -8, !dbg !14100
  %6 = add i32 %5, 64, !dbg !14100
  call void @llvm.dbg.value(metadata i32 %6, metadata !14094, metadata !DIExpression()), !dbg !14099
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.138(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14102
  call void @llvm.dbg.value(metadata i8* %7, metadata !14097, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 %5, metadata !14095, metadata !DIExpression()), !dbg !14099
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14103
  call void @llvm.dbg.value(metadata i8* %8, metadata !14096, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 0, metadata !14098, metadata !DIExpression()), !dbg !14099
  %9 = ptrtoint i8* %7 to i32, !dbg !14104
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14105
  store i32 %9, i32* %10, align 4, !dbg !14106
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14107
  store i32 %5, i32* %11, align 4, !dbg !14108
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14109
  store i32 0, i32* %12, align 4, !dbg !14110
  call void @llvm.dbg.value(metadata i8* %8, metadata !14096, metadata !DIExpression()), !dbg !14099
  ret i8* %8, !dbg !14111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.138(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14112 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14116, metadata !DIExpression()), !dbg !14117
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14118
  ret i8* %2, !dbg !14119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14120 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14125, metadata !DIExpression()), !dbg !14126
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14127
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14128
  ret void, !dbg !14129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14130 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14132, metadata !DIExpression()), !dbg !14133
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14134
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14135
  ret void, !dbg !14136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14137 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14141, metadata !DIExpression()), !dbg !14142
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14143
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14144
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14145
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14146
  ret void, !dbg !14147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14153, metadata !DIExpression()), !dbg !14154
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14155
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14156
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14157
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14158
  ret void, !dbg !14159
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14160 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14177, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14168, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14169, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i32 %2, metadata !14170, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14171, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i8* %4, metadata !14172, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i8* %5, metadata !14173, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i8* %6, metadata !14174, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i32 %7, metadata !14175, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i32 %8, metadata !14176, metadata !DIExpression()), !dbg !14178
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14179
  %13 = icmp eq i64 %11, -1, !dbg !14180
  br i1 %13, label %15, label %14, !dbg !14182

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14183
  br label %15, !dbg !14185

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14187 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14192, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14191, metadata !DIExpression()), !dbg !14193
  %4 = icmp eq i64 %3, 0, !dbg !14194
  br i1 %4, label %5, label %6, !dbg !14196

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14197
  br label %7, !dbg !14199

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14200
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14207, metadata !DIExpression()), !dbg !14208
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14209, !srcloc !14211
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14212
  ret void, !dbg !14213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14214 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14217, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14216, metadata !DIExpression()), !dbg !14218
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14219
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14220
  ret void, !dbg !14221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14222 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14224, metadata !DIExpression()), !dbg !14244
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14245

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14246
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14242, metadata !DIExpression()), !dbg !14247
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14248

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14224, metadata !DIExpression()), !dbg !14244
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14249
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14249
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14252
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14252
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14253
  %9 = load i32, i32* %8, align 4, !dbg !14253
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14254
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14254
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14255
  %13 = load i8*, i8** %12, align 4, !dbg !14255
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14256
  %15 = load i8*, i8** %14, align 4, !dbg !14256
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14257
  %17 = load i8*, i8** %16, align 4, !dbg !14257
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14258
  %19 = load i32, i32* %18, align 4, !dbg !14258
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14259
  %21 = load i32, i32* %20, align 4, !dbg !14259
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14260
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14261
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14262
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14263
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14263
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14264
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14224, metadata !DIExpression()), !dbg !14244
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14265
  br i1 %27, label %2, label %1, !dbg !14245, !llvm.loop !14267

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14246
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14242, metadata !DIExpression()), !dbg !14247
  br label %29, !dbg !14248

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14269
  ret void, !dbg !14270

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14242, metadata !DIExpression()), !dbg !14247
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14271
  %33 = load i32, i32* %32, align 4, !dbg !14271
  %34 = icmp eq i32 %33, -1, !dbg !14275
  br i1 %34, label %43, label %35, !dbg !14276

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14277
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14277
  %38 = icmp sgt i32 %33, 0, !dbg !14279
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14279
  %40 = zext i32 %39 to i64, !dbg !14279
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.141(i64 noundef %40) #26, !dbg !14279
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14280
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14280
  br label %43, !dbg !14281

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14282
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14242, metadata !DIExpression()), !dbg !14247
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14283
  br i1 %45, label %30, label %29, !dbg !14248, !llvm.loop !14285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.141(i64 noundef %0) unnamed_addr #11 !dbg !14287 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14289, metadata !DIExpression()), !dbg !14290
  call void @llvm.dbg.value(metadata i64 %0, metadata !14291, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i32 1000, metadata !14294, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i32 10000, metadata !14295, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i8 1, metadata !14296, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i8 0, metadata !14297, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i8 1, metadata !14298, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i8 0, metadata !14299, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i8 1, metadata !14300, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i8 0, metadata !14301, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i64 0, metadata !14302, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata i64 0, metadata !14302, metadata !DIExpression()), !dbg !14306
  %2 = mul i64 %0, 10, !dbg !14308
  ret i64 %2, !dbg !14314
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14315 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14317, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.value(metadata i8* %1, metadata !14318, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.value(metadata i8* %2, metadata !14319, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.value(metadata i8* %3, metadata !14320, metadata !DIExpression()), !dbg !14321
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14322
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14323
  %7 = load i8, i8* %6, align 4, !dbg !14324
  %8 = or i8 %7, 4, !dbg !14324
  store i8 %8, i8* %6, align 4, !dbg !14324
  tail call void @z_thread_essential_clear() #26, !dbg !14325
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14326
  unreachable, !dbg !14326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14331, metadata !DIExpression()), !dbg !14332
  ret i32 -134, !dbg !14333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14338, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata i32 %1, metadata !14339, metadata !DIExpression()), !dbg !14340
  ret i32 -134, !dbg !14341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14349, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14350, metadata !DIExpression()), !dbg !14351
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14352
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14354
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14351
  ret i32 %6, !dbg !14355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14356 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14360, metadata !DIExpression()), !dbg !14361
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14362
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14361
  ret i32 %3, !dbg !14364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14365 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14367
  ret void, !dbg !14368
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14369 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14371, metadata !DIExpression()), !dbg !14374
  call void @llvm.dbg.value(metadata i8* %1, metadata !14372, metadata !DIExpression()), !dbg !14374
  call void @llvm.dbg.value(metadata i8* %2, metadata !14373, metadata !DIExpression()), !dbg !14374
  br label %4, !dbg !14375

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14376, !srcloc !14383
  call void @llvm.dbg.value(metadata i32 undef, metadata !14379, metadata !DIExpression()) #24, !dbg !14384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14380, metadata !DIExpression()) #24, !dbg !14384
  tail call fastcc void @k_cpu_idle() #26, !dbg !14385
  br label %4, !dbg !14375, !llvm.loop !14386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14388 {
  tail call void @arch_cpu_idle() #25, !dbg !14389
  ret void, !dbg !14390
}

; Function Attrs: optsize
declare !dbg !14391 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14392 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14407, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata i32 %1, metadata !14408, metadata !DIExpression()), !dbg !14410
  call void @llvm.dbg.value(metadata i32 %2, metadata !14409, metadata !DIExpression()), !dbg !14410
  %4 = icmp eq i32 %2, 0, !dbg !14411
  %5 = icmp ugt i32 %1, %2, !dbg !14411
  %6 = or i1 %4, %5, !dbg !14411
  br i1 %6, label %11, label %7, !dbg !14411

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14413
  store i32 %1, i32* %8, align 4, !dbg !14414
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14415
  store i32 %2, i32* %9, align 4, !dbg !14416
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14417
  tail call fastcc void @z_waitq_init.146(%union.anon* noundef %10) #26, !dbg !14418
  br label %11, !dbg !14419

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14410
  ret i32 %12, !dbg !14420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.146(%union.anon* noundef %0) unnamed_addr #4 !dbg !14421 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14426, metadata !DIExpression()), !dbg !14427
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14428
  tail call fastcc void @sys_dlist_init.147(%struct._dnode* noundef %2) #26, !dbg !14429
  ret void, !dbg !14430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.147(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14431 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14436, metadata !DIExpression()), !dbg !14437
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14438
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14439
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14440
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14441
  ret void, !dbg !14442
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14447, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14534, metadata !DIExpression()) #24, !dbg !14541
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14543, !srcloc !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #24, !dbg !14550
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #24, !dbg !14550
  call void @llvm.dbg.value(metadata i32 undef, metadata !14540, metadata !DIExpression()) #24, !dbg !14541
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()), !dbg !14533
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14551
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14552
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14453, metadata !DIExpression()), !dbg !14533
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14553
  br i1 %5, label %8, label %6, !dbg !14555

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14556, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 0, metadata !14561, metadata !DIExpression()), !dbg !14562
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14565
  store i32 0, i32* %7, align 4, !dbg !14566
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !14567
  br label %16, !dbg !14568

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14569
  %10 = load i32, i32* %9, align 4, !dbg !14569
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14571
  %12 = load i32, i32* %11, align 4, !dbg !14571
  %13 = icmp ne i32 %10, %12, !dbg !14572
  %14 = zext i1 %13 to i32, !dbg !14573
  %15 = add i32 %10, %14, !dbg !14574
  store i32 %15, i32* %9, align 4, !dbg !14574
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14543
  call void @llvm.dbg.value(metadata i32 %17, metadata !14546, metadata !DIExpression()) #24, !dbg !14550
  call void @llvm.dbg.value(metadata i32 %17, metadata !14540, metadata !DIExpression()) #24, !dbg !14541
  call void @llvm.dbg.value(metadata i32 %17, metadata !14448, metadata !DIExpression()), !dbg !14533
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14575
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !14575
  ret void, !dbg !14576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14577 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14586, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14585, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.value(metadata i32 0, metadata !14587, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14534, metadata !DIExpression()) #24, !dbg !14591
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14593, !srcloc !14549
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14593
  call void @llvm.dbg.value(metadata i32 %4, metadata !14546, metadata !DIExpression()) #24, !dbg !14595
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #24, !dbg !14595
  call void @llvm.dbg.value(metadata i32 %4, metadata !14540, metadata !DIExpression()) #24, !dbg !14591
  call void @llvm.dbg.value(metadata i32 %4, metadata !14588, metadata !DIExpression()), !dbg !14590
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14596
  %6 = load i32, i32* %5, align 4, !dbg !14596
  %7 = icmp eq i32 %6, 0, !dbg !14596
  br i1 %7, label %10, label %8, !dbg !14598, !prof !14599

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14600
  store i32 %9, i32* %5, align 4, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %4, metadata !14602, metadata !DIExpression()) #24, !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14607, metadata !DIExpression()) #24, !dbg !14608
  call void @llvm.dbg.value(metadata i32 %4, metadata !14610, metadata !DIExpression()) #24, !dbg !14613
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14615, !srcloc !14616
  call void @llvm.dbg.value(metadata i32 0, metadata !14587, metadata !DIExpression()), !dbg !14590
  br label %18, !dbg !14617

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14586, metadata !DIExpression()), !dbg !14590
  %12 = icmp eq i64 %11, 0, !dbg !14618
  br i1 %12, label %13, label %14, !dbg !14620

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14602, metadata !DIExpression()) #24, !dbg !14621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14607, metadata !DIExpression()) #24, !dbg !14621
  call void @llvm.dbg.value(metadata i32 %4, metadata !14610, metadata !DIExpression()) #24, !dbg !14624
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14626, !srcloc !14616
  call void @llvm.dbg.value(metadata i32 -16, metadata !14587, metadata !DIExpression()), !dbg !14590
  br label %18, !dbg !14627

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14628
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14629
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !14629
  call void @llvm.dbg.value(metadata i32 %17, metadata !14587, metadata !DIExpression()), !dbg !14590
  br label %18, !dbg !14630

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14590
  call void @llvm.dbg.value(metadata i32 %19, metadata !14587, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.label(metadata !14589), !dbg !14631
  ret i32 %19, !dbg !14632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14633 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14635, metadata !DIExpression()), !dbg !14638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14534, metadata !DIExpression()) #24, !dbg !14639
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14641, !srcloc !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #24, !dbg !14643
  call void @llvm.dbg.value(metadata i32 undef, metadata !14547, metadata !DIExpression()) #24, !dbg !14643
  call void @llvm.dbg.value(metadata i32 undef, metadata !14540, metadata !DIExpression()) #24, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14637, metadata !DIExpression()), !dbg !14638
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14636, metadata !DIExpression()), !dbg !14638
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14646
  br i1 %5, label %11, label %6, !dbg !14648

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14556, metadata !DIExpression()), !dbg !14649
  call void @llvm.dbg.value(metadata i32 -11, metadata !14561, metadata !DIExpression()), !dbg !14649
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14651
  store i32 -11, i32* %8, align 4, !dbg !14652
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !14653
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14636, metadata !DIExpression()), !dbg !14638
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14646
  br i1 %10, label %11, label %6, !dbg !14648, !llvm.loop !14654

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14641
  call void @llvm.dbg.value(metadata i32 %12, metadata !14546, metadata !DIExpression()) #24, !dbg !14643
  call void @llvm.dbg.value(metadata i32 %12, metadata !14540, metadata !DIExpression()) #24, !dbg !14639
  call void @llvm.dbg.value(metadata i32 %12, metadata !14637, metadata !DIExpression()), !dbg !14638
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14657
  store i32 0, i32* %13, align 4, !dbg !14658
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14659
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !14659
  ret void, !dbg !14660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14666, metadata !DIExpression()), !dbg !14669
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14670
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14670
  %5 = load i8, i8* %4, align 2, !dbg !14670
  call void @llvm.dbg.value(metadata i8 %5, metadata !14667, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14669
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14671
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14671
  %8 = load i8, i8* %7, align 2, !dbg !14671
  call void @llvm.dbg.value(metadata i8 %8, metadata !14668, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14669
  %9 = icmp eq i8 %8, %5, !dbg !14672
  %10 = sext i8 %5 to i32, !dbg !14674
  %11 = sext i8 %8 to i32, !dbg !14674
  %12 = sub nsw i32 %11, %10, !dbg !14674
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14674
  ret i32 %13, !dbg !14675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14680, metadata !DIExpression()), !dbg !14681
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14682
  %3 = icmp eq i32 %2, 0, !dbg !14684
  br i1 %3, label %8, label %4, !dbg !14685

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14686
  %6 = add i32 %5, %2, !dbg !14688
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14689
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14690
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14691
  br label %8, !dbg !14692

8:                                                ; preds = %4, %1
  ret void, !dbg !14693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14698, metadata !DIExpression()), !dbg !14700
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14701
  call void @llvm.dbg.value(metadata i32 %1, metadata !14699, metadata !DIExpression()), !dbg !14700
  ret i32 %1, !dbg !14702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14707, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.value(metadata i32 %1, metadata !14708, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.value(metadata i32 0, metadata !14709, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !14725
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14727, !srcloc !14733
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14727
  call void @llvm.dbg.value(metadata i32 %4, metadata !14730, metadata !DIExpression()) #24, !dbg !14734
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !14734
  call void @llvm.dbg.value(metadata i32 %4, metadata !14724, metadata !DIExpression()) #24, !dbg !14725
  call void @llvm.dbg.value(metadata i32 %4, metadata !14715, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14717
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14735
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14738
  %6 = icmp sgt i32 %0, 0, !dbg !14739
  %7 = icmp sgt i32 %5, 2, !dbg !14741
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14741
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14741
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14742
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14743
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14744
  call void @llvm.dbg.value(metadata i32 %4, metadata !14745, metadata !DIExpression()) #24, !dbg !14751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !14751
  call void @llvm.dbg.value(metadata i32 %4, metadata !14753, metadata !DIExpression()) #24, !dbg !14756
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14758, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !14709, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14717
  ret void, !dbg !14760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14763, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata i32 %0, metadata !14765, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i32 1000, metadata !14768, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i32 10000, metadata !14769, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i8 1, metadata !14770, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i1 true, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i1 true, metadata !14772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i8 0, metadata !14773, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i1 true, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i1 false, metadata !14775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14780
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !14780
  %2 = mul i32 %0, 10, !dbg !14782
  ret i32 %2, !dbg !14788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14791, metadata !DIExpression()), !dbg !14793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !14794
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14796, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14796
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #24, !dbg !14798
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !14798
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #24, !dbg !14794
  call void @llvm.dbg.value(metadata i32 %3, metadata !14792, metadata !DIExpression()), !dbg !14793
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14799
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14801
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14802
  br i1 %6, label %7, label %8, !dbg !14803

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !14806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !14808
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14810, !srcloc !14759
  br label %24, !dbg !14811

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14812
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14813
  %10 = icmp eq i32 %9, 0, !dbg !14813
  br i1 %10, label %21, label %11, !dbg !14815

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14816
  br i1 %12, label %13, label %21, !dbg !14817

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14818
  %15 = icmp sgt i32 %14, %0, !dbg !14821
  br i1 %15, label %19, label %16, !dbg !14822

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14823
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %18, metadata !14792, metadata !DIExpression()), !dbg !14793
  br label %22, !dbg !14825

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14826
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14826
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14828
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14793
  call void @llvm.dbg.value(metadata i32 %23, metadata !14792, metadata !DIExpression()), !dbg !14793
  call void @llvm.dbg.value(metadata i32 %23, metadata !14745, metadata !DIExpression()) #24, !dbg !14830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !14830
  call void @llvm.dbg.value(metadata i32 %23, metadata !14753, metadata !DIExpression()) #24, !dbg !14832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14834, !srcloc !14759
  br label %24, !dbg !14835

24:                                               ; preds = %22, %7
  ret void, !dbg !14835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14840, metadata !DIExpression()), !dbg !14842
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14843
  %3 = icmp eq i32 %2, 0, !dbg !14843
  br i1 %3, label %16, label %4, !dbg !14844

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14845
  br i1 %5, label %16, label %6, !dbg !14846

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14847
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14847
  %9 = load i8, i8* %8, align 2, !dbg !14847
  %10 = sext i8 %9 to i32, !dbg !14848
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14849
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14850
  br i1 %12, label %16, label %13, !dbg !14851

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14852
  %15 = xor i1 %14, true, !dbg !14853
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14842
  call void @llvm.dbg.value(metadata i1 %17, metadata !14841, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14842
  ret i1 %17, !dbg !14854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14855 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14859, metadata !DIExpression()), !dbg !14861
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14862
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14860, metadata !DIExpression()), !dbg !14861
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14863
  br i1 %3, label %5, label %4, !dbg !14865

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14866
  br label %5, !dbg !14868

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14859, metadata !DIExpression()), !dbg !14861
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14869
  ret i32 %6, !dbg !14870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14873, metadata !DIExpression()), !dbg !14875
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14876
  %3 = load i8, i8* %2, align 1, !dbg !14876
  call void @llvm.dbg.value(metadata i8 %3, metadata !14874, metadata !DIExpression()), !dbg !14875
  %4 = and i8 %3, 31, !dbg !14877
  %5 = icmp ne i8 %4, 0, !dbg !14878
  ret i1 %5, !dbg !14879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14880 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14882, metadata !DIExpression()), !dbg !14883
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14884
  br i1 %2, label %3, label %7, !dbg !14886

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #24, !dbg !14890
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14893
  %5 = load i8, i8* %4, align 1, !dbg !14894
  %6 = and i8 %5, 127, !dbg !14894
  store i8 %6, i8* %4, align 1, !dbg !14894
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #24, !dbg !14898
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14902
  br label %7, !dbg !14903

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #24, !dbg !14907
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14909
  %9 = load i8, i8* %8, align 1, !dbg !14910
  %10 = or i8 %9, -128, !dbg !14910
  store i8 %10, i8* %8, align 1, !dbg !14910
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #24, !dbg !14914
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #24, !dbg !14926
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !14926
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14928
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14925, metadata !DIExpression()) #24, !dbg !14926
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14930
  br i1 %12, label %23, label %13, !dbg !14928

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14925, metadata !DIExpression()) #24, !dbg !14926
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14925, metadata !DIExpression()) #24, !dbg !14926
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14933
  %17 = icmp sgt i32 %16, 0, !dbg !14936
  br i1 %17, label %18, label %20, !dbg !14937

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14938
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14940
  br label %25, !dbg !14941

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14930
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14925, metadata !DIExpression()) #24, !dbg !14926
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14930
  br i1 %22, label %23, label %13, !dbg !14928, !llvm.loop !14942

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14944
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14945
  br label %25, !dbg !14946

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14947
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14948
  %28 = zext i1 %27 to i32, !dbg !14948
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !14949
  ret void, !dbg !14950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14951 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14953, metadata !DIExpression()), !dbg !14954
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !14955
  ret i1 %2, !dbg !14956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14957 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14959, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14960, metadata !DIExpression()), !dbg !14961
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14962
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !14963
  ret void, !dbg !14964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14965 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14969, metadata !DIExpression()), !dbg !14970
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14971
  br i1 %2, label %6, label %3, !dbg !14971

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14972
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14972
  br label %6, !dbg !14971

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14971
  ret %struct._dnode* %7, !dbg !14973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14974 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14979, metadata !DIExpression()), !dbg !14982
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14983
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14983
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14980, metadata !DIExpression()), !dbg !14982
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14984
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14985
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14986
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14987
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14988
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14989
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14990
  ret void, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14992 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14996, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14997, metadata !DIExpression()), !dbg !14998
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14999
  br i1 %3, label %6, label %4, !dbg !15000

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15001
  br label %6, !dbg !15000

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15000
  ret %struct._dnode* %7, !dbg !15002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15007, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15008, metadata !DIExpression()), !dbg !15010
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15011
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15011
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15009, metadata !DIExpression()), !dbg !15010
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15012
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15013
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15014
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15015
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15016
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15017
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15018
  ret void, !dbg !15019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15022, metadata !DIExpression()), !dbg !15024
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15025
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15032, metadata !DIExpression()) #24, !dbg !15034
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15035
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15036
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15036
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15023, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15037, metadata !DIExpression()) #24, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %0, metadata !15042, metadata !DIExpression()) #24, !dbg !15043
  %6 = icmp eq i32 %0, 0, !dbg !15046
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15048
  br i1 %6, label %8, label %15, !dbg !15049

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15050
  br i1 %9, label %15, label %10, !dbg !15052

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15053
  br i1 %11, label %15, label %12, !dbg !15055

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15056
  %14 = icmp eq i32 %13, 0, !dbg !15056
  br i1 %14, label %18, label %15, !dbg !15058

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15059
  br i1 %16, label %18, label %17, !dbg !15062

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15063
  br label %18, !dbg !15065

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15048
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15048
  ret void, !dbg !15066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15067 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15071, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15072, metadata !DIExpression()), !dbg !15074
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15075
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15073, metadata !DIExpression()), !dbg !15074
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15072, metadata !DIExpression()), !dbg !15074
  ret %struct.k_thread* %3, !dbg !15076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()), !dbg !15080
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15081
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15082
  %4 = xor i1 %3, true, !dbg !15083
  ret i1 %4, !dbg !15084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15085 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15087, metadata !DIExpression()), !dbg !15088
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15089
  %3 = load i16, i16* %2, align 2, !dbg !15089
  %4 = icmp ult i16 %3, 128, !dbg !15090
  %5 = zext i1 %4 to i32, !dbg !15090
  ret i32 %5, !dbg !15091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15092 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15098, metadata !DIExpression()), !dbg !15099
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15100
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15101
  %4 = xor i1 %3, true, !dbg !15102
  ret i1 %4, !dbg !15103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15104 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15110, metadata !DIExpression()), !dbg !15111
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15112
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15112
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15113
  ret i1 %4, !dbg !15114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15115 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15117, metadata !DIExpression()), !dbg !15119
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15118, metadata !DIExpression()), !dbg !15119
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15120
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15120
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15121
  br i1 %5, label %9, label %6, !dbg !15122

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15123
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15123
  br label %9, !dbg !15122

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15122
  ret %struct._dnode* %10, !dbg !15124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15125 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15129, metadata !DIExpression()), !dbg !15130
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15131
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15131
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15132
  ret i1 %4, !dbg !15133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15134 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15138, metadata !DIExpression()), !dbg !15141
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15142
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15142
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15139, metadata !DIExpression()), !dbg !15141
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15143
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15143
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15140, metadata !DIExpression()), !dbg !15141
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15144
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15145
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15146
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15147
  tail call fastcc void @sys_dnode_init.152(%struct._dnode* noundef %0) #26, !dbg !15148
  ret void, !dbg !15149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.152(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15150 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15152, metadata !DIExpression()), !dbg !15153
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15154
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15155
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15156
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15157
  ret void, !dbg !15158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15163, metadata !DIExpression()), !dbg !15165
  call void @llvm.dbg.value(metadata i32 128, metadata !15164, metadata !DIExpression()), !dbg !15165
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15166
  %3 = load i8, i8* %2, align 1, !dbg !15166
  %4 = icmp slt i8 %3, 0, !dbg !15167
  ret i1 %4, !dbg !15168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15173, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.value(metadata i32 %1, metadata !15174, metadata !DIExpression()), !dbg !15175
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15176
  ret i1 %3, !dbg !15177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15180, metadata !DIExpression()), !dbg !15181
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15182
  ret i1 %2, !dbg !15183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15186, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 %1, metadata !15187, metadata !DIExpression()), !dbg !15188
  %3 = icmp slt i32 %0, %1, !dbg !15189
  ret i1 %3, !dbg !15190
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15193, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 0, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15199
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15201, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15201
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #24, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #24, !dbg !15199
  call void @llvm.dbg.value(metadata i32 %3, metadata !15196, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15198
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15204
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !15209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15209
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !15211
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15213, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15194, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15198
  ret void, !dbg !15214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15217, metadata !DIExpression()), !dbg !15218
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15219
  br i1 %2, label %24, label %3, !dbg !15221

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15222
  br i1 %4, label %5, label %24, !dbg !15223

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #24, !dbg !15224
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15227
  %7 = load i8, i8* %6, align 1, !dbg !15228
  %8 = or i8 %7, -128, !dbg !15228
  store i8 %8, i8* %6, align 1, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #24, !dbg !15229
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #24, !dbg !15231
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !15231
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15233
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14925, metadata !DIExpression()) #24, !dbg !15231
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15234
  br i1 %10, label %21, label %11, !dbg !15233

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14925, metadata !DIExpression()) #24, !dbg !15231
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15235
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14925, metadata !DIExpression()) #24, !dbg !15231
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15236
  %15 = icmp sgt i32 %14, 0, !dbg !15237
  br i1 %15, label %16, label %18, !dbg !15238

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15239
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15240
  br label %23, !dbg !15241

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15234
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14925, metadata !DIExpression()) #24, !dbg !15231
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15234
  br i1 %20, label %21, label %11, !dbg !15233, !llvm.loop !15242

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15244
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15245
  br label %23, !dbg !15246

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15247
  br label %24, !dbg !15248

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15250 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15252, metadata !DIExpression()), !dbg !15253
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15254
  br i1 %2, label %6, label %3, !dbg !15255

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15256
  %5 = xor i1 %4, true, !dbg !15255
  br label %6, !dbg !15255

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15260, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata i32 0, metadata !15261, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15266
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15268, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15268
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #24, !dbg !15266
  call void @llvm.dbg.value(metadata i32 %3, metadata !15263, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 undef, metadata !15261, metadata !DIExpression()), !dbg !15265
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15271
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !15274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15274
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !15276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15278, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15261, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i32 undef, metadata !15261, metadata !DIExpression()), !dbg !15265
  ret void, !dbg !15279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15280 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15282, metadata !DIExpression()), !dbg !15284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15285
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15287, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15287
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #24, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #24, !dbg !15285
  call void @llvm.dbg.value(metadata i32 %3, metadata !15283, metadata !DIExpression()), !dbg !15284
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15290
  br i1 %4, label %5, label %6, !dbg !15292

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !15296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15298, !srcloc !14759
  br label %8, !dbg !15299

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.157(%struct.k_thread* noundef %0) #26, !dbg !15300
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15301
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15302
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15302
  br label %8, !dbg !15303

8:                                                ; preds = %6, %5
  ret void, !dbg !15303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15304 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15306, metadata !DIExpression()), !dbg !15307
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15308
  %3 = load i8, i8* %2, align 1, !dbg !15308
  %4 = and i8 %3, 4, !dbg !15309
  %5 = icmp eq i8 %4, 0, !dbg !15310
  ret i1 %5, !dbg !15311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.157(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15312 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15314, metadata !DIExpression()), !dbg !15315
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15316
  %3 = load i8, i8* %2, align 1, !dbg !15317
  %4 = and i8 %3, -5, !dbg !15317
  store i8 %4, i8* %2, align 1, !dbg !15317
  ret void, !dbg !15318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15319 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15322, metadata !DIExpression()), !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15321, metadata !DIExpression()), !dbg !15323
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15324
  br i1 %4, label %5, label %9, !dbg !15326

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15327
  br i1 %6, label %7, label %9, !dbg !15328

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15329, metadata !DIExpression()) #24, !dbg !15335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #24, !dbg !15335
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15338
  br label %10, !dbg !15339

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !15340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !15343
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15345, !srcloc !14759
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15351, metadata !DIExpression()), !dbg !15352
  call void @llvm.dbg.value(metadata i32 %0, metadata !15353, metadata !DIExpression()), !dbg !15358
  %2 = icmp eq i32 %0, 0, !dbg !15360
  br i1 %2, label %3, label %6, !dbg !15361

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15362, !srcloc !15369
  call void @llvm.dbg.value(metadata i32 %4, metadata !15365, metadata !DIExpression()) #24, !dbg !15370
  %5 = icmp eq i32 %4, 0, !dbg !15371
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15352
  ret i1 %7, !dbg !15372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15373 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15375, metadata !DIExpression()), !dbg !15377
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15378
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15379
  ret i1 %3, !dbg !15380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15383, metadata !DIExpression()), !dbg !15385
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15386
  call void @llvm.dbg.value(metadata i32 %2, metadata !15384, metadata !DIExpression()), !dbg !15385
  ret i32 %2, !dbg !15387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15390, metadata !DIExpression()), !dbg !15394
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15395
  call void @llvm.dbg.value(metadata i32 0, metadata !15391, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15397
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15399, !srcloc !14733
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15399
  call void @llvm.dbg.value(metadata i32 %4, metadata !14730, metadata !DIExpression()) #24, !dbg !15401
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15401
  call void @llvm.dbg.value(metadata i32 %4, metadata !14724, metadata !DIExpression()) #24, !dbg !15397
  call void @llvm.dbg.value(metadata i32 %4, metadata !15393, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()), !dbg !15396
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15402
  br i1 %5, label %6, label %10, !dbg !15406

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #24, !dbg !15407
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15410
  %8 = load i8, i8* %7, align 1, !dbg !15411
  %9 = and i8 %8, 127, !dbg !15411
  store i8 %9, i8* %7, align 1, !dbg !15411
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #24, !dbg !15412
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15414
  br label %10, !dbg !15415

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15416
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15417
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15418
  %13 = zext i1 %12 to i32, !dbg !15418
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %4, metadata !14745, metadata !DIExpression()) #24, !dbg !15420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15420
  call void @llvm.dbg.value(metadata i32 %4, metadata !14753, metadata !DIExpression()) #24, !dbg !15422
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15424, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15391, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.value(metadata i32 undef, metadata !15391, metadata !DIExpression()), !dbg !15396
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15425
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15427
  br i1 %15, label %16, label %17, !dbg !15428

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15429
  br label %17, !dbg !15431

17:                                               ; preds = %16, %10
  ret void, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15435, metadata !DIExpression()), !dbg !15436
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15437
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15438
  ret i32 %3, !dbg !15439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15442, metadata !DIExpression()), !dbg !15443
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15444
  %3 = load i8, i8* %2, align 1, !dbg !15445
  %4 = or i8 %3, 16, !dbg !15445
  store i8 %4, i8* %2, align 1, !dbg !15445
  ret void, !dbg !15446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15447 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15448, !srcloc !14733
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %2, metadata !14730, metadata !DIExpression()) #24, !dbg !15450
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15450
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15451
  ret void, !dbg !15452
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15455, metadata !DIExpression()), !dbg !15456
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15457
  br i1 %2, label %3, label %5, !dbg !15459

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15460
  br label %6, !dbg !15462

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14753, metadata !DIExpression()) #24, !dbg !15463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15466, !srcloc !14759
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15468 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15470, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15473
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15475, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15475
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #24, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15477
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #24, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()), !dbg !15472
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15478
  br i1 %4, label %6, label %5, !dbg !15480

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !15484
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15486, !srcloc !14759
  br label %8, !dbg !15487

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15488
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15489
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15490
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15490
  br label %8, !dbg !15491

8:                                                ; preds = %6, %5
  ret void, !dbg !15491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15494, metadata !DIExpression()), !dbg !15495
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15496
  %3 = load i8, i8* %2, align 1, !dbg !15496
  %4 = and i8 %3, 16, !dbg !15497
  %5 = icmp ne i8 %4, 0, !dbg !15498
  ret i1 %5, !dbg !15499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15502, metadata !DIExpression()), !dbg !15503
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15504
  %3 = load i8, i8* %2, align 1, !dbg !15505
  %4 = and i8 %3, -17, !dbg !15505
  store i8 %4, i8* %2, align 1, !dbg !15505
  ret void, !dbg !15506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15507 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15517, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15515, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15516, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 0, metadata !15518, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15523
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15525, !srcloc !14733
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15525
  call void @llvm.dbg.value(metadata i32 %5, metadata !14730, metadata !DIExpression()) #24, !dbg !15527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15527
  call void @llvm.dbg.value(metadata i32 %5, metadata !14724, metadata !DIExpression()) #24, !dbg !15523
  call void @llvm.dbg.value(metadata i32 %5, metadata !15520, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !15518, metadata !DIExpression()), !dbg !15522
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15528
  call void @llvm.dbg.value(metadata i32 %5, metadata !14745, metadata !DIExpression()) #24, !dbg !15531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15531
  call void @llvm.dbg.value(metadata i32 %5, metadata !14753, metadata !DIExpression()) #24, !dbg !15533
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15535, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15518, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !15518, metadata !DIExpression()), !dbg !15522
  ret void, !dbg !15536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15537 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15541, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15539, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15540, metadata !DIExpression()), !dbg !15542
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !15543
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15544
  ret void, !dbg !15545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15550, metadata !DIExpression()), !dbg !15552
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15551, metadata !DIExpression()), !dbg !15552
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15553
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15554
  %3 = icmp eq %union.anon* %1, null, !dbg !15555
  br i1 %3, label %21, label %4, !dbg !15557

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15558
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15560
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15561
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14918, metadata !DIExpression()) #24, !dbg !15562
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !15562
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15564
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14925, metadata !DIExpression()) #24, !dbg !15562
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15565
  br i1 %8, label %19, label %9, !dbg !15564

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14925, metadata !DIExpression()) #24, !dbg !15562
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15566
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14925, metadata !DIExpression()) #24, !dbg !15562
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15567
  %13 = icmp sgt i32 %12, 0, !dbg !15568
  br i1 %13, label %14, label %16, !dbg !15569

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15570
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15571
  br label %21, !dbg !15572

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15565
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14925, metadata !DIExpression()) #24, !dbg !15562
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15565
  br i1 %18, label %19, label %9, !dbg !15564, !llvm.loop !15573

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15575
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15576
  br label %21, !dbg !15577

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15579 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15584, metadata !DIExpression()), !dbg !15585
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15583, metadata !DIExpression()), !dbg !15585
  %4 = icmp eq i64 %3, -1, !dbg !15586
  br i1 %4, label %6, label %5, !dbg !15588

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.160(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15589
  br label %6, !dbg !15591

6:                                                ; preds = %5, %2
  ret void, !dbg !15592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.160(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15593 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15596, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15595, metadata !DIExpression()), !dbg !15597
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15598
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15599
  ret void, !dbg !15600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15601 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15603, metadata !DIExpression()), !dbg !15611
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15612
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15604, metadata !DIExpression()), !dbg !15611
  call void @llvm.dbg.value(metadata i32 0, metadata !15605, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15614
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15616, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15618
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15618
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #24, !dbg !15614
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15605, metadata !DIExpression()), !dbg !15613
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15619
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15620
  %7 = load i8, i8* %6, align 1, !dbg !15620
  %8 = and i8 %7, 40, !dbg !15621
  %9 = icmp eq i8 %8, 0, !dbg !15621
  call void @llvm.dbg.value(metadata i1 %9, metadata !15608, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15622
  br i1 %9, label %10, label %17, !dbg !15623

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15624
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15624
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15624
  %14 = icmp eq %union.anon* %13, null, !dbg !15628
  br i1 %14, label %16, label %15, !dbg !15629

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15630
  br label %16, !dbg !15632

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.157(%struct.k_thread* noundef nonnull %3) #26, !dbg !15633
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15634
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15635
  br label %17, !dbg !15636

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15616
  call void @llvm.dbg.value(metadata i32 %18, metadata !14730, metadata !DIExpression()) #24, !dbg !15618
  call void @llvm.dbg.value(metadata i32 %18, metadata !14724, metadata !DIExpression()) #24, !dbg !15614
  call void @llvm.dbg.value(metadata i32 %18, metadata !15607, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #24, !dbg !15637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15639
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15641, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15605, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15605, metadata !DIExpression()), !dbg !15613
  ret void, !dbg !15642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15645, metadata !DIExpression()), !dbg !15646
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15647
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15648
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15649
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15650
  ret void, !dbg !15651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15654, metadata !DIExpression()), !dbg !15655
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15656
  %3 = load i8, i8* %2, align 1, !dbg !15657
  %4 = and i8 %3, -3, !dbg !15657
  store i8 %4, i8* %2, align 1, !dbg !15657
  ret void, !dbg !15658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15661, metadata !DIExpression()), !dbg !15662
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15663
  br i1 %2, label %3, label %7, !dbg !15665

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #24, !dbg !15666
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15669
  %5 = load i8, i8* %4, align 1, !dbg !15670
  %6 = and i8 %5, 127, !dbg !15670
  store i8 %6, i8* %4, align 1, !dbg !15670
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #24, !dbg !15671
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15673
  br label %7, !dbg !15674

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15675
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15676
  %10 = zext i1 %9 to i32, !dbg !15676
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15677
  ret void, !dbg !15678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15681, metadata !DIExpression()), !dbg !15682
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15683
  %3 = load i8, i8* %2, align 1, !dbg !15684
  %4 = or i8 %3, 2, !dbg !15684
  store i8 %4, i8* %2, align 1, !dbg !15684
  ret void, !dbg !15685
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15686 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15688, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata i32 0, metadata !15689, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15694
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15696, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15696
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #24, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15698
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #24, !dbg !15694
  call void @llvm.dbg.value(metadata i32 %3, metadata !15691, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()), !dbg !15693
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15699
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !15702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15702
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !15704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15706, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15689, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()), !dbg !15693
  ret void, !dbg !15707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15708 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15714, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.value(metadata i32 %0, metadata !15712, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15713, metadata !DIExpression()), !dbg !15719
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15720
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15721
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15722
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15723
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15724
  call void @llvm.dbg.value(metadata i32 %6, metadata !15715, metadata !DIExpression()), !dbg !15719
  call void @llvm.dbg.value(metadata i32 0, metadata !15716, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15726
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15728, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15730
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15730
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #24, !dbg !15726
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()), !dbg !15725
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15731
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15735
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15736
  br i1 %10, label %11, label %12, !dbg !15737

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15738
  br label %12, !dbg !15740

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15728
  call void @llvm.dbg.value(metadata i32 %13, metadata !14730, metadata !DIExpression()) #24, !dbg !15730
  call void @llvm.dbg.value(metadata i32 %13, metadata !14724, metadata !DIExpression()) #24, !dbg !15726
  call void @llvm.dbg.value(metadata i32 %13, metadata !15718, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #24, !dbg !15741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15741
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15745, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15716, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !15716, metadata !DIExpression()), !dbg !15725
  ret i32 %6, !dbg !15746
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15747 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15752, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.value(metadata i64 undef, metadata !15754, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15751, metadata !DIExpression()), !dbg !15755
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15753, metadata !DIExpression()), !dbg !15755
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15756
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15758
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15760, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #24, !dbg !15758
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15763
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15764
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15329, metadata !DIExpression()) #24, !dbg !15765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #24, !dbg !15765
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15767
  ret i32 %9, !dbg !15768
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15769 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15773, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15774, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 0, metadata !15775, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15780
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15782, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #24, !dbg !15780
  call void @llvm.dbg.value(metadata i32 undef, metadata !15777, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15774, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()), !dbg !15779
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15774, metadata !DIExpression()), !dbg !15778
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15788
  br i1 %5, label %7, label %6, !dbg !15790

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15791
  br label %7, !dbg !15793

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15782
  call void @llvm.dbg.value(metadata i32 %8, metadata !14730, metadata !DIExpression()) #24, !dbg !15784
  call void @llvm.dbg.value(metadata i32 %8, metadata !14724, metadata !DIExpression()) #24, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %8, metadata !15777, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #24, !dbg !15794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15796
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15798, !srcloc !14759
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15774, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()), !dbg !15779
  ret %struct.k_thread* %4, !dbg !15799
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15800 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15802, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i32 0, metadata !15804, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15809
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15811, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15813
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15813
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #24, !dbg !15809
  call void @llvm.dbg.value(metadata i32 undef, metadata !15806, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15804, metadata !DIExpression()), !dbg !15808
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15803, metadata !DIExpression()), !dbg !15807
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15817
  br i1 %5, label %8, label %6, !dbg !15819

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15820
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15822
  br label %8, !dbg !15823

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15811
  call void @llvm.dbg.value(metadata i32 %9, metadata !14730, metadata !DIExpression()) #24, !dbg !15813
  call void @llvm.dbg.value(metadata i32 %9, metadata !14724, metadata !DIExpression()) #24, !dbg !15809
  call void @llvm.dbg.value(metadata i32 %9, metadata !15806, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #24, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15824
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15828, !srcloc !14759
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15804, metadata !DIExpression()), !dbg !15808
  ret %struct.k_thread* %4, !dbg !15829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15832, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15688, metadata !DIExpression()) #24, !dbg !15834
  call void @llvm.dbg.value(metadata i32 0, metadata !15689, metadata !DIExpression()) #24, !dbg !15836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15837
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15839, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15839
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #24, !dbg !15841
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15841
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #24, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %3, metadata !15691, metadata !DIExpression()) #24, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()) #24, !dbg !15836
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15842
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !15843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15843
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !15845
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15847, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15689, metadata !DIExpression()) #24, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15689, metadata !DIExpression()) #24, !dbg !15836
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15848
  ret void, !dbg !15849
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15852, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 %1, metadata !15853, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i8 0, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 0, metadata !15855, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15860
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15862, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15864
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15864
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #24, !dbg !15860
  call void @llvm.dbg.value(metadata i32 undef, metadata !15857, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i8 poison, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15855, metadata !DIExpression()), !dbg !15859
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15865
  call void @llvm.dbg.value(metadata i1 %6, metadata !15854, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15858
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15868

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #24, !dbg !15869
  %11 = load i8, i8* %4, align 1, !dbg !15875
  %12 = and i8 %11, 127, !dbg !15875
  store i8 %12, i8* %4, align 1, !dbg !15875
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #24, !dbg !15876
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15878
  store i8 %9, i8* %8, align 2, !dbg !15879
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #24, !dbg !15880
  %13 = load i8, i8* %4, align 1, !dbg !15882
  %14 = or i8 %13, -128, !dbg !15882
  store i8 %14, i8* %4, align 1, !dbg !15882
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #24, !dbg !15883
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #24, !dbg !15885
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #24, !dbg !15885
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15887
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14925, metadata !DIExpression()) #24, !dbg !15885
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15888
  br i1 %16, label %26, label %17, !dbg !15887

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14925, metadata !DIExpression()) #24, !dbg !15885
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15889
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14925, metadata !DIExpression()) #24, !dbg !15885
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15890
  %21 = icmp sgt i32 %20, 0, !dbg !15891
  br i1 %21, label %22, label %23, !dbg !15892

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15893
  br label %27, !dbg !15894

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15888
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14925, metadata !DIExpression()) #24, !dbg !15885
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15888
  br i1 %25, label %26, label %17, !dbg !15887, !llvm.loop !15895

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15897
  br label %27, !dbg !15898

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15899
  br label %29, !dbg !15900

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15901
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15862
  call void @llvm.dbg.value(metadata i32 %30, metadata !14730, metadata !DIExpression()) #24, !dbg !15864
  call void @llvm.dbg.value(metadata i32 %30, metadata !14724, metadata !DIExpression()) #24, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %30, metadata !15857, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #24, !dbg !15903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15905
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15907, !srcloc !14759
  call void @llvm.dbg.value(metadata i8 poison, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15855, metadata !DIExpression()), !dbg !15859
  ret i1 %6, !dbg !15908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15913, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata i32 %1, metadata !15914, metadata !DIExpression()), !dbg !15916
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15917
  call void @llvm.dbg.value(metadata i1 %3, metadata !15915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15916
  br i1 %3, label %4, label %12, !dbg !15918

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15920
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15921
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15921
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15921
  %9 = load i8, i8* %8, align 1, !dbg !15921
  %10 = icmp eq i8 %9, 0, !dbg !15922
  br i1 %10, label %11, label %12, !dbg !15923

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15924
  br label %12, !dbg !15926

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15928 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15930, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15934
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15936, !srcloc !14733
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15936
  call void @llvm.dbg.value(metadata i32 %2, metadata !14730, metadata !DIExpression()) #24, !dbg !15938
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15938
  call void @llvm.dbg.value(metadata i32 %2, metadata !14724, metadata !DIExpression()) #24, !dbg !15934
  call void @llvm.dbg.value(metadata i32 %2, metadata !15932, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15930, metadata !DIExpression()), !dbg !15933
  tail call fastcc void @z_sched_lock() #26, !dbg !15939
  call void @llvm.dbg.value(metadata i32 %2, metadata !14745, metadata !DIExpression()) #24, !dbg !15942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15942
  call void @llvm.dbg.value(metadata i32 %2, metadata !14753, metadata !DIExpression()) #24, !dbg !15944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15946, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15930, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15930, metadata !DIExpression()), !dbg !15933
  ret void, !dbg !15947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15948 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15949
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15950
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15950
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15950
  %5 = load i8, i8* %4, align 1, !dbg !15951
  %6 = add i8 %5, -1, !dbg !15951
  store i8 %6, i8* %4, align 1, !dbg !15951
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15952, !srcloc !15954
  ret void, !dbg !15955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15956 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15958, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !15962
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15964, !srcloc !14733
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %2, metadata !14730, metadata !DIExpression()) #24, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %2, metadata !14724, metadata !DIExpression()) #24, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %2, metadata !15960, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15958, metadata !DIExpression()), !dbg !15961
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15967
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15970
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15970
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15970
  %7 = load i8, i8* %6, align 1, !dbg !15971
  %8 = add i8 %7, 1, !dbg !15971
  store i8 %8, i8* %6, align 1, !dbg !15971
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15972
  call void @llvm.dbg.value(metadata i32 %2, metadata !14745, metadata !DIExpression()) #24, !dbg !15973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !15973
  call void @llvm.dbg.value(metadata i32 %2, metadata !14753, metadata !DIExpression()) #24, !dbg !15975
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15977, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 1, metadata !15958, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15958, metadata !DIExpression()), !dbg !15961
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15978
  ret void, !dbg !15979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15980 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15981
  ret %struct.k_thread* %1, !dbg !15982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15983 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15987, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15988, metadata !DIExpression()), !dbg !15992
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15993
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15989, metadata !DIExpression()), !dbg !15992
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15994
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15990, metadata !DIExpression()), !dbg !15992
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !15995
  call void @llvm.dbg.value(metadata i32 %5, metadata !15991, metadata !DIExpression()), !dbg !15992
  %6 = icmp sgt i32 %5, 0, !dbg !15996
  br i1 %6, label %17, label %7, !dbg !15998

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15999
  br i1 %8, label %17, label %9, !dbg !16001

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16002
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16002
  %12 = load i32, i32* %11, align 8, !dbg !16002
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16004
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16004
  %15 = load i32, i32* %14, align 8, !dbg !16004
  %16 = icmp ult i32 %12, %15, !dbg !16005
  br label %17, !dbg !16006

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16007
  ret i1 %18, !dbg !16008
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16009 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16026, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16027, metadata !DIExpression()), !dbg !16041
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16042
  %5 = load i32, i32* %4, align 4, !dbg !16043
  %6 = add nsw i32 %5, 1, !dbg !16043
  store i32 %6, i32* %4, align 4, !dbg !16043
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16044
  store i32 %5, i32* %7, align 8, !dbg !16045
  %8 = load i32, i32* %4, align 4, !dbg !16046
  %9 = icmp eq i32 %8, 0, !dbg !16047
  br i1 %9, label %10, label %32, !dbg !16048

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16049
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16049
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16029, metadata !DIExpression()), !dbg !16049
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16049
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16049
  %14 = load i32, i32* %13, align 4, !dbg !16049
  %15 = shl i32 %14, 2, !dbg !16049
  %16 = alloca i8, i32 %15, align 8, !dbg !16049
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16049
  store i8* %16, i8** %17, align 4, !dbg !16049
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16049
  %19 = alloca i8, i32 %14, align 8, !dbg !16049
  store i8* %19, i8** %18, align 4, !dbg !16049
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16049
  store i32 -1, i32* %20, align 4, !dbg !16049
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16050
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16038, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16028, metadata !DIExpression()), !dbg !16041
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16052
  br i1 %22, label %23, label %24, !dbg !16049

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16052
  br label %32, !dbg !16053

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16028, metadata !DIExpression()), !dbg !16041
  %26 = load i32, i32* %4, align 4, !dbg !16054
  %27 = add nsw i32 %26, 1, !dbg !16054
  store i32 %27, i32* %4, align 4, !dbg !16054
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16056
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16056
  store i32 %26, i32* %29, align 8, !dbg !16057
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16050
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16038, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16028, metadata !DIExpression()), !dbg !16041
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16052
  br i1 %31, label %23, label %24, !dbg !16049, !llvm.loop !16058

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16060
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16061
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16062
  ret void, !dbg !16063
}

; Function Attrs: optsize
declare !dbg !16064 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16069 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16072 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16074, metadata !DIExpression()), !dbg !16076
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16075, metadata !DIExpression()), !dbg !16076
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16077
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16078
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16079
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16080
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16080
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16082
  br i1 %7, label %8, label %10, !dbg !16083

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16084
  store i32 0, i32* %9, align 4, !dbg !16086
  br label %10, !dbg !16087

10:                                               ; preds = %8, %2
  ret void, !dbg !16088
}

; Function Attrs: optsize
declare !dbg !16089 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16090 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16094, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16095, metadata !DIExpression()), !dbg !16097
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16098
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16099
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16096, metadata !DIExpression()), !dbg !16097
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16095, metadata !DIExpression()), !dbg !16097
  ret %struct.k_thread* %4, !dbg !16100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16101 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16105, metadata !DIExpression()), !dbg !16106
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16107
  ret %struct.rbnode* %2, !dbg !16108
}

; Function Attrs: optsize
declare !dbg !16109 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16112 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16124, metadata !DIExpression()), !dbg !16128
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16129
  %3 = load i32, i32* %2, align 4, !dbg !16129
  %4 = icmp eq i32 %3, 0, !dbg !16131
  br i1 %4, label %10, label %5, !dbg !16132

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16125, metadata !DIExpression()), !dbg !16128
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16133, !range !3866
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16134
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16126, metadata !DIExpression()), !dbg !16128
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16135
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16127, metadata !DIExpression()), !dbg !16128
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16125, metadata !DIExpression()), !dbg !16128
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16128
  ret %struct.k_thread* %11, !dbg !16136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16137 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16141, metadata !DIExpression()), !dbg !16144
  call void @llvm.dbg.value(metadata i32 0, metadata !16142, metadata !DIExpression()), !dbg !16144
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16145
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16143, metadata !DIExpression()), !dbg !16144
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16146
  br i1 %3, label %8, label %4, !dbg !16147

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16148
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16150
  call void @llvm.dbg.value(metadata i32 1, metadata !16142, metadata !DIExpression()), !dbg !16144
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16145
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16143, metadata !DIExpression()), !dbg !16144
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16146
  br i1 %7, label %8, label %4, !dbg !16147, !llvm.loop !16151

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16144
  ret i32 %9, !dbg !16153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16154 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16156, metadata !DIExpression()), !dbg !16157
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16158
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16159
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16160
  ret %struct.k_thread* %4, !dbg !16161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16162 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16171, metadata !DIExpression()), !dbg !16172
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16173
  tail call fastcc void @sys_dlist_init.171(%struct._dnode* noundef nonnull %2) #26, !dbg !16174
  ret void, !dbg !16175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.171(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16176 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16180, metadata !DIExpression()), !dbg !16181
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16182
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16183
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16184
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16185
  ret void, !dbg !16186
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16187 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16188
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16189
  ret void, !dbg !16190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16196, metadata !DIExpression()), !dbg !16197
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16198
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16198
  %4 = load i8, i8* %3, align 2, !dbg !16198
  %5 = sext i8 %4 to i32, !dbg !16199
  ret i32 %5, !dbg !16200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16205, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata i32 %1, metadata !16206, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16207, metadata !DIExpression()), !dbg !16208
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16209
  ret void, !dbg !16210
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16211 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16212
  br i1 %1, label %8, label %2, !dbg !16213

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16214
  br i1 %3, label %8, label %4, !dbg !16215

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16216
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16217
  %7 = xor i1 %6, true, !dbg !16215
  br label %8, !dbg !16215

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16219 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16220, !range !7170
  %2 = icmp eq i8 %1, 0, !dbg !16220
  ret i1 %2, !dbg !16221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16222 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !16225
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16227, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !16229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #24, !dbg !16225
  call void @llvm.dbg.value(metadata i32 undef, metadata !16224, metadata !DIExpression()), !dbg !16230
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16231
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14887, metadata !DIExpression()) #24, !dbg !16234
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16236
  %4 = load i8, i8* %3, align 1, !dbg !16237
  %5 = and i8 %4, 127, !dbg !16237
  store i8 %5, i8* %3, align 1, !dbg !16237
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14895, metadata !DIExpression()) #24, !dbg !16238
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16240
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16241
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14904, metadata !DIExpression()) #24, !dbg !16242
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16244
  %8 = load i8, i8* %7, align 1, !dbg !16245
  %9 = or i8 %8, -128, !dbg !16245
  store i8 %9, i8* %7, align 1, !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14911, metadata !DIExpression()) #24, !dbg !16246
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #24, !dbg !16248
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14924, metadata !DIExpression()) #24, !dbg !16248
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16250
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14925, metadata !DIExpression()) #24, !dbg !16248
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16251
  br i1 %11, label %22, label %12, !dbg !16250

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14925, metadata !DIExpression()) #24, !dbg !16248
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16252
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14925, metadata !DIExpression()) #24, !dbg !16248
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16253
  %16 = icmp sgt i32 %15, 0, !dbg !16254
  br i1 %16, label %17, label %19, !dbg !16255

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16256
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16257
  br label %24, !dbg !16258

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16251
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14925, metadata !DIExpression()) #24, !dbg !16248
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16251
  br i1 %21, label %22, label %12, !dbg !16250, !llvm.loop !16259

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16261
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16262
  br label %24, !dbg !16263

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16227
  call void @llvm.dbg.value(metadata i32 %25, metadata !14730, metadata !DIExpression()) #24, !dbg !16229
  call void @llvm.dbg.value(metadata i32 %25, metadata !14724, metadata !DIExpression()) #24, !dbg !16225
  call void @llvm.dbg.value(metadata i32 %25, metadata !16224, metadata !DIExpression()), !dbg !16230
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16264
  call void @llvm.dbg.value(metadata i32 undef, metadata !15329, metadata !DIExpression()) #24, !dbg !16265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #24, !dbg !16265
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16267
  ret void, !dbg !16268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16269 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16273, metadata !DIExpression()), !dbg !16276
  %3 = icmp eq i64 %2, -1, !dbg !16277
  br i1 %3, label %4, label %6, !dbg !16279

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16280
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16282
  br label %11, !dbg !16283

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16274, metadata !DIExpression()), !dbg !16276
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16284
  %8 = sext i32 %7 to i64, !dbg !16284
  call void @llvm.dbg.value(metadata i64 %8, metadata !16274, metadata !DIExpression()), !dbg !16276
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16285
  %10 = trunc i64 %9 to i32, !dbg !16285
  call void @llvm.dbg.value(metadata i32 %10, metadata !16275, metadata !DIExpression()), !dbg !16276
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16276
  ret i32 %12, !dbg !16286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16291, metadata !DIExpression()), !dbg !16292
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16293, !srcloc !16295
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16296
  ret void, !dbg !16297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16298 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16302, metadata !DIExpression()), !dbg !16306
  %2 = icmp eq i64 %0, 0, !dbg !16307
  br i1 %2, label %3, label %4, !dbg !16309

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16310
  br label %29, !dbg !16312

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16304, metadata !DIExpression()), !dbg !16306
  %5 = icmp sgt i64 %0, -3, !dbg !16313
  br i1 %5, label %6, label %10, !dbg !16315

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16316
  %8 = trunc i64 %0 to i32, !dbg !16318
  %9 = add i32 %7, %8, !dbg !16318
  call void @llvm.dbg.value(metadata i32 %9, metadata !16303, metadata !DIExpression()), !dbg !16306
  br label %13, !dbg !16319

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16320
  %12 = sub i32 -2, %11, !dbg !16320
  call void @llvm.dbg.value(metadata i32 %12, metadata !16303, metadata !DIExpression()), !dbg !16306
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16322
  call void @llvm.dbg.value(metadata i32 %14, metadata !16303, metadata !DIExpression()), !dbg !16306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !16323
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16325, !srcloc !14733
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16325
  call void @llvm.dbg.value(metadata i32 %16, metadata !14730, metadata !DIExpression()) #24, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %16, metadata !14724, metadata !DIExpression()) #24, !dbg !16323
  call void @llvm.dbg.value(metadata i32 %16, metadata !16305, metadata !DIExpression()), !dbg !16306
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16328
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16329
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !16330
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16331
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16332
  tail call fastcc void @z_add_thread_timeout.160(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !16332
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16333
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !16334
  call void @llvm.dbg.value(metadata i32 %16, metadata !15329, metadata !DIExpression()) #24, !dbg !16335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #24, !dbg !16335
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16337
  %22 = zext i32 %14 to i64, !dbg !16338
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16339
  %24 = zext i32 %23 to i64, !dbg !16339
  %25 = sub nsw i64 %22, %24, !dbg !16340
  call void @llvm.dbg.value(metadata i64 %25, metadata !16302, metadata !DIExpression()), !dbg !16306
  %26 = icmp sgt i64 %25, 0, !dbg !16341
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16341
  %28 = trunc i64 %27 to i32, !dbg !16341
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16306
  ret i32 %30, !dbg !16342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16343 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16345, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i64 %0, metadata !14765, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i32 10000, metadata !14768, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i32 1000, metadata !14769, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i8 1, metadata !14770, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i1 false, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16347
  call void @llvm.dbg.value(metadata i1 false, metadata !14772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16347
  call void @llvm.dbg.value(metadata i8 0, metadata !14773, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i1 false, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16347
  call void @llvm.dbg.value(metadata i1 true, metadata !14775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16347
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16347
  call void @llvm.dbg.value(metadata i64 %0, metadata !14765, metadata !DIExpression()), !dbg !16347
  %2 = udiv i64 %0, 10, !dbg !16349
  ret i64 %2, !dbg !16353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16354 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16355, !srcloc !16357
  tail call void @z_impl_k_yield() #26, !dbg !16358
  ret void, !dbg !16359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16364, metadata !DIExpression()), !dbg !16366
  %2 = sext i32 %0 to i64, !dbg !16367
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16368
  call void @llvm.dbg.value(metadata i64 %3, metadata !16365, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16366
  %4 = shl i64 %3, 32, !dbg !16369
  %5 = ashr exact i64 %4, 32, !dbg !16369
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %6, metadata !16365, metadata !DIExpression()), !dbg !16366
  %7 = sext i32 %6 to i64, !dbg !16371
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16372
  %9 = trunc i64 %8 to i32, !dbg !16372
  ret i32 %9, !dbg !16373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16374 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16376, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i64 %0, metadata !14765, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14768, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i32 10000, metadata !14769, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i8 1, metadata !14770, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i1 false, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16378
  call void @llvm.dbg.value(metadata i1 true, metadata !14772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16378
  call void @llvm.dbg.value(metadata i8 0, metadata !14773, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i1 false, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16378
  call void @llvm.dbg.value(metadata i1 true, metadata !14775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16378
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16378
  %2 = add i64 %0, 99, !dbg !16380
  call void @llvm.dbg.value(metadata i64 %2, metadata !14765, metadata !DIExpression()), !dbg !16378
  %3 = udiv i64 %2, 100, !dbg !16381
  ret i64 %3, !dbg !16382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16383 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16385, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i64 %0, metadata !14765, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 10000, metadata !14768, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14769, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i8 1, metadata !14770, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i8 0, metadata !14773, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i1 true, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i64 0, metadata !14776, metadata !DIExpression()), !dbg !16387
  %2 = mul i64 %0, 100, !dbg !16389
  ret i64 %2, !dbg !16391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16394, metadata !DIExpression()), !dbg !16395
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16396
  br i1 %2, label %14, label %3, !dbg !16398

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16399
  %5 = icmp slt i32 %4, 0, !dbg !16401
  br i1 %5, label %6, label %10, !dbg !16402

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16403
  %8 = load i8, i8* %7, align 1, !dbg !16403
  %9 = icmp eq i8 %8, 16, !dbg !16406
  br i1 %9, label %10, label %14, !dbg !16407

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16408
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16409
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16410, !srcloc !15369
  call void @llvm.dbg.value(metadata i32 %11, metadata !15365, metadata !DIExpression()) #24, !dbg !16414
  %12 = icmp eq i32 %11, 0, !dbg !16415
  br i1 %12, label %13, label %14, !dbg !16416

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16417
  br label %14, !dbg !16419

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16421 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16423, metadata !DIExpression()), !dbg !16424
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16425
  %3 = load i8, i8* %2, align 1, !dbg !16425
  %4 = and i8 %3, 2, !dbg !16426
  %5 = icmp ne i8 %4, 0, !dbg !16427
  ret i1 %5, !dbg !16428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16429 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16434
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16433, metadata !DIExpression()), !dbg !16435
  ret %struct.k_thread* %1, !dbg !16436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16437 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16438, !srcloc !15369
  call void @llvm.dbg.value(metadata i32 %1, metadata !15365, metadata !DIExpression()) #24, !dbg !16441
  %2 = icmp eq i32 %1, 0, !dbg !16442
  br i1 %2, label %3, label %8, !dbg !16443

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16444
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16445
  %6 = icmp ne i32 %5, 0, !dbg !16443
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16446
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16449, metadata !DIExpression()), !dbg !16451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !16452
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16454, !srcloc !14733
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16454
  call void @llvm.dbg.value(metadata i32 %3, metadata !14730, metadata !DIExpression()) #24, !dbg !16456
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !16456
  call void @llvm.dbg.value(metadata i32 %3, metadata !14724, metadata !DIExpression()) #24, !dbg !16452
  call void @llvm.dbg.value(metadata i32 %3, metadata !16450, metadata !DIExpression()), !dbg !16451
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16457
  %5 = load i8, i8* %4, align 4, !dbg !16457
  %6 = and i8 %5, 1, !dbg !16459
  %7 = icmp eq i8 %6, 0, !dbg !16460
  br i1 %7, label %9, label %8, !dbg !16461

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !16462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16462
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !16465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16467, !srcloc !14759
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16468, !srcloc !16470
  br label %24, !dbg !16471

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16472
  %11 = load i8, i8* %10, align 1, !dbg !16472
  %12 = and i8 %11, 8, !dbg !16474
  %13 = icmp eq i8 %12, 0, !dbg !16475
  br i1 %13, label %15, label %14, !dbg !16476

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !16477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !16480
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16482, !srcloc !14759
  br label %24, !dbg !16483

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16484
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16485
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16487
  br i1 %17, label %18, label %23, !dbg !16488

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16489, !srcloc !15369
  call void @llvm.dbg.value(metadata i32 %19, metadata !15365, metadata !DIExpression()) #24, !dbg !16492
  %20 = icmp eq i32 %19, 0, !dbg !16493
  br i1 %20, label %21, label %23, !dbg !16494

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15329, metadata !DIExpression()) #24, !dbg !16495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #24, !dbg !16495
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16498
  br label %23, !dbg !16499

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14745, metadata !DIExpression()) #24, !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16500
  call void @llvm.dbg.value(metadata i32 %3, metadata !14753, metadata !DIExpression()) #24, !dbg !16502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16504, !srcloc !14759
  br label %24, !dbg !16505

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16508, metadata !DIExpression()), !dbg !16509
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16510
  %3 = load i8, i8* %2, align 1, !dbg !16510
  %4 = and i8 %3, 8, !dbg !16512
  %5 = icmp eq i8 %4, 0, !dbg !16513
  br i1 %5, label %6, label %20, !dbg !16514

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16515
  %8 = or i8 %7, 8, !dbg !16515
  store i8 %8, i8* %2, align 1, !dbg !16515
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16517
  br i1 %9, label %10, label %12, !dbg !16519

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #24, !dbg !16520
  %11 = and i8 %8, 95, !dbg !16523
  store i8 %11, i8* %2, align 1, !dbg !16523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #24, !dbg !16524
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16526
  br label %12, !dbg !16527

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16528
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16528
  %15 = icmp eq %union.anon* %14, null, !dbg !16530
  br i1 %15, label %17, label %16, !dbg !16531

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16532
  br label %17, !dbg !16534

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16535
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16536
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16537
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16538
  br label %20, !dbg !16539

20:                                               ; preds = %17, %1
  ret void, !dbg !16540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16541 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16545, metadata !DIExpression()), !dbg !16547
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16548
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16546, metadata !DIExpression()), !dbg !16547
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16549
  br i1 %3, label %10, label %4, !dbg !16550

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16551
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16553
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16554, metadata !DIExpression()), !dbg !16560
  call void @llvm.dbg.value(metadata i32 0, metadata !16559, metadata !DIExpression()), !dbg !16560
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16562
  store i32 0, i32* %7, align 4, !dbg !16563
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16564
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16548
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16546, metadata !DIExpression()), !dbg !16547
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16549
  br i1 %9, label %10, label %4, !dbg !16550, !llvm.loop !16565

10:                                               ; preds = %4, %1
  ret void, !dbg !16567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16568 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16573, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16572, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !16577
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16579, !srcloc !14733
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16579
  call void @llvm.dbg.value(metadata i32 %4, metadata !14730, metadata !DIExpression()) #24, !dbg !16581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !16581
  call void @llvm.dbg.value(metadata i32 %4, metadata !14724, metadata !DIExpression()) #24, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %4, metadata !16574, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata i32 0, metadata !16575, metadata !DIExpression()), !dbg !16576
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16582
  %6 = load i8, i8* %5, align 1, !dbg !16582
  %7 = and i8 %6, 8, !dbg !16584
  %8 = icmp eq i8 %7, 0, !dbg !16585
  br i1 %8, label %9, label %24, !dbg !16586

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16573, metadata !DIExpression()), !dbg !16576
  %11 = icmp eq i64 %10, 0, !dbg !16587
  br i1 %11, label %24, label %12, !dbg !16589

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16590
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16592
  br i1 %14, label %24, label %15, !dbg !16593

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16594
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16594
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16595
  %19 = icmp eq %union.anon* %17, %18, !dbg !16596
  br i1 %19, label %24, label %20, !dbg !16597

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16598
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !16600
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16601
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16602
  call void @llvm.dbg.value(metadata i32 %4, metadata !15329, metadata !DIExpression()) #24, !dbg !16603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15334, metadata !DIExpression()) #24, !dbg !16603
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16605
  call void @llvm.dbg.value(metadata i32 %23, metadata !16575, metadata !DIExpression()), !dbg !16576
  br label %26, !dbg !16606

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16607
  call void @llvm.dbg.value(metadata i32 %25, metadata !16575, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata i32 %4, metadata !14745, metadata !DIExpression()) #24, !dbg !16608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16608
  call void @llvm.dbg.value(metadata i32 %4, metadata !14753, metadata !DIExpression()) #24, !dbg !16610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16612, !srcloc !14759
  br label %26, !dbg !16613

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16576
  ret i32 %27, !dbg !16614
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16615 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16619, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 %1, metadata !16620, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i8* %2, metadata !16621, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i8 0, metadata !16623, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 0, metadata !16624, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14718, metadata !DIExpression()) #24, !dbg !16629
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16631, !srcloc !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !14731, metadata !DIExpression()) #24, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !14724, metadata !DIExpression()) #24, !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16626, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i8 poison, metadata !16623, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !16624, metadata !DIExpression()), !dbg !16628
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16634
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16622, metadata !DIExpression()), !dbg !16627
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16637
  br i1 %7, label %12, label %8, !dbg !16639

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16640, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i32 %1, metadata !16646, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i8* %2, metadata !16647, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16554, metadata !DIExpression()), !dbg !16651
  call void @llvm.dbg.value(metadata i32 %1, metadata !16559, metadata !DIExpression()), !dbg !16651
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16653
  store i32 %1, i32* %9, align 4, !dbg !16654
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16655
  store i8* %2, i8** %10, align 4, !dbg !16656
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16657
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16658
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16659
  call void @llvm.dbg.value(metadata i8 1, metadata !16623, metadata !DIExpression()), !dbg !16627
  br label %12, !dbg !16660

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16631
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16631
  call void @llvm.dbg.value(metadata i32 %14, metadata !14730, metadata !DIExpression()) #24, !dbg !16633
  call void @llvm.dbg.value(metadata i32 %14, metadata !14724, metadata !DIExpression()) #24, !dbg !16629
  call void @llvm.dbg.value(metadata i32 %14, metadata !16626, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i8 poison, metadata !16623, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14745, metadata !DIExpression()) #24, !dbg !16661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14750, metadata !DIExpression()) #24, !dbg !16661
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !16663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16665, !srcloc !14759
  call void @llvm.dbg.value(metadata i32 undef, metadata !16624, metadata !DIExpression()), !dbg !16628
  ret i1 %13, !dbg !16666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16667 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16673, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata i64 undef, metadata !16675, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16672, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16674, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata i8** %4, metadata !16676, metadata !DIExpression()), !dbg !16678
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16679
  call void @llvm.dbg.value(metadata i32 %6, metadata !16677, metadata !DIExpression()), !dbg !16678
  %7 = icmp eq i8** %4, null, !dbg !16680
  br i1 %7, label %12, label %8, !dbg !16682

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16683
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16685
  %11 = load i8*, i8** %10, align 4, !dbg !16685
  store i8* %11, i8** %4, align 4, !dbg !16686
  br label %12, !dbg !16687

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16688
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16689 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16691
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16692
  ret void, !dbg !16693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16694 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16704, metadata !DIExpression()), !dbg !16721
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16702, metadata !DIExpression()), !dbg !16721
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16703, metadata !DIExpression()), !dbg !16721
  %5 = icmp eq i64 %4, -1, !dbg !16722
  br i1 %5, label %55, label %6, !dbg !16724

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16725
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16726
  call void @llvm.dbg.value(metadata i32 0, metadata !16705, metadata !DIExpression()), !dbg !16727
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !16735
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16737, !srcloc !16743
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16737
  call void @llvm.dbg.value(metadata i32 %9, metadata !16740, metadata !DIExpression()) #24, !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !16744
  call void @llvm.dbg.value(metadata i32 %9, metadata !16734, metadata !DIExpression()) #24, !dbg !16735
  call void @llvm.dbg.value(metadata i32 %9, metadata !16711, metadata !DIExpression()), !dbg !16727
  call void @llvm.dbg.value(metadata i32 undef, metadata !16705, metadata !DIExpression()), !dbg !16727
  %10 = icmp slt i64 %4, -1, !dbg !16745
  br i1 %10, label %11, label %17, !dbg !16746

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16747
  %13 = add i64 %4, %12, !dbg !16748
  %14 = sub i64 -2, %13, !dbg !16748
  call void @llvm.dbg.value(metadata i64 %14, metadata !16715, metadata !DIExpression()), !dbg !16749
  %15 = icmp sgt i64 %14, 1, !dbg !16750
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16750
  br label %22, !dbg !16751

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16752
  %19 = tail call fastcc i32 @elapsed.184() #26, !dbg !16754
  %20 = sext i32 %19 to i64, !dbg !16754
  %21 = add nsw i64 %18, %20, !dbg !16755
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16756
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16757
  store i64 %23, i64* %24, align 8, !dbg !16758
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16759
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16712, metadata !DIExpression()), !dbg !16761
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16762
  br i1 %26, label %42, label %27, !dbg !16762

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16763
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16712, metadata !DIExpression()), !dbg !16761
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16767
  %31 = load i64, i64* %30, align 8, !dbg !16767
  %32 = icmp slt i64 %28, %31, !dbg !16768
  br i1 %32, label %33, label %38, !dbg !16769

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16767
  %35 = sub nsw i64 %31, %28, !dbg !16770
  store i64 %35, i64* %34, align 8, !dbg !16770
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16772
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16773
  tail call fastcc void @sys_dlist_insert.185(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16774
  br label %44, !dbg !16775

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16776
  store i64 %39, i64* %24, align 8, !dbg !16776
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16777
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16712, metadata !DIExpression()), !dbg !16761
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16762
  br i1 %41, label %42, label %27, !dbg !16762, !llvm.loop !16778

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16780
  tail call fastcc void @sys_dlist_append.186(%struct._dnode* noundef %43) #26, !dbg !16783
  br label %44, !dbg !16784

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16785
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16786
  br i1 %46, label %47, label %54, !dbg !16787

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %48, metadata !16718, metadata !DIExpression()), !dbg !16789
  %49 = icmp ne i32 %48, 0, !dbg !16790
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16792
  br i1 %52, label %54, label %53, !dbg !16792

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16793
  br label %54, !dbg !16795

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16796, metadata !DIExpression()) #24, !dbg !16802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !16802
  call void @llvm.dbg.value(metadata i32 %9, metadata !16804, metadata !DIExpression()) #24, !dbg !16807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16809, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !16705, metadata !DIExpression()), !dbg !16727
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.184() unnamed_addr #1 !dbg !16812 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16815
  %2 = icmp eq i32 %1, 0, !dbg !16816
  br i1 %2, label %3, label %5, !dbg !16815

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16817
  br label %5, !dbg !16815

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16815
  ret i32 %6, !dbg !16818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16819 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.189() #26, !dbg !16825
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16823, metadata !DIExpression()), !dbg !16826
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16827
  ret %struct._timeout* %2, !dbg !16828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.185(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16829 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16833, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16834, metadata !DIExpression()), !dbg !16837
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16838
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16838
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16835, metadata !DIExpression()), !dbg !16837
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16839
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16840
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16841
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16842
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16843
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16844
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16845
  ret void, !dbg !16846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16847 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16851, metadata !DIExpression()), !dbg !16853
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16854
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.187(%struct._dnode* noundef %2) #26, !dbg !16855
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16852, metadata !DIExpression()), !dbg !16853
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16856
  ret %struct._timeout* %4, !dbg !16857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.186(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16858 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16863, metadata !DIExpression()), !dbg !16866
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16864, metadata !DIExpression()), !dbg !16866
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16867
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16865, metadata !DIExpression()), !dbg !16866
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16868
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16869
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16870
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16871
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16872
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16873
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16874
  ret void, !dbg !16875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16876 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16881
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16878, metadata !DIExpression()), !dbg !16882
  %2 = tail call fastcc i32 @elapsed.184() #26, !dbg !16883
  call void @llvm.dbg.value(metadata i32 %2, metadata !16879, metadata !DIExpression()), !dbg !16882
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16884
  br i1 %3, label %14, label %4, !dbg !16886

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16887
  %6 = load i64, i64* %5, align 8, !dbg !16887
  %7 = sext i32 %2 to i64, !dbg !16888
  %8 = sub nsw i64 %6, %7, !dbg !16889
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16890
  br i1 %9, label %14, label %10, !dbg !16891

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16892
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16892
  %13 = trunc i64 %12 to i32, !dbg !16892
  call void @llvm.dbg.value(metadata i32 %13, metadata !16880, metadata !DIExpression()), !dbg !16882
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16894
  call void @llvm.dbg.value(metadata i32 %15, metadata !16880, metadata !DIExpression()), !dbg !16882
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16895
  %17 = icmp ne i32 %16, 0, !dbg !16897
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16898
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16898
  call void @llvm.dbg.value(metadata i32 %20, metadata !16880, metadata !DIExpression()), !dbg !16882
  ret i32 %20, !dbg !16899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.187(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16900 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16904, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16905, metadata !DIExpression()), !dbg !16906
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16907
  br i1 %2, label %5, label %3, !dbg !16908

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.188(%struct._dnode* noundef nonnull %0) #26, !dbg !16909
  br label %5, !dbg !16908

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16908
  ret %struct._dnode* %6, !dbg !16910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.188(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16911 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16913, metadata !DIExpression()), !dbg !16915
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16914, metadata !DIExpression()), !dbg !16915
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16916
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16917
  br i1 %3, label %7, label %4, !dbg !16918

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16919
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16919
  br label %7, !dbg !16918

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16918
  ret %struct._dnode* %8, !dbg !16920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.189() unnamed_addr #5 !dbg !16921 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16925, metadata !DIExpression()), !dbg !16926
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.190() #26, !dbg !16927
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16927
  ret %struct._dnode* %3, !dbg !16928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.190() unnamed_addr #5 !dbg !16929 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16933, metadata !DIExpression()), !dbg !16934
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16935
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16936
  ret i1 %2, !dbg !16937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16938 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16942, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 -22, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 0, metadata !16944, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !16949
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16951, !srcloc !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #24, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16946, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i32 -22, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16948
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16943, metadata !DIExpression()), !dbg !16947
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.193(%struct._dnode* noundef %3) #26, !dbg !16954
  br i1 %4, label %5, label %6, !dbg !16958

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16959
  call void @llvm.dbg.value(metadata i32 0, metadata !16943, metadata !DIExpression()), !dbg !16947
  br label %6, !dbg !16961

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16947
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %8, metadata !16740, metadata !DIExpression()) #24, !dbg !16953
  call void @llvm.dbg.value(metadata i32 %8, metadata !16734, metadata !DIExpression()) #24, !dbg !16949
  call void @llvm.dbg.value(metadata i32 %8, metadata !16946, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i32 %7, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #24, !dbg !16962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16804, metadata !DIExpression()) #24, !dbg !16964
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !16966, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16948
  ret i32 %7, !dbg !16967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.193(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16968 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16974, metadata !DIExpression()), !dbg !16975
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16976
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16976
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16977
  ret i1 %4, !dbg !16978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16979 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16981, metadata !DIExpression()), !dbg !16982
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !16983
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16985
  br i1 %3, label %10, label %4, !dbg !16986

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16987
  %6 = load i64, i64* %5, align 8, !dbg !16987
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16989
  %8 = load i64, i64* %7, align 8, !dbg !16990
  %9 = add nsw i64 %8, %6, !dbg !16990
  store i64 %9, i64* %7, align 8, !dbg !16990
  br label %10, !dbg !16991

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16992
  tail call fastcc void @sys_dlist_remove.194(%struct._dnode* noundef %11) #26, !dbg !16993
  ret void, !dbg !16994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.194(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16995 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16999, metadata !DIExpression()), !dbg !17002
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17003
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17003
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17000, metadata !DIExpression()), !dbg !17002
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17004
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17004
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17001, metadata !DIExpression()), !dbg !17002
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17005
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17006
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17007
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17008
  tail call fastcc void @sys_dnode_init.195(%struct._dnode* noundef %0) #26, !dbg !17009
  ret void, !dbg !17010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.195(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17011 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17013, metadata !DIExpression()), !dbg !17014
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17015
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17016
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17017
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17018
  ret void, !dbg !17019
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17020 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17026, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i64 0, metadata !17027, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 0, metadata !17028, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !17033
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17035, !srcloc !16743
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17035
  call void @llvm.dbg.value(metadata i32 %3, metadata !16740, metadata !DIExpression()) #24, !dbg !17037
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !17037
  call void @llvm.dbg.value(metadata i32 %3, metadata !16734, metadata !DIExpression()) #24, !dbg !17033
  call void @llvm.dbg.value(metadata i32 %3, metadata !17030, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i64 0, metadata !17027, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()), !dbg !17032
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17038
  call void @llvm.dbg.value(metadata i64 %4, metadata !17027, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i32 %3, metadata !16796, metadata !DIExpression()) #24, !dbg !17041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !17041
  call void @llvm.dbg.value(metadata i32 %3, metadata !16804, metadata !DIExpression()) #24, !dbg !17043
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17045, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()), !dbg !17032
  ret i64 %4, !dbg !17046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17047 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17049, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i64 0, metadata !17050, metadata !DIExpression()), !dbg !17053
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.196(%struct._timeout* noundef %0) #26, !dbg !17054
  br i1 %2, label %21, label %3, !dbg !17056

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17057
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17051, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i64 0, metadata !17050, metadata !DIExpression()), !dbg !17053
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17059
  br i1 %5, label %16, label %6, !dbg !17061

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17051, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i64 %8, metadata !17050, metadata !DIExpression()), !dbg !17053
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17062
  %10 = load i64, i64* %9, align 8, !dbg !17062
  %11 = add nsw i64 %10, %8, !dbg !17064
  call void @llvm.dbg.value(metadata i64 %11, metadata !17050, metadata !DIExpression()), !dbg !17053
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17065
  br i1 %12, label %16, label %13, !dbg !17067

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17068
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17051, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i64 %11, metadata !17050, metadata !DIExpression()), !dbg !17053
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17059
  br i1 %15, label %16, label %6, !dbg !17061, !llvm.loop !17069

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17053
  call void @llvm.dbg.value(metadata i64 %17, metadata !17050, metadata !DIExpression()), !dbg !17053
  %18 = tail call fastcc i32 @elapsed.184() #26, !dbg !17071
  %19 = sext i32 %18 to i64, !dbg !17071
  %20 = sub nsw i64 %17, %19, !dbg !17072
  br label %21, !dbg !17073

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17053
  ret i64 %22, !dbg !17074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.196(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17075 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17079, metadata !DIExpression()), !dbg !17080
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17081
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.193(%struct._dnode* noundef %2) #26, !dbg !17082
  %4 = xor i1 %3, true, !dbg !17083
  ret i1 %4, !dbg !17084
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17085 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17087, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i64 0, metadata !17088, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i32 0, metadata !17089, metadata !DIExpression()), !dbg !17093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !17094
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17096, !srcloc !16743
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17096
  call void @llvm.dbg.value(metadata i32 %3, metadata !16740, metadata !DIExpression()) #24, !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !17098
  call void @llvm.dbg.value(metadata i32 %3, metadata !16734, metadata !DIExpression()) #24, !dbg !17094
  call void @llvm.dbg.value(metadata i32 %3, metadata !17091, metadata !DIExpression()), !dbg !17093
  call void @llvm.dbg.value(metadata i64 0, metadata !17088, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17093
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17099
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17102
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17088, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17092
  call void @llvm.dbg.value(metadata i32 %3, metadata !16796, metadata !DIExpression()) #24, !dbg !17103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %3, metadata !16804, metadata !DIExpression()) #24, !dbg !17105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17107, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17093
  %6 = add i64 %5, %4, !dbg !17108
  ret i64 %6, !dbg !17109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17110 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 0, metadata !17113, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !17118
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17120, !srcloc !16743
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17120
  call void @llvm.dbg.value(metadata i32 %2, metadata !16740, metadata !DIExpression()) #24, !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !17122
  call void @llvm.dbg.value(metadata i32 %2, metadata !16734, metadata !DIExpression()) #24, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %2, metadata !17115, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i32 -1, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !17113, metadata !DIExpression()), !dbg !17117
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17123
  call void @llvm.dbg.value(metadata i32 %3, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 %2, metadata !16796, metadata !DIExpression()) #24, !dbg !17126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !17126
  call void @llvm.dbg.value(metadata i32 %2, metadata !16804, metadata !DIExpression()) #24, !dbg !17128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17130, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17113, metadata !DIExpression()), !dbg !17117
  ret i32 %3, !dbg !17131
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17134, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i1 %1, metadata !17135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17144
  call void @llvm.dbg.value(metadata i32 0, metadata !17136, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !17146
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17148, !srcloc !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #24, !dbg !17146
  call void @llvm.dbg.value(metadata i32 undef, metadata !17138, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata i32 undef, metadata !17136, metadata !DIExpression()), !dbg !17145
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17151
  call void @llvm.dbg.value(metadata i32 %4, metadata !17139, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.value(metadata i1 undef, metadata !17142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17152
  %5 = icmp slt i32 %4, 2, !dbg !17153
  call void @llvm.dbg.value(metadata i1 %5, metadata !17143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17152
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17154
  call void @llvm.dbg.value(metadata i1 %6, metadata !17142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17152
  br i1 %7, label %11, label %8, !dbg !17154

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17156
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17156
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17158
  br label %11, !dbg !17159

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17148
  call void @llvm.dbg.value(metadata i32 %12, metadata !16740, metadata !DIExpression()) #24, !dbg !17150
  call void @llvm.dbg.value(metadata i32 %12, metadata !16734, metadata !DIExpression()) #24, !dbg !17146
  call void @llvm.dbg.value(metadata i32 %12, metadata !17138, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()) #24, !dbg !17160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !16804, metadata !DIExpression()) #24, !dbg !17162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17164, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 1, metadata !17136, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata i32 undef, metadata !17136, metadata !DIExpression()), !dbg !17145
  ret void, !dbg !17165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17170, metadata !DIExpression()), !dbg !17175
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !17177
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17179, !srcloc !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #24, !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17182
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17183
  br i1 %4, label %28, label %5, !dbg !17184

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17185
  %10 = load i64, i64* %9, align 8, !dbg !17185
  %11 = sext i32 %8 to i64, !dbg !17186
  %12 = icmp sgt i64 %10, %11, !dbg !17187
  br i1 %12, label %26, label %13, !dbg !17188

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17175
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17172, metadata !DIExpression()), !dbg !17189
  %15 = trunc i64 %10 to i32, !dbg !17190
  call void @llvm.dbg.value(metadata i32 %15, metadata !17174, metadata !DIExpression()), !dbg !17189
  %16 = sext i32 %15 to i64, !dbg !17191
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17192
  %18 = add i64 %17, %16, !dbg !17192
  store i64 %18, i64* @curr_tick, align 8, !dbg !17192
  store i64 0, i64* %9, align 8, !dbg !17193
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17194
  call void @llvm.dbg.value(metadata i32 %14, metadata !16796, metadata !DIExpression()) #24, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !17195
  call void @llvm.dbg.value(metadata i32 %14, metadata !16804, metadata !DIExpression()) #24, !dbg !17197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17199, !srcloc !16810
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17200
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17200
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !17202
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17204, !srcloc !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !17206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16734, metadata !DIExpression()) #24, !dbg !17202
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17207
  %23 = sub nsw i32 %22, %15, !dbg !17207
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17182
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17183
  br i1 %25, label %28, label %5, !dbg !17184, !llvm.loop !17208

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17210
  store i64 %27, i64* %9, align 8, !dbg !17210
  br label %32, !dbg !17213

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17175
  %31 = sext i32 %30 to i64, !dbg !17214
  br label %32, !dbg !17214

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17214
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17175
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17215
  %37 = add i64 %36, %33, !dbg !17215
  store i64 %37, i64* @curr_tick, align 8, !dbg !17215
  store i32 0, i32* @announce_remaining, align 4, !dbg !17216
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17217
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17218
  call void @llvm.dbg.value(metadata i32 %35, metadata !16796, metadata !DIExpression()) #24, !dbg !17219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !17219
  call void @llvm.dbg.value(metadata i32 %35, metadata !16804, metadata !DIExpression()) #24, !dbg !17221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17223, !srcloc !16810
  ret void, !dbg !17224
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17225 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17229, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata i32 0, metadata !17230, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16728, metadata !DIExpression()) #24, !dbg !17235
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17237, !srcloc !16743
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17237
  call void @llvm.dbg.value(metadata i32 %2, metadata !16740, metadata !DIExpression()) #24, !dbg !17239
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()) #24, !dbg !17239
  call void @llvm.dbg.value(metadata i32 %2, metadata !16734, metadata !DIExpression()) #24, !dbg !17235
  call void @llvm.dbg.value(metadata i32 %2, metadata !17232, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata i64 0, metadata !17229, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata i32 undef, metadata !17230, metadata !DIExpression()), !dbg !17234
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17240
  %4 = tail call fastcc i32 @elapsed.184() #26, !dbg !17243
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17229, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17233
  call void @llvm.dbg.value(metadata i32 %2, metadata !16796, metadata !DIExpression()) #24, !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16801, metadata !DIExpression()) #24, !dbg !17244
  call void @llvm.dbg.value(metadata i32 %2, metadata !16804, metadata !DIExpression()) #24, !dbg !17246
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17248, !srcloc !16810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17230, metadata !DIExpression()), !dbg !17234
  %5 = sext i32 %4 to i64, !dbg !17243
  %6 = add i64 %3, %5, !dbg !17249
  ret i64 %6, !dbg !17250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17251 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17252
  %2 = trunc i64 %1 to i32, !dbg !17253
  ret i32 %2, !dbg !17254
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17255 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17256
  ret i64 %1, !dbg !17257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17260, metadata !DIExpression()), !dbg !17267
  %2 = icmp eq i32 %0, 0, !dbg !17268
  br i1 %2, label %10, label %3, !dbg !17270

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %4, metadata !17261, metadata !DIExpression()), !dbg !17267
  %5 = mul i32 %0, 84, !dbg !17272
  call void @llvm.dbg.value(metadata i32 %5, metadata !17262, metadata !DIExpression()), !dbg !17267
  br label %6, !dbg !17273

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17274
  call void @llvm.dbg.value(metadata i32 %7, metadata !17263, metadata !DIExpression()), !dbg !17275
  %8 = sub i32 %7, %4, !dbg !17276
  %9 = icmp ult i32 %8, %5, !dbg !17278
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17280 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17281
  ret i32 %1, !dbg !17282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17283 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17285
  ret i32 %1, !dbg !17286
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17287 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17291, metadata !DIExpression()), !dbg !17293
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17294

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17295
  br label %14, !dbg !17299

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17292, metadata !DIExpression()), !dbg !17293
  %6 = icmp slt i64 %2, -1, !dbg !17300
  br i1 %6, label %7, label %9, !dbg !17303

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17304
  br label %14, !dbg !17305

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17307
  %11 = icmp ugt i64 %2, 1, !dbg !17308
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17308
  %13 = add nsw i64 %10, %12, !dbg !17309
  br label %14, !dbg !17310

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17311
  ret i64 %15, !dbg !17312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17313 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.205, i32 0, i32 0)) #25, !dbg !17315
  ret void, !dbg !17316
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17317 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17319, metadata !DIExpression()), !dbg !17339
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17320, metadata !DIExpression()), !dbg !17340
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17341

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17342

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17320, metadata !DIExpression()), !dbg !17340
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17343
  %6 = load i8*, i8** %5, align 4, !dbg !17343
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17347
  %8 = load i32, i32* %7, align 4, !dbg !17347
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !17348
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17349
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17320, metadata !DIExpression()), !dbg !17340
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17350
  br i1 %10, label %3, label %2, !dbg !17341, !llvm.loop !17352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17354 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17358, metadata !DIExpression()), !dbg !17361
  call void @llvm.dbg.value(metadata i8* %1, metadata !17359, metadata !DIExpression()), !dbg !17361
  call void @llvm.dbg.value(metadata i32 %2, metadata !17360, metadata !DIExpression()), !dbg !17361
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17362
  tail call fastcc void @z_waitq_init.207(%union.anon* noundef nonnull %4) #26, !dbg !17363
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17364
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !17365
  ret void, !dbg !17366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.207(%union.anon* noundef %0) unnamed_addr #4 !dbg !17367 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17372, metadata !DIExpression()), !dbg !17373
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17374
  tail call fastcc void @sys_dlist_init.208(%struct._dnode* noundef %2) #26, !dbg !17375
  ret void, !dbg !17376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.208(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17377 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17382, metadata !DIExpression()), !dbg !17383
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17384
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17385
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17386
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17387
  ret void, !dbg !17388
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17389 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17400, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17397, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i32 %1, metadata !17398, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i32 %2, metadata !17399, metadata !DIExpression()), !dbg !17410
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17411
  call void @llvm.dbg.value(metadata i64 %6, metadata !17402, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i8* null, metadata !17403, metadata !DIExpression()), !dbg !17410
  %7 = icmp eq i64 %5, -1, !dbg !17412
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17412
  call void @llvm.dbg.value(metadata i64 %8, metadata !17402, metadata !DIExpression()), !dbg !17410
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17414, metadata !DIExpression()) #24, !dbg !17421
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17423, !srcloc !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17426, metadata !DIExpression()) #24, !dbg !17430
  call void @llvm.dbg.value(metadata i32 undef, metadata !17427, metadata !DIExpression()) #24, !dbg !17430
  call void @llvm.dbg.value(metadata i32 undef, metadata !17420, metadata !DIExpression()) #24, !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !17404, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i8 0, metadata !17409, metadata !DIExpression()), !dbg !17410
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17403, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i8 0, metadata !17409, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !17404, metadata !DIExpression()), !dbg !17410
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17431
  call void @llvm.dbg.value(metadata i8* %12, metadata !17403, metadata !DIExpression()), !dbg !17410
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !17433
  call void @llvm.dbg.value(metadata i64 %13, metadata !17401, metadata !DIExpression()), !dbg !17410
  %14 = icmp eq i8* %12, null, !dbg !17434
  br i1 %14, label %15, label %31, !dbg !17436

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17404, metadata !DIExpression()), !dbg !17410
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17436

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17409, metadata !DIExpression()), !dbg !17410
  %20 = sub nsw i64 %8, %18, !dbg !17437
  %21 = icmp slt i64 %20, 1, !dbg !17438
  br i1 %21, label %31, label %22, !dbg !17439

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17410
  call void @llvm.dbg.value(metadata i8 undef, metadata !17409, metadata !DIExpression()), !dbg !17410
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17440
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17440
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !17440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17414, metadata !DIExpression()) #24, !dbg !17441
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17443, !srcloc !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17426, metadata !DIExpression()) #24, !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !17427, metadata !DIExpression()) #24, !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !17420, metadata !DIExpression()) #24, !dbg !17441
  call void @llvm.dbg.value(metadata i32 undef, metadata !17404, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i8* null, metadata !17403, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !17404, metadata !DIExpression()), !dbg !17410
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17431
  call void @llvm.dbg.value(metadata i8* %28, metadata !17403, metadata !DIExpression()), !dbg !17410
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !17433
  call void @llvm.dbg.value(metadata i64 %29, metadata !17401, metadata !DIExpression()), !dbg !17410
  %30 = icmp eq i8* %28, null, !dbg !17434
  br i1 %30, label %17, label %31, !dbg !17436, !llvm.loop !17446

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17431
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17410
  call void @llvm.dbg.value(metadata i8* %33, metadata !17403, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata i32 %34, metadata !17449, metadata !DIExpression()) #24, !dbg !17455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17455
  call void @llvm.dbg.value(metadata i32 %34, metadata !17457, metadata !DIExpression()) #24, !dbg !17460
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !17462, !srcloc !17463
  ret i8* %33, !dbg !17464
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17465 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17471, metadata !DIExpression()), !dbg !17473
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17469, metadata !DIExpression()), !dbg !17473
  call void @llvm.dbg.value(metadata i32 %1, metadata !17470, metadata !DIExpression()), !dbg !17473
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17474
  call void @llvm.dbg.value(metadata i8* %4, metadata !17472, metadata !DIExpression()), !dbg !17473
  ret i8* %4, !dbg !17475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17476 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17480, metadata !DIExpression()), !dbg !17483
  call void @llvm.dbg.value(metadata i8* %1, metadata !17481, metadata !DIExpression()), !dbg !17483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17414, metadata !DIExpression()) #24, !dbg !17484
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17486, !srcloc !17429
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17486
  call void @llvm.dbg.value(metadata i32 %4, metadata !17426, metadata !DIExpression()) #24, !dbg !17488
  call void @llvm.dbg.value(metadata i32 undef, metadata !17427, metadata !DIExpression()) #24, !dbg !17488
  call void @llvm.dbg.value(metadata i32 %4, metadata !17420, metadata !DIExpression()) #24, !dbg !17484
  call void @llvm.dbg.value(metadata i32 %4, metadata !17482, metadata !DIExpression()), !dbg !17483
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17489
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !17490
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17491
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !17493
  %8 = icmp eq i32 %7, 0, !dbg !17494
  br i1 %8, label %12, label %9, !dbg !17495

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17496
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17497
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !17497
  br label %13, !dbg !17499

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17449, metadata !DIExpression()) #24, !dbg !17500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17500
  call void @llvm.dbg.value(metadata i32 %4, metadata !17457, metadata !DIExpression()) #24, !dbg !17503
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17505, !srcloc !17463
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17506
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!753, !2, !2541, !2543, !27, !2545, !2547, !2580, !2617, !111, !168, !2619, !197, !2701, !2712, !2758, !2760, !2788, !2816, !2859, !2930, !2975, !341, !490, !3003, !526, !536, !561, !785, !3008, !921, !1123, !1431, !1695, !3046, !1808, !1898, !3048, !3133, !3197, !1946, !3200, !1952, !2313, !3218, !2333, !2356, !3220, !2471, !3223, !2510}
!llvm.ident = !{!3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225, !3225}
!llvm.module.flags = !{!3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 372, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "console_serial", scope: !197, file: !288, line: 13, type: !294, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !285, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!199 = !{!200, !102, !103}
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !225, !229, !233, !246, !251, !257, !263, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !202, file: !203, line: 365, baseType: !206, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DISubroutineType(types: !208)
!208 = !{!103, !209, !224}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !212)
!212 = !{!213, !214, !215, !216, !222, !223}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !211, file: !141, line: 380, baseType: !144, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !211, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !211, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !211, file: !141, line: 386, baseType: !217, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !219)
!219 = !{!220, !221}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !218, file: !141, line: 359, baseType: !154, size: 8)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !218, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !211, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !211, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !202, file: !203, line: 366, baseType: !226, size: 32, offset: 32)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !209, !155}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !202, file: !203, line: 374, baseType: !230, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !209}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !202, file: !203, line: 377, baseType: !234, size: 32, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!235 = !DISubroutineType(types: !236)
!236 = !{!103, !209, !237}
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !240)
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !239, file: !203, line: 123, baseType: !121, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !239, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !239, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !239, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !239, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !202, file: !203, line: 379, baseType: !247, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DISubroutineType(types: !249)
!249 = !{!103, !209, !250}
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !202, file: !203, line: 384, baseType: !252, size: 32, offset: 160)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{!103, !209, !255, !103}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !202, file: !203, line: 393, baseType: !258, size: 32, offset: 192)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !209, !261, !262}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !202, file: !203, line: 402, baseType: !264, size: 32, offset: 224)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{null, !209}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !202, file: !203, line: 405, baseType: !264, size: 32, offset: 256)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !202, file: !203, line: 408, baseType: !230, size: 32, offset: 288)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !202, file: !203, line: 411, baseType: !264, size: 32, offset: 320)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !202, file: !203, line: 414, baseType: !264, size: 32, offset: 352)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !202, file: !203, line: 417, baseType: !230, size: 32, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !202, file: !203, line: 420, baseType: !230, size: 32, offset: 416)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !202, file: !203, line: 423, baseType: !264, size: 32, offset: 448)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !202, file: !203, line: 426, baseType: !264, size: 32, offset: 480)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !202, file: !203, line: 429, baseType: !230, size: 32, offset: 512)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !202, file: !203, line: 432, baseType: !230, size: 32, offset: 544)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !202, file: !203, line: 435, baseType: !278, size: 32, offset: 576)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DISubroutineType(types: !280)
!280 = !{null, !209, !281, !102}
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !282)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!283 = !DISubroutineType(types: !284)
!284 = !{null, !209, !102}
!285 = !{!195, !286, !292}
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !197, file: !288, line: 15, type: !289, isLocal: true, isDefinition: true)
!288 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 128, elements: !290)
!290 = !{!291}
!291 = !DISubrange(count: 16)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !197, file: !288, line: 16, type: !289, isLocal: true, isDefinition: true)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !295, line: 18, size: 544, elements: !296)
!295 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!296 = !{!297, !298, !325, !326, !327, !330, !331, !333, !334, !335, !336, !337, !338}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !294, file: !295, line: 19, baseType: !209, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !294, file: !295, line: 21, baseType: !299, size: 128, offset: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !301)
!300 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!301 = !{!302, !323, !324}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !300, line: 2910, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !305)
!304 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !306)
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !305, file: !304, line: 232, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !311)
!311 = !{!312, !318}
!312 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !309, line: 38, baseType: !313, size: 32)
!313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !309, line: 38, size: 32, elements: !314)
!314 = !{!315, !317}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !313, file: !309, line: 39, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !313, file: !309, line: 40, baseType: !316, size: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !309, line: 42, baseType: !319, size: 32, offset: 32)
!319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !309, line: 42, size: 32, elements: !320)
!320 = !{!321, !322}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !319, file: !309, line: 43, baseType: !316, size: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !319, file: !309, line: 44, baseType: !316, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !299, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !299, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !294, file: !295, line: 22, baseType: !261, size: 32, offset: 160)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !294, file: !295, line: 23, baseType: !121, size: 32, offset: 192)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !294, file: !295, line: 24, baseType: !328, size: 16, offset: 224)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !329)
!329 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !294, file: !295, line: 24, baseType: !328, size: 16, offset: 240)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !294, file: !295, line: 25, baseType: !332, size: 32, offset: 256)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !294, file: !295, line: 27, baseType: !299, size: 128, offset: 288)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !294, file: !295, line: 28, baseType: !261, size: 32, offset: 416)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !294, file: !295, line: 29, baseType: !121, size: 32, offset: 448)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !294, file: !295, line: 30, baseType: !328, size: 16, offset: 480)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !294, file: !295, line: 30, baseType: !328, size: 16, offset: 496)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !294, file: !295, line: 31, baseType: !332, size: 32, offset: 512)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "static_regions", scope: !341, file: !350, line: 62, type: !486, isLocal: true, isDefinition: true)
!341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !343, globals: !346, splitDebugInlining: false, nameTableKind: None)
!342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!343 = !{!344, !103, !121, !102}
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !345, line: 214, baseType: !32)
!345 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = !{!347, !339}
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !349, file: !350, line: 198, type: !472, isLocal: true, isDefinition: true)
!349 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !350, file: !350, line: 175, type: !351, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !341, retainedNodes: !467)
!350 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !DISubroutineType(types: !352)
!352 = !{null, !353}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !356)
!355 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!356 = !{!357, !422, !435, !436, !437, !438, !444, !462}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !354, file: !355, line: 247, baseType: !358, size: 384)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !359)
!359 = !{!360, !387, !394, !395, !396, !407, !408, !409}
!360 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !355, line: 60, baseType: !361, size: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !355, line: 60, size: 64, elements: !362)
!362 = !{!363, !378}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !361, file: !355, line: 61, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !309, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !309, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !309, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !309, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !309, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !309, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !309, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !309, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !361, file: !355, line: 62, baseType: !379, size: 64)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !381)
!380 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !379, file: !380, line: 50, baseType: !383, size: 64)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 64, elements: !385)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!385 = !{!386}
!386 = !DISubrange(count: 2)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !358, file: !355, line: 68, baseType: !388, size: 32, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !304, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !365)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !358, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !358, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!396 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !355, line: 90, baseType: !397, size: 16, offset: 112)
!397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !355, line: 90, size: 16, elements: !398)
!398 = !{!399, !406}
!399 = !DIDerivedType(tag: DW_TAG_member, scope: !397, file: !355, line: 91, baseType: !400, size: 16)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !397, file: !355, line: 91, size: 16, elements: !401)
!401 = !{!402, !405}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !400, file: !355, line: 96, baseType: !403, size: 8)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !404)
!404 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !400, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !397, file: !355, line: 100, baseType: !328, size: 16)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !358, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !358, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !355, line: 131, baseType: !410, size: 192, offset: 192)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !411)
!411 = !{!412, !413, !419}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !410, file: !304, line: 245, baseType: !364, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !410, file: !304, line: 246, baseType: !414, size: 32, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!416 = !DISubroutineType(types: !417)
!417 = !{null, !418}
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !410, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !421)
!421 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !354, file: !355, line: 250, baseType: !423, size: 288, offset: 384)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !425)
!424 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!425 = !{!426, !427, !428, !429, !430, !431, !432, !433, !434}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !423, file: !424, line: 26, baseType: !121, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !423, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !423, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !423, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !423, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !423, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !423, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !423, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !423, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !354, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !354, file: !355, line: 256, baseType: !389, size: 64, offset: 704)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !354, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !354, file: !355, line: 300, baseType: !439, size: 96, offset: 800)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !440)
!440 = !{!441, !442, !443}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !439, file: !355, line: 153, baseType: !22, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !439, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !439, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !354, file: !355, line: 325, baseType: !445, size: 32, offset: 896)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !447)
!447 = !{!448, !457, !458}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !446, file: !300, line: 5074, baseType: !449, size: 96)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !451)
!450 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!451 = !{!452, !455, !456}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !449, file: !450, line: 57, baseType: !453, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !450, line: 57, flags: DIFlagFwdDecl)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !449, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !449, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !446, file: !300, line: 5075, baseType: !389, size: 64, offset: 96)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !446, file: !300, line: 5076, baseType: !459, offset: 160)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!460 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!461 = !{}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !354, file: !355, line: 343, baseType: !463, size: 64, offset: 928)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !463, file: !424, line: 63, baseType: !121, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !463, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!467 = !{!468, !469, !470, !471}
!468 = !DILocalVariable(name: "thread", arg: 1, scope: !349, file: !350, line: 175, type: !353)
!469 = !DILocalVariable(name: "region_num", scope: !349, file: !350, line: 200, type: !154)
!470 = !DILocalVariable(name: "guard_start", scope: !349, file: !350, line: 265, type: !22)
!471 = !DILocalVariable(name: "guard_size", scope: !349, file: !350, line: 266, type: !344)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 96, elements: !484)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !475)
!474 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!475 = !{!476, !477, !478}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !474, line: 53, baseType: !22, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !474, line: 54, baseType: !344, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !473, file: !474, line: 55, baseType: !479, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !481)
!480 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !481, file: !480, line: 150, baseType: !121, size: 32)
!484 = !{!485}
!485 = !DISubrange(count: 1)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 96, elements: !484)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !490, file: !523, line: 39, type: !154, isLocal: true, isDefinition: true)
!490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !492, globals: !522, splitDebugInlining: false, nameTableKind: None)
!491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!492 = !{!493, !102, !103, !510, !154}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !495, line: 1226, baseType: !496)
!495 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 1213, size: 352, elements: !497)
!497 = !{!498, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !496, file: !495, line: 1215, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !496, file: !495, line: 1216, baseType: !120, size: 32, offset: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !496, file: !495, line: 1217, baseType: !120, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !496, file: !495, line: 1218, baseType: !120, size: 32, offset: 96)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !496, file: !495, line: 1219, baseType: !120, size: 32, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !496, file: !495, line: 1220, baseType: !120, size: 32, offset: 160)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !496, file: !495, line: 1221, baseType: !120, size: 32, offset: 192)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !496, file: !495, line: 1222, baseType: !120, size: 32, offset: 224)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !496, file: !495, line: 1223, baseType: !120, size: 32, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !496, file: !495, line: 1224, baseType: !120, size: 32, offset: 288)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !496, file: !495, line: 1225, baseType: !120, size: 32, offset: 320)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = !{!515, !516, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !512, file: !513, line: 29, baseType: !121, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !512, file: !513, line: 31, baseType: !144, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !512, file: !513, line: 37, baseType: !518, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !520)
!520 = !{!521}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !519, file: !480, line: 143, baseType: !121, size: 32)
!522 = !{!488}
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !526, file: !533, line: 21, type: !106, isLocal: true, isDefinition: true)
!526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !528, globals: !532, splitDebugInlining: false, nameTableKind: None)
!527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!528 = !{!529, !103, !102}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !531, line: 22, baseType: !103)
!531 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!524}
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !536, file: !541, line: 13, type: !558, isLocal: true, isDefinition: true)
!536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !538, splitDebugInlining: false, nameTableKind: None)
!537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!538 = !{!539, !534}
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "mpu_config", scope: !536, file: !541, line: 37, type: !542, isLocal: false, isDefinition: true)
!541 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !513, line: 41, size: 64, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !543, file: !513, line: 43, baseType: !121, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !543, file: !513, line: 45, baseType: !547, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !549, file: !513, line: 29, baseType: !121, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !549, file: !513, line: 31, baseType: !144, size: 32, offset: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !549, file: !513, line: 37, baseType: !554, size: 32, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !555, file: !480, line: 143, baseType: !121, size: 32)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 192, elements: !385)
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !561, file: !665, line: 72, type: !748, isLocal: true, isDefinition: true)
!561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !563, retainedTypes: !651, globals: !662, splitDebugInlining: false, nameTableKind: None)
!562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!563 = !{!30, !564}
!564 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !565)
!565 = !{!566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650}
!566 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!567 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!568 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!569 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!570 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!571 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!572 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!573 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!574 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!575 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!576 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!577 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!578 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!579 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!580 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!581 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!582 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!583 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!584 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!585 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!586 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!587 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!588 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!589 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!590 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!591 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!592 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!593 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!594 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!595 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!596 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!597 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!598 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!599 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!600 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!601 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!602 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!603 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!604 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!605 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!606 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!607 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!608 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!609 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!610 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!611 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!612 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!613 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!614 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!615 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!616 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!617 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!618 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!619 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!620 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!621 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!622 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!623 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!624 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!625 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!626 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!627 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!628 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!629 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!630 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!631 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!632 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!633 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!634 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!635 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!636 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!637 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!638 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!639 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!640 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!641 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!642 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!643 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!644 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!645 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!646 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!647 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!648 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!649 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!650 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!651 = !{!344, !103, !102, !652}
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 364, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 356, size: 192, elements: !655)
!655 = !{!656, !657, !658, !659, !660, !661}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !654, file: !116, line: 358, baseType: !120, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !654, file: !116, line: 359, baseType: !120, size: 32, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !654, file: !116, line: 360, baseType: !120, size: 32, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !654, file: !116, line: 361, baseType: !120, size: 32, offset: 96)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !654, file: !116, line: 362, baseType: !120, size: 32, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !654, file: !116, line: 363, baseType: !120, size: 32, offset: 160)
!662 = !{!663, !669, !685, !696, !713, !559, !715, !728, !730, !732, !734, !736, !738, !740, !742, !744, !746}
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !561, file: !665, line: 424, type: !666, isLocal: false, isDefinition: true, align: 16)
!665 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !667)
!667 = !{!668}
!668 = !DISubrange(count: 4)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !561, file: !665, line: 424, type: !671, isLocal: false, isDefinition: true, align: 32)
!671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !673)
!673 = !{!674, !675, !676, !677, !683, !684}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !672, file: !141, line: 380, baseType: !144, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !672, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !672, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !672, file: !141, line: 386, baseType: !678, size: 32, offset: 96)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !680)
!680 = !{!681, !682}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !679, file: !141, line: 359, baseType: !154, size: 8)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !679, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !672, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !672, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !561, file: !665, line: 424, type: !687, isLocal: true, isDefinition: true, align: 32)
!687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !688)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !689)
!689 = !{!690, !695}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !688, file: !132, line: 60, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!692 = !DISubroutineType(types: !693)
!693 = !{!103, !694}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !688, file: !132, line: 65, baseType: !694, size: 32, offset: 32)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "exti_data", scope: !561, file: !665, line: 423, type: !698, isLocal: true, isDefinition: true)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !665, line: 107, size: 1472, elements: !699)
!699 = !{!700}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !698, file: !665, line: 109, baseType: !701, size: 1472)
!701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 1472, elements: !711)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !665, line: 101, size: 64, elements: !703)
!703 = !{!704, !710}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !702, file: !665, line: 102, baseType: !705, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !706, line: 63, baseType: !707)
!706 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!708 = !DISubroutineType(types: !709)
!709 = !{null, !103, !102}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !702, file: !665, line: 103, baseType: !102, size: 32, offset: 32)
!711 = !{!712}
!712 = !DISubrange(count: 23)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !561, file: !665, line: 424, type: !679, isLocal: true, isDefinition: true, align: 8)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !717, file: !665, line: 493, type: !722, isLocal: true, isDefinition: true, align: 32)
!717 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !665, file: !665, line: 460, type: !718, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !720)
!718 = !DISubroutineType(types: !719)
!719 = !{null, !694}
!720 = !{!721}
!721 = !DILocalVariable(name: "dev", arg: 1, scope: !717, file: !665, line: 460, type: !694)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !723)
!723 = !{!724, !725, !726, !727}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !722, file: !10, line: 55, baseType: !332, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !722, file: !10, line: 57, baseType: !332, size: 32, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !722, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !722, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !717, file: !665, line: 497, type: !722, isLocal: true, isDefinition: true, align: 32)
!730 = !DIGlobalVariableExpression(var: !731, expr: !DIExpression())
!731 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !717, file: !665, line: 507, type: !722, isLocal: true, isDefinition: true, align: 32)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !717, file: !665, line: 512, type: !722, isLocal: true, isDefinition: true, align: 32)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !717, file: !665, line: 516, type: !722, isLocal: true, isDefinition: true, align: 32)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !717, file: !665, line: 523, type: !722, isLocal: true, isDefinition: true, align: 32)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !717, file: !665, line: 527, type: !722, isLocal: true, isDefinition: true, align: 32)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !717, file: !665, line: 581, type: !722, isLocal: true, isDefinition: true, align: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !717, file: !665, line: 586, type: !722, isLocal: true, isDefinition: true, align: 32)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !717, file: !665, line: 591, type: !722, isLocal: true, isDefinition: true, align: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !717, file: !665, line: 595, type: !722, isLocal: true, isDefinition: true, align: 32)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !749, size: 736, elements: !711)
!749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !750)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 154, baseType: !564)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !753, file: !758, line: 22, type: !780, isLocal: false, isDefinition: true, align: 16)
!753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !754, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !755, splitDebugInlining: false, nameTableKind: None)
!754 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!755 = !{!756, !751, !762, !764, !766, !768, !770, !772, !774, !776, !778}
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !753, file: !758, line: 17, type: !759, isLocal: false, isDefinition: true, align: 16)
!758 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 192, elements: !760)
!760 = !{!761}
!761 = !DISubrange(count: 12)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !753, file: !758, line: 29, type: !666, isLocal: false, isDefinition: true, align: 16)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !753, file: !758, line: 36, type: !666, isLocal: false, isDefinition: true, align: 16)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !753, file: !758, line: 43, type: !666, isLocal: false, isDefinition: true, align: 16)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !753, file: !758, line: 50, type: !666, isLocal: false, isDefinition: true, align: 16)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !753, file: !758, line: 57, type: !666, isLocal: false, isDefinition: true, align: 16)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !753, file: !758, line: 64, type: !666, isLocal: false, isDefinition: true, align: 16)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !753, file: !758, line: 71, type: !666, isLocal: false, isDefinition: true, align: 16)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !753, file: !758, line: 78, type: !666, isLocal: false, isDefinition: true, align: 16)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !753, file: !758, line: 85, type: !666, isLocal: false, isDefinition: true, align: 16)
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !781)
!781 = !{!782}
!782 = !DISubrange(count: 3)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !785, file: !847, line: 398, type: !880, isLocal: true, isDefinition: true)
!785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !787, retainedTypes: !800, globals: !844, splitDebugInlining: false, nameTableKind: None)
!786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!787 = !{!788, !30, !793}
!788 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !789, line: 197, baseType: !32, size: 32, elements: !790)
!789 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!790 = !{!791, !792}
!791 = !DIEnumerator(name: "SUCCESS", value: 0)
!792 = !DIEnumerator(name: "ERROR", value: 1)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !794, line: 44, baseType: !32, size: 32, elements: !795)
!794 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!795 = !{!796, !797, !798, !799}
!796 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!797 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!798 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!799 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!800 = !{!102, !103, !121, !801, !837, !843}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !804)
!804 = !{!805, !806, !807, !808, !809, !810, !811, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !803, file: !116, line: 479, baseType: !120, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !803, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !803, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !803, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !803, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !803, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !803, file: !116, line: 485, baseType: !812, size: 64, offset: 192)
!812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !385)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !803, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !803, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !803, file: !116, line: 488, baseType: !812, size: 64, offset: 320)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !803, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !803, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !803, file: !116, line: 491, baseType: !812, size: 64, offset: 448)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !803, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !803, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !803, file: !116, line: 494, baseType: !812, size: 64, offset: 576)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !803, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !803, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !803, file: !116, line: 497, baseType: !812, size: 64, offset: 704)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !803, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !803, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !803, file: !116, line: 500, baseType: !812, size: 64, offset: 832)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !803, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !803, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !803, file: !116, line: 503, baseType: !812, size: 64, offset: 960)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !803, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !803, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !803, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !803, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !803, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !803, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !839, line: 343, size: 64, elements: !840)
!839 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!840 = !{!841, !842}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !838, file: !839, line: 344, baseType: !121, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !838, file: !839, line: 345, baseType: !121, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!844 = !{!845, !851, !867, !878, !783}
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !785, file: !847, line: 752, type: !848, isLocal: false, isDefinition: true, align: 16)
!847 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 848, elements: !849)
!849 = !{!850}
!850 = !DISubrange(count: 53)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !785, file: !847, line: 752, type: !853, isLocal: false, isDefinition: true, align: 32)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !855)
!855 = !{!856, !857, !858, !859, !865, !866}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !854, file: !141, line: 380, baseType: !144, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !854, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !854, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !854, file: !141, line: 386, baseType: !860, size: 32, offset: 96)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !861, file: !141, line: 359, baseType: !154, size: 8)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !861, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !854, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !854, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !785, file: !847, line: 752, type: !869, isLocal: true, isDefinition: true, align: 32)
!869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !871)
!871 = !{!872, !877}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !870, file: !132, line: 60, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DISubroutineType(types: !875)
!875 = !{!103, !876}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !870, file: !132, line: 65, baseType: !876, size: 32, offset: 32)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !785, file: !847, line: 752, type: !861, isLocal: true, isDefinition: true, align: 8)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !794, line: 100, size: 224, elements: !881)
!881 = !{!882, !888, !889, !898, !903, !908, !914}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !880, file: !794, line: 101, baseType: !883, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !794, line: 76, baseType: !884)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DISubroutineType(types: !886)
!886 = !{!103, !876, !887}
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !794, line: 56, baseType: !102)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !880, file: !794, line: 102, baseType: !883, size: 32, offset: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !880, file: !794, line: 103, baseType: !890, size: 32, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !794, line: 83, baseType: !891)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = !DISubroutineType(types: !893)
!893 = !{!103, !876, !887, !894, !102}
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !794, line: 72, baseType: !895)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = !DISubroutineType(types: !897)
!897 = !{null, !876, !887, !102}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !880, file: !794, line: 104, baseType: !899, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !794, line: 79, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!901 = !DISubroutineType(types: !902)
!902 = !{!103, !876, !887, !843}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !880, file: !794, line: 105, baseType: !904, size: 32, offset: 128)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !794, line: 88, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!793, !876, !887}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !880, file: !794, line: 106, baseType: !909, size: 32, offset: 160)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !794, line: 92, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = !DISubroutineType(types: !912)
!912 = !{!103, !876, !887, !913}
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !794, line: 64, baseType: !102)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !880, file: !794, line: 107, baseType: !915, size: 32, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !794, line: 96, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DISubroutineType(types: !918)
!918 = !{!103, !876, !887, !102}
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !921, file: !925, line: 43, type: !1117, isLocal: true, isDefinition: true)
!921 = distinct !DICompileUnit(language: DW_LANG_C99, file: !922, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !923, retainedTypes: !932, globals: !1012, splitDebugInlining: false, nameTableKind: None)
!922 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!923 = !{!30, !924}
!924 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !925, line: 214, baseType: !32, size: 32, elements: !926)
!925 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!926 = !{!927, !928, !929, !930, !931}
!927 = !DIEnumerator(name: "ESC_ESC", value: 0)
!928 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!929 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!930 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!931 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!932 = !{!102, !103, !933, !32, !24}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !936)
!936 = !{!937, !956, !960, !964, !977, !982, !986, !990, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !935, file: !203, line: 365, baseType: !938, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DISubroutineType(types: !940)
!940 = !{!103, !941, !224}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !944)
!944 = !{!945, !946, !947, !948, !954, !955}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !943, file: !141, line: 380, baseType: !144, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !943, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !943, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !943, file: !141, line: 386, baseType: !949, size: 32, offset: 96)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !951)
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !950, file: !141, line: 359, baseType: !154, size: 8)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !950, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !943, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !943, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !935, file: !203, line: 366, baseType: !957, size: 32, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{null, !941, !155}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !935, file: !203, line: 374, baseType: !961, size: 32, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = !DISubroutineType(types: !963)
!963 = !{!103, !941}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !935, file: !203, line: 377, baseType: !965, size: 32, offset: 96)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DISubroutineType(types: !967)
!967 = !{!103, !941, !968}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !971)
!971 = !{!972, !973, !974, !975, !976}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !970, file: !203, line: 123, baseType: !121, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !970, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !970, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !970, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !970, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !935, file: !203, line: 379, baseType: !978, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{!103, !941, !981}
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !935, file: !203, line: 384, baseType: !983, size: 32, offset: 160)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DISubroutineType(types: !985)
!985 = !{!103, !941, !255, !103}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !935, file: !203, line: 393, baseType: !987, size: 32, offset: 192)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DISubroutineType(types: !989)
!989 = !{!103, !941, !261, !262}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !935, file: !203, line: 402, baseType: !991, size: 32, offset: 224)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !941}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !935, file: !203, line: 405, baseType: !991, size: 32, offset: 256)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !935, file: !203, line: 408, baseType: !961, size: 32, offset: 288)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !935, file: !203, line: 411, baseType: !991, size: 32, offset: 320)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !935, file: !203, line: 414, baseType: !991, size: 32, offset: 352)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !935, file: !203, line: 417, baseType: !961, size: 32, offset: 384)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !935, file: !203, line: 420, baseType: !961, size: 32, offset: 416)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !935, file: !203, line: 423, baseType: !991, size: 32, offset: 448)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !935, file: !203, line: 426, baseType: !991, size: 32, offset: 480)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !935, file: !203, line: 429, baseType: !961, size: 32, offset: 512)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !935, file: !203, line: 432, baseType: !961, size: 32, offset: 544)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !935, file: !203, line: 435, baseType: !1005, size: 32, offset: 576)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !941, !1008, !102}
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !941, !102}
!1012 = !{!1013, !919, !1020, !1062, !1064, !1070, !1077, !1080, !1105, !1109, !1111, !1113, !1115}
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !921, file: !925, line: 603, type: !1015, isLocal: true, isDefinition: true, align: 32)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1017)
!1017 = !{!1018, !1019}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1016, file: !132, line: 60, baseType: !961, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1016, file: !132, line: 65, baseType: !941, size: 32, offset: 32)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "avail_queue", scope: !921, file: !925, line: 108, type: !1022, isLocal: true, isDefinition: true)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !300, line: 2208, size: 128, elements: !1024)
!1024 = !{!1025}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1023, file: !300, line: 2209, baseType: !1026, size: 128)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !300, line: 1709, size: 128, elements: !1027)
!1027 = !{!1028, !1041, !1043}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1026, file: !300, line: 1710, baseType: !1029, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1030, line: 46, baseType: !1031)
!1030 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1030, line: 41, size: 64, elements: !1032)
!1032 = !{!1033, !1040}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1031, file: !1030, line: 42, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1030, line: 39, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1030, line: 35, size: 32, elements: !1037)
!1037 = !{!1038}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1036, file: !1030, line: 36, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1030, line: 32, baseType: !121)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1031, file: !1030, line: 43, baseType: !1034, size: 32, offset: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1026, file: !300, line: 1711, baseType: !1042, offset: 64)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1026, file: !300, line: 1712, baseType: !1044, size: 64, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !1046)
!1046 = !{!1047}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1045, file: !304, line: 232, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !1050)
!1050 = !{!1051, !1057}
!1051 = !DIDerivedType(tag: DW_TAG_member, scope: !1049, file: !309, line: 38, baseType: !1052, size: 32)
!1052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1049, file: !309, line: 38, size: 32, elements: !1053)
!1053 = !{!1054, !1056}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1052, file: !309, line: 39, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1052, file: !309, line: 40, baseType: !1055, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, scope: !1049, file: !309, line: 42, baseType: !1058, size: 32, offset: 32)
!1058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1049, file: !309, line: 42, size: 32, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1058, file: !309, line: 43, baseType: !1055, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1058, file: !309, line: 44, baseType: !1055, size: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "lines_queue", scope: !921, file: !925, line: 109, type: !1022, isLocal: true, isDefinition: true)
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "completion_cb", scope: !921, file: !925, line: 110, type: !1066, isLocal: true, isDefinition: true)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!154, !1069, !154}
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !921, file: !925, line: 54, type: !1072, isLocal: true, isDefinition: true)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1074, line: 40, baseType: !1075)
!1074 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!103, !146}
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !921, file: !925, line: 38, type: !1079, isLocal: true, isDefinition: true)
!1079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "cmd", scope: !1082, file: !925, line: 435, type: !1093, isLocal: true, isDefinition: true)
!1082 = distinct !DISubprogram(name: "uart_console_isr", scope: !925, file: !925, line: 428, type: !1010, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !1083)
!1083 = !{!1084, !1085, !1086, !1088, !1089}
!1084 = !DILocalVariable(name: "unused", arg: 1, scope: !1082, file: !925, line: 428, type: !941)
!1085 = !DILocalVariable(name: "user_data", arg: 2, scope: !1082, file: !925, line: 428, type: !102)
!1086 = !DILocalVariable(name: "byte", scope: !1087, file: !925, line: 436, type: !154)
!1087 = distinct !DILexicalBlock(scope: !1082, file: !925, line: 434, column: 48)
!1088 = !DILocalVariable(name: "rx", scope: !1087, file: !925, line: 437, type: !103)
!1089 = !DILocalVariable(name: "ret", scope: !1090, file: !925, line: 461, type: !102)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !925, line: 461, column: 10)
!1091 = distinct !DILexicalBlock(scope: !1092, file: !925, line: 460, column: 13)
!1092 = distinct !DILexicalBlock(scope: !1087, file: !925, line: 460, column: 7)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1095, line: 21, size: 1088, elements: !1096)
!1095 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1096 = !{!1097, !1100, !1101}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1094, file: !1095, line: 23, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1099)
!1099 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1094, file: !1095, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1094, file: !1095, line: 27, baseType: !1102, size: 1024, offset: 40)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !1103)
!1103 = !{!1104}
!1104 = !DISubrange(count: 128)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "esc_state", scope: !921, file: !925, line: 228, type: !1107, isLocal: true, isDefinition: true)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1108, line: 22, baseType: !1099)
!1108 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "ansi_val", scope: !921, file: !925, line: 229, type: !32, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !921, file: !925, line: 229, type: !32, isLocal: true, isDefinition: true)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "cur", scope: !921, file: !925, line: 230, type: !154, isLocal: true, isDefinition: true)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "end", scope: !921, file: !925, line: 230, type: !154, isLocal: true, isDefinition: true)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1074, line: 45, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!103, !154}
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1123, file: !1294, line: 762, type: !1406, isLocal: true, isDefinition: true)
!1123 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1124, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1125, retainedTypes: !1143, globals: !1291, splitDebugInlining: false, nameTableKind: None)
!1124 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!1125 = !{!30, !1126, !1132, !1137, !793}
!1126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1127, line: 506, baseType: !32, size: 32, elements: !1128)
!1127 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1128 = !{!1129, !1130, !1131}
!1129 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1130 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1131 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1127, line: 512, baseType: !32, size: 32, elements: !1133)
!1133 = !{!1134, !1135, !1136}
!1134 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1135 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1136 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !706, line: 43, baseType: !32, size: 32, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1142}
!1139 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1140 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1141 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1142 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1143 = !{!102, !103, !1144, !1214, !1219, !1179, !1132, !1126, !1224, !1225, !121, !1239, !1194, !1069, !1251, !1252}
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1127, line: 523, size: 288, elements: !1147)
!1147 = !{!1148, !1169, !1175, !1180, !1184, !1185, !1186, !1190, !1210}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1146, file: !1127, line: 524, baseType: !1149, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 32)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!103, !1152, !1167, !1168}
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159, !1165, !1166}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1154, file: !141, line: 380, baseType: !144, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1154, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1154, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1154, file: !141, line: 386, baseType: !1160, size: 32, offset: 96)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1162)
!1162 = !{!1163, !1164}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1161, file: !141, line: 359, baseType: !154, size: 8)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1161, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1154, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1154, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1127, line: 237, baseType: !154)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1127, line: 257, baseType: !121)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1146, file: !1127, line: 530, baseType: !1170, size: 32, offset: 32)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!103, !1152, !1173}
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1127, line: 229, baseType: !121)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1146, file: !1127, line: 532, baseType: !1176, size: 32, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!103, !1152, !1179, !1174}
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1127, line: 216, baseType: !121)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1146, file: !1127, line: 535, baseType: !1181, size: 32, offset: 96)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!103, !1152, !1179}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1146, file: !1127, line: 537, baseType: !1181, size: 32, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1146, file: !1127, line: 539, baseType: !1181, size: 32, offset: 160)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1146, file: !1127, line: 541, baseType: !1187, size: 32, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!103, !1152, !1167, !1126, !1132}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1146, file: !1127, line: 544, baseType: !1191, size: 32, offset: 224)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!103, !1152, !1194, !157}
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1127, line: 478, size: 96, elements: !1196)
!1196 = !{!1197, !1204, !1209}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1195, file: !1127, line: 482, baseType: !1198, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1199, line: 33, baseType: !1200)
!1199 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1199, line: 29, size: 32, elements: !1201)
!1201 = !{!1202}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1200, file: !1199, line: 30, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1195, file: !1127, line: 485, baseType: !1205, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1127, line: 464, baseType: !1206)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{null, !1152, !1194, !1179}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1195, file: !1127, line: 493, baseType: !1179, size: 32, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1146, file: !1127, line: 547, baseType: !1211, size: 32, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!121, !1152}
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1127, line: 428, size: 32, elements: !1217)
!1217 = !{!1218}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1216, file: !1127, line: 434, baseType: !1179, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1127, line: 441, size: 32, elements: !1222)
!1222 = !{!1223}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1221, file: !1127, line: 447, baseType: !1179, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 396, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 385, size: 320, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1227, file: !116, line: 387, baseType: !120, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1227, file: !116, line: 388, baseType: !120, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1227, file: !116, line: 389, baseType: !120, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1227, file: !116, line: 390, baseType: !120, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1227, file: !116, line: 391, baseType: !120, size: 32, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1227, file: !116, line: 392, baseType: !120, size: 32, offset: 160)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1227, file: !116, line: 393, baseType: !120, size: 32, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1227, file: !116, line: 394, baseType: !120, size: 32, offset: 224)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1227, file: !116, line: 395, baseType: !1238, size: 64, offset: 256)
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !385)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 411, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 402, size: 320, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1247, !1248, !1249, !1250}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1241, file: !116, line: 404, baseType: !120, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1241, file: !116, line: 405, baseType: !120, size: 32, offset: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1241, file: !116, line: 406, baseType: !1246, size: 128, offset: 64)
!1246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !667)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1241, file: !116, line: 407, baseType: !121, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1241, file: !116, line: 408, baseType: !120, size: 32, offset: 224)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1241, file: !116, line: 409, baseType: !120, size: 32, offset: 256)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1241, file: !116, line: 410, baseType: !120, size: 32, offset: 288)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !794, line: 100, size: 224, elements: !1255)
!1255 = !{!1256, !1261, !1262, !1271, !1276, !1281, !1286}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1254, file: !794, line: 101, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !794, line: 76, baseType: !1258)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!103, !1152, !887}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1254, file: !794, line: 102, baseType: !1257, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1254, file: !794, line: 103, baseType: !1263, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !794, line: 83, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!103, !1152, !887, !1267, !102}
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !794, line: 72, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{null, !1152, !887, !102}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1254, file: !794, line: 104, baseType: !1272, size: 32, offset: 96)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !794, line: 79, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!103, !1152, !887, !843}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1254, file: !794, line: 105, baseType: !1277, size: 32, offset: 128)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !794, line: 88, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!793, !1152, !887}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1254, file: !794, line: 106, baseType: !1282, size: 32, offset: 160)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !794, line: 92, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!103, !1152, !887, !913}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1254, file: !794, line: 107, baseType: !1287, size: 32, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !794, line: 96, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!103, !1152, !887, !102}
!1291 = !{!1292, !1298, !1300, !1310, !1312, !1314, !1316, !1321, !1323, !1325, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1121, !1402, !1404, !1417, !1419, !1421, !1423, !1425, !1427}
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1123, file: !1294, line: 762, type: !1295, isLocal: false, isDefinition: true, align: 16)
!1294 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 112, elements: !1296)
!1296 = !{!1297}
!1297 = !DISubrange(count: 7)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1123, file: !1294, line: 762, type: !1153, isLocal: false, isDefinition: true, align: 32)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1123, file: !1294, line: 762, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1304)
!1304 = !{!1305, !1309}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1303, file: !132, line: 60, baseType: !1306, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!103, !1152}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1303, file: !132, line: 65, baseType: !1152, size: 32, offset: 32)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1123, file: !1294, line: 766, type: !1295, isLocal: false, isDefinition: true, align: 16)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1123, file: !1294, line: 766, type: !1153, isLocal: false, isDefinition: true, align: 32)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1123, file: !1294, line: 766, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1123, file: !1294, line: 770, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 96, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 6)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1123, file: !1294, line: 770, type: !1153, isLocal: false, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1123, file: !1294, line: 770, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1123, file: !1294, line: 774, type: !1327, isLocal: false, isDefinition: true, align: 16)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 5)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1123, file: !1294, line: 774, type: !1153, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1123, file: !1294, line: 774, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1123, file: !1294, line: 778, type: !1327, isLocal: false, isDefinition: true, align: 16)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1123, file: !1294, line: 778, type: !1153, isLocal: false, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1123, file: !1294, line: 778, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1123, file: !1294, line: 782, type: !1327, isLocal: false, isDefinition: true, align: 16)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1123, file: !1294, line: 782, type: !1153, isLocal: false, isDefinition: true, align: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1123, file: !1294, line: 782, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1123, file: !1294, line: 786, type: !1327, isLocal: false, isDefinition: true, align: 16)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1123, file: !1294, line: 786, type: !1153, isLocal: false, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1123, file: !1294, line: 786, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1123, file: !1294, line: 790, type: !1327, isLocal: false, isDefinition: true, align: 16)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1123, file: !1294, line: 790, type: !1153, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1123, file: !1294, line: 790, type: !1302, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1123, file: !1294, line: 762, type: !1360, isLocal: true, isDefinition: true)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1361, line: 237, size: 128, elements: !1362)
!1361 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1362 = !{!1363, !1364, !1365}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1360, file: !1361, line: 239, baseType: !1221, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1360, file: !1361, line: 241, baseType: !1152, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1360, file: !1361, line: 243, baseType: !1366, size: 64, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1199, line: 40, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1199, line: 35, size: 64, elements: !1368)
!1368 = !{!1369, !1371}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1367, file: !1199, line: 36, baseType: !1370, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1367, file: !1199, line: 37, baseType: !1370, size: 32, offset: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1123, file: !1294, line: 762, type: !1161, isLocal: true, isDefinition: true, align: 8)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1123, file: !1294, line: 766, type: !1360, isLocal: true, isDefinition: true)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1123, file: !1294, line: 766, type: !1161, isLocal: true, isDefinition: true, align: 8)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1123, file: !1294, line: 770, type: !1360, isLocal: true, isDefinition: true)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1123, file: !1294, line: 770, type: !1161, isLocal: true, isDefinition: true, align: 8)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1123, file: !1294, line: 774, type: !1360, isLocal: true, isDefinition: true)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1123, file: !1294, line: 774, type: !1161, isLocal: true, isDefinition: true, align: 8)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1123, file: !1294, line: 778, type: !1360, isLocal: true, isDefinition: true)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1123, file: !1294, line: 778, type: !1161, isLocal: true, isDefinition: true, align: 8)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1123, file: !1294, line: 782, type: !1360, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1123, file: !1294, line: 782, type: !1161, isLocal: true, isDefinition: true, align: 8)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1123, file: !1294, line: 786, type: !1360, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1123, file: !1294, line: 786, type: !1161, isLocal: true, isDefinition: true, align: 8)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1123, file: !1294, line: 790, type: !1360, isLocal: true, isDefinition: true)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1123, file: !1294, line: 790, type: !1161, isLocal: true, isDefinition: true, align: 8)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1123, file: !1294, line: 656, type: !1145, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1123, file: !1294, line: 766, type: !1406, isLocal: true, isDefinition: true)
!1406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1361, line: 224, size: 160, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1407, file: !1361, line: 226, baseType: !1216, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1407, file: !1361, line: 228, baseType: !843, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1407, file: !1361, line: 230, baseType: !103, size: 32, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1407, file: !1361, line: 231, baseType: !1413, size: 64, offset: 96)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !839, line: 343, size: 64, elements: !1414)
!1414 = !{!1415, !1416}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1413, file: !839, line: 344, baseType: !121, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1413, file: !839, line: 345, baseType: !121, size: 32, offset: 32)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1123, file: !1294, line: 770, type: !1406, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1123, file: !1294, line: 774, type: !1406, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1123, file: !1294, line: 778, type: !1406, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1123, file: !1294, line: 782, type: !1406, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1123, file: !1294, line: 786, type: !1406, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1123, file: !1294, line: 790, type: !1406, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1431, file: !1602, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1431 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1432, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1433, retainedTypes: !1466, globals: !1599, splitDebugInlining: false, nameTableKind: None)
!1432 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!1433 = !{!30, !1434, !1441, !1448, !1455, !1461, !793}
!1434 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !203, line: 47, baseType: !32, size: 32, elements: !1435)
!1435 = !{!1436, !1437, !1438, !1439, !1440}
!1436 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1437 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1438 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1439 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1440 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1441 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !203, line: 75, baseType: !32, size: 32, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446, !1447}
!1443 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1444 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1445 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1446 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1447 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1448 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !203, line: 92, baseType: !32, size: 32, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454}
!1450 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1451 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1452 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1453 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1454 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !203, line: 84, baseType: !32, size: 32, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460}
!1457 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1458 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1459 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1460 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !203, line: 107, baseType: !32, size: 32, elements: !1462)
!1462 = !{!1463, !1464, !1465}
!1463 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1464 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1465 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1466 = !{!102, !103, !1467, !155, !154, !1546, !121, !887, !1557, !328, !1596, !1598}
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !1470)
!1470 = !{!1471, !1490, !1494, !1498, !1511, !1516, !1520, !1524, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1469, file: !203, line: 365, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!103, !1475, !224}
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1478)
!1478 = !{!1479, !1480, !1481, !1482, !1488, !1489}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1477, file: !141, line: 380, baseType: !144, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1477, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1477, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1477, file: !141, line: 386, baseType: !1483, size: 32, offset: 96)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1485)
!1485 = !{!1486, !1487}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1484, file: !141, line: 359, baseType: !154, size: 8)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1484, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1477, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1477, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1469, file: !203, line: 366, baseType: !1491, size: 32, offset: 32)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{null, !1475, !155}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1469, file: !203, line: 374, baseType: !1495, size: 32, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!103, !1475}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1469, file: !203, line: 377, baseType: !1499, size: 32, offset: 96)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!103, !1475, !1502}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1510}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1504, file: !203, line: 123, baseType: !121, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1504, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1504, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1504, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1504, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1469, file: !203, line: 379, baseType: !1512, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!103, !1475, !1515}
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1469, file: !203, line: 384, baseType: !1517, size: 32, offset: 160)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!103, !1475, !255, !103}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1469, file: !203, line: 393, baseType: !1521, size: 32, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!103, !1475, !261, !262}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1469, file: !203, line: 402, baseType: !1525, size: 32, offset: 224)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{null, !1475}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1469, file: !203, line: 405, baseType: !1525, size: 32, offset: 256)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1469, file: !203, line: 408, baseType: !1495, size: 32, offset: 288)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1469, file: !203, line: 411, baseType: !1525, size: 32, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1469, file: !203, line: 414, baseType: !1525, size: 32, offset: 352)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1469, file: !203, line: 417, baseType: !1495, size: 32, offset: 384)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1469, file: !203, line: 420, baseType: !1495, size: 32, offset: 416)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1469, file: !203, line: 423, baseType: !1525, size: 32, offset: 448)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1469, file: !203, line: 426, baseType: !1525, size: 32, offset: 480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1469, file: !203, line: 429, baseType: !1495, size: 32, offset: 512)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1469, file: !203, line: 432, baseType: !1495, size: 32, offset: 544)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1469, file: !203, line: 435, baseType: !1539, size: 32, offset: 576)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{null, !1475, !1542, !102}
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !1543)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{null, !1475, !102}
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 648, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 639, size: 224, elements: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554, !1555, !1556}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1548, file: !116, line: 641, baseType: !120, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1548, file: !116, line: 642, baseType: !120, size: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1548, file: !116, line: 643, baseType: !120, size: 32, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1548, file: !116, line: 644, baseType: !120, size: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1548, file: !116, line: 645, baseType: !120, size: 32, offset: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1548, file: !116, line: 646, baseType: !120, size: 32, offset: 160)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1548, file: !116, line: 647, baseType: !120, size: 32, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !794, line: 100, size: 224, elements: !1560)
!1560 = !{!1561, !1566, !1567, !1576, !1581, !1586, !1591}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1559, file: !794, line: 101, baseType: !1562, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !794, line: 76, baseType: !1563)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!103, !1475, !887}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1559, file: !794, line: 102, baseType: !1562, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1559, file: !794, line: 103, baseType: !1568, size: 32, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !794, line: 83, baseType: !1569)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!103, !1475, !887, !1572, !102}
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !794, line: 72, baseType: !1573)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{null, !1475, !887, !102}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1559, file: !794, line: 104, baseType: !1577, size: 32, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !794, line: 79, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!103, !1475, !887, !843}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1559, file: !794, line: 105, baseType: !1582, size: 32, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !794, line: 88, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!793, !1475, !887}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1559, file: !794, line: 106, baseType: !1587, size: 32, offset: 160)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !794, line: 92, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!103, !1475, !887, !913}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1559, file: !794, line: 107, baseType: !1592, size: 32, offset: 192)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !794, line: 96, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!103, !1475, !887, !102}
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1597)
!1597 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1599 = !{!1600, !1606, !1608, !1615, !1429, !1617, !1625, !1648, !1651, !1654, !1665, !1667}
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1431, file: !1602, line: 1914, type: !1603, isLocal: false, isDefinition: true, align: 16)
!1602 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1604)
!1604 = !{!1605}
!1605 = !DISubrange(count: 8)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1431, file: !1602, line: 1914, type: !1476, isLocal: false, isDefinition: true, align: 32)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1431, file: !1602, line: 1914, type: !1610, isLocal: true, isDefinition: true, align: 32)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1612)
!1612 = !{!1613, !1614}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1611, file: !132, line: 60, baseType: !1495, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1611, file: !132, line: 65, baseType: !1475, size: 32, offset: 32)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1431, file: !1602, line: 1914, type: !1484, isLocal: true, isDefinition: true, align: 8)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1431, file: !1602, line: 1914, type: !1619, isLocal: true, isDefinition: true)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1620, size: 64, elements: !484)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !839, line: 343, size: 64, elements: !1622)
!1622 = !{!1623, !1624}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1621, file: !839, line: 344, baseType: !121, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1621, file: !839, line: 345, baseType: !121, size: 32, offset: 32)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1431, file: !1602, line: 1914, type: !1627, isLocal: true, isDefinition: true)
!1627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1629, line: 60, size: 64, elements: !1630)
!1629 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1630 = !{!1631, !1647}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1628, file: !1629, line: 69, baseType: !1632, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1629, line: 50, size: 64, elements: !1635)
!1635 = !{!1636, !1645, !1646}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1634, file: !1629, line: 52, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1640, line: 37, baseType: !1641)
!1640 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1640, line: 32, size: 64, elements: !1642)
!1642 = !{!1643, !1644}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1641, file: !1640, line: 34, baseType: !121, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1641, file: !1640, line: 36, baseType: !121, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1634, file: !1629, line: 54, baseType: !154, size: 8, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1634, file: !1629, line: 56, baseType: !154, size: 8, offset: 40)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1628, file: !1629, line: 71, baseType: !154, size: 8, offset: 32)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1431, file: !1602, line: 1914, type: !1650, isLocal: true, isDefinition: true)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1633, size: 64, elements: !484)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1431, file: !1602, line: 1914, type: !1653, isLocal: true, isDefinition: true)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1638, size: 128, elements: !385)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1656, file: !1602, line: 1914, type: !1659, isLocal: true, isDefinition: true, align: 32)
!1656 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1602, file: !1602, line: 1914, type: !1526, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !1657)
!1657 = !{!1658}
!1658 = !DILocalVariable(name: "dev", arg: 1, scope: !1656, file: !1602, line: 1914, type: !1475)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1659, file: !10, line: 55, baseType: !332, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1659, file: !10, line: 57, baseType: !332, size: 32, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1659, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1659, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1431, file: !1602, line: 1539, type: !1468, isLocal: true, isDefinition: true)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1431, file: !1602, line: 1914, type: !1669, isLocal: true, isDefinition: true)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1670, line: 74, size: 128, elements: !1671)
!1670 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1671 = !{!1672, !1673, !1674, !1675}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1669, file: !1670, line: 76, baseType: !121, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1669, file: !1670, line: 78, baseType: !1475, size: 32, offset: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1669, file: !1670, line: 80, baseType: !1542, size: 32, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1669, file: !1670, line: 81, baseType: !102, size: 32, offset: 96)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1670, line: 22, size: 256, elements: !1678)
!1678 = !{!1679, !1680, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1691}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1677, file: !1670, line: 24, baseType: !1546, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1677, file: !1670, line: 26, baseType: !1681, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1677, file: !1670, line: 28, baseType: !344, size: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1677, file: !1670, line: 30, baseType: !157, size: 8, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1677, file: !1670, line: 32, baseType: !103, size: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1677, file: !1670, line: 34, baseType: !157, size: 8, offset: 160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1677, file: !1670, line: 36, baseType: !157, size: 8, offset: 168)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1677, file: !1670, line: 38, baseType: !157, size: 8, offset: 176)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1677, file: !1670, line: 40, baseType: !157, size: 8, offset: 184)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1677, file: !1670, line: 41, baseType: !1690, size: 32, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1677, file: !1670, line: 44, baseType: !1692, size: 32, offset: 224)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !203, line: 150, baseType: !1525)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1695, file: !1773, line: 65, type: !120, isLocal: true, isDefinition: true)
!1695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1696, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1697, retainedTypes: !1698, globals: !1770, splitDebugInlining: false, nameTableKind: None)
!1696 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!1697 = !{!564}
!1698 = !{!1699, !1701, !332, !154, !121, !1709, !1740}
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1700, line: 46, baseType: !420)
!1700 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1703, file: !495, line: 766, baseType: !120, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1703, file: !495, line: 767, baseType: !120, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1703, file: !495, line: 768, baseType: !120, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1703, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !1711)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !1712)
!1712 = !{!1713, !1715, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1730, !1735, !1739}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1711, file: !495, line: 413, baseType: !1714, size: 256)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1604)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1711, file: !495, line: 414, baseType: !1716, size: 768, offset: 256)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1717)
!1717 = !{!1718}
!1718 = !DISubrange(count: 24)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1711, file: !495, line: 415, baseType: !1714, size: 256, offset: 1024)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1711, file: !495, line: 416, baseType: !1716, size: 768, offset: 1280)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1711, file: !495, line: 417, baseType: !1714, size: 256, offset: 2048)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1711, file: !495, line: 418, baseType: !1716, size: 768, offset: 2304)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1711, file: !495, line: 419, baseType: !1714, size: 256, offset: 3072)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1711, file: !495, line: 420, baseType: !1716, size: 768, offset: 3328)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1711, file: !495, line: 421, baseType: !1714, size: 256, offset: 4096)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1711, file: !495, line: 422, baseType: !1727, size: 1792, offset: 4352)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1728)
!1728 = !{!1729}
!1729 = !DISubrange(count: 56)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1711, file: !495, line: 423, baseType: !1731, size: 1920, offset: 6144)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1732, size: 1920, elements: !1733)
!1732 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1733 = !{!1734}
!1734 = !DISubrange(count: 240)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1711, file: !495, line: 424, baseType: !1736, size: 20608, offset: 8064)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1737)
!1737 = !{!1738}
!1738 = !DISubrange(count: 644)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1711, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747, !1748, !1749, !1750, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1761, !1762, !1763, !1765, !1767, !1769}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1742, file: !495, line: 447, baseType: !499, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1742, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1742, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1742, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1742, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1742, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1742, file: !495, line: 453, baseType: !1751, size: 96, offset: 192)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1732, size: 96, elements: !760)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1742, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1742, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1742, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1742, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1742, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1742, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1742, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1742, file: !495, line: 461, baseType: !1760, size: 64, offset: 512)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 64, elements: !385)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1742, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1742, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1742, file: !495, line: 464, baseType: !1764, size: 128, offset: 640)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 128, elements: !667)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1742, file: !495, line: 465, baseType: !1766, size: 160, offset: 768)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 160, elements: !1328)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1742, file: !495, line: 466, baseType: !1768, size: 160, offset: 928)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1328)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1742, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!1770 = !{!1771, !1797, !1800, !1802, !1804, !1693}
!1771 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression())
!1772 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1695, file: !1773, line: 285, type: !1774, isLocal: true, isDefinition: true, align: 32)
!1773 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1776)
!1776 = !{!1777, !1796}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1775, file: !132, line: 60, baseType: !1778, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!103, !1781}
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1784)
!1784 = !{!1785, !1786, !1787, !1788, !1794, !1795}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1783, file: !141, line: 380, baseType: !144, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1783, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1783, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1783, file: !141, line: 386, baseType: !1789, size: 32, offset: 96)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1791)
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1790, file: !141, line: 359, baseType: !154, size: 8)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1790, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1783, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1783, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1775, file: !132, line: 65, baseType: !1781, size: 32, offset: 32)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "lock", scope: !1695, file: !1773, line: 34, type: !1799, isLocal: true, isDefinition: true)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "last_load", scope: !1695, file: !1773, line: 36, type: !121, isLocal: true, isDefinition: true)
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1695, file: !1773, line: 48, type: !121, isLocal: true, isDefinition: true)
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1695, file: !1773, line: 54, type: !121, isLocal: true, isDefinition: true)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1808, file: !1890, line: 22, type: !1892, isLocal: true, isDefinition: true)
!1808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1810, retainedTypes: !1811, globals: !1887, splitDebugInlining: false, nameTableKind: None)
!1809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!1810 = !{!1126, !1132}
!1811 = !{!1812, !1876, !1881, !1179, !1132, !1126, !1886, !102}
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1127, line: 523, size: 288, elements: !1815)
!1815 = !{!1816, !1835, !1839, !1843, !1847, !1848, !1849, !1853, !1872}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1814, file: !1127, line: 524, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!103, !1820, !1167, !1168}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1823)
!1823 = !{!1824, !1825, !1826, !1827, !1833, !1834}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1822, file: !141, line: 380, baseType: !144, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1822, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1822, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1822, file: !141, line: 386, baseType: !1828, size: 32, offset: 96)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1830)
!1830 = !{!1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1829, file: !141, line: 359, baseType: !154, size: 8)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1829, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1822, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1822, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1814, file: !1127, line: 530, baseType: !1836, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!103, !1820, !1173}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1814, file: !1127, line: 532, baseType: !1840, size: 32, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!103, !1820, !1179, !1174}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1814, file: !1127, line: 535, baseType: !1844, size: 32, offset: 96)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!103, !1820, !1179}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1814, file: !1127, line: 537, baseType: !1844, size: 32, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1814, file: !1127, line: 539, baseType: !1844, size: 32, offset: 160)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1814, file: !1127, line: 541, baseType: !1850, size: 32, offset: 192)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!103, !1820, !1167, !1126, !1132}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1814, file: !1127, line: 544, baseType: !1854, size: 32, offset: 224)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!103, !1820, !1857, !157}
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1127, line: 478, size: 96, elements: !1859)
!1859 = !{!1860, !1866, !1871}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1858, file: !1127, line: 482, baseType: !1861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1199, line: 33, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1199, line: 29, size: 32, elements: !1863)
!1863 = !{!1864}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1862, file: !1199, line: 30, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1858, file: !1127, line: 485, baseType: !1867, size: 32, offset: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1127, line: 464, baseType: !1868)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{null, !1820, !1857, !1179}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1858, file: !1127, line: 493, baseType: !1179, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1814, file: !1127, line: 547, baseType: !1873, size: 32, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!121, !1820}
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1127, line: 428, size: 32, elements: !1879)
!1879 = !{!1880}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1878, file: !1127, line: 434, baseType: !1179, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1127, line: 441, size: 32, elements: !1884)
!1884 = !{!1885}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1883, file: !1127, line: 447, baseType: !1179, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1887 = !{!1888, !1806}
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1889 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1808, file: !1890, line: 37, type: !1891, isLocal: true, isDefinition: true)
!1890 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1893, size: 352, elements: !1894)
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1894 = !{!1895}
!1895 = !DISubrange(count: 11)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1898, file: !1939, line: 139, type: !1943, isLocal: false, isDefinition: true)
!1898 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1899, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1900, globals: !1936, splitDebugInlining: false, nameTableKind: None)
!1899 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!1900 = !{!1901}
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !1904)
!1904 = !{!1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1903, file: !116, line: 479, baseType: !120, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1903, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1903, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1903, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1903, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1903, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1903, file: !116, line: 485, baseType: !812, size: 64, offset: 192)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1903, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1903, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1903, file: !116, line: 488, baseType: !812, size: 64, offset: 320)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1903, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1903, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1903, file: !116, line: 491, baseType: !812, size: 64, offset: 448)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1903, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1903, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1903, file: !116, line: 494, baseType: !812, size: 64, offset: 576)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1903, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1903, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1903, file: !116, line: 497, baseType: !812, size: 64, offset: 704)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1903, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1903, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1903, file: !116, line: 500, baseType: !812, size: 64, offset: 832)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1903, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1903, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1903, file: !116, line: 503, baseType: !812, size: 64, offset: 960)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1903, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1903, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1903, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1903, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1903, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1903, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!1936 = !{!1937, !1940, !1896}
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1898, file: !1939, line: 137, type: !121, isLocal: false, isDefinition: true)
!1939 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1898, file: !1939, line: 138, type: !1942, isLocal: false, isDefinition: true)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 128, elements: !290)
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 64, elements: !1604)
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1946, file: !1949, line: 23, type: !262, isLocal: false, isDefinition: true)
!1946 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1947, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1948, splitDebugInlining: false, nameTableKind: None)
!1947 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!1948 = !{!1944}
!1949 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1952, file: !1956, line: 86, type: !2203, isLocal: false, isDefinition: true, align: 512)
!1952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1953, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1954, retainedTypes: !1963, globals: !2036, splitDebugInlining: false, nameTableKind: None)
!1953 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!1954 = !{!1955, !30, !564}
!1955 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1956, line: 63, baseType: !32, size: 32, elements: !1957)
!1956 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1957 = !{!1958, !1959, !1960, !1961, !1962}
!1958 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1959 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1960 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1961 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1962 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1963 = !{!344, !102, !103, !1964, !1069, !121, !1994, !332, !154, !2019}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1967, line: 51, size: 64, elements: !1968)
!1967 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1968 = !{!1969, !1989}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1966, file: !1967, line: 52, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1967, line: 38, baseType: !1971)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!103, !1974, !261, !328}
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1977)
!1977 = !{!1978, !1979, !1980, !1981, !1987, !1988}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1976, file: !141, line: 380, baseType: !144, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1976, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1976, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1976, file: !141, line: 386, baseType: !1982, size: 32, offset: 96)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1983, file: !141, line: 359, baseType: !154, size: 8)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1983, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1976, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1976, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1966, file: !1967, line: 53, baseType: !1990, size: 32, offset: 32)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1967, line: 47, baseType: !1991)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!103, !1974, !261, !328, !121}
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !1996)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1996, file: !495, line: 447, baseType: !499, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1996, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1996, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1996, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1996, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1996, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1996, file: !495, line: 453, baseType: !1751, size: 96, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1996, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1996, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1996, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1996, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1996, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1996, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1996, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1996, file: !495, line: 461, baseType: !1760, size: 64, offset: 512)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1996, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1996, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1996, file: !495, line: 464, baseType: !1764, size: 128, offset: 640)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1996, file: !495, line: 465, baseType: !1766, size: 160, offset: 768)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1996, file: !495, line: 466, baseType: !1768, size: 160, offset: 928)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1996, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2021, file: !495, line: 413, baseType: !1714, size: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2021, file: !495, line: 414, baseType: !1716, size: 768, offset: 256)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2021, file: !495, line: 415, baseType: !1714, size: 256, offset: 1024)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2021, file: !495, line: 416, baseType: !1716, size: 768, offset: 1280)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2021, file: !495, line: 417, baseType: !1714, size: 256, offset: 2048)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2021, file: !495, line: 418, baseType: !1716, size: 768, offset: 2304)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2021, file: !495, line: 419, baseType: !1714, size: 256, offset: 3072)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2021, file: !495, line: 420, baseType: !1716, size: 768, offset: 3328)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2021, file: !495, line: 421, baseType: !1714, size: 256, offset: 4096)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2021, file: !495, line: 422, baseType: !1727, size: 1792, offset: 4352)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2021, file: !495, line: 423, baseType: !1731, size: 1920, offset: 6144)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2021, file: !495, line: 424, baseType: !1736, size: 20608, offset: 8064)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2021, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2036 = !{!2037, !2159, !2168, !2170, !1950, !2173, !2175, !2180}
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "_kernel", scope: !1952, file: !1956, line: 40, type: !2039, isLocal: false, isDefinition: true)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !304, line: 158, size: 288, elements: !2040)
!2040 = !{!2041, !2154}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2039, file: !304, line: 159, baseType: !2042, size: 192)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2043, size: 192, elements: !484)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !304, line: 100, size: 192, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2148, !2149, !2150, !2151}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2043, file: !304, line: 102, baseType: !121, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2043, file: !304, line: 105, baseType: !1069, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2043, file: !304, line: 108, baseType: !2048, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2050)
!2050 = !{!2051, !2109, !2121, !2122, !2123, !2124, !2130, !2143}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2049, file: !355, line: 247, baseType: !2052, size: 384)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2053)
!2053 = !{!2054, !2078, !2085, !2086, !2087, !2096, !2097, !2098}
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !355, line: 60, baseType: !2055, size: 64)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !355, line: 60, size: 64, elements: !2056)
!2056 = !{!2057, !2072}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2055, file: !355, line: 61, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2060)
!2060 = !{!2061, !2067}
!2061 = !DIDerivedType(tag: DW_TAG_member, scope: !2059, file: !309, line: 38, baseType: !2062, size: 32)
!2062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2059, file: !309, line: 38, size: 32, elements: !2063)
!2063 = !{!2064, !2066}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2062, file: !309, line: 39, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2062, file: !309, line: 40, baseType: !2065, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, scope: !2059, file: !309, line: 42, baseType: !2068, size: 32, offset: 32)
!2068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2059, file: !309, line: 42, size: 32, elements: !2069)
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2068, file: !309, line: 43, baseType: !2065, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2068, file: !309, line: 44, baseType: !2065, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2055, file: !355, line: 62, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2074)
!2074 = !{!2075}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2073, file: !380, line: 50, baseType: !2076, size: 64)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2077, size: 64, elements: !385)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2052, file: !355, line: 68, baseType: !2079, size: 32, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2081)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2082)
!2082 = !{!2083}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2081, file: !304, line: 232, baseType: !2084, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2059)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2052, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2052, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2052, file: !355, line: 90, baseType: !2088, size: 16, offset: 112)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2052, file: !355, line: 90, size: 16, elements: !2089)
!2089 = !{!2090, !2095}
!2090 = !DIDerivedType(tag: DW_TAG_member, scope: !2088, file: !355, line: 91, baseType: !2091, size: 16)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2088, file: !355, line: 91, size: 16, elements: !2092)
!2092 = !{!2093, !2094}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2091, file: !355, line: 96, baseType: !403, size: 8)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2091, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2088, file: !355, line: 100, baseType: !328, size: 16)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2052, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2052, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2052, file: !355, line: 131, baseType: !2099, size: 192, offset: 192)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2100)
!2100 = !{!2101, !2102, !2108}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2099, file: !304, line: 245, baseType: !2058, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2099, file: !304, line: 246, baseType: !2103, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2104)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{null, !2107}
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2099, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2049, file: !355, line: 250, baseType: !2110, size: 288, offset: 384)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2111)
!2111 = !{!2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2110, file: !424, line: 26, baseType: !121, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2110, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2110, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2110, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2110, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2110, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2110, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2110, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2110, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2049, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2049, file: !355, line: 256, baseType: !2080, size: 64, offset: 704)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2049, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2049, file: !355, line: 300, baseType: !2125, size: 96, offset: 800)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2126)
!2126 = !{!2127, !2128, !2129}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2125, file: !355, line: 153, baseType: !22, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2125, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2125, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2049, file: !355, line: 325, baseType: !2131, size: 32, offset: 896)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2133)
!2133 = !{!2134, !2140, !2141}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2132, file: !300, line: 5074, baseType: !2135, size: 96)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2136)
!2136 = !{!2137, !2138, !2139}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2135, file: !450, line: 57, baseType: !453, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2135, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2135, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2132, file: !300, line: 5075, baseType: !2080, size: 64, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2132, file: !300, line: 5076, baseType: !2142, offset: 160)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2049, file: !355, line: 343, baseType: !2144, size: 64, offset: 928)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2144, file: !424, line: 63, baseType: !121, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2144, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2043, file: !304, line: 111, baseType: !2048, size: 32, offset: 96)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2043, file: !304, line: 124, baseType: !103, size: 32, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2043, file: !304, line: 127, baseType: !154, size: 8, offset: 160)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2043, file: !304, line: 153, baseType: !2152, offset: 168)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2153, line: 33, elements: !461)
!2153 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2039, file: !304, line: 170, baseType: !2155, size: 96, offset: 192)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !304, line: 83, size: 96, elements: !2156)
!2156 = !{!2157, !2158}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2155, file: !304, line: 86, baseType: !2048, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2155, file: !304, line: 90, baseType: !2084, size: 64, offset: 32)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1952, file: !1956, line: 43, type: !2161, isLocal: false, isDefinition: true, align: 512)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2162, size: 8704, elements: !2166)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2163, line: 47, size: 8, elements: !2164)
!2163 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2164 = !{!2165}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2162, file: !2163, line: 48, baseType: !146, size: 8)
!2166 = !{!2167}
!2167 = !DISubrange(count: 1088)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1952, file: !1956, line: 44, type: !2049, isLocal: false, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1952, file: !1956, line: 48, type: !2172, isLocal: false, isDefinition: true)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2049, size: 1024, elements: !484)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1952, file: !1956, line: 217, type: !157, isLocal: false, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1952, file: !1956, line: 50, type: !2177, isLocal: true, isDefinition: true, align: 512)
!2177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2162, size: 3072, elements: !2178)
!2178 = !{!485, !2179}
!2179 = !DISubrange(count: 384)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "levels", scope: !2182, file: !1956, line: 232, type: !2202, isLocal: true, isDefinition: true)
!2182 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1956, file: !1956, line: 230, type: !2183, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !2185)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{null, !1955}
!2185 = !{!2186, !2187, !2197, !2201}
!2186 = !DILocalVariable(name: "level", arg: 1, scope: !2182, file: !1956, line: 230, type: !1955)
!2187 = !DILocalVariable(name: "entry", scope: !2182, file: !1956, line: 244, type: !2188)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2190)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2191)
!2191 = !{!2192, !2196}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2190, file: !132, line: 60, baseType: !2193, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{!103, !1974}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2190, file: !132, line: 65, baseType: !1974, size: 32, offset: 32)
!2197 = !DILocalVariable(name: "dev", scope: !2198, file: !1956, line: 247, type: !1974)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !1956, line: 246, column: 64)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !1956, line: 246, column: 2)
!2200 = distinct !DILexicalBlock(scope: !2182, file: !1956, line: 246, column: 2)
!2201 = !DILocalVariable(name: "rc", scope: !2198, file: !1956, line: 248, type: !103)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2188, size: 192, elements: !1319)
!2203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2162, size: 16896, elements: !2204)
!2204 = !{!485, !2205}
!2205 = !DISubrange(count: 2112)
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "states_str", scope: !2208, file: !2209, line: 276, type: !2330, isLocal: true, isDefinition: true)
!2208 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2209, file: !2209, line: 271, type: !2210, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !2321)
!2209 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!144, !2212, !1069, !344}
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !2213)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2215)
!2215 = !{!2216, !2274, !2286, !2287, !2288, !2289, !2295, !2308}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2214, file: !355, line: 247, baseType: !2217, size: 384)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2218)
!2218 = !{!2219, !2243, !2250, !2251, !2252, !2261, !2262, !2263}
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2217, file: !355, line: 60, baseType: !2220, size: 64)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2217, file: !355, line: 60, size: 64, elements: !2221)
!2221 = !{!2222, !2237}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2220, file: !355, line: 61, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2224)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2225)
!2225 = !{!2226, !2232}
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !309, line: 38, baseType: !2227, size: 32)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !309, line: 38, size: 32, elements: !2228)
!2228 = !{!2229, !2231}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2227, file: !309, line: 39, baseType: !2230, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2227, file: !309, line: 40, baseType: !2230, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !309, line: 42, baseType: !2233, size: 32, offset: 32)
!2233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2224, file: !309, line: 42, size: 32, elements: !2234)
!2234 = !{!2235, !2236}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2233, file: !309, line: 43, baseType: !2230, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2233, file: !309, line: 44, baseType: !2230, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2220, file: !355, line: 62, baseType: !2238, size: 64)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2239)
!2239 = !{!2240}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2238, file: !380, line: 50, baseType: !2241, size: 64)
!2241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2242, size: 64, elements: !385)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2217, file: !355, line: 68, baseType: !2244, size: 32, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2246)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2247)
!2247 = !{!2248}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2246, file: !304, line: 232, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2224)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2217, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2217, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !2217, file: !355, line: 90, baseType: !2253, size: 16, offset: 112)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2217, file: !355, line: 90, size: 16, elements: !2254)
!2254 = !{!2255, !2260}
!2255 = !DIDerivedType(tag: DW_TAG_member, scope: !2253, file: !355, line: 91, baseType: !2256, size: 16)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2253, file: !355, line: 91, size: 16, elements: !2257)
!2257 = !{!2258, !2259}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2256, file: !355, line: 96, baseType: !403, size: 8)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2256, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2253, file: !355, line: 100, baseType: !328, size: 16)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2217, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2217, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2217, file: !355, line: 131, baseType: !2264, size: 192, offset: 192)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2265)
!2265 = !{!2266, !2267, !2273}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2264, file: !304, line: 245, baseType: !2223, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2264, file: !304, line: 246, baseType: !2268, size: 32, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2269)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 32)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{null, !2272}
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2264, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2214, file: !355, line: 250, baseType: !2275, size: 288, offset: 384)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2276)
!2276 = !{!2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2275, file: !424, line: 26, baseType: !121, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2275, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2275, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2275, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2275, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2275, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2275, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2275, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2275, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2214, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2214, file: !355, line: 256, baseType: !2245, size: 64, offset: 704)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2214, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2214, file: !355, line: 300, baseType: !2290, size: 96, offset: 800)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2291)
!2291 = !{!2292, !2293, !2294}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2290, file: !355, line: 153, baseType: !22, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2290, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2290, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2214, file: !355, line: 325, baseType: !2296, size: 32, offset: 896)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2298)
!2298 = !{!2299, !2305, !2306}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2297, file: !300, line: 5074, baseType: !2300, size: 96)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2301)
!2301 = !{!2302, !2303, !2304}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2300, file: !450, line: 57, baseType: !453, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2300, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2300, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2297, file: !300, line: 5075, baseType: !2245, size: 64, offset: 96)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2297, file: !300, line: 5076, baseType: !2307, offset: 160)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2214, file: !355, line: 343, baseType: !2309, size: 64, offset: 928)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2310)
!2310 = !{!2311, !2312}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2309, file: !424, line: 63, baseType: !121, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2309, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2313 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2314, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2315, globals: !2317, splitDebugInlining: false, nameTableKind: None)
!2314 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2315 = !{!102, !144, !1699, !154, !103, !2316, !24, !344, !1069, !22, !121, !1596}
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2317 = !{!2206, !2318}
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "states_sz", scope: !2208, file: !2209, line: 279, type: !2320, isLocal: true, isDefinition: true)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 256, elements: !1604)
!2321 = !{!2322, !2323, !2324, !2325, !2326, !2327, !2328}
!2322 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2208, file: !2209, line: 271, type: !2212)
!2323 = !DILocalVariable(name: "buf", arg: 2, scope: !2208, file: !2209, line: 271, type: !1069)
!2324 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2208, file: !2209, line: 271, type: !344)
!2325 = !DILocalVariable(name: "off", scope: !2208, file: !2209, line: 273, type: !344)
!2326 = !DILocalVariable(name: "bit", scope: !2208, file: !2209, line: 274, type: !154)
!2327 = !DILocalVariable(name: "thread_state", scope: !2208, file: !2209, line: 275, type: !154)
!2328 = !DILocalVariable(name: "index", scope: !2329, file: !2209, line: 293, type: !154)
!2329 = distinct !DILexicalBlock(scope: !2208, file: !2209, line: 293, column: 2)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1604)
!2331 = !DIGlobalVariableExpression(var: !2332, expr: !DIExpression())
!2332 = distinct !DIGlobalVariable(name: "lock", scope: !2333, file: !2352, line: 39, type: !2353, isLocal: true, isDefinition: true)
!2333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2335, globals: !2351, splitDebugInlining: false, nameTableKind: None)
!2334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2335 = !{!102, !157, !103, !2336}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2338)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2339)
!2339 = !{!2340, !2346}
!2340 = !DIDerivedType(tag: DW_TAG_member, scope: !2338, file: !309, line: 38, baseType: !2341, size: 32)
!2341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2338, file: !309, line: 38, size: 32, elements: !2342)
!2342 = !{!2343, !2345}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2341, file: !309, line: 39, baseType: !2344, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2341, file: !309, line: 40, baseType: !2344, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, scope: !2338, file: !309, line: 42, baseType: !2347, size: 32, offset: 32)
!2347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2338, file: !309, line: 42, size: 32, elements: !2348)
!2348 = !{!2349, !2350}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2347, file: !309, line: 43, baseType: !2344, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2347, file: !309, line: 44, baseType: !2344, size: 32)
!2351 = !{!2331}
!2352 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2354 = !DIGlobalVariableExpression(var: !2355, expr: !DIExpression())
!2355 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2356, file: !2464, line: 56, type: !2453, isLocal: false, isDefinition: true)
!2356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2358, globals: !2461, splitDebugInlining: false, nameTableKind: None)
!2357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2358 = !{!2359, !1069, !102, !2459, !261, !1699, !332, !103, !121, !1596, !2460}
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2361)
!2361 = !{!2362, !2420, !2432, !2433, !2434, !2435, !2441, !2454}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2360, file: !355, line: 247, baseType: !2363, size: 384)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2364)
!2364 = !{!2365, !2389, !2396, !2397, !2398, !2407, !2408, !2409}
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2363, file: !355, line: 60, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2363, file: !355, line: 60, size: 64, elements: !2367)
!2367 = !{!2368, !2383}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2366, file: !355, line: 61, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2371)
!2371 = !{!2372, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, scope: !2370, file: !309, line: 38, baseType: !2373, size: 32)
!2373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2370, file: !309, line: 38, size: 32, elements: !2374)
!2374 = !{!2375, !2377}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2373, file: !309, line: 39, baseType: !2376, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2373, file: !309, line: 40, baseType: !2376, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2370, file: !309, line: 42, baseType: !2379, size: 32, offset: 32)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2370, file: !309, line: 42, size: 32, elements: !2380)
!2380 = !{!2381, !2382}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2379, file: !309, line: 43, baseType: !2376, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2379, file: !309, line: 44, baseType: !2376, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2366, file: !355, line: 62, baseType: !2384, size: 64)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2385)
!2385 = !{!2386}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2384, file: !380, line: 50, baseType: !2387, size: 64)
!2387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2388, size: 64, elements: !385)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2363, file: !355, line: 68, baseType: !2390, size: 32, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2393)
!2393 = !{!2394}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2392, file: !304, line: 232, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2370)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2363, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2363, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2363, file: !355, line: 90, baseType: !2399, size: 16, offset: 112)
!2399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2363, file: !355, line: 90, size: 16, elements: !2400)
!2400 = !{!2401, !2406}
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !2399, file: !355, line: 91, baseType: !2402, size: 16)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2399, file: !355, line: 91, size: 16, elements: !2403)
!2403 = !{!2404, !2405}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2402, file: !355, line: 96, baseType: !403, size: 8)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2402, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2399, file: !355, line: 100, baseType: !328, size: 16)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2363, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2363, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2363, file: !355, line: 131, baseType: !2410, size: 192, offset: 192)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2411)
!2411 = !{!2412, !2413, !2419}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2410, file: !304, line: 245, baseType: !2369, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2410, file: !304, line: 246, baseType: !2414, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2415)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{null, !2418}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2410, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2360, file: !355, line: 250, baseType: !2421, size: 288, offset: 384)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2422)
!2422 = !{!2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2421, file: !424, line: 26, baseType: !121, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2421, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2421, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2421, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2421, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2421, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2421, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2421, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2421, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2360, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2360, file: !355, line: 256, baseType: !2391, size: 64, offset: 704)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2360, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2360, file: !355, line: 300, baseType: !2436, size: 96, offset: 800)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2437)
!2437 = !{!2438, !2439, !2440}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2436, file: !355, line: 153, baseType: !22, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2436, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2436, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2360, file: !355, line: 325, baseType: !2442, size: 32, offset: 896)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2444)
!2444 = !{!2445, !2451, !2452}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2443, file: !300, line: 5074, baseType: !2446, size: 96)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2447)
!2447 = !{!2448, !2449, !2450}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2446, file: !450, line: 57, baseType: !453, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2446, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2446, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2443, file: !300, line: 5075, baseType: !2391, size: 64, offset: 96)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2443, file: !300, line: 5076, baseType: !2453, offset: 160)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2360, file: !355, line: 343, baseType: !2455, size: 64, offset: 928)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2456)
!2456 = !{!2457, !2458}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2455, file: !424, line: 63, baseType: !121, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2455, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2461 = !{!2354, !2462, !2465, !2467}
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2356, file: !2464, line: 404, type: !103, isLocal: true, isDefinition: true)
!2464 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2356, file: !2464, line: 405, type: !103, isLocal: true, isDefinition: true)
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "pending_current", scope: !2356, file: !2464, line: 425, type: !2359, isLocal: true, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2471, file: !2501, line: 15, type: !1596, isLocal: true, isDefinition: true)
!2471 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2472, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2473, globals: !2498, splitDebugInlining: false, nameTableKind: None)
!2472 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2473 = !{!1699, !102, !332, !121, !1596, !103, !2474, !1069, !420}
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2476)
!2476 = !{!2477, !2492, !2497}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2475, file: !304, line: 245, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2480)
!2480 = !{!2481, !2487}
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !309, line: 38, baseType: !2482, size: 32)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !309, line: 38, size: 32, elements: !2483)
!2483 = !{!2484, !2486}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2482, file: !309, line: 39, baseType: !2485, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2482, file: !309, line: 40, baseType: !2485, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !309, line: 42, baseType: !2488, size: 32, offset: 32)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !309, line: 42, size: 32, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2488, file: !309, line: 43, baseType: !2485, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2488, file: !309, line: 44, baseType: !2485, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2475, file: !304, line: 246, baseType: !2493, size: 32, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2494)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !2474}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2475, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2498 = !{!2469, !2499, !2503, !2505}
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2471, file: !2501, line: 19, type: !2502, isLocal: true, isDefinition: true)
!2501 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2503 = !DIGlobalVariableExpression(var: !2504, expr: !DIExpression())
!2504 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2471, file: !2501, line: 25, type: !103, isLocal: true, isDefinition: true)
!2505 = !DIGlobalVariableExpression(var: !2506, expr: !DIExpression())
!2506 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2471, file: !2501, line: 17, type: !2507, isLocal: true, isDefinition: true)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2479)
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2510, file: !2529, line: 55, type: !2530, isLocal: true, isDefinition: true, align: 32)
!2510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2512, globals: !2528, splitDebugInlining: false, nameTableKind: None)
!2511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2512 = !{!102, !1699, !103, !2513}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2515)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2516)
!2516 = !{!2517, !2523}
!2517 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !309, line: 38, baseType: !2518, size: 32)
!2518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !309, line: 38, size: 32, elements: !2519)
!2519 = !{!2520, !2522}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2518, file: !309, line: 39, baseType: !2521, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2518, file: !309, line: 40, baseType: !2521, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !309, line: 42, baseType: !2524, size: 32, offset: 32)
!2524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !309, line: 42, size: 32, elements: !2525)
!2525 = !{!2526, !2527}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2524, file: !309, line: 43, baseType: !2521, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2524, file: !309, line: 44, baseType: !2521, size: 32)
!2528 = !{!2508}
!2529 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2531)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2532)
!2532 = !{!2533, !2540}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2531, file: !132, line: 60, baseType: !2534, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{!103, !2537}
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2539)
!2539 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2531, file: !132, line: 65, baseType: !2537, size: 32, offset: 32)
!2541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2542, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2542 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2549, retainedTypes: !2557, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2549 = !{!30, !2550}
!2550 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2551, line: 54, baseType: !32, size: 32, elements: !2552)
!2551 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2552 = !{!2553, !2554, !2555, !2556}
!2553 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2554 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2555 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2556 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2557 = !{!102, !344, !261, !24, !2558, !22, !2564, !103, !843, !2579}
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2551, line: 58, baseType: !2560)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2551, line: 58, size: 64, elements: !2561)
!2561 = !{!2562}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2560, file: !2551, line: 58, baseType: !2563, size: 64)
!2563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1604)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 32)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2551, line: 68, size: 128, elements: !2566)
!2566 = !{!2567, !2570, !2571, !2572}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2565, file: !2551, line: 69, baseType: !2568, size: 64)
!2568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2569, size: 64, elements: !385)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2551, line: 61, baseType: !121)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2565, file: !2551, line: 70, baseType: !2569, size: 32, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2565, file: !2551, line: 71, baseType: !121, size: 32, offset: 96)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2565, file: !2551, line: 77, baseType: !2573, offset: 128)
!2573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2574, elements: !2577)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2551, line: 64, size: 32, elements: !2575)
!2575 = !{!2576}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2574, file: !2551, line: 65, baseType: !2569, size: 32)
!2577 = !{!2578}
!2578 = !DISubrange(count: 0)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!2580 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2581, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2582, retainedTypes: !2602, splitDebugInlining: false, nameTableKind: None)
!2581 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2582 = !{!2583, !2591}
!2583 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2584, line: 69, baseType: !32, size: 32, elements: !2585)
!2584 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2585 = !{!2586, !2587, !2588, !2589, !2590}
!2586 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2587 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2588 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2589 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2590 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2591 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2584, line: 56, baseType: !32, size: 32, elements: !2592)
!2592 = !{!2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601}
!2593 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2594 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2595 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2596 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2597 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2598 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2599 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2600 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2601 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2602 = !{!103, !2583, !2591, !2603, !404, !164, !2605, !2606, !155, !329, !144, !344, !102, !22, !32, !2608, !2609, !2610, !1099, !2611, !421, !2612, !2604, !2613, !2614, !2615, !2616}
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2584, line: 31, baseType: !2604)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !421)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !345, line: 329, baseType: !32)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2584, line: 32, baseType: !2607)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1597)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !345, line: 145, baseType: !103)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2618, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2618 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2621, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2621 = !{!154, !102, !103, !2622, !1699, !121, !1596}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2624)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !2625)
!2625 = !{!2626, !2645, !2649, !2653, !2666, !2671, !2675, !2679, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2624, file: !203, line: 365, baseType: !2627, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!103, !2630, !224}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2632)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2633)
!2633 = !{!2634, !2635, !2636, !2637, !2643, !2644}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2632, file: !141, line: 380, baseType: !144, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2632, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2632, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2632, file: !141, line: 386, baseType: !2638, size: 32, offset: 96)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 32)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2640)
!2640 = !{!2641, !2642}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2639, file: !141, line: 359, baseType: !154, size: 8)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2639, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2632, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2632, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2624, file: !203, line: 366, baseType: !2646, size: 32, offset: 32)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{null, !2630, !155}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2624, file: !203, line: 374, baseType: !2650, size: 32, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{!103, !2630}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2624, file: !203, line: 377, baseType: !2654, size: 32, offset: 96)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{!103, !2630, !2657}
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2659)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !2660)
!2660 = !{!2661, !2662, !2663, !2664, !2665}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2659, file: !203, line: 123, baseType: !121, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2659, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2659, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2659, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2659, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2624, file: !203, line: 379, baseType: !2667, size: 32, offset: 128)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 32)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{!103, !2630, !2670}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2624, file: !203, line: 384, baseType: !2672, size: 32, offset: 160)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!103, !2630, !255, !103}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2624, file: !203, line: 393, baseType: !2676, size: 32, offset: 192)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!103, !2630, !261, !262}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2624, file: !203, line: 402, baseType: !2680, size: 32, offset: 224)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 32)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{null, !2630}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2624, file: !203, line: 405, baseType: !2680, size: 32, offset: 256)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2624, file: !203, line: 408, baseType: !2650, size: 32, offset: 288)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2624, file: !203, line: 411, baseType: !2680, size: 32, offset: 320)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2624, file: !203, line: 414, baseType: !2680, size: 32, offset: 352)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2624, file: !203, line: 417, baseType: !2650, size: 32, offset: 384)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2624, file: !203, line: 420, baseType: !2650, size: 32, offset: 416)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2624, file: !203, line: 423, baseType: !2680, size: 32, offset: 448)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2624, file: !203, line: 426, baseType: !2680, size: 32, offset: 480)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2624, file: !203, line: 429, baseType: !2650, size: 32, offset: 512)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2624, file: !203, line: 432, baseType: !2650, size: 32, offset: 544)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2624, file: !203, line: 435, baseType: !2694, size: 32, offset: 576)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{null, !2630, !2697, !102}
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !2698)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 32)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{null, !2630, !102}
!2701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2703, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2702 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2703 = !{!2704, !30}
!2704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2705, line: 27, baseType: !32, size: 32, elements: !2706)
!2705 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2706 = !{!2707, !2708, !2709, !2710, !2711}
!2707 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2708 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2709 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2710 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2711 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2713, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2714, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2713 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2714 = !{!564, !2704, !30}
!2715 = !{!750, !2716, !102, !103, !332, !121, !154, !2733}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2718, file: !495, line: 413, baseType: !1714, size: 256)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2718, file: !495, line: 414, baseType: !1716, size: 768, offset: 256)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2718, file: !495, line: 415, baseType: !1714, size: 256, offset: 1024)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2718, file: !495, line: 416, baseType: !1716, size: 768, offset: 1280)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2718, file: !495, line: 417, baseType: !1714, size: 256, offset: 2048)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2718, file: !495, line: 418, baseType: !1716, size: 768, offset: 2304)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2718, file: !495, line: 419, baseType: !1714, size: 256, offset: 3072)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2718, file: !495, line: 420, baseType: !1716, size: 768, offset: 3328)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2718, file: !495, line: 421, baseType: !1714, size: 256, offset: 4096)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2718, file: !495, line: 422, baseType: !1727, size: 1792, offset: 4352)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2718, file: !495, line: 423, baseType: !1731, size: 1920, offset: 6144)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2718, file: !495, line: 424, baseType: !1736, size: 20608, offset: 8064)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2718, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2736)
!2736 = !{!2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2735, file: !495, line: 447, baseType: !499, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2735, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2735, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2735, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2735, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2735, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2735, file: !495, line: 453, baseType: !1751, size: 96, offset: 192)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2735, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2735, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2735, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2735, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2735, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2735, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2735, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2735, file: !495, line: 461, baseType: !1760, size: 64, offset: 512)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2735, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2735, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2735, file: !495, line: 464, baseType: !1764, size: 128, offset: 640)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2735, file: !495, line: 465, baseType: !1766, size: 160, offset: 768)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2735, file: !495, line: 466, baseType: !1768, size: 160, offset: 928)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2735, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2758 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2759, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2759 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2760 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2761, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2762, splitDebugInlining: false, nameTableKind: None)
!2761 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2762 = !{!102, !103, !22, !2763}
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2765)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2766)
!2766 = !{!2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2765, file: !495, line: 447, baseType: !499, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2765, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2765, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2765, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2765, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2765, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2765, file: !495, line: 453, baseType: !1751, size: 96, offset: 192)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2765, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2765, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2765, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2765, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2765, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2765, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2765, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2765, file: !495, line: 461, baseType: !1760, size: 64, offset: 512)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2765, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2765, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2765, file: !495, line: 464, baseType: !1764, size: 128, offset: 640)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2765, file: !495, line: 465, baseType: !1766, size: 160, offset: 768)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2765, file: !495, line: 466, baseType: !1768, size: 160, offset: 928)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2765, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2790, splitDebugInlining: false, nameTableKind: None)
!2789 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2790 = !{!2791, !102, !103}
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2793)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2794)
!2794 = !{!2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2793, file: !495, line: 447, baseType: !499, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2793, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2793, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2793, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2793, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2793, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2793, file: !495, line: 453, baseType: !1751, size: 96, offset: 192)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2793, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2793, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2793, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2793, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2793, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2793, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2793, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2793, file: !495, line: 461, baseType: !1760, size: 64, offset: 512)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2793, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2793, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2793, file: !495, line: 464, baseType: !1764, size: 128, offset: 640)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2793, file: !495, line: 465, baseType: !1766, size: 160, offset: 768)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2793, file: !495, line: 466, baseType: !1768, size: 160, offset: 928)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2793, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2817, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2818, splitDebugInlining: false, nameTableKind: None)
!2817 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2818 = !{!2819, !121, !102, !103}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2821, line: 98, size: 256, elements: !2822)
!2821 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2822 = !{!2823, !2828, !2833, !2838, !2843, !2848, !2853, !2858}
!2823 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 99, baseType: !2824, size: 32)
!2824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 99, size: 32, elements: !2825)
!2825 = !{!2826, !2827}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2824, file: !2821, line: 99, baseType: !121, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2824, file: !2821, line: 99, baseType: !121, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 100, baseType: !2829, size: 32, offset: 32)
!2829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 100, size: 32, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2829, file: !2821, line: 100, baseType: !121, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2829, file: !2821, line: 100, baseType: !121, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 101, baseType: !2834, size: 32, offset: 64)
!2834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 101, size: 32, elements: !2835)
!2835 = !{!2836, !2837}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2834, file: !2821, line: 101, baseType: !121, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2834, file: !2821, line: 101, baseType: !121, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 102, baseType: !2839, size: 32, offset: 96)
!2839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 102, size: 32, elements: !2840)
!2840 = !{!2841, !2842}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2839, file: !2821, line: 102, baseType: !121, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2839, file: !2821, line: 102, baseType: !121, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 103, baseType: !2844, size: 32, offset: 128)
!2844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 103, size: 32, elements: !2845)
!2845 = !{!2846, !2847}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2844, file: !2821, line: 103, baseType: !121, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2844, file: !2821, line: 103, baseType: !121, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 104, baseType: !2849, size: 32, offset: 160)
!2849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 104, size: 32, elements: !2850)
!2850 = !{!2851, !2852}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2849, file: !2821, line: 104, baseType: !121, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2849, file: !2821, line: 104, baseType: !121, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, scope: !2820, file: !2821, line: 105, baseType: !2854, size: 32, offset: 192)
!2854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2820, file: !2821, line: 105, size: 32, elements: !2855)
!2855 = !{!2856, !2857}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2854, file: !2821, line: 105, baseType: !121, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2854, file: !2821, line: 105, baseType: !121, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2820, file: !2821, line: 106, baseType: !121, size: 32, offset: 224)
!2859 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2860, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2703, retainedTypes: !2861, splitDebugInlining: false, nameTableKind: None)
!2860 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2861 = !{!2862, !102, !103, !2887, !2579, !121}
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2864)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2865)
!2865 = !{!2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2864, file: !495, line: 447, baseType: !499, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2864, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2864, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2864, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2864, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2864, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2864, file: !495, line: 453, baseType: !1751, size: 96, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2864, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2864, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2864, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2864, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2864, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2864, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2864, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2864, file: !495, line: 461, baseType: !1760, size: 64, offset: 512)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2864, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2864, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2864, file: !495, line: 464, baseType: !1764, size: 128, offset: 640)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2864, file: !495, line: 465, baseType: !1766, size: 160, offset: 768)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2864, file: !495, line: 466, baseType: !1768, size: 160, offset: 928)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2864, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2821, line: 141, baseType: !2889)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2821, line: 97, size: 256, elements: !2890)
!2890 = !{!2891}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2889, file: !2821, line: 107, baseType: !2892, size: 256)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2821, line: 98, size: 256, elements: !2893)
!2893 = !{!2894, !2899, !2904, !2909, !2914, !2919, !2924, !2929}
!2894 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 99, baseType: !2895, size: 32)
!2895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 99, size: 32, elements: !2896)
!2896 = !{!2897, !2898}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2895, file: !2821, line: 99, baseType: !121, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2895, file: !2821, line: 99, baseType: !121, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 100, baseType: !2900, size: 32, offset: 32)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 100, size: 32, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2900, file: !2821, line: 100, baseType: !121, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2900, file: !2821, line: 100, baseType: !121, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 101, baseType: !2905, size: 32, offset: 64)
!2905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 101, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2905, file: !2821, line: 101, baseType: !121, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2905, file: !2821, line: 101, baseType: !121, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 102, baseType: !2910, size: 32, offset: 96)
!2910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 102, size: 32, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2910, file: !2821, line: 102, baseType: !121, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2910, file: !2821, line: 102, baseType: !121, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 103, baseType: !2915, size: 32, offset: 128)
!2915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 103, size: 32, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2915, file: !2821, line: 103, baseType: !121, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2915, file: !2821, line: 103, baseType: !121, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 104, baseType: !2920, size: 32, offset: 160)
!2920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 104, size: 32, elements: !2921)
!2921 = !{!2922, !2923}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2920, file: !2821, line: 104, baseType: !121, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2920, file: !2821, line: 104, baseType: !121, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2821, line: 105, baseType: !2925, size: 32, offset: 192)
!2925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2821, line: 105, size: 32, elements: !2926)
!2926 = !{!2927, !2928}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2925, file: !2821, line: 105, baseType: !121, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2925, file: !2821, line: 105, baseType: !121, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2892, file: !2821, line: 106, baseType: !121, size: 32, offset: 224)
!2930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1697, retainedTypes: !2932, splitDebugInlining: false, nameTableKind: None)
!2931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2932 = !{!750, !332, !154, !121, !2933, !2950}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2935, file: !495, line: 413, baseType: !1714, size: 256)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2935, file: !495, line: 414, baseType: !1716, size: 768, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2935, file: !495, line: 415, baseType: !1714, size: 256, offset: 1024)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2935, file: !495, line: 416, baseType: !1716, size: 768, offset: 1280)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2935, file: !495, line: 417, baseType: !1714, size: 256, offset: 2048)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2935, file: !495, line: 418, baseType: !1716, size: 768, offset: 2304)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2935, file: !495, line: 419, baseType: !1714, size: 256, offset: 3072)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2935, file: !495, line: 420, baseType: !1716, size: 768, offset: 3328)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2935, file: !495, line: 421, baseType: !1714, size: 256, offset: 4096)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2935, file: !495, line: 422, baseType: !1727, size: 1792, offset: 4352)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2935, file: !495, line: 423, baseType: !1731, size: 1920, offset: 6144)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2935, file: !495, line: 424, baseType: !1736, size: 20608, offset: 8064)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2935, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2952)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2953)
!2953 = !{!2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2952, file: !495, line: 447, baseType: !499, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2952, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2952, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2952, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2952, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2952, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2952, file: !495, line: 453, baseType: !1751, size: 96, offset: 192)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2952, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2952, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2952, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2952, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2952, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2952, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2952, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2952, file: !495, line: 461, baseType: !1760, size: 64, offset: 512)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2952, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2952, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2952, file: !495, line: 464, baseType: !1764, size: 128, offset: 640)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2952, file: !495, line: 465, baseType: !1766, size: 160, offset: 768)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2952, file: !495, line: 466, baseType: !1768, size: 160, offset: 928)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2952, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2975 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2976, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2977, splitDebugInlining: false, nameTableKind: None)
!2976 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!2977 = !{!2978, !102, !103}
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2981)
!2981 = !{!2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2980, file: !495, line: 447, baseType: !499, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2980, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2980, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2980, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2980, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2980, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2980, file: !495, line: 453, baseType: !1751, size: 96, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2980, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2980, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2980, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2980, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2980, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2980, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2980, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2980, file: !495, line: 461, baseType: !1760, size: 64, offset: 512)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2980, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2980, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2980, file: !495, line: 464, baseType: !1764, size: 128, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2980, file: !495, line: 465, baseType: !1766, size: 160, offset: 768)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2980, file: !495, line: 466, baseType: !1768, size: 160, offset: 928)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2980, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!3003 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3004, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3005, splitDebugInlining: false, nameTableKind: None)
!3004 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3005 = !{!146, !1069, !344, !224, !3006, !155, !102}
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!3008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3010, splitDebugInlining: false, nameTableKind: None)
!3009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3010 = !{!3011}
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !3013)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !3014)
!3014 = !{!3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3013, file: !116, line: 479, baseType: !120, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3013, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3013, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3013, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3013, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3013, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3013, file: !116, line: 485, baseType: !812, size: 64, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3013, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3013, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3013, file: !116, line: 488, baseType: !812, size: 64, offset: 320)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3013, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3013, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3013, file: !116, line: 491, baseType: !812, size: 64, offset: 448)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3013, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3013, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3013, file: !116, line: 494, baseType: !812, size: 64, offset: 576)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3013, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3013, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3013, file: !116, line: 497, baseType: !812, size: 64, offset: 704)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3013, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3013, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3013, file: !116, line: 500, baseType: !812, size: 64, offset: 832)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3013, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3013, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3013, file: !116, line: 503, baseType: !812, size: 64, offset: 960)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3013, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3013, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3013, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3013, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3013, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3013, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3050, retainedTypes: !3066, splitDebugInlining: false, nameTableKind: None)
!3049 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3050 = !{!3051, !3058, !3062}
!3051 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3052, line: 38, baseType: !32, size: 32, elements: !3053)
!3052 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3053 = !{!3054, !3055, !3056, !3057}
!3054 = !DIEnumerator(name: "HAL_OK", value: 0)
!3055 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3056 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3057 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3058 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !789, line: 184, baseType: !32, size: 32, elements: !3059)
!3059 = !{!3060, !3061}
!3060 = !DIEnumerator(name: "RESET", value: 0)
!3061 = !DIEnumerator(name: "SET", value: 1)
!3062 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !789, line: 190, baseType: !32, size: 32, elements: !3063)
!3063 = !{!3064, !3065}
!3064 = !DIEnumerator(name: "DISABLE", value: 0)
!3065 = !DIEnumerator(name: "ENABLE", value: 1)
!3066 = !{!102, !3067, !154, !121, !1598, !3102, !3108, !3119, !328, !3120, !1596}
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !3069)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !3070)
!3070 = !{!3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3069, file: !116, line: 479, baseType: !120, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3069, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3069, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3069, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3069, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3069, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3069, file: !116, line: 485, baseType: !812, size: 64, offset: 192)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3069, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3069, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3069, file: !116, line: 488, baseType: !812, size: 64, offset: 320)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3069, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3069, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3069, file: !116, line: 491, baseType: !812, size: 64, offset: 448)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3069, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3069, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3069, file: !116, line: 494, baseType: !812, size: 64, offset: 576)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3069, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3069, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3069, file: !116, line: 497, baseType: !812, size: 64, offset: 704)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3069, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3069, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3069, file: !116, line: 500, baseType: !812, size: 64, offset: 832)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3069, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3069, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3069, file: !116, line: 503, baseType: !812, size: 64, offset: 960)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3069, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3069, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3069, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3069, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3069, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3069, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 471, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 467, size: 64, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3104, file: !116, line: 469, baseType: !120, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3104, file: !116, line: 470, baseType: !120, size: 32, offset: 32)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !3110)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !3111)
!3111 = !{!3112, !3113, !3114, !3115, !3116, !3117, !3118}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3110, file: !116, line: 372, baseType: !120, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3110, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3110, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3110, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3110, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3110, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3110, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 396, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 385, size: 320, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3122, file: !116, line: 387, baseType: !120, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3122, file: !116, line: 388, baseType: !120, size: 32, offset: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3122, file: !116, line: 389, baseType: !120, size: 32, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3122, file: !116, line: 390, baseType: !120, size: 32, offset: 96)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3122, file: !116, line: 391, baseType: !120, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3122, file: !116, line: 392, baseType: !120, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3122, file: !116, line: 393, baseType: !120, size: 32, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3122, file: !116, line: 394, baseType: !120, size: 32, offset: 224)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3122, file: !116, line: 395, baseType: !1238, size: 64, offset: 256)
!3133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3134, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3135, retainedTypes: !3136, splitDebugInlining: false, nameTableKind: None)
!3134 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3135 = !{!788}
!3136 = !{!3137, !121, !3145, !3151, !3162}
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !3139)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !3140)
!3140 = !{!3141, !3142, !3143, !3144}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3139, file: !495, line: 766, baseType: !120, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3139, file: !495, line: 767, baseType: !120, size: 32, offset: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3139, file: !495, line: 768, baseType: !120, size: 32, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3139, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 471, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 467, size: 64, elements: !3148)
!3148 = !{!3149, !3150}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3147, file: !116, line: 469, baseType: !120, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3147, file: !116, line: 470, baseType: !120, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !3154)
!3154 = !{!3155, !3156, !3157, !3158, !3159, !3160, !3161}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3153, file: !116, line: 372, baseType: !120, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3153, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3153, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3153, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3153, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3153, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3153, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !3164)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3164, file: !116, line: 479, baseType: !120, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3164, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3164, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3164, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3164, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3164, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3164, file: !116, line: 485, baseType: !812, size: 64, offset: 192)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3164, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3164, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3164, file: !116, line: 488, baseType: !812, size: 64, offset: 320)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3164, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3164, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3164, file: !116, line: 491, baseType: !812, size: 64, offset: 448)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3164, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3164, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3164, file: !116, line: 494, baseType: !812, size: 64, offset: 576)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3164, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3164, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3164, file: !116, line: 497, baseType: !812, size: 64, offset: 704)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3164, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3164, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3164, file: !116, line: 500, baseType: !812, size: 64, offset: 832)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3164, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3164, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3164, file: !116, line: 503, baseType: !812, size: 64, offset: 960)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3164, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3164, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3164, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3164, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3164, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3164, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!3197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3199, splitDebugInlining: false, nameTableKind: None)
!3198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3199 = !{!102, !344}
!3200 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3201, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3202, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3201 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3202 = !{!3203, !3210, !30}
!3203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3204, line: 14, baseType: !32, size: 32, elements: !3205)
!3204 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3205 = !{!3206, !3207, !3208, !3209}
!3206 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3207 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3208 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3209 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3204, line: 42, baseType: !32, size: 32, elements: !3211)
!3211 = !{!3212, !3213, !3214, !3215, !3216, !3217}
!3212 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3213 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3214 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3215 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3216 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3217 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3221, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3222, splitDebugInlining: false, nameTableKind: None)
!3221 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3222 = !{!22, !102, !103}
!3223 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3224, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3224 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3225 = !{!"Ubuntu clang version 14.0.6"}
!3226 = !{i32 7, !"Dwarf Version", i32 4}
!3227 = !{i32 2, !"Debug Info Version", i32 3}
!3228 = !{i32 1, !"wchar_size", i32 4}
!3229 = !{i32 1, !"min_enum_size", i32 4}
!3230 = !{i32 1, !"branch-target-enforcement", i32 0}
!3231 = !{i32 1, !"sign-return-address", i32 0}
!3232 = !{i32 1, !"sign-return-address-all", i32 0}
!3233 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3234 = !{i32 7, !"frame-pointer", i32 2}
!3235 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3236, file: !3236, line: 26, type: !3237, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !461)
!3236 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3237 = !DISubroutineType(types: !3238)
!3238 = !{null}
!3239 = !DILocation(line: 28, column: 1, scope: !3235)
!3240 = !{i64 2155025835, i64 2155025855, i64 2155025918}
!3241 = !DILocation(line: 29, column: 1, scope: !3235)
!3242 = !{i64 2155026250, i64 2155026270, i64 2155026333}
!3243 = !DILocation(line: 30, column: 1, scope: !3235)
!3244 = !{i64 2155026669, i64 2155026689, i64 2155026752}
!3245 = !DILocation(line: 31, column: 1, scope: !3235)
!3246 = !{i64 2155027088, i64 2155027108, i64 2155027171}
!3247 = !DILocation(line: 33, column: 1, scope: !3235)
!3248 = !{i64 2155027380, i64 2155027400, i64 2155027463}
!3249 = !DILocation(line: 35, column: 1, scope: !3235)
!3250 = !{i64 2155027705, i64 2155027725, i64 2155027788}
!3251 = !DILocation(line: 50, column: 1, scope: !3235)
!3252 = !{i64 2155028132, i64 2155028152, i64 2155028215}
!3253 = !DILocation(line: 54, column: 1, scope: !3235)
!3254 = !{i64 2155028571, i64 2155028591, i64 2155028654}
!3255 = !DILocation(line: 61, column: 1, scope: !3235)
!3256 = !{i64 2155028888, i64 2155028908, i64 2155028971}
!3257 = !DILocation(line: 63, column: 1, scope: !3235)
!3258 = !{i64 2155029268, i64 2155029288, i64 2155029351}
!3259 = !DILocation(line: 64, column: 1, scope: !3235)
!3260 = !{i64 2155029790, i64 2155029810, i64 2155029873}
!3261 = !DILocation(line: 65, column: 1, scope: !3235)
!3262 = !{i64 2155030288, i64 2155030308, i64 2155030371}
!3263 = !DILocation(line: 66, column: 1, scope: !3235)
!3264 = !{i64 2155030770, i64 2155030790, i64 2155030853}
!3265 = !DILocation(line: 67, column: 1, scope: !3235)
!3266 = !{i64 2155031277, i64 2155031297, i64 2155031360}
!3267 = !DILocation(line: 68, column: 1, scope: !3235)
!3268 = !{i64 2155031765, i64 2155031785, i64 2155031848}
!3269 = !DILocation(line: 70, column: 1, scope: !3235)
!3270 = !{i64 2155032233, i64 2155032253, i64 2155032316}
!3271 = !DILocation(line: 71, column: 1, scope: !3235)
!3272 = !{i64 2155036736, i64 2155036756, i64 2155036819}
!3273 = !DILocation(line: 72, column: 1, scope: !3235)
!3274 = !{i64 2155037194, i64 2155037214, i64 2155037277}
!3275 = !DILocation(line: 79, column: 1, scope: !3235)
!3276 = !{i64 2155037648, i64 2155037668, i64 2155037731}
!3277 = !DILocation(line: 80, column: 1, scope: !3235)
!3278 = !{i64 2155038159, i64 2155038179, i64 2155038242}
!3279 = !DILocation(line: 82, column: 1, scope: !3235)
!3280 = !{i64 2155038650, i64 2155038670, i64 2155038733}
!3281 = !DILocation(line: 97, column: 1, scope: !3235)
!3282 = !{i64 2155038987, i64 2155039007, i64 2155039070}
!3283 = !DILocation(line: 99, column: 1, scope: !3235)
!3284 = !{i64 2155039205, i64 2155039225, i64 2155039288}
!3285 = !DILocation(line: 102, column: 1, scope: !3235)
!3286 = !{i64 2155039462, i64 2155039482, i64 2155039545}
!3287 = !DILocation(line: 105, column: 1, scope: !3235)
!3288 = !{i64 2155039702, i64 2155039722, i64 2155039785}
!3289 = !DILocation(line: 115, column: 1, scope: !3235)
!3290 = !{i64 2155040041, i64 2155040061, i64 2155040124}
!3291 = !DILocation(line: 118, column: 1, scope: !3235)
!3292 = !{i64 2155040385, i64 2155040405, i64 2155040468}
!3293 = !DILocation(line: 32, column: 1, scope: !3294)
!3294 = !DILexicalBlockFile(scope: !3235, file: !3295, discriminator: 0)
!3295 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3296 = !{i64 2155040741, i64 2155040761, i64 2155040824}
!3297 = !DILocation(line: 33, column: 1, scope: !3294)
!3298 = !{i64 2155041253, i64 2155041273, i64 2155041336}
!3299 = !DILocation(line: 53, column: 1, scope: !3294)
!3300 = !{i64 2155041761, i64 2155041781, i64 2155041844}
!3301 = !DILocation(line: 54, column: 1, scope: !3294)
!3302 = !{i64 2155042179, i64 2155042199, i64 2155042262}
!3303 = !DILocation(line: 55, column: 1, scope: !3294)
!3304 = !{i64 2155042597, i64 2155042617, i64 2155042680}
!3305 = !DILocation(line: 56, column: 1, scope: !3294)
!3306 = !{i64 2155043015, i64 2155043035, i64 2155043098}
!3307 = !DILocation(line: 57, column: 1, scope: !3294)
!3308 = !{i64 2155043433, i64 2155043453, i64 2155043516}
!3309 = !DILocation(line: 58, column: 1, scope: !3294)
!3310 = !{i64 2155043851, i64 2155043871, i64 2155043934}
!3311 = !DILocation(line: 59, column: 1, scope: !3294)
!3312 = !{i64 2155044269, i64 2155044289, i64 2155044352}
!3313 = !DILocation(line: 60, column: 1, scope: !3294)
!3314 = !{i64 2155044693, i64 2155044713, i64 2155044776}
!3315 = !DILocation(line: 61, column: 1, scope: !3294)
!3316 = !{i64 2155045010, i64 2155045030, i64 2155045093}
!3317 = !DILocation(line: 70, column: 1, scope: !3294)
!3318 = !{i64 2155045239, i64 2155045259, i64 2155045322}
!3319 = !DILocation(line: 72, column: 1, scope: !3294)
!3320 = !{i64 2155045571, i64 2155045591, i64 2155045654}
!3321 = !DILocation(line: 73, column: 1, scope: !3294)
!3322 = !{i64 2155046021, i64 2155046041, i64 2155046104}
!3323 = !DILocation(line: 74, column: 1, scope: !3294)
!3324 = !{i64 2155050532, i64 2155050552, i64 2155050615}
!3325 = !DILocation(line: 75, column: 1, scope: !3294)
!3326 = !{i64 2155050982, i64 2155051002, i64 2155051065}
!3327 = !DILocation(line: 76, column: 1, scope: !3294)
!3328 = !{i64 2155051432, i64 2155051452, i64 2155051515}
!3329 = !DILocation(line: 77, column: 1, scope: !3294)
!3330 = !{i64 2155051882, i64 2155051902, i64 2155051965}
!3331 = !DILocation(line: 78, column: 1, scope: !3294)
!3332 = !{i64 2155052332, i64 2155052352, i64 2155052415}
!3333 = !DILocation(line: 79, column: 1, scope: !3294)
!3334 = !{i64 2155052782, i64 2155052802, i64 2155052865}
!3335 = !DILocation(line: 80, column: 1, scope: !3294)
!3336 = !{i64 2155053235, i64 2155053255, i64 2155053318}
!3337 = !DILocation(line: 84, column: 1, scope: !3294)
!3338 = !{i64 2155053567, i64 2155053587, i64 2155053650}
!3339 = !DILocation(line: 91, column: 1, scope: !3294)
!3340 = !{i64 2155053964, i64 2155053984, i64 2155054047}
!3341 = !DILocation(line: 93, column: 1, scope: !3294)
!3342 = !{i64 2155054331, i64 2155054351, i64 2155054414}
!3343 = !DILocation(line: 106, column: 1, scope: !3294)
!3344 = !{i64 2155054601, i64 2155054621, i64 2155054684}
!3345 = !DILocation(line: 11, column: 1, scope: !3346)
!3346 = !DILexicalBlockFile(scope: !3235, file: !3347, discriminator: 0)
!3347 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3348 = distinct !DISubprogram(name: "main", scope: !3349, file: !3349, line: 11, type: !3237, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3350)
!3349 = !DIFile(filename: "zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3350 = !{!3351}
!3351 = !DILocalVariable(name: "c", scope: !3352, file: !3349, line: 18, type: !154)
!3352 = distinct !DILexicalBlock(scope: !3348, file: !3349, line: 17, column: 12)
!3353 = !DILocation(line: 13, column: 2, scope: !3348)
!3354 = !DILocation(line: 15, column: 2, scope: !3348)
!3355 = !DILocation(line: 17, column: 2, scope: !3348)
!3356 = !DILocation(line: 18, column: 15, scope: !3352)
!3357 = !DILocation(line: 20, column: 31, scope: !3352)
!3358 = !DILocation(line: 0, scope: !3352)
!3359 = !DILocation(line: 20, column: 3, scope: !3352)
!3360 = distinct !{!3360, !3355, !3361}
!3361 = !DILocation(line: 21, column: 2, scope: !3348)
!3362 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3363)
!3363 = !{!3364}
!3364 = !DILocalVariable(name: "c", arg: 1, scope: !3362, file: !105, line: 45, type: !103)
!3365 = !DILocation(line: 0, scope: !3362)
!3366 = !DILocation(line: 50, column: 2, scope: !3362)
!3367 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3368, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3370)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{null, !106}
!3370 = !{!3371}
!3371 = !DILocalVariable(name: "fn", arg: 1, scope: !3367, file: !105, line: 63, type: !106)
!3372 = !DILocation(line: 0, scope: !3367)
!3373 = !DILocation(line: 65, column: 12, scope: !3367)
!3374 = !DILocation(line: 66, column: 1, scope: !3367)
!3375 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3376, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !461)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{!102}
!3378 = !DILocation(line: 78, column: 9, scope: !3375)
!3379 = !DILocation(line: 78, column: 2, scope: !3375)
!3380 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3381, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3390)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{null, !144, !3383}
!3383 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3384, line: 99, baseType: !3385)
!3384 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3384, line: 40, baseType: !3386)
!3386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3387)
!3387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3388)
!3388 = !{!3389}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3387, file: !105, line: 79, baseType: !102, size: 32)
!3390 = !{!3391, !3392, !3393}
!3391 = !DILocalVariable(name: "fmt", arg: 1, scope: !3380, file: !105, line: 113, type: !144)
!3392 = !DILocalVariable(name: "ap", arg: 2, scope: !3380, file: !105, line: 113, type: !3383)
!3393 = !DILocalVariable(name: "ctx", scope: !3394, file: !105, line: 121, type: !3396)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !105, line: 120, column: 27)
!3395 = distinct !DILexicalBlock(scope: !3380, file: !105, line: 120, column: 6)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3397)
!3397 = !{!3398, !3399}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3396, file: !105, line: 85, baseType: !32, size: 32)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3396, file: !105, line: 86, baseType: !3400, offset: 32)
!3400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2577)
!3401 = !DILocation(line: 0, scope: !3380)
!3402 = !DILocation(line: 148, column: 3, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3395, file: !105, line: 138, column: 9)
!3404 = !DILocation(line: 155, column: 1, scope: !3380)
!3405 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3406, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3408)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!103, !103, !102}
!3408 = !{!3409, !3410}
!3409 = !DILocalVariable(name: "c", arg: 1, scope: !3405, file: !105, line: 107, type: !103)
!3410 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3405, file: !105, line: 107, type: !102)
!3411 = !DILocation(line: 0, scope: !3405)
!3412 = !DILocation(line: 110, column: 9, scope: !3405)
!3413 = !DILocation(line: 110, column: 2, scope: !3405)
!3414 = distinct !DISubprogram(name: "cbvprintf", scope: !3415, file: !3415, line: 739, type: !3416, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3422)
!3415 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!103, !3418, !102, !144, !3383}
!3418 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3415, line: 297, baseType: !3419)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 32)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!103, null}
!3422 = !{!3423, !3424, !3425, !3426}
!3423 = !DILocalVariable(name: "out", arg: 1, scope: !3414, file: !3415, line: 739, type: !3418)
!3424 = !DILocalVariable(name: "ctx", arg: 2, scope: !3414, file: !3415, line: 739, type: !102)
!3425 = !DILocalVariable(name: "format", arg: 3, scope: !3414, file: !3415, line: 739, type: !144)
!3426 = !DILocalVariable(name: "ap", arg: 4, scope: !3414, file: !3415, line: 739, type: !3383)
!3427 = !DILocation(line: 0, scope: !3414)
!3428 = !DILocation(line: 741, column: 9, scope: !3414)
!3429 = !DILocation(line: 741, column: 2, scope: !3414)
!3430 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3431, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3433)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{null, !1069, !344}
!3433 = !{!3434, !3435, !3436}
!3434 = !DILocalVariable(name: "c", arg: 1, scope: !3430, file: !105, line: 157, type: !1069)
!3435 = !DILocalVariable(name: "n", arg: 2, scope: !3430, file: !105, line: 157, type: !344)
!3436 = !DILocalVariable(name: "i", scope: !3430, file: !105, line: 159, type: !344)
!3437 = !DILocation(line: 0, scope: !3430)
!3438 = !DILocation(line: 164, column: 16, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !105, line: 164, column: 2)
!3440 = distinct !DILexicalBlock(scope: !3430, file: !105, line: 164, column: 2)
!3441 = !DILocation(line: 164, column: 2, scope: !3440)
!3442 = !DILocation(line: 165, column: 3, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3439, file: !105, line: 164, column: 26)
!3444 = !DILocation(line: 165, column: 13, scope: !3443)
!3445 = !DILocation(line: 164, column: 22, scope: !3439)
!3446 = distinct !{!3446, !3441, !3447}
!3447 = !DILocation(line: 166, column: 2, scope: !3440)
!3448 = !DILocation(line: 171, column: 1, scope: !3430)
!3449 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3450, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3452)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{null, !144, null}
!3452 = !{!3453, !3454}
!3453 = !DILocalVariable(name: "fmt", arg: 1, scope: !3449, file: !105, line: 203, type: !144)
!3454 = !DILocalVariable(name: "ap", scope: !3449, file: !105, line: 205, type: !3383)
!3455 = !DILocation(line: 0, scope: !3449)
!3456 = !DILocation(line: 205, column: 2, scope: !3449)
!3457 = !DILocation(line: 205, column: 10, scope: !3449)
!3458 = !DILocation(line: 207, column: 2, scope: !3449)
!3459 = !DILocation(line: 209, column: 2, scope: !3449)
!3460 = !DILocation(line: 211, column: 2, scope: !3449)
!3461 = !DILocation(line: 212, column: 1, scope: !3449)
!3462 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3463, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3465)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!103, !1069, !344, !144, null}
!3465 = !{!3466, !3467, !3468, !3469, !3470}
!3466 = !DILocalVariable(name: "str", arg: 1, scope: !3462, file: !105, line: 239, type: !1069)
!3467 = !DILocalVariable(name: "size", arg: 2, scope: !3462, file: !105, line: 239, type: !344)
!3468 = !DILocalVariable(name: "fmt", arg: 3, scope: !3462, file: !105, line: 239, type: !144)
!3469 = !DILocalVariable(name: "ap", scope: !3462, file: !105, line: 241, type: !3383)
!3470 = !DILocalVariable(name: "ret", scope: !3462, file: !105, line: 242, type: !103)
!3471 = !DILocation(line: 0, scope: !3462)
!3472 = !DILocation(line: 241, column: 2, scope: !3462)
!3473 = !DILocation(line: 241, column: 10, scope: !3462)
!3474 = !DILocation(line: 244, column: 2, scope: !3462)
!3475 = !DILocation(line: 245, column: 8, scope: !3462)
!3476 = !DILocation(line: 246, column: 2, scope: !3462)
!3477 = !DILocation(line: 249, column: 1, scope: !3462)
!3478 = !DILocation(line: 248, column: 2, scope: !3462)
!3479 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3480, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3482)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!103, !1069, !344, !144, !3383}
!3482 = !{!3483, !3484, !3485, !3486, !3487}
!3483 = !DILocalVariable(name: "str", arg: 1, scope: !3479, file: !105, line: 251, type: !1069)
!3484 = !DILocalVariable(name: "size", arg: 2, scope: !3479, file: !105, line: 251, type: !344)
!3485 = !DILocalVariable(name: "fmt", arg: 3, scope: !3479, file: !105, line: 251, type: !144)
!3486 = !DILocalVariable(name: "ap", arg: 4, scope: !3479, file: !105, line: 251, type: !3383)
!3487 = !DILocalVariable(name: "ctx", scope: !3479, file: !105, line: 253, type: !3488)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3489)
!3489 = !{!3490, !3491, !3492}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3488, file: !105, line: 218, baseType: !1069, size: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3488, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3488, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3493 = !DILocation(line: 0, scope: !3479)
!3494 = !DILocation(line: 253, column: 2, scope: !3479)
!3495 = !DILocation(line: 253, column: 21, scope: !3479)
!3496 = !DILocation(line: 253, column: 27, scope: !3479)
!3497 = !DILocation(line: 255, column: 2, scope: !3479)
!3498 = !DILocation(line: 257, column: 10, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3479, file: !105, line: 257, column: 6)
!3500 = !DILocation(line: 257, column: 22, scope: !3499)
!3501 = !DILocation(line: 257, column: 16, scope: !3499)
!3502 = !DILocation(line: 257, column: 6, scope: !3479)
!3503 = !DILocation(line: 258, column: 3, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3499, file: !105, line: 257, column: 27)
!3505 = !DILocation(line: 258, column: 18, scope: !3504)
!3506 = !DILocation(line: 259, column: 2, scope: !3504)
!3507 = !DILocation(line: 262, column: 1, scope: !3479)
!3508 = !DILocation(line: 261, column: 2, scope: !3479)
!3509 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3510, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3513)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!103, !103, !3512}
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 32)
!3513 = !{!3514, !3515}
!3514 = !DILocalVariable(name: "c", arg: 1, scope: !3509, file: !105, line: 223, type: !103)
!3515 = !DILocalVariable(name: "ctx", arg: 2, scope: !3509, file: !105, line: 223, type: !3512)
!3516 = !DILocation(line: 0, scope: !3509)
!3517 = !DILocation(line: 225, column: 11, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3509, file: !105, line: 225, column: 6)
!3519 = !DILocation(line: 225, column: 15, scope: !3518)
!3520 = !DILocation(line: 0, scope: !3518)
!3521 = !DILocation(line: 225, column: 23, scope: !3518)
!3522 = !DILocation(line: 225, column: 45, scope: !3518)
!3523 = !DILocation(line: 225, column: 37, scope: !3518)
!3524 = !DILocation(line: 225, column: 6, scope: !3509)
!3525 = !DILocation(line: 226, column: 8, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3518, file: !105, line: 225, column: 50)
!3527 = !DILocation(line: 226, column: 13, scope: !3526)
!3528 = !DILocation(line: 227, column: 3, scope: !3526)
!3529 = !DILocation(line: 230, column: 29, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3509, file: !105, line: 230, column: 6)
!3531 = !DILocation(line: 230, column: 17, scope: !3530)
!3532 = !DILocation(line: 230, column: 6, scope: !3509)
!3533 = !DILocation(line: 231, column: 22, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3530, file: !105, line: 230, column: 34)
!3535 = !DILocation(line: 231, column: 3, scope: !3534)
!3536 = !DILocation(line: 231, column: 26, scope: !3534)
!3537 = !DILocation(line: 232, column: 2, scope: !3534)
!3538 = !DILocation(line: 233, column: 28, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3530, file: !105, line: 232, column: 9)
!3540 = !DILocation(line: 233, column: 22, scope: !3539)
!3541 = !DILocation(line: 233, column: 3, scope: !3539)
!3542 = !DILocation(line: 233, column: 26, scope: !3539)
!3543 = !DILocation(line: 237, column: 1, scope: !3509)
!3544 = distinct !DISubprogram(name: "z_thread_entry", scope: !3545, file: !3545, line: 30, type: !3546, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !3553)
!3545 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3546 = !DISubroutineType(types: !3547)
!3547 = !{null, !3548, !102, !102, !102}
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3549, line: 46, baseType: !3550)
!3549 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 32)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !102, !102, !102}
!3553 = !{!3554, !3555, !3556, !3557}
!3554 = !DILocalVariable(name: "entry", arg: 1, scope: !3544, file: !3545, line: 30, type: !3548)
!3555 = !DILocalVariable(name: "p1", arg: 2, scope: !3544, file: !3545, line: 31, type: !102)
!3556 = !DILocalVariable(name: "p2", arg: 3, scope: !3544, file: !3545, line: 31, type: !102)
!3557 = !DILocalVariable(name: "p3", arg: 4, scope: !3544, file: !3545, line: 31, type: !102)
!3558 = !DILocation(line: 0, scope: !3544)
!3559 = !DILocation(line: 36, column: 2, scope: !3544)
!3560 = !DILocation(line: 38, column: 17, scope: !3544)
!3561 = !DILocation(line: 38, column: 2, scope: !3544)
!3562 = !DILocation(line: 45, column: 2, scope: !3544)
!3563 = distinct !DISubprogram(name: "k_current_get", scope: !300, file: !300, line: 530, type: !3564, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !461)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{!3566}
!3566 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !3567)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 32)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !3569)
!3569 = !{!3570, !3628, !3640, !3641, !3642, !3643, !3649, !3662}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3568, file: !355, line: 247, baseType: !3571, size: 384)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !3572)
!3572 = !{!3573, !3597, !3604, !3605, !3606, !3615, !3616, !3617}
!3573 = !DIDerivedType(tag: DW_TAG_member, scope: !3571, file: !355, line: 60, baseType: !3574, size: 64)
!3574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3571, file: !355, line: 60, size: 64, elements: !3575)
!3575 = !{!3576, !3591}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3574, file: !355, line: 61, baseType: !3577, size: 64)
!3577 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !3578)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !3579)
!3579 = !{!3580, !3586}
!3580 = !DIDerivedType(tag: DW_TAG_member, scope: !3578, file: !309, line: 38, baseType: !3581, size: 32)
!3581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3578, file: !309, line: 38, size: 32, elements: !3582)
!3582 = !{!3583, !3585}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3581, file: !309, line: 39, baseType: !3584, size: 32)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 32)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3581, file: !309, line: 40, baseType: !3584, size: 32)
!3586 = !DIDerivedType(tag: DW_TAG_member, scope: !3578, file: !309, line: 42, baseType: !3587, size: 32, offset: 32)
!3587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3578, file: !309, line: 42, size: 32, elements: !3588)
!3588 = !{!3589, !3590}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3587, file: !309, line: 43, baseType: !3584, size: 32)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3587, file: !309, line: 44, baseType: !3584, size: 32)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3574, file: !355, line: 62, baseType: !3592, size: 64)
!3592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !3593)
!3593 = !{!3594}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3592, file: !380, line: 50, baseType: !3595, size: 64)
!3595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3596, size: 64, elements: !385)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3571, file: !355, line: 68, baseType: !3598, size: 32, offset: 64)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 32)
!3599 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !3600)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !3601)
!3601 = !{!3602}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3600, file: !304, line: 232, baseType: !3603, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !3578)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3571, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3571, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!3606 = !DIDerivedType(tag: DW_TAG_member, scope: !3571, file: !355, line: 90, baseType: !3607, size: 16, offset: 112)
!3607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3571, file: !355, line: 90, size: 16, elements: !3608)
!3608 = !{!3609, !3614}
!3609 = !DIDerivedType(tag: DW_TAG_member, scope: !3607, file: !355, line: 91, baseType: !3610, size: 16)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3607, file: !355, line: 91, size: 16, elements: !3611)
!3611 = !{!3612, !3613}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3610, file: !355, line: 96, baseType: !403, size: 8)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3610, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3607, file: !355, line: 100, baseType: !328, size: 16)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3571, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3571, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3571, file: !355, line: 131, baseType: !3618, size: 192, offset: 192)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !3619)
!3619 = !{!3620, !3621, !3627}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3618, file: !304, line: 245, baseType: !3577, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3618, file: !304, line: 246, baseType: !3622, size: 32, offset: 64)
!3622 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !3623)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 32)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{null, !3626}
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 32)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3618, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3568, file: !355, line: 250, baseType: !3629, size: 288, offset: 384)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !3630)
!3630 = !{!3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3629, file: !424, line: 26, baseType: !121, size: 32)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3629, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3629, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3629, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3629, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3629, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3629, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3629, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3629, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3568, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3568, file: !355, line: 256, baseType: !3599, size: 64, offset: 704)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3568, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3568, file: !355, line: 300, baseType: !3644, size: 96, offset: 800)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !3645)
!3645 = !{!3646, !3647, !3648}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3644, file: !355, line: 153, baseType: !22, size: 32)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3644, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3644, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3568, file: !355, line: 325, baseType: !3650, size: 32, offset: 896)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 32)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !3652)
!3652 = !{!3653, !3659, !3660}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3651, file: !300, line: 5074, baseType: !3654, size: 96)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !3655)
!3655 = !{!3656, !3657, !3658}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3654, file: !450, line: 57, baseType: !453, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3654, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3654, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3651, file: !300, line: 5075, baseType: !3599, size: 64, offset: 96)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3651, file: !300, line: 5076, baseType: !3661, offset: 160)
!3661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3568, file: !355, line: 343, baseType: !3663, size: 64, offset: 928)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !3664)
!3664 = !{!3665, !3666}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3663, file: !424, line: 63, baseType: !121, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3663, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!3667 = !DILocation(line: 535, column: 9, scope: !3563)
!3668 = !DILocation(line: 535, column: 2, scope: !3563)
!3669 = distinct !DISubprogram(name: "k_thread_abort", scope: !3670, file: !3670, line: 188, type: !3671, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !3673)
!3670 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!3671 = !DISubroutineType(types: !3672)
!3672 = !{null, !3566}
!3673 = !{!3674}
!3674 = !DILocalVariable(name: "thread", arg: 1, scope: !3669, file: !3670, line: 188, type: !3566)
!3675 = !DILocation(line: 0, scope: !3669)
!3676 = !DILocation(line: 197, column: 2, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3669, file: !3670, line: 197, column: 2)
!3678 = !{i64 2154738113}
!3679 = !DILocation(line: 198, column: 2, scope: !3669)
!3680 = !DILocation(line: 199, column: 1, scope: !3669)
!3681 = distinct !DISubprogram(name: "z_current_get", scope: !3670, file: !3670, line: 173, type: !3564, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !461)
!3682 = !DILocation(line: 180, column: 2, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3681, file: !3670, line: 180, column: 2)
!3684 = !{i64 2154738045}
!3685 = !DILocation(line: 181, column: 9, scope: !3681)
!3686 = !DILocation(line: 181, column: 2, scope: !3681)
!3687 = distinct !DISubprogram(name: "sys_heap_free", scope: !3688, file: !3688, line: 163, type: !3689, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3697)
!3688 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3689 = !DISubroutineType(types: !3690)
!3690 = !{null, !3691, !102}
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 32)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !3693)
!3693 = !{!3694, !3695, !3696}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3692, file: !450, line: 57, baseType: !2564, size: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3692, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3692, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!3697 = !{!3698, !3699, !3700, !3701}
!3698 = !DILocalVariable(name: "heap", arg: 1, scope: !3687, file: !3688, line: 163, type: !3691)
!3699 = !DILocalVariable(name: "mem", arg: 2, scope: !3687, file: !3688, line: 163, type: !102)
!3700 = !DILocalVariable(name: "h", scope: !3687, file: !3688, line: 168, type: !2564)
!3701 = !DILocalVariable(name: "c", scope: !3687, file: !3688, line: 169, type: !2569)
!3702 = !DILocation(line: 0, scope: !3687)
!3703 = !DILocation(line: 165, column: 10, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3687, file: !3688, line: 165, column: 6)
!3705 = !DILocation(line: 165, column: 6, scope: !3687)
!3706 = !DILocation(line: 168, column: 27, scope: !3687)
!3707 = !DILocation(line: 169, column: 16, scope: !3687)
!3708 = !{i32 0, i32 536870912}
!3709 = !DILocation(line: 187, column: 2, scope: !3687)
!3710 = !DILocation(line: 197, column: 2, scope: !3687)
!3711 = !DILocation(line: 198, column: 1, scope: !3687)
!3712 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3688, file: !3688, line: 157, type: !3713, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3715)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!2569, !2564, !102}
!3715 = !{!3716, !3717, !3718, !3719}
!3716 = !DILocalVariable(name: "h", arg: 1, scope: !3712, file: !3688, line: 157, type: !2564)
!3717 = !DILocalVariable(name: "p", arg: 2, scope: !3712, file: !3688, line: 157, type: !102)
!3718 = !DILocalVariable(name: "mem", scope: !3712, file: !3688, line: 159, type: !261)
!3719 = !DILocalVariable(name: "base", scope: !3712, file: !3688, line: 159, type: !261)
!3720 = !DILocation(line: 0, scope: !3712)
!3721 = !DILocation(line: 159, column: 39, scope: !3712)
!3722 = !DILocation(line: 160, column: 14, scope: !3712)
!3723 = !DILocation(line: 160, column: 38, scope: !3712)
!3724 = !DILocation(line: 160, column: 46, scope: !3712)
!3725 = !DILocation(line: 160, column: 2, scope: !3712)
!3726 = distinct !DISubprogram(name: "set_chunk_used", scope: !2551, file: !2551, line: 147, type: !3727, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3729)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{null, !2564, !2569, !157}
!3729 = !{!3730, !3731, !3732, !3733, !3734}
!3730 = !DILocalVariable(name: "h", arg: 1, scope: !3726, file: !2551, line: 147, type: !2564)
!3731 = !DILocalVariable(name: "c", arg: 2, scope: !3726, file: !2551, line: 147, type: !2569)
!3732 = !DILocalVariable(name: "used", arg: 3, scope: !3726, file: !2551, line: 147, type: !157)
!3733 = !DILocalVariable(name: "buf", scope: !3726, file: !2551, line: 149, type: !2558)
!3734 = !DILocalVariable(name: "cmem", scope: !3726, file: !2551, line: 150, type: !102)
!3735 = !DILocation(line: 0, scope: !3726)
!3736 = !DILocation(line: 149, column: 22, scope: !3726)
!3737 = !DILocation(line: 0, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !2551, line: 159, column: 7)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !2551, line: 158, column: 9)
!3740 = distinct !DILexicalBlock(scope: !3726, file: !2551, line: 152, column: 6)
!3741 = !DILocation(line: 159, column: 7, scope: !3739)
!3742 = !DILocation(line: 165, column: 1, scope: !3726)
!3743 = distinct !DISubprogram(name: "free_chunk", scope: !3688, file: !3688, line: 133, type: !3744, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3746)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{null, !2564, !2569}
!3746 = !{!3747, !3748}
!3747 = !DILocalVariable(name: "h", arg: 1, scope: !3743, file: !3688, line: 133, type: !2564)
!3748 = !DILocalVariable(name: "c", arg: 2, scope: !3743, file: !3688, line: 133, type: !2569)
!3749 = !DILocation(line: 0, scope: !3743)
!3750 = !DILocation(line: 136, column: 21, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3743, file: !3688, line: 136, column: 6)
!3752 = !DILocation(line: 136, column: 7, scope: !3751)
!3753 = !DILocation(line: 136, column: 6, scope: !3743)
!3754 = !DILocation(line: 137, column: 3, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3751, file: !3688, line: 136, column: 41)
!3756 = !DILocation(line: 138, column: 22, scope: !3755)
!3757 = !DILocation(line: 138, column: 3, scope: !3755)
!3758 = !DILocation(line: 139, column: 2, scope: !3755)
!3759 = !DILocation(line: 142, column: 21, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3743, file: !3688, line: 142, column: 6)
!3761 = !{i32 -65535, i32 536903678}
!3762 = !DILocation(line: 142, column: 7, scope: !3760)
!3763 = !DILocation(line: 142, column: 6, scope: !3743)
!3764 = !DILocation(line: 143, column: 3, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3760, file: !3688, line: 142, column: 40)
!3766 = !DILocation(line: 144, column: 19, scope: !3765)
!3767 = !DILocation(line: 144, column: 3, scope: !3765)
!3768 = !DILocation(line: 145, column: 7, scope: !3765)
!3769 = !DILocation(line: 146, column: 2, scope: !3765)
!3770 = !DILocation(line: 148, column: 2, scope: !3743)
!3771 = !DILocation(line: 149, column: 1, scope: !3743)
!3772 = distinct !DISubprogram(name: "right_chunk", scope: !2551, file: !2551, line: 204, type: !3773, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3775)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!2569, !2564, !2569}
!3775 = !{!3776, !3777}
!3776 = !DILocalVariable(name: "h", arg: 1, scope: !3772, file: !2551, line: 204, type: !2564)
!3777 = !DILocalVariable(name: "c", arg: 2, scope: !3772, file: !2551, line: 204, type: !2569)
!3778 = !DILocation(line: 0, scope: !3772)
!3779 = !DILocation(line: 206, column: 13, scope: !3772)
!3780 = !DILocation(line: 206, column: 11, scope: !3772)
!3781 = !DILocation(line: 206, column: 2, scope: !3772)
!3782 = distinct !DISubprogram(name: "chunk_used", scope: !2551, file: !2551, line: 137, type: !3783, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3785)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{!157, !2564, !2569}
!3785 = !{!3786, !3787}
!3786 = !DILocalVariable(name: "h", arg: 1, scope: !3782, file: !2551, line: 137, type: !2564)
!3787 = !DILocalVariable(name: "c", arg: 2, scope: !3782, file: !2551, line: 137, type: !2569)
!3788 = !DILocation(line: 0, scope: !3782)
!3789 = !DILocation(line: 139, column: 9, scope: !3782)
!3790 = !DILocation(line: 139, column: 42, scope: !3782)
!3791 = !DILocation(line: 139, column: 2, scope: !3782)
!3792 = distinct !DISubprogram(name: "free_list_remove", scope: !3688, file: !3688, line: 60, type: !3744, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3793)
!3793 = !{!3794, !3795, !3796}
!3794 = !DILocalVariable(name: "h", arg: 1, scope: !3792, file: !3688, line: 60, type: !2564)
!3795 = !DILocalVariable(name: "c", arg: 2, scope: !3792, file: !3688, line: 60, type: !2569)
!3796 = !DILocalVariable(name: "bidx", scope: !3797, file: !3688, line: 63, type: !103)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3688, line: 62, column: 31)
!3798 = distinct !DILexicalBlock(scope: !3792, file: !3688, line: 62, column: 6)
!3799 = !DILocation(line: 0, scope: !3792)
!3800 = !DILocation(line: 63, column: 28, scope: !3797)
!3801 = !{i32 0, i32 32768}
!3802 = !DILocation(line: 63, column: 14, scope: !3797)
!3803 = !DILocation(line: 0, scope: !3797)
!3804 = !DILocation(line: 64, column: 3, scope: !3797)
!3805 = !DILocation(line: 66, column: 1, scope: !3792)
!3806 = distinct !DISubprogram(name: "merge_chunks", scope: !3688, file: !3688, line: 125, type: !3807, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3809)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{null, !2564, !2569, !2569}
!3809 = !{!3810, !3811, !3812, !3813}
!3810 = !DILocalVariable(name: "h", arg: 1, scope: !3806, file: !3688, line: 125, type: !2564)
!3811 = !DILocalVariable(name: "lc", arg: 2, scope: !3806, file: !3688, line: 125, type: !2569)
!3812 = !DILocalVariable(name: "rc", arg: 3, scope: !3806, file: !3688, line: 125, type: !2569)
!3813 = !DILocalVariable(name: "newsz", scope: !3806, file: !3688, line: 127, type: !3814)
!3814 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2551, line: 62, baseType: !121)
!3815 = !DILocation(line: 0, scope: !3806)
!3816 = !DILocation(line: 127, column: 20, scope: !3806)
!3817 = !DILocation(line: 127, column: 40, scope: !3806)
!3818 = !DILocation(line: 127, column: 38, scope: !3806)
!3819 = !DILocation(line: 129, column: 2, scope: !3806)
!3820 = !DILocation(line: 130, column: 25, scope: !3806)
!3821 = !DILocation(line: 130, column: 2, scope: !3806)
!3822 = !DILocation(line: 131, column: 1, scope: !3806)
!3823 = distinct !DISubprogram(name: "left_chunk", scope: !2551, file: !2551, line: 199, type: !3773, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3824)
!3824 = !{!3825, !3826}
!3825 = !DILocalVariable(name: "h", arg: 1, scope: !3823, file: !2551, line: 199, type: !2564)
!3826 = !DILocalVariable(name: "c", arg: 2, scope: !3823, file: !2551, line: 199, type: !2569)
!3827 = !DILocation(line: 0, scope: !3823)
!3828 = !DILocation(line: 201, column: 13, scope: !3823)
!3829 = !DILocation(line: 201, column: 11, scope: !3823)
!3830 = !DILocation(line: 201, column: 2, scope: !3823)
!3831 = distinct !DISubprogram(name: "free_list_add", scope: !3688, file: !3688, line: 98, type: !3744, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3832)
!3832 = !{!3833, !3834, !3835}
!3833 = !DILocalVariable(name: "h", arg: 1, scope: !3831, file: !3688, line: 98, type: !2564)
!3834 = !DILocalVariable(name: "c", arg: 2, scope: !3831, file: !3688, line: 98, type: !2569)
!3835 = !DILocalVariable(name: "bidx", scope: !3836, file: !3688, line: 101, type: !103)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !3688, line: 100, column: 31)
!3837 = distinct !DILexicalBlock(scope: !3831, file: !3688, line: 100, column: 6)
!3838 = !DILocation(line: 0, scope: !3831)
!3839 = !DILocation(line: 101, column: 28, scope: !3836)
!3840 = !DILocation(line: 101, column: 14, scope: !3836)
!3841 = !DILocation(line: 0, scope: !3836)
!3842 = !DILocation(line: 102, column: 3, scope: !3836)
!3843 = !DILocation(line: 104, column: 1, scope: !3831)
!3844 = distinct !DISubprogram(name: "chunk_size", scope: !2551, file: !2551, line: 142, type: !3845, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3847)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!3814, !2564, !2569}
!3847 = !{!3848, !3849}
!3848 = !DILocalVariable(name: "h", arg: 1, scope: !3844, file: !2551, line: 142, type: !2564)
!3849 = !DILocalVariable(name: "c", arg: 2, scope: !3844, file: !2551, line: 142, type: !2569)
!3850 = !DILocation(line: 0, scope: !3844)
!3851 = !DILocation(line: 144, column: 9, scope: !3844)
!3852 = !DILocation(line: 144, column: 42, scope: !3844)
!3853 = !DILocation(line: 144, column: 2, scope: !3844)
!3854 = distinct !DISubprogram(name: "bucket_idx", scope: !2551, file: !2551, line: 250, type: !3855, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3857)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!103, !2564, !3814}
!3857 = !{!3858, !3859, !3860}
!3858 = !DILocalVariable(name: "h", arg: 1, scope: !3854, file: !2551, line: 250, type: !2564)
!3859 = !DILocalVariable(name: "sz", arg: 2, scope: !3854, file: !2551, line: 250, type: !3814)
!3860 = !DILocalVariable(name: "usable_sz", scope: !3854, file: !2551, line: 252, type: !32)
!3861 = !DILocation(line: 0, scope: !3854)
!3862 = !DILocation(line: 252, column: 32, scope: !3854)
!3863 = !DILocation(line: 252, column: 30, scope: !3854)
!3864 = !DILocation(line: 252, column: 50, scope: !3854)
!3865 = !DILocation(line: 253, column: 14, scope: !3854)
!3866 = !{i32 0, i32 33}
!3867 = !DILocation(line: 253, column: 12, scope: !3854)
!3868 = !DILocation(line: 253, column: 2, scope: !3854)
!3869 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3688, file: !3688, line: 68, type: !3870, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3872)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{null, !2564, !2569, !103}
!3872 = !{!3873, !3874, !3875, !3876, !3878, !3881}
!3873 = !DILocalVariable(name: "h", arg: 1, scope: !3869, file: !3688, line: 68, type: !2564)
!3874 = !DILocalVariable(name: "c", arg: 2, scope: !3869, file: !3688, line: 68, type: !2569)
!3875 = !DILocalVariable(name: "bidx", arg: 3, scope: !3869, file: !3688, line: 68, type: !103)
!3876 = !DILocalVariable(name: "b", scope: !3869, file: !3688, line: 70, type: !3877)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 32)
!3878 = !DILocalVariable(name: "second", scope: !3879, file: !3688, line: 84, type: !2569)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !3688, line: 80, column: 9)
!3880 = distinct !DILexicalBlock(scope: !3869, file: !3688, line: 72, column: 6)
!3881 = !DILocalVariable(name: "first", scope: !3879, file: !3688, line: 85, type: !2569)
!3882 = !DILocation(line: 0, scope: !3869)
!3883 = !DILocation(line: 72, column: 9, scope: !3880)
!3884 = !DILocation(line: 72, column: 14, scope: !3880)
!3885 = !DILocation(line: 72, column: 6, scope: !3869)
!3886 = !DILocation(line: 76, column: 23, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3880, file: !3688, line: 72, column: 21)
!3888 = !DILocation(line: 76, column: 6, scope: !3887)
!3889 = !DILocation(line: 76, column: 20, scope: !3887)
!3890 = !DILocation(line: 77, column: 11, scope: !3887)
!3891 = !DILocation(line: 78, column: 3, scope: !3887)
!3892 = !DILocation(line: 79, column: 3, scope: !3887)
!3893 = !DILocation(line: 80, column: 2, scope: !3887)
!3894 = !DILocation(line: 0, scope: !3879)
!3895 = !DILocation(line: 85, column: 21, scope: !3879)
!3896 = !{i32 0, i32 65536}
!3897 = !DILocation(line: 87, column: 3, scope: !3879)
!3898 = !DILocation(line: 88, column: 3, scope: !3879)
!3899 = !DILocation(line: 89, column: 3, scope: !3879)
!3900 = !DILocation(line: 90, column: 3, scope: !3879)
!3901 = !DILocation(line: 96, column: 1, scope: !3869)
!3902 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2551, file: !2551, line: 187, type: !3807, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3903)
!3903 = !{!3904, !3905, !3906}
!3904 = !DILocalVariable(name: "h", arg: 1, scope: !3902, file: !2551, line: 187, type: !2564)
!3905 = !DILocalVariable(name: "c", arg: 2, scope: !3902, file: !2551, line: 187, type: !2569)
!3906 = !DILocalVariable(name: "prev", arg: 3, scope: !3902, file: !2551, line: 188, type: !2569)
!3907 = !DILocation(line: 0, scope: !3902)
!3908 = !DILocation(line: 190, column: 2, scope: !3902)
!3909 = !DILocation(line: 191, column: 1, scope: !3902)
!3910 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2551, file: !2551, line: 193, type: !3807, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3911)
!3911 = !{!3912, !3913, !3914}
!3912 = !DILocalVariable(name: "h", arg: 1, scope: !3910, file: !2551, line: 193, type: !2564)
!3913 = !DILocalVariable(name: "c", arg: 2, scope: !3910, file: !2551, line: 193, type: !2569)
!3914 = !DILocalVariable(name: "next", arg: 3, scope: !3910, file: !2551, line: 194, type: !2569)
!3915 = !DILocation(line: 0, scope: !3910)
!3916 = !DILocation(line: 196, column: 2, scope: !3910)
!3917 = !DILocation(line: 197, column: 1, scope: !3910)
!3918 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2551, file: !2551, line: 177, type: !3773, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3919)
!3919 = !{!3920, !3921}
!3920 = !DILocalVariable(name: "h", arg: 1, scope: !3918, file: !2551, line: 177, type: !2564)
!3921 = !DILocalVariable(name: "c", arg: 2, scope: !3918, file: !2551, line: 177, type: !2569)
!3922 = !DILocation(line: 0, scope: !3918)
!3923 = !DILocation(line: 179, column: 9, scope: !3918)
!3924 = !DILocation(line: 179, column: 2, scope: !3918)
!3925 = distinct !DISubprogram(name: "chunk_field", scope: !2551, file: !2551, line: 107, type: !3926, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3928)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!2569, !2564, !2569, !2550}
!3928 = !{!3929, !3930, !3931, !3932, !3933}
!3929 = !DILocalVariable(name: "h", arg: 1, scope: !3925, file: !2551, line: 107, type: !2564)
!3930 = !DILocalVariable(name: "c", arg: 2, scope: !3925, file: !2551, line: 107, type: !2569)
!3931 = !DILocalVariable(name: "f", arg: 3, scope: !3925, file: !2551, line: 108, type: !2550)
!3932 = !DILocalVariable(name: "buf", scope: !3925, file: !2551, line: 110, type: !2558)
!3933 = !DILocalVariable(name: "cmem", scope: !3925, file: !2551, line: 111, type: !102)
!3934 = !DILocation(line: 0, scope: !3925)
!3935 = !DILocation(line: 110, column: 22, scope: !3925)
!3936 = !DILocation(line: 111, column: 15, scope: !3925)
!3937 = !DILocation(line: 116, column: 11, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !2551, line: 115, column: 9)
!3939 = distinct !DILexicalBlock(scope: !3925, file: !2551, line: 113, column: 6)
!3940 = !DILocation(line: 116, column: 10, scope: !3938)
!3941 = !DILocation(line: 118, column: 1, scope: !3925)
!3942 = distinct !DISubprogram(name: "chunk_buf", scope: !2551, file: !2551, line: 101, type: !3943, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3945)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!2558, !2564}
!3945 = !{!3946}
!3946 = !DILocalVariable(name: "h", arg: 1, scope: !3942, file: !2551, line: 101, type: !2564)
!3947 = !DILocation(line: 0, scope: !3942)
!3948 = !DILocation(line: 104, column: 9, scope: !3942)
!3949 = !DILocation(line: 104, column: 2, scope: !3942)
!3950 = distinct !DISubprogram(name: "chunk_set", scope: !2551, file: !2551, line: 120, type: !3951, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3953)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{null, !2564, !2569, !2550, !2569}
!3953 = !{!3954, !3955, !3956, !3957, !3958, !3959}
!3954 = !DILocalVariable(name: "h", arg: 1, scope: !3950, file: !2551, line: 120, type: !2564)
!3955 = !DILocalVariable(name: "c", arg: 2, scope: !3950, file: !2551, line: 120, type: !2569)
!3956 = !DILocalVariable(name: "f", arg: 3, scope: !3950, file: !2551, line: 121, type: !2550)
!3957 = !DILocalVariable(name: "val", arg: 4, scope: !3950, file: !2551, line: 121, type: !2569)
!3958 = !DILocalVariable(name: "buf", scope: !3950, file: !2551, line: 125, type: !2558)
!3959 = !DILocalVariable(name: "cmem", scope: !3950, file: !2551, line: 126, type: !102)
!3960 = !DILocation(line: 0, scope: !3950)
!3961 = !DILocation(line: 125, column: 22, scope: !3950)
!3962 = !DILocation(line: 126, column: 15, scope: !3950)
!3963 = !DILocation(line: 133, column: 27, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !2551, line: 131, column: 9)
!3965 = distinct !DILexicalBlock(scope: !3950, file: !2551, line: 128, column: 6)
!3966 = !DILocation(line: 133, column: 4, scope: !3964)
!3967 = !DILocation(line: 133, column: 3, scope: !3964)
!3968 = !DILocation(line: 133, column: 25, scope: !3964)
!3969 = !DILocation(line: 135, column: 1, scope: !3950)
!3970 = distinct !DISubprogram(name: "min_chunk_size", scope: !2551, file: !2551, line: 240, type: !3971, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3973)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!3814, !2564}
!3973 = !{!3974}
!3974 = !DILocalVariable(name: "h", arg: 1, scope: !3970, file: !2551, line: 240, type: !2564)
!3975 = !DILocation(line: 0, scope: !3970)
!3976 = !DILocation(line: 242, column: 9, scope: !3970)
!3977 = !DILocation(line: 242, column: 2, scope: !3970)
!3978 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2551, file: !2551, line: 235, type: !3979, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3981)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!3814, !2564, !344}
!3981 = !{!3982, !3983}
!3982 = !DILocalVariable(name: "h", arg: 1, scope: !3978, file: !2551, line: 235, type: !2564)
!3983 = !DILocalVariable(name: "bytes", arg: 2, scope: !3978, file: !2551, line: 235, type: !344)
!3984 = !DILocation(line: 0, scope: !3978)
!3985 = !DILocation(line: 237, column: 39, scope: !3978)
!3986 = !DILocation(line: 237, column: 9, scope: !3978)
!3987 = !DILocation(line: 237, column: 2, scope: !3978)
!3988 = distinct !DISubprogram(name: "chunksz", scope: !2551, file: !2551, line: 230, type: !3989, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3991)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!3814, !344}
!3991 = !{!3992}
!3992 = !DILocalVariable(name: "bytes", arg: 1, scope: !3988, file: !2551, line: 230, type: !344)
!3993 = !DILocation(line: 0, scope: !3988)
!3994 = !DILocation(line: 232, column: 29, scope: !3988)
!3995 = !DILocation(line: 232, column: 35, scope: !3988)
!3996 = !DILocation(line: 232, column: 2, scope: !3988)
!3997 = distinct !DISubprogram(name: "set_chunk_size", scope: !2551, file: !2551, line: 172, type: !3998, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4000)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{null, !2564, !2569, !3814}
!4000 = !{!4001, !4002, !4003}
!4001 = !DILocalVariable(name: "h", arg: 1, scope: !3997, file: !2551, line: 172, type: !2564)
!4002 = !DILocalVariable(name: "c", arg: 2, scope: !3997, file: !2551, line: 172, type: !2569)
!4003 = !DILocalVariable(name: "size", arg: 3, scope: !3997, file: !2551, line: 172, type: !3814)
!4004 = !DILocation(line: 0, scope: !3997)
!4005 = !DILocation(line: 174, column: 38, scope: !3997)
!4006 = !DILocation(line: 174, column: 2, scope: !3997)
!4007 = !DILocation(line: 175, column: 1, scope: !3997)
!4008 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2551, file: !2551, line: 209, type: !3998, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4009)
!4009 = !{!4010, !4011, !4012}
!4010 = !DILocalVariable(name: "h", arg: 1, scope: !4008, file: !2551, line: 209, type: !2564)
!4011 = !DILocalVariable(name: "c", arg: 2, scope: !4008, file: !2551, line: 209, type: !2569)
!4012 = !DILocalVariable(name: "size", arg: 3, scope: !4008, file: !2551, line: 210, type: !3814)
!4013 = !DILocation(line: 0, scope: !4008)
!4014 = !DILocation(line: 212, column: 2, scope: !4008)
!4015 = !DILocation(line: 213, column: 1, scope: !4008)
!4016 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3688, file: !3688, line: 34, type: !3870, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4017)
!4017 = !{!4018, !4019, !4020, !4021, !4022, !4025}
!4018 = !DILocalVariable(name: "h", arg: 1, scope: !4016, file: !3688, line: 34, type: !2564)
!4019 = !DILocalVariable(name: "c", arg: 2, scope: !4016, file: !3688, line: 34, type: !2569)
!4020 = !DILocalVariable(name: "bidx", arg: 3, scope: !4016, file: !3688, line: 34, type: !103)
!4021 = !DILocalVariable(name: "b", scope: !4016, file: !3688, line: 36, type: !3877)
!4022 = !DILocalVariable(name: "first", scope: !4023, file: !3688, line: 47, type: !2569)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !3688, line: 46, column: 9)
!4024 = distinct !DILexicalBlock(scope: !4016, file: !3688, line: 42, column: 6)
!4025 = !DILocalVariable(name: "second", scope: !4023, file: !3688, line: 48, type: !2569)
!4026 = !DILocation(line: 0, scope: !4016)
!4027 = !DILocation(line: 36, column: 29, scope: !4016)
!4028 = !DILocation(line: 42, column: 6, scope: !4024)
!4029 = !DILocation(line: 42, column: 28, scope: !4024)
!4030 = !DILocation(line: 42, column: 6, scope: !4016)
!4031 = !DILocation(line: 44, column: 24, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4024, file: !3688, line: 42, column: 34)
!4033 = !DILocation(line: 44, column: 23, scope: !4032)
!4034 = !DILocation(line: 44, column: 6, scope: !4032)
!4035 = !DILocation(line: 44, column: 20, scope: !4032)
!4036 = !DILocation(line: 45, column: 6, scope: !4032)
!4037 = !DILocation(line: 45, column: 11, scope: !4032)
!4038 = !DILocation(line: 46, column: 2, scope: !4032)
!4039 = !DILocation(line: 47, column: 21, scope: !4023)
!4040 = !DILocation(line: 0, scope: !4023)
!4041 = !DILocation(line: 50, column: 6, scope: !4023)
!4042 = !DILocation(line: 50, column: 11, scope: !4023)
!4043 = !DILocation(line: 51, column: 3, scope: !4023)
!4044 = !DILocation(line: 52, column: 3, scope: !4023)
!4045 = !DILocation(line: 58, column: 1, scope: !4016)
!4046 = distinct !DISubprogram(name: "next_free_chunk", scope: !2551, file: !2551, line: 182, type: !3773, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4047)
!4047 = !{!4048, !4049}
!4048 = !DILocalVariable(name: "h", arg: 1, scope: !4046, file: !2551, line: 182, type: !2564)
!4049 = !DILocalVariable(name: "c", arg: 2, scope: !4046, file: !2551, line: 182, type: !2569)
!4050 = !DILocation(line: 0, scope: !4046)
!4051 = !DILocation(line: 184, column: 9, scope: !4046)
!4052 = !DILocation(line: 184, column: 2, scope: !4046)
!4053 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3688, file: !3688, line: 200, type: !4054, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4056)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!344, !3691, !102}
!4056 = !{!4057, !4058, !4059, !4060, !4061, !4062, !4063}
!4057 = !DILocalVariable(name: "heap", arg: 1, scope: !4053, file: !3688, line: 200, type: !3691)
!4058 = !DILocalVariable(name: "mem", arg: 2, scope: !4053, file: !3688, line: 200, type: !102)
!4059 = !DILocalVariable(name: "h", scope: !4053, file: !3688, line: 202, type: !2564)
!4060 = !DILocalVariable(name: "c", scope: !4053, file: !3688, line: 203, type: !2569)
!4061 = !DILocalVariable(name: "addr", scope: !4053, file: !3688, line: 204, type: !344)
!4062 = !DILocalVariable(name: "chunk_base", scope: !4053, file: !3688, line: 205, type: !344)
!4063 = !DILocalVariable(name: "chunk_sz", scope: !4053, file: !3688, line: 206, type: !344)
!4064 = !DILocation(line: 0, scope: !4053)
!4065 = !DILocation(line: 202, column: 27, scope: !4053)
!4066 = !DILocation(line: 203, column: 16, scope: !4053)
!4067 = !DILocation(line: 204, column: 16, scope: !4053)
!4068 = !DILocation(line: 205, column: 31, scope: !4053)
!4069 = !DILocation(line: 205, column: 22, scope: !4053)
!4070 = !DILocation(line: 206, column: 20, scope: !4053)
!4071 = !DILocation(line: 206, column: 37, scope: !4053)
!4072 = !DILocation(line: 208, column: 26, scope: !4053)
!4073 = !DILocation(line: 208, column: 18, scope: !4053)
!4074 = !DILocation(line: 208, column: 2, scope: !4053)
!4075 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3688, file: !3688, line: 263, type: !4076, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4078)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{!102, !3691, !344}
!4078 = !{!4079, !4080, !4081, !4082, !4083, !4084}
!4079 = !DILocalVariable(name: "heap", arg: 1, scope: !4075, file: !3688, line: 263, type: !3691)
!4080 = !DILocalVariable(name: "bytes", arg: 2, scope: !4075, file: !3688, line: 263, type: !344)
!4081 = !DILocalVariable(name: "h", scope: !4075, file: !3688, line: 265, type: !2564)
!4082 = !DILocalVariable(name: "mem", scope: !4075, file: !3688, line: 266, type: !102)
!4083 = !DILocalVariable(name: "chunk_sz", scope: !4075, file: !3688, line: 272, type: !3814)
!4084 = !DILocalVariable(name: "c", scope: !4075, file: !3688, line: 273, type: !2569)
!4085 = !DILocation(line: 0, scope: !4075)
!4086 = !DILocation(line: 265, column: 27, scope: !4075)
!4087 = !DILocation(line: 268, column: 12, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4075, file: !3688, line: 268, column: 6)
!4089 = !DILocation(line: 268, column: 18, scope: !4088)
!4090 = !DILocation(line: 268, column: 21, scope: !4088)
!4091 = !DILocation(line: 268, column: 6, scope: !4075)
!4092 = !DILocation(line: 272, column: 23, scope: !4075)
!4093 = !DILocation(line: 273, column: 16, scope: !4075)
!4094 = !DILocation(line: 274, column: 8, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4075, file: !3688, line: 274, column: 6)
!4096 = !DILocation(line: 274, column: 6, scope: !4075)
!4097 = !DILocation(line: 279, column: 6, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4075, file: !3688, line: 279, column: 6)
!4099 = !DILocation(line: 279, column: 23, scope: !4098)
!4100 = !DILocation(line: 279, column: 6, scope: !4075)
!4101 = !DILocation(line: 280, column: 24, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4098, file: !3688, line: 279, column: 35)
!4103 = !DILocation(line: 280, column: 3, scope: !4102)
!4104 = !DILocation(line: 281, column: 3, scope: !4102)
!4105 = !DILocation(line: 282, column: 2, scope: !4102)
!4106 = !DILocation(line: 284, column: 2, scope: !4075)
!4107 = !DILocation(line: 286, column: 8, scope: !4075)
!4108 = !DILocation(line: 298, column: 2, scope: !4075)
!4109 = !DILocation(line: 299, column: 1, scope: !4075)
!4110 = distinct !DISubprogram(name: "size_too_big", scope: !2551, file: !2551, line: 256, type: !4111, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4113)
!4111 = !DISubroutineType(types: !4112)
!4112 = !{!157, !2564, !344}
!4113 = !{!4114, !4115}
!4114 = !DILocalVariable(name: "h", arg: 1, scope: !4110, file: !2551, line: 256, type: !2564)
!4115 = !DILocalVariable(name: "bytes", arg: 2, scope: !4110, file: !2551, line: 256, type: !344)
!4116 = !DILocation(line: 0, scope: !4110)
!4117 = !DILocation(line: 262, column: 16, scope: !4110)
!4118 = !DILocation(line: 262, column: 36, scope: !4110)
!4119 = !DILocation(line: 262, column: 30, scope: !4110)
!4120 = !DILocation(line: 262, column: 2, scope: !4110)
!4121 = distinct !DISubprogram(name: "alloc_chunk", scope: !3688, file: !3688, line: 211, type: !4122, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4124)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!2569, !2564, !3814}
!4124 = !{!4125, !4126, !4127, !4128, !4129, !4132, !4133, !4135, !4136, !4139}
!4125 = !DILocalVariable(name: "h", arg: 1, scope: !4121, file: !3688, line: 211, type: !2564)
!4126 = !DILocalVariable(name: "sz", arg: 2, scope: !4121, file: !3688, line: 211, type: !3814)
!4127 = !DILocalVariable(name: "bi", scope: !4121, file: !3688, line: 213, type: !103)
!4128 = !DILocalVariable(name: "b", scope: !4121, file: !3688, line: 214, type: !3877)
!4129 = !DILocalVariable(name: "first", scope: !4130, file: !3688, line: 233, type: !2569)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !3688, line: 232, column: 15)
!4131 = distinct !DILexicalBlock(scope: !4121, file: !3688, line: 232, column: 6)
!4132 = !DILocalVariable(name: "i", scope: !4130, file: !3688, line: 234, type: !103)
!4133 = !DILocalVariable(name: "c", scope: !4134, file: !3688, line: 236, type: !2569)
!4134 = distinct !DILexicalBlock(scope: !4130, file: !3688, line: 235, column: 6)
!4135 = !DILocalVariable(name: "bmask", scope: !4121, file: !3688, line: 249, type: !121)
!4136 = !DILocalVariable(name: "minbucket", scope: !4137, file: !3688, line: 252, type: !103)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !3688, line: 251, column: 19)
!4138 = distinct !DILexicalBlock(scope: !4121, file: !3688, line: 251, column: 6)
!4139 = !DILocalVariable(name: "c", scope: !4137, file: !3688, line: 253, type: !2569)
!4140 = !DILocation(line: 0, scope: !4121)
!4141 = !DILocation(line: 213, column: 11, scope: !4121)
!4142 = !DILocation(line: 232, column: 9, scope: !4131)
!4143 = !DILocation(line: 232, column: 6, scope: !4131)
!4144 = !DILocation(line: 232, column: 6, scope: !4121)
!4145 = !DILocation(line: 236, column: 21, scope: !4134)
!4146 = !DILocation(line: 0, scope: !4130)
!4147 = !DILocation(line: 0, scope: !4134)
!4148 = !DILocation(line: 237, column: 8, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4134, file: !3688, line: 237, column: 8)
!4150 = !DILocation(line: 237, column: 25, scope: !4149)
!4151 = !DILocation(line: 237, column: 8, scope: !4134)
!4152 = !DILocation(line: 238, column: 5, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4149, file: !3688, line: 237, column: 32)
!4154 = !DILocation(line: 241, column: 14, scope: !4134)
!4155 = !DILocation(line: 241, column: 12, scope: !4134)
!4156 = !DILocation(line: 243, column: 12, scope: !4130)
!4157 = !DILocation(line: 243, column: 16, scope: !4130)
!4158 = distinct !{!4158, !4159, !4160}
!4159 = !DILocation(line: 235, column: 3, scope: !4130)
!4160 = !DILocation(line: 243, column: 35, scope: !4130)
!4161 = !DILocation(line: 249, column: 22, scope: !4121)
!4162 = !DILocation(line: 249, column: 39, scope: !4121)
!4163 = !DILocation(line: 249, column: 36, scope: !4121)
!4164 = !DILocation(line: 251, column: 12, scope: !4138)
!4165 = !DILocation(line: 251, column: 6, scope: !4121)
!4166 = !DILocation(line: 252, column: 19, scope: !4137)
!4167 = !DILocation(line: 0, scope: !4137)
!4168 = !DILocation(line: 253, column: 39, scope: !4137)
!4169 = !DILocation(line: 255, column: 3, scope: !4137)
!4170 = !DILocation(line: 261, column: 1, scope: !4121)
!4171 = distinct !DISubprogram(name: "split_chunks", scope: !3688, file: !3688, line: 109, type: !3807, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4172)
!4172 = !{!4173, !4174, !4175, !4176, !4177, !4178}
!4173 = !DILocalVariable(name: "h", arg: 1, scope: !4171, file: !3688, line: 109, type: !2564)
!4174 = !DILocalVariable(name: "lc", arg: 2, scope: !4171, file: !3688, line: 109, type: !2569)
!4175 = !DILocalVariable(name: "rc", arg: 3, scope: !4171, file: !3688, line: 109, type: !2569)
!4176 = !DILocalVariable(name: "sz0", scope: !4171, file: !3688, line: 114, type: !3814)
!4177 = !DILocalVariable(name: "lsz", scope: !4171, file: !3688, line: 115, type: !3814)
!4178 = !DILocalVariable(name: "rsz", scope: !4171, file: !3688, line: 116, type: !3814)
!4179 = !DILocation(line: 0, scope: !4171)
!4180 = !DILocation(line: 114, column: 18, scope: !4171)
!4181 = !DILocation(line: 115, column: 21, scope: !4171)
!4182 = !DILocation(line: 116, column: 22, scope: !4171)
!4183 = !DILocation(line: 118, column: 2, scope: !4171)
!4184 = !DILocation(line: 119, column: 2, scope: !4171)
!4185 = !DILocation(line: 120, column: 2, scope: !4171)
!4186 = !DILocation(line: 121, column: 25, scope: !4171)
!4187 = !DILocation(line: 121, column: 2, scope: !4171)
!4188 = !DILocation(line: 122, column: 1, scope: !4171)
!4189 = distinct !DISubprogram(name: "chunk_mem", scope: !3688, file: !3688, line: 24, type: !4190, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4192)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!102, !2564, !2569}
!4192 = !{!4193, !4194, !4195, !4196}
!4193 = !DILocalVariable(name: "h", arg: 1, scope: !4189, file: !3688, line: 24, type: !2564)
!4194 = !DILocalVariable(name: "c", arg: 2, scope: !4189, file: !3688, line: 24, type: !2569)
!4195 = !DILocalVariable(name: "buf", scope: !4189, file: !3688, line: 26, type: !2558)
!4196 = !DILocalVariable(name: "ret", scope: !4189, file: !3688, line: 27, type: !261)
!4197 = !DILocation(line: 0, scope: !4189)
!4198 = !DILocation(line: 26, column: 22, scope: !4189)
!4199 = !DILocation(line: 27, column: 38, scope: !4189)
!4200 = !DILocation(line: 31, column: 2, scope: !4189)
!4201 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3688, file: !3688, line: 301, type: !4202, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4204)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!102, !3691, !344, !344}
!4204 = !{!4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216}
!4205 = !DILocalVariable(name: "heap", arg: 1, scope: !4201, file: !3688, line: 301, type: !3691)
!4206 = !DILocalVariable(name: "align", arg: 2, scope: !4201, file: !3688, line: 301, type: !344)
!4207 = !DILocalVariable(name: "bytes", arg: 3, scope: !4201, file: !3688, line: 301, type: !344)
!4208 = !DILocalVariable(name: "h", scope: !4201, file: !3688, line: 303, type: !2564)
!4209 = !DILocalVariable(name: "gap", scope: !4201, file: !3688, line: 304, type: !344)
!4210 = !DILocalVariable(name: "rew", scope: !4201, file: !3688, line: 304, type: !344)
!4211 = !DILocalVariable(name: "padded_sz", scope: !4201, file: !3688, line: 335, type: !3814)
!4212 = !DILocalVariable(name: "c0", scope: !4201, file: !3688, line: 336, type: !2569)
!4213 = !DILocalVariable(name: "mem", scope: !4201, file: !3688, line: 341, type: !261)
!4214 = !DILocalVariable(name: "end", scope: !4201, file: !3688, line: 345, type: !2558)
!4215 = !DILocalVariable(name: "c", scope: !4201, file: !3688, line: 348, type: !2569)
!4216 = !DILocalVariable(name: "c_end", scope: !4201, file: !3688, line: 349, type: !2569)
!4217 = !DILocation(line: 0, scope: !4201)
!4218 = !DILocation(line: 303, column: 27, scope: !4201)
!4219 = !DILocation(line: 313, column: 16, scope: !4201)
!4220 = !DILocation(line: 313, column: 14, scope: !4201)
!4221 = !DILocation(line: 314, column: 12, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4201, file: !3688, line: 314, column: 6)
!4223 = !DILocation(line: 314, column: 6, scope: !4201)
!4224 = !DILocation(line: 315, column: 9, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4222, file: !3688, line: 314, column: 20)
!4226 = !DILocation(line: 316, column: 9, scope: !4225)
!4227 = !DILocation(line: 318, column: 13, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !3688, line: 318, column: 7)
!4229 = distinct !DILexicalBlock(scope: !4222, file: !3688, line: 317, column: 9)
!4230 = !DILocation(line: 318, column: 7, scope: !4229)
!4231 = !DILocation(line: 319, column: 11, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !3688, line: 318, column: 39)
!4233 = !DILocation(line: 319, column: 4, scope: !4232)
!4234 = !DILocation(line: 0, scope: !4222)
!4235 = !DILocation(line: 326, column: 12, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4201, file: !3688, line: 326, column: 6)
!4237 = !DILocation(line: 326, column: 17, scope: !4236)
!4238 = !DILocation(line: 326, column: 20, scope: !4236)
!4239 = !DILocation(line: 326, column: 6, scope: !4201)
!4240 = !DILocation(line: 335, column: 50, scope: !4201)
!4241 = !DILocation(line: 335, column: 58, scope: !4201)
!4242 = !DILocation(line: 335, column: 24, scope: !4201)
!4243 = !DILocation(line: 336, column: 17, scope: !4201)
!4244 = !DILocation(line: 338, column: 9, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4201, file: !3688, line: 338, column: 6)
!4246 = !DILocation(line: 338, column: 6, scope: !4201)
!4247 = !DILocation(line: 341, column: 17, scope: !4201)
!4248 = !DILocation(line: 344, column: 20, scope: !4201)
!4249 = !DILocation(line: 344, column: 8, scope: !4201)
!4250 = !DILocation(line: 344, column: 47, scope: !4201)
!4251 = !DILocation(line: 345, column: 39, scope: !4201)
!4252 = !DILocation(line: 348, column: 16, scope: !4201)
!4253 = !DILocation(line: 349, column: 26, scope: !4201)
!4254 = !DILocation(line: 349, column: 24, scope: !4201)
!4255 = !DILocation(line: 353, column: 8, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4201, file: !3688, line: 353, column: 6)
!4257 = !DILocation(line: 353, column: 6, scope: !4201)
!4258 = !DILocation(line: 354, column: 3, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4256, file: !3688, line: 353, column: 14)
!4260 = !DILocation(line: 355, column: 3, scope: !4259)
!4261 = !DILocation(line: 356, column: 2, scope: !4259)
!4262 = !DILocation(line: 359, column: 6, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4201, file: !3688, line: 359, column: 6)
!4264 = !DILocation(line: 359, column: 24, scope: !4263)
!4265 = !DILocation(line: 359, column: 6, scope: !4201)
!4266 = !DILocation(line: 360, column: 3, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4263, file: !3688, line: 359, column: 33)
!4268 = !DILocation(line: 361, column: 3, scope: !4267)
!4269 = !DILocation(line: 362, column: 2, scope: !4267)
!4270 = !DILocation(line: 364, column: 2, scope: !4201)
!4271 = !DILocation(line: 377, column: 1, scope: !4201)
!4272 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3688, file: !3688, line: 379, type: !4273, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4275)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!102, !3691, !102, !344, !344}
!4275 = !{!4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4291, !4292}
!4276 = !DILocalVariable(name: "heap", arg: 1, scope: !4272, file: !3688, line: 379, type: !3691)
!4277 = !DILocalVariable(name: "ptr", arg: 2, scope: !4272, file: !3688, line: 379, type: !102)
!4278 = !DILocalVariable(name: "align", arg: 3, scope: !4272, file: !3688, line: 380, type: !344)
!4279 = !DILocalVariable(name: "bytes", arg: 4, scope: !4272, file: !3688, line: 380, type: !344)
!4280 = !DILocalVariable(name: "h", scope: !4272, file: !3688, line: 382, type: !2564)
!4281 = !DILocalVariable(name: "c", scope: !4272, file: !3688, line: 399, type: !2569)
!4282 = !DILocalVariable(name: "rc", scope: !4272, file: !3688, line: 400, type: !2569)
!4283 = !DILocalVariable(name: "align_gap", scope: !4272, file: !3688, line: 401, type: !344)
!4284 = !DILocalVariable(name: "chunks_need", scope: !4272, file: !3688, line: 402, type: !3814)
!4285 = !DILocalVariable(name: "split_size", scope: !4286, file: !3688, line: 435, type: !3814)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !3688, line: 433, column: 61)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !3688, line: 432, column: 13)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !3688, line: 409, column: 13)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !3688, line: 406, column: 13)
!4290 = distinct !DILexicalBlock(scope: !4272, file: !3688, line: 404, column: 6)
!4291 = !DILocalVariable(name: "ptr2", scope: !4272, file: !3688, line: 474, type: !102)
!4292 = !DILocalVariable(name: "prev_size", scope: !4293, file: !3688, line: 477, type: !344)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !3688, line: 476, column: 20)
!4294 = distinct !DILexicalBlock(scope: !4272, file: !3688, line: 476, column: 6)
!4295 = !DILocation(line: 0, scope: !4272)
!4296 = !DILocation(line: 382, column: 27, scope: !4272)
!4297 = !DILocation(line: 385, column: 10, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4272, file: !3688, line: 385, column: 6)
!4299 = !DILocation(line: 385, column: 6, scope: !4272)
!4300 = !DILocation(line: 386, column: 10, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4298, file: !3688, line: 385, column: 19)
!4302 = !DILocation(line: 386, column: 3, scope: !4301)
!4303 = !DILocation(line: 388, column: 12, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4272, file: !3688, line: 388, column: 6)
!4305 = !DILocation(line: 388, column: 6, scope: !4272)
!4306 = !DILocation(line: 389, column: 3, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4304, file: !3688, line: 388, column: 18)
!4308 = !DILocation(line: 390, column: 3, scope: !4307)
!4309 = !DILocation(line: 395, column: 6, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4272, file: !3688, line: 395, column: 6)
!4311 = !DILocation(line: 395, column: 6, scope: !4272)
!4312 = !DILocation(line: 399, column: 16, scope: !4272)
!4313 = !DILocation(line: 400, column: 17, scope: !4272)
!4314 = !DILocation(line: 401, column: 49, scope: !4272)
!4315 = !DILocation(line: 401, column: 36, scope: !4272)
!4316 = !DILocation(line: 402, column: 52, scope: !4272)
!4317 = !DILocation(line: 402, column: 26, scope: !4272)
!4318 = !DILocation(line: 404, column: 6, scope: !4290)
!4319 = !DILocation(line: 404, column: 12, scope: !4290)
!4320 = !DILocation(line: 404, column: 40, scope: !4290)
!4321 = !DILocation(line: 404, column: 31, scope: !4290)
!4322 = !DILocation(line: 404, column: 6, scope: !4272)
!4323 = !DILocation(line: 406, column: 13, scope: !4289)
!4324 = !DILocation(line: 406, column: 30, scope: !4289)
!4325 = !DILocation(line: 406, column: 13, scope: !4290)
!4326 = !DILocation(line: 409, column: 30, scope: !4288)
!4327 = !DILocation(line: 409, column: 13, scope: !4289)
!4328 = !DILocation(line: 420, column: 24, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4288, file: !3688, line: 409, column: 45)
!4330 = !DILocation(line: 420, column: 3, scope: !4329)
!4331 = !DILocation(line: 421, column: 3, scope: !4329)
!4332 = !DILocation(line: 422, column: 3, scope: !4329)
!4333 = !DILocation(line: 431, column: 3, scope: !4329)
!4334 = !DILocation(line: 432, column: 14, scope: !4287)
!4335 = !DILocation(line: 432, column: 32, scope: !4287)
!4336 = !DILocation(line: 433, column: 26, scope: !4287)
!4337 = !DILocation(line: 433, column: 24, scope: !4287)
!4338 = !DILocation(line: 433, column: 44, scope: !4287)
!4339 = !DILocation(line: 432, column: 13, scope: !4288)
!4340 = !DILocation(line: 435, column: 38, scope: !4286)
!4341 = !DILocation(line: 0, scope: !4286)
!4342 = !DILocation(line: 445, column: 3, scope: !4286)
!4343 = !DILocation(line: 447, column: 20, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4286, file: !3688, line: 447, column: 7)
!4345 = !DILocation(line: 447, column: 18, scope: !4344)
!4346 = !DILocation(line: 447, column: 7, scope: !4286)
!4347 = !DILocation(line: 448, column: 27, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4344, file: !3688, line: 447, column: 39)
!4349 = !DILocation(line: 448, column: 4, scope: !4348)
!4350 = !DILocation(line: 449, column: 4, scope: !4348)
!4351 = !DILocation(line: 450, column: 3, scope: !4348)
!4352 = !DILocation(line: 452, column: 3, scope: !4286)
!4353 = !DILocation(line: 453, column: 3, scope: !4286)
!4354 = !DILocation(line: 474, column: 15, scope: !4272)
!4355 = !DILocation(line: 476, column: 11, scope: !4294)
!4356 = !DILocation(line: 476, column: 6, scope: !4272)
!4357 = !DILocation(line: 477, column: 42, scope: !4293)
!4358 = !DILocation(line: 477, column: 22, scope: !4293)
!4359 = !DILocation(line: 477, column: 60, scope: !4293)
!4360 = !DILocation(line: 0, scope: !4293)
!4361 = !DILocation(line: 479, column: 21, scope: !4293)
!4362 = !DILocation(line: 479, column: 3, scope: !4293)
!4363 = !DILocation(line: 480, column: 3, scope: !4293)
!4364 = !DILocation(line: 481, column: 2, scope: !4293)
!4365 = !DILocation(line: 483, column: 1, scope: !4272)
!4366 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2551, file: !2551, line: 245, type: !4367, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4369)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!344, !2564, !3814}
!4369 = !{!4370, !4371}
!4370 = !DILocalVariable(name: "h", arg: 1, scope: !4366, file: !2551, line: 245, type: !2564)
!4371 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4366, file: !2551, line: 245, type: !3814)
!4372 = !DILocation(line: 0, scope: !4366)
!4373 = !DILocation(line: 247, column: 20, scope: !4366)
!4374 = !DILocation(line: 247, column: 33, scope: !4366)
!4375 = !DILocation(line: 247, column: 2, scope: !4366)
!4376 = distinct !DISubprogram(name: "sys_heap_init", scope: !3688, file: !3688, line: 485, type: !4377, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4379)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{null, !3691, !102, !344}
!4379 = !{!4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389}
!4380 = !DILocalVariable(name: "heap", arg: 1, scope: !4376, file: !3688, line: 485, type: !3691)
!4381 = !DILocalVariable(name: "mem", arg: 2, scope: !4376, file: !3688, line: 485, type: !102)
!4382 = !DILocalVariable(name: "bytes", arg: 3, scope: !4376, file: !3688, line: 485, type: !344)
!4383 = !DILocalVariable(name: "addr", scope: !4376, file: !3688, line: 502, type: !22)
!4384 = !DILocalVariable(name: "end", scope: !4376, file: !3688, line: 503, type: !22)
!4385 = !DILocalVariable(name: "heap_sz", scope: !4376, file: !3688, line: 504, type: !3814)
!4386 = !DILocalVariable(name: "h", scope: !4376, file: !3688, line: 509, type: !2564)
!4387 = !DILocalVariable(name: "nb_buckets", scope: !4376, file: !3688, line: 520, type: !103)
!4388 = !DILocalVariable(name: "chunk0_size", scope: !4376, file: !3688, line: 521, type: !3814)
!4389 = !DILocalVariable(name: "i", scope: !4390, file: !3688, line: 526, type: !103)
!4390 = distinct !DILexicalBlock(scope: !4376, file: !3688, line: 526, column: 2)
!4391 = !DILocation(line: 0, scope: !4376)
!4392 = !DILocation(line: 499, column: 8, scope: !4376)
!4393 = !DILocation(line: 502, column: 19, scope: !4376)
!4394 = !DILocation(line: 503, column: 18, scope: !4376)
!4395 = !DILocation(line: 504, column: 27, scope: !4376)
!4396 = !DILocation(line: 504, column: 35, scope: !4376)
!4397 = !DILocation(line: 509, column: 21, scope: !4376)
!4398 = !DILocation(line: 510, column: 8, scope: !4376)
!4399 = !DILocation(line: 510, column: 13, scope: !4376)
!4400 = !DILocation(line: 511, column: 5, scope: !4376)
!4401 = !DILocation(line: 511, column: 15, scope: !4376)
!4402 = !DILocation(line: 512, column: 5, scope: !4376)
!4403 = !DILocation(line: 512, column: 19, scope: !4376)
!4404 = !DILocation(line: 520, column: 19, scope: !4376)
!4405 = !DILocation(line: 522, column: 21, scope: !4376)
!4406 = !DILocation(line: 521, column: 56, scope: !4376)
!4407 = !DILocation(line: 521, column: 26, scope: !4376)
!4408 = !DILocation(line: 0, scope: !4390)
!4409 = !DILocation(line: 526, column: 20, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4390, file: !3688, line: 526, column: 2)
!4411 = !DILocation(line: 526, column: 2, scope: !4390)
!4412 = !DILocation(line: 531, column: 2, scope: !4376)
!4413 = !DILocation(line: 532, column: 2, scope: !4376)
!4414 = !DILocation(line: 533, column: 2, scope: !4376)
!4415 = !DILocation(line: 536, column: 41, scope: !4376)
!4416 = !DILocation(line: 536, column: 2, scope: !4376)
!4417 = !DILocation(line: 537, column: 2, scope: !4376)
!4418 = !DILocation(line: 540, column: 2, scope: !4376)
!4419 = !DILocation(line: 541, column: 2, scope: !4376)
!4420 = !DILocation(line: 542, column: 2, scope: !4376)
!4421 = !DILocation(line: 544, column: 2, scope: !4376)
!4422 = !DILocation(line: 545, column: 1, scope: !4376)
!4423 = !DILocation(line: 527, column: 17, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4410, file: !3688, line: 526, column: 39)
!4425 = !DILocation(line: 527, column: 22, scope: !4424)
!4426 = !DILocation(line: 526, column: 35, scope: !4410)
!4427 = distinct !{!4427, !4411, !4428}
!4428 = !DILocation(line: 528, column: 2, scope: !4390)
!4429 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2584, file: !2584, line: 1338, type: !4430, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !4438)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{!103, !3418, !102, !144, !4432, !121}
!4432 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3384, line: 99, baseType: !4433)
!4433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3384, line: 40, baseType: !4434)
!4434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2584, baseType: !4435)
!4435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4436)
!4436 = !{!4437}
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4435, file: !2584, baseType: !102, size: 32)
!4438 = !{!4439, !4440, !4441, !4442, !4443, !4444, !4448, !4449, !4450, !4452, !4457, !4502, !4505, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4517, !4518, !4519, !4523, !4526, !4528, !4531, !4532, !4533, !4538, !4544, !4547, !4551, !4557, !4561, !4564, !4566, !4569}
!4439 = !DILocalVariable(name: "out", arg: 1, scope: !4429, file: !2584, line: 1338, type: !3418)
!4440 = !DILocalVariable(name: "ctx", arg: 2, scope: !4429, file: !2584, line: 1338, type: !102)
!4441 = !DILocalVariable(name: "fp", arg: 3, scope: !4429, file: !2584, line: 1338, type: !144)
!4442 = !DILocalVariable(name: "ap", arg: 4, scope: !4429, file: !2584, line: 1339, type: !4432)
!4443 = !DILocalVariable(name: "flags", arg: 5, scope: !4429, file: !2584, line: 1339, type: !121)
!4444 = !DILocalVariable(name: "buf", scope: !4429, file: !2584, line: 1341, type: !4445)
!4445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4446)
!4446 = !{!4447}
!4447 = !DISubrange(count: 22)
!4448 = !DILocalVariable(name: "count", scope: !4429, file: !2584, line: 1342, type: !344)
!4449 = !DILocalVariable(name: "sint", scope: !4429, file: !2584, line: 1343, type: !2603)
!4450 = !DILocalVariable(name: "tagged_ap", scope: !4429, file: !2584, line: 1345, type: !4451)
!4451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4452 = !DILocalVariable(name: "rc", scope: !4453, file: !2584, line: 1377, type: !103)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !2584, line: 1377, column: 4)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !2584, line: 1376, column: 19)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1376, column: 7)
!4456 = distinct !DILexicalBlock(scope: !4429, file: !2584, line: 1375, column: 19)
!4457 = !DILocalVariable(name: "state", scope: !4456, file: !2584, line: 1395, type: !4458)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4429, file: !2584, line: 1392, size: 192, elements: !4459)
!4459 = !{!4460, !4470}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4458, file: !2584, line: 1393, baseType: !4461, size: 64)
!4461 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2584, line: 166, size: 64, elements: !4462)
!4462 = !{!4463, !4464, !4465, !4467, !4469}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4461, file: !2584, line: 168, baseType: !2603, size: 64)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4461, file: !2584, line: 171, baseType: !2606, size: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4461, file: !2584, line: 174, baseType: !4466, size: 64)
!4466 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4461, file: !2584, line: 177, baseType: !4468, size: 64)
!4468 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4461, file: !2584, line: 180, baseType: !102, size: 32)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4458, file: !2584, line: 1394, baseType: !4471, size: 96, offset: 64)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2584, line: 189, size: 96, elements: !4472)
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4497}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4471, file: !2584, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4471, file: !2584, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4471, file: !2584, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4471, file: !2584, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4471, file: !2584, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4471, file: !2584, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4471, file: !2584, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4471, file: !2584, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4471, file: !2584, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4471, file: !2584, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4471, file: !2584, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4471, file: !2584, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4471, file: !2584, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4471, file: !2584, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4471, file: !2584, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4471, file: !2584, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4471, file: !2584, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4471, file: !2584, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4471, file: !2584, line: 260, baseType: !155, size: 8, offset: 24)
!4492 = !DIDerivedType(tag: DW_TAG_member, scope: !4471, file: !2584, line: 262, baseType: !4493, size: 32, offset: 32)
!4493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4471, file: !2584, line: 262, size: 32, elements: !4494)
!4494 = !{!4495, !4496}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4493, file: !2584, line: 267, baseType: !103, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4493, file: !2584, line: 289, baseType: !103, size: 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, scope: !4471, file: !2584, line: 292, baseType: !4498, size: 32, offset: 64)
!4498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4471, file: !2584, line: 292, size: 32, elements: !4499)
!4499 = !{!4500, !4501}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4498, file: !2584, line: 297, baseType: !103, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4498, file: !2584, line: 306, baseType: !103, size: 32)
!4502 = !DILocalVariable(name: "conv", scope: !4456, file: !2584, line: 1400, type: !4503)
!4503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4504)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 32)
!4505 = !DILocalVariable(name: "value", scope: !4456, file: !2584, line: 1401, type: !4506)
!4506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4507)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 32)
!4508 = !DILocalVariable(name: "sp", scope: !4456, file: !2584, line: 1402, type: !144)
!4509 = !DILocalVariable(name: "width", scope: !4456, file: !2584, line: 1403, type: !103)
!4510 = !DILocalVariable(name: "precision", scope: !4456, file: !2584, line: 1404, type: !103)
!4511 = !DILocalVariable(name: "bps", scope: !4456, file: !2584, line: 1405, type: !144)
!4512 = !DILocalVariable(name: "bpe", scope: !4456, file: !2584, line: 1406, type: !144)
!4513 = !DILocalVariable(name: "sign", scope: !4456, file: !2584, line: 1407, type: !146)
!4514 = !DILocalVariable(name: "arg", scope: !4515, file: !2584, line: 1432, type: !103)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !2584, line: 1431, column: 24)
!4516 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1431, column: 7)
!4517 = !DILocalVariable(name: "specifier_cat", scope: !4456, file: !2584, line: 1468, type: !2583)
!4518 = !DILocalVariable(name: "length_mod", scope: !4456, file: !2584, line: 1470, type: !2591)
!4519 = !DILocalVariable(name: "rc", scope: !4520, file: !2584, line: 1575, type: !103)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2584, line: 1575, column: 4)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2584, line: 1574, column: 43)
!4522 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1574, column: 7)
!4523 = !DILocalVariable(name: "rc", scope: !4524, file: !2584, line: 1584, type: !103)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2584, line: 1584, column: 4)
!4525 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1582, column: 28)
!4526 = !DILocalVariable(name: "len", scope: !4527, file: !2584, line: 1589, type: !344)
!4527 = distinct !DILexicalBlock(scope: !4525, file: !2584, line: 1586, column: 13)
!4528 = !DILocalVariable(name: "len", scope: !4529, file: !2584, line: 1641, type: !344)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !2584, line: 1640, column: 24)
!4530 = distinct !DILexicalBlock(scope: !4525, file: !2584, line: 1640, column: 8)
!4531 = !DILocalVariable(name: "nj_len", scope: !4456, file: !2584, line: 1722, type: !344)
!4532 = !DILocalVariable(name: "pad_len", scope: !4456, file: !2584, line: 1723, type: !103)
!4533 = !DILocalVariable(name: "pad", scope: !4534, file: !2584, line: 1751, type: !146)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2584, line: 1750, column: 26)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2584, line: 1750, column: 8)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2584, line: 1747, column: 18)
!4537 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1747, column: 7)
!4538 = !DILocalVariable(name: "rc", scope: !4539, file: !2584, line: 1758, type: !103)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2584, line: 1758, column: 7)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2584, line: 1757, column: 21)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2584, line: 1757, column: 10)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2584, line: 1756, column: 26)
!4543 = distinct !DILexicalBlock(scope: !4534, file: !2584, line: 1756, column: 9)
!4544 = !DILocalVariable(name: "rc", scope: !4545, file: !2584, line: 1765, type: !103)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !2584, line: 1765, column: 6)
!4546 = distinct !DILexicalBlock(scope: !4534, file: !2584, line: 1764, column: 25)
!4547 = !DILocalVariable(name: "rc", scope: !4548, file: !2584, line: 1774, type: !103)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !2584, line: 1774, column: 4)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !2584, line: 1773, column: 18)
!4550 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1773, column: 7)
!4551 = !DILocalVariable(name: "rc", scope: !4552, file: !2584, line: 1819, type: !103)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !2584, line: 1819, column: 5)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !2584, line: 1818, column: 44)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2584, line: 1818, column: 8)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2584, line: 1817, column: 10)
!4556 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1777, column: 7)
!4557 = !DILocalVariable(name: "rc", scope: !4558, file: !2584, line: 1823, type: !103)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !2584, line: 1823, column: 5)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !2584, line: 1822, column: 26)
!4560 = distinct !DILexicalBlock(scope: !4555, file: !2584, line: 1822, column: 8)
!4561 = !DILocalVariable(name: "rc", scope: !4562, file: !2584, line: 1828, type: !103)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !2584, line: 1828, column: 5)
!4563 = distinct !DILexicalBlock(scope: !4555, file: !2584, line: 1827, column: 26)
!4564 = !DILocalVariable(name: "rc", scope: !4565, file: !2584, line: 1831, type: !103)
!4565 = distinct !DILexicalBlock(scope: !4555, file: !2584, line: 1831, column: 4)
!4566 = !DILocalVariable(name: "rc", scope: !4567, file: !2584, line: 1836, type: !103)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2584, line: 1836, column: 4)
!4568 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1835, column: 21)
!4569 = !DILabel(scope: !4525, name: "prec_int_pad0", file: !2584, line: 1634)
!4570 = !DILocation(line: 0, scope: !4429)
!4571 = !DILocation(line: 1341, column: 2, scope: !4429)
!4572 = !DILocation(line: 1341, column: 7, scope: !4429)
!4573 = !DILocation(line: 1375, column: 2, scope: !4429)
!4574 = !DILocation(line: 1342, column: 9, scope: !4429)
!4575 = !DILocation(line: 1375, column: 9, scope: !4429)
!4576 = !DILocation(line: 1377, column: 4, scope: !4453)
!4577 = !DILocation(line: 0, scope: !4453)
!4578 = !DILocation(line: 1377, column: 4, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4453, file: !2584, line: 1377, column: 4)
!4580 = distinct !{!4580, !4573, !4581}
!4581 = !DILocation(line: 1839, column: 2, scope: !4429)
!4582 = !DILocation(line: 1392, column: 3, scope: !4456)
!4583 = !DILocation(line: 1395, column: 5, scope: !4456)
!4584 = !DILocation(line: 0, scope: !4456)
!4585 = !DILocation(line: 1409, column: 8, scope: !4456)
!4586 = !DILocation(line: 1414, column: 13, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1414, column: 7)
!4588 = !DILocation(line: 1414, column: 7, scope: !4456)
!4589 = !DILocation(line: 1415, column: 12, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4587, file: !2584, line: 1414, column: 25)
!4591 = !DILocation(line: 1417, column: 14, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4590, file: !2584, line: 1417, column: 8)
!4593 = !DILocation(line: 1417, column: 8, scope: !4590)
!4594 = !DILocation(line: 1418, column: 21, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4592, file: !2584, line: 1417, column: 19)
!4596 = !DILocation(line: 1419, column: 13, scope: !4595)
!4597 = !DILocation(line: 1420, column: 4, scope: !4595)
!4598 = !DILocation(line: 1421, column: 20, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4587, file: !2584, line: 1421, column: 14)
!4600 = !DILocation(line: 1421, column: 14, scope: !4587)
!4601 = !DILocation(line: 1431, column: 13, scope: !4516)
!4602 = !DILocation(line: 1431, column: 7, scope: !4456)
!4603 = !DILocation(line: 1432, column: 14, scope: !4515)
!4604 = !DILocation(line: 0, scope: !4515)
!4605 = !DILocation(line: 1434, column: 12, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4515, file: !2584, line: 1434, column: 8)
!4607 = !DILocation(line: 1434, column: 8, scope: !4515)
!4608 = !DILocation(line: 1435, column: 24, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4606, file: !2584, line: 1434, column: 17)
!4610 = !DILocation(line: 1436, column: 4, scope: !4609)
!4611 = !DILocation(line: 1439, column: 20, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4516, file: !2584, line: 1439, column: 14)
!4613 = !DILocation(line: 1439, column: 14, scope: !4516)
!4614 = !DILocation(line: 1469, column: 37, scope: !4456)
!4615 = !DILocation(line: 1448, column: 20, scope: !4456)
!4616 = !DILocation(line: 1449, column: 22, scope: !4456)
!4617 = !DILocation(line: 1471, column: 34, scope: !4456)
!4618 = !DILocation(line: 1478, column: 7, scope: !4456)
!4619 = !DILocation(line: 1479, column: 4, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !2584, line: 1478, column: 40)
!4621 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1478, column: 7)
!4622 = !DILocation(line: 1484, column: 19, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4620, file: !2584, line: 1479, column: 24)
!4624 = !DILocation(line: 1484, column: 17, scope: !4623)
!4625 = !DILocation(line: 1485, column: 5, scope: !4623)
!4626 = !DILocation(line: 1492, column: 20, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2584, line: 1491, column: 12)
!4628 = distinct !DILexicalBlock(scope: !4623, file: !2584, line: 1487, column: 9)
!4629 = !DILocation(line: 1492, column: 18, scope: !4627)
!4630 = !DILocation(line: 1494, column: 5, scope: !4623)
!4631 = !DILocation(line: 1497, column: 23, scope: !4623)
!4632 = !DILocation(line: 1496, column: 17, scope: !4623)
!4633 = !DILocation(line: 1498, column: 5, scope: !4623)
!4634 = !DILocation(line: 1501, column: 23, scope: !4623)
!4635 = !DILocation(line: 1500, column: 17, scope: !4623)
!4636 = !DILocation(line: 1502, column: 5, scope: !4623)
!4637 = !DILocation(line: 1513, column: 23, scope: !4623)
!4638 = !DILocation(line: 1513, column: 6, scope: !4623)
!4639 = !DILocation(line: 1512, column: 17, scope: !4623)
!4640 = !DILocation(line: 1514, column: 5, scope: !4623)
!4641 = !DILocation(line: 0, scope: !4623)
!4642 = !DILocation(line: 1516, column: 8, scope: !4620)
!4643 = !DILocation(line: 1517, column: 19, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !2584, line: 1516, column: 33)
!4645 = distinct !DILexicalBlock(scope: !4620, file: !2584, line: 1516, column: 8)
!4646 = !DILocation(line: 1517, column: 17, scope: !4644)
!4647 = !DILocation(line: 1518, column: 4, scope: !4644)
!4648 = !DILocation(line: 1519, column: 19, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !2584, line: 1518, column: 39)
!4650 = distinct !DILexicalBlock(scope: !4645, file: !2584, line: 1518, column: 15)
!4651 = !DILocation(line: 1519, column: 17, scope: !4649)
!4652 = !DILocation(line: 1520, column: 4, scope: !4649)
!4653 = !DILocation(line: 1522, column: 4, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !2584, line: 1521, column: 47)
!4655 = distinct !DILexicalBlock(scope: !4621, file: !2584, line: 1521, column: 14)
!4656 = !DILocation(line: 1527, column: 19, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4654, file: !2584, line: 1522, column: 24)
!4658 = !DILocation(line: 1527, column: 17, scope: !4657)
!4659 = !DILocation(line: 1528, column: 5, scope: !4657)
!4660 = !DILocation(line: 0, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !2584, line: 1530, column: 9)
!4662 = !DILocation(line: 1540, column: 23, scope: !4657)
!4663 = !DILocation(line: 1539, column: 17, scope: !4657)
!4664 = !DILocation(line: 1542, column: 5, scope: !4657)
!4665 = !DILocation(line: 1545, column: 23, scope: !4657)
!4666 = !DILocation(line: 1544, column: 17, scope: !4657)
!4667 = !DILocation(line: 1547, column: 5, scope: !4657)
!4668 = !DILocation(line: 1551, column: 23, scope: !4657)
!4669 = !DILocation(line: 1551, column: 6, scope: !4657)
!4670 = !DILocation(line: 1550, column: 17, scope: !4657)
!4671 = !DILocation(line: 1552, column: 5, scope: !4657)
!4672 = !DILocation(line: 0, scope: !4657)
!4673 = !DILocation(line: 1554, column: 8, scope: !4654)
!4674 = !DILocation(line: 1555, column: 19, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !2584, line: 1554, column: 33)
!4676 = distinct !DILexicalBlock(scope: !4654, file: !2584, line: 1554, column: 8)
!4677 = !DILocation(line: 1555, column: 17, scope: !4675)
!4678 = !DILocation(line: 1556, column: 4, scope: !4675)
!4679 = !DILocation(line: 1557, column: 19, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2584, line: 1556, column: 39)
!4681 = distinct !DILexicalBlock(scope: !4676, file: !2584, line: 1556, column: 15)
!4682 = !DILocation(line: 1557, column: 17, scope: !4680)
!4683 = !DILocation(line: 1558, column: 4, scope: !4680)
!4684 = !DILocation(line: 0, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2584, line: 1560, column: 8)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !2584, line: 1559, column: 45)
!4687 = distinct !DILexicalBlock(scope: !4655, file: !2584, line: 1559, column: 14)
!4688 = !DILocation(line: 1566, column: 17, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !2584, line: 1565, column: 46)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !2584, line: 1565, column: 14)
!4691 = !DILocation(line: 1566, column: 15, scope: !4689)
!4692 = !DILocation(line: 1567, column: 3, scope: !4689)
!4693 = !DILocation(line: 1574, column: 21, scope: !4522)
!4694 = !DILocation(line: 1575, column: 4, scope: !4520)
!4695 = !DILocation(line: 0, scope: !4520)
!4696 = !DILocation(line: 1575, column: 4, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4520, file: !2584, line: 1575, column: 4)
!4698 = !DILocation(line: 1582, column: 17, scope: !4456)
!4699 = !DILocation(line: 1582, column: 3, scope: !4456)
!4700 = !DILocation(line: 1584, column: 4, scope: !4524)
!4701 = !DILocation(line: 0, scope: !4524)
!4702 = !DILocation(line: 1584, column: 4, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4524, file: !2584, line: 1584, column: 4)
!4704 = !DILocation(line: 1587, column: 31, scope: !4527)
!4705 = !DILocation(line: 1591, column: 18, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4527, file: !2584, line: 1591, column: 8)
!4707 = !DILocation(line: 1591, column: 8, scope: !4527)
!4708 = !DILocation(line: 1592, column: 11, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4706, file: !2584, line: 1591, column: 24)
!4710 = !DILocation(line: 0, scope: !4527)
!4711 = !DILocation(line: 1593, column: 4, scope: !4709)
!4712 = !DILocation(line: 1594, column: 11, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4706, file: !2584, line: 1593, column: 11)
!4714 = !DILocation(line: 1604, column: 51, scope: !4525)
!4715 = !DILocation(line: 1604, column: 13, scope: !4525)
!4716 = !DILocation(line: 1604, column: 11, scope: !4525)
!4717 = !DILocation(line: 1606, column: 4, scope: !4525)
!4718 = !DILocation(line: 1609, column: 14, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4525, file: !2584, line: 1609, column: 8)
!4720 = !DILocation(line: 1609, column: 8, scope: !4525)
!4721 = !DILocation(line: 1619, column: 18, scope: !4525)
!4722 = !DILocation(line: 1620, column: 13, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4525, file: !2584, line: 1620, column: 8)
!4724 = !DILocation(line: 1620, column: 8, scope: !4525)
!4725 = !DILocation(line: 1622, column: 36, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4723, file: !2584, line: 1620, column: 18)
!4727 = !DILocation(line: 1622, column: 17, scope: !4726)
!4728 = !DILocation(line: 1623, column: 4, scope: !4726)
!4729 = !DILocation(line: 1632, column: 29, scope: !4525)
!4730 = !DILocation(line: 1632, column: 10, scope: !4525)
!4731 = !DILocation(line: 1632, column: 4, scope: !4525)
!4732 = !DILocation(line: 1407, column: 8, scope: !4456)
!4733 = !DILocation(line: 0, scope: !4525)
!4734 = !DILocation(line: 1634, column: 3, scope: !4525)
!4735 = !DILocation(line: 1640, column: 18, scope: !4530)
!4736 = !DILocation(line: 1640, column: 8, scope: !4525)
!4737 = !DILocation(line: 1729, column: 13, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1729, column: 7)
!4739 = !DILocation(line: 1641, column: 22, scope: !4529)
!4740 = !DILocation(line: 0, scope: !4529)
!4741 = !DILocation(line: 1646, column: 21, scope: !4529)
!4742 = !DILocation(line: 1649, column: 13, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4529, file: !2584, line: 1649, column: 9)
!4744 = !DILocation(line: 1649, column: 9, scope: !4529)
!4745 = !DILocation(line: 1650, column: 35, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4743, file: !2584, line: 1649, column: 34)
!4747 = !DILocation(line: 1650, column: 23, scope: !4746)
!4748 = !DILocation(line: 1651, column: 5, scope: !4746)
!4749 = !DILocation(line: 1660, column: 15, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4525, file: !2584, line: 1660, column: 8)
!4751 = !DILocation(line: 1660, column: 19, scope: !4750)
!4752 = !DILocation(line: 1660, column: 8, scope: !4525)
!4753 = !DILocation(line: 1661, column: 23, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4750, file: !2584, line: 1660, column: 28)
!4755 = !DILocation(line: 1661, column: 11, scope: !4754)
!4756 = !DILocation(line: 1665, column: 22, scope: !4754)
!4757 = !DILocation(line: 1666, column: 21, scope: !4754)
!4758 = !DILocation(line: 1668, column: 5, scope: !4754)
!4759 = !DILocation(line: 1677, column: 30, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !2584, line: 1676, column: 49)
!4761 = distinct !DILexicalBlock(scope: !4525, file: !2584, line: 1676, column: 8)
!4762 = !DILocation(line: 1677, column: 5, scope: !4760)
!4763 = !DILocation(line: 1680, column: 4, scope: !4525)
!4764 = !DILocation(line: 0, scope: !4706)
!4765 = !DILocation(line: 1597, column: 14, scope: !4527)
!4766 = !DILocation(line: 1699, column: 11, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1699, column: 7)
!4768 = !DILocation(line: 1699, column: 7, scope: !4456)
!4769 = !DILocation(line: 1725, column: 7, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1725, column: 7)
!4771 = !DILocation(line: 1725, column: 12, scope: !4770)
!4772 = !DILocation(line: 1747, column: 13, scope: !4537)
!4773 = !DILocation(line: 1747, column: 7, scope: !4456)
!4774 = !DILocation(line: 1722, column: 24, scope: !4456)
!4775 = !DILocation(line: 1725, column: 7, scope: !4456)
!4776 = !DILocation(line: 1729, column: 7, scope: !4456)
!4777 = !DILocation(line: 1736, column: 13, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4456, file: !2584, line: 1736, column: 7)
!4779 = !DILocation(line: 1735, column: 19, scope: !4456)
!4780 = !DILocation(line: 1736, column: 7, scope: !4456)
!4781 = !DILocation(line: 1748, column: 10, scope: !4536)
!4782 = !DILocation(line: 1750, column: 15, scope: !4535)
!4783 = !DILocation(line: 1750, column: 8, scope: !4536)
!4784 = !DILocation(line: 0, scope: !4534)
!4785 = !DILocation(line: 1756, column: 15, scope: !4543)
!4786 = !DILocation(line: 1756, column: 9, scope: !4534)
!4787 = !DILocation(line: 1758, column: 7, scope: !4539)
!4788 = !DILocation(line: 0, scope: !4539)
!4789 = !DILocation(line: 1758, column: 7, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4539, file: !2584, line: 1758, column: 7)
!4791 = !DILocation(line: 1764, column: 5, scope: !4534)
!4792 = !DILocation(line: 0, scope: !4536)
!4793 = !DILocation(line: 1764, column: 20, scope: !4534)
!4794 = !DILocation(line: 1764, column: 17, scope: !4534)
!4795 = !DILocation(line: 1765, column: 6, scope: !4545)
!4796 = !DILocation(line: 0, scope: !4545)
!4797 = !DILocation(line: 1765, column: 6, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4545, file: !2584, line: 1765, column: 6)
!4799 = distinct !{!4799, !4791, !4800}
!4800 = !DILocation(line: 1766, column: 5, scope: !4534)
!4801 = !DILocation(line: 1773, column: 12, scope: !4550)
!4802 = !DILocation(line: 1773, column: 7, scope: !4456)
!4803 = !DILocation(line: 1773, column: 7, scope: !4550)
!4804 = !DILocation(line: 1774, column: 4, scope: !4548)
!4805 = !DILocation(line: 0, scope: !4548)
!4806 = !DILocation(line: 1774, column: 4, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4548, file: !2584, line: 1774, column: 4)
!4808 = !DILocation(line: 1818, column: 8, scope: !4554)
!4809 = !DILocation(line: 1818, column: 27, scope: !4554)
!4810 = !DILocation(line: 1818, column: 25, scope: !4554)
!4811 = !DILocation(line: 1818, column: 8, scope: !4555)
!4812 = !DILocation(line: 1819, column: 5, scope: !4552)
!4813 = !DILocation(line: 0, scope: !4552)
!4814 = !DILocation(line: 1819, column: 5, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4552, file: !2584, line: 1819, column: 5)
!4816 = !DILocation(line: 1822, column: 14, scope: !4560)
!4817 = !DILocation(line: 1822, column: 8, scope: !4555)
!4818 = !DILocation(line: 1823, column: 5, scope: !4558)
!4819 = !DILocation(line: 0, scope: !4558)
!4820 = !DILocation(line: 1823, column: 5, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4558, file: !2584, line: 1823, column: 5)
!4822 = !DILocation(line: 1826, column: 20, scope: !4555)
!4823 = !DILocation(line: 1827, column: 4, scope: !4555)
!4824 = !DILocation(line: 0, scope: !4555)
!4825 = !DILocation(line: 1827, column: 21, scope: !4555)
!4826 = !DILocation(line: 1827, column: 18, scope: !4555)
!4827 = !DILocation(line: 1828, column: 5, scope: !4562)
!4828 = !DILocation(line: 0, scope: !4562)
!4829 = !DILocation(line: 1828, column: 5, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4562, file: !2584, line: 1828, column: 5)
!4831 = distinct !{!4831, !4823, !4832}
!4832 = !DILocation(line: 1829, column: 4, scope: !4555)
!4833 = !DILocation(line: 1831, column: 4, scope: !4565)
!4834 = !DILocation(line: 0, scope: !4565)
!4835 = !DILocation(line: 1831, column: 4, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4565, file: !2584, line: 1831, column: 4)
!4837 = !DILocation(line: 1835, column: 16, scope: !4456)
!4838 = !DILocation(line: 1835, column: 3, scope: !4456)
!4839 = !DILocation(line: 1836, column: 4, scope: !4567)
!4840 = !DILocation(line: 0, scope: !4567)
!4841 = !DILocation(line: 1836, column: 4, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4567, file: !2584, line: 1836, column: 4)
!4843 = !DILocation(line: 1837, column: 4, scope: !4568)
!4844 = distinct !{!4844, !4838, !4845}
!4845 = !DILocation(line: 1838, column: 3, scope: !4456)
!4846 = !DILocation(line: 1844, column: 1, scope: !4429)
!4847 = distinct !DISubprogram(name: "extract_conversion", scope: !2584, file: !2584, line: 642, type: !4848, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !4850)
!4848 = !DISubroutineType(types: !4849)
!4849 = !{!144, !4504, !144}
!4850 = !{!4851, !4852}
!4851 = !DILocalVariable(name: "conv", arg: 1, scope: !4847, file: !2584, line: 642, type: !4504)
!4852 = !DILocalVariable(name: "sp", arg: 2, scope: !4847, file: !2584, line: 643, type: !144)
!4853 = !DILocation(line: 0, scope: !4847)
!4854 = !DILocation(line: 645, column: 10, scope: !4847)
!4855 = !DILocation(line: 653, column: 2, scope: !4847)
!4856 = !DILocation(line: 654, column: 6, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4847, file: !2584, line: 654, column: 6)
!4858 = !DILocation(line: 654, column: 10, scope: !4857)
!4859 = !DILocation(line: 654, column: 6, scope: !4847)
!4860 = !DILocation(line: 655, column: 24, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4857, file: !2584, line: 654, column: 18)
!4862 = !DILocation(line: 655, column: 19, scope: !4861)
!4863 = !DILocation(line: 656, column: 3, scope: !4861)
!4864 = !DILocation(line: 659, column: 7, scope: !4847)
!4865 = !DILocation(line: 660, column: 7, scope: !4847)
!4866 = !DILocation(line: 661, column: 7, scope: !4847)
!4867 = !DILocation(line: 662, column: 7, scope: !4847)
!4868 = !DILocation(line: 663, column: 7, scope: !4847)
!4869 = !DILocation(line: 665, column: 2, scope: !4847)
!4870 = !DILocation(line: 666, column: 1, scope: !4847)
!4871 = distinct !DISubprogram(name: "outs", scope: !2584, file: !2584, line: 1319, type: !4872, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !4874)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!103, !3418, !102, !144, !144}
!4874 = !{!4875, !4876, !4877, !4878, !4879, !4880}
!4875 = !DILocalVariable(name: "out", arg: 1, scope: !4871, file: !2584, line: 1319, type: !3418)
!4876 = !DILocalVariable(name: "ctx", arg: 2, scope: !4871, file: !2584, line: 1320, type: !102)
!4877 = !DILocalVariable(name: "sp", arg: 3, scope: !4871, file: !2584, line: 1321, type: !144)
!4878 = !DILocalVariable(name: "ep", arg: 4, scope: !4871, file: !2584, line: 1322, type: !144)
!4879 = !DILocalVariable(name: "count", scope: !4871, file: !2584, line: 1324, type: !344)
!4880 = !DILocalVariable(name: "rc", scope: !4881, file: !2584, line: 1327, type: !103)
!4881 = distinct !DILexicalBlock(scope: !4871, file: !2584, line: 1326, column: 45)
!4882 = !DILocation(line: 0, scope: !4871)
!4883 = !DILocation(line: 1326, column: 2, scope: !4871)
!4884 = !DILocation(line: 1324, column: 9, scope: !4871)
!4885 = !DILocation(line: 1326, column: 13, scope: !4871)
!4886 = !DILocation(line: 1326, column: 19, scope: !4871)
!4887 = !DILocation(line: 1327, column: 21, scope: !4881)
!4888 = !DILocation(line: 1326, column: 36, scope: !4871)
!4889 = !DILocation(line: 1326, column: 39, scope: !4871)
!4890 = !DILocation(line: 1327, column: 24, scope: !4881)
!4891 = !DILocation(line: 1327, column: 16, scope: !4881)
!4892 = !DILocation(line: 1327, column: 12, scope: !4881)
!4893 = !DILocation(line: 0, scope: !4881)
!4894 = !DILocation(line: 1329, column: 10, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4881, file: !2584, line: 1329, column: 7)
!4896 = !DILocation(line: 1329, column: 7, scope: !4881)
!4897 = distinct !{!4897, !4883, !4898}
!4898 = !DILocation(line: 1333, column: 2, scope: !4871)
!4899 = !DILocation(line: 1336, column: 1, scope: !4871)
!4900 = distinct !DISubprogram(name: "encode_uint", scope: !2584, file: !2584, line: 788, type: !4901, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !4903)
!4901 = !DISubroutineType(types: !4902)
!4902 = !{!1069, !2606, !4504, !1069, !144}
!4903 = !{!4904, !4905, !4906, !4907, !4908, !4909, !4911, !4912}
!4904 = !DILocalVariable(name: "value", arg: 1, scope: !4900, file: !2584, line: 788, type: !2606)
!4905 = !DILocalVariable(name: "conv", arg: 2, scope: !4900, file: !2584, line: 789, type: !4504)
!4906 = !DILocalVariable(name: "bps", arg: 3, scope: !4900, file: !2584, line: 790, type: !1069)
!4907 = !DILocalVariable(name: "bpe", arg: 4, scope: !4900, file: !2584, line: 791, type: !144)
!4908 = !DILocalVariable(name: "upcase", scope: !4900, file: !2584, line: 793, type: !157)
!4909 = !DILocalVariable(name: "radix", scope: !4900, file: !2584, line: 794, type: !4910)
!4910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4911 = !DILocalVariable(name: "bp", scope: !4900, file: !2584, line: 795, type: !1069)
!4912 = !DILocalVariable(name: "lsv", scope: !4913, file: !2584, line: 798, type: !32)
!4913 = distinct !DILexicalBlock(scope: !4900, file: !2584, line: 797, column: 5)
!4914 = !DILocation(line: 0, scope: !4900)
!4915 = !DILocation(line: 793, column: 35, scope: !4900)
!4916 = !DILocation(line: 793, column: 24, scope: !4900)
!4917 = !DILocation(line: 793, column: 16, scope: !4900)
!4918 = !DILocation(line: 794, column: 29, scope: !4900)
!4919 = !DILocation(line: 795, column: 24, scope: !4900)
!4920 = !DILocation(line: 795, column: 17, scope: !4900)
!4921 = !DILocation(line: 797, column: 2, scope: !4900)
!4922 = !DILocation(line: 802, column: 9, scope: !4913)
!4923 = !DILocation(line: 798, column: 22, scope: !4913)
!4924 = !DILocation(line: 0, scope: !4913)
!4925 = !DILocation(line: 800, column: 16, scope: !4913)
!4926 = !DILocation(line: 800, column: 11, scope: !4913)
!4927 = !DILocation(line: 800, column: 4, scope: !4913)
!4928 = !DILocation(line: 800, column: 9, scope: !4913)
!4929 = !DILocation(line: 803, column: 18, scope: !4900)
!4930 = !DILocation(line: 803, column: 24, scope: !4900)
!4931 = !DILocation(line: 803, column: 2, scope: !4913)
!4932 = distinct !{!4932, !4921, !4933}
!4933 = !DILocation(line: 803, column: 37, scope: !4900)
!4934 = !DILocation(line: 808, column: 12, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4900, file: !2584, line: 808, column: 6)
!4936 = !DILocation(line: 808, column: 6, scope: !4900)
!4937 = !DILocation(line: 809, column: 7, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4935, file: !2584, line: 808, column: 23)
!4939 = !DILocation(line: 813, column: 3, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !2584, line: 811, column: 27)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !2584, line: 811, column: 14)
!4942 = distinct !DILexicalBlock(scope: !4938, file: !2584, line: 809, column: 7)
!4943 = !DILocation(line: 0, scope: !4942)
!4944 = !DILocation(line: 818, column: 2, scope: !4900)
!4945 = distinct !DISubprogram(name: "store_count", scope: !2584, file: !2584, line: 1280, type: !4946, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !4950)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{null, !4948, !102, !103}
!4948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4949, size: 32)
!4949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4471)
!4950 = !{!4951, !4952, !4953}
!4951 = !DILocalVariable(name: "conv", arg: 1, scope: !4945, file: !2584, line: 1280, type: !4948)
!4952 = !DILocalVariable(name: "dp", arg: 2, scope: !4945, file: !2584, line: 1281, type: !102)
!4953 = !DILocalVariable(name: "count", arg: 3, scope: !4945, file: !2584, line: 1282, type: !103)
!4954 = !DILocation(line: 0, scope: !4945)
!4955 = !DILocation(line: 1284, column: 38, scope: !4945)
!4956 = !DILocation(line: 1284, column: 2, scope: !4945)
!4957 = !DILocation(line: 1286, column: 4, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4945, file: !2584, line: 1284, column: 50)
!4959 = !DILocation(line: 1286, column: 14, scope: !4958)
!4960 = !DILocation(line: 1287, column: 3, scope: !4958)
!4961 = !DILocation(line: 1289, column: 24, scope: !4958)
!4962 = !DILocation(line: 1289, column: 22, scope: !4958)
!4963 = !DILocation(line: 1290, column: 3, scope: !4958)
!4964 = !DILocation(line: 1292, column: 18, scope: !4958)
!4965 = !DILocation(line: 1292, column: 4, scope: !4958)
!4966 = !DILocation(line: 1292, column: 16, scope: !4958)
!4967 = !DILocation(line: 1293, column: 3, scope: !4958)
!4968 = !DILocation(line: 1295, column: 4, scope: !4958)
!4969 = !DILocation(line: 1295, column: 15, scope: !4958)
!4970 = !DILocation(line: 1296, column: 3, scope: !4958)
!4971 = !DILocation(line: 1298, column: 22, scope: !4958)
!4972 = !DILocation(line: 1298, column: 4, scope: !4958)
!4973 = !DILocation(line: 1298, column: 20, scope: !4958)
!4974 = !DILocation(line: 1299, column: 3, scope: !4958)
!4975 = !DILocation(line: 1301, column: 21, scope: !4958)
!4976 = !DILocation(line: 1301, column: 4, scope: !4958)
!4977 = !DILocation(line: 1301, column: 19, scope: !4958)
!4978 = !DILocation(line: 1302, column: 3, scope: !4958)
!4979 = !DILocation(line: 1304, column: 4, scope: !4958)
!4980 = !DILocation(line: 1304, column: 17, scope: !4958)
!4981 = !DILocation(line: 1305, column: 3, scope: !4958)
!4982 = !DILocation(line: 1307, column: 4, scope: !4958)
!4983 = !DILocation(line: 1307, column: 20, scope: !4958)
!4984 = !DILocation(line: 1308, column: 3, scope: !4958)
!4985 = !DILocation(line: 1316, column: 1, scope: !4945)
!4986 = distinct !DISubprogram(name: "isupper", scope: !4987, file: !4987, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !4988)
!4987 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4988 = !{!4989}
!4989 = !DILocalVariable(name: "a", arg: 1, scope: !4986, file: !4987, line: 16, type: !103)
!4990 = !DILocation(line: 0, scope: !4986)
!4991 = !DILocation(line: 18, column: 29, scope: !4986)
!4992 = !DILocation(line: 18, column: 45, scope: !4986)
!4993 = !DILocation(line: 18, column: 2, scope: !4986)
!4994 = distinct !DISubprogram(name: "conversion_radix", scope: !2584, file: !2584, line: 761, type: !4995, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !4997)
!4995 = !DISubroutineType(types: !4996)
!4996 = !{!344, !146}
!4997 = !{!4998}
!4998 = !DILocalVariable(name: "specifier", arg: 1, scope: !4994, file: !2584, line: 761, type: !146)
!4999 = !DILocation(line: 0, scope: !4994)
!5000 = !DILocation(line: 763, column: 2, scope: !4994)
!5001 = !DILocation(line: 770, column: 3, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4994, file: !2584, line: 763, column: 21)
!5003 = !DILocation(line: 774, column: 3, scope: !5002)
!5004 = !DILocation(line: 0, scope: !5002)
!5005 = !DILocation(line: 776, column: 1, scope: !4994)
!5006 = distinct !DISubprogram(name: "extract_flags", scope: !2584, file: !2584, line: 339, type: !4848, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !5007)
!5007 = !{!5008, !5009, !5010}
!5008 = !DILocalVariable(name: "conv", arg: 1, scope: !5006, file: !2584, line: 339, type: !4504)
!5009 = !DILocalVariable(name: "sp", arg: 2, scope: !5006, file: !2584, line: 340, type: !144)
!5010 = !DILocalVariable(name: "loop", scope: !5006, file: !2584, line: 342, type: !157)
!5011 = !DILocation(line: 0, scope: !5006)
!5012 = !DILocation(line: 344, column: 2, scope: !5006)
!5013 = !DILocation(line: 345, column: 11, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5006, file: !2584, line: 344, column: 5)
!5015 = !DILocation(line: 345, column: 3, scope: !5014)
!5016 = !DILocation(line: 351, column: 4, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !2584, line: 345, column: 16)
!5018 = !DILocation(line: 354, column: 4, scope: !5017)
!5019 = !DILocation(line: 357, column: 4, scope: !5017)
!5020 = !DILocation(line: 360, column: 4, scope: !5017)
!5021 = !DILocation(line: 0, scope: !5017)
!5022 = !DILocation(line: 370, column: 12, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5006, file: !2584, line: 370, column: 6)
!5024 = !DILocation(line: 370, column: 22, scope: !5023)
!5025 = !DILocation(line: 371, column: 19, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !2584, line: 370, column: 42)
!5027 = !DILocation(line: 372, column: 2, scope: !5026)
!5028 = !DILocation(line: 376, column: 2, scope: !5006)
!5029 = distinct !DISubprogram(name: "extract_width", scope: !2584, file: !2584, line: 388, type: !4848, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !5030)
!5030 = !{!5031, !5032, !5033, !5034}
!5031 = !DILocalVariable(name: "conv", arg: 1, scope: !5029, file: !2584, line: 388, type: !4504)
!5032 = !DILocalVariable(name: "sp", arg: 2, scope: !5029, file: !2584, line: 389, type: !144)
!5033 = !DILocalVariable(name: "wp", scope: !5029, file: !2584, line: 398, type: !144)
!5034 = !DILocalVariable(name: "width", scope: !5029, file: !2584, line: 399, type: !344)
!5035 = !DILocation(line: 0, scope: !5029)
!5036 = !DILocation(line: 391, column: 8, scope: !5029)
!5037 = !DILocation(line: 391, column: 22, scope: !5029)
!5038 = !DILocation(line: 393, column: 6, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5029, file: !2584, line: 393, column: 6)
!5040 = !DILocation(line: 393, column: 10, scope: !5039)
!5041 = !DILocation(line: 393, column: 6, scope: !5029)
!5042 = !DILocation(line: 394, column: 20, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5039, file: !2584, line: 393, column: 18)
!5044 = !DILocation(line: 395, column: 10, scope: !5043)
!5045 = !DILocation(line: 395, column: 3, scope: !5043)
!5046 = !DILocation(line: 399, column: 17, scope: !5029)
!5047 = !DILocation(line: 401, column: 6, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5029, file: !2584, line: 401, column: 6)
!5049 = !DILocation(line: 401, column: 9, scope: !5048)
!5050 = !DILocation(line: 401, column: 6, scope: !5029)
!5051 = !DILocation(line: 402, column: 23, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5048, file: !2584, line: 401, column: 16)
!5053 = !DILocation(line: 403, column: 9, scope: !5052)
!5054 = !DILocation(line: 403, column: 21, scope: !5052)
!5055 = !DILocation(line: 405, column: 11, scope: !5052)
!5056 = !DILocation(line: 404, column: 21, scope: !5052)
!5057 = !DILocation(line: 406, column: 2, scope: !5052)
!5058 = !DILocation(line: 409, column: 1, scope: !5029)
!5059 = distinct !DISubprogram(name: "extract_prec", scope: !2584, file: !2584, line: 420, type: !4848, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !5060)
!5060 = !{!5061, !5062, !5063}
!5061 = !DILocalVariable(name: "conv", arg: 1, scope: !5059, file: !2584, line: 420, type: !4504)
!5062 = !DILocalVariable(name: "sp", arg: 2, scope: !5059, file: !2584, line: 421, type: !144)
!5063 = !DILocalVariable(name: "prec", scope: !5059, file: !2584, line: 435, type: !344)
!5064 = !DILocation(line: 0, scope: !5059)
!5065 = !DILocation(line: 423, column: 24, scope: !5059)
!5066 = !DILocation(line: 423, column: 28, scope: !5059)
!5067 = !DILocation(line: 423, column: 8, scope: !5059)
!5068 = !DILocation(line: 423, column: 21, scope: !5059)
!5069 = !DILocation(line: 425, column: 6, scope: !5059)
!5070 = !DILocation(line: 428, column: 2, scope: !5059)
!5071 = !DILocation(line: 430, column: 6, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5059, file: !2584, line: 430, column: 6)
!5073 = !DILocation(line: 430, column: 10, scope: !5072)
!5074 = !DILocation(line: 430, column: 6, scope: !5059)
!5075 = !DILocation(line: 431, column: 19, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5072, file: !2584, line: 430, column: 18)
!5077 = !DILocation(line: 432, column: 10, scope: !5076)
!5078 = !DILocation(line: 432, column: 3, scope: !5076)
!5079 = !DILocation(line: 435, column: 16, scope: !5059)
!5080 = !DILocation(line: 437, column: 8, scope: !5059)
!5081 = !DILocation(line: 437, column: 19, scope: !5059)
!5082 = !DILocation(line: 439, column: 10, scope: !5059)
!5083 = !DILocation(line: 438, column: 20, scope: !5059)
!5084 = !DILocation(line: 441, column: 9, scope: !5059)
!5085 = !DILocation(line: 442, column: 1, scope: !5059)
!5086 = distinct !DISubprogram(name: "extract_length", scope: !2584, file: !2584, line: 453, type: !4848, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !5087)
!5087 = !{!5088, !5089}
!5088 = !DILocalVariable(name: "conv", arg: 1, scope: !5086, file: !2584, line: 453, type: !4504)
!5089 = !DILocalVariable(name: "sp", arg: 2, scope: !5086, file: !2584, line: 454, type: !144)
!5090 = !DILocation(line: 0, scope: !5086)
!5091 = !DILocation(line: 456, column: 10, scope: !5086)
!5092 = !DILocation(line: 456, column: 2, scope: !5086)
!5093 = !DILocation(line: 458, column: 8, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !2584, line: 458, column: 7)
!5095 = distinct !DILexicalBlock(scope: !5086, file: !2584, line: 456, column: 15)
!5096 = !DILocation(line: 458, column: 7, scope: !5094)
!5097 = !DILocation(line: 458, column: 13, scope: !5094)
!5098 = !DILocation(line: 0, scope: !5094)
!5099 = !DILocation(line: 458, column: 7, scope: !5095)
!5100 = !DILocation(line: 459, column: 21, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5094, file: !2584, line: 458, column: 21)
!5102 = !DILocation(line: 460, column: 4, scope: !5101)
!5103 = !DILocation(line: 461, column: 3, scope: !5101)
!5104 = !DILocation(line: 462, column: 21, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5094, file: !2584, line: 461, column: 10)
!5106 = !DILocation(line: 466, column: 8, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5095, file: !2584, line: 466, column: 7)
!5108 = !DILocation(line: 466, column: 7, scope: !5107)
!5109 = !DILocation(line: 466, column: 13, scope: !5107)
!5110 = !DILocation(line: 0, scope: !5107)
!5111 = !DILocation(line: 466, column: 7, scope: !5095)
!5112 = !DILocation(line: 467, column: 21, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5107, file: !2584, line: 466, column: 21)
!5114 = !DILocation(line: 468, column: 4, scope: !5113)
!5115 = !DILocation(line: 469, column: 3, scope: !5113)
!5116 = !DILocation(line: 470, column: 21, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5107, file: !2584, line: 469, column: 10)
!5118 = !DILocation(line: 474, column: 9, scope: !5095)
!5119 = !DILocation(line: 474, column: 20, scope: !5095)
!5120 = !DILocation(line: 475, column: 3, scope: !5095)
!5121 = !DILocation(line: 476, column: 3, scope: !5095)
!5122 = !DILocation(line: 478, column: 9, scope: !5095)
!5123 = !DILocation(line: 478, column: 20, scope: !5095)
!5124 = !DILocation(line: 479, column: 3, scope: !5095)
!5125 = !DILocation(line: 480, column: 3, scope: !5095)
!5126 = !DILocation(line: 482, column: 9, scope: !5095)
!5127 = !DILocation(line: 482, column: 20, scope: !5095)
!5128 = !DILocation(line: 483, column: 3, scope: !5095)
!5129 = !DILocation(line: 484, column: 3, scope: !5095)
!5130 = !DILocation(line: 486, column: 9, scope: !5095)
!5131 = !DILocation(line: 486, column: 20, scope: !5095)
!5132 = !DILocation(line: 487, column: 3, scope: !5095)
!5133 = !DILocation(line: 492, column: 21, scope: !5095)
!5134 = !DILocation(line: 493, column: 3, scope: !5095)
!5135 = !DILocation(line: 495, column: 9, scope: !5095)
!5136 = !DILocation(line: 495, column: 20, scope: !5095)
!5137 = !DILocation(line: 496, column: 3, scope: !5095)
!5138 = !DILocation(line: 498, column: 2, scope: !5086)
!5139 = distinct !DISubprogram(name: "extract_specifier", scope: !2584, file: !2584, line: 513, type: !4848, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !5140)
!5140 = !{!5141, !5142, !5143, !5144}
!5141 = !DILocalVariable(name: "conv", arg: 1, scope: !5139, file: !2584, line: 513, type: !4504)
!5142 = !DILocalVariable(name: "sp", arg: 2, scope: !5139, file: !2584, line: 514, type: !144)
!5143 = !DILocalVariable(name: "unsupported", scope: !5139, file: !2584, line: 516, type: !157)
!5144 = !DILabel(scope: !5145, name: "int_conv", file: !2584, line: 526)
!5145 = distinct !DILexicalBlock(scope: !5139, file: !2584, line: 520, column: 27)
!5146 = !DILocation(line: 0, scope: !5139)
!5147 = !DILocation(line: 518, column: 20, scope: !5139)
!5148 = !DILocation(line: 518, column: 8, scope: !5139)
!5149 = !DILocation(line: 518, column: 18, scope: !5139)
!5150 = !DILocation(line: 520, column: 2, scope: !5139)
!5151 = !DILocation(line: 525, column: 3, scope: !5145)
!5152 = !DILocation(line: 0, scope: !5145)
!5153 = !DILocation(line: 526, column: 1, scope: !5145)
!5154 = !DILocation(line: 528, column: 24, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5145, file: !2584, line: 528, column: 7)
!5156 = !DILocation(line: 528, column: 7, scope: !5145)
!5157 = !DILocation(line: 535, column: 23, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5145, file: !2584, line: 535, column: 7)
!5159 = !DILocation(line: 535, column: 7, scope: !5145)
!5160 = !DILocation(line: 536, column: 36, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5158, file: !2584, line: 535, column: 31)
!5162 = !DILocation(line: 537, column: 3, scope: !5161)
!5163 = !DILocation(line: 570, column: 9, scope: !5145)
!5164 = !DILocation(line: 570, column: 23, scope: !5145)
!5165 = !DILocation(line: 575, column: 4, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !2584, line: 573, column: 48)
!5167 = distinct !DILexicalBlock(scope: !5145, file: !2584, line: 573, column: 7)
!5168 = !DILocation(line: 603, column: 9, scope: !5145)
!5169 = !DILocation(line: 603, column: 23, scope: !5145)
!5170 = !DILocation(line: 605, column: 24, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5145, file: !2584, line: 605, column: 7)
!5172 = !DILocation(line: 605, column: 7, scope: !5145)
!5173 = !DILocation(line: 612, column: 9, scope: !5145)
!5174 = !DILocation(line: 612, column: 23, scope: !5145)
!5175 = !DILocation(line: 619, column: 24, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5145, file: !2584, line: 619, column: 7)
!5177 = !DILocation(line: 619, column: 7, scope: !5145)
!5178 = !DILocation(line: 625, column: 9, scope: !5145)
!5179 = !DILocation(line: 625, column: 17, scope: !5145)
!5180 = !DILocation(line: 626, column: 3, scope: !5145)
!5181 = !DILocation(line: 629, column: 20, scope: !5139)
!5182 = !DILocation(line: 629, column: 8, scope: !5139)
!5183 = !DILocation(line: 518, column: 23, scope: !5139)
!5184 = !DILocation(line: 631, column: 2, scope: !5139)
!5185 = distinct !DISubprogram(name: "extract_decimal", scope: !2584, file: !2584, line: 318, type: !5186, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !5189)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!344, !5188}
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5189 = !{!5190, !5191, !5192}
!5190 = !DILocalVariable(name: "str", arg: 1, scope: !5185, file: !2584, line: 318, type: !5188)
!5191 = !DILocalVariable(name: "sp", scope: !5185, file: !2584, line: 320, type: !144)
!5192 = !DILocalVariable(name: "val", scope: !5185, file: !2584, line: 321, type: !344)
!5193 = !DILocation(line: 0, scope: !5185)
!5194 = !DILocation(line: 320, column: 19, scope: !5185)
!5195 = !DILocation(line: 323, column: 37, scope: !5185)
!5196 = !DILocation(line: 323, column: 17, scope: !5185)
!5197 = !DILocation(line: 323, column: 9, scope: !5185)
!5198 = !DILocation(line: 323, column: 2, scope: !5185)
!5199 = !DILocation(line: 324, column: 13, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5185, file: !2584, line: 323, column: 43)
!5201 = !DILocation(line: 324, column: 24, scope: !5200)
!5202 = !DILocation(line: 324, column: 19, scope: !5200)
!5203 = !DILocation(line: 324, column: 27, scope: !5200)
!5204 = distinct !{!5204, !5198, !5205}
!5205 = !DILocation(line: 325, column: 2, scope: !5185)
!5206 = !DILocation(line: 326, column: 7, scope: !5185)
!5207 = !DILocation(line: 327, column: 2, scope: !5185)
!5208 = distinct !DISubprogram(name: "isdigit", scope: !4987, file: !4987, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !5209)
!5209 = !{!5210}
!5210 = !DILocalVariable(name: "a", arg: 1, scope: !5208, file: !4987, line: 43, type: !103)
!5211 = !DILocation(line: 0, scope: !5208)
!5212 = !DILocation(line: 45, column: 29, scope: !5208)
!5213 = !DILocation(line: 45, column: 45, scope: !5208)
!5214 = !DILocation(line: 45, column: 2, scope: !5208)
!5215 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5216, file: !5216, line: 9, type: !3237, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !461)
!5216 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!5217 = !DILocation(line: 11, column: 1, scope: !5215)
!5218 = !{i64 2147562298, i64 2147562341, i64 2147562381}
!5219 = !DILocation(line: 12, column: 1, scope: !5215)
!5220 = !{i64 2147566525, i64 2147566568, i64 2147566608}
!5221 = !DILocation(line: 13, column: 1, scope: !5215)
!5222 = !{i64 2147566734, i64 2147566777, i64 2147566817}
!5223 = !DILocation(line: 14, column: 1, scope: !5215)
!5224 = !{i64 2147566951, i64 2147566994, i64 2147567034}
!5225 = !DILocation(line: 15, column: 1, scope: !5215)
!5226 = !{i64 2147567120, i64 2147567163, i64 2147567203}
!5227 = !DILocation(line: 16, column: 1, scope: !5215)
!5228 = !{i64 2147567283, i64 2147567326, i64 2147567366}
!5229 = !DILocation(line: 17, column: 1, scope: !5215)
!5230 = !{i64 2147567467, i64 2147567510, i64 2147567550}
!5231 = !DILocation(line: 18, column: 1, scope: !5215)
!5232 = !{i64 2147567646, i64 2147567689, i64 2147567729}
!5233 = !DILocation(line: 19, column: 1, scope: !5215)
!5234 = !{i64 2147567888, i64 2147567931, i64 2147567971}
!5235 = !DILocation(line: 20, column: 1, scope: !5215)
!5236 = !{i64 2147568123, i64 2147568166, i64 2147568206}
!5237 = !DILocation(line: 21, column: 1, scope: !5215)
!5238 = !{i64 2147568310, i64 2147568353, i64 2147568393}
!5239 = !DILocation(line: 22, column: 1, scope: !5215)
!5240 = !{i64 2147568526, i64 2147568569, i64 2147568609}
!5241 = !DILocation(line: 23, column: 1, scope: !5215)
!5242 = !{i64 2147568729, i64 2147568772, i64 2147568812}
!5243 = !DILocation(line: 24, column: 1, scope: !5215)
!5244 = !{i64 2147568932, i64 2147568975, i64 2147569015}
!5245 = !DILocation(line: 25, column: 1, scope: !5215)
!5246 = !{i64 2147569107, i64 2147569150, i64 2147569190}
!5247 = !DILocation(line: 26, column: 1, scope: !5215)
!5248 = !{i64 2147569315, i64 2147569358, i64 2147569398}
!5249 = !DILocation(line: 27, column: 1, scope: !5215)
!5250 = !{i64 2147569519, i64 2147569562, i64 2147569602}
!5251 = !DILocation(line: 28, column: 1, scope: !5215)
!5252 = !{i64 2147569712, i64 2147569755, i64 2147569795}
!5253 = !DILocation(line: 29, column: 1, scope: !5215)
!5254 = !{i64 2147569914, i64 2147569957, i64 2147569997}
!5255 = !DILocation(line: 30, column: 1, scope: !5215)
!5256 = !{i64 2147570141, i64 2147570184, i64 2147570224}
!5257 = !DILocation(line: 31, column: 1, scope: !5215)
!5258 = !{i64 2147570343, i64 2147570386, i64 2147570426}
!5259 = !DILocation(line: 32, column: 1, scope: !5215)
!5260 = !{i64 2147570558, i64 2147570601, i64 2147570641}
!5261 = !DILocation(line: 33, column: 1, scope: !5215)
!5262 = !{i64 2147570730, i64 2147570773, i64 2147570813}
!5263 = !DILocation(line: 34, column: 1, scope: !5215)
!5264 = !{i64 2147570932, i64 2147570975, i64 2147571015}
!5265 = !DILocation(line: 35, column: 1, scope: !5215)
!5266 = !{i64 2147571158, i64 2147571201, i64 2147571241}
!5267 = !DILocation(line: 36, column: 1, scope: !5215)
!5268 = !{i64 2147571357, i64 2147571400, i64 2147571440}
!5269 = !DILocation(line: 37, column: 1, scope: !5215)
!5270 = !{i64 2147571532, i64 2147571575, i64 2147571615}
!5271 = !DILocation(line: 38, column: 1, scope: !5215)
!5272 = !{i64 2147571785, i64 2147571828, i64 2147571868}
!5273 = !DILocation(line: 39, column: 1, scope: !5215)
!5274 = !{i64 2147572026, i64 2147572069, i64 2147572109}
!5275 = !DILocation(line: 40, column: 1, scope: !5215)
!5276 = !{i64 2147572261, i64 2147572304, i64 2147572344}
!5277 = !DILocation(line: 41, column: 1, scope: !5215)
!5278 = !{i64 2147572493, i64 2147572536, i64 2147572576}
!5279 = !DILocation(line: 42, column: 1, scope: !5215)
!5280 = !{i64 2147572719, i64 2147572762, i64 2147572802}
!5281 = !DILocation(line: 43, column: 1, scope: !5215)
!5282 = !{i64 2147572945, i64 2147572988, i64 2147573028}
!5283 = !DILocation(line: 44, column: 1, scope: !5215)
!5284 = !{i64 2147573171, i64 2147573214, i64 2147573254}
!5285 = !DILocation(line: 45, column: 1, scope: !5215)
!5286 = !{i64 2147573406, i64 2147573449, i64 2147573489}
!5287 = !DILocation(line: 46, column: 1, scope: !5215)
!5288 = !{i64 2147573632, i64 2147573675, i64 2147573715}
!5289 = !DILocation(line: 47, column: 1, scope: !5215)
!5290 = !{i64 2147573879, i64 2147573922, i64 2147573962}
!5291 = !DILocation(line: 48, column: 1, scope: !5215)
!5292 = !{i64 2147574108, i64 2147574151, i64 2147574191}
!5293 = !DILocation(line: 49, column: 1, scope: !5215)
!5294 = !{i64 2147574340, i64 2147574383, i64 2147574423}
!5295 = !DILocation(line: 50, column: 1, scope: !5215)
!5296 = !{i64 2147574584, i64 2147574627, i64 2147574667}
!5297 = !DILocation(line: 51, column: 1, scope: !5215)
!5298 = !{i64 2147574822, i64 2147574865, i64 2147574905}
!5299 = !DILocation(line: 52, column: 1, scope: !5215)
!5300 = !{i64 2147575096, i64 2147575139, i64 2147575179}
!5301 = !DILocation(line: 53, column: 1, scope: !5215)
!5302 = !{i64 2147579395, i64 2147579438, i64 2147579478}
!5303 = !DILocation(line: 54, column: 1, scope: !5215)
!5304 = !{i64 2147579648, i64 2147579691, i64 2147579731}
!5305 = !DILocation(line: 55, column: 1, scope: !5215)
!5306 = !{i64 2147579892, i64 2147579935, i64 2147579975}
!5307 = !DILocation(line: 56, column: 1, scope: !5215)
!5308 = !{i64 2147580127, i64 2147580170, i64 2147580210}
!5309 = !DILocation(line: 57, column: 1, scope: !5215)
!5310 = !{i64 2147580377, i64 2147580420, i64 2147580460}
!5311 = !DILocation(line: 58, column: 1, scope: !5215)
!5312 = !{i64 2147580624, i64 2147580667, i64 2147580707}
!5313 = !DILocation(line: 59, column: 1, scope: !5215)
!5314 = !{i64 2147580859, i64 2147580902, i64 2147580942}
!5315 = !DILocation(line: 60, column: 1, scope: !5215)
!5316 = !{i64 2147581094, i64 2147581137, i64 2147581177}
!5317 = !DILocation(line: 61, column: 1, scope: !5215)
!5318 = !{i64 2147581329, i64 2147581372, i64 2147581412}
!5319 = !DILocation(line: 62, column: 1, scope: !5215)
!5320 = !{i64 2147581567, i64 2147581610, i64 2147581650}
!5321 = !DILocation(line: 63, column: 1, scope: !5215)
!5322 = !{i64 2147581808, i64 2147581851, i64 2147581891}
!5323 = !DILocation(line: 64, column: 1, scope: !5215)
!5324 = !{i64 2147582088, i64 2147582131, i64 2147582171}
!5325 = !DILocation(line: 65, column: 1, scope: !5215)
!5326 = !{i64 2147582347, i64 2147582390, i64 2147582430}
!5327 = !DILocation(line: 66, column: 1, scope: !5215)
!5328 = !{i64 2147582576, i64 2147582619, i64 2147582659}
!5329 = !DILocation(line: 67, column: 1, scope: !5215)
!5330 = !{i64 2147582802, i64 2147582845, i64 2147582885}
!5331 = !DILocation(line: 68, column: 1, scope: !5215)
!5332 = !{i64 2147583040, i64 2147583083, i64 2147583123}
!5333 = !DILocation(line: 69, column: 1, scope: !5215)
!5334 = !{i64 2147583269, i64 2147583312, i64 2147583352}
!5335 = !DILocation(line: 70, column: 1, scope: !5215)
!5336 = !{i64 2147583477, i64 2147583520, i64 2147583560}
!5337 = !DILocation(line: 71, column: 1, scope: !5215)
!5338 = !{i64 2147583688, i64 2147583731, i64 2147583771}
!5339 = !DILocation(line: 72, column: 1, scope: !5215)
!5340 = !{i64 2147583923, i64 2147583966, i64 2147584006}
!5341 = !DILocation(line: 73, column: 1, scope: !5215)
!5342 = !{i64 2147584152, i64 2147584195, i64 2147584235}
!5343 = !DILocation(line: 74, column: 1, scope: !5215)
!5344 = !{i64 2147584390, i64 2147584433, i64 2147584473}
!5345 = !DILocation(line: 75, column: 1, scope: !5215)
!5346 = !{i64 2147584622, i64 2147584665, i64 2147584705}
!5347 = !DILocation(line: 76, column: 1, scope: !5215)
!5348 = !{i64 2147584848, i64 2147584891, i64 2147584931}
!5349 = !DILocation(line: 77, column: 1, scope: !5215)
!5350 = !{i64 2147585065, i64 2147585108, i64 2147585148}
!5351 = !DILocation(line: 78, column: 1, scope: !5215)
!5352 = !{i64 2147585297, i64 2147585340, i64 2147585380}
!5353 = !DILocation(line: 79, column: 1, scope: !5215)
!5354 = !{i64 2147585523, i64 2147585566, i64 2147585606}
!5355 = !DILocation(line: 80, column: 1, scope: !5215)
!5356 = !{i64 2147585737, i64 2147585780, i64 2147585820}
!5357 = !DILocation(line: 81, column: 1, scope: !5215)
!5358 = !{i64 2147585957, i64 2147586000, i64 2147586040}
!5359 = !DILocation(line: 82, column: 1, scope: !5215)
!5360 = !{i64 2147586189, i64 2147586232, i64 2147586272}
!5361 = !DILocation(line: 83, column: 1, scope: !5215)
!5362 = !{i64 2147586397, i64 2147586440, i64 2147586480}
!5363 = !DILocation(line: 84, column: 1, scope: !5215)
!5364 = !{i64 2147586602, i64 2147586645, i64 2147586685}
!5365 = !DILocation(line: 85, column: 1, scope: !5215)
!5366 = !{i64 2147586819, i64 2147586862, i64 2147586902}
!5367 = !DILocation(line: 86, column: 1, scope: !5215)
!5368 = !{i64 2147587033, i64 2147587076, i64 2147587116}
!5369 = !DILocation(line: 87, column: 1, scope: !5215)
!5370 = !{i64 2147587259, i64 2147587302, i64 2147587342}
!5371 = !DILocation(line: 88, column: 1, scope: !5215)
!5372 = !{i64 2147591540, i64 2147591583, i64 2147591623}
!5373 = !DILocation(line: 89, column: 1, scope: !5215)
!5374 = !{i64 2147591745, i64 2147591788, i64 2147591828}
!5375 = !DILocation(line: 90, column: 1, scope: !5215)
!5376 = !{i64 2147591977, i64 2147592020, i64 2147592060}
!5377 = !DILocation(line: 91, column: 1, scope: !5215)
!5378 = !{i64 2147592212, i64 2147592255, i64 2147592295}
!5379 = !DILocation(line: 92, column: 1, scope: !5215)
!5380 = !{i64 2147592462, i64 2147592505, i64 2147592545}
!5381 = !DILocation(line: 93, column: 1, scope: !5215)
!5382 = !{i64 2147592712, i64 2147592755, i64 2147592795}
!5383 = !DILocation(line: 94, column: 1, scope: !5215)
!5384 = !{i64 2147592950, i64 2147592993, i64 2147593033}
!5385 = !DILocation(line: 95, column: 1, scope: !5215)
!5386 = !{i64 2147593161, i64 2147593204, i64 2147593244}
!5387 = !DILocation(line: 96, column: 1, scope: !5215)
!5388 = !{i64 2147593378, i64 2147593421, i64 2147593461}
!5389 = !DILocation(line: 97, column: 1, scope: !5215)
!5390 = !{i64 2147593574, i64 2147593617, i64 2147593657}
!5391 = !DILocation(line: 98, column: 1, scope: !5215)
!5392 = !{i64 2147593776, i64 2147593819, i64 2147593859}
!5393 = !DILocation(line: 99, column: 1, scope: !5215)
!5394 = !{i64 2147593969, i64 2147594012, i64 2147594052}
!5395 = !DILocation(line: 100, column: 1, scope: !5215)
!5396 = !{i64 2147594177, i64 2147594220, i64 2147594260}
!5397 = !DILocation(line: 101, column: 1, scope: !5215)
!5398 = !{i64 2147594373, i64 2147594416, i64 2147594456}
!5399 = !DILocation(line: 102, column: 1, scope: !5215)
!5400 = !{i64 2147594581, i64 2147594624, i64 2147594664}
!5401 = !DILocation(line: 103, column: 1, scope: !5215)
!5402 = !{i64 2147594792, i64 2147594835, i64 2147594875}
!5403 = !DILocation(line: 104, column: 1, scope: !5215)
!5404 = !{i64 2147594991, i64 2147595034, i64 2147595074}
!5405 = !DILocation(line: 105, column: 1, scope: !5215)
!5406 = !{i64 2147595166, i64 2147595209, i64 2147595249}
!5407 = !DILocation(line: 106, column: 1, scope: !5215)
!5408 = !{i64 2147595350, i64 2147595393, i64 2147595433}
!5409 = !DILocation(line: 107, column: 1, scope: !5215)
!5410 = !{i64 2147595552, i64 2147595595, i64 2147595635}
!5411 = !DILocation(line: 108, column: 1, scope: !5215)
!5412 = !{i64 2147595751, i64 2147595794, i64 2147595834}
!5413 = !DILocation(line: 109, column: 1, scope: !5215)
!5414 = !{i64 2147595917, i64 2147595960, i64 2147596000}
!5415 = !DILocation(line: 110, column: 1, scope: !5215)
!5416 = !{i64 2147596101, i64 2147596144, i64 2147596184}
!5417 = !DILocation(line: 111, column: 1, scope: !5215)
!5418 = !{i64 2147596291, i64 2147596334, i64 2147596374}
!5419 = !DILocation(line: 112, column: 1, scope: !5215)
!5420 = !{i64 2147596475, i64 2147596518, i64 2147596558}
!5421 = !DILocation(line: 113, column: 1, scope: !5215)
!5422 = !{i64 2147596689, i64 2147596732, i64 2147596772}
!5423 = !DILocation(line: 114, column: 1, scope: !5215)
!5424 = !{i64 2147596900, i64 2147596943, i64 2147596983}
!5425 = !DILocation(line: 115, column: 1, scope: !5215)
!5426 = !{i64 2147597123, i64 2147597166, i64 2147597206}
!5427 = !DILocation(line: 116, column: 1, scope: !5215)
!5428 = !{i64 2147597307, i64 2147597350, i64 2147597390}
!5429 = !DILocation(line: 117, column: 1, scope: !5215)
!5430 = !{i64 2147597521, i64 2147597564, i64 2147597604}
!5431 = !DILocation(line: 118, column: 1, scope: !5215)
!5432 = !{i64 2147597687, i64 2147597730, i64 2147597770}
!5433 = !DILocation(line: 119, column: 1, scope: !5215)
!5434 = !{i64 2147597868, i64 2147597911, i64 2147597951}
!5435 = !DILocation(line: 120, column: 1, scope: !5215)
!5436 = !{i64 2147598061, i64 2147598104, i64 2147598144}
!5437 = !DILocation(line: 121, column: 1, scope: !5215)
!5438 = !{i64 2147598287, i64 2147598330, i64 2147598370}
!5439 = !DILocation(line: 122, column: 1, scope: !5215)
!5440 = !{i64 2147598501, i64 2147598544, i64 2147598584}
!5441 = !DILocation(line: 123, column: 1, scope: !5215)
!5442 = !{i64 2147598727, i64 2147598770, i64 2147598810}
!5443 = !DILocation(line: 124, column: 1, scope: !5215)
!5444 = !{i64 2147598944, i64 2147598987, i64 2147599027}
!5445 = !DILocation(line: 125, column: 1, scope: !5215)
!5446 = !{i64 2147599221, i64 2147599264, i64 2147599304}
!5447 = !DILocation(line: 126, column: 1, scope: !5215)
!5448 = !{i64 2147599447, i64 2147599490, i64 2147599530}
!5449 = !DILocation(line: 127, column: 1, scope: !5215)
!5450 = !{i64 2147599655, i64 2147599698, i64 2147599738}
!5451 = !DILocation(line: 128, column: 1, scope: !5215)
!5452 = !{i64 2147599851, i64 2147599894, i64 2147599934}
!5453 = !DILocation(line: 129, column: 1, scope: !5215)
!5454 = !{i64 2147600116, i64 2147600159, i64 2147600199}
!5455 = !DILocation(line: 130, column: 1, scope: !5215)
!5456 = !{i64 2147600330, i64 2147600373, i64 2147600413}
!5457 = !DILocation(line: 131, column: 1, scope: !5215)
!5458 = !{i64 2147600505, i64 2147600548, i64 2147600588}
!5459 = !DILocation(line: 132, column: 1, scope: !5215)
!5460 = !{i64 2147604820, i64 2147604863, i64 2147604903}
!5461 = !DILocation(line: 133, column: 1, scope: !5215)
!5462 = !{i64 2147605019, i64 2147605062, i64 2147605102}
!5463 = !DILocation(line: 134, column: 1, scope: !5215)
!5464 = !{i64 2147605261, i64 2147605304, i64 2147605344}
!5465 = !DILocation(line: 135, column: 1, scope: !5215)
!5466 = !{i64 2147605424, i64 2147605467, i64 2147605507}
!5467 = !DILocation(line: 136, column: 1, scope: !5215)
!5468 = !{i64 2147605611, i64 2147605654, i64 2147605694}
!5469 = !DILocation(line: 137, column: 1, scope: !5215)
!5470 = !{i64 2147605804, i64 2147605847, i64 2147605887}
!5471 = !DILocation(line: 138, column: 1, scope: !5215)
!5472 = !{i64 2147605987, i64 2147606030, i64 2147606070}
!5473 = !DILocation(line: 139, column: 1, scope: !5215)
!5474 = !{i64 2147606201, i64 2147606244, i64 2147606284}
!5475 = !DILocation(line: 140, column: 1, scope: !5215)
!5476 = !{i64 2147606412, i64 2147606455, i64 2147606495}
!5477 = !DILocation(line: 141, column: 1, scope: !5215)
!5478 = !{i64 2147606632, i64 2147606675, i64 2147606715}
!5479 = !DILocation(line: 142, column: 1, scope: !5215)
!5480 = !{i64 2147606839, i64 2147606882, i64 2147606922}
!5481 = !DILocation(line: 143, column: 1, scope: !5215)
!5482 = !{i64 2147607112, i64 2147607155, i64 2147607195}
!5483 = !DILocation(line: 144, column: 1, scope: !5215)
!5484 = !{i64 2147607360, i64 2147607403, i64 2147607443}
!5485 = !DILocation(line: 145, column: 1, scope: !5215)
!5486 = !{i64 2147607559, i64 2147607602, i64 2147607642}
!5487 = !DILocation(line: 146, column: 1, scope: !5215)
!5488 = !{i64 2147607794, i64 2147607837, i64 2147607877}
!5489 = !DILocation(line: 147, column: 1, scope: !5215)
!5490 = !{i64 2147608044, i64 2147608087, i64 2147608127}
!5491 = !DILocation(line: 148, column: 1, scope: !5215)
!5492 = !{i64 2147608246, i64 2147608289, i64 2147608329}
!5493 = !DILocation(line: 149, column: 1, scope: !5215)
!5494 = !{i64 2147608469, i64 2147608512, i64 2147608552}
!5495 = !DILocation(line: 150, column: 1, scope: !5215)
!5496 = !{i64 2147608683, i64 2147608726, i64 2147608766}
!5497 = !DILocation(line: 151, column: 1, scope: !5215)
!5498 = !{i64 2147608927, i64 2147608970, i64 2147609010}
!5499 = !DILocation(line: 152, column: 1, scope: !5215)
!5500 = !{i64 2147609156, i64 2147609199, i64 2147609239}
!5501 = !DILocation(line: 153, column: 1, scope: !5215)
!5502 = !{i64 2147609385, i64 2147609428, i64 2147609468}
!5503 = !DILocation(line: 154, column: 1, scope: !5215)
!5504 = !{i64 2147609593, i64 2147609636, i64 2147609676}
!5505 = !DILocation(line: 155, column: 1, scope: !5215)
!5506 = !{i64 2147609831, i64 2147609874, i64 2147609914}
!5507 = !DILocation(line: 156, column: 1, scope: !5215)
!5508 = !{i64 2147610057, i64 2147610100, i64 2147610140}
!5509 = !DILocation(line: 157, column: 1, scope: !5215)
!5510 = !{i64 2147610316, i64 2147610359, i64 2147610399}
!5511 = !DILocation(line: 158, column: 1, scope: !5215)
!5512 = !{i64 2147610536, i64 2147610579, i64 2147610619}
!5513 = !DILocation(line: 159, column: 1, scope: !5215)
!5514 = !{i64 2147610768, i64 2147610811, i64 2147610851}
!5515 = !DILocation(line: 160, column: 1, scope: !5215)
!5516 = !{i64 2147611009, i64 2147611052, i64 2147611092}
!5517 = !DILocation(line: 161, column: 1, scope: !5215)
!5518 = !{i64 2147611250, i64 2147611293, i64 2147611333}
!5519 = !DILocation(line: 162, column: 1, scope: !5215)
!5520 = !{i64 2147611473, i64 2147611516, i64 2147611556}
!5521 = !DILocation(line: 163, column: 1, scope: !5215)
!5522 = !{i64 2147611690, i64 2147611733, i64 2147611773}
!5523 = !DILocation(line: 164, column: 1, scope: !5215)
!5524 = !{i64 2147611931, i64 2147611974, i64 2147612014}
!5525 = !DILocation(line: 165, column: 1, scope: !5215)
!5526 = !{i64 2147612118, i64 2147612161, i64 2147612201}
!5527 = !DILocation(line: 166, column: 1, scope: !5215)
!5528 = !{i64 2147612305, i64 2147612348, i64 2147612388}
!5529 = !DILocation(line: 167, column: 1, scope: !5215)
!5530 = !{i64 2147612468, i64 2147612511, i64 2147612551}
!5531 = !DILocation(line: 168, column: 1, scope: !5215)
!5532 = !{i64 2147612727, i64 2147612770, i64 2147612810}
!5533 = !DILocation(line: 169, column: 1, scope: !5215)
!5534 = !{i64 2147612950, i64 2147612993, i64 2147613033}
!5535 = !DILocation(line: 170, column: 1, scope: !5215)
!5536 = !{i64 2147613179, i64 2147613222, i64 2147613262}
!5537 = !DILocation(line: 171, column: 1, scope: !5215)
!5538 = !{i64 2147617436, i64 2147617479, i64 2147617519}
!5539 = !DILocation(line: 172, column: 1, scope: !5215)
!5540 = !{i64 2147617648, i64 2147617691, i64 2147617731}
!5541 = !DILocation(line: 173, column: 1, scope: !5215)
!5542 = !{i64 2147617869, i64 2147617912, i64 2147617952}
!5543 = !DILocation(line: 174, column: 1, scope: !5215)
!5544 = !{i64 2147618083, i64 2147618126, i64 2147618166}
!5545 = !DILocation(line: 175, column: 1, scope: !5215)
!5546 = !{i64 2147618273, i64 2147618316, i64 2147618356}
!5547 = !DILocation(line: 176, column: 1, scope: !5215)
!5548 = !{i64 2147618472, i64 2147618515, i64 2147618555}
!5549 = !DILocation(line: 177, column: 1, scope: !5215)
!5550 = !{i64 2147618677, i64 2147618720, i64 2147618760}
!5551 = !DILocation(line: 178, column: 1, scope: !5215)
!5552 = !{i64 2147618897, i64 2147618940, i64 2147618980}
!5553 = !DILocation(line: 179, column: 1, scope: !5215)
!5554 = !{i64 2147619098, i64 2147619141, i64 2147619181}
!5555 = !DILocation(line: 180, column: 1, scope: !5215)
!5556 = !{i64 2147619297, i64 2147619340, i64 2147619380}
!5557 = !DILocation(line: 181, column: 1, scope: !5215)
!5558 = !{i64 2147619502, i64 2147619545, i64 2147619585}
!5559 = !DILocation(line: 182, column: 1, scope: !5215)
!5560 = !{i64 2147619671, i64 2147619714, i64 2147619754}
!5561 = !DILocation(line: 183, column: 1, scope: !5215)
!5562 = !{i64 2147619855, i64 2147619898, i64 2147619938}
!5563 = !DILocation(line: 184, column: 1, scope: !5215)
!5564 = !{i64 2147620039, i64 2147620082, i64 2147620122}
!5565 = !DILocation(line: 185, column: 1, scope: !5215)
!5566 = !{i64 2147620226, i64 2147620269, i64 2147620309}
!5567 = !DILocation(line: 186, column: 1, scope: !5215)
!5568 = !{i64 2147620410, i64 2147620453, i64 2147620493}
!5569 = !DILocation(line: 187, column: 1, scope: !5215)
!5570 = !{i64 2147620648, i64 2147620691, i64 2147620731}
!5571 = !DILocation(line: 188, column: 1, scope: !5215)
!5572 = !{i64 2147620878, i64 2147620921, i64 2147620961}
!5573 = !DILocation(line: 189, column: 1, scope: !5215)
!5574 = !{i64 2147621107, i64 2147621150, i64 2147621190}
!5575 = !DILocation(line: 190, column: 1, scope: !5215)
!5576 = !{i64 2147621294, i64 2147621337, i64 2147621377}
!5577 = !DILocation(line: 191, column: 1, scope: !5215)
!5578 = !{i64 2147621490, i64 2147621533, i64 2147621573}
!5579 = !DILocation(line: 192, column: 1, scope: !5215)
!5580 = !{i64 2147621698, i64 2147621741, i64 2147621781}
!5581 = !DILocation(line: 193, column: 1, scope: !5215)
!5582 = !{i64 2147621910, i64 2147621953, i64 2147621993}
!5583 = !DILocation(line: 194, column: 1, scope: !5215)
!5584 = !{i64 2147622109, i64 2147622152, i64 2147622192}
!5585 = !DILocation(line: 195, column: 1, scope: !5215)
!5586 = !{i64 2147622347, i64 2147622390, i64 2147622430}
!5587 = !DILocation(line: 196, column: 1, scope: !5215)
!5588 = !{i64 2147622543, i64 2147622586, i64 2147622626}
!5589 = !DILocation(line: 197, column: 1, scope: !5215)
!5590 = !{i64 2147622745, i64 2147622788, i64 2147622828}
!5591 = !DILocation(line: 198, column: 1, scope: !5215)
!5592 = !{i64 2147622938, i64 2147622981, i64 2147623021}
!5593 = !DILocation(line: 199, column: 1, scope: !5215)
!5594 = !{i64 2147623172, i64 2147623215, i64 2147623255}
!5595 = !DILocation(line: 200, column: 1, scope: !5215)
!5596 = !{i64 2147623335, i64 2147623378, i64 2147623418}
!5597 = !DILocation(line: 201, column: 1, scope: !5215)
!5598 = !{i64 2147623574, i64 2147623617, i64 2147623657}
!5599 = !DILocation(line: 202, column: 1, scope: !5215)
!5600 = !{i64 2147623813, i64 2147623856, i64 2147623896}
!5601 = !DILocation(line: 203, column: 1, scope: !5215)
!5602 = !{i64 2147624049, i64 2147624092, i64 2147624132}
!5603 = !DILocation(line: 204, column: 1, scope: !5215)
!5604 = !{i64 2147624279, i64 2147624322, i64 2147624362}
!5605 = !DILocation(line: 205, column: 1, scope: !5215)
!5606 = !{i64 2147624466, i64 2147624509, i64 2147624549}
!5607 = !DILocation(line: 206, column: 1, scope: !5215)
!5608 = !{i64 2147624665, i64 2147624708, i64 2147624748}
!5609 = !DILocation(line: 207, column: 1, scope: !5215)
!5610 = !{i64 2147624936, i64 2147624979, i64 2147625019}
!5611 = !DILocation(line: 208, column: 1, scope: !5215)
!5612 = !{i64 2147625111, i64 2147625154, i64 2147625194}
!5613 = !DILocation(line: 209, column: 1, scope: !5215)
!5614 = !{i64 2147625345, i64 2147625388, i64 2147625428}
!5615 = !DILocation(line: 210, column: 1, scope: !5215)
!5616 = !{i64 2147625553, i64 2147625596, i64 2147625636}
!5617 = !DILocation(line: 211, column: 1, scope: !5215)
!5618 = !{i64 2147625752, i64 2147625795, i64 2147625835}
!5619 = !DILocation(line: 212, column: 1, scope: !5215)
!5620 = !{i64 2147625970, i64 2147626013, i64 2147626053}
!5621 = !DILocation(line: 213, column: 1, scope: !5215)
!5622 = !{i64 2147626160, i64 2147626203, i64 2147626243}
!5623 = !DILocation(line: 214, column: 1, scope: !5215)
!5624 = !{i64 2147630468, i64 2147630511, i64 2147630551}
!5625 = !DILocation(line: 215, column: 1, scope: !5215)
!5626 = !{i64 2147630664, i64 2147630707, i64 2147630747}
!5627 = !DILocation(line: 216, column: 1, scope: !5215)
!5628 = !{i64 2147630870, i64 2147630913, i64 2147630953}
!5629 = !DILocation(line: 217, column: 1, scope: !5215)
!5630 = !{i64 2147631075, i64 2147631118, i64 2147631158}
!5631 = !DILocation(line: 218, column: 1, scope: !5215)
!5632 = !{i64 2147631289, i64 2147631332, i64 2147631372}
!5633 = !DILocation(line: 219, column: 1, scope: !5215)
!5634 = !{i64 2147631515, i64 2147631558, i64 2147631598}
!5635 = !DILocation(line: 220, column: 1, scope: !5215)
!5636 = !{i64 2147631747, i64 2147631790, i64 2147631830}
!5637 = !DILocation(line: 221, column: 1, scope: !5215)
!5638 = !{i64 2147631931, i64 2147631974, i64 2147632014}
!5639 = !DILocation(line: 222, column: 1, scope: !5215)
!5640 = !{i64 2147632140, i64 2147632183, i64 2147632223}
!5641 = !DILocation(line: 223, column: 1, scope: !5215)
!5642 = !{i64 2147632324, i64 2147632367, i64 2147632407}
!5643 = !DILocation(line: 224, column: 1, scope: !5215)
!5644 = !{i64 2147632550, i64 2147632593, i64 2147632633}
!5645 = !DILocation(line: 225, column: 1, scope: !5215)
!5646 = !{i64 2147632776, i64 2147632819, i64 2147632859}
!5647 = !DILocation(line: 226, column: 1, scope: !5215)
!5648 = !{i64 2147633002, i64 2147633045, i64 2147633085}
!5649 = !DILocation(line: 227, column: 1, scope: !5215)
!5650 = !{i64 2147633228, i64 2147633271, i64 2147633311}
!5651 = !DILocation(line: 228, column: 1, scope: !5215)
!5652 = !{i64 2147633454, i64 2147633497, i64 2147633537}
!5653 = !DILocation(line: 229, column: 1, scope: !5215)
!5654 = !{i64 2147633686, i64 2147633729, i64 2147633769}
!5655 = !DILocation(line: 230, column: 1, scope: !5215)
!5656 = !{i64 2147633924, i64 2147633967, i64 2147634007}
!5657 = !DILocation(line: 231, column: 1, scope: !5215)
!5658 = !{i64 2147634144, i64 2147634187, i64 2147634227}
!5659 = !DILocation(line: 232, column: 1, scope: !5215)
!5660 = !{i64 2147634388, i64 2147634431, i64 2147634471}
!5661 = !DILocation(line: 233, column: 1, scope: !5215)
!5662 = !{i64 2147634629, i64 2147634672, i64 2147634712}
!5663 = !DILocation(line: 234, column: 1, scope: !5215)
!5664 = !{i64 2147634864, i64 2147634907, i64 2147634947}
!5665 = !DILocation(line: 235, column: 1, scope: !5215)
!5666 = !{i64 2147635096, i64 2147635139, i64 2147635179}
!5667 = !DILocation(line: 236, column: 1, scope: !5215)
!5668 = !{i64 2147635298, i64 2147635341, i64 2147635381}
!5669 = !DILocation(line: 237, column: 1, scope: !5215)
!5670 = !{i64 2147635548, i64 2147635591, i64 2147635631}
!5671 = !DILocation(line: 238, column: 1, scope: !5215)
!5672 = !{i64 2147635786, i64 2147635829, i64 2147635869}
!5673 = !DILocation(line: 239, column: 1, scope: !5215)
!5674 = !{i64 2147635970, i64 2147636013, i64 2147636053}
!5675 = !DILocation(line: 240, column: 1, scope: !5215)
!5676 = !{i64 2147636194, i64 2147636237, i64 2147636277}
!5677 = !DILocation(line: 241, column: 1, scope: !5215)
!5678 = !{i64 2147636432, i64 2147636475, i64 2147636515}
!5679 = !DILocation(line: 242, column: 1, scope: !5215)
!5680 = !{i64 2147636670, i64 2147636713, i64 2147636753}
!5681 = !DILocation(line: 243, column: 1, scope: !5215)
!5682 = !{i64 2147636863, i64 2147636906, i64 2147636946}
!5683 = !DILocation(line: 244, column: 1, scope: !5215)
!5684 = !{i64 2147637116, i64 2147637159, i64 2147637199}
!5685 = !DILocation(line: 245, column: 1, scope: !5215)
!5686 = !{i64 2147637330, i64 2147637373, i64 2147637413}
!5687 = !DILocation(line: 246, column: 1, scope: !5215)
!5688 = !{i64 2147637538, i64 2147637581, i64 2147637621}
!5689 = !DILocation(line: 247, column: 1, scope: !5215)
!5690 = !{i64 2147637728, i64 2147637771, i64 2147637811}
!5691 = !DILocation(line: 248, column: 1, scope: !5215)
!5692 = !{i64 2147637942, i64 2147637985, i64 2147638025}
!5693 = !DILocation(line: 249, column: 1, scope: !5215)
!5694 = !{i64 2147638204, i64 2147638247, i64 2147638287}
!5695 = !DILocation(line: 250, column: 1, scope: !5215)
!5696 = !{i64 2147638415, i64 2147638458, i64 2147638498}
!5697 = !DILocation(line: 251, column: 1, scope: !5215)
!5698 = !{i64 2147638659, i64 2147638702, i64 2147638742}
!5699 = !DILocation(line: 252, column: 1, scope: !5215)
!5700 = !{i64 2147638870, i64 2147638913, i64 2147638953}
!5701 = !DILocation(line: 253, column: 1, scope: !5215)
!5702 = !{i64 2147643160, i64 2147643203, i64 2147643243}
!5703 = !DILocation(line: 254, column: 1, scope: !5215)
!5704 = !{i64 2147643425, i64 2147643468, i64 2147643508}
!5705 = !DILocation(line: 255, column: 1, scope: !5215)
!5706 = !{i64 2147643630, i64 2147643673, i64 2147643713}
!5707 = !DILocation(line: 256, column: 1, scope: !5215)
!5708 = !{i64 2147643826, i64 2147643869, i64 2147643909}
!5709 = !DILocation(line: 257, column: 1, scope: !5215)
!5710 = !{i64 2147644049, i64 2147644092, i64 2147644132}
!5711 = !DILocation(line: 258, column: 1, scope: !5215)
!5712 = !{i64 2147644212, i64 2147644255, i64 2147644295}
!5713 = !DILocation(line: 259, column: 1, scope: !5215)
!5714 = !{i64 2147644417, i64 2147644460, i64 2147644500}
!5715 = !DILocation(line: 260, column: 1, scope: !5215)
!5716 = !{i64 2147644637, i64 2147644680, i64 2147644720}
!5717 = !DILocation(line: 261, column: 1, scope: !5215)
!5718 = !{i64 2147644851, i64 2147644894, i64 2147644934}
!5719 = !DILocation(line: 262, column: 1, scope: !5215)
!5720 = !{i64 2147645065, i64 2147645108, i64 2147645148}
!5721 = !DILocation(line: 263, column: 1, scope: !5215)
!5722 = !{i64 2147645276, i64 2147645319, i64 2147645359}
!5723 = !DILocation(line: 264, column: 1, scope: !5215)
!5724 = !{i64 2147645469, i64 2147645512, i64 2147645552}
!5725 = !DILocation(line: 265, column: 1, scope: !5215)
!5726 = !{i64 2147645668, i64 2147645711, i64 2147645751}
!5727 = !DILocation(line: 266, column: 1, scope: !5215)
!5728 = !{i64 2147645864, i64 2147645907, i64 2147645947}
!5729 = !DILocation(line: 267, column: 1, scope: !5215)
!5730 = !{i64 2147646063, i64 2147646106, i64 2147646146}
!5731 = !DILocation(line: 268, column: 1, scope: !5215)
!5732 = !{i64 2147646287, i64 2147646330, i64 2147646370}
!5733 = !DILocation(line: 269, column: 1, scope: !5215)
!5734 = !{i64 2147646511, i64 2147646554, i64 2147646594}
!5735 = !DILocation(line: 270, column: 1, scope: !5215)
!5736 = !{i64 2147646683, i64 2147646726, i64 2147646766}
!5737 = !DILocation(line: 271, column: 1, scope: !5215)
!5738 = !{i64 2147646876, i64 2147646919, i64 2147646959}
!5739 = !DILocation(line: 272, column: 1, scope: !5215)
!5740 = !{i64 2147647072, i64 2147647115, i64 2147647155}
!5741 = !DILocation(line: 273, column: 1, scope: !5215)
!5742 = !{i64 2147647299, i64 2147647342, i64 2147647382}
!5743 = !DILocation(line: 274, column: 1, scope: !5215)
!5744 = !{i64 2147647516, i64 2147647559, i64 2147647599}
!5745 = !DILocation(line: 275, column: 1, scope: !5215)
!5746 = !{i64 2147647808, i64 2147647851, i64 2147647891}
!5747 = !DILocation(line: 276, column: 1, scope: !5215)
!5748 = !{i64 2147648040, i64 2147648083, i64 2147648123}
!5749 = !DILocation(line: 277, column: 1, scope: !5215)
!5750 = !{i64 2147648257, i64 2147648300, i64 2147648340}
!5751 = !DILocation(line: 278, column: 1, scope: !5215)
!5752 = !{i64 2147648464, i64 2147648507, i64 2147648547}
!5753 = !DILocation(line: 279, column: 1, scope: !5215)
!5754 = !{i64 2147648665, i64 2147648708, i64 2147648748}
!5755 = !DILocation(line: 280, column: 1, scope: !5215)
!5756 = !{i64 2147648897, i64 2147648940, i64 2147648980}
!5757 = !DILocation(line: 281, column: 1, scope: !5215)
!5758 = !{i64 2147649105, i64 2147649148, i64 2147649188}
!5759 = !DILocation(line: 282, column: 1, scope: !5215)
!5760 = !{i64 2147649295, i64 2147649338, i64 2147649378}
!5761 = !DILocation(line: 283, column: 1, scope: !5215)
!5762 = !{i64 2147649521, i64 2147649564, i64 2147649604}
!5763 = !DILocation(line: 284, column: 1, scope: !5215)
!5764 = !{i64 2147649710, i64 2147649753, i64 2147649793}
!5765 = !DILocation(line: 285, column: 1, scope: !5215)
!5766 = !{i64 2147649981, i64 2147650024, i64 2147650064}
!5767 = !DILocation(line: 286, column: 1, scope: !5215)
!5768 = !{i64 2147650201, i64 2147650244, i64 2147650284}
!5769 = !DILocation(line: 287, column: 1, scope: !5215)
!5770 = !{i64 2147650454, i64 2147650497, i64 2147650537}
!5771 = !DILocation(line: 288, column: 1, scope: !5215)
!5772 = !{i64 2147650662, i64 2147650705, i64 2147650745}
!5773 = !DILocation(line: 289, column: 1, scope: !5215)
!5774 = !{i64 2147650894, i64 2147650937, i64 2147650977}
!5775 = !DILocation(line: 290, column: 1, scope: !5215)
!5776 = !{i64 2147651105, i64 2147651148, i64 2147651188}
!5777 = !DILocation(line: 291, column: 1, scope: !5215)
!5778 = !{i64 2147651295, i64 2147651338, i64 2147651378}
!5779 = !DILocation(line: 292, column: 1, scope: !5215)
!5780 = !{i64 2147651509, i64 2147651552, i64 2147651592}
!5781 = !DILocation(line: 293, column: 1, scope: !5215)
!5782 = !{i64 2147651708, i64 2147651751, i64 2147651791}
!5783 = !DILocation(line: 294, column: 1, scope: !5215)
!5784 = !{i64 2147655956, i64 2147655999, i64 2147656039}
!5785 = !DILocation(line: 295, column: 1, scope: !5215)
!5786 = !{i64 2147656164, i64 2147656207, i64 2147656247}
!5787 = !DILocation(line: 296, column: 1, scope: !5215)
!5788 = !{i64 2147656393, i64 2147656436, i64 2147656476}
!5789 = !DILocation(line: 297, column: 1, scope: !5215)
!5790 = !{i64 2147656595, i64 2147656638, i64 2147656678}
!5791 = !DILocation(line: 298, column: 1, scope: !5215)
!5792 = !{i64 2147656794, i64 2147656837, i64 2147656877}
!5793 = !DILocation(line: 299, column: 1, scope: !5215)
!5794 = !{i64 2147657011, i64 2147657054, i64 2147657094}
!5795 = !DILocation(line: 301, column: 1, scope: !5215)
!5796 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5797)
!5797 = !{!5798, !5799}
!5798 = !DILocalVariable(name: "arg", arg: 1, scope: !5796, file: !129, line: 30, type: !138)
!5799 = !DILocalVariable(name: "key", scope: !5796, file: !129, line: 32, type: !121)
!5800 = !DILocation(line: 0, scope: !5796)
!5801 = !DILocation(line: 37, column: 2, scope: !5796)
!5802 = !DILocation(line: 38, column: 2, scope: !5796)
!5803 = !DILocation(line: 55, column: 2, scope: !5804, inlinedAt: !5811)
!5804 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5808)
!5805 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5806 = !DISubroutineType(types: !5807)
!5807 = !{!32}
!5808 = !{!5809, !5810}
!5809 = !DILocalVariable(name: "key", scope: !5804, file: !5805, line: 44, type: !32)
!5810 = !DILocalVariable(name: "tmp", scope: !5804, file: !5805, line: 53, type: !32)
!5811 = distinct !DILocation(line: 40, column: 8, scope: !5796)
!5812 = !{i64 2130788}
!5813 = !DILocation(line: 0, scope: !5804, inlinedAt: !5811)
!5814 = !DILocalVariable(name: "key", arg: 1, scope: !5815, file: !5805, line: 84, type: !32)
!5815 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5818)
!5816 = !DISubroutineType(types: !5817)
!5817 = !{null, !32}
!5818 = !{!5814}
!5819 = !DILocation(line: 0, scope: !5815, inlinedAt: !5820)
!5820 = distinct !DILocation(line: 47, column: 2, scope: !5796)
!5821 = !DILocation(line: 95, column: 2, scope: !5815, inlinedAt: !5820)
!5822 = !{i64 2131605}
!5823 = !DILocation(line: 51, column: 18, scope: !5796)
!5824 = !DILocation(line: 53, column: 2, scope: !5796)
!5825 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5826, file: !5826, line: 1609, type: !3237, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !461)
!5826 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5827 = !DILocation(line: 1611, column: 3, scope: !5825)
!5828 = !DILocation(line: 1612, column: 1, scope: !5825)
!5829 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5826, file: !5826, line: 1629, type: !3237, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !461)
!5830 = !DILocation(line: 1631, column: 3, scope: !5829)
!5831 = !DILocation(line: 1632, column: 1, scope: !5829)
!5832 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5833)
!5833 = !{!5834}
!5834 = !DILocalVariable(name: "dev", arg: 1, scope: !5832, file: !171, line: 26, type: !179)
!5835 = !DILocation(line: 0, scope: !5832)
!5836 = !DILocation(line: 68, column: 2, scope: !5832)
!5837 = distinct !DISubprogram(name: "tty_write", scope: !5838, file: !5838, line: 100, type: !5839, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5882)
!5838 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5839 = !DISubroutineType(types: !5840)
!5840 = !{!5841, !5843, !13, !344}
!5841 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5842, line: 28, baseType: !103)
!5842 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5844, size: 32)
!5844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !295, line: 18, size: 544, elements: !5845)
!5845 = !{!5846, !5847, !5871, !5872, !5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5844, file: !295, line: 19, baseType: !2630, size: 32)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5844, file: !295, line: 21, baseType: !5848, size: 128, offset: 32)
!5848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !5849)
!5849 = !{!5850, !5869, !5870}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5848, file: !300, line: 2910, baseType: !5851, size: 64)
!5851 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !5852)
!5852 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !5853)
!5853 = !{!5854}
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5852, file: !304, line: 232, baseType: !5855, size: 64)
!5855 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !5856)
!5856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !5857)
!5857 = !{!5858, !5864}
!5858 = !DIDerivedType(tag: DW_TAG_member, scope: !5856, file: !309, line: 38, baseType: !5859, size: 32)
!5859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5856, file: !309, line: 38, size: 32, elements: !5860)
!5860 = !{!5861, !5863}
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5859, file: !309, line: 39, baseType: !5862, size: 32)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5856, size: 32)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5859, file: !309, line: 40, baseType: !5862, size: 32)
!5864 = !DIDerivedType(tag: DW_TAG_member, scope: !5856, file: !309, line: 42, baseType: !5865, size: 32, offset: 32)
!5865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5856, file: !309, line: 42, size: 32, elements: !5866)
!5866 = !{!5867, !5868}
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5865, file: !309, line: 43, baseType: !5862, size: 32)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5865, file: !309, line: 44, baseType: !5862, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5848, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5848, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5844, file: !295, line: 22, baseType: !261, size: 32, offset: 160)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5844, file: !295, line: 23, baseType: !121, size: 32, offset: 192)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5844, file: !295, line: 24, baseType: !328, size: 16, offset: 224)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5844, file: !295, line: 24, baseType: !328, size: 16, offset: 240)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5844, file: !295, line: 25, baseType: !332, size: 32, offset: 256)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5844, file: !295, line: 27, baseType: !5848, size: 128, offset: 288)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5844, file: !295, line: 28, baseType: !261, size: 32, offset: 416)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5844, file: !295, line: 29, baseType: !121, size: 32, offset: 448)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5844, file: !295, line: 30, baseType: !328, size: 16, offset: 480)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5844, file: !295, line: 30, baseType: !328, size: 16, offset: 496)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5844, file: !295, line: 31, baseType: !332, size: 32, offset: 512)
!5882 = !{!5883, !5884, !5885, !5886, !5887, !5888}
!5883 = !DILocalVariable(name: "tty", arg: 1, scope: !5837, file: !5838, line: 100, type: !5843)
!5884 = !DILocalVariable(name: "buf", arg: 2, scope: !5837, file: !5838, line: 100, type: !13)
!5885 = !DILocalVariable(name: "size", arg: 3, scope: !5837, file: !5838, line: 100, type: !344)
!5886 = !DILocalVariable(name: "p", scope: !5837, file: !5838, line: 102, type: !255)
!5887 = !DILocalVariable(name: "out_size", scope: !5837, file: !5838, line: 103, type: !344)
!5888 = !DILocalVariable(name: "res", scope: !5837, file: !5838, line: 104, type: !103)
!5889 = !DILocation(line: 0, scope: !5837)
!5890 = !DILocation(line: 106, column: 11, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5837, file: !5838, line: 106, column: 6)
!5892 = !DILocation(line: 106, column: 25, scope: !5891)
!5893 = !DILocation(line: 106, column: 6, scope: !5837)
!5894 = !DILocation(line: 117, column: 2, scope: !5837)
!5895 = !DILocation(line: 110, column: 3, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5891, file: !5838, line: 106, column: 32)
!5897 = !DILocation(line: 110, column: 14, scope: !5896)
!5898 = !DILocation(line: 111, column: 23, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5896, file: !5838, line: 110, column: 18)
!5900 = !DILocation(line: 111, column: 35, scope: !5899)
!5901 = !DILocation(line: 111, column: 33, scope: !5899)
!5902 = !DILocation(line: 111, column: 4, scope: !5899)
!5903 = distinct !{!5903, !5895, !5904}
!5904 = !DILocation(line: 112, column: 3, scope: !5896)
!5905 = !DILocation(line: 117, column: 13, scope: !5837)
!5906 = !DILocation(line: 118, column: 26, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5837, file: !5838, line: 117, column: 17)
!5908 = !DILocation(line: 118, column: 9, scope: !5907)
!5909 = !DILocation(line: 119, column: 11, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5907, file: !5838, line: 119, column: 7)
!5911 = !DILocation(line: 119, column: 7, scope: !5907)
!5912 = !DILocation(line: 121, column: 17, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5914, file: !5838, line: 121, column: 8)
!5914 = distinct !DILexicalBlock(scope: !5910, file: !5838, line: 119, column: 16)
!5915 = !DILocation(line: 121, column: 8, scope: !5914)
!5916 = !DILocation(line: 122, column: 13, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5913, file: !5838, line: 121, column: 23)
!5918 = !DILocation(line: 122, column: 5, scope: !5917)
!5919 = !DILocation(line: 122, column: 11, scope: !5917)
!5920 = !DILocation(line: 123, column: 5, scope: !5917)
!5921 = !DILocation(line: 118, column: 28, scope: !5907)
!5922 = !DILocation(line: 135, column: 11, scope: !5907)
!5923 = distinct !{!5923, !5894, !5924}
!5924 = !DILocation(line: 136, column: 2, scope: !5837)
!5925 = !DILocation(line: 139, column: 1, scope: !5837)
!5926 = distinct !DISubprogram(name: "uart_poll_out", scope: !5927, file: !5927, line: 95, type: !2647, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5928)
!5927 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!5928 = !{!5929, !5930}
!5929 = !DILocalVariable(name: "dev", arg: 1, scope: !5926, file: !5927, line: 95, type: !2630)
!5930 = !DILocalVariable(name: "out_char", arg: 2, scope: !5926, file: !5927, line: 95, type: !155)
!5931 = !DILocation(line: 0, scope: !5926)
!5932 = !DILocation(line: 105, column: 2, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5926, file: !5927, line: 105, column: 2)
!5934 = !{i64 2155010899}
!5935 = !DILocation(line: 106, column: 2, scope: !5926)
!5936 = !DILocation(line: 107, column: 1, scope: !5926)
!5937 = distinct !DISubprogram(name: "tty_putchar", scope: !5838, file: !5838, line: 69, type: !5938, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5940)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!103, !5843, !154}
!5940 = !{!5941, !5942, !5943, !5944, !5945}
!5941 = !DILocalVariable(name: "tty", arg: 1, scope: !5937, file: !5838, line: 69, type: !5843)
!5942 = !DILocalVariable(name: "c", arg: 2, scope: !5937, file: !5838, line: 69, type: !154)
!5943 = !DILocalVariable(name: "key", scope: !5937, file: !5838, line: 71, type: !32)
!5944 = !DILocalVariable(name: "tx_next", scope: !5937, file: !5838, line: 72, type: !103)
!5945 = !DILocalVariable(name: "res", scope: !5937, file: !5838, line: 73, type: !103)
!5946 = !DILocation(line: 0, scope: !5937)
!5947 = !DILocation(line: 75, column: 25, scope: !5937)
!5948 = !DILocation(line: 76, column: 5, scope: !5937)
!5949 = !DILocation(line: 77, column: 7, scope: !5937)
!5950 = !DILocation(line: 75, column: 8, scope: !5937)
!5951 = !DILocation(line: 78, column: 10, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5937, file: !5838, line: 78, column: 6)
!5953 = !DILocation(line: 78, column: 6, scope: !5937)
!5954 = !DILocation(line: 55, column: 2, scope: !5955, inlinedAt: !5959)
!5955 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5956)
!5956 = !{!5957, !5958}
!5957 = !DILocalVariable(name: "key", scope: !5955, file: !5805, line: 44, type: !32)
!5958 = !DILocalVariable(name: "tmp", scope: !5955, file: !5805, line: 53, type: !32)
!5959 = distinct !DILocation(line: 82, column: 8, scope: !5937)
!5960 = !{i64 2241872}
!5961 = !DILocation(line: 0, scope: !5955, inlinedAt: !5959)
!5962 = !DILocation(line: 83, column: 17, scope: !5937)
!5963 = !DILocation(line: 83, column: 12, scope: !5937)
!5964 = !DILocation(line: 83, column: 24, scope: !5937)
!5965 = !DILocation(line: 84, column: 22, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5937, file: !5838, line: 84, column: 6)
!5967 = !DILocation(line: 84, column: 14, scope: !5966)
!5968 = !DILocation(line: 84, column: 6, scope: !5937)
!5969 = !DILocation(line: 87, column: 22, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5937, file: !5838, line: 87, column: 6)
!5971 = !DILocation(line: 87, column: 17, scope: !5970)
!5972 = !DILocation(line: 87, column: 14, scope: !5970)
!5973 = !DILocation(line: 87, column: 6, scope: !5937)
!5974 = !DILocalVariable(name: "key", arg: 1, scope: !5975, file: !5805, line: 84, type: !32)
!5975 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !5976)
!5976 = !{!5974}
!5977 = !DILocation(line: 0, scope: !5975, inlinedAt: !5978)
!5978 = distinct !DILocation(line: 88, column: 3, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5970, file: !5838, line: 87, column: 30)
!5980 = !DILocation(line: 95, column: 2, scope: !5975, inlinedAt: !5978)
!5981 = !{i64 2242689}
!5982 = !DILocation(line: 89, column: 3, scope: !5979)
!5983 = !DILocation(line: 92, column: 7, scope: !5937)
!5984 = !DILocation(line: 92, column: 2, scope: !5937)
!5985 = !DILocation(line: 92, column: 31, scope: !5937)
!5986 = !DILocation(line: 93, column: 16, scope: !5937)
!5987 = !DILocation(line: 93, column: 14, scope: !5937)
!5988 = !DILocation(line: 0, scope: !5975, inlinedAt: !5989)
!5989 = distinct !DILocation(line: 95, column: 2, scope: !5937)
!5990 = !DILocation(line: 95, column: 2, scope: !5975, inlinedAt: !5989)
!5991 = !DILocation(line: 96, column: 26, scope: !5937)
!5992 = !DILocation(line: 96, column: 2, scope: !5937)
!5993 = !DILocation(line: 97, column: 2, scope: !5937)
!5994 = !DILocation(line: 98, column: 1, scope: !5937)
!5995 = distinct !DISubprogram(name: "z_errno", scope: !5996, file: !5996, line: 24, type: !5997, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !461)
!5996 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!5997 = !DISubroutineType(types: !5998)
!5998 = !{!2608}
!5999 = !DILocation(line: 31, column: 2, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5995, file: !5996, line: 31, column: 2)
!6001 = !{i64 2154266899}
!6002 = !DILocation(line: 32, column: 9, scope: !5995)
!6003 = !DILocation(line: 32, column: 2, scope: !5995)
!6004 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6005, file: !6005, line: 403, type: !6006, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6008)
!6005 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6006 = !DISubroutineType(types: !6007)
!6007 = !{!1596, !1596}
!6008 = !{!6009}
!6009 = !DILocalVariable(name: "t", arg: 1, scope: !6004, file: !6005, line: 403, type: !1596)
!6010 = !DILocation(line: 0, scope: !6004)
!6011 = !DILocalVariable(name: "t", arg: 1, scope: !6012, file: !6005, line: 102, type: !1596)
!6012 = distinct !DISubprogram(name: "z_tmcvt", scope: !6005, file: !6005, line: 102, type: !6013, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6015)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{!1596, !1596, !121, !121, !157, !157, !157, !157}
!6015 = !{!6011, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025}
!6016 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6012, file: !6005, line: 102, type: !121)
!6017 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6012, file: !6005, line: 103, type: !121)
!6018 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6012, file: !6005, line: 103, type: !157)
!6019 = !DILocalVariable(name: "result32", arg: 5, scope: !6012, file: !6005, line: 104, type: !157)
!6020 = !DILocalVariable(name: "round_up", arg: 6, scope: !6012, file: !6005, line: 104, type: !157)
!6021 = !DILocalVariable(name: "round_off", arg: 7, scope: !6012, file: !6005, line: 105, type: !157)
!6022 = !DILocalVariable(name: "mul_ratio", scope: !6012, file: !6005, line: 107, type: !157)
!6023 = !DILocalVariable(name: "div_ratio", scope: !6012, file: !6005, line: 109, type: !157)
!6024 = !DILocalVariable(name: "off", scope: !6012, file: !6005, line: 116, type: !1596)
!6025 = !DILocalVariable(name: "rdivisor", scope: !6026, file: !6005, line: 119, type: !121)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !6005, line: 118, column: 18)
!6027 = distinct !DILexicalBlock(scope: !6012, file: !6005, line: 118, column: 6)
!6028 = !DILocation(line: 0, scope: !6012, inlinedAt: !6029)
!6029 = distinct !DILocation(line: 406, column: 9, scope: !6004)
!6030 = !DILocation(line: 145, column: 13, scope: !6031, inlinedAt: !6029)
!6031 = distinct !DILexicalBlock(scope: !6032, file: !6005, line: 144, column: 10)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !6005, line: 142, column: 7)
!6033 = distinct !DILexicalBlock(scope: !6034, file: !6005, line: 141, column: 24)
!6034 = distinct !DILexicalBlock(scope: !6035, file: !6005, line: 141, column: 13)
!6035 = distinct !DILexicalBlock(scope: !6012, file: !6005, line: 134, column: 6)
!6036 = !DILocation(line: 406, column: 2, scope: !6004)
!6037 = distinct !DISubprogram(name: "k_sem_take", scope: !3670, file: !3670, line: 1044, type: !6038, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6045)
!6038 = !DISubroutineType(types: !6039)
!6039 = !{!103, !6040, !6041}
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5848, size: 32)
!6041 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1700, line: 67, baseType: !6042)
!6042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1700, line: 65, size: 64, elements: !6043)
!6043 = !{!6044}
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6042, file: !1700, line: 66, baseType: !1699, size: 64)
!6045 = !{!6046, !6047}
!6046 = !DILocalVariable(name: "sem", arg: 1, scope: !6037, file: !3670, line: 1044, type: !6040)
!6047 = !DILocalVariable(name: "timeout", arg: 2, scope: !6037, file: !3670, line: 1044, type: !6041)
!6048 = !DILocation(line: 0, scope: !6037)
!6049 = !DILocation(line: 1053, column: 2, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6037, file: !3670, line: 1053, column: 2)
!6051 = !{i64 2154746087}
!6052 = !DILocation(line: 1054, column: 9, scope: !6037)
!6053 = !DILocation(line: 1054, column: 2, scope: !6037)
!6054 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5927, file: !5927, line: 193, type: !2681, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6055)
!6055 = !{!6056}
!6056 = !DILocalVariable(name: "dev", arg: 1, scope: !6054, file: !5927, line: 193, type: !2630)
!6057 = !DILocation(line: 0, scope: !6054)
!6058 = !DILocation(line: 202, column: 2, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6054, file: !5927, line: 202, column: 2)
!6060 = !{i64 2155011171}
!6061 = !DILocation(line: 203, column: 2, scope: !6054)
!6062 = !DILocation(line: 204, column: 1, scope: !6054)
!6063 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !203, file: !203, line: 857, type: !2681, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6064)
!6064 = !{!6065, !6066}
!6065 = !DILocalVariable(name: "dev", arg: 1, scope: !6063, file: !203, line: 857, type: !2630)
!6066 = !DILocalVariable(name: "api", scope: !6063, file: !203, line: 860, type: !2622)
!6067 = !DILocation(line: 0, scope: !6063)
!6068 = !DILocation(line: 861, column: 40, scope: !6063)
!6069 = !DILocation(line: 863, column: 11, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6063, file: !203, line: 863, column: 6)
!6071 = !DILocation(line: 863, column: 25, scope: !6070)
!6072 = !DILocation(line: 863, column: 6, scope: !6063)
!6073 = !DILocation(line: 864, column: 3, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6070, file: !203, line: 863, column: 34)
!6075 = !DILocation(line: 865, column: 2, scope: !6074)
!6076 = !DILocation(line: 869, column: 1, scope: !6063)
!6077 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !203, file: !203, line: 574, type: !2647, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6078)
!6078 = !{!6079, !6080, !6081}
!6079 = !DILocalVariable(name: "dev", arg: 1, scope: !6077, file: !203, line: 574, type: !2630)
!6080 = !DILocalVariable(name: "out_char", arg: 2, scope: !6077, file: !203, line: 575, type: !155)
!6081 = !DILocalVariable(name: "api", scope: !6077, file: !203, line: 577, type: !2622)
!6082 = !DILocation(line: 0, scope: !6077)
!6083 = !DILocation(line: 578, column: 40, scope: !6077)
!6084 = !DILocation(line: 580, column: 7, scope: !6077)
!6085 = !DILocation(line: 580, column: 2, scope: !6077)
!6086 = !DILocation(line: 581, column: 1, scope: !6077)
!6087 = distinct !DISubprogram(name: "tty_read", scope: !5838, file: !5838, line: 206, type: !6088, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6090)
!6088 = !DISubroutineType(types: !6089)
!6089 = !{!5841, !5843, !102, !344}
!6090 = !{!6091, !6092, !6093, !6094, !6095, !6096}
!6091 = !DILocalVariable(name: "tty", arg: 1, scope: !6087, file: !5838, line: 206, type: !5843)
!6092 = !DILocalVariable(name: "buf", arg: 2, scope: !6087, file: !5838, line: 206, type: !102)
!6093 = !DILocalVariable(name: "size", arg: 3, scope: !6087, file: !5838, line: 206, type: !344)
!6094 = !DILocalVariable(name: "p", scope: !6087, file: !5838, line: 208, type: !261)
!6095 = !DILocalVariable(name: "out_size", scope: !6087, file: !5838, line: 209, type: !344)
!6096 = !DILocalVariable(name: "res", scope: !6087, file: !5838, line: 210, type: !103)
!6097 = !DILocation(line: 0, scope: !6087)
!6098 = !DILocation(line: 212, column: 11, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6087, file: !5838, line: 212, column: 6)
!6100 = !DILocation(line: 212, column: 25, scope: !6099)
!6101 = !DILocation(line: 212, column: 6, scope: !6087)
!6102 = !DILocation(line: 216, column: 2, scope: !6087)
!6103 = !DILocation(line: 213, column: 10, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6099, file: !5838, line: 212, column: 32)
!6105 = !DILocation(line: 213, column: 3, scope: !6104)
!6106 = !DILocation(line: 216, column: 13, scope: !6087)
!6107 = !DILocation(line: 217, column: 9, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6087, file: !5838, line: 216, column: 17)
!6109 = !DILocation(line: 218, column: 11, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6108, file: !5838, line: 218, column: 7)
!6111 = !DILocation(line: 218, column: 7, scope: !6108)
!6112 = !DILocation(line: 220, column: 17, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !5838, line: 220, column: 8)
!6114 = distinct !DILexicalBlock(scope: !6110, file: !5838, line: 218, column: 16)
!6115 = !DILocation(line: 220, column: 8, scope: !6114)
!6116 = !DILocation(line: 221, column: 13, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6113, file: !5838, line: 220, column: 23)
!6118 = !DILocation(line: 221, column: 5, scope: !6117)
!6119 = !DILocation(line: 221, column: 11, scope: !6117)
!6120 = !DILocation(line: 222, column: 5, scope: !6117)
!6121 = !DILocation(line: 234, column: 10, scope: !6108)
!6122 = !DILocation(line: 234, column: 5, scope: !6108)
!6123 = !DILocation(line: 234, column: 8, scope: !6108)
!6124 = !DILocation(line: 235, column: 11, scope: !6108)
!6125 = distinct !{!6125, !6102, !6126}
!6126 = !DILocation(line: 236, column: 2, scope: !6087)
!6127 = !DILocation(line: 239, column: 1, scope: !6087)
!6128 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5838, file: !5838, line: 162, type: !6088, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6129)
!6129 = !{!6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137}
!6130 = !DILocalVariable(name: "tty", arg: 1, scope: !6128, file: !5838, line: 162, type: !5843)
!6131 = !DILocalVariable(name: "buf", arg: 2, scope: !6128, file: !5838, line: 162, type: !102)
!6132 = !DILocalVariable(name: "size", arg: 3, scope: !6128, file: !5838, line: 162, type: !344)
!6133 = !DILocalVariable(name: "p", scope: !6128, file: !5838, line: 164, type: !261)
!6134 = !DILocalVariable(name: "out_size", scope: !6128, file: !5838, line: 165, type: !344)
!6135 = !DILocalVariable(name: "res", scope: !6128, file: !5838, line: 166, type: !103)
!6136 = !DILocalVariable(name: "timeout", scope: !6128, file: !5838, line: 167, type: !121)
!6137 = !DILocalVariable(name: "c", scope: !6138, file: !5838, line: 170, type: !154)
!6138 = distinct !DILexicalBlock(scope: !6128, file: !5838, line: 169, column: 15)
!6139 = !DILocation(line: 0, scope: !6128)
!6140 = !DILocation(line: 169, column: 2, scope: !6128)
!6141 = !DILocation(line: 167, column: 26, scope: !6128)
!6142 = !DILocation(line: 170, column: 3, scope: !6138)
!6143 = !DILocation(line: 171, column: 27, scope: !6138)
!6144 = !DILocation(line: 0, scope: !6138)
!6145 = !DILocation(line: 171, column: 9, scope: !6138)
!6146 = !DILocation(line: 172, column: 11, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6138, file: !5838, line: 172, column: 7)
!6148 = !DILocation(line: 172, column: 7, scope: !6138)
!6149 = !DILocation(line: 177, column: 17, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6151, file: !5838, line: 177, column: 8)
!6151 = distinct !DILexicalBlock(scope: !6147, file: !5838, line: 172, column: 18)
!6152 = !DILocation(line: 177, column: 8, scope: !6151)
!6153 = !DILocation(line: 178, column: 5, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6150, file: !5838, line: 177, column: 23)
!6155 = !DILocation(line: 178, column: 11, scope: !6154)
!6156 = !DILocation(line: 201, column: 2, scope: !6128)
!6157 = !DILocation(line: 184, column: 11, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6138, file: !5838, line: 184, column: 7)
!6159 = !DILocation(line: 184, column: 7, scope: !6138)
!6160 = !DILocation(line: 185, column: 11, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6158, file: !5838, line: 184, column: 17)
!6162 = !DILocation(line: 185, column: 6, scope: !6161)
!6163 = !DILocation(line: 185, column: 9, scope: !6161)
!6164 = !DILocation(line: 186, column: 12, scope: !6161)
!6165 = !DILocation(line: 187, column: 8, scope: !6161)
!6166 = !DILocation(line: 190, column: 12, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6138, file: !5838, line: 190, column: 7)
!6168 = !DILocation(line: 190, column: 17, scope: !6167)
!6169 = !DILocation(line: 191, column: 17, scope: !6167)
!6170 = !DILocation(line: 191, column: 36, scope: !6167)
!6171 = !DILocation(line: 191, column: 46, scope: !6167)
!6172 = !DILocation(line: 191, column: 49, scope: !6167)
!6173 = !DILocation(line: 190, column: 7, scope: !6138)
!6174 = !DILocation(line: 198, column: 11, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6138, file: !5838, line: 198, column: 7)
!6176 = !DILocation(line: 198, column: 7, scope: !6138)
!6177 = !DILocation(line: 199, column: 12, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6175, file: !5838, line: 198, column: 18)
!6179 = !DILocation(line: 199, column: 4, scope: !6178)
!6180 = !DILocation(line: 200, column: 3, scope: !6178)
!6181 = !DILocation(line: 204, column: 1, scope: !6128)
!6182 = distinct !DISubprogram(name: "tty_getchar", scope: !5838, file: !5838, line: 141, type: !6183, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6185)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{!103, !5843}
!6185 = !{!6186, !6187, !6188, !6189}
!6186 = !DILocalVariable(name: "tty", arg: 1, scope: !6182, file: !5838, line: 141, type: !5843)
!6187 = !DILocalVariable(name: "key", scope: !6182, file: !5838, line: 143, type: !32)
!6188 = !DILocalVariable(name: "c", scope: !6182, file: !5838, line: 144, type: !154)
!6189 = !DILocalVariable(name: "res", scope: !6182, file: !5838, line: 145, type: !103)
!6190 = !DILocation(line: 0, scope: !6182)
!6191 = !DILocation(line: 147, column: 25, scope: !6182)
!6192 = !DILocation(line: 147, column: 33, scope: !6182)
!6193 = !DILocation(line: 147, column: 8, scope: !6182)
!6194 = !DILocation(line: 148, column: 10, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6182, file: !5838, line: 148, column: 6)
!6196 = !DILocation(line: 148, column: 6, scope: !6182)
!6197 = !DILocation(line: 55, column: 2, scope: !5955, inlinedAt: !6198)
!6198 = distinct !DILocation(line: 152, column: 8, scope: !6182)
!6199 = !DILocation(line: 0, scope: !5955, inlinedAt: !6198)
!6200 = !DILocation(line: 153, column: 11, scope: !6182)
!6201 = !DILocation(line: 153, column: 27, scope: !6182)
!6202 = !DILocation(line: 153, column: 33, scope: !6182)
!6203 = !DILocation(line: 153, column: 6, scope: !6182)
!6204 = !DILocation(line: 154, column: 6, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6182, file: !5838, line: 154, column: 6)
!6206 = !DILocation(line: 154, column: 26, scope: !6205)
!6207 = !DILocation(line: 154, column: 18, scope: !6205)
!6208 = !DILocation(line: 154, column: 6, scope: !6182)
!6209 = !DILocation(line: 0, scope: !5975, inlinedAt: !6210)
!6210 = distinct !DILocation(line: 157, column: 2, scope: !6182)
!6211 = !DILocation(line: 95, column: 2, scope: !5975, inlinedAt: !6210)
!6212 = !DILocation(line: 159, column: 9, scope: !6182)
!6213 = !DILocation(line: 159, column: 2, scope: !6182)
!6214 = !DILocation(line: 160, column: 1, scope: !6182)
!6215 = distinct !DISubprogram(name: "uart_poll_in", scope: !5927, file: !5927, line: 47, type: !2628, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6216)
!6216 = !{!6217, !6218}
!6217 = !DILocalVariable(name: "dev", arg: 1, scope: !6215, file: !5927, line: 47, type: !2630)
!6218 = !DILocalVariable(name: "p_char", arg: 2, scope: !6215, file: !5927, line: 47, type: !224)
!6219 = !DILocation(line: 0, scope: !6215)
!6220 = !DILocation(line: 56, column: 2, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6215, file: !5927, line: 56, column: 2)
!6222 = !{i64 2155010763}
!6223 = !DILocation(line: 57, column: 9, scope: !6215)
!6224 = !DILocation(line: 57, column: 2, scope: !6215)
!6225 = distinct !DISubprogram(name: "k_sleep", scope: !3670, file: !3670, line: 91, type: !6226, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6228)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{!332, !6041}
!6228 = !{!6229}
!6229 = !DILocalVariable(name: "timeout", arg: 1, scope: !6225, file: !3670, line: 91, type: !6041)
!6230 = !DILocation(line: 0, scope: !6225)
!6231 = !DILocation(line: 99, column: 2, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6225, file: !3670, line: 99, column: 2)
!6233 = !{i64 2154742243}
!6234 = !DILocation(line: 100, column: 9, scope: !6225)
!6235 = !DILocation(line: 100, column: 2, scope: !6225)
!6236 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !203, file: !203, line: 504, type: !2628, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6237)
!6237 = !{!6238, !6239, !6240}
!6238 = !DILocalVariable(name: "dev", arg: 1, scope: !6236, file: !203, line: 504, type: !2630)
!6239 = !DILocalVariable(name: "p_char", arg: 2, scope: !6236, file: !203, line: 505, type: !224)
!6240 = !DILocalVariable(name: "api", scope: !6236, file: !203, line: 507, type: !2622)
!6241 = !DILocation(line: 0, scope: !6236)
!6242 = !DILocation(line: 508, column: 40, scope: !6236)
!6243 = !DILocation(line: 510, column: 11, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6236, file: !203, line: 510, column: 6)
!6245 = !DILocation(line: 510, column: 19, scope: !6244)
!6246 = !DILocation(line: 510, column: 6, scope: !6236)
!6247 = !DILocation(line: 514, column: 9, scope: !6236)
!6248 = !DILocation(line: 514, column: 2, scope: !6236)
!6249 = !DILocation(line: 515, column: 1, scope: !6236)
!6250 = distinct !DISubprogram(name: "tty_init", scope: !5838, file: !5838, line: 241, type: !6251, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6253)
!6251 = !DISubroutineType(types: !6252)
!6252 = !{!103, !5843, !2630}
!6253 = !{!6254, !6255}
!6254 = !DILocalVariable(name: "tty", arg: 1, scope: !6250, file: !5838, line: 241, type: !5843)
!6255 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6250, file: !5838, line: 241, type: !2630)
!6256 = !DILocation(line: 0, scope: !6250)
!6257 = !DILocation(line: 243, column: 7, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6250, file: !5838, line: 243, column: 6)
!6259 = !DILocation(line: 243, column: 6, scope: !6250)
!6260 = !DILocation(line: 247, column: 7, scope: !6250)
!6261 = !DILocation(line: 247, column: 16, scope: !6250)
!6262 = !DILocation(line: 250, column: 7, scope: !6250)
!6263 = !DILocation(line: 250, column: 18, scope: !6250)
!6264 = !DILocation(line: 251, column: 7, scope: !6250)
!6265 = !DILocation(line: 251, column: 21, scope: !6250)
!6266 = !DILocation(line: 252, column: 7, scope: !6250)
!6267 = !DILocation(line: 252, column: 18, scope: !6250)
!6268 = !DILocation(line: 253, column: 7, scope: !6250)
!6269 = !DILocation(line: 253, column: 21, scope: !6250)
!6270 = !DILocation(line: 255, column: 49, scope: !6250)
!6271 = !DILocation(line: 255, column: 56, scope: !6250)
!6272 = !DILocation(line: 255, column: 35, scope: !6250)
!6273 = !DILocation(line: 255, column: 42, scope: !6250)
!6274 = !DILocation(line: 255, column: 21, scope: !6250)
!6275 = !DILocation(line: 255, column: 28, scope: !6250)
!6276 = !DILocation(line: 255, column: 7, scope: !6250)
!6277 = !DILocation(line: 255, column: 14, scope: !6250)
!6278 = !DILocation(line: 257, column: 7, scope: !6250)
!6279 = !DILocation(line: 257, column: 18, scope: !6250)
!6280 = !DILocation(line: 258, column: 7, scope: !6250)
!6281 = !DILocation(line: 258, column: 18, scope: !6250)
!6282 = !DILocation(line: 260, column: 58, scope: !6250)
!6283 = !DILocation(line: 260, column: 2, scope: !6250)
!6284 = !DILocation(line: 262, column: 2, scope: !6250)
!6285 = !DILocation(line: 263, column: 1, scope: !6250)
!6286 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !203, file: !203, line: 1163, type: !2695, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6287)
!6287 = !{!6288, !6289, !6290, !6291}
!6288 = !DILocalVariable(name: "dev", arg: 1, scope: !6286, file: !203, line: 1163, type: !2630)
!6289 = !DILocalVariable(name: "cb", arg: 2, scope: !6286, file: !203, line: 1164, type: !2697)
!6290 = !DILocalVariable(name: "user_data", arg: 3, scope: !6286, file: !203, line: 1165, type: !102)
!6291 = !DILocalVariable(name: "api", scope: !6286, file: !203, line: 1168, type: !2622)
!6292 = !DILocation(line: 0, scope: !6286)
!6293 = !DILocation(line: 1169, column: 40, scope: !6286)
!6294 = !DILocation(line: 1171, column: 11, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6286, file: !203, line: 1171, column: 6)
!6296 = !DILocation(line: 1171, column: 20, scope: !6295)
!6297 = !DILocation(line: 1171, column: 29, scope: !6295)
!6298 = !DILocation(line: 1171, column: 46, scope: !6295)
!6299 = !DILocation(line: 1171, column: 6, scope: !6286)
!6300 = !DILocation(line: 1172, column: 3, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6295, file: !203, line: 1171, column: 56)
!6302 = !DILocation(line: 1173, column: 2, scope: !6301)
!6303 = !DILocation(line: 1179, column: 1, scope: !6286)
!6304 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5838, file: !5838, line: 15, type: !2699, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6305)
!6305 = !{!6306, !6307, !6308, !6309}
!6306 = !DILocalVariable(name: "dev", arg: 1, scope: !6304, file: !5838, line: 15, type: !2630)
!6307 = !DILocalVariable(name: "user_data", arg: 2, scope: !6304, file: !5838, line: 15, type: !102)
!6308 = !DILocalVariable(name: "tty", scope: !6304, file: !5838, line: 17, type: !5843)
!6309 = !DILocalVariable(name: "c", scope: !6310, file: !5838, line: 22, type: !154)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !5838, line: 21, column: 30)
!6311 = distinct !DILexicalBlock(scope: !6304, file: !5838, line: 21, column: 6)
!6312 = !DILocation(line: 0, scope: !6304)
!6313 = !DILocation(line: 17, column: 27, scope: !6304)
!6314 = !DILocation(line: 19, column: 2, scope: !6304)
!6315 = !DILocation(line: 21, column: 6, scope: !6311)
!6316 = !DILocation(line: 21, column: 6, scope: !6304)
!6317 = !DILocation(line: 22, column: 3, scope: !6310)
!6318 = !DILocation(line: 0, scope: !6310)
!6319 = !DILocation(line: 25, column: 8, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !5838, line: 25, column: 8)
!6321 = distinct !DILexicalBlock(scope: !6310, file: !5838, line: 24, column: 13)
!6322 = !DILocation(line: 25, column: 35, scope: !6320)
!6323 = !DILocation(line: 25, column: 8, scope: !6321)
!6324 = !DILocation(line: 28, column: 28, scope: !6321)
!6325 = !DILocation(line: 28, column: 4, scope: !6321)
!6326 = distinct !{!6326, !6327, !6328}
!6327 = !DILocation(line: 24, column: 3, scope: !6310)
!6328 = !DILocation(line: 29, column: 3, scope: !6310)
!6329 = !DILocation(line: 30, column: 2, scope: !6311)
!6330 = !DILocation(line: 30, column: 2, scope: !6310)
!6331 = !DILocation(line: 32, column: 6, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6304, file: !5838, line: 32, column: 6)
!6333 = !DILocation(line: 32, column: 6, scope: !6304)
!6334 = !DILocation(line: 33, column: 12, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !5838, line: 33, column: 7)
!6336 = distinct !DILexicalBlock(scope: !6332, file: !5838, line: 32, column: 30)
!6337 = !DILocation(line: 33, column: 27, scope: !6335)
!6338 = !DILocation(line: 33, column: 19, scope: !6335)
!6339 = !DILocation(line: 33, column: 7, scope: !6336)
!6340 = !DILocation(line: 37, column: 4, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6335, file: !5838, line: 33, column: 35)
!6342 = !DILocation(line: 38, column: 3, scope: !6341)
!6343 = !DILocation(line: 33, column: 7, scope: !6335)
!6344 = !DILocation(line: 39, column: 30, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6335, file: !5838, line: 38, column: 10)
!6346 = !DILocation(line: 39, column: 52, scope: !6345)
!6347 = !DILocation(line: 39, column: 25, scope: !6345)
!6348 = !DILocation(line: 39, column: 4, scope: !6345)
!6349 = !DILocation(line: 40, column: 13, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6345, file: !5838, line: 40, column: 8)
!6351 = !DILocation(line: 40, column: 8, scope: !6350)
!6352 = !DILocation(line: 40, column: 28, scope: !6350)
!6353 = !DILocation(line: 40, column: 20, scope: !6350)
!6354 = !DILocation(line: 40, column: 8, scope: !6345)
!6355 = !DILocation(line: 41, column: 17, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6350, file: !5838, line: 40, column: 43)
!6357 = !DILocation(line: 42, column: 4, scope: !6356)
!6358 = !DILocation(line: 43, column: 21, scope: !6345)
!6359 = !DILocation(line: 43, column: 4, scope: !6345)
!6360 = !DILocation(line: 46, column: 1, scope: !6304)
!6361 = distinct !DISubprogram(name: "uart_irq_update", scope: !5927, file: !5927, line: 360, type: !2651, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6362)
!6362 = !{!6363}
!6363 = !DILocalVariable(name: "dev", arg: 1, scope: !6361, file: !5927, line: 360, type: !2630)
!6364 = !DILocation(line: 0, scope: !6361)
!6365 = !DILocation(line: 368, column: 2, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6361, file: !5927, line: 368, column: 2)
!6367 = !{i64 2155011647}
!6368 = !DILocation(line: 369, column: 9, scope: !6361)
!6369 = !DILocation(line: 369, column: 2, scope: !6361)
!6370 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !203, file: !203, line: 1024, type: !2651, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6371)
!6371 = !{!6372, !6373}
!6372 = !DILocalVariable(name: "dev", arg: 1, scope: !6370, file: !203, line: 1024, type: !2630)
!6373 = !DILocalVariable(name: "api", scope: !6370, file: !203, line: 1027, type: !2622)
!6374 = !DILocation(line: 0, scope: !6370)
!6375 = !DILocation(line: 1028, column: 40, scope: !6370)
!6376 = !DILocation(line: 1030, column: 11, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6370, file: !203, line: 1030, column: 6)
!6378 = !DILocation(line: 1030, column: 24, scope: !6377)
!6379 = !DILocation(line: 1030, column: 6, scope: !6370)
!6380 = !DILocation(line: 1033, column: 9, scope: !6370)
!6381 = !DILocation(line: 1033, column: 2, scope: !6370)
!6382 = !DILocation(line: 1038, column: 1, scope: !6370)
!6383 = distinct !DISubprogram(name: "uart_fifo_read", scope: !203, file: !203, line: 785, type: !2677, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6384)
!6384 = !{!6385, !6386, !6387, !6388}
!6385 = !DILocalVariable(name: "dev", arg: 1, scope: !6383, file: !203, line: 785, type: !2630)
!6386 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6383, file: !203, line: 785, type: !261)
!6387 = !DILocalVariable(name: "size", arg: 3, scope: !6383, file: !203, line: 786, type: !262)
!6388 = !DILocalVariable(name: "api", scope: !6383, file: !203, line: 789, type: !2622)
!6389 = !DILocation(line: 0, scope: !6383)
!6390 = !DILocation(line: 790, column: 40, scope: !6383)
!6391 = !DILocation(line: 792, column: 11, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6383, file: !203, line: 792, column: 6)
!6393 = !DILocation(line: 792, column: 21, scope: !6392)
!6394 = !DILocation(line: 792, column: 6, scope: !6383)
!6395 = !DILocation(line: 796, column: 9, scope: !6383)
!6396 = !DILocation(line: 796, column: 2, scope: !6383)
!6397 = !DILocation(line: 803, column: 1, scope: !6383)
!6398 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5838, file: !5838, line: 48, type: !5938, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6399)
!6399 = !{!6400, !6401, !6402}
!6400 = !DILocalVariable(name: "tty", arg: 1, scope: !6398, file: !5838, line: 48, type: !5843)
!6401 = !DILocalVariable(name: "c", arg: 2, scope: !6398, file: !5838, line: 48, type: !154)
!6402 = !DILocalVariable(name: "rx_next", scope: !6398, file: !5838, line: 50, type: !103)
!6403 = !DILocation(line: 0, scope: !6398)
!6404 = !DILocation(line: 50, column: 21, scope: !6398)
!6405 = !DILocation(line: 50, column: 16, scope: !6398)
!6406 = !DILocation(line: 50, column: 28, scope: !6398)
!6407 = !DILocation(line: 52, column: 22, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6398, file: !5838, line: 52, column: 6)
!6409 = !DILocation(line: 52, column: 14, scope: !6408)
!6410 = !DILocation(line: 52, column: 6, scope: !6398)
!6411 = !DILocation(line: 56, column: 22, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6398, file: !5838, line: 56, column: 6)
!6413 = !DILocation(line: 56, column: 17, scope: !6412)
!6414 = !DILocation(line: 56, column: 14, scope: !6412)
!6415 = !DILocation(line: 56, column: 6, scope: !6398)
!6416 = !DILocation(line: 58, column: 3, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6412, file: !5838, line: 56, column: 30)
!6418 = !DILocation(line: 59, column: 3, scope: !6417)
!6419 = !DILocation(line: 62, column: 7, scope: !6398)
!6420 = !DILocation(line: 62, column: 2, scope: !6398)
!6421 = !DILocation(line: 62, column: 31, scope: !6398)
!6422 = !DILocation(line: 63, column: 16, scope: !6398)
!6423 = !DILocation(line: 63, column: 14, scope: !6398)
!6424 = !DILocation(line: 64, column: 19, scope: !6398)
!6425 = !DILocation(line: 64, column: 2, scope: !6398)
!6426 = !DILocation(line: 66, column: 2, scope: !6398)
!6427 = !DILocation(line: 67, column: 1, scope: !6398)
!6428 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !203, file: !203, line: 910, type: !2651, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6429)
!6429 = !{!6430, !6431}
!6430 = !DILocalVariable(name: "dev", arg: 1, scope: !6428, file: !203, line: 910, type: !2630)
!6431 = !DILocalVariable(name: "api", scope: !6428, file: !203, line: 913, type: !2622)
!6432 = !DILocation(line: 0, scope: !6428)
!6433 = !DILocation(line: 914, column: 40, scope: !6428)
!6434 = !DILocation(line: 916, column: 11, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6428, file: !203, line: 916, column: 6)
!6436 = !DILocation(line: 916, column: 24, scope: !6435)
!6437 = !DILocation(line: 916, column: 6, scope: !6428)
!6438 = !DILocation(line: 920, column: 9, scope: !6428)
!6439 = !DILocation(line: 920, column: 2, scope: !6428)
!6440 = !DILocation(line: 925, column: 1, scope: !6428)
!6441 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5927, file: !5927, line: 217, type: !2681, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6442)
!6442 = !{!6443}
!6443 = !DILocalVariable(name: "dev", arg: 1, scope: !6441, file: !5927, line: 217, type: !2630)
!6444 = !DILocation(line: 0, scope: !6441)
!6445 = !DILocation(line: 226, column: 2, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6441, file: !5927, line: 226, column: 2)
!6447 = !{i64 2155011239}
!6448 = !DILocation(line: 227, column: 2, scope: !6441)
!6449 = !DILocation(line: 228, column: 1, scope: !6441)
!6450 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !203, file: !203, line: 699, type: !2673, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6451)
!6451 = !{!6452, !6453, !6454, !6455}
!6452 = !DILocalVariable(name: "dev", arg: 1, scope: !6450, file: !203, line: 699, type: !2630)
!6453 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6450, file: !203, line: 700, type: !255)
!6454 = !DILocalVariable(name: "size", arg: 3, scope: !6450, file: !203, line: 701, type: !103)
!6455 = !DILocalVariable(name: "api", scope: !6450, file: !203, line: 704, type: !2622)
!6456 = !DILocation(line: 0, scope: !6450)
!6457 = !DILocation(line: 705, column: 40, scope: !6450)
!6458 = !DILocation(line: 707, column: 11, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6450, file: !203, line: 707, column: 6)
!6460 = !DILocation(line: 707, column: 21, scope: !6459)
!6461 = !DILocation(line: 707, column: 6, scope: !6450)
!6462 = !DILocation(line: 711, column: 9, scope: !6450)
!6463 = !DILocation(line: 711, column: 2, scope: !6450)
!6464 = !DILocation(line: 718, column: 1, scope: !6450)
!6465 = distinct !DISubprogram(name: "k_sem_give", scope: !3670, file: !3670, line: 1061, type: !6466, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6468)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{null, !6040}
!6468 = !{!6469}
!6469 = !DILocalVariable(name: "sem", arg: 1, scope: !6465, file: !3670, line: 1061, type: !6040)
!6470 = !DILocation(line: 0, scope: !6465)
!6471 = !DILocation(line: 1070, column: 2, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6465, file: !3670, line: 1070, column: 2)
!6473 = !{i64 2154746155}
!6474 = !DILocation(line: 1071, column: 2, scope: !6465)
!6475 = !DILocation(line: 1072, column: 1, scope: !6465)
!6476 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !203, file: !203, line: 878, type: !2681, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6477)
!6477 = !{!6478, !6479}
!6478 = !DILocalVariable(name: "dev", arg: 1, scope: !6476, file: !203, line: 878, type: !2630)
!6479 = !DILocalVariable(name: "api", scope: !6476, file: !203, line: 881, type: !2622)
!6480 = !DILocation(line: 0, scope: !6476)
!6481 = !DILocation(line: 882, column: 40, scope: !6476)
!6482 = !DILocation(line: 884, column: 11, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6476, file: !203, line: 884, column: 6)
!6484 = !DILocation(line: 884, column: 26, scope: !6483)
!6485 = !DILocation(line: 884, column: 6, scope: !6476)
!6486 = !DILocation(line: 885, column: 3, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !203, line: 884, column: 35)
!6488 = !DILocation(line: 886, column: 2, scope: !6487)
!6489 = !DILocation(line: 890, column: 1, scope: !6476)
!6490 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !203, file: !203, line: 1136, type: !2651, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6491)
!6491 = !{!6492, !6493}
!6492 = !DILocalVariable(name: "dev", arg: 1, scope: !6490, file: !203, line: 1136, type: !2630)
!6493 = !DILocalVariable(name: "api", scope: !6490, file: !203, line: 1139, type: !2622)
!6494 = !DILocation(line: 0, scope: !6490)
!6495 = !DILocation(line: 1140, column: 40, scope: !6490)
!6496 = !DILocation(line: 1142, column: 11, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6490, file: !203, line: 1142, column: 6)
!6498 = !DILocation(line: 1142, column: 22, scope: !6497)
!6499 = !DILocation(line: 1142, column: 6, scope: !6490)
!6500 = !DILocation(line: 1145, column: 9, scope: !6490)
!6501 = !DILocation(line: 1145, column: 2, scope: !6490)
!6502 = !DILocation(line: 1150, column: 1, scope: !6490)
!6503 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5838, file: !5838, line: 265, type: !6504, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6506)
!6504 = !DISubroutineType(types: !6505)
!6505 = !{!103, !5843, !102, !344}
!6506 = !{!6507, !6508, !6509}
!6507 = !DILocalVariable(name: "tty", arg: 1, scope: !6503, file: !5838, line: 265, type: !5843)
!6508 = !DILocalVariable(name: "buf", arg: 2, scope: !6503, file: !5838, line: 265, type: !102)
!6509 = !DILocalVariable(name: "size", arg: 3, scope: !6503, file: !5838, line: 265, type: !344)
!6510 = !DILocation(line: 0, scope: !6503)
!6511 = !DILocation(line: 267, column: 27, scope: !6503)
!6512 = !DILocation(line: 267, column: 2, scope: !6503)
!6513 = !DILocation(line: 269, column: 7, scope: !6503)
!6514 = !DILocation(line: 269, column: 18, scope: !6503)
!6515 = !DILocation(line: 270, column: 7, scope: !6503)
!6516 = !DILocation(line: 270, column: 21, scope: !6503)
!6517 = !DILocation(line: 272, column: 11, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6503, file: !5838, line: 272, column: 6)
!6519 = !DILocation(line: 272, column: 6, scope: !6503)
!6520 = !DILocation(line: 273, column: 20, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6518, file: !5838, line: 272, column: 16)
!6522 = !DILocation(line: 273, column: 3, scope: !6521)
!6523 = !DILocation(line: 274, column: 27, scope: !6521)
!6524 = !DILocation(line: 274, column: 3, scope: !6521)
!6525 = !DILocation(line: 275, column: 2, scope: !6521)
!6526 = !DILocation(line: 277, column: 2, scope: !6503)
!6527 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5927, file: !5927, line: 265, type: !2681, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6528)
!6528 = !{!6529}
!6529 = !DILocalVariable(name: "dev", arg: 1, scope: !6527, file: !5927, line: 265, type: !2630)
!6530 = !DILocation(line: 0, scope: !6527)
!6531 = !DILocation(line: 274, column: 2, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6527, file: !5927, line: 274, column: 2)
!6533 = !{i64 2155011375}
!6534 = !DILocation(line: 275, column: 2, scope: !6527)
!6535 = !DILocation(line: 276, column: 1, scope: !6527)
!6536 = distinct !DISubprogram(name: "k_sem_init", scope: !3670, file: !3670, line: 1026, type: !6537, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6539)
!6537 = !DISubroutineType(types: !6538)
!6538 = !{!103, !6040, !32, !32}
!6539 = !{!6540, !6541, !6542}
!6540 = !DILocalVariable(name: "sem", arg: 1, scope: !6536, file: !3670, line: 1026, type: !6040)
!6541 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6536, file: !3670, line: 1026, type: !32)
!6542 = !DILocalVariable(name: "limit", arg: 3, scope: !6536, file: !3670, line: 1026, type: !32)
!6543 = !DILocation(line: 0, scope: !6536)
!6544 = !DILocation(line: 1036, column: 2, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6536, file: !3670, line: 1036, column: 2)
!6546 = !{i64 2154746019}
!6547 = !DILocation(line: 1037, column: 9, scope: !6536)
!6548 = !DILocation(line: 1037, column: 2, scope: !6536)
!6549 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5927, file: !5927, line: 241, type: !2681, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6550)
!6550 = !{!6551}
!6551 = !DILocalVariable(name: "dev", arg: 1, scope: !6549, file: !5927, line: 241, type: !2630)
!6552 = !DILocation(line: 0, scope: !6549)
!6553 = !DILocation(line: 250, column: 2, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6549, file: !5927, line: 250, column: 2)
!6555 = !{i64 2155011307}
!6556 = !DILocation(line: 251, column: 2, scope: !6549)
!6557 = !DILocation(line: 252, column: 1, scope: !6549)
!6558 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !203, file: !203, line: 934, type: !2681, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6559)
!6559 = !{!6560, !6561}
!6560 = !DILocalVariable(name: "dev", arg: 1, scope: !6558, file: !203, line: 934, type: !2630)
!6561 = !DILocalVariable(name: "api", scope: !6558, file: !203, line: 937, type: !2622)
!6562 = !DILocation(line: 0, scope: !6558)
!6563 = !DILocation(line: 938, column: 40, scope: !6558)
!6564 = !DILocation(line: 940, column: 11, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6558, file: !203, line: 940, column: 6)
!6566 = !DILocation(line: 940, column: 25, scope: !6565)
!6567 = !DILocation(line: 940, column: 6, scope: !6558)
!6568 = !DILocation(line: 941, column: 3, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !203, line: 940, column: 34)
!6570 = !DILocation(line: 942, column: 2, scope: !6569)
!6571 = !DILocation(line: 946, column: 1, scope: !6558)
!6572 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !203, file: !203, line: 955, type: !2681, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6573)
!6573 = !{!6574, !6575}
!6574 = !DILocalVariable(name: "dev", arg: 1, scope: !6572, file: !203, line: 955, type: !2630)
!6575 = !DILocalVariable(name: "api", scope: !6572, file: !203, line: 958, type: !2622)
!6576 = !DILocation(line: 0, scope: !6572)
!6577 = !DILocation(line: 959, column: 40, scope: !6572)
!6578 = !DILocation(line: 961, column: 11, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6572, file: !203, line: 961, column: 6)
!6580 = !DILocation(line: 961, column: 26, scope: !6579)
!6581 = !DILocation(line: 961, column: 6, scope: !6572)
!6582 = !DILocation(line: 962, column: 3, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6579, file: !203, line: 961, column: 35)
!6584 = !DILocation(line: 963, column: 2, scope: !6583)
!6585 = !DILocation(line: 967, column: 1, scope: !6572)
!6586 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5838, file: !5838, line: 280, type: !6504, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6587)
!6587 = !{!6588, !6589, !6590}
!6588 = !DILocalVariable(name: "tty", arg: 1, scope: !6586, file: !5838, line: 280, type: !5843)
!6589 = !DILocalVariable(name: "buf", arg: 2, scope: !6586, file: !5838, line: 280, type: !102)
!6590 = !DILocalVariable(name: "size", arg: 3, scope: !6586, file: !5838, line: 280, type: !344)
!6591 = !DILocation(line: 0, scope: !6586)
!6592 = !DILocation(line: 282, column: 27, scope: !6586)
!6593 = !DILocation(line: 282, column: 2, scope: !6586)
!6594 = !DILocation(line: 284, column: 7, scope: !6586)
!6595 = !DILocation(line: 284, column: 18, scope: !6586)
!6596 = !DILocation(line: 285, column: 7, scope: !6586)
!6597 = !DILocation(line: 285, column: 21, scope: !6586)
!6598 = !DILocation(line: 287, column: 19, scope: !6586)
!6599 = !DILocation(line: 287, column: 32, scope: !6586)
!6600 = !DILocation(line: 287, column: 2, scope: !6586)
!6601 = !DILocation(line: 293, column: 2, scope: !6586)
!6602 = distinct !DISubprogram(name: "console_write", scope: !288, file: !288, line: 18, type: !6603, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6605)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{!5841, !102, !13, !344}
!6605 = !{!6606, !6607, !6608}
!6606 = !DILocalVariable(name: "dummy", arg: 1, scope: !6602, file: !288, line: 18, type: !102)
!6607 = !DILocalVariable(name: "buf", arg: 2, scope: !6602, file: !288, line: 18, type: !13)
!6608 = !DILocalVariable(name: "size", arg: 3, scope: !6602, file: !288, line: 18, type: !344)
!6609 = !DILocation(line: 0, scope: !6602)
!6610 = !DILocation(line: 22, column: 9, scope: !6602)
!6611 = !DILocation(line: 22, column: 2, scope: !6602)
!6612 = distinct !DISubprogram(name: "console_read", scope: !288, file: !288, line: 25, type: !6613, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6615)
!6613 = !DISubroutineType(types: !6614)
!6614 = !{!5841, !102, !102, !344}
!6615 = !{!6616, !6617, !6618}
!6616 = !DILocalVariable(name: "dummy", arg: 1, scope: !6612, file: !288, line: 25, type: !102)
!6617 = !DILocalVariable(name: "buf", arg: 2, scope: !6612, file: !288, line: 25, type: !102)
!6618 = !DILocalVariable(name: "size", arg: 3, scope: !6612, file: !288, line: 25, type: !344)
!6619 = !DILocation(line: 0, scope: !6612)
!6620 = !DILocation(line: 29, column: 9, scope: !6612)
!6621 = !DILocation(line: 29, column: 2, scope: !6612)
!6622 = distinct !DISubprogram(name: "console_putchar", scope: !288, file: !288, line: 32, type: !1075, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6623)
!6623 = !{!6624}
!6624 = !DILocalVariable(name: "c", arg: 1, scope: !6622, file: !288, line: 32, type: !146)
!6625 = !DILocation(line: 0, scope: !6622)
!6626 = !DILocation(line: 34, column: 9, scope: !6622)
!6627 = !DILocation(line: 34, column: 2, scope: !6622)
!6628 = distinct !DISubprogram(name: "console_getchar", scope: !288, file: !288, line: 37, type: !6629, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6631)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{!103}
!6631 = !{!6632, !6633}
!6632 = !DILocalVariable(name: "c", scope: !6628, file: !288, line: 39, type: !154)
!6633 = !DILocalVariable(name: "res", scope: !6628, file: !288, line: 40, type: !103)
!6634 = !DILocation(line: 39, column: 2, scope: !6628)
!6635 = !DILocation(line: 0, scope: !6628)
!6636 = !DILocation(line: 42, column: 8, scope: !6628)
!6637 = !DILocation(line: 43, column: 10, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6628, file: !288, line: 43, column: 6)
!6639 = !DILocation(line: 43, column: 6, scope: !6628)
!6640 = !DILocation(line: 48, column: 1, scope: !6628)
!6641 = distinct !DISubprogram(name: "console_init", scope: !288, file: !288, line: 50, type: !6629, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6642)
!6642 = !{!6643, !6644, !6645}
!6643 = !DILocalVariable(name: "uart_dev", scope: !6641, file: !288, line: 52, type: !209)
!6644 = !DILocalVariable(name: "ret", scope: !6641, file: !288, line: 53, type: !103)
!6645 = !DILocalVariable(name: "api", scope: !6646, file: !288, line: 68, type: !200)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !288, line: 67, column: 71)
!6647 = distinct !DILexicalBlock(scope: !6641, file: !288, line: 67, column: 6)
!6648 = !DILocation(line: 0, scope: !6641)
!6649 = !DILocation(line: 56, column: 7, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6641, file: !288, line: 56, column: 6)
!6651 = !DILocation(line: 56, column: 6, scope: !6641)
!6652 = !DILocation(line: 60, column: 8, scope: !6641)
!6653 = !DILocation(line: 62, column: 6, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6641, file: !288, line: 62, column: 6)
!6655 = !DILocation(line: 62, column: 6, scope: !6641)
!6656 = !DILocation(line: 69, column: 46, scope: !6646)
!6657 = !DILocation(line: 0, scope: !6646)
!6658 = !DILocation(line: 70, column: 13, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6646, file: !288, line: 70, column: 7)
!6660 = !DILocation(line: 70, column: 8, scope: !6659)
!6661 = !DILocation(line: 75, column: 2, scope: !6641)
!6662 = !DILocation(line: 76, column: 2, scope: !6641)
!6663 = !DILocation(line: 78, column: 2, scope: !6641)
!6664 = !DILocation(line: 79, column: 1, scope: !6641)
!6665 = distinct !DISubprogram(name: "device_is_ready", scope: !6666, file: !6666, line: 47, type: !6667, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6669)
!6666 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!157, !209}
!6669 = !{!6670}
!6670 = !DILocalVariable(name: "dev", arg: 1, scope: !6665, file: !6666, line: 47, type: !209)
!6671 = !DILocation(line: 0, scope: !6665)
!6672 = !DILocation(line: 55, column: 2, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6665, file: !6666, line: 55, column: 2)
!6674 = !{i64 2154923588}
!6675 = !DILocation(line: 56, column: 9, scope: !6665)
!6676 = !DILocation(line: 56, column: 2, scope: !6665)
!6677 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !6667, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6678)
!6678 = !{!6679}
!6679 = !DILocalVariable(name: "dev", arg: 1, scope: !6677, file: !141, line: 730, type: !209)
!6680 = !DILocation(line: 0, scope: !6677)
!6681 = !DILocation(line: 732, column: 9, scope: !6677)
!6682 = !DILocation(line: 732, column: 2, scope: !6677)
!6683 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6684, file: !6684, line: 57, type: !6685, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6731)
!6684 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6685 = !DISubroutineType(types: !6686)
!6686 = !{null, !32, !6687}
!6687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6688, size: 32)
!6688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6689)
!6689 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2821, line: 141, baseType: !6690)
!6690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2821, line: 97, size: 256, elements: !6691)
!6691 = !{!6692}
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6690, file: !2821, line: 107, baseType: !6693, size: 256)
!6693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2821, line: 98, size: 256, elements: !6694)
!6694 = !{!6695, !6700, !6705, !6710, !6715, !6720, !6725, !6730}
!6695 = !DIDerivedType(tag: DW_TAG_member, scope: !6693, file: !2821, line: 99, baseType: !6696, size: 32)
!6696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6693, file: !2821, line: 99, size: 32, elements: !6697)
!6697 = !{!6698, !6699}
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6696, file: !2821, line: 99, baseType: !121, size: 32)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6696, file: !2821, line: 99, baseType: !121, size: 32)
!6700 = !DIDerivedType(tag: DW_TAG_member, scope: !6693, file: !2821, line: 100, baseType: !6701, size: 32, offset: 32)
!6701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6693, file: !2821, line: 100, size: 32, elements: !6702)
!6702 = !{!6703, !6704}
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6701, file: !2821, line: 100, baseType: !121, size: 32)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6701, file: !2821, line: 100, baseType: !121, size: 32)
!6705 = !DIDerivedType(tag: DW_TAG_member, scope: !6693, file: !2821, line: 101, baseType: !6706, size: 32, offset: 64)
!6706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6693, file: !2821, line: 101, size: 32, elements: !6707)
!6707 = !{!6708, !6709}
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6706, file: !2821, line: 101, baseType: !121, size: 32)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6706, file: !2821, line: 101, baseType: !121, size: 32)
!6710 = !DIDerivedType(tag: DW_TAG_member, scope: !6693, file: !2821, line: 102, baseType: !6711, size: 32, offset: 96)
!6711 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6693, file: !2821, line: 102, size: 32, elements: !6712)
!6712 = !{!6713, !6714}
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6711, file: !2821, line: 102, baseType: !121, size: 32)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6711, file: !2821, line: 102, baseType: !121, size: 32)
!6715 = !DIDerivedType(tag: DW_TAG_member, scope: !6693, file: !2821, line: 103, baseType: !6716, size: 32, offset: 128)
!6716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6693, file: !2821, line: 103, size: 32, elements: !6717)
!6717 = !{!6718, !6719}
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6716, file: !2821, line: 103, baseType: !121, size: 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6716, file: !2821, line: 103, baseType: !121, size: 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, scope: !6693, file: !2821, line: 104, baseType: !6721, size: 32, offset: 160)
!6721 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6693, file: !2821, line: 104, size: 32, elements: !6722)
!6722 = !{!6723, !6724}
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6721, file: !2821, line: 104, baseType: !121, size: 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6721, file: !2821, line: 104, baseType: !121, size: 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, scope: !6693, file: !2821, line: 105, baseType: !6726, size: 32, offset: 192)
!6726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6693, file: !2821, line: 105, size: 32, elements: !6727)
!6727 = !{!6728, !6729}
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6726, file: !2821, line: 105, baseType: !121, size: 32)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6726, file: !2821, line: 105, baseType: !121, size: 32)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6693, file: !2821, line: 106, baseType: !121, size: 32, offset: 224)
!6731 = !{!6732, !6733}
!6732 = !DILocalVariable(name: "reason", arg: 1, scope: !6683, file: !6684, line: 57, type: !32)
!6733 = !DILocalVariable(name: "esf", arg: 2, scope: !6683, file: !6684, line: 57, type: !6687)
!6734 = !DILocation(line: 0, scope: !6683)
!6735 = !DILocation(line: 63, column: 2, scope: !6683)
!6736 = !DILocation(line: 64, column: 1, scope: !6683)
!6737 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6684, file: !6684, line: 82, type: !6738, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6753)
!6738 = !DISubroutineType(types: !6739)
!6739 = !{null, !6687, !6740}
!6740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6741, size: 32)
!6741 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !424, line: 37, baseType: !6742)
!6742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !6743)
!6743 = !{!6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752}
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6742, file: !424, line: 26, baseType: !121, size: 32)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6742, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6742, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6742, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6742, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6742, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6742, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6742, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6742, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!6753 = !{!6754, !6755, !6756}
!6754 = !DILocalVariable(name: "esf", arg: 1, scope: !6737, file: !6684, line: 82, type: !6687)
!6755 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6737, file: !6684, line: 82, type: !6740)
!6756 = !DILocalVariable(name: "reason", scope: !6737, file: !6684, line: 88, type: !32)
!6757 = !DILocation(line: 0, scope: !6737)
!6758 = !DILocation(line: 88, column: 35, scope: !6737)
!6759 = !DILocation(line: 108, column: 2, scope: !6737)
!6760 = !DILocation(line: 131, column: 1, scope: !6737)
!6761 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6684, file: !6684, line: 133, type: !6762, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6764)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{null, !102}
!6764 = !{!6765, !6766, !6767}
!6765 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6761, file: !6684, line: 133, type: !102)
!6766 = !DILocalVariable(name: "ssf_contents", scope: !6761, file: !6684, line: 135, type: !843)
!6767 = !DILocalVariable(name: "oops_esf", scope: !6761, file: !6684, line: 136, type: !6689)
!6768 = !DILocation(line: 0, scope: !6761)
!6769 = !DILocation(line: 136, column: 2, scope: !6761)
!6770 = !DILocation(line: 136, column: 15, scope: !6761)
!6771 = !DILocation(line: 139, column: 22, scope: !6761)
!6772 = !DILocation(line: 139, column: 17, scope: !6761)
!6773 = !DILocation(line: 139, column: 20, scope: !6761)
!6774 = !DILocation(line: 141, column: 2, scope: !6761)
!6775 = !DILocation(line: 142, column: 2, scope: !6761)
!6776 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6777, file: !6777, line: 40, type: !5816, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !6778)
!6777 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6778 = !{!6779}
!6779 = !DILocalVariable(name: "irq", arg: 1, scope: !6776, file: !6777, line: 40, type: !32)
!6780 = !DILocation(line: 0, scope: !6776)
!6781 = !DILocation(line: 42, column: 2, scope: !6776)
!6782 = !DILocation(line: 43, column: 1, scope: !6776)
!6783 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !495, file: !495, line: 1684, type: !6784, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !6786)
!6784 = !DISubroutineType(types: !6785)
!6785 = !{null, !750}
!6786 = !{!6787}
!6787 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6783, file: !495, line: 1684, type: !750)
!6788 = !DILocation(line: 0, scope: !6783)
!6789 = !DILocation(line: 1686, column: 23, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6783, file: !495, line: 1686, column: 7)
!6791 = !DILocation(line: 1686, column: 7, scope: !6783)
!6792 = !DILocation(line: 1688, column: 5, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6790, file: !495, line: 1687, column: 3)
!6794 = !{i64 2151023760}
!6795 = !DILocation(line: 1689, column: 81, scope: !6793)
!6796 = !DILocation(line: 1689, column: 60, scope: !6793)
!6797 = !DILocation(line: 1689, column: 34, scope: !6793)
!6798 = !DILocation(line: 1689, column: 5, scope: !6793)
!6799 = !DILocation(line: 1689, column: 43, scope: !6793)
!6800 = !DILocation(line: 1690, column: 5, scope: !6793)
!6801 = !{i64 2151023874}
!6802 = !DILocation(line: 1691, column: 3, scope: !6793)
!6803 = !DILocation(line: 1692, column: 1, scope: !6783)
!6804 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6777, file: !6777, line: 45, type: !5816, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !6805)
!6805 = !{!6806}
!6806 = !DILocalVariable(name: "irq", arg: 1, scope: !6804, file: !6777, line: 45, type: !32)
!6807 = !DILocation(line: 0, scope: !6804)
!6808 = !DILocation(line: 47, column: 2, scope: !6804)
!6809 = !DILocation(line: 48, column: 1, scope: !6804)
!6810 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !495, file: !495, line: 1722, type: !6784, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !6811)
!6811 = !{!6812}
!6812 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6810, file: !495, line: 1722, type: !750)
!6813 = !DILocation(line: 0, scope: !6810)
!6814 = !DILocation(line: 1724, column: 23, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6810, file: !495, line: 1724, column: 7)
!6816 = !DILocation(line: 1724, column: 7, scope: !6810)
!6817 = !DILocation(line: 1726, column: 81, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6815, file: !495, line: 1725, column: 3)
!6819 = !DILocation(line: 1726, column: 60, scope: !6818)
!6820 = !DILocation(line: 1726, column: 34, scope: !6818)
!6821 = !DILocation(line: 1726, column: 5, scope: !6818)
!6822 = !DILocation(line: 1726, column: 43, scope: !6818)
!6823 = !DILocation(line: 271, column: 3, scope: !6824, inlinedAt: !6826)
!6824 = distinct !DISubprogram(name: "__DSB", scope: !6825, file: !6825, line: 269, type: !3237, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !461)
!6825 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6826 = distinct !DILocation(line: 1727, column: 5, scope: !6818)
!6827 = !{i64 3478143}
!6828 = !DILocation(line: 260, column: 3, scope: !6829, inlinedAt: !6830)
!6829 = distinct !DISubprogram(name: "__ISB", scope: !6825, file: !6825, line: 258, type: !3237, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !461)
!6830 = distinct !DILocation(line: 1728, column: 5, scope: !6818)
!6831 = !{i64 3477860}
!6832 = !DILocation(line: 1729, column: 3, scope: !6818)
!6833 = !DILocation(line: 1730, column: 1, scope: !6810)
!6834 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6777, file: !6777, line: 50, type: !6835, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !6837)
!6835 = !DISubroutineType(types: !6836)
!6836 = !{!103, !32}
!6837 = !{!6838}
!6838 = !DILocalVariable(name: "irq", arg: 1, scope: !6834, file: !6777, line: 50, type: !32)
!6839 = !DILocation(line: 0, scope: !6834)
!6840 = !DILocation(line: 52, column: 20, scope: !6834)
!6841 = !DILocation(line: 52, column: 9, scope: !6834)
!6842 = !DILocation(line: 52, column: 41, scope: !6834)
!6843 = !DILocation(line: 52, column: 39, scope: !6834)
!6844 = !DILocation(line: 52, column: 2, scope: !6834)
!6845 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6777, file: !6777, line: 64, type: !6846, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !6848)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{null, !32, !32, !121}
!6848 = !{!6849, !6850, !6851}
!6849 = !DILocalVariable(name: "irq", arg: 1, scope: !6845, file: !6777, line: 64, type: !32)
!6850 = !DILocalVariable(name: "prio", arg: 2, scope: !6845, file: !6777, line: 64, type: !32)
!6851 = !DILocalVariable(name: "flags", arg: 3, scope: !6845, file: !6777, line: 64, type: !121)
!6852 = !DILocation(line: 0, scope: !6845)
!6853 = !DILocation(line: 83, column: 8, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6777, line: 82, column: 9)
!6855 = distinct !DILexicalBlock(scope: !6845, file: !6777, line: 76, column: 6)
!6856 = !DILocation(line: 95, column: 2, scope: !6845)
!6857 = !DILocation(line: 96, column: 1, scope: !6845)
!6858 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6859, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !6861)
!6859 = !DISubroutineType(types: !6860)
!6860 = !{null, !750, !121}
!6861 = !{!6862, !6863}
!6862 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6858, file: !495, line: 1814, type: !750)
!6863 = !DILocalVariable(name: "priority", arg: 2, scope: !6858, file: !495, line: 1814, type: !121)
!6864 = !DILocation(line: 0, scope: !6858)
!6865 = !DILocation(line: 0, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6858, file: !495, line: 1816, column: 7)
!6867 = !DILocation(line: 1816, column: 7, scope: !6858)
!6868 = !DILocation(line: 1824, column: 1, scope: !6858)
!6869 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6777, file: !6777, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2712, retainedNodes: !6870)
!6870 = !{!6871}
!6871 = !DILocalVariable(name: "unused", arg: 1, scope: !6869, file: !6777, line: 155, type: !13)
!6872 = !DILocation(line: 0, scope: !6869)
!6873 = !DILocation(line: 159, column: 2, scope: !6869)
!6874 = !DILocation(line: 160, column: 1, scope: !6869)
!6875 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6876, file: !6876, line: 87, type: !3237, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !461)
!6876 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6877 = !DILocation(line: 89, column: 2, scope: !6875)
!6878 = !DILocation(line: 90, column: 2, scope: !6875)
!6879 = !DILocation(line: 91, column: 1, scope: !6875)
!6880 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6876, file: !6876, line: 23, type: !3237, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!6881 = !DISubprogram(name: "z_arm_int_exit", scope: !6882, file: !6882, line: 153, type: !3237, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!6882 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6883 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6884, file: !6884, line: 256, type: !3237, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !461)
!6884 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6885 = !DILocation(line: 258, column: 2, scope: !6883)
!6886 = !DILocation(line: 260, column: 2, scope: !6883)
!6887 = !DILocation(line: 262, column: 2, scope: !6883)
!6888 = !DILocation(line: 263, column: 2, scope: !6883)
!6889 = !DILocation(line: 267, column: 2, scope: !6883)
!6890 = !DILocation(line: 268, column: 2, scope: !6883)
!6891 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6884, file: !6884, line: 53, type: !3237, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !461)
!6892 = !DILocation(line: 55, column: 12, scope: !6891)
!6893 = !DILocation(line: 271, column: 3, scope: !6894, inlinedAt: !6895)
!6894 = distinct !DISubprogram(name: "__DSB", scope: !6825, file: !6825, line: 269, type: !3237, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !461)
!6895 = distinct !DILocation(line: 56, column: 2, scope: !6891)
!6896 = !{i64 3476814}
!6897 = !DILocation(line: 260, column: 3, scope: !6898, inlinedAt: !6899)
!6898 = distinct !DISubprogram(name: "__ISB", scope: !6825, file: !6825, line: 258, type: !3237, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !461)
!6899 = distinct !DILocation(line: 57, column: 2, scope: !6891)
!6900 = !{i64 3476531}
!6901 = !DILocation(line: 58, column: 1, scope: !6891)
!6902 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6884, file: !6884, line: 96, type: !3237, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !461)
!6903 = !DILocation(line: 103, column: 13, scope: !6902)
!6904 = !DILocation(line: 975, column: 3, scope: !6905, inlinedAt: !6910)
!6905 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6825, file: !6825, line: 971, type: !6906, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !6908)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{!121}
!6908 = !{!6909}
!6909 = !DILocalVariable(name: "result", scope: !6905, file: !6825, line: 973, type: !121)
!6910 = distinct !DILocation(line: 189, column: 16, scope: !6902)
!6911 = !{i64 3497644}
!6912 = !DILocation(line: 0, scope: !6905, inlinedAt: !6910)
!6913 = !DILocation(line: 189, column: 32, scope: !6902)
!6914 = !DILocalVariable(name: "control", arg: 1, scope: !6915, file: !6825, line: 1001, type: !121)
!6915 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6825, file: !6825, line: 1001, type: !6916, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !6918)
!6916 = !DISubroutineType(types: !6917)
!6917 = !{null, !121}
!6918 = !{!6914}
!6919 = !DILocation(line: 0, scope: !6915, inlinedAt: !6920)
!6920 = distinct !DILocation(line: 189, column: 2, scope: !6902)
!6921 = !DILocation(line: 1003, column: 3, scope: !6915, inlinedAt: !6920)
!6922 = !{i64 3498364}
!6923 = !DILocation(line: 260, column: 3, scope: !6898, inlinedAt: !6924)
!6924 = distinct !DILocation(line: 1004, column: 3, scope: !6915, inlinedAt: !6920)
!6925 = !DILocation(line: 191, column: 1, scope: !6902)
!6926 = distinct !DISubprogram(name: "arch_swap", scope: !6927, file: !6927, line: 33, type: !6835, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !6928)
!6927 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6928 = !{!6929}
!6929 = !DILocalVariable(name: "key", arg: 1, scope: !6926, file: !6927, line: 33, type: !32)
!6930 = !DILocation(line: 0, scope: !6926)
!6931 = !DILocation(line: 36, column: 2, scope: !6926)
!6932 = !DILocation(line: 36, column: 17, scope: !6926)
!6933 = !DILocation(line: 36, column: 25, scope: !6926)
!6934 = !DILocation(line: 37, column: 37, scope: !6926)
!6935 = !DILocation(line: 37, column: 17, scope: !6926)
!6936 = !DILocation(line: 37, column: 35, scope: !6926)
!6937 = !DILocation(line: 41, column: 12, scope: !6926)
!6938 = !DILocalVariable(name: "key", arg: 1, scope: !6939, file: !5805, line: 84, type: !32)
!6939 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !6940)
!6940 = !{!6938}
!6941 = !DILocation(line: 0, scope: !6939, inlinedAt: !6942)
!6942 = distinct !DILocation(line: 44, column: 2, scope: !6926)
!6943 = !DILocation(line: 95, column: 2, scope: !6939, inlinedAt: !6942)
!6944 = !{i64 2238878}
!6945 = !DILocation(line: 53, column: 9, scope: !6926)
!6946 = !DILocation(line: 53, column: 24, scope: !6926)
!6947 = !DILocation(line: 53, column: 2, scope: !6926)
!6948 = distinct !DISubprogram(name: "arch_new_thread", scope: !6949, file: !6949, line: 56, type: !6950, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !7057)
!6949 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6950 = !DISubroutineType(types: !6951)
!6951 = !{null, !6952, !7052, !1069, !3548, !102, !102, !102}
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 32)
!6953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !6954)
!6954 = !{!6955, !7013, !7025, !7026, !7027, !7028, !7034, !7047}
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6953, file: !355, line: 247, baseType: !6956, size: 384)
!6956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !6957)
!6957 = !{!6958, !6982, !6989, !6990, !6991, !7000, !7001, !7002}
!6958 = !DIDerivedType(tag: DW_TAG_member, scope: !6956, file: !355, line: 60, baseType: !6959, size: 64)
!6959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6956, file: !355, line: 60, size: 64, elements: !6960)
!6960 = !{!6961, !6976}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6959, file: !355, line: 61, baseType: !6962, size: 64)
!6962 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !6963)
!6963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !6964)
!6964 = !{!6965, !6971}
!6965 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !309, line: 38, baseType: !6966, size: 32)
!6966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !309, line: 38, size: 32, elements: !6967)
!6967 = !{!6968, !6970}
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6966, file: !309, line: 39, baseType: !6969, size: 32)
!6969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6963, size: 32)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6966, file: !309, line: 40, baseType: !6969, size: 32)
!6971 = !DIDerivedType(tag: DW_TAG_member, scope: !6963, file: !309, line: 42, baseType: !6972, size: 32, offset: 32)
!6972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6963, file: !309, line: 42, size: 32, elements: !6973)
!6973 = !{!6974, !6975}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6972, file: !309, line: 43, baseType: !6969, size: 32)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6972, file: !309, line: 44, baseType: !6969, size: 32)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6959, file: !355, line: 62, baseType: !6977, size: 64)
!6977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !6978)
!6978 = !{!6979}
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6977, file: !380, line: 50, baseType: !6980, size: 64)
!6980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6981, size: 64, elements: !385)
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6977, size: 32)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6956, file: !355, line: 68, baseType: !6983, size: 32, offset: 64)
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !6985)
!6985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !6986)
!6986 = !{!6987}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6985, file: !304, line: 232, baseType: !6988, size: 64)
!6988 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !6963)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6956, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6956, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!6991 = !DIDerivedType(tag: DW_TAG_member, scope: !6956, file: !355, line: 90, baseType: !6992, size: 16, offset: 112)
!6992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6956, file: !355, line: 90, size: 16, elements: !6993)
!6993 = !{!6994, !6999}
!6994 = !DIDerivedType(tag: DW_TAG_member, scope: !6992, file: !355, line: 91, baseType: !6995, size: 16)
!6995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6992, file: !355, line: 91, size: 16, elements: !6996)
!6996 = !{!6997, !6998}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6995, file: !355, line: 96, baseType: !403, size: 8)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6995, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6992, file: !355, line: 100, baseType: !328, size: 16)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6956, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6956, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6956, file: !355, line: 131, baseType: !7003, size: 192, offset: 192)
!7003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !7004)
!7004 = !{!7005, !7006, !7012}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7003, file: !304, line: 245, baseType: !6962, size: 64)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7003, file: !304, line: 246, baseType: !7007, size: 32, offset: 64)
!7007 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !7008)
!7008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7009, size: 32)
!7009 = !DISubroutineType(types: !7010)
!7010 = !{null, !7011}
!7011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 32)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7003, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6953, file: !355, line: 250, baseType: !7014, size: 288, offset: 384)
!7014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7015)
!7015 = !{!7016, !7017, !7018, !7019, !7020, !7021, !7022, !7023, !7024}
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7014, file: !424, line: 26, baseType: !121, size: 32)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7014, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7014, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7014, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7014, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7014, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7014, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7014, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7014, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6953, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6953, file: !355, line: 256, baseType: !6984, size: 64, offset: 704)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6953, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6953, file: !355, line: 300, baseType: !7029, size: 96, offset: 800)
!7029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !7030)
!7030 = !{!7031, !7032, !7033}
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7029, file: !355, line: 153, baseType: !22, size: 32)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7029, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7029, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6953, file: !355, line: 325, baseType: !7035, size: 32, offset: 896)
!7035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7036, size: 32)
!7036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !7037)
!7037 = !{!7038, !7044, !7045}
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7036, file: !300, line: 5074, baseType: !7039, size: 96)
!7039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !7040)
!7040 = !{!7041, !7042, !7043}
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7039, file: !450, line: 57, baseType: !453, size: 32)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7039, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7039, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7036, file: !300, line: 5075, baseType: !6984, size: 64, offset: 96)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7036, file: !300, line: 5076, baseType: !7046, offset: 160)
!7046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6953, file: !355, line: 343, baseType: !7048, size: 64, offset: 928)
!7048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !7049)
!7049 = !{!7050, !7051}
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7048, file: !424, line: 63, baseType: !121, size: 32)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7048, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!7052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7053, size: 32)
!7053 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3549, line: 44, baseType: !7054)
!7054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2163, line: 47, size: 8, elements: !7055)
!7055 = !{!7056}
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7054, file: !2163, line: 48, baseType: !146, size: 8)
!7057 = !{!7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065}
!7058 = !DILocalVariable(name: "thread", arg: 1, scope: !6948, file: !6949, line: 56, type: !6952)
!7059 = !DILocalVariable(name: "stack", arg: 2, scope: !6948, file: !6949, line: 56, type: !7052)
!7060 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6948, file: !6949, line: 57, type: !1069)
!7061 = !DILocalVariable(name: "entry", arg: 4, scope: !6948, file: !6949, line: 57, type: !3548)
!7062 = !DILocalVariable(name: "p1", arg: 5, scope: !6948, file: !6949, line: 58, type: !102)
!7063 = !DILocalVariable(name: "p2", arg: 6, scope: !6948, file: !6949, line: 58, type: !102)
!7064 = !DILocalVariable(name: "p3", arg: 7, scope: !6948, file: !6949, line: 58, type: !102)
!7065 = !DILocalVariable(name: "iframe", scope: !6948, file: !6949, line: 60, type: !2819)
!7066 = !DILocation(line: 0, scope: !6948)
!7067 = !DILocation(line: 85, column: 11, scope: !6948)
!7068 = !DILocation(line: 93, column: 10, scope: !6948)
!7069 = !DILocation(line: 98, column: 13, scope: !6948)
!7070 = !DILocation(line: 100, column: 15, scope: !6948)
!7071 = !DILocation(line: 100, column: 10, scope: !6948)
!7072 = !DILocation(line: 100, column: 13, scope: !6948)
!7073 = !DILocation(line: 101, column: 15, scope: !6948)
!7074 = !DILocation(line: 101, column: 10, scope: !6948)
!7075 = !DILocation(line: 101, column: 13, scope: !6948)
!7076 = !DILocation(line: 102, column: 15, scope: !6948)
!7077 = !DILocation(line: 102, column: 10, scope: !6948)
!7078 = !DILocation(line: 102, column: 13, scope: !6948)
!7079 = !DILocation(line: 103, column: 15, scope: !6948)
!7080 = !DILocation(line: 103, column: 10, scope: !6948)
!7081 = !DILocation(line: 103, column: 13, scope: !6948)
!7082 = !DILocation(line: 106, column: 10, scope: !6948)
!7083 = !DILocation(line: 106, column: 15, scope: !6948)
!7084 = !DILocation(line: 122, column: 29, scope: !6948)
!7085 = !DILocation(line: 122, column: 23, scope: !6948)
!7086 = !DILocation(line: 122, column: 27, scope: !6948)
!7087 = !DILocation(line: 123, column: 15, scope: !6948)
!7088 = !DILocation(line: 123, column: 23, scope: !6948)
!7089 = !DILocation(line: 143, column: 1, scope: !6948)
!7090 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6949, file: !6949, line: 385, type: !7091, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !7094)
!7091 = !DISubroutineType(types: !7092)
!7092 = !{!121, !7093, !7093}
!7093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!7094 = !{!7095, !7096, !7097, !7100}
!7095 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7090, file: !6949, line: 385, type: !7093)
!7096 = !DILocalVariable(name: "psp", arg: 2, scope: !7090, file: !6949, line: 385, type: !7093)
!7097 = !DILocalVariable(name: "thread", scope: !7090, file: !6949, line: 388, type: !7098)
!7098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7099, size: 32)
!7099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6953)
!7100 = !DILocalVariable(name: "guard_len", scope: !7090, file: !6949, line: 405, type: !121)
!7101 = !DILocation(line: 0, scope: !7090)
!7102 = !DILocation(line: 388, column: 34, scope: !7090)
!7103 = !DILocation(line: 390, column: 13, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7090, file: !6949, line: 390, column: 6)
!7105 = !DILocation(line: 390, column: 6, scope: !7090)
!7106 = !DILocation(line: 438, column: 6, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7090, file: !6949, line: 438, column: 6)
!7108 = !DILocation(line: 438, column: 6, scope: !7090)
!7109 = !DILocation(line: 442, column: 3, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7107, file: !6949, line: 440, column: 22)
!7111 = !DILocation(line: 455, column: 1, scope: !7090)
!7112 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6949, file: !6949, line: 530, type: !7113, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !7115)
!7113 = !DISubroutineType(types: !7114)
!7114 = !{null, !6952, !1069, !3548}
!7115 = !{!7116, !7117, !7118}
!7116 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7112, file: !6949, line: 530, type: !6952)
!7117 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7112, file: !6949, line: 530, type: !1069)
!7118 = !DILocalVariable(name: "_main", arg: 3, scope: !7112, file: !6949, line: 531, type: !3548)
!7119 = !DILocation(line: 0, scope: !7112)
!7120 = !DILocation(line: 535, column: 11, scope: !7112)
!7121 = !DILocation(line: 560, column: 2, scope: !7112)
!7122 = !DILocation(line: 576, column: 2, scope: !7112)
!7123 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7124 = !DILocation(line: 603, column: 2, scope: !7112)
!7125 = distinct !DISubprogram(name: "z_arm_fault", scope: !7126, file: !7126, line: 1036, type: !7127, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7142)
!7126 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7127 = !DISubroutineType(types: !7128)
!7128 = !{null, !121, !121, !121, !7129}
!7129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7130, size: 32)
!7130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !424, line: 37, baseType: !7131)
!7131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7132)
!7132 = !{!7133, !7134, !7135, !7136, !7137, !7138, !7139, !7140, !7141}
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7131, file: !424, line: 26, baseType: !121, size: 32)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7131, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7131, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7131, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7131, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7131, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7131, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7131, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7131, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7142 = !{!7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7151, !7152}
!7143 = !DILocalVariable(name: "msp", arg: 1, scope: !7125, file: !7126, line: 1036, type: !121)
!7144 = !DILocalVariable(name: "psp", arg: 2, scope: !7125, file: !7126, line: 1036, type: !121)
!7145 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7125, file: !7126, line: 1036, type: !121)
!7146 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7125, file: !7126, line: 1037, type: !7129)
!7147 = !DILocalVariable(name: "reason", scope: !7125, file: !7126, line: 1039, type: !121)
!7148 = !DILocalVariable(name: "fault", scope: !7125, file: !7126, line: 1040, type: !103)
!7149 = !DILocalVariable(name: "recoverable", scope: !7125, file: !7126, line: 1041, type: !157)
!7150 = !DILocalVariable(name: "nested_exc", scope: !7125, file: !7126, line: 1041, type: !157)
!7151 = !DILocalVariable(name: "esf", scope: !7125, file: !7126, line: 1042, type: !2887)
!7152 = !DILocalVariable(name: "esf_copy", scope: !7125, file: !7126, line: 1047, type: !2888)
!7153 = !DILocation(line: 0, scope: !7125)
!7154 = !DILocation(line: 1040, column: 19, scope: !7125)
!7155 = !DILocation(line: 1040, column: 24, scope: !7125)
!7156 = !DILocation(line: 1041, column: 2, scope: !7125)
!7157 = !DILocation(line: 1047, column: 2, scope: !7125)
!7158 = !DILocation(line: 1047, column: 15, scope: !7125)
!7159 = !DILocalVariable(name: "key", arg: 1, scope: !7160, file: !5805, line: 84, type: !32)
!7160 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7161)
!7161 = !{!7159}
!7162 = !DILocation(line: 0, scope: !7160, inlinedAt: !7163)
!7163 = distinct !DILocation(line: 1050, column: 2, scope: !7125)
!7164 = !DILocation(line: 95, column: 2, scope: !7160, inlinedAt: !7163)
!7165 = !{i64 2272122}
!7166 = !DILocation(line: 1055, column: 9, scope: !7125)
!7167 = !DILocation(line: 1063, column: 11, scope: !7125)
!7168 = !DILocation(line: 1064, column: 6, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7125, file: !7126, line: 1064, column: 6)
!7170 = !{i8 0, i8 2}
!7171 = !DILocation(line: 1064, column: 6, scope: !7125)
!7172 = !DILocation(line: 1070, column: 20, scope: !7125)
!7173 = !DILocation(line: 1070, column: 2, scope: !7125)
!7174 = !DILocation(line: 1089, column: 6, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7125, file: !7126, line: 1089, column: 6)
!7176 = !DILocation(line: 0, scope: !7175)
!7177 = !DILocation(line: 1089, column: 6, scope: !7125)
!7178 = !DILocation(line: 1090, column: 28, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !7126, line: 1090, column: 7)
!7180 = distinct !DILexicalBlock(scope: !7175, file: !7126, line: 1089, column: 18)
!7181 = !DILocation(line: 1090, column: 44, scope: !7179)
!7182 = !DILocation(line: 1090, column: 7, scope: !7180)
!7183 = !DILocation(line: 1091, column: 24, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7179, file: !7126, line: 1090, column: 50)
!7185 = !DILocation(line: 1092, column: 3, scope: !7184)
!7186 = !DILocation(line: 1094, column: 23, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7175, file: !7126, line: 1093, column: 9)
!7188 = !DILocation(line: 1097, column: 2, scope: !7125)
!7189 = !DILocation(line: 1098, column: 1, scope: !7125)
!7190 = distinct !DISubprogram(name: "get_esf", scope: !7126, file: !7126, line: 894, type: !7191, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7194)
!7191 = !DISubroutineType(types: !7192)
!7192 = !{!2887, !121, !121, !121, !7193}
!7193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!7194 = !{!7195, !7196, !7197, !7198, !7199, !7200}
!7195 = !DILocalVariable(name: "msp", arg: 1, scope: !7190, file: !7126, line: 894, type: !121)
!7196 = !DILocalVariable(name: "psp", arg: 2, scope: !7190, file: !7126, line: 894, type: !121)
!7197 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7190, file: !7126, line: 894, type: !121)
!7198 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7190, file: !7126, line: 895, type: !7193)
!7199 = !DILocalVariable(name: "alternative_state_exc", scope: !7190, file: !7126, line: 897, type: !157)
!7200 = !DILocalVariable(name: "ptr_esf", scope: !7190, file: !7126, line: 898, type: !2887)
!7201 = !DILocation(line: 0, scope: !7190)
!7202 = !DILocation(line: 900, column: 14, scope: !7190)
!7203 = !DILocation(line: 902, column: 49, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7190, file: !7126, line: 902, column: 6)
!7205 = !DILocation(line: 902, column: 6, scope: !7190)
!7206 = !DILocation(line: 983, column: 18, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7190, file: !7126, line: 983, column: 6)
!7208 = !DILocation(line: 991, column: 7, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !7126, line: 990, column: 30)
!7210 = distinct !DILexicalBlock(scope: !7190, file: !7126, line: 990, column: 6)
!7211 = !DILocation(line: 998, column: 16, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !7126, line: 995, column: 10)
!7213 = distinct !DILexicalBlock(scope: !7209, file: !7126, line: 991, column: 7)
!7214 = !DILocation(line: 1002, column: 2, scope: !7190)
!7215 = !DILocation(line: 1003, column: 1, scope: !7190)
!7216 = distinct !DISubprogram(name: "fault_handle", scope: !7126, file: !7126, line: 786, type: !7217, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7219)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{!121, !2887, !103, !7193}
!7219 = !{!7220, !7221, !7222, !7223}
!7220 = !DILocalVariable(name: "esf", arg: 1, scope: !7216, file: !7126, line: 786, type: !2887)
!7221 = !DILocalVariable(name: "fault", arg: 2, scope: !7216, file: !7126, line: 786, type: !103)
!7222 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7216, file: !7126, line: 786, type: !7193)
!7223 = !DILocalVariable(name: "reason", scope: !7216, file: !7126, line: 788, type: !121)
!7224 = !DILocation(line: 0, scope: !7216)
!7225 = !DILocation(line: 790, column: 15, scope: !7216)
!7226 = !DILocation(line: 792, column: 2, scope: !7216)
!7227 = !DILocation(line: 794, column: 12, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7216, file: !7126, line: 792, column: 17)
!7229 = !DILocation(line: 795, column: 3, scope: !7228)
!7230 = !DILocation(line: 800, column: 12, scope: !7228)
!7231 = !DILocation(line: 801, column: 3, scope: !7228)
!7232 = !DILocation(line: 803, column: 12, scope: !7228)
!7233 = !DILocation(line: 804, column: 3, scope: !7228)
!7234 = !DILocation(line: 806, column: 12, scope: !7228)
!7235 = !DILocation(line: 807, column: 3, scope: !7228)
!7236 = !DILocation(line: 814, column: 3, scope: !7228)
!7237 = !DILocation(line: 815, column: 3, scope: !7228)
!7238 = !DILocation(line: 829, column: 2, scope: !7216)
!7239 = distinct !DISubprogram(name: "hard_fault", scope: !7126, file: !7126, line: 709, type: !7240, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7242)
!7240 = !DISubroutineType(types: !7241)
!7241 = !{!121, !2887, !7193}
!7242 = !{!7243, !7244, !7245}
!7243 = !DILocalVariable(name: "esf", arg: 1, scope: !7239, file: !7126, line: 709, type: !2887)
!7244 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7239, file: !7126, line: 709, type: !7193)
!7245 = !DILocalVariable(name: "reason", scope: !7239, file: !7126, line: 711, type: !121)
!7246 = !DILocation(line: 0, scope: !7239)
!7247 = !DILocation(line: 732, column: 15, scope: !7239)
!7248 = !DILocation(line: 734, column: 12, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7239, file: !7126, line: 734, column: 6)
!7250 = !DILocation(line: 734, column: 17, scope: !7249)
!7251 = !DILocation(line: 734, column: 41, scope: !7249)
!7252 = !DILocation(line: 734, column: 6, scope: !7239)
!7253 = !DILocation(line: 736, column: 19, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7249, file: !7126, line: 736, column: 13)
!7255 = !DILocation(line: 736, column: 49, scope: !7254)
!7256 = !DILocation(line: 736, column: 13, scope: !7249)
!7257 = !DILocation(line: 738, column: 19, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7254, file: !7126, line: 738, column: 13)
!7259 = !DILocation(line: 738, column: 24, scope: !7258)
!7260 = !DILocation(line: 738, column: 47, scope: !7258)
!7261 = !DILocation(line: 738, column: 13, scope: !7254)
!7262 = !DILocation(line: 740, column: 7, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !7126, line: 740, column: 7)
!7264 = distinct !DILexicalBlock(scope: !7258, file: !7126, line: 738, column: 53)
!7265 = !DILocation(line: 740, column: 7, scope: !7264)
!7266 = !DILocation(line: 742, column: 24, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7263, file: !7126, line: 740, column: 38)
!7268 = !DILocation(line: 743, column: 3, scope: !7267)
!7269 = !DILocation(line: 743, column: 20, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7263, file: !7126, line: 743, column: 14)
!7271 = !DILocation(line: 743, column: 25, scope: !7270)
!7272 = !DILocation(line: 743, column: 52, scope: !7270)
!7273 = !DILocation(line: 743, column: 14, scope: !7263)
!7274 = !DILocation(line: 744, column: 13, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7270, file: !7126, line: 743, column: 58)
!7276 = !DILocation(line: 745, column: 3, scope: !7275)
!7277 = !DILocation(line: 745, column: 20, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7270, file: !7126, line: 745, column: 14)
!7279 = !DILocation(line: 745, column: 25, scope: !7278)
!7280 = !DILocation(line: 745, column: 52, scope: !7278)
!7281 = !DILocation(line: 745, column: 14, scope: !7270)
!7282 = !DILocation(line: 746, column: 13, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7278, file: !7126, line: 745, column: 58)
!7284 = !DILocation(line: 747, column: 3, scope: !7283)
!7285 = !DILocation(line: 747, column: 20, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7278, file: !7126, line: 747, column: 14)
!7287 = !DILocation(line: 747, column: 52, scope: !7286)
!7288 = !DILocation(line: 747, column: 14, scope: !7278)
!7289 = !DILocation(line: 748, column: 13, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7286, file: !7126, line: 747, column: 58)
!7291 = !DILocation(line: 753, column: 3, scope: !7290)
!7292 = !DILocation(line: 766, column: 2, scope: !7239)
!7293 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7126, file: !7126, line: 229, type: !7217, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7294)
!7294 = !{!7295, !7296, !7297, !7298, !7299, !7300, !7303}
!7295 = !DILocalVariable(name: "esf", arg: 1, scope: !7293, file: !7126, line: 229, type: !2887)
!7296 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7293, file: !7126, line: 229, type: !103)
!7297 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7293, file: !7126, line: 230, type: !7193)
!7298 = !DILocalVariable(name: "reason", scope: !7293, file: !7126, line: 232, type: !121)
!7299 = !DILocalVariable(name: "mmfar", scope: !7293, file: !7126, line: 233, type: !121)
!7300 = !DILocalVariable(name: "temp", scope: !7301, file: !7126, line: 254, type: !121)
!7301 = distinct !DILexicalBlock(scope: !7302, file: !7126, line: 244, column: 48)
!7302 = distinct !DILexicalBlock(scope: !7293, file: !7126, line: 244, column: 6)
!7303 = !DILocalVariable(name: "min_stack_ptr", scope: !7304, file: !7126, line: 309, type: !121)
!7304 = distinct !DILexicalBlock(scope: !7305, file: !7126, line: 308, column: 43)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !7126, line: 308, column: 7)
!7306 = distinct !DILexicalBlock(scope: !7307, file: !7126, line: 289, column: 40)
!7307 = distinct !DILexicalBlock(scope: !7293, file: !7126, line: 288, column: 6)
!7308 = !DILocation(line: 0, scope: !7293)
!7309 = !DILocation(line: 237, column: 12, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7293, file: !7126, line: 237, column: 6)
!7311 = !DILocation(line: 241, column: 12, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7293, file: !7126, line: 241, column: 6)
!7313 = !DILocation(line: 244, column: 12, scope: !7302)
!7314 = !DILocation(line: 244, column: 17, scope: !7302)
!7315 = !DILocation(line: 244, column: 42, scope: !7302)
!7316 = !DILocation(line: 244, column: 6, scope: !7293)
!7317 = !DILocation(line: 254, column: 24, scope: !7301)
!7318 = !DILocation(line: 0, scope: !7301)
!7319 = !DILocation(line: 256, column: 13, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7301, file: !7126, line: 256, column: 7)
!7321 = !DILocation(line: 256, column: 18, scope: !7320)
!7322 = !DILocation(line: 256, column: 44, scope: !7320)
!7323 = !DILocation(line: 256, column: 7, scope: !7301)
!7324 = !DILocation(line: 259, column: 24, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7326, file: !7126, line: 259, column: 8)
!7326 = distinct !DILexicalBlock(scope: !7320, file: !7126, line: 256, column: 50)
!7327 = !DILocation(line: 259, column: 8, scope: !7326)
!7328 = !DILocation(line: 261, column: 15, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7325, file: !7126, line: 259, column: 30)
!7330 = !DILocation(line: 262, column: 4, scope: !7329)
!7331 = !DILocation(line: 265, column: 12, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7293, file: !7126, line: 265, column: 6)
!7333 = !DILocation(line: 269, column: 12, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7293, file: !7126, line: 269, column: 6)
!7335 = !DILocation(line: 288, column: 12, scope: !7307)
!7336 = !DILocation(line: 288, column: 17, scope: !7307)
!7337 = !DILocation(line: 288, column: 41, scope: !7307)
!7338 = !DILocation(line: 289, column: 9, scope: !7307)
!7339 = !DILocation(line: 289, column: 14, scope: !7307)
!7340 = !DILocation(line: 288, column: 6, scope: !7293)
!7341 = !DILocation(line: 308, column: 12, scope: !7305)
!7342 = !DILocation(line: 308, column: 17, scope: !7305)
!7343 = !DILocation(line: 308, column: 7, scope: !7306)
!7344 = !DILocation(line: 310, column: 6, scope: !7304)
!7345 = !DILocation(line: 309, column: 29, scope: !7304)
!7346 = !DILocation(line: 0, scope: !7304)
!7347 = !DILocation(line: 312, column: 8, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7304, file: !7126, line: 312, column: 8)
!7349 = !DILocation(line: 312, column: 8, scope: !7304)
!7350 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7351, file: !6825, line: 1099, type: !121)
!7351 = distinct !DISubprogram(name: "__set_PSP", scope: !6825, file: !6825, line: 1099, type: !6916, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7352)
!7352 = !{!7350}
!7353 = !DILocation(line: 0, scope: !7351, inlinedAt: !7354)
!7354 = distinct !DILocation(line: 338, column: 5, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7348, file: !7126, line: 312, column: 23)
!7356 = !DILocation(line: 1101, column: 3, scope: !7351, inlinedAt: !7354)
!7357 = !{i64 3527783}
!7358 = !DILocation(line: 341, column: 4, scope: !7355)
!7359 = !DILocation(line: 360, column: 12, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7293, file: !7126, line: 360, column: 6)
!7361 = !DILocation(line: 360, column: 17, scope: !7360)
!7362 = !DILocation(line: 360, column: 41, scope: !7360)
!7363 = !DILocation(line: 360, column: 6, scope: !7293)
!7364 = !DILocation(line: 361, column: 14, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7360, file: !7126, line: 360, column: 47)
!7366 = !DILocation(line: 362, column: 2, scope: !7365)
!7367 = !DILocation(line: 366, column: 12, scope: !7293)
!7368 = !DILocation(line: 369, column: 15, scope: !7293)
!7369 = !DILocation(line: 371, column: 2, scope: !7293)
!7370 = distinct !DISubprogram(name: "bus_fault", scope: !7126, file: !7126, line: 383, type: !7371, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7373)
!7371 = !DISubroutineType(types: !7372)
!7372 = !{!103, !2887, !103, !7193}
!7373 = !{!7374, !7375, !7376, !7377, !7378}
!7374 = !DILocalVariable(name: "esf", arg: 1, scope: !7370, file: !7126, line: 383, type: !2887)
!7375 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7370, file: !7126, line: 383, type: !103)
!7376 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7370, file: !7126, line: 383, type: !7193)
!7377 = !DILocalVariable(name: "reason", scope: !7370, file: !7126, line: 385, type: !121)
!7378 = !DILocalVariable(name: "bfar", scope: !7379, file: !7126, line: 405, type: !121)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !7126, line: 395, column: 42)
!7380 = distinct !DILexicalBlock(scope: !7370, file: !7126, line: 395, column: 6)
!7381 = !DILocation(line: 0, scope: !7370)
!7382 = !DILocation(line: 389, column: 11, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7370, file: !7126, line: 389, column: 6)
!7384 = !DILocation(line: 392, column: 11, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7370, file: !7126, line: 392, column: 6)
!7386 = !DILocation(line: 395, column: 11, scope: !7380)
!7387 = !DILocation(line: 395, column: 16, scope: !7380)
!7388 = !DILocation(line: 395, column: 6, scope: !7370)
!7389 = !DILocation(line: 405, column: 3, scope: !7379)
!7390 = !DILocation(line: 0, scope: !7379)
!7391 = !DILocation(line: 407, column: 13, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7379, file: !7126, line: 407, column: 7)
!7393 = !DILocation(line: 407, column: 18, scope: !7392)
!7394 = !DILocation(line: 407, column: 44, scope: !7392)
!7395 = !DILocation(line: 407, column: 7, scope: !7379)
!7396 = !DILocation(line: 411, column: 15, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !7126, line: 409, column: 30)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !7126, line: 409, column: 8)
!7399 = distinct !DILexicalBlock(scope: !7392, file: !7126, line: 407, column: 50)
!7400 = !DILocation(line: 412, column: 4, scope: !7397)
!7401 = !DILocation(line: 415, column: 11, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7370, file: !7126, line: 415, column: 6)
!7403 = !DILocation(line: 418, column: 12, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7370, file: !7126, line: 418, column: 6)
!7405 = !DILocation(line: 418, column: 17, scope: !7404)
!7406 = !DILocation(line: 418, column: 41, scope: !7404)
!7407 = !DILocation(line: 418, column: 6, scope: !7370)
!7408 = !DILocation(line: 423, column: 18, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7404, file: !7126, line: 423, column: 13)
!7410 = !DILocation(line: 524, column: 12, scope: !7370)
!7411 = !DILocation(line: 526, column: 15, scope: !7370)
!7412 = !DILocation(line: 528, column: 2, scope: !7370)
!7413 = distinct !DISubprogram(name: "usage_fault", scope: !7126, file: !7126, line: 539, type: !7414, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7418)
!7414 = !DISubroutineType(types: !7415)
!7415 = !{!121, !7416}
!7416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7417, size: 32)
!7417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2888)
!7418 = !{!7419, !7420}
!7419 = !DILocalVariable(name: "esf", arg: 1, scope: !7413, file: !7126, line: 539, type: !7416)
!7420 = !DILocalVariable(name: "reason", scope: !7413, file: !7126, line: 541, type: !121)
!7421 = !DILocation(line: 0, scope: !7413)
!7422 = !DILocation(line: 546, column: 12, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7413, file: !7126, line: 546, column: 6)
!7424 = !DILocation(line: 549, column: 12, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7413, file: !7126, line: 549, column: 6)
!7426 = !DILocation(line: 567, column: 12, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7413, file: !7126, line: 567, column: 6)
!7428 = !DILocation(line: 570, column: 12, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7413, file: !7126, line: 570, column: 6)
!7430 = !DILocation(line: 573, column: 12, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7413, file: !7126, line: 573, column: 6)
!7432 = !DILocation(line: 576, column: 12, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7413, file: !7126, line: 576, column: 6)
!7434 = !DILocation(line: 581, column: 12, scope: !7413)
!7435 = !DILocation(line: 583, column: 2, scope: !7413)
!7436 = distinct !DISubprogram(name: "debug_monitor", scope: !7126, file: !7126, line: 632, type: !7437, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7439)
!7437 = !DISubroutineType(types: !7438)
!7438 = !{null, !2887, !7193}
!7439 = !{!7440, !7441}
!7440 = !DILocalVariable(name: "esf", arg: 1, scope: !7436, file: !7126, line: 632, type: !2887)
!7441 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7436, file: !7126, line: 632, type: !7193)
!7442 = !DILocation(line: 0, scope: !7436)
!7443 = !DILocation(line: 634, column: 15, scope: !7436)
!7444 = !DILocation(line: 652, column: 1, scope: !7436)
!7445 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7126, file: !7126, line: 658, type: !7446, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !7448)
!7446 = !DISubroutineType(types: !7447)
!7447 = !{!157, !2887}
!7448 = !{!7449, !7450, !7451}
!7449 = !DILocalVariable(name: "esf", arg: 1, scope: !7445, file: !7126, line: 658, type: !2887)
!7450 = !DILocalVariable(name: "ret_addr", scope: !7445, file: !7126, line: 660, type: !2579)
!7451 = !DILocalVariable(name: "fault_insn", scope: !7445, file: !7126, line: 686, type: !328)
!7452 = !DILocation(line: 0, scope: !7445)
!7453 = !DILocation(line: 660, column: 46, scope: !7445)
!7454 = !DILocation(line: 660, column: 23, scope: !7445)
!7455 = !DILocation(line: 682, column: 11, scope: !7445)
!7456 = !DILocation(line: 271, column: 3, scope: !7457, inlinedAt: !7458)
!7457 = distinct !DISubprogram(name: "__DSB", scope: !6825, file: !6825, line: 269, type: !3237, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !461)
!7458 = distinct !DILocation(line: 683, column: 2, scope: !7445)
!7459 = !{i64 3503918}
!7460 = !DILocation(line: 260, column: 3, scope: !7461, inlinedAt: !7462)
!7461 = distinct !DISubprogram(name: "__ISB", scope: !6825, file: !6825, line: 258, type: !3237, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !461)
!7462 = distinct !DILocation(line: 684, column: 2, scope: !7445)
!7463 = !{i64 3503635}
!7464 = !DILocation(line: 686, column: 35, scope: !7445)
!7465 = !DILocation(line: 686, column: 24, scope: !7445)
!7466 = !DILocation(line: 688, column: 11, scope: !7445)
!7467 = !DILocation(line: 271, column: 3, scope: !7457, inlinedAt: !7468)
!7468 = distinct !DILocation(line: 689, column: 2, scope: !7445)
!7469 = !DILocation(line: 260, column: 3, scope: !7461, inlinedAt: !7470)
!7470 = distinct !DILocation(line: 690, column: 2, scope: !7445)
!7471 = !DILocation(line: 693, column: 45, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7445, file: !7126, line: 693, column: 6)
!7473 = !DILocation(line: 699, column: 1, scope: !7445)
!7474 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7126, file: !7126, line: 1107, type: !3237, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2859, retainedNodes: !461)
!7475 = !DILocation(line: 1111, column: 11, scope: !7474)
!7476 = !DILocation(line: 1136, column: 1, scope: !7474)
!7477 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7478, file: !7478, line: 26, type: !3237, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7479)
!7478 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7479 = !{!7480}
!7480 = !DILocalVariable(name: "irq", scope: !7477, file: !7478, line: 28, type: !103)
!7481 = !DILocation(line: 0, scope: !7477)
!7482 = !DILocation(line: 30, column: 2, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7477, file: !7478, line: 30, column: 2)
!7484 = !DILocation(line: 31, column: 3, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !7478, line: 30, column: 39)
!7486 = distinct !DILexicalBlock(scope: !7483, file: !7478, line: 30, column: 2)
!7487 = !DILocation(line: 30, column: 35, scope: !7486)
!7488 = !DILocation(line: 30, column: 13, scope: !7486)
!7489 = distinct !{!7489, !7482, !7490}
!7490 = !DILocation(line: 32, column: 2, scope: !7483)
!7491 = !DILocation(line: 33, column: 1, scope: !7477)
!7492 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6859, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !7493)
!7493 = !{!7494, !7495}
!7494 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7492, file: !495, line: 1814, type: !750)
!7495 = !DILocalVariable(name: "priority", arg: 2, scope: !7492, file: !495, line: 1814, type: !121)
!7496 = !DILocation(line: 0, scope: !7492)
!7497 = !DILocation(line: 1816, column: 7, scope: !7492)
!7498 = !DILocation(line: 0, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7492, file: !495, line: 1816, column: 7)
!7500 = !DILocation(line: 1824, column: 1, scope: !7492)
!7501 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7502, file: !7502, line: 27, type: !7503, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2975, retainedNodes: !7606)
!7502 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7503 = !DISubroutineType(types: !7504)
!7504 = !{null, !7505}
!7505 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !7506)
!7506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7507, size: 32)
!7507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !7508)
!7508 = !{!7509, !7567, !7579, !7580, !7581, !7582, !7588, !7601}
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7507, file: !355, line: 247, baseType: !7510, size: 384)
!7510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !7511)
!7511 = !{!7512, !7536, !7543, !7544, !7545, !7554, !7555, !7556}
!7512 = !DIDerivedType(tag: DW_TAG_member, scope: !7510, file: !355, line: 60, baseType: !7513, size: 64)
!7513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7510, file: !355, line: 60, size: 64, elements: !7514)
!7514 = !{!7515, !7530}
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7513, file: !355, line: 61, baseType: !7516, size: 64)
!7516 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !7517)
!7517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !7518)
!7518 = !{!7519, !7525}
!7519 = !DIDerivedType(tag: DW_TAG_member, scope: !7517, file: !309, line: 38, baseType: !7520, size: 32)
!7520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7517, file: !309, line: 38, size: 32, elements: !7521)
!7521 = !{!7522, !7524}
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7520, file: !309, line: 39, baseType: !7523, size: 32)
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7517, size: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7520, file: !309, line: 40, baseType: !7523, size: 32)
!7525 = !DIDerivedType(tag: DW_TAG_member, scope: !7517, file: !309, line: 42, baseType: !7526, size: 32, offset: 32)
!7526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7517, file: !309, line: 42, size: 32, elements: !7527)
!7527 = !{!7528, !7529}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7526, file: !309, line: 43, baseType: !7523, size: 32)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7526, file: !309, line: 44, baseType: !7523, size: 32)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7513, file: !355, line: 62, baseType: !7531, size: 64)
!7531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !7532)
!7532 = !{!7533}
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7531, file: !380, line: 50, baseType: !7534, size: 64)
!7534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7535, size: 64, elements: !385)
!7535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7531, size: 32)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7510, file: !355, line: 68, baseType: !7537, size: 32, offset: 64)
!7537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7538, size: 32)
!7538 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !7539)
!7539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !7540)
!7540 = !{!7541}
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7539, file: !304, line: 232, baseType: !7542, size: 64)
!7542 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !7517)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7510, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7510, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!7545 = !DIDerivedType(tag: DW_TAG_member, scope: !7510, file: !355, line: 90, baseType: !7546, size: 16, offset: 112)
!7546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7510, file: !355, line: 90, size: 16, elements: !7547)
!7547 = !{!7548, !7553}
!7548 = !DIDerivedType(tag: DW_TAG_member, scope: !7546, file: !355, line: 91, baseType: !7549, size: 16)
!7549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7546, file: !355, line: 91, size: 16, elements: !7550)
!7550 = !{!7551, !7552}
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7549, file: !355, line: 96, baseType: !403, size: 8)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7549, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7546, file: !355, line: 100, baseType: !328, size: 16)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7510, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7510, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7510, file: !355, line: 131, baseType: !7557, size: 192, offset: 192)
!7557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !7558)
!7558 = !{!7559, !7560, !7566}
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7557, file: !304, line: 245, baseType: !7516, size: 64)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7557, file: !304, line: 246, baseType: !7561, size: 32, offset: 64)
!7561 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !7562)
!7562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7563, size: 32)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{null, !7565}
!7565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7557, size: 32)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7557, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7507, file: !355, line: 250, baseType: !7568, size: 288, offset: 384)
!7568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7569)
!7569 = !{!7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7578}
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7568, file: !424, line: 26, baseType: !121, size: 32)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7568, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7568, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7568, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7568, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7568, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7568, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7568, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7568, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7507, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7507, file: !355, line: 256, baseType: !7538, size: 64, offset: 704)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7507, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7507, file: !355, line: 300, baseType: !7583, size: 96, offset: 800)
!7583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !7584)
!7584 = !{!7585, !7586, !7587}
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7583, file: !355, line: 153, baseType: !22, size: 32)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7583, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7583, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7507, file: !355, line: 325, baseType: !7589, size: 32, offset: 896)
!7589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7590, size: 32)
!7590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !7591)
!7591 = !{!7592, !7598, !7599}
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7590, file: !300, line: 5074, baseType: !7593, size: 96)
!7593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !7594)
!7594 = !{!7595, !7596, !7597}
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7593, file: !450, line: 57, baseType: !453, size: 32)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7593, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7593, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7590, file: !300, line: 5075, baseType: !7538, size: 64, offset: 96)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7590, file: !300, line: 5076, baseType: !7600, offset: 160)
!7600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7507, file: !355, line: 343, baseType: !7602, size: 64, offset: 928)
!7602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !7603)
!7603 = !{!7604, !7605}
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7602, file: !424, line: 63, baseType: !121, size: 32)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7602, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!7606 = !{!7607}
!7607 = !DILocalVariable(name: "thread", arg: 1, scope: !7501, file: !7502, line: 27, type: !7505)
!7608 = !DILocation(line: 0, scope: !7501)
!7609 = !DILocation(line: 29, column: 6, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7501, file: !7502, line: 29, column: 6)
!7611 = !DILocation(line: 29, column: 15, scope: !7610)
!7612 = !DILocation(line: 29, column: 6, scope: !7501)
!7613 = !DILocation(line: 1031, column: 3, scope: !7614, inlinedAt: !7617)
!7614 = distinct !DISubprogram(name: "__get_IPSR", scope: !6825, file: !6825, line: 1027, type: !6906, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2975, retainedNodes: !7615)
!7615 = !{!7616}
!7616 = !DILocalVariable(name: "result", scope: !7614, file: !6825, line: 1029, type: !121)
!7617 = distinct !DILocation(line: 48, column: 10, scope: !7618, inlinedAt: !7622)
!7618 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7619, file: !7619, line: 46, type: !7620, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2975, retainedNodes: !461)
!7619 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!157}
!7622 = distinct !DILocation(line: 30, column: 7, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !7502, line: 30, column: 7)
!7624 = distinct !DILexicalBlock(scope: !7610, file: !7502, line: 29, column: 26)
!7625 = !{i64 3492766}
!7626 = !DILocation(line: 0, scope: !7614, inlinedAt: !7617)
!7627 = !DILocation(line: 48, column: 9, scope: !7618, inlinedAt: !7622)
!7628 = !DILocation(line: 30, column: 7, scope: !7624)
!7629 = !DILocation(line: 42, column: 14, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7623, file: !7502, line: 30, column: 25)
!7631 = !DILocation(line: 48, column: 15, scope: !7630)
!7632 = !DILocation(line: 49, column: 3, scope: !7630)
!7633 = !DILocation(line: 52, column: 2, scope: !7501)
!7634 = !DILocation(line: 53, column: 1, scope: !7501)
!7635 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !350, file: !350, line: 127, type: !3237, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !341, retainedNodes: !461)
!7636 = !DILocation(line: 134, column: 2, scope: !7635)
!7637 = !DILocation(line: 156, column: 1, scope: !7635)
!7638 = !DILocation(line: 0, scope: !349)
!7639 = !DILocation(line: 289, column: 36, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !349, file: !350, line: 285, column: 2)
!7641 = !DILocation(line: 289, column: 42, scope: !7640)
!7642 = !DILocation(line: 300, column: 36, scope: !349)
!7643 = !DILocation(line: 301, column: 35, scope: !349)
!7644 = !DILocation(line: 302, column: 37, scope: !349)
!7645 = !DILocation(line: 311, column: 2, scope: !349)
!7646 = !DILocation(line: 316, column: 1, scope: !349)
!7647 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !523, file: !523, line: 180, type: !3237, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7648 = !DILocation(line: 188, column: 12, scope: !7647)
!7649 = !DILocation(line: 271, column: 3, scope: !7650, inlinedAt: !7651)
!7650 = distinct !DISubprogram(name: "__DSB", scope: !6825, file: !6825, line: 269, type: !3237, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7651 = distinct !DILocation(line: 192, column: 2, scope: !7647)
!7652 = !{i64 3661594}
!7653 = !DILocation(line: 260, column: 3, scope: !7654, inlinedAt: !7655)
!7654 = distinct !DISubprogram(name: "__ISB", scope: !6825, file: !6825, line: 258, type: !3237, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7655 = distinct !DILocation(line: 193, column: 2, scope: !7647)
!7656 = !{i64 3661311}
!7657 = !DILocation(line: 194, column: 1, scope: !7647)
!7658 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !523, file: !523, line: 199, type: !3237, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7659 = !DILocation(line: 282, column: 3, scope: !7660, inlinedAt: !7661)
!7660 = distinct !DISubprogram(name: "__DMB", scope: !6825, file: !6825, line: 280, type: !3237, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7661 = distinct !DILocation(line: 202, column: 2, scope: !7658)
!7662 = !{i64 3661870}
!7663 = !DILocation(line: 205, column: 12, scope: !7658)
!7664 = !DILocation(line: 206, column: 1, scope: !7658)
!7665 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !523, file: !523, line: 275, type: !7666, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7679)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{null, !7668, !256, !7093, !7093}
!7668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7669, size: 32)
!7669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7670)
!7670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !7671)
!7671 = !{!7672, !7673, !7674}
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7670, file: !474, line: 53, baseType: !22, size: 32)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7670, file: !474, line: 54, baseType: !344, size: 32, offset: 32)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7670, file: !474, line: 55, baseType: !7675, size: 32, offset: 64)
!7675 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !7676)
!7676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !7677)
!7677 = !{!7678}
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7676, file: !480, line: 150, baseType: !121, size: 32)
!7679 = !{!7680, !7681, !7682, !7683}
!7680 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7665, file: !523, line: 276, type: !7668)
!7681 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7665, file: !523, line: 276, type: !256)
!7682 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7665, file: !523, line: 277, type: !7093)
!7683 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7665, file: !523, line: 277, type: !7093)
!7684 = !DILocation(line: 0, scope: !7665)
!7685 = !DILocation(line: 279, column: 6, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7665, file: !523, line: 279, column: 6)
!7687 = !DILocation(line: 285, column: 1, scope: !7665)
!7688 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7689, file: !7689, line: 220, type: !7690, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7692)
!7689 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7690 = !DISubroutineType(types: !7691)
!7691 = !{!103, !7668, !256, !7093, !7093}
!7692 = !{!7693, !7694, !7695, !7696, !7697}
!7693 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7688, file: !7689, line: 221, type: !7668)
!7694 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7688, file: !7689, line: 221, type: !256)
!7695 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7688, file: !7689, line: 222, type: !7093)
!7696 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7688, file: !7689, line: 223, type: !7093)
!7697 = !DILocalVariable(name: "mpu_reg_index", scope: !7688, file: !7689, line: 225, type: !103)
!7698 = !DILocation(line: 0, scope: !7688)
!7699 = !DILocation(line: 225, column: 22, scope: !7688)
!7700 = !DILocation(line: 233, column: 18, scope: !7688)
!7701 = !DILocation(line: 236, column: 23, scope: !7688)
!7702 = !DILocation(line: 236, column: 21, scope: !7688)
!7703 = !DILocation(line: 238, column: 2, scope: !7688)
!7704 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !523, file: !523, line: 105, type: !7705, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7707)
!7705 = !DISubroutineType(types: !7706)
!7706 = !{!103, !7668, !154, !154, !157}
!7707 = !{!7708, !7709, !7710, !7711, !7712, !7713}
!7708 = !DILocalVariable(name: "regions", arg: 1, scope: !7704, file: !523, line: 106, type: !7668)
!7709 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7704, file: !523, line: 106, type: !154)
!7710 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7704, file: !523, line: 106, type: !154)
!7711 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7704, file: !523, line: 107, type: !157)
!7712 = !DILocalVariable(name: "i", scope: !7704, file: !523, line: 109, type: !103)
!7713 = !DILocalVariable(name: "reg_index", scope: !7704, file: !523, line: 110, type: !103)
!7714 = !DILocation(line: 0, scope: !7704)
!7715 = !DILocation(line: 110, column: 18, scope: !7704)
!7716 = !DILocation(line: 112, column: 16, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !523, line: 112, column: 2)
!7718 = distinct !DILexicalBlock(scope: !7704, file: !523, line: 112, column: 2)
!7719 = !DILocation(line: 112, column: 2, scope: !7718)
!7720 = !DILocation(line: 113, column: 7, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !523, line: 113, column: 7)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !523, line: 112, column: 36)
!7723 = !DILocation(line: 113, column: 18, scope: !7721)
!7724 = !DILocation(line: 113, column: 23, scope: !7721)
!7725 = !DILocation(line: 113, column: 7, scope: !7722)
!7726 = !DILocation(line: 118, column: 23, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7722, file: !523, line: 118, column: 7)
!7728 = !DILocation(line: 119, column: 7, scope: !7727)
!7729 = !DILocation(line: 118, column: 7, scope: !7722)
!7730 = !DILocation(line: 124, column: 36, scope: !7722)
!7731 = !DILocation(line: 124, column: 15, scope: !7722)
!7732 = !DILocation(line: 126, column: 17, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7722, file: !523, line: 126, column: 7)
!7734 = !DILocation(line: 126, column: 7, scope: !7722)
!7735 = !DILocation(line: 131, column: 12, scope: !7722)
!7736 = !DILocation(line: 132, column: 2, scope: !7722)
!7737 = !DILocation(line: 112, column: 32, scope: !7717)
!7738 = distinct !{!7738, !7719, !7739}
!7739 = !DILocation(line: 132, column: 2, scope: !7718)
!7740 = !DILocation(line: 135, column: 1, scope: !7704)
!7741 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7689, file: !7689, line: 63, type: !7742, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7744)
!7742 = !DISubroutineType(types: !7743)
!7743 = !{!103, !7668}
!7744 = !{!7745, !7746}
!7745 = !DILocalVariable(name: "part", arg: 1, scope: !7741, file: !7689, line: 63, type: !7668)
!7746 = !DILocalVariable(name: "partition_is_valid", scope: !7741, file: !7689, line: 70, type: !103)
!7747 = !DILocation(line: 0, scope: !7741)
!7748 = !DILocation(line: 71, column: 11, scope: !7741)
!7749 = !DILocation(line: 71, column: 37, scope: !7741)
!7750 = !DILocation(line: 72, column: 3, scope: !7741)
!7751 = !DILocation(line: 71, column: 30, scope: !7741)
!7752 = !DILocation(line: 75, column: 11, scope: !7741)
!7753 = !DILocation(line: 75, column: 17, scope: !7741)
!7754 = !DILocation(line: 75, column: 38, scope: !7741)
!7755 = !DILocation(line: 77, column: 2, scope: !7741)
!7756 = distinct !DISubprogram(name: "mpu_configure_region", scope: !523, file: !523, line: 79, type: !7757, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7759)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{!103, !256, !7668}
!7759 = !{!7760, !7761, !7762}
!7760 = !DILocalVariable(name: "index", arg: 1, scope: !7756, file: !523, line: 79, type: !256)
!7761 = !DILocalVariable(name: "new_region", arg: 2, scope: !7756, file: !523, line: 80, type: !7668)
!7762 = !DILocalVariable(name: "region_conf", scope: !7756, file: !523, line: 82, type: !512)
!7763 = !DILocation(line: 0, scope: !7756)
!7764 = !DILocation(line: 82, column: 2, scope: !7756)
!7765 = !DILocation(line: 82, column: 24, scope: !7756)
!7766 = !DILocation(line: 87, column: 33, scope: !7756)
!7767 = !DILocation(line: 87, column: 14, scope: !7756)
!7768 = !DILocation(line: 87, column: 19, scope: !7756)
!7769 = !DILocation(line: 91, column: 55, scope: !7756)
!7770 = !DILocation(line: 92, column: 16, scope: !7756)
!7771 = !DILocation(line: 92, column: 53, scope: !7756)
!7772 = !DILocation(line: 91, column: 2, scope: !7756)
!7773 = !DILocation(line: 95, column: 9, scope: !7756)
!7774 = !DILocation(line: 97, column: 1, scope: !7756)
!7775 = !DILocation(line: 95, column: 2, scope: !7756)
!7776 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7689, file: !7689, line: 113, type: !7777, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7782)
!7777 = !DISubroutineType(types: !7778)
!7778 = !{null, !7779, !7780, !121, !121}
!7779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!7780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7781, size: 32)
!7781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7675)
!7782 = !{!7783, !7784, !7785, !7786}
!7783 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7776, file: !7689, line: 114, type: !7779)
!7784 = !DILocalVariable(name: "attr", arg: 2, scope: !7776, file: !7689, line: 115, type: !7780)
!7785 = !DILocalVariable(name: "base", arg: 3, scope: !7776, file: !7689, line: 115, type: !121)
!7786 = !DILocalVariable(name: "size", arg: 4, scope: !7776, file: !7689, line: 115, type: !121)
!7787 = !DILocation(line: 0, scope: !7776)
!7788 = !DILocation(line: 127, column: 23, scope: !7776)
!7789 = !DILocation(line: 127, column: 35, scope: !7776)
!7790 = !DILocation(line: 127, column: 33, scope: !7776)
!7791 = !DILocation(line: 127, column: 10, scope: !7776)
!7792 = !DILocation(line: 127, column: 15, scope: !7776)
!7793 = !DILocation(line: 129, column: 1, scope: !7776)
!7794 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !523, file: !523, line: 57, type: !7795, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7797)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{!103, !256, !510}
!7797 = !{!7798, !7799}
!7798 = !DILocalVariable(name: "index", arg: 1, scope: !7794, file: !523, line: 57, type: !256)
!7799 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7794, file: !523, line: 58, type: !510)
!7800 = !DILocation(line: 0, scope: !7794)
!7801 = !DILocation(line: 61, column: 6, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7794, file: !523, line: 61, column: 6)
!7803 = !DILocation(line: 61, column: 12, scope: !7802)
!7804 = !DILocation(line: 61, column: 6, scope: !7794)
!7805 = !DILocation(line: 71, column: 2, scope: !7794)
!7806 = !DILocation(line: 73, column: 2, scope: !7794)
!7807 = !DILocation(line: 74, column: 1, scope: !7794)
!7808 = distinct !DISubprogram(name: "region_init", scope: !7689, file: !7689, line: 29, type: !7809, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7811)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{null, !7093, !510}
!7811 = !{!7812, !7813}
!7812 = !DILocalVariable(name: "index", arg: 1, scope: !7808, file: !7689, line: 29, type: !7093)
!7813 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7808, file: !7689, line: 30, type: !510)
!7814 = !DILocation(line: 0, scope: !7808)
!7815 = !DILocation(line: 33, column: 2, scope: !7808)
!7816 = !DILocation(line: 47, column: 28, scope: !7808)
!7817 = !DILocation(line: 47, column: 33, scope: !7808)
!7818 = !DILocation(line: 48, column: 26, scope: !7808)
!7819 = !DILocation(line: 47, column: 12, scope: !7808)
!7820 = !DILocation(line: 49, column: 32, scope: !7808)
!7821 = !DILocation(line: 49, column: 37, scope: !7808)
!7822 = !DILocation(line: 49, column: 12, scope: !7808)
!7823 = !DILocation(line: 53, column: 1, scope: !7808)
!7824 = distinct !DISubprogram(name: "set_region_number", scope: !7825, file: !7825, line: 32, type: !6916, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7826)
!7825 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7826 = !{!7827}
!7827 = !DILocalVariable(name: "index", arg: 1, scope: !7824, file: !7825, line: 32, type: !121)
!7828 = !DILocation(line: 0, scope: !7824)
!7829 = !DILocation(line: 34, column: 11, scope: !7824)
!7830 = !DILocation(line: 35, column: 1, scope: !7824)
!7831 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7689, file: !7689, line: 88, type: !7832, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7834)
!7832 = !DISubroutineType(types: !7833)
!7833 = !{!121, !121}
!7834 = !{!7835}
!7835 = !DILocalVariable(name: "size", arg: 1, scope: !7831, file: !7689, line: 88, type: !121)
!7836 = !DILocation(line: 0, scope: !7831)
!7837 = !DILocation(line: 91, column: 11, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7831, file: !7689, line: 91, column: 6)
!7839 = !DILocation(line: 91, column: 6, scope: !7831)
!7840 = !DILocation(line: 100, column: 11, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7831, file: !7689, line: 100, column: 6)
!7842 = !DILocation(line: 100, column: 6, scope: !7831)
!7843 = !DILocation(line: 104, column: 35, scope: !7831)
!7844 = !DILocation(line: 104, column: 16, scope: !7831)
!7845 = !DILocation(line: 104, column: 50, scope: !7831)
!7846 = !DILocation(line: 104, column: 72, scope: !7831)
!7847 = !DILocation(line: 104, column: 2, scope: !7831)
!7848 = !DILocation(line: 106, column: 1, scope: !7831)
!7849 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 307, type: !7850, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7852)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{null, !7668, !154}
!7852 = !{!7853, !7854}
!7853 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7849, file: !523, line: 308, type: !7668)
!7854 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7849, file: !523, line: 308, type: !154)
!7855 = !DILocation(line: 0, scope: !7849)
!7856 = !DILocation(line: 310, column: 6, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7849, file: !523, line: 310, column: 6)
!7858 = !DILocation(line: 316, column: 1, scope: !7849)
!7859 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7689, file: !7689, line: 249, type: !7860, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7862)
!7860 = !DISubroutineType(types: !7861)
!7861 = !{!103, !7668, !154}
!7862 = !{!7863, !7864, !7865, !7866}
!7863 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7859, file: !7689, line: 250, type: !7668)
!7864 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7859, file: !7689, line: 250, type: !154)
!7865 = !DILocalVariable(name: "mpu_reg_index", scope: !7859, file: !7689, line: 252, type: !103)
!7866 = !DILocalVariable(name: "i", scope: !7867, file: !7689, line: 264, type: !103)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !7689, line: 264, column: 3)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !7689, line: 261, column: 32)
!7869 = distinct !DILexicalBlock(scope: !7859, file: !7689, line: 261, column: 6)
!7870 = !DILocation(line: 0, scope: !7859)
!7871 = !DILocation(line: 252, column: 22, scope: !7859)
!7872 = !DILocation(line: 258, column: 18, scope: !7859)
!7873 = !DILocation(line: 261, column: 20, scope: !7869)
!7874 = !DILocation(line: 261, column: 6, scope: !7859)
!7875 = !DILocation(line: 0, scope: !7867)
!7876 = !DILocation(line: 265, column: 4, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7878, file: !7689, line: 264, column: 59)
!7878 = distinct !DILexicalBlock(scope: !7867, file: !7689, line: 264, column: 3)
!7879 = !DILocation(line: 264, column: 55, scope: !7878)
!7880 = !DILocation(line: 264, column: 33, scope: !7878)
!7881 = !DILocation(line: 264, column: 3, scope: !7867)
!7882 = distinct !{!7882, !7881, !7883}
!7883 = !DILocation(line: 266, column: 3, scope: !7867)
!7884 = !DILocation(line: 269, column: 2, scope: !7859)
!7885 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7886, file: !7886, line: 218, type: !6916, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7887)
!7886 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7887 = !{!7888}
!7888 = !DILocalVariable(name: "rnr", arg: 1, scope: !7885, file: !7886, line: 218, type: !121)
!7889 = !DILocation(line: 0, scope: !7885)
!7890 = !DILocation(line: 220, column: 12, scope: !7885)
!7891 = !DILocation(line: 221, column: 13, scope: !7885)
!7892 = !DILocation(line: 222, column: 1, scope: !7885)
!7893 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !523, file: !523, line: 326, type: !6629, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7894)
!7894 = !{!7895}
!7895 = !DILocalVariable(name: "r_index", scope: !7893, file: !523, line: 328, type: !121)
!7896 = !DILocation(line: 330, column: 17, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7893, file: !523, line: 330, column: 6)
!7898 = !DILocation(line: 330, column: 29, scope: !7897)
!7899 = !DILocation(line: 330, column: 6, scope: !7893)
!7900 = !DILocation(line: 347, column: 2, scope: !7893)
!7901 = !DILocation(line: 0, scope: !7893)
!7902 = !DILocation(line: 364, column: 29, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !523, line: 364, column: 2)
!7904 = distinct !DILexicalBlock(scope: !7893, file: !523, line: 364, column: 2)
!7905 = !DILocation(line: 364, column: 2, scope: !7904)
!7906 = !DILocation(line: 365, column: 25, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7903, file: !523, line: 364, column: 66)
!7908 = !DILocation(line: 365, column: 3, scope: !7907)
!7909 = !DILocation(line: 364, column: 62, scope: !7903)
!7910 = distinct !{!7910, !7905, !7911}
!7911 = !DILocation(line: 366, column: 2, scope: !7904)
!7912 = !DILocation(line: 369, column: 23, scope: !7893)
!7913 = !DILocation(line: 369, column: 21, scope: !7893)
!7914 = !DILocation(line: 372, column: 2, scope: !7893)
!7915 = !DILocation(line: 443, column: 2, scope: !7893)
!7916 = !DILocation(line: 444, column: 1, scope: !7893)
!7917 = distinct !DISubprogram(name: "strcpy", scope: !7918, file: !7918, line: 20, type: !7919, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !7923)
!7918 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7919 = !DISubroutineType(types: !7920)
!7920 = !{!1069, !7921, !7922}
!7921 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1069)
!7922 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7923 = !{!7924, !7925, !7926}
!7924 = !DILocalVariable(name: "d", arg: 1, scope: !7917, file: !7918, line: 20, type: !7921)
!7925 = !DILocalVariable(name: "s", arg: 2, scope: !7917, file: !7918, line: 20, type: !7922)
!7926 = !DILocalVariable(name: "dest", scope: !7917, file: !7918, line: 22, type: !1069)
!7927 = !DILocation(line: 0, scope: !7917)
!7928 = !DILocation(line: 24, column: 9, scope: !7917)
!7929 = !DILocation(line: 24, column: 12, scope: !7917)
!7930 = !DILocation(line: 24, column: 2, scope: !7917)
!7931 = !DILocation(line: 25, column: 6, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7917, file: !7918, line: 24, column: 21)
!7933 = !DILocation(line: 26, column: 4, scope: !7932)
!7934 = !DILocation(line: 27, column: 4, scope: !7932)
!7935 = distinct !{!7935, !7930, !7936}
!7936 = !DILocation(line: 28, column: 2, scope: !7917)
!7937 = !DILocation(line: 30, column: 5, scope: !7917)
!7938 = !DILocation(line: 32, column: 2, scope: !7917)
!7939 = distinct !DISubprogram(name: "strncpy", scope: !7918, file: !7918, line: 42, type: !7940, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!1069, !7921, !7922, !344}
!7942 = !{!7943, !7944, !7945, !7946}
!7943 = !DILocalVariable(name: "d", arg: 1, scope: !7939, file: !7918, line: 42, type: !7921)
!7944 = !DILocalVariable(name: "s", arg: 2, scope: !7939, file: !7918, line: 42, type: !7922)
!7945 = !DILocalVariable(name: "n", arg: 3, scope: !7939, file: !7918, line: 42, type: !344)
!7946 = !DILocalVariable(name: "dest", scope: !7939, file: !7918, line: 44, type: !1069)
!7947 = !DILocation(line: 0, scope: !7939)
!7948 = !DILocation(line: 46, column: 12, scope: !7939)
!7949 = !DILocation(line: 46, column: 17, scope: !7939)
!7950 = !DILocation(line: 46, column: 20, scope: !7939)
!7951 = !DILocation(line: 46, column: 23, scope: !7939)
!7952 = !DILocation(line: 46, column: 2, scope: !7939)
!7953 = !DILocation(line: 47, column: 6, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7939, file: !7918, line: 46, column: 32)
!7955 = !DILocation(line: 48, column: 4, scope: !7954)
!7956 = !DILocation(line: 49, column: 4, scope: !7954)
!7957 = !DILocation(line: 50, column: 4, scope: !7954)
!7958 = distinct !{!7958, !7952, !7959}
!7959 = !DILocation(line: 51, column: 2, scope: !7939)
!7960 = !DILocation(line: 54, column: 6, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7939, file: !7918, line: 53, column: 16)
!7962 = !DILocation(line: 55, column: 4, scope: !7961)
!7963 = !DILocation(line: 56, column: 4, scope: !7961)
!7964 = !DILocation(line: 53, column: 11, scope: !7939)
!7965 = !DILocation(line: 53, column: 2, scope: !7939)
!7966 = distinct !{!7966, !7965, !7967}
!7967 = !DILocation(line: 57, column: 2, scope: !7939)
!7968 = !DILocation(line: 59, column: 2, scope: !7939)
!7969 = distinct !DISubprogram(name: "strchr", scope: !7918, file: !7918, line: 69, type: !7970, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!1069, !144, !103}
!7972 = !{!7973, !7974, !7975}
!7973 = !DILocalVariable(name: "s", arg: 1, scope: !7969, file: !7918, line: 69, type: !144)
!7974 = !DILocalVariable(name: "c", arg: 2, scope: !7969, file: !7918, line: 69, type: !103)
!7975 = !DILocalVariable(name: "tmp", scope: !7969, file: !7918, line: 71, type: !146)
!7976 = !DILocation(line: 0, scope: !7969)
!7977 = !DILocation(line: 73, column: 2, scope: !7969)
!7978 = !DILocation(line: 73, column: 10, scope: !7969)
!7979 = !DILocation(line: 73, column: 13, scope: !7969)
!7980 = !DILocation(line: 73, column: 21, scope: !7969)
!7981 = !DILocation(line: 74, column: 4, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7969, file: !7918, line: 73, column: 38)
!7983 = distinct !{!7983, !7977, !7984}
!7984 = !DILocation(line: 75, column: 2, scope: !7969)
!7985 = !DILocation(line: 77, column: 9, scope: !7969)
!7986 = !DILocation(line: 77, column: 2, scope: !7969)
!7987 = distinct !DISubprogram(name: "strrchr", scope: !7918, file: !7918, line: 87, type: !7970, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !7988)
!7988 = !{!7989, !7990, !7991}
!7989 = !DILocalVariable(name: "s", arg: 1, scope: !7987, file: !7918, line: 87, type: !144)
!7990 = !DILocalVariable(name: "c", arg: 2, scope: !7987, file: !7918, line: 87, type: !103)
!7991 = !DILocalVariable(name: "match", scope: !7987, file: !7918, line: 89, type: !1069)
!7992 = !DILocation(line: 0, scope: !7987)
!7993 = !DILocation(line: 91, column: 2, scope: !7987)
!7994 = !DILocation(line: 92, column: 7, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !7918, line: 92, column: 7)
!7996 = distinct !DILexicalBlock(scope: !7987, file: !7918, line: 91, column: 5)
!7997 = !DILocation(line: 92, column: 10, scope: !7995)
!7998 = !DILocation(line: 92, column: 7, scope: !7996)
!7999 = !DILocation(line: 95, column: 13, scope: !7987)
!8000 = !DILocation(line: 95, column: 2, scope: !7996)
!8001 = distinct !{!8001, !7993, !8002}
!8002 = !DILocation(line: 95, column: 15, scope: !7987)
!8003 = !DILocation(line: 97, column: 2, scope: !7987)
!8004 = distinct !DISubprogram(name: "strlen", scope: !7918, file: !7918, line: 107, type: !8005, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8007)
!8005 = !DISubroutineType(types: !8006)
!8006 = !{!344, !144}
!8007 = !{!8008, !8009}
!8008 = !DILocalVariable(name: "s", arg: 1, scope: !8004, file: !7918, line: 107, type: !144)
!8009 = !DILocalVariable(name: "n", scope: !8004, file: !7918, line: 109, type: !344)
!8010 = !DILocation(line: 0, scope: !8004)
!8011 = !DILocation(line: 111, column: 9, scope: !8004)
!8012 = !DILocation(line: 111, column: 12, scope: !8004)
!8013 = !DILocation(line: 111, column: 2, scope: !8004)
!8014 = !DILocation(line: 112, column: 4, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8004, file: !7918, line: 111, column: 21)
!8016 = !DILocation(line: 113, column: 4, scope: !8015)
!8017 = distinct !{!8017, !8013, !8018}
!8018 = !DILocation(line: 114, column: 2, scope: !8004)
!8019 = !DILocation(line: 116, column: 2, scope: !8004)
!8020 = distinct !DISubprogram(name: "strnlen", scope: !7918, file: !7918, line: 126, type: !8021, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8023)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{!344, !144, !344}
!8023 = !{!8024, !8025, !8026}
!8024 = !DILocalVariable(name: "s", arg: 1, scope: !8020, file: !7918, line: 126, type: !144)
!8025 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8020, file: !7918, line: 126, type: !344)
!8026 = !DILocalVariable(name: "n", scope: !8020, file: !7918, line: 128, type: !344)
!8027 = !DILocation(line: 0, scope: !8020)
!8028 = !DILocation(line: 130, column: 9, scope: !8020)
!8029 = !DILocation(line: 130, column: 12, scope: !8020)
!8030 = !DILocation(line: 130, column: 20, scope: !8020)
!8031 = !DILocation(line: 130, column: 2, scope: !8020)
!8032 = !DILocation(line: 131, column: 4, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8020, file: !7918, line: 130, column: 35)
!8034 = !DILocation(line: 132, column: 4, scope: !8033)
!8035 = distinct !{!8035, !8031, !8036}
!8036 = !DILocation(line: 133, column: 2, scope: !8020)
!8037 = !DILocation(line: 135, column: 2, scope: !8020)
!8038 = distinct !DISubprogram(name: "strcmp", scope: !7918, file: !7918, line: 145, type: !8039, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8041)
!8039 = !DISubroutineType(types: !8040)
!8040 = !{!103, !144, !144}
!8041 = !{!8042, !8043}
!8042 = !DILocalVariable(name: "s1", arg: 1, scope: !8038, file: !7918, line: 145, type: !144)
!8043 = !DILocalVariable(name: "s2", arg: 2, scope: !8038, file: !7918, line: 145, type: !144)
!8044 = !DILocation(line: 0, scope: !8038)
!8045 = !DILocation(line: 147, column: 10, scope: !8038)
!8046 = !DILocation(line: 147, column: 17, scope: !8038)
!8047 = !DILocation(line: 147, column: 14, scope: !8038)
!8048 = !DILocation(line: 147, column: 22, scope: !8038)
!8049 = !DILocation(line: 148, column: 5, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8038, file: !7918, line: 147, column: 40)
!8051 = !DILocation(line: 149, column: 5, scope: !8050)
!8052 = distinct !{!8052, !8053, !8054}
!8053 = !DILocation(line: 147, column: 2, scope: !8038)
!8054 = !DILocation(line: 150, column: 2, scope: !8038)
!8055 = !DILocation(line: 152, column: 9, scope: !8038)
!8056 = !DILocation(line: 152, column: 15, scope: !8038)
!8057 = !DILocation(line: 152, column: 13, scope: !8038)
!8058 = !DILocation(line: 152, column: 2, scope: !8038)
!8059 = distinct !DISubprogram(name: "strncmp", scope: !7918, file: !7918, line: 162, type: !8060, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8062)
!8060 = !DISubroutineType(types: !8061)
!8061 = !{!103, !144, !144, !344}
!8062 = !{!8063, !8064, !8065}
!8063 = !DILocalVariable(name: "s1", arg: 1, scope: !8059, file: !7918, line: 162, type: !144)
!8064 = !DILocalVariable(name: "s2", arg: 2, scope: !8059, file: !7918, line: 162, type: !144)
!8065 = !DILocalVariable(name: "n", arg: 3, scope: !8059, file: !7918, line: 162, type: !344)
!8066 = !DILocation(line: 0, scope: !8059)
!8067 = !DILocation(line: 164, column: 17, scope: !8059)
!8068 = !DILocation(line: 164, column: 21, scope: !8059)
!8069 = !DILocation(line: 164, column: 28, scope: !8059)
!8070 = !DILocation(line: 164, column: 25, scope: !8059)
!8071 = !DILocation(line: 164, column: 33, scope: !8059)
!8072 = !DILocation(line: 165, column: 5, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8059, file: !7918, line: 164, column: 51)
!8074 = !DILocation(line: 166, column: 5, scope: !8073)
!8075 = !DILocation(line: 167, column: 4, scope: !8073)
!8076 = distinct !{!8076, !8077, !8078}
!8077 = !DILocation(line: 164, column: 2, scope: !8059)
!8078 = !DILocation(line: 168, column: 2, scope: !8059)
!8079 = !DILocation(line: 170, column: 25, scope: !8059)
!8080 = !DILocation(line: 170, column: 31, scope: !8059)
!8081 = !DILocation(line: 170, column: 29, scope: !8059)
!8082 = !DILocation(line: 170, column: 9, scope: !8059)
!8083 = !DILocation(line: 170, column: 2, scope: !8059)
!8084 = distinct !DISubprogram(name: "strtok_r", scope: !7918, file: !7918, line: 180, type: !8085, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8088)
!8085 = !DISubroutineType(types: !8086)
!8086 = !{!1069, !1069, !144, !8087}
!8087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!8088 = !{!8089, !8090, !8091, !8092, !8093}
!8089 = !DILocalVariable(name: "str", arg: 1, scope: !8084, file: !7918, line: 180, type: !1069)
!8090 = !DILocalVariable(name: "sep", arg: 2, scope: !8084, file: !7918, line: 180, type: !144)
!8091 = !DILocalVariable(name: "state", arg: 3, scope: !8084, file: !7918, line: 180, type: !8087)
!8092 = !DILocalVariable(name: "start", scope: !8084, file: !7918, line: 182, type: !1069)
!8093 = !DILocalVariable(name: "end", scope: !8084, file: !7918, line: 182, type: !1069)
!8094 = !DILocation(line: 0, scope: !8084)
!8095 = !DILocation(line: 184, column: 10, scope: !8084)
!8096 = !DILocation(line: 184, column: 22, scope: !8084)
!8097 = !DILocation(line: 187, column: 9, scope: !8084)
!8098 = !DILocation(line: 187, column: 16, scope: !8084)
!8099 = !DILocation(line: 187, column: 19, scope: !8084)
!8100 = !DILocation(line: 187, column: 2, scope: !8084)
!8101 = !DILocation(line: 188, column: 8, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8084, file: !7918, line: 187, column: 40)
!8103 = distinct !{!8103, !8100, !8104}
!8104 = !DILocation(line: 189, column: 2, scope: !8084)
!8105 = !DILocation(line: 198, column: 9, scope: !8084)
!8106 = !DILocation(line: 198, column: 18, scope: !8084)
!8107 = !DILocation(line: 198, column: 17, scope: !8084)
!8108 = !DILocation(line: 198, column: 2, scope: !8084)
!8109 = !DILocation(line: 199, column: 6, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8084, file: !7918, line: 198, column: 37)
!8111 = !DILocation(line: 198, column: 14, scope: !8084)
!8112 = distinct !{!8112, !8108, !8113}
!8113 = !DILocation(line: 200, column: 2, scope: !8084)
!8114 = !DILocation(line: 203, column: 8, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !7918, line: 202, column: 20)
!8116 = distinct !DILexicalBlock(scope: !8084, file: !7918, line: 202, column: 6)
!8117 = !DILocation(line: 204, column: 16, scope: !8115)
!8118 = !DILocation(line: 205, column: 2, scope: !8115)
!8119 = !DILocation(line: 210, column: 1, scope: !8084)
!8120 = distinct !DISubprogram(name: "strcat", scope: !7918, file: !7918, line: 212, type: !7919, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8121)
!8121 = !{!8122, !8123}
!8122 = !DILocalVariable(name: "dest", arg: 1, scope: !8120, file: !7918, line: 212, type: !7921)
!8123 = !DILocalVariable(name: "src", arg: 2, scope: !8120, file: !7918, line: 212, type: !7922)
!8124 = !DILocation(line: 0, scope: !8120)
!8125 = !DILocation(line: 214, column: 16, scope: !8120)
!8126 = !DILocation(line: 214, column: 14, scope: !8120)
!8127 = !DILocation(line: 214, column: 2, scope: !8120)
!8128 = !DILocation(line: 215, column: 2, scope: !8120)
!8129 = distinct !DISubprogram(name: "strncat", scope: !7918, file: !7918, line: 218, type: !7940, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8130)
!8130 = !{!8131, !8132, !8133, !8134, !8135}
!8131 = !DILocalVariable(name: "dest", arg: 1, scope: !8129, file: !7918, line: 218, type: !7921)
!8132 = !DILocalVariable(name: "src", arg: 2, scope: !8129, file: !7918, line: 218, type: !7922)
!8133 = !DILocalVariable(name: "n", arg: 3, scope: !8129, file: !7918, line: 219, type: !344)
!8134 = !DILocalVariable(name: "orig_dest", scope: !8129, file: !7918, line: 221, type: !1069)
!8135 = !DILocalVariable(name: "len", scope: !8129, file: !7918, line: 222, type: !344)
!8136 = !DILocation(line: 0, scope: !8129)
!8137 = !DILocation(line: 222, column: 15, scope: !8129)
!8138 = !DILocation(line: 224, column: 7, scope: !8129)
!8139 = !DILocation(line: 225, column: 14, scope: !8129)
!8140 = !DILocation(line: 225, column: 19, scope: !8129)
!8141 = !DILocation(line: 225, column: 11, scope: !8129)
!8142 = !DILocation(line: 225, column: 23, scope: !8129)
!8143 = !DILocation(line: 225, column: 28, scope: !8129)
!8144 = !DILocation(line: 225, column: 2, scope: !8129)
!8145 = !DILocation(line: 226, column: 17, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8129, file: !7918, line: 225, column: 38)
!8147 = !DILocation(line: 226, column: 8, scope: !8146)
!8148 = !DILocation(line: 226, column: 11, scope: !8146)
!8149 = distinct !{!8149, !8144, !8150}
!8150 = !DILocation(line: 227, column: 2, scope: !8129)
!8151 = !DILocation(line: 228, column: 8, scope: !8129)
!8152 = !DILocation(line: 230, column: 2, scope: !8129)
!8153 = distinct !DISubprogram(name: "memcmp", scope: !7918, file: !7918, line: 239, type: !8154, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8156)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{!103, !13, !13, !344}
!8156 = !{!8157, !8158, !8159, !8160, !8161}
!8157 = !DILocalVariable(name: "m1", arg: 1, scope: !8153, file: !7918, line: 239, type: !13)
!8158 = !DILocalVariable(name: "m2", arg: 2, scope: !8153, file: !7918, line: 239, type: !13)
!8159 = !DILocalVariable(name: "n", arg: 3, scope: !8153, file: !7918, line: 239, type: !344)
!8160 = !DILocalVariable(name: "c1", scope: !8153, file: !7918, line: 241, type: !144)
!8161 = !DILocalVariable(name: "c2", scope: !8153, file: !7918, line: 242, type: !144)
!8162 = !DILocation(line: 0, scope: !8153)
!8163 = !DILocation(line: 244, column: 7, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8153, file: !7918, line: 244, column: 6)
!8165 = !DILocation(line: 244, column: 6, scope: !8153)
!8166 = !DILocation(line: 248, column: 10, scope: !8153)
!8167 = !DILocation(line: 248, column: 14, scope: !8153)
!8168 = !DILocation(line: 248, column: 19, scope: !8153)
!8169 = !DILocation(line: 248, column: 2, scope: !8153)
!8170 = !DILocation(line: 248, column: 23, scope: !8153)
!8171 = !DILocation(line: 248, column: 30, scope: !8153)
!8172 = !DILocation(line: 248, column: 27, scope: !8153)
!8173 = !DILocation(line: 249, column: 5, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8153, file: !7918, line: 248, column: 36)
!8175 = !DILocation(line: 250, column: 5, scope: !8174)
!8176 = distinct !{!8176, !8169, !8177}
!8177 = !DILocation(line: 251, column: 2, scope: !8153)
!8178 = !DILocation(line: 253, column: 9, scope: !8153)
!8179 = !DILocation(line: 253, column: 15, scope: !8153)
!8180 = !DILocation(line: 253, column: 13, scope: !8153)
!8181 = !DILocation(line: 253, column: 2, scope: !8153)
!8182 = !DILocation(line: 254, column: 1, scope: !8153)
!8183 = distinct !DISubprogram(name: "memmove", scope: !7918, file: !7918, line: 263, type: !8184, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8186)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{!102, !102, !13, !344}
!8186 = !{!8187, !8188, !8189, !8190, !8191}
!8187 = !DILocalVariable(name: "d", arg: 1, scope: !8183, file: !7918, line: 263, type: !102)
!8188 = !DILocalVariable(name: "s", arg: 2, scope: !8183, file: !7918, line: 263, type: !13)
!8189 = !DILocalVariable(name: "n", arg: 3, scope: !8183, file: !7918, line: 263, type: !344)
!8190 = !DILocalVariable(name: "dest", scope: !8183, file: !7918, line: 265, type: !1069)
!8191 = !DILocalVariable(name: "src", scope: !8183, file: !7918, line: 266, type: !144)
!8192 = !DILocation(line: 0, scope: !8183)
!8193 = !DILocation(line: 268, column: 21, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8183, file: !7918, line: 268, column: 6)
!8195 = !DILocation(line: 268, column: 28, scope: !8194)
!8196 = !DILocation(line: 268, column: 6, scope: !8183)
!8197 = !DILocation(line: 280, column: 12, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !7918, line: 278, column: 9)
!8199 = !DILocation(line: 280, column: 3, scope: !8198)
!8200 = !DILocation(line: 275, column: 5, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !7918, line: 274, column: 17)
!8202 = distinct !DILexicalBlock(scope: !8194, file: !7918, line: 268, column: 33)
!8203 = !DILocation(line: 276, column: 14, scope: !8201)
!8204 = !DILocation(line: 276, column: 4, scope: !8201)
!8205 = !DILocation(line: 276, column: 12, scope: !8201)
!8206 = !DILocation(line: 274, column: 12, scope: !8202)
!8207 = !DILocation(line: 274, column: 3, scope: !8202)
!8208 = distinct !{!8208, !8207, !8209}
!8209 = !DILocation(line: 277, column: 3, scope: !8202)
!8210 = !DILocation(line: 281, column: 12, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8198, file: !7918, line: 280, column: 17)
!8212 = !DILocation(line: 281, column: 10, scope: !8211)
!8213 = !DILocation(line: 282, column: 8, scope: !8211)
!8214 = !DILocation(line: 283, column: 7, scope: !8211)
!8215 = !DILocation(line: 284, column: 5, scope: !8211)
!8216 = distinct !{!8216, !8199, !8217}
!8217 = !DILocation(line: 285, column: 3, scope: !8198)
!8218 = !DILocation(line: 288, column: 2, scope: !8183)
!8219 = distinct !DISubprogram(name: "memcpy", scope: !7918, file: !7918, line: 298, type: !8220, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8224)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!102, !8222, !8223, !344}
!8222 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8223 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8224 = !{!8225, !8226, !8227, !8228, !8229}
!8225 = !DILocalVariable(name: "d", arg: 1, scope: !8219, file: !7918, line: 298, type: !8222)
!8226 = !DILocalVariable(name: "s", arg: 2, scope: !8219, file: !7918, line: 298, type: !8223)
!8227 = !DILocalVariable(name: "n", arg: 3, scope: !8219, file: !7918, line: 298, type: !344)
!8228 = !DILocalVariable(name: "d_byte", scope: !8219, file: !7918, line: 302, type: !224)
!8229 = !DILocalVariable(name: "s_byte", scope: !8219, file: !7918, line: 303, type: !3006)
!8230 = !DILocation(line: 0, scope: !8219)
!8231 = !DILocation(line: 337, column: 11, scope: !8219)
!8232 = !DILocation(line: 337, column: 2, scope: !8219)
!8233 = !DILocation(line: 338, column: 25, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8219, file: !7918, line: 337, column: 16)
!8235 = !DILocation(line: 338, column: 17, scope: !8234)
!8236 = !DILocation(line: 338, column: 11, scope: !8234)
!8237 = !DILocation(line: 338, column: 15, scope: !8234)
!8238 = !DILocation(line: 339, column: 4, scope: !8234)
!8239 = distinct !{!8239, !8232, !8240}
!8240 = !DILocation(line: 340, column: 2, scope: !8219)
!8241 = !DILocation(line: 342, column: 2, scope: !8219)
!8242 = distinct !DISubprogram(name: "memset", scope: !7918, file: !7918, line: 352, type: !8243, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8245)
!8243 = !DISubroutineType(types: !8244)
!8244 = !{!102, !102, !103, !344}
!8245 = !{!8246, !8247, !8248, !8249, !8250}
!8246 = !DILocalVariable(name: "buf", arg: 1, scope: !8242, file: !7918, line: 352, type: !102)
!8247 = !DILocalVariable(name: "c", arg: 2, scope: !8242, file: !7918, line: 352, type: !103)
!8248 = !DILocalVariable(name: "n", arg: 3, scope: !8242, file: !7918, line: 352, type: !344)
!8249 = !DILocalVariable(name: "d_byte", scope: !8242, file: !7918, line: 356, type: !224)
!8250 = !DILocalVariable(name: "c_byte", scope: !8242, file: !7918, line: 357, type: !155)
!8251 = !DILocation(line: 0, scope: !8242)
!8252 = !DILocation(line: 357, column: 25, scope: !8242)
!8253 = !DILocation(line: 389, column: 11, scope: !8242)
!8254 = !DILocation(line: 389, column: 2, scope: !8242)
!8255 = !DILocation(line: 390, column: 11, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8242, file: !7918, line: 389, column: 16)
!8257 = !DILocation(line: 390, column: 15, scope: !8256)
!8258 = !DILocation(line: 391, column: 4, scope: !8256)
!8259 = distinct !{!8259, !8254, !8260}
!8260 = !DILocation(line: 392, column: 2, scope: !8242)
!8261 = !DILocation(line: 394, column: 2, scope: !8242)
!8262 = distinct !DISubprogram(name: "memchr", scope: !7918, file: !7918, line: 404, type: !8263, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3003, retainedNodes: !8265)
!8263 = !DISubroutineType(types: !8264)
!8264 = !{!102, !13, !103, !344}
!8265 = !{!8266, !8267, !8268, !8269}
!8266 = !DILocalVariable(name: "s", arg: 1, scope: !8262, file: !7918, line: 404, type: !13)
!8267 = !DILocalVariable(name: "c", arg: 2, scope: !8262, file: !7918, line: 404, type: !103)
!8268 = !DILocalVariable(name: "n", arg: 3, scope: !8262, file: !7918, line: 404, type: !344)
!8269 = !DILocalVariable(name: "p", scope: !8270, file: !7918, line: 407, type: !3006)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !7918, line: 406, column: 14)
!8271 = distinct !DILexicalBlock(scope: !8262, file: !7918, line: 406, column: 6)
!8272 = !DILocation(line: 0, scope: !8262)
!8273 = !DILocation(line: 406, column: 8, scope: !8271)
!8274 = !DILocation(line: 406, column: 6, scope: !8262)
!8275 = !DILocation(line: 409, column: 3, scope: !8270)
!8276 = !DILocation(line: 0, scope: !8270)
!8277 = !DILocation(line: 410, column: 8, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !7918, line: 410, column: 8)
!8279 = distinct !DILexicalBlock(scope: !8270, file: !7918, line: 409, column: 6)
!8280 = !DILocation(line: 410, column: 13, scope: !8278)
!8281 = !DILocation(line: 410, column: 8, scope: !8279)
!8282 = distinct !{!8282, !8275, !8283}
!8283 = !DILocation(line: 414, column: 20, scope: !8270)
!8284 = !DILocation(line: 417, column: 2, scope: !8262)
!8285 = !DILocation(line: 418, column: 1, scope: !8262)
!8286 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !533, file: !533, line: 23, type: !3368, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8287)
!8287 = !{!8288}
!8288 = !DILocalVariable(name: "hook", arg: 1, scope: !8286, file: !533, line: 23, type: !106)
!8289 = !DILocation(line: 0, scope: !8286)
!8290 = !DILocation(line: 25, column: 15, scope: !8286)
!8291 = !DILocation(line: 26, column: 1, scope: !8286)
!8292 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !533, file: !533, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8293)
!8293 = !{!8294}
!8294 = !DILocalVariable(name: "c", arg: 1, scope: !8292, file: !533, line: 14, type: !103)
!8295 = !DILocation(line: 0, scope: !8292)
!8296 = !DILocation(line: 18, column: 2, scope: !8292)
!8297 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !533, file: !533, line: 28, type: !8298, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8300)
!8298 = !DISubroutineType(types: !8299)
!8299 = !{!103, !103, !529}
!8300 = !{!8301, !8302}
!8301 = !DILocalVariable(name: "c", arg: 1, scope: !8297, file: !533, line: 28, type: !103)
!8302 = !DILocalVariable(name: "stream", arg: 2, scope: !8297, file: !533, line: 28, type: !529)
!8303 = !DILocation(line: 0, scope: !8297)
!8304 = !DILocation(line: 30, column: 27, scope: !8297)
!8305 = !DILocation(line: 30, column: 50, scope: !8297)
!8306 = !DILocation(line: 30, column: 9, scope: !8297)
!8307 = !DILocation(line: 30, column: 2, scope: !8297)
!8308 = distinct !DISubprogram(name: "fputc", scope: !533, file: !533, line: 41, type: !8298, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8309)
!8309 = !{!8310, !8311}
!8310 = !DILocalVariable(name: "c", arg: 1, scope: !8308, file: !533, line: 41, type: !103)
!8311 = !DILocalVariable(name: "stream", arg: 2, scope: !8308, file: !533, line: 41, type: !529)
!8312 = !DILocation(line: 0, scope: !8308)
!8313 = !DILocation(line: 43, column: 9, scope: !8308)
!8314 = !DILocation(line: 43, column: 2, scope: !8308)
!8315 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8316, file: !8316, line: 72, type: !8298, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8317)
!8316 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getchar")
!8317 = !{!8318, !8319}
!8318 = !DILocalVariable(name: "c", arg: 1, scope: !8315, file: !8316, line: 72, type: !103)
!8319 = !DILocalVariable(name: "stream", arg: 2, scope: !8315, file: !8316, line: 72, type: !529)
!8320 = !DILocation(line: 0, scope: !8315)
!8321 = !DILocation(line: 81, column: 2, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8315, file: !8316, line: 81, column: 2)
!8323 = !{i64 2154803662}
!8324 = !DILocation(line: 82, column: 9, scope: !8315)
!8325 = !DILocation(line: 82, column: 2, scope: !8315)
!8326 = distinct !DISubprogram(name: "fputs", scope: !533, file: !533, line: 46, type: !8327, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8330)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{!103, !7922, !8329}
!8329 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !529)
!8330 = !{!8331, !8332, !8333, !8334}
!8331 = !DILocalVariable(name: "s", arg: 1, scope: !8326, file: !533, line: 46, type: !7922)
!8332 = !DILocalVariable(name: "stream", arg: 2, scope: !8326, file: !533, line: 46, type: !8329)
!8333 = !DILocalVariable(name: "len", scope: !8326, file: !533, line: 48, type: !103)
!8334 = !DILocalVariable(name: "ret", scope: !8326, file: !533, line: 49, type: !103)
!8335 = !DILocation(line: 0, scope: !8326)
!8336 = !DILocation(line: 48, column: 12, scope: !8326)
!8337 = !DILocation(line: 51, column: 8, scope: !8326)
!8338 = !DILocation(line: 53, column: 13, scope: !8326)
!8339 = !DILocation(line: 53, column: 9, scope: !8326)
!8340 = !DILocation(line: 53, column: 2, scope: !8326)
!8341 = distinct !DISubprogram(name: "fwrite", scope: !533, file: !533, line: 99, type: !8342, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8344)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!344, !8223, !344, !344, !8329}
!8344 = !{!8345, !8346, !8347, !8348}
!8345 = !DILocalVariable(name: "ptr", arg: 1, scope: !8341, file: !533, line: 99, type: !8223)
!8346 = !DILocalVariable(name: "size", arg: 2, scope: !8341, file: !533, line: 99, type: !344)
!8347 = !DILocalVariable(name: "nitems", arg: 3, scope: !8341, file: !533, line: 99, type: !344)
!8348 = !DILocalVariable(name: "stream", arg: 4, scope: !8341, file: !533, line: 100, type: !8329)
!8349 = !DILocation(line: 0, scope: !8341)
!8350 = !DILocation(line: 102, column: 9, scope: !8341)
!8351 = !DILocation(line: 102, column: 2, scope: !8341)
!8352 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8316, file: !8316, line: 96, type: !8342, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8353)
!8353 = !{!8354, !8355, !8356, !8357}
!8354 = !DILocalVariable(name: "ptr", arg: 1, scope: !8352, file: !8316, line: 96, type: !8223)
!8355 = !DILocalVariable(name: "size", arg: 2, scope: !8352, file: !8316, line: 96, type: !344)
!8356 = !DILocalVariable(name: "nitems", arg: 3, scope: !8352, file: !8316, line: 96, type: !344)
!8357 = !DILocalVariable(name: "stream", arg: 4, scope: !8352, file: !8316, line: 96, type: !8329)
!8358 = !DILocation(line: 0, scope: !8352)
!8359 = !DILocation(line: 107, column: 2, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8352, file: !8316, line: 107, column: 2)
!8361 = !{i64 2154803766}
!8362 = !DILocation(line: 108, column: 9, scope: !8352)
!8363 = !DILocation(line: 108, column: 2, scope: !8352)
!8364 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !533, file: !533, line: 56, type: !8342, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8365)
!8365 = !{!8366, !8367, !8368, !8369, !8370, !8371, !8372, !8373}
!8366 = !DILocalVariable(name: "ptr", arg: 1, scope: !8364, file: !533, line: 56, type: !8223)
!8367 = !DILocalVariable(name: "size", arg: 2, scope: !8364, file: !533, line: 56, type: !344)
!8368 = !DILocalVariable(name: "nitems", arg: 3, scope: !8364, file: !533, line: 57, type: !344)
!8369 = !DILocalVariable(name: "stream", arg: 4, scope: !8364, file: !533, line: 57, type: !8329)
!8370 = !DILocalVariable(name: "i", scope: !8364, file: !533, line: 59, type: !344)
!8371 = !DILocalVariable(name: "j", scope: !8364, file: !533, line: 60, type: !344)
!8372 = !DILocalVariable(name: "p", scope: !8364, file: !533, line: 61, type: !3006)
!8373 = !DILabel(scope: !8364, name: "done", file: !533, line: 82)
!8374 = !DILocation(line: 0, scope: !8364)
!8375 = !DILocation(line: 63, column: 14, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8364, file: !533, line: 63, column: 6)
!8377 = !DILocation(line: 63, column: 24, scope: !8376)
!8378 = !DILocation(line: 72, column: 3, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8364, file: !533, line: 70, column: 5)
!8380 = !DILocation(line: 0, scope: !8379)
!8381 = !DILocation(line: 73, column: 8, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !533, line: 73, column: 8)
!8383 = distinct !DILexicalBlock(scope: !8379, file: !533, line: 72, column: 6)
!8384 = !DILocation(line: 73, column: 29, scope: !8382)
!8385 = !DILocation(line: 73, column: 27, scope: !8382)
!8386 = !DILocation(line: 73, column: 21, scope: !8382)
!8387 = !DILocation(line: 73, column: 33, scope: !8382)
!8388 = !DILocation(line: 73, column: 8, scope: !8383)
!8389 = !DILocation(line: 76, column: 5, scope: !8383)
!8390 = !DILocation(line: 77, column: 14, scope: !8379)
!8391 = !DILocation(line: 77, column: 3, scope: !8383)
!8392 = distinct !{!8392, !8378, !8393}
!8393 = !DILocation(line: 77, column: 17, scope: !8379)
!8394 = !DILocation(line: 79, column: 4, scope: !8379)
!8395 = !DILocation(line: 80, column: 13, scope: !8364)
!8396 = !DILocation(line: 80, column: 2, scope: !8379)
!8397 = distinct !{!8397, !8398, !8399}
!8398 = !DILocation(line: 70, column: 2, scope: !8364)
!8399 = !DILocation(line: 80, column: 16, scope: !8364)
!8400 = !DILocation(line: 82, column: 1, scope: !8364)
!8401 = !DILocation(line: 83, column: 17, scope: !8364)
!8402 = !DILocation(line: 83, column: 2, scope: !8364)
!8403 = !DILocation(line: 84, column: 1, scope: !8364)
!8404 = distinct !DISubprogram(name: "puts", scope: !533, file: !533, line: 106, type: !8405, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8407)
!8405 = !DISubroutineType(types: !8406)
!8406 = !{!103, !144}
!8407 = !{!8408}
!8408 = !DILocalVariable(name: "s", arg: 1, scope: !8404, file: !533, line: 106, type: !144)
!8409 = !DILocation(line: 0, scope: !8404)
!8410 = !DILocation(line: 108, column: 6, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8404, file: !533, line: 108, column: 6)
!8412 = !DILocation(line: 108, column: 23, scope: !8411)
!8413 = !DILocation(line: 108, column: 6, scope: !8404)
!8414 = !DILocation(line: 112, column: 9, scope: !8404)
!8415 = !DILocation(line: 112, column: 29, scope: !8404)
!8416 = !DILocation(line: 112, column: 2, scope: !8404)
!8417 = !DILocation(line: 113, column: 1, scope: !8404)
!8418 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !665, file: !665, line: 368, type: !718, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8419)
!8419 = !{!8420}
!8420 = !DILocalVariable(name: "dev", arg: 1, scope: !8418, file: !665, line: 368, type: !694)
!8421 = !DILocation(line: 0, scope: !8418)
!8422 = !DILocation(line: 370, column: 2, scope: !8418)
!8423 = !DILocation(line: 371, column: 1, scope: !8418)
!8424 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !665, file: !665, line: 243, type: !8425, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8427)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{null, !103, !103, !694}
!8427 = !{!8428, !8429, !8430, !8431, !8433}
!8428 = !DILocalVariable(name: "min", arg: 1, scope: !8424, file: !665, line: 243, type: !103)
!8429 = !DILocalVariable(name: "max", arg: 2, scope: !8424, file: !665, line: 243, type: !103)
!8430 = !DILocalVariable(name: "dev", arg: 3, scope: !8424, file: !665, line: 243, type: !694)
!8431 = !DILocalVariable(name: "data", scope: !8424, file: !665, line: 245, type: !8432)
!8432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 32)
!8433 = !DILocalVariable(name: "line", scope: !8424, file: !665, line: 246, type: !103)
!8434 = !DILocation(line: 0, scope: !8424)
!8435 = !DILocation(line: 245, column: 38, scope: !8424)
!8436 = !DILocation(line: 249, column: 24, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !665, line: 249, column: 2)
!8438 = distinct !DILexicalBlock(scope: !8424, file: !665, line: 249, column: 2)
!8439 = !DILocation(line: 249, column: 2, scope: !8438)
!8440 = !DILocation(line: 251, column: 7, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !665, line: 251, column: 7)
!8442 = distinct !DILexicalBlock(scope: !8437, file: !665, line: 249, column: 39)
!8443 = !DILocation(line: 251, column: 7, scope: !8442)
!8444 = !DILocation(line: 253, column: 4, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8441, file: !665, line: 251, column: 36)
!8446 = !DILocation(line: 256, column: 24, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8445, file: !665, line: 256, column: 8)
!8448 = !DILocation(line: 256, column: 9, scope: !8447)
!8449 = !DILocation(line: 256, column: 8, scope: !8445)
!8450 = !DILocation(line: 260, column: 43, scope: !8445)
!8451 = !DILocation(line: 260, column: 4, scope: !8445)
!8452 = !DILocation(line: 261, column: 3, scope: !8445)
!8453 = !DILocation(line: 249, column: 35, scope: !8437)
!8454 = distinct !{!8454, !8439, !8455}
!8455 = !DILocation(line: 262, column: 2, scope: !8438)
!8456 = !DILocation(line: 263, column: 1, scope: !8424)
!8457 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !665, file: !665, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8458)
!8458 = !{!8459}
!8459 = !DILocalVariable(name: "line", arg: 1, scope: !8457, file: !665, line: 158, type: !103)
!8460 = !DILocation(line: 0, scope: !8457)
!8461 = !DILocation(line: 170, column: 38, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !665, line: 160, column: 17)
!8463 = distinct !DILexicalBlock(scope: !8457, file: !665, line: 160, column: 6)
!8464 = !DILocation(line: 170, column: 10, scope: !8462)
!8465 = !DILocation(line: 176, column: 1, scope: !8457)
!8466 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !665, file: !665, line: 183, type: !8467, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8469)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{null, !103}
!8469 = !{!8470}
!8470 = !DILocalVariable(name: "line", arg: 1, scope: !8466, file: !665, line: 183, type: !103)
!8471 = !DILocation(line: 0, scope: !8466)
!8472 = !DILocation(line: 195, column: 28, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !665, line: 185, column: 17)
!8474 = distinct !DILexicalBlock(scope: !8466, file: !665, line: 185, column: 6)
!8475 = !DILocation(line: 195, column: 3, scope: !8473)
!8476 = !DILocation(line: 200, column: 1, scope: !8466)
!8477 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8478, file: !8478, line: 910, type: !6916, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8479)
!8478 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8479 = !{!8480}
!8480 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8477, file: !8478, line: 910, type: !121)
!8481 = !DILocation(line: 0, scope: !8477)
!8482 = !DILocation(line: 912, column: 3, scope: !8477)
!8483 = !DILocation(line: 913, column: 1, scope: !8477)
!8484 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8478, file: !8478, line: 834, type: !7832, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8485)
!8485 = !{!8486}
!8486 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8484, file: !8478, line: 834, type: !121)
!8487 = !DILocation(line: 0, scope: !8484)
!8488 = !DILocation(line: 836, column: 11, scope: !8484)
!8489 = !DILocation(line: 836, column: 40, scope: !8484)
!8490 = !DILocation(line: 836, column: 3, scope: !8484)
!8491 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !665, file: !665, line: 304, type: !718, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8492)
!8492 = !{!8493}
!8493 = !DILocalVariable(name: "dev", arg: 1, scope: !8491, file: !665, line: 304, type: !694)
!8494 = !DILocation(line: 0, scope: !8491)
!8495 = !DILocation(line: 306, column: 2, scope: !8491)
!8496 = !DILocation(line: 307, column: 1, scope: !8491)
!8497 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !665, file: !665, line: 299, type: !718, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8498)
!8498 = !{!8499}
!8499 = !DILocalVariable(name: "dev", arg: 1, scope: !8497, file: !665, line: 299, type: !694)
!8500 = !DILocation(line: 0, scope: !8497)
!8501 = !DILocation(line: 301, column: 2, scope: !8497)
!8502 = !DILocation(line: 302, column: 1, scope: !8497)
!8503 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !665, file: !665, line: 294, type: !718, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8504)
!8504 = !{!8505}
!8505 = !DILocalVariable(name: "dev", arg: 1, scope: !8503, file: !665, line: 294, type: !694)
!8506 = !DILocation(line: 0, scope: !8503)
!8507 = !DILocation(line: 296, column: 2, scope: !8503)
!8508 = !DILocation(line: 297, column: 1, scope: !8503)
!8509 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !665, file: !665, line: 397, type: !718, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8510)
!8510 = !{!8511}
!8511 = !DILocalVariable(name: "dev", arg: 1, scope: !8509, file: !665, line: 397, type: !694)
!8512 = !DILocation(line: 0, scope: !8509)
!8513 = !DILocation(line: 399, column: 2, scope: !8509)
!8514 = !DILocation(line: 400, column: 1, scope: !8509)
!8515 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !665, file: !665, line: 392, type: !718, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8516)
!8516 = !{!8517}
!8517 = !DILocalVariable(name: "dev", arg: 1, scope: !8515, file: !665, line: 392, type: !694)
!8518 = !DILocation(line: 0, scope: !8515)
!8519 = !DILocation(line: 394, column: 2, scope: !8515)
!8520 = !DILocation(line: 395, column: 1, scope: !8515)
!8521 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !665, file: !665, line: 289, type: !718, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8522)
!8522 = !{!8523}
!8523 = !DILocalVariable(name: "dev", arg: 1, scope: !8521, file: !665, line: 289, type: !694)
!8524 = !DILocation(line: 0, scope: !8521)
!8525 = !DILocation(line: 291, column: 2, scope: !8521)
!8526 = !DILocation(line: 292, column: 1, scope: !8521)
!8527 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !665, file: !665, line: 387, type: !718, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "dev", arg: 1, scope: !8527, file: !665, line: 387, type: !694)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 389, column: 2, scope: !8527)
!8532 = !DILocation(line: 390, column: 1, scope: !8527)
!8533 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !665, file: !665, line: 382, type: !718, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8534)
!8534 = !{!8535}
!8535 = !DILocalVariable(name: "dev", arg: 1, scope: !8533, file: !665, line: 382, type: !694)
!8536 = !DILocation(line: 0, scope: !8533)
!8537 = !DILocation(line: 384, column: 2, scope: !8533)
!8538 = !DILocation(line: 385, column: 1, scope: !8533)
!8539 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !665, file: !665, line: 373, type: !718, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8540)
!8540 = !{!8541}
!8541 = !DILocalVariable(name: "dev", arg: 1, scope: !8539, file: !665, line: 373, type: !694)
!8542 = !DILocation(line: 0, scope: !8539)
!8543 = !DILocation(line: 375, column: 2, scope: !8539)
!8544 = !DILocation(line: 376, column: 1, scope: !8539)
!8545 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !665, file: !665, line: 284, type: !718, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8546)
!8546 = !{!8547}
!8547 = !DILocalVariable(name: "dev", arg: 1, scope: !8545, file: !665, line: 284, type: !694)
!8548 = !DILocation(line: 0, scope: !8545)
!8549 = !DILocation(line: 286, column: 2, scope: !8545)
!8550 = !DILocation(line: 287, column: 1, scope: !8545)
!8551 = distinct !DISubprogram(name: "stm32_exti_init", scope: !665, file: !665, line: 416, type: !692, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8552)
!8552 = !{!8553}
!8553 = !DILocalVariable(name: "dev", arg: 1, scope: !8551, file: !665, line: 416, type: !694)
!8554 = !DILocation(line: 0, scope: !8551)
!8555 = !DILocation(line: 418, column: 2, scope: !8551)
!8556 = !DILocation(line: 420, column: 2, scope: !8551)
!8557 = !DILocation(line: 0, scope: !717)
!8558 = !DILocation(line: 493, column: 2, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !717, file: !665, line: 493, column: 2)
!8560 = !DILocation(line: 497, column: 2, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !717, file: !665, line: 497, column: 2)
!8562 = !DILocation(line: 507, column: 2, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !717, file: !665, line: 507, column: 2)
!8564 = !DILocation(line: 512, column: 2, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !717, file: !665, line: 512, column: 2)
!8566 = !DILocation(line: 516, column: 2, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !717, file: !665, line: 516, column: 2)
!8568 = !DILocation(line: 523, column: 2, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !717, file: !665, line: 523, column: 2)
!8570 = !DILocation(line: 527, column: 2, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !717, file: !665, line: 527, column: 2)
!8572 = !DILocation(line: 581, column: 2, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !717, file: !665, line: 581, column: 2)
!8574 = !DILocation(line: 586, column: 2, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !717, file: !665, line: 586, column: 2)
!8576 = !DILocation(line: 591, column: 2, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !717, file: !665, line: 591, column: 2)
!8578 = !DILocation(line: 595, column: 2, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !717, file: !665, line: 595, column: 2)
!8580 = !DILocation(line: 607, column: 1, scope: !717)
!8581 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !665, file: !665, line: 112, type: !8467, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8582)
!8582 = !{!8583, !8584}
!8583 = !DILocalVariable(name: "line", arg: 1, scope: !8581, file: !665, line: 112, type: !103)
!8584 = !DILocalVariable(name: "irqnum", scope: !8581, file: !665, line: 114, type: !103)
!8585 = !DILocation(line: 0, scope: !8581)
!8586 = !DILocation(line: 121, column: 11, scope: !8581)
!8587 = !DILocation(line: 130, column: 26, scope: !8581)
!8588 = !DILocation(line: 130, column: 2, scope: !8581)
!8589 = !DILocation(line: 134, column: 2, scope: !8581)
!8590 = !DILocation(line: 135, column: 1, scope: !8581)
!8591 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8478, file: !8478, line: 268, type: !6916, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8592)
!8592 = !{!8593}
!8593 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8591, file: !8478, line: 268, type: !121)
!8594 = !DILocation(line: 0, scope: !8591)
!8595 = !DILocation(line: 270, column: 3, scope: !8591)
!8596 = !DILocation(line: 271, column: 1, scope: !8591)
!8597 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !665, file: !665, line: 137, type: !8467, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8598)
!8598 = !{!8599}
!8599 = !DILocalVariable(name: "line", arg: 1, scope: !8597, file: !665, line: 137, type: !103)
!8600 = !DILocation(line: 0, scope: !8597)
!8601 = !DILocation(line: 141, column: 11, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8597, file: !665, line: 141, column: 6)
!8603 = !DILocation(line: 141, column: 6, scope: !8597)
!8604 = !DILocation(line: 145, column: 28, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8602, file: !665, line: 141, column: 17)
!8606 = !DILocation(line: 145, column: 3, scope: !8605)
!8607 = !DILocation(line: 147, column: 2, scope: !8605)
!8608 = !DILocation(line: 151, column: 1, scope: !8597)
!8609 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8478, file: !8478, line: 309, type: !6916, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8610)
!8610 = !{!8611}
!8611 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8609, file: !8478, line: 309, type: !121)
!8612 = !DILocation(line: 0, scope: !8609)
!8613 = !DILocation(line: 311, column: 3, scope: !8609)
!8614 = !DILocation(line: 312, column: 1, scope: !8609)
!8615 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !665, file: !665, line: 202, type: !8616, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8618)
!8616 = !DISubroutineType(types: !8617)
!8617 = !{null, !103, !103}
!8618 = !{!8619, !8620}
!8619 = !DILocalVariable(name: "line", arg: 1, scope: !8615, file: !665, line: 202, type: !103)
!8620 = !DILocalVariable(name: "trigger", arg: 2, scope: !8615, file: !665, line: 202, type: !103)
!8621 = !DILocation(line: 0, scope: !8615)
!8622 = !DILocation(line: 211, column: 2, scope: !8615)
!8623 = !DILocation(line: 213, column: 36, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8615, file: !665, line: 211, column: 19)
!8625 = !DILocation(line: 213, column: 3, scope: !8624)
!8626 = !DILocation(line: 214, column: 3, scope: !8624)
!8627 = !DILocation(line: 215, column: 3, scope: !8624)
!8628 = !DILocation(line: 217, column: 35, scope: !8624)
!8629 = !DILocation(line: 217, column: 3, scope: !8624)
!8630 = !DILocation(line: 218, column: 3, scope: !8624)
!8631 = !DILocation(line: 219, column: 3, scope: !8624)
!8632 = !DILocation(line: 221, column: 36, scope: !8624)
!8633 = !DILocation(line: 221, column: 3, scope: !8624)
!8634 = !DILocation(line: 222, column: 3, scope: !8624)
!8635 = !DILocation(line: 223, column: 3, scope: !8624)
!8636 = !DILocation(line: 225, column: 35, scope: !8624)
!8637 = !DILocation(line: 225, column: 3, scope: !8624)
!8638 = !DILocation(line: 226, column: 3, scope: !8624)
!8639 = !DILocation(line: 227, column: 3, scope: !8624)
!8640 = !DILocation(line: 232, column: 1, scope: !8615)
!8641 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8478, file: !8478, line: 573, type: !6916, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8642)
!8642 = !{!8643}
!8643 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8641, file: !8478, line: 573, type: !121)
!8644 = !DILocation(line: 0, scope: !8641)
!8645 = !DILocation(line: 575, column: 3, scope: !8641)
!8646 = !DILocation(line: 577, column: 1, scope: !8641)
!8647 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8478, file: !8478, line: 703, type: !6916, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8648)
!8648 = !{!8649}
!8649 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8647, file: !8478, line: 703, type: !121)
!8650 = !DILocation(line: 0, scope: !8647)
!8651 = !DILocation(line: 705, column: 3, scope: !8647)
!8652 = !DILocation(line: 706, column: 1, scope: !8647)
!8653 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8478, file: !8478, line: 529, type: !6916, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8654)
!8654 = !{!8655}
!8655 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8653, file: !8478, line: 529, type: !121)
!8656 = !DILocation(line: 0, scope: !8653)
!8657 = !DILocation(line: 531, column: 3, scope: !8653)
!8658 = !DILocation(line: 533, column: 1, scope: !8653)
!8659 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8478, file: !8478, line: 661, type: !6916, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8660)
!8660 = !{!8661}
!8661 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8659, file: !8478, line: 661, type: !121)
!8662 = !DILocation(line: 0, scope: !8659)
!8663 = !DILocation(line: 663, column: 3, scope: !8659)
!8664 = !DILocation(line: 664, column: 1, scope: !8659)
!8665 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !665, file: !665, line: 433, type: !8666, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8668)
!8666 = !DISubroutineType(types: !8667)
!8667 = !{!103, !103, !705, !102}
!8668 = !{!8669, !8670, !8671, !8672, !8674}
!8669 = !DILocalVariable(name: "line", arg: 1, scope: !8665, file: !665, line: 433, type: !103)
!8670 = !DILocalVariable(name: "cb", arg: 2, scope: !8665, file: !665, line: 433, type: !705)
!8671 = !DILocalVariable(name: "arg", arg: 3, scope: !8665, file: !665, line: 433, type: !102)
!8672 = !DILocalVariable(name: "dev", scope: !8665, file: !665, line: 435, type: !8673)
!8673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!8674 = !DILocalVariable(name: "data", scope: !8665, file: !665, line: 436, type: !8432)
!8675 = !DILocation(line: 0, scope: !8665)
!8676 = !DILocation(line: 438, column: 21, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8665, file: !665, line: 438, column: 6)
!8678 = !DILocation(line: 438, column: 6, scope: !8677)
!8679 = !DILocation(line: 438, column: 6, scope: !8665)
!8680 = !DILocation(line: 442, column: 20, scope: !8665)
!8681 = !DILocation(line: 443, column: 17, scope: !8665)
!8682 = !DILocation(line: 443, column: 22, scope: !8665)
!8683 = !DILocation(line: 445, column: 2, scope: !8665)
!8684 = !DILocation(line: 446, column: 1, scope: !8665)
!8685 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !665, file: !665, line: 448, type: !8467, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8686)
!8686 = !{!8687, !8688, !8689}
!8687 = !DILocalVariable(name: "line", arg: 1, scope: !8685, file: !665, line: 448, type: !103)
!8688 = !DILocalVariable(name: "dev", scope: !8685, file: !665, line: 450, type: !8673)
!8689 = !DILocalVariable(name: "data", scope: !8685, file: !665, line: 451, type: !8432)
!8690 = !DILocation(line: 0, scope: !8685)
!8691 = !DILocation(line: 453, column: 17, scope: !8685)
!8692 = !DILocation(line: 453, column: 20, scope: !8685)
!8693 = !DILocation(line: 454, column: 17, scope: !8685)
!8694 = !DILocation(line: 454, column: 22, scope: !8685)
!8695 = !DILocation(line: 455, column: 1, scope: !8685)
!8696 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !847, file: !847, line: 183, type: !885, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8697)
!8697 = !{!8698, !8699, !8700, !8701, !8702}
!8698 = !DILocalVariable(name: "dev", arg: 1, scope: !8696, file: !847, line: 183, type: !876)
!8699 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8696, file: !847, line: 184, type: !887)
!8700 = !DILocalVariable(name: "pclken", scope: !8696, file: !847, line: 186, type: !837)
!8701 = !DILocalVariable(name: "reg", scope: !8696, file: !847, line: 187, type: !1598)
!8702 = !DILocalVariable(name: "reg_val", scope: !8696, file: !847, line: 188, type: !121)
!8703 = !DILocation(line: 0, scope: !8696)
!8704 = !DILocation(line: 192, column: 6, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8696, file: !847, line: 192, column: 6)
!8706 = !DILocation(line: 192, column: 6, scope: !8696)
!8707 = !DILocation(line: 197, column: 52, scope: !8696)
!8708 = !DILocation(line: 197, column: 8, scope: !8696)
!8709 = !DILocation(line: 198, column: 12, scope: !8696)
!8710 = !DILocation(line: 199, column: 21, scope: !8696)
!8711 = !DILocation(line: 199, column: 10, scope: !8696)
!8712 = !DILocation(line: 200, column: 7, scope: !8696)
!8713 = !DILocation(line: 202, column: 2, scope: !8696)
!8714 = !DILocation(line: 203, column: 1, scope: !8696)
!8715 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !847, file: !847, line: 205, type: !885, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8716)
!8716 = !{!8717, !8718, !8719, !8720, !8721}
!8717 = !DILocalVariable(name: "dev", arg: 1, scope: !8715, file: !847, line: 205, type: !876)
!8718 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8715, file: !847, line: 206, type: !887)
!8719 = !DILocalVariable(name: "pclken", scope: !8715, file: !847, line: 208, type: !837)
!8720 = !DILocalVariable(name: "reg", scope: !8715, file: !847, line: 209, type: !1598)
!8721 = !DILocalVariable(name: "reg_val", scope: !8715, file: !847, line: 210, type: !121)
!8722 = !DILocation(line: 0, scope: !8715)
!8723 = !DILocation(line: 214, column: 6, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8715, file: !847, line: 214, column: 6)
!8725 = !DILocation(line: 214, column: 6, scope: !8715)
!8726 = !DILocation(line: 219, column: 52, scope: !8715)
!8727 = !DILocation(line: 219, column: 8, scope: !8715)
!8728 = !DILocation(line: 220, column: 12, scope: !8715)
!8729 = !DILocation(line: 221, column: 22, scope: !8715)
!8730 = !DILocation(line: 221, column: 13, scope: !8715)
!8731 = !DILocation(line: 221, column: 10, scope: !8715)
!8732 = !DILocation(line: 222, column: 7, scope: !8715)
!8733 = !DILocation(line: 224, column: 2, scope: !8715)
!8734 = !DILocation(line: 225, column: 1, scope: !8715)
!8735 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !847, file: !847, line: 262, type: !901, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8736)
!8736 = !{!8737, !8738, !8739, !8740, !8741, !8742, !8743, !8744}
!8737 = !DILocalVariable(name: "clock", arg: 1, scope: !8735, file: !847, line: 262, type: !876)
!8738 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8735, file: !847, line: 263, type: !887)
!8739 = !DILocalVariable(name: "rate", arg: 3, scope: !8735, file: !847, line: 264, type: !843)
!8740 = !DILocalVariable(name: "pclken", scope: !8735, file: !847, line: 266, type: !837)
!8741 = !DILocalVariable(name: "ahb_clock", scope: !8735, file: !847, line: 273, type: !121)
!8742 = !DILocalVariable(name: "apb1_clock", scope: !8735, file: !847, line: 274, type: !121)
!8743 = !DILocalVariable(name: "apb2_clock", scope: !8735, file: !847, line: 276, type: !121)
!8744 = !DILocalVariable(name: "ahb3_clock", scope: !8735, file: !847, line: 286, type: !121)
!8745 = !DILocation(line: 0, scope: !8735)
!8746 = !DILocation(line: 273, column: 23, scope: !8735)
!8747 = !DILocation(line: 274, column: 24, scope: !8735)
!8748 = !DILocation(line: 299, column: 18, scope: !8735)
!8749 = !DILocation(line: 299, column: 2, scope: !8735)
!8750 = !DILocation(line: 319, column: 3, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8735, file: !847, line: 299, column: 23)
!8752 = !DILocation(line: 323, column: 3, scope: !8751)
!8753 = !DILocation(line: 346, column: 33, scope: !8751)
!8754 = !DILocation(line: 346, column: 11, scope: !8751)
!8755 = !DILocation(line: 350, column: 3, scope: !8751)
!8756 = !DILocation(line: 354, column: 33, scope: !8751)
!8757 = !DILocation(line: 354, column: 11, scope: !8751)
!8758 = !DILocation(line: 358, column: 3, scope: !8751)
!8759 = !DILocation(line: 374, column: 3, scope: !8751)
!8760 = !DILocation(line: 379, column: 3, scope: !8751)
!8761 = !DILocation(line: 0, scope: !8751)
!8762 = !DILocation(line: 396, column: 1, scope: !8735)
!8763 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !847, file: !847, line: 227, type: !917, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8764)
!8764 = !{!8765, !8766, !8767, !8768, !8769, !8770, !8771, !8772}
!8765 = !DILocalVariable(name: "dev", arg: 1, scope: !8763, file: !847, line: 227, type: !876)
!8766 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8763, file: !847, line: 228, type: !887)
!8767 = !DILocalVariable(name: "data", arg: 3, scope: !8763, file: !847, line: 229, type: !102)
!8768 = !DILocalVariable(name: "pclken", scope: !8763, file: !847, line: 233, type: !837)
!8769 = !DILocalVariable(name: "reg", scope: !8763, file: !847, line: 234, type: !1598)
!8770 = !DILocalVariable(name: "reg_val", scope: !8763, file: !847, line: 235, type: !121)
!8771 = !DILocalVariable(name: "dt_val", scope: !8763, file: !847, line: 235, type: !121)
!8772 = !DILocalVariable(name: "err", scope: !8763, file: !847, line: 236, type: !103)
!8773 = !DILocation(line: 0, scope: !8763)
!8774 = !DILocation(line: 241, column: 30, scope: !8763)
!8775 = !DILocation(line: 241, column: 8, scope: !8763)
!8776 = !DILocation(line: 242, column: 10, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8763, file: !847, line: 242, column: 6)
!8778 = !DILocation(line: 242, column: 6, scope: !8763)
!8779 = !DILocation(line: 247, column: 11, scope: !8763)
!8780 = !DILocation(line: 248, column: 6, scope: !8763)
!8781 = !DILocation(line: 247, column: 44, scope: !8763)
!8782 = !DILocation(line: 250, column: 6, scope: !8763)
!8783 = !DILocation(line: 249, column: 52, scope: !8763)
!8784 = !DILocation(line: 249, column: 8, scope: !8763)
!8785 = !DILocation(line: 251, column: 12, scope: !8763)
!8786 = !DILocation(line: 252, column: 10, scope: !8763)
!8787 = !DILocation(line: 253, column: 7, scope: !8763)
!8788 = !DILocation(line: 255, column: 2, scope: !8763)
!8789 = !DILocation(line: 260, column: 1, scope: !8763)
!8790 = distinct !DISubprogram(name: "enabled_clock", scope: !847, file: !847, line: 100, type: !8791, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8793)
!8791 = !DISubroutineType(types: !8792)
!8792 = !{!103, !121}
!8793 = !{!8794, !8795}
!8794 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8790, file: !847, line: 100, type: !121)
!8795 = !DILocalVariable(name: "r", scope: !8790, file: !847, line: 102, type: !103)
!8796 = !DILocation(line: 0, scope: !8790)
!8797 = !DILocation(line: 104, column: 2, scope: !8790)
!8798 = !DILocation(line: 180, column: 2, scope: !8790)
!8799 = !DILocation(line: 181, column: 1, scope: !8790)
!8800 = distinct !DISubprogram(name: "get_bus_clock", scope: !847, file: !847, line: 79, type: !8801, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8803)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{!121, !121, !121}
!8803 = !{!8804, !8805}
!8804 = !DILocalVariable(name: "clock", arg: 1, scope: !8800, file: !847, line: 79, type: !121)
!8805 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8800, file: !847, line: 79, type: !121)
!8806 = !DILocation(line: 0, scope: !8800)
!8807 = !DILocation(line: 81, column: 15, scope: !8800)
!8808 = !DILocation(line: 81, column: 2, scope: !8800)
!8809 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !847, file: !847, line: 68, type: !8810, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8812)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!121, !121, !103, !103, !103}
!8812 = !{!8813, !8814, !8815, !8816}
!8813 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8809, file: !847, line: 68, type: !121)
!8814 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8809, file: !847, line: 69, type: !103)
!8815 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8809, file: !847, line: 70, type: !103)
!8816 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8809, file: !847, line: 71, type: !103)
!8817 = !DILocation(line: 0, scope: !8809)
!8818 = !DILocation(line: 75, column: 22, scope: !8809)
!8819 = !DILocation(line: 76, column: 13, scope: !8809)
!8820 = !DILocation(line: 75, column: 34, scope: !8809)
!8821 = !DILocation(line: 75, column: 2, scope: !8809)
!8822 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !847, file: !847, line: 641, type: !874, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8823)
!8823 = !{!8824, !8825, !8826}
!8824 = !DILocalVariable(name: "dev", arg: 1, scope: !8822, file: !847, line: 641, type: !876)
!8825 = !DILocalVariable(name: "old_flash_freq", scope: !8822, file: !847, line: 664, type: !121)
!8826 = !DILocalVariable(name: "new_flash_freq", scope: !8822, file: !847, line: 665, type: !121)
!8827 = !DILocation(line: 0, scope: !8822)
!8828 = !DILocation(line: 646, column: 2, scope: !8822)
!8829 = !DILocation(line: 667, column: 19, scope: !8822)
!8830 = !DILocation(line: 674, column: 21, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8822, file: !847, line: 674, column: 6)
!8832 = !DILocation(line: 674, column: 6, scope: !8822)
!8833 = !DILocation(line: 675, column: 3, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8831, file: !847, line: 674, column: 59)
!8835 = !DILocation(line: 676, column: 2, scope: !8834)
!8836 = !DILocation(line: 680, column: 2, scope: !8822)
!8837 = !DILocation(line: 683, column: 2, scope: !8822)
!8838 = !DILocation(line: 690, column: 3, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !847, line: 689, column: 9)
!8840 = distinct !DILexicalBlock(scope: !8822, file: !847, line: 685, column: 6)
!8841 = !DILocation(line: 695, column: 2, scope: !8822)
!8842 = !DILocation(line: 696, column: 2, scope: !8822)
!8843 = !DILocation(line: 696, column: 9, scope: !8822)
!8844 = !DILocation(line: 696, column: 34, scope: !8822)
!8845 = distinct !{!8845, !8842, !8846}
!8846 = !DILocation(line: 697, column: 2, scope: !8822)
!8847 = !DILocation(line: 720, column: 21, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8822, file: !847, line: 720, column: 6)
!8849 = !DILocation(line: 720, column: 6, scope: !8822)
!8850 = !DILocation(line: 721, column: 3, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8848, file: !847, line: 720, column: 60)
!8852 = !DILocation(line: 722, column: 2, scope: !8851)
!8853 = !DILocation(line: 725, column: 18, scope: !8822)
!8854 = !DILocation(line: 728, column: 2, scope: !8822)
!8855 = !DILocation(line: 730, column: 2, scope: !8822)
!8856 = !DILocation(line: 745, column: 2, scope: !8822)
!8857 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8858, file: !8858, line: 3275, type: !6906, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8858 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8859 = !DILocation(line: 3277, column: 21, scope: !8857)
!8860 = !DILocation(line: 3277, column: 3, scope: !8857)
!8861 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !847, file: !847, line: 507, type: !3237, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8862 = !DILocation(line: 516, column: 4, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !847, line: 515, column: 10)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !847, line: 513, column: 7)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !847, line: 510, column: 37)
!8866 = distinct !DILexicalBlock(scope: !8861, file: !847, line: 510, column: 6)
!8867 = !DILocation(line: 526, column: 3, scope: !8865)
!8868 = !DILocation(line: 527, column: 3, scope: !8865)
!8869 = !DILocation(line: 527, column: 10, scope: !8865)
!8870 = !DILocation(line: 527, column: 31, scope: !8865)
!8871 = distinct !{!8871, !8868, !8872}
!8872 = !DILocation(line: 529, column: 3, scope: !8865)
!8873 = !DILocation(line: 583, column: 3, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8875, file: !847, line: 577, column: 37)
!8875 = distinct !DILexicalBlock(scope: !8861, file: !847, line: 577, column: 6)
!8876 = !DILocation(line: 584, column: 3, scope: !8874)
!8877 = !DILocation(line: 584, column: 10, scope: !8874)
!8878 = !DILocation(line: 584, column: 31, scope: !8874)
!8879 = distinct !{!8879, !8876, !8880}
!8880 = !DILocation(line: 585, column: 3, scope: !8874)
!8881 = !DILocation(line: 627, column: 1, scope: !8861)
!8882 = distinct !DISubprogram(name: "set_up_plls", scope: !847, file: !847, line: 448, type: !3237, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8883 = !DILocation(line: 460, column: 6, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8882, file: !847, line: 460, column: 6)
!8885 = !DILocation(line: 460, column: 31, scope: !8884)
!8886 = !DILocation(line: 460, column: 6, scope: !8882)
!8887 = !DILocation(line: 461, column: 3, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8884, file: !847, line: 460, column: 67)
!8889 = !DILocation(line: 462, column: 3, scope: !8888)
!8890 = !DILocation(line: 463, column: 2, scope: !8888)
!8891 = !DILocation(line: 464, column: 2, scope: !8882)
!8892 = !DILocation(line: 488, column: 2, scope: !8882)
!8893 = !DILocation(line: 492, column: 2, scope: !8882)
!8894 = !DILocation(line: 496, column: 2, scope: !8882)
!8895 = !DILocation(line: 499, column: 2, scope: !8882)
!8896 = !DILocation(line: 500, column: 2, scope: !8882)
!8897 = !DILocation(line: 500, column: 9, scope: !8882)
!8898 = !DILocation(line: 500, column: 30, scope: !8882)
!8899 = distinct !{!8899, !8896, !8900}
!8900 = !DILocation(line: 502, column: 2, scope: !8882)
!8901 = !DILocation(line: 505, column: 1, scope: !8882)
!8902 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8858, file: !8858, line: 3224, type: !6916, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8903)
!8903 = !{!8904}
!8904 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8902, file: !8858, line: 3224, type: !121)
!8905 = !DILocation(line: 0, scope: !8902)
!8906 = !DILocation(line: 3226, column: 3, scope: !8902)
!8907 = !DILocation(line: 3227, column: 1, scope: !8902)
!8908 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8858, file: !8858, line: 3188, type: !6916, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8909)
!8909 = !{!8910}
!8910 = !DILocalVariable(name: "Source", arg: 1, scope: !8908, file: !8858, line: 3188, type: !121)
!8911 = !DILocation(line: 0, scope: !8908)
!8912 = !DILocation(line: 3190, column: 3, scope: !8908)
!8913 = !DILocation(line: 3191, column: 1, scope: !8908)
!8914 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8858, file: !8858, line: 3204, type: !6906, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8915 = !DILocation(line: 3206, column: 21, scope: !8914)
!8916 = !DILocation(line: 3206, column: 3, scope: !8914)
!8917 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8858, file: !8858, line: 3240, type: !6916, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8918)
!8918 = !{!8919}
!8919 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8917, file: !8858, line: 3240, type: !121)
!8920 = !DILocation(line: 0, scope: !8917)
!8921 = !DILocation(line: 3242, column: 3, scope: !8917)
!8922 = !DILocation(line: 3243, column: 1, scope: !8917)
!8923 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8858, file: !8858, line: 3256, type: !6916, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !8924)
!8924 = !{!8925}
!8925 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8923, file: !8858, line: 3256, type: !121)
!8926 = !DILocation(line: 0, scope: !8923)
!8927 = !DILocation(line: 3258, column: 3, scope: !8923)
!8928 = !DILocation(line: 3259, column: 1, scope: !8923)
!8929 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !847, file: !847, line: 409, type: !3237, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8930 = !DILocation(line: 412, column: 6, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8929, file: !847, line: 412, column: 6)
!8932 = !DILocation(line: 412, column: 27, scope: !8931)
!8933 = !DILocation(line: 412, column: 6, scope: !8929)
!8934 = !DILocation(line: 414, column: 3, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8931, file: !847, line: 412, column: 33)
!8936 = !DILocation(line: 415, column: 3, scope: !8935)
!8937 = !DILocation(line: 415, column: 10, scope: !8935)
!8938 = !DILocation(line: 415, column: 31, scope: !8935)
!8939 = distinct !{!8939, !8936, !8940}
!8940 = !DILocation(line: 417, column: 3, scope: !8935)
!8941 = !DILocation(line: 421, column: 2, scope: !8929)
!8942 = !DILocation(line: 422, column: 2, scope: !8929)
!8943 = !DILocation(line: 422, column: 9, scope: !8929)
!8944 = !DILocation(line: 422, column: 34, scope: !8929)
!8945 = distinct !{!8945, !8942, !8946}
!8946 = !DILocation(line: 423, column: 2, scope: !8929)
!8947 = !DILocation(line: 424, column: 1, scope: !8929)
!8948 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8858, file: !8858, line: 4195, type: !3237, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8949 = !DILocation(line: 4197, column: 3, scope: !8948)
!8950 = !DILocation(line: 4198, column: 1, scope: !8948)
!8951 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8858, file: !8858, line: 4184, type: !3237, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8952 = !DILocation(line: 4186, column: 3, scope: !8951)
!8953 = !DILocation(line: 4187, column: 1, scope: !8951)
!8954 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8858, file: !8858, line: 4205, type: !6906, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8955 = !DILocation(line: 4207, column: 11, scope: !8954)
!8956 = !DILocation(line: 4207, column: 44, scope: !8954)
!8957 = !DILocation(line: 4207, column: 3, scope: !8954)
!8958 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8858, file: !8858, line: 3007, type: !6906, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8959 = !DILocation(line: 3009, column: 11, scope: !8958)
!8960 = !DILocation(line: 3009, column: 44, scope: !8958)
!8961 = !DILocation(line: 3009, column: 3, scope: !8958)
!8962 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8858, file: !8858, line: 2987, type: !3237, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8963 = !DILocation(line: 2989, column: 3, scope: !8962)
!8964 = !DILocation(line: 2990, column: 1, scope: !8962)
!8965 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8858, file: !8858, line: 2939, type: !3237, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8966 = !DILocation(line: 2941, column: 3, scope: !8965)
!8967 = !DILocation(line: 2942, column: 1, scope: !8965)
!8968 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8858, file: !8858, line: 2949, type: !3237, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8969 = !DILocation(line: 2951, column: 3, scope: !8968)
!8970 = !DILocation(line: 2952, column: 1, scope: !8968)
!8971 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8858, file: !8858, line: 2969, type: !6906, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8972 = !DILocation(line: 2971, column: 11, scope: !8971)
!8973 = !DILocation(line: 2971, column: 44, scope: !8971)
!8974 = !DILocation(line: 2971, column: 3, scope: !8971)
!8975 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8858, file: !8858, line: 3143, type: !3237, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8976 = !DILocation(line: 3145, column: 3, scope: !8975)
!8977 = !DILocation(line: 3146, column: 1, scope: !8975)
!8978 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8858, file: !8858, line: 3163, type: !6906, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !461)
!8979 = !DILocation(line: 3165, column: 11, scope: !8978)
!8980 = !DILocation(line: 3165, column: 46, scope: !8978)
!8981 = !DILocation(line: 3165, column: 3, scope: !8978)
!8982 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8983, file: !8983, line: 40, type: !6906, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !461)
!8983 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8984 = !DILocation(line: 45, column: 3, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !8983, line: 44, column: 44)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !8983, line: 44, column: 13)
!8987 = distinct !DILexicalBlock(scope: !8982, file: !8983, line: 42, column: 6)
!8988 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8983, file: !8983, line: 56, type: !3237, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !461)
!8989 = !DILocation(line: 58, column: 2, scope: !8988)
!8990 = !DILocation(line: 62, column: 1, scope: !8988)
!8991 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8858, file: !8858, line: 4304, type: !8992, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !8994)
!8992 = !DISubroutineType(types: !8993)
!8993 = !{null, !121, !121, !121, !121}
!8994 = !{!8995, !8996, !8997, !8998}
!8995 = !DILocalVariable(name: "Source", arg: 1, scope: !8991, file: !8858, line: 4304, type: !121)
!8996 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8991, file: !8858, line: 4304, type: !121)
!8997 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8991, file: !8858, line: 4304, type: !121)
!8998 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8991, file: !8858, line: 4304, type: !121)
!8999 = !DILocation(line: 0, scope: !8991)
!9000 = !DILocation(line: 4306, column: 3, scope: !8991)
!9001 = !DILocation(line: 4308, column: 3, scope: !8991)
!9002 = !DILocation(line: 4312, column: 1, scope: !8991)
!9003 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8983, file: !8983, line: 69, type: !3237, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !461)
!9004 = !DILocation(line: 72, column: 2, scope: !9003)
!9005 = !DILocation(line: 73, column: 1, scope: !9003)
!9006 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9007, file: !9007, line: 1185, type: !6916, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !9008)
!9007 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9008 = !{!9009, !9010}
!9009 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9006, file: !9007, line: 1185, type: !121)
!9010 = !DILocalVariable(name: "tmpreg", scope: !9006, file: !9007, line: 1187, type: !120)
!9011 = !DILocation(line: 0, scope: !9006)
!9012 = !DILocation(line: 1187, column: 3, scope: !9006)
!9013 = !DILocation(line: 1187, column: 17, scope: !9006)
!9014 = !DILocation(line: 1188, column: 3, scope: !9006)
!9015 = !DILocation(line: 1190, column: 12, scope: !9006)
!9016 = !DILocation(line: 1190, column: 10, scope: !9006)
!9017 = !DILocation(line: 1191, column: 9, scope: !9006)
!9018 = !DILocation(line: 1192, column: 1, scope: !9006)
!9019 = distinct !DISubprogram(name: "uart_console_init", scope: !925, file: !925, line: 588, type: !962, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9020)
!9020 = !{!9021}
!9021 = !DILocalVariable(name: "arg", arg: 1, scope: !9019, file: !925, line: 588, type: !941)
!9022 = !DILocation(line: 0, scope: !9019)
!9023 = !DILocation(line: 593, column: 7, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9019, file: !925, line: 593, column: 6)
!9025 = !DILocation(line: 593, column: 6, scope: !9019)
!9026 = !DILocation(line: 597, column: 2, scope: !9019)
!9027 = !DILocation(line: 599, column: 2, scope: !9019)
!9028 = !DILocation(line: 600, column: 1, scope: !9019)
!9029 = distinct !DISubprogram(name: "device_is_ready", scope: !6666, file: !6666, line: 47, type: !9030, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9032)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!157, !941}
!9032 = !{!9033}
!9033 = !DILocalVariable(name: "dev", arg: 1, scope: !9029, file: !6666, line: 47, type: !941)
!9034 = !DILocation(line: 0, scope: !9029)
!9035 = !DILocation(line: 55, column: 2, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9029, file: !6666, line: 55, column: 2)
!9037 = !{i64 2154951742}
!9038 = !DILocation(line: 56, column: 9, scope: !9029)
!9039 = !DILocation(line: 56, column: 2, scope: !9029)
!9040 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !925, file: !925, line: 573, type: !3237, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !461)
!9041 = !DILocation(line: 576, column: 2, scope: !9040)
!9042 = !DILocation(line: 579, column: 2, scope: !9040)
!9043 = !DILocation(line: 581, column: 1, scope: !9040)
!9044 = distinct !DISubprogram(name: "console_out", scope: !925, file: !925, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9045)
!9045 = !{!9046, !9047}
!9046 = !DILocalVariable(name: "c", arg: 1, scope: !9044, file: !925, line: 77, type: !103)
!9047 = !DILocalVariable(name: "handled_by_debug_server", scope: !9044, file: !925, line: 81, type: !103)
!9048 = !DILocation(line: 0, scope: !9044)
!9049 = !DILocation(line: 81, column: 32, scope: !9044)
!9050 = !DILocation(line: 83, column: 6, scope: !9044)
!9051 = !DILocation(line: 89, column: 11, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9044, file: !925, line: 89, column: 6)
!9053 = !DILocation(line: 89, column: 6, scope: !9044)
!9054 = !DILocation(line: 90, column: 3, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9052, file: !925, line: 89, column: 17)
!9056 = !DILocation(line: 91, column: 2, scope: !9055)
!9057 = !DILocation(line: 92, column: 2, scope: !9044)
!9058 = !DILocation(line: 94, column: 2, scope: !9044)
!9059 = !DILocation(line: 95, column: 1, scope: !9044)
!9060 = distinct !DISubprogram(name: "uart_poll_out", scope: !5927, file: !5927, line: 95, type: !958, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9061)
!9061 = !{!9062, !9063}
!9062 = !DILocalVariable(name: "dev", arg: 1, scope: !9060, file: !5927, line: 95, type: !941)
!9063 = !DILocalVariable(name: "out_char", arg: 2, scope: !9060, file: !5927, line: 95, type: !155)
!9064 = !DILocation(line: 0, scope: !9060)
!9065 = !DILocation(line: 105, column: 2, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9060, file: !5927, line: 105, column: 2)
!9067 = !{i64 2155034987}
!9068 = !DILocation(line: 106, column: 2, scope: !9060)
!9069 = !DILocation(line: 107, column: 1, scope: !9060)
!9070 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !203, file: !203, line: 574, type: !958, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9071)
!9071 = !{!9072, !9073, !9074}
!9072 = !DILocalVariable(name: "dev", arg: 1, scope: !9070, file: !203, line: 574, type: !941)
!9073 = !DILocalVariable(name: "out_char", arg: 2, scope: !9070, file: !203, line: 575, type: !155)
!9074 = !DILocalVariable(name: "api", scope: !9070, file: !203, line: 577, type: !933)
!9075 = !DILocation(line: 0, scope: !9070)
!9076 = !DILocation(line: 578, column: 40, scope: !9070)
!9077 = !DILocation(line: 580, column: 7, scope: !9070)
!9078 = !DILocation(line: 580, column: 2, scope: !9070)
!9079 = !DILocation(line: 581, column: 1, scope: !9070)
!9080 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !925, file: !925, line: 49, type: !1075, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9081)
!9081 = !{!9082}
!9082 = !DILocalVariable(name: "c", arg: 1, scope: !9080, file: !925, line: 49, type: !146)
!9083 = !DILocation(line: 0, scope: !9080)
!9084 = !DILocation(line: 51, column: 2, scope: !9080)
!9085 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9030, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9086)
!9086 = !{!9087}
!9087 = !DILocalVariable(name: "dev", arg: 1, scope: !9085, file: !141, line: 730, type: !941)
!9088 = !DILocation(line: 0, scope: !9085)
!9089 = !DILocation(line: 732, column: 9, scope: !9085)
!9090 = !DILocation(line: 732, column: 2, scope: !9085)
!9091 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !925, file: !925, line: 44, type: !9092, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9094)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{null, !1117}
!9094 = !{!9095}
!9095 = !DILocalVariable(name: "hook", arg: 1, scope: !9091, file: !925, line: 44, type: !1117)
!9096 = !DILocation(line: 0, scope: !9091)
!9097 = !DILocation(line: 46, column: 16, scope: !9091)
!9098 = !DILocation(line: 47, column: 1, scope: !9091)
!9099 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !925, file: !925, line: 55, type: !9100, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9102)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{null, !1072}
!9102 = !{!9103}
!9103 = !DILocalVariable(name: "hook", arg: 1, scope: !9099, file: !925, line: 55, type: !1072)
!9104 = !DILocation(line: 0, scope: !9099)
!9105 = !DILocation(line: 57, column: 17, scope: !9099)
!9106 = !DILocation(line: 58, column: 1, scope: !9099)
!9107 = distinct !DISubprogram(name: "uart_register_input", scope: !925, file: !925, line: 549, type: !9108, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9110)
!9108 = !DISubroutineType(types: !9109)
!9109 = !{null, !1022, !1022, !1066}
!9110 = !{!9111, !9112, !9113}
!9111 = !DILocalVariable(name: "avail", arg: 1, scope: !9107, file: !925, line: 549, type: !1022)
!9112 = !DILocalVariable(name: "lines", arg: 2, scope: !9107, file: !925, line: 549, type: !1022)
!9113 = !DILocalVariable(name: "completion", arg: 3, scope: !9107, file: !925, line: 550, type: !1066)
!9114 = !DILocation(line: 0, scope: !9107)
!9115 = !DILocation(line: 552, column: 14, scope: !9107)
!9116 = !DILocation(line: 553, column: 14, scope: !9107)
!9117 = !DILocation(line: 554, column: 16, scope: !9107)
!9118 = !DILocation(line: 556, column: 2, scope: !9107)
!9119 = !DILocation(line: 557, column: 1, scope: !9107)
!9120 = distinct !DISubprogram(name: "console_input_init", scope: !925, file: !925, line: 532, type: !3237, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9121)
!9121 = !{!9122}
!9122 = !DILocalVariable(name: "c", scope: !9120, file: !925, line: 534, type: !154)
!9123 = !DILocation(line: 534, column: 2, scope: !9120)
!9124 = !DILocation(line: 536, column: 2, scope: !9120)
!9125 = !DILocation(line: 537, column: 2, scope: !9120)
!9126 = !DILocation(line: 539, column: 2, scope: !9120)
!9127 = !DILocation(line: 542, column: 9, scope: !9120)
!9128 = !DILocation(line: 542, column: 2, scope: !9120)
!9129 = !DILocation(line: 0, scope: !9120)
!9130 = !DILocation(line: 543, column: 3, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9120, file: !925, line: 542, column: 46)
!9132 = distinct !{!9132, !9128, !9133}
!9133 = !DILocation(line: 544, column: 2, scope: !9120)
!9134 = !DILocation(line: 546, column: 2, scope: !9120)
!9135 = !DILocation(line: 547, column: 1, scope: !9120)
!9136 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5927, file: !5927, line: 265, type: !992, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9137)
!9137 = !{!9138}
!9138 = !DILocalVariable(name: "dev", arg: 1, scope: !9136, file: !5927, line: 265, type: !941)
!9139 = !DILocation(line: 0, scope: !9136)
!9140 = !DILocation(line: 274, column: 2, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9136, file: !5927, line: 274, column: 2)
!9142 = !{i64 2155035463}
!9143 = !DILocation(line: 275, column: 2, scope: !9136)
!9144 = !DILocation(line: 276, column: 1, scope: !9136)
!9145 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5927, file: !5927, line: 217, type: !992, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9146)
!9146 = !{!9147}
!9147 = !DILocalVariable(name: "dev", arg: 1, scope: !9145, file: !5927, line: 217, type: !941)
!9148 = !DILocation(line: 0, scope: !9145)
!9149 = !DILocation(line: 226, column: 2, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9145, file: !5927, line: 226, column: 2)
!9151 = !{i64 2155035327}
!9152 = !DILocation(line: 227, column: 2, scope: !9145)
!9153 = !DILocation(line: 228, column: 1, scope: !9145)
!9154 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !203, file: !203, line: 1190, type: !9155, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9157)
!9155 = !DISubroutineType(types: !9156)
!9156 = !{null, !941, !1008}
!9157 = !{!9158, !9159}
!9158 = !DILocalVariable(name: "dev", arg: 1, scope: !9154, file: !203, line: 1190, type: !941)
!9159 = !DILocalVariable(name: "cb", arg: 2, scope: !9154, file: !203, line: 1191, type: !1008)
!9160 = !DILocation(line: 0, scope: !9154)
!9161 = !DILocation(line: 1193, column: 2, scope: !9154)
!9162 = !DILocation(line: 1194, column: 1, scope: !9154)
!9163 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !203, file: !203, line: 1024, type: !962, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9164)
!9164 = !{!9165, !9166}
!9165 = !DILocalVariable(name: "dev", arg: 1, scope: !9163, file: !203, line: 1024, type: !941)
!9166 = !DILocalVariable(name: "api", scope: !9163, file: !203, line: 1027, type: !933)
!9167 = !DILocation(line: 0, scope: !9163)
!9168 = !DILocation(line: 1028, column: 40, scope: !9163)
!9169 = !DILocation(line: 1030, column: 11, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9163, file: !203, line: 1030, column: 6)
!9171 = !DILocation(line: 1030, column: 24, scope: !9170)
!9172 = !DILocation(line: 1030, column: 6, scope: !9163)
!9173 = !DILocation(line: 1033, column: 9, scope: !9163)
!9174 = !DILocation(line: 1033, column: 2, scope: !9163)
!9175 = !DILocation(line: 1038, column: 1, scope: !9163)
!9176 = distinct !DISubprogram(name: "uart_fifo_read", scope: !203, file: !203, line: 785, type: !988, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9177)
!9177 = !{!9178, !9179, !9180, !9181}
!9178 = !DILocalVariable(name: "dev", arg: 1, scope: !9176, file: !203, line: 785, type: !941)
!9179 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9176, file: !203, line: 785, type: !261)
!9180 = !DILocalVariable(name: "size", arg: 3, scope: !9176, file: !203, line: 786, type: !262)
!9181 = !DILocalVariable(name: "api", scope: !9176, file: !203, line: 789, type: !933)
!9182 = !DILocation(line: 0, scope: !9176)
!9183 = !DILocation(line: 790, column: 40, scope: !9176)
!9184 = !DILocation(line: 792, column: 11, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9176, file: !203, line: 792, column: 6)
!9186 = !DILocation(line: 792, column: 21, scope: !9185)
!9187 = !DILocation(line: 792, column: 6, scope: !9176)
!9188 = !DILocation(line: 796, column: 9, scope: !9176)
!9189 = !DILocation(line: 796, column: 2, scope: !9176)
!9190 = !DILocation(line: 803, column: 1, scope: !9176)
!9191 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5927, file: !5927, line: 241, type: !992, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9192)
!9192 = !{!9193}
!9193 = !DILocalVariable(name: "dev", arg: 1, scope: !9191, file: !5927, line: 241, type: !941)
!9194 = !DILocation(line: 0, scope: !9191)
!9195 = !DILocation(line: 250, column: 2, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9191, file: !5927, line: 250, column: 2)
!9197 = !{i64 2155035395}
!9198 = !DILocation(line: 251, column: 2, scope: !9191)
!9199 = !DILocation(line: 252, column: 1, scope: !9191)
!9200 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !203, file: !203, line: 934, type: !992, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9201)
!9201 = !{!9202, !9203}
!9202 = !DILocalVariable(name: "dev", arg: 1, scope: !9200, file: !203, line: 934, type: !941)
!9203 = !DILocalVariable(name: "api", scope: !9200, file: !203, line: 937, type: !933)
!9204 = !DILocation(line: 0, scope: !9200)
!9205 = !DILocation(line: 938, column: 40, scope: !9200)
!9206 = !DILocation(line: 940, column: 11, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9200, file: !203, line: 940, column: 6)
!9208 = !DILocation(line: 940, column: 25, scope: !9207)
!9209 = !DILocation(line: 940, column: 6, scope: !9200)
!9210 = !DILocation(line: 941, column: 3, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9207, file: !203, line: 940, column: 34)
!9212 = !DILocation(line: 942, column: 2, scope: !9211)
!9213 = !DILocation(line: 946, column: 1, scope: !9200)
!9214 = !DILocation(line: 0, scope: !1082)
!9215 = !DILocation(line: 433, column: 9, scope: !1082)
!9216 = !DILocation(line: 433, column: 43, scope: !1082)
!9217 = !DILocation(line: 434, column: 9, scope: !1082)
!9218 = !DILocation(line: 433, column: 2, scope: !1082)
!9219 = !DILocation(line: 436, column: 3, scope: !1087)
!9220 = !DILocation(line: 439, column: 8, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !1087, file: !925, line: 439, column: 7)
!9222 = !DILocation(line: 439, column: 7, scope: !1087)
!9223 = distinct !{!9223, !9218, !9224}
!9224 = !DILocation(line: 529, column: 2, scope: !1082)
!9225 = !DILocation(line: 0, scope: !1087)
!9226 = !DILocation(line: 445, column: 8, scope: !1087)
!9227 = !DILocation(line: 446, column: 10, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !1087, file: !925, line: 446, column: 7)
!9229 = !DILocation(line: 446, column: 7, scope: !1087)
!9230 = !DILocation(line: 451, column: 7, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !1087, file: !925, line: 451, column: 7)
!9232 = !DILocation(line: 451, column: 21, scope: !9231)
!9233 = !DILocation(line: 451, column: 29, scope: !9231)
!9234 = !DILocation(line: 451, column: 46, scope: !9231)
!9235 = !DILocation(line: 451, column: 32, scope: !9231)
!9236 = !DILocation(line: 451, column: 52, scope: !9231)
!9237 = !DILocation(line: 451, column: 7, scope: !1087)
!9238 = !DILocation(line: 460, column: 8, scope: !1092)
!9239 = !DILocation(line: 460, column: 7, scope: !1087)
!9240 = !DILocation(line: 461, column: 10, scope: !1090)
!9241 = !DILocation(line: 0, scope: !1090)
!9242 = !DILocation(line: 461, column: 8, scope: !1091)
!9243 = !DILocation(line: 462, column: 9, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !1091, file: !925, line: 462, column: 8)
!9245 = !DILocation(line: 462, column: 8, scope: !1091)
!9246 = !DILocation(line: 477, column: 7, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !1087, file: !925, line: 477, column: 7)
!9248 = !DILocation(line: 477, column: 7, scope: !1087)
!9249 = !DILocation(line: 478, column: 16, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9247, file: !925, line: 477, column: 46)
!9251 = !DILocation(line: 478, column: 22, scope: !9250)
!9252 = !DILocation(line: 478, column: 4, scope: !9250)
!9253 = !DILocation(line: 479, column: 4, scope: !9250)
!9254 = !DILocation(line: 483, column: 7, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !1087, file: !925, line: 483, column: 7)
!9256 = !DILocation(line: 483, column: 7, scope: !1087)
!9257 = !DILocation(line: 484, column: 13, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !925, line: 484, column: 8)
!9259 = distinct !DILexicalBlock(scope: !9255, file: !925, line: 483, column: 55)
!9260 = !DILocation(line: 484, column: 8, scope: !9259)
!9261 = !DILocation(line: 485, column: 5, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !925, line: 484, column: 26)
!9263 = !DILocation(line: 486, column: 5, scope: !9262)
!9264 = !DILocation(line: 487, column: 4, scope: !9262)
!9265 = !DILocation(line: 493, column: 16, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !1087, file: !925, line: 493, column: 7)
!9267 = !DILocation(line: 493, column: 8, scope: !9266)
!9268 = !DILocation(line: 493, column: 7, scope: !1087)
!9269 = !DILocation(line: 494, column: 4, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9266, file: !925, line: 493, column: 23)
!9271 = !DILocation(line: 497, column: 9, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !925, line: 497, column: 9)
!9273 = distinct !DILexicalBlock(scope: !9270, file: !925, line: 494, column: 18)
!9274 = !DILocation(line: 497, column: 13, scope: !9272)
!9275 = !DILocation(line: 497, column: 9, scope: !9273)
!9276 = !DILocation(line: 498, column: 16, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9272, file: !925, line: 497, column: 18)
!9278 = !DILocation(line: 498, column: 26, scope: !9277)
!9279 = !DILocation(line: 498, column: 34, scope: !9277)
!9280 = !DILocation(line: 498, column: 6, scope: !9277)
!9281 = !DILocation(line: 499, column: 5, scope: !9277)
!9282 = !DILocation(line: 502, column: 5, scope: !9273)
!9283 = !DILocation(line: 503, column: 5, scope: !9273)
!9284 = !DILocation(line: 505, column: 5, scope: !9273)
!9285 = !DILocation(line: 505, column: 15, scope: !9273)
!9286 = !DILocation(line: 505, column: 21, scope: !9273)
!9287 = !DILocation(line: 505, column: 19, scope: !9273)
!9288 = !DILocation(line: 505, column: 26, scope: !9273)
!9289 = !DILocation(line: 506, column: 5, scope: !9273)
!9290 = !DILocation(line: 507, column: 5, scope: !9273)
!9291 = !DILocation(line: 508, column: 9, scope: !9273)
!9292 = !DILocation(line: 509, column: 9, scope: !9273)
!9293 = !DILocation(line: 510, column: 5, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9273, file: !925, line: 510, column: 5)
!9295 = !DILocation(line: 511, column: 9, scope: !9273)
!9296 = !DILocation(line: 512, column: 5, scope: !9273)
!9297 = !DILocation(line: 514, column: 9, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9273, file: !925, line: 514, column: 9)
!9299 = !DILocation(line: 514, column: 23, scope: !9298)
!9300 = !DILocation(line: 515, column: 27, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9298, file: !925, line: 514, column: 32)
!9302 = !DILocation(line: 515, column: 38, scope: !9301)
!9303 = !DILocation(line: 515, column: 13, scope: !9301)
!9304 = !DILocation(line: 515, column: 10, scope: !9301)
!9305 = !DILocation(line: 516, column: 5, scope: !9301)
!9306 = !DILocation(line: 526, column: 7, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !1087, file: !925, line: 526, column: 7)
!9308 = !DILocation(line: 526, column: 13, scope: !9307)
!9309 = !DILocation(line: 526, column: 11, scope: !9307)
!9310 = !DILocation(line: 526, column: 17, scope: !9307)
!9311 = !DILocation(line: 526, column: 7, scope: !1087)
!9312 = !DILocation(line: 527, column: 17, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9307, file: !925, line: 526, column: 42)
!9314 = !DILocation(line: 527, column: 30, scope: !9313)
!9315 = !DILocation(line: 527, column: 4, scope: !9313)
!9316 = !DILocation(line: 528, column: 3, scope: !9313)
!9317 = !DILocation(line: 530, column: 1, scope: !1082)
!9318 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !203, file: !203, line: 1163, type: !1006, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9319)
!9319 = !{!9320, !9321, !9322, !9323}
!9320 = !DILocalVariable(name: "dev", arg: 1, scope: !9318, file: !203, line: 1163, type: !941)
!9321 = !DILocalVariable(name: "cb", arg: 2, scope: !9318, file: !203, line: 1164, type: !1008)
!9322 = !DILocalVariable(name: "user_data", arg: 3, scope: !9318, file: !203, line: 1165, type: !102)
!9323 = !DILocalVariable(name: "api", scope: !9318, file: !203, line: 1168, type: !933)
!9324 = !DILocation(line: 0, scope: !9318)
!9325 = !DILocation(line: 1169, column: 40, scope: !9318)
!9326 = !DILocation(line: 1171, column: 11, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9318, file: !203, line: 1171, column: 6)
!9328 = !DILocation(line: 1171, column: 20, scope: !9327)
!9329 = !DILocation(line: 1171, column: 29, scope: !9327)
!9330 = !DILocation(line: 1171, column: 46, scope: !9327)
!9331 = !DILocation(line: 1171, column: 6, scope: !9318)
!9332 = !DILocation(line: 1172, column: 3, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9327, file: !203, line: 1171, column: 56)
!9334 = !DILocation(line: 1173, column: 2, scope: !9333)
!9335 = !DILocation(line: 1179, column: 1, scope: !9318)
!9336 = distinct !DISubprogram(name: "uart_irq_update", scope: !5927, file: !5927, line: 360, type: !962, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9337)
!9337 = !{!9338}
!9338 = !DILocalVariable(name: "dev", arg: 1, scope: !9336, file: !5927, line: 360, type: !941)
!9339 = !DILocation(line: 0, scope: !9336)
!9340 = !DILocation(line: 368, column: 2, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9336, file: !5927, line: 368, column: 2)
!9342 = !{i64 2155035735}
!9343 = !DILocation(line: 369, column: 9, scope: !9336)
!9344 = !DILocation(line: 369, column: 2, scope: !9336)
!9345 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5927, file: !5927, line: 337, type: !962, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9346)
!9346 = !{!9347}
!9347 = !DILocalVariable(name: "dev", arg: 1, scope: !9345, file: !5927, line: 337, type: !941)
!9348 = !DILocation(line: 0, scope: !9345)
!9349 = !DILocation(line: 345, column: 2, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !5927, line: 345, column: 2)
!9351 = !{i64 2155035667}
!9352 = !DILocation(line: 346, column: 9, scope: !9345)
!9353 = !DILocation(line: 346, column: 2, scope: !9345)
!9354 = distinct !DISubprogram(name: "read_uart", scope: !925, file: !925, line: 127, type: !9355, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9357)
!9355 = !DISubroutineType(types: !9356)
!9356 = !{!103, !941, !261, !32}
!9357 = !{!9358, !9359, !9360, !9361}
!9358 = !DILocalVariable(name: "uart", arg: 1, scope: !9354, file: !925, line: 127, type: !941)
!9359 = !DILocalVariable(name: "buf", arg: 2, scope: !9354, file: !925, line: 127, type: !261)
!9360 = !DILocalVariable(name: "size", arg: 3, scope: !9354, file: !925, line: 128, type: !32)
!9361 = !DILocalVariable(name: "rx", scope: !9354, file: !925, line: 130, type: !103)
!9362 = !DILocation(line: 0, scope: !9354)
!9363 = !DILocation(line: 132, column: 7, scope: !9354)
!9364 = !DILocation(line: 133, column: 9, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9354, file: !925, line: 133, column: 6)
!9366 = !DILocation(line: 133, column: 6, scope: !9354)
!9367 = !DILocation(line: 135, column: 3, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9365, file: !925, line: 133, column: 14)
!9369 = !DILocation(line: 137, column: 3, scope: !9368)
!9370 = !DILocation(line: 141, column: 1, scope: !9354)
!9371 = distinct !DISubprogram(name: "k_queue_get", scope: !3670, file: !3670, line: 649, type: !9372, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9379)
!9372 = !DISubroutineType(types: !9373)
!9373 = !{!102, !9374, !9375}
!9374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!9375 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1700, line: 67, baseType: !9376)
!9376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1700, line: 65, size: 64, elements: !9377)
!9377 = !{!9378}
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9376, file: !1700, line: 66, baseType: !1699, size: 64)
!9379 = !{!9380, !9381}
!9380 = !DILocalVariable(name: "queue", arg: 1, scope: !9371, file: !3670, line: 649, type: !9374)
!9381 = !DILocalVariable(name: "timeout", arg: 2, scope: !9371, file: !3670, line: 649, type: !9375)
!9382 = !DILocation(line: 0, scope: !9371)
!9383 = !DILocation(line: 658, column: 2, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9371, file: !3670, line: 658, column: 2)
!9385 = !{i64 2154751432}
!9386 = !DILocation(line: 659, column: 9, scope: !9371)
!9387 = !DILocation(line: 659, column: 2, scope: !9371)
!9388 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1108, file: !1108, line: 131, type: !9389, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9393)
!9389 = !DISubroutineType(types: !9390)
!9390 = !{!157, !9391, !103}
!9391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9392, size: 32)
!9392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!9393 = !{!9394, !9395, !9396}
!9394 = !DILocalVariable(name: "target", arg: 1, scope: !9388, file: !1108, line: 131, type: !9391)
!9395 = !DILocalVariable(name: "bit", arg: 2, scope: !9388, file: !1108, line: 131, type: !103)
!9396 = !DILocalVariable(name: "val", scope: !9388, file: !1108, line: 133, type: !9397)
!9397 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1108, line: 23, baseType: !1107)
!9398 = !DILocation(line: 0, scope: !9388)
!9399 = !DILocation(line: 133, column: 21, scope: !9388)
!9400 = !DILocation(line: 135, column: 27, scope: !9388)
!9401 = !DILocation(line: 135, column: 50, scope: !9388)
!9402 = !DILocation(line: 135, column: 2, scope: !9388)
!9403 = distinct !DISubprogram(name: "handle_ansi", scope: !925, file: !925, line: 232, type: !9404, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9406)
!9404 = !DISubroutineType(types: !9405)
!9405 = !{null, !154, !1069}
!9406 = !{!9407, !9408, !9409}
!9407 = !DILocalVariable(name: "byte", arg: 1, scope: !9403, file: !925, line: 232, type: !154)
!9408 = !DILocalVariable(name: "line", arg: 2, scope: !9403, file: !925, line: 232, type: !1069)
!9409 = !DILabel(scope: !9403, name: "ansi_cmd", file: !925, line: 268)
!9410 = !DILocation(line: 0, scope: !9403)
!9411 = !DILocation(line: 234, column: 6, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9403, file: !925, line: 234, column: 6)
!9413 = !DILocation(line: 234, column: 6, scope: !9403)
!9414 = !DILocation(line: 235, column: 16, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9416, file: !925, line: 235, column: 7)
!9416 = distinct !DILexicalBlock(scope: !9412, file: !925, line: 234, column: 61)
!9417 = !DILocation(line: 235, column: 8, scope: !9415)
!9418 = !DILocation(line: 235, column: 7, scope: !9416)
!9419 = !DILocation(line: 236, column: 13, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9415, file: !925, line: 235, column: 23)
!9421 = !DILocation(line: 237, column: 4, scope: !9420)
!9422 = !DILocation(line: 240, column: 3, scope: !9416)
!9423 = !DILocation(line: 241, column: 19, scope: !9416)
!9424 = !DILocation(line: 241, column: 12, scope: !9416)
!9425 = !DILocation(line: 242, column: 14, scope: !9416)
!9426 = !DILocation(line: 243, column: 3, scope: !9416)
!9427 = !DILocation(line: 246, column: 6, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9403, file: !925, line: 246, column: 6)
!9429 = !DILocation(line: 246, column: 6, scope: !9403)
!9430 = !DILocation(line: 247, column: 15, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9432, file: !925, line: 247, column: 7)
!9432 = distinct !DILexicalBlock(scope: !9428, file: !925, line: 246, column: 49)
!9433 = !DILocation(line: 247, column: 7, scope: !9431)
!9434 = !DILocation(line: 247, column: 7, scope: !9432)
!9435 = !DILocation(line: 248, column: 8, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !925, line: 248, column: 8)
!9437 = distinct !DILexicalBlock(scope: !9431, file: !925, line: 247, column: 22)
!9438 = !DILocation(line: 248, column: 8, scope: !9437)
!9439 = !DILocation(line: 249, column: 16, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9436, file: !925, line: 248, column: 53)
!9441 = !DILocation(line: 250, column: 24, scope: !9440)
!9442 = !DILocation(line: 250, column: 16, scope: !9440)
!9443 = !DILocation(line: 251, column: 4, scope: !9440)
!9444 = !DILocation(line: 252, column: 14, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9436, file: !925, line: 251, column: 11)
!9446 = !DILocation(line: 253, column: 22, scope: !9445)
!9447 = !DILocation(line: 253, column: 14, scope: !9445)
!9448 = !DILocation(line: 259, column: 12, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9432, file: !925, line: 259, column: 7)
!9450 = !DILocation(line: 259, column: 19, scope: !9449)
!9451 = !DILocation(line: 260, column: 8, scope: !9449)
!9452 = !DILocation(line: 259, column: 7, scope: !9432)
!9453 = !DILocation(line: 264, column: 3, scope: !9432)
!9454 = !DILocation(line: 265, column: 3, scope: !9432)
!9455 = !DILocation(line: 266, column: 2, scope: !9432)
!9456 = !DILocation(line: 268, column: 1, scope: !9403)
!9457 = !DILocation(line: 269, column: 2, scope: !9403)
!9458 = !DILocation(line: 271, column: 7, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !925, line: 271, column: 7)
!9460 = distinct !DILexicalBlock(scope: !9403, file: !925, line: 269, column: 16)
!9461 = !DILocation(line: 271, column: 18, scope: !9459)
!9462 = !DILocation(line: 271, column: 16, scope: !9459)
!9463 = !DILocation(line: 271, column: 7, scope: !9460)
!9464 = !DILocation(line: 275, column: 7, scope: !9460)
!9465 = !DILocation(line: 276, column: 7, scope: !9460)
!9466 = !DILocation(line: 277, column: 3, scope: !9460)
!9467 = !DILocation(line: 278, column: 3, scope: !9460)
!9468 = !DILocation(line: 280, column: 7, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9460, file: !925, line: 280, column: 7)
!9470 = !DILocation(line: 280, column: 18, scope: !9469)
!9471 = !DILocation(line: 280, column: 16, scope: !9469)
!9472 = !DILocation(line: 280, column: 7, scope: !9460)
!9473 = !DILocation(line: 284, column: 7, scope: !9460)
!9474 = !DILocation(line: 285, column: 7, scope: !9460)
!9475 = !DILocation(line: 286, column: 3, scope: !9460)
!9476 = !DILocation(line: 287, column: 3, scope: !9460)
!9477 = !DILocation(line: 289, column: 8, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9460, file: !925, line: 289, column: 7)
!9479 = !DILocation(line: 289, column: 7, scope: !9460)
!9480 = !DILocation(line: 293, column: 19, scope: !9460)
!9481 = !DILocation(line: 293, column: 3, scope: !9460)
!9482 = !DILocation(line: 294, column: 10, scope: !9460)
!9483 = !DILocation(line: 294, column: 7, scope: !9460)
!9484 = !DILocation(line: 295, column: 7, scope: !9460)
!9485 = !DILocation(line: 296, column: 3, scope: !9460)
!9486 = !DILocation(line: 298, column: 8, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9460, file: !925, line: 298, column: 7)
!9488 = !DILocation(line: 298, column: 7, scope: !9460)
!9489 = !DILocation(line: 302, column: 18, scope: !9460)
!9490 = !DILocation(line: 302, column: 3, scope: !9460)
!9491 = !DILocation(line: 303, column: 10, scope: !9460)
!9492 = !DILocation(line: 303, column: 7, scope: !9460)
!9493 = !DILocation(line: 304, column: 7, scope: !9460)
!9494 = !DILocation(line: 305, column: 3, scope: !9460)
!9495 = !DILocation(line: 307, column: 8, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9460, file: !925, line: 307, column: 7)
!9497 = !DILocation(line: 307, column: 7, scope: !9460)
!9498 = !DILocation(line: 311, column: 3, scope: !9460)
!9499 = !DILocation(line: 312, column: 18, scope: !9460)
!9500 = !DILocation(line: 312, column: 13, scope: !9460)
!9501 = !DILocation(line: 312, column: 24, scope: !9460)
!9502 = !DILocation(line: 312, column: 3, scope: !9460)
!9503 = !DILocation(line: 313, column: 3, scope: !9460)
!9504 = !DILocation(line: 318, column: 2, scope: !9403)
!9505 = !DILocation(line: 319, column: 1, scope: !9403)
!9506 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1108, file: !1108, line: 152, type: !9507, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9510)
!9507 = !DISubroutineType(types: !9508)
!9508 = !{!157, !9509, !103}
!9509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!9510 = !{!9511, !9512, !9513, !9514}
!9511 = !DILocalVariable(name: "target", arg: 1, scope: !9506, file: !1108, line: 152, type: !9509)
!9512 = !DILocalVariable(name: "bit", arg: 2, scope: !9506, file: !1108, line: 152, type: !103)
!9513 = !DILocalVariable(name: "mask", scope: !9506, file: !1108, line: 154, type: !9397)
!9514 = !DILocalVariable(name: "old", scope: !9506, file: !1108, line: 155, type: !9397)
!9515 = !DILocation(line: 0, scope: !9506)
!9516 = !DILocation(line: 154, column: 22, scope: !9506)
!9517 = !DILocation(line: 157, column: 45, scope: !9506)
!9518 = !DILocation(line: 157, column: 8, scope: !9506)
!9519 = !DILocation(line: 159, column: 14, scope: !9506)
!9520 = !DILocation(line: 159, column: 22, scope: !9506)
!9521 = !DILocation(line: 159, column: 2, scope: !9506)
!9522 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1108, file: !1108, line: 217, type: !9523, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9525)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{null, !9509, !103}
!9525 = !{!9526, !9527, !9528}
!9526 = !DILocalVariable(name: "target", arg: 1, scope: !9522, file: !1108, line: 217, type: !9509)
!9527 = !DILocalVariable(name: "bit", arg: 2, scope: !9522, file: !1108, line: 217, type: !103)
!9528 = !DILocalVariable(name: "mask", scope: !9522, file: !1108, line: 219, type: !9397)
!9529 = !DILocation(line: 0, scope: !9522)
!9530 = !DILocation(line: 219, column: 22, scope: !9522)
!9531 = !DILocation(line: 221, column: 8, scope: !9522)
!9532 = !DILocation(line: 222, column: 1, scope: !9522)
!9533 = distinct !DISubprogram(name: "isprint", scope: !4987, file: !4987, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9534)
!9534 = !{!9535}
!9535 = !DILocalVariable(name: "c", arg: 1, scope: !9533, file: !4987, line: 37, type: !103)
!9536 = !DILocation(line: 0, scope: !9533)
!9537 = !DILocation(line: 39, column: 38, scope: !9533)
!9538 = !DILocation(line: 39, column: 2, scope: !9533)
!9539 = distinct !DISubprogram(name: "del_char", scope: !925, file: !925, line: 191, type: !9540, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9542)
!9540 = !DISubroutineType(types: !9541)
!9541 = !{null, !1069, !154}
!9542 = !{!9543, !9544}
!9543 = !DILocalVariable(name: "pos", arg: 1, scope: !9539, file: !925, line: 191, type: !1069)
!9544 = !DILocalVariable(name: "end", arg: 2, scope: !9539, file: !925, line: 191, type: !154)
!9545 = !DILocation(line: 0, scope: !9539)
!9546 = !DILocation(line: 193, column: 2, scope: !9539)
!9547 = !DILocation(line: 195, column: 10, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9539, file: !925, line: 195, column: 6)
!9549 = !DILocation(line: 195, column: 6, scope: !9539)
!9550 = !DILocation(line: 196, column: 3, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9548, file: !925, line: 195, column: 17)
!9552 = !DILocation(line: 197, column: 3, scope: !9551)
!9553 = !DILocation(line: 198, column: 3, scope: !9551)
!9554 = !DILocation(line: 201, column: 2, scope: !9539)
!9555 = !DILocation(line: 203, column: 2, scope: !9539)
!9556 = !DILocation(line: 203, column: 12, scope: !9539)
!9557 = !DILocation(line: 204, column: 16, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9539, file: !925, line: 203, column: 20)
!9559 = !DILocation(line: 204, column: 10, scope: !9558)
!9560 = !DILocation(line: 204, column: 8, scope: !9558)
!9561 = !DILocation(line: 205, column: 3, scope: !9558)
!9562 = !DILocation(line: 203, column: 15, scope: !9539)
!9563 = distinct !{!9563, !9555, !9564}
!9564 = !DILocation(line: 206, column: 2, scope: !9539)
!9565 = !DILocation(line: 208, column: 2, scope: !9539)
!9566 = !DILocation(line: 211, column: 2, scope: !9539)
!9567 = !DILocation(line: 212, column: 1, scope: !9539)
!9568 = !DISubprogram(name: "k_queue_append", scope: !300, file: !300, line: 1775, type: !9569, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{null, !9374, !102}
!9571 = distinct !DISubprogram(name: "insert_char", scope: !925, file: !925, line: 163, type: !9572, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9574)
!9572 = !DISubroutineType(types: !9573)
!9573 = !{null, !1069, !146, !154}
!9574 = !{!9575, !9576, !9577, !9578}
!9575 = !DILocalVariable(name: "pos", arg: 1, scope: !9571, file: !925, line: 163, type: !1069)
!9576 = !DILocalVariable(name: "c", arg: 2, scope: !9571, file: !925, line: 163, type: !146)
!9577 = !DILocalVariable(name: "end", arg: 3, scope: !9571, file: !925, line: 163, type: !154)
!9578 = !DILocalVariable(name: "tmp", scope: !9571, file: !925, line: 165, type: !146)
!9579 = !DILocation(line: 0, scope: !9571)
!9580 = !DILocation(line: 168, column: 2, scope: !9571)
!9581 = !DILocation(line: 170, column: 10, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9571, file: !925, line: 170, column: 6)
!9583 = !DILocation(line: 170, column: 6, scope: !9571)
!9584 = !DILocation(line: 171, column: 8, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9582, file: !925, line: 170, column: 17)
!9586 = !DILocation(line: 172, column: 3, scope: !9585)
!9587 = !DILocation(line: 175, column: 8, scope: !9571)
!9588 = !DILocation(line: 176, column: 11, scope: !9571)
!9589 = !DILocation(line: 178, column: 2, scope: !9571)
!9590 = !DILocation(line: 180, column: 2, scope: !9571)
!9591 = !DILocation(line: 180, column: 12, scope: !9571)
!9592 = !DILocation(line: 181, column: 3, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9571, file: !925, line: 180, column: 20)
!9594 = !DILocation(line: 182, column: 7, scope: !9593)
!9595 = !DILocation(line: 183, column: 12, scope: !9593)
!9596 = !DILocation(line: 180, column: 15, scope: !9571)
!9597 = distinct !{!9597, !9590, !9598}
!9598 = !DILocation(line: 185, column: 2, scope: !9571)
!9599 = !DILocation(line: 188, column: 2, scope: !9571)
!9600 = !DILocation(line: 189, column: 1, scope: !9571)
!9601 = distinct !DISubprogram(name: "cursor_save", scope: !925, file: !925, line: 153, type: !3237, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !461)
!9602 = !DILocation(line: 155, column: 2, scope: !9601)
!9603 = !DILocation(line: 156, column: 1, scope: !9601)
!9604 = distinct !DISubprogram(name: "cursor_restore", scope: !925, file: !925, line: 158, type: !3237, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !461)
!9605 = !DILocation(line: 160, column: 2, scope: !9604)
!9606 = !DILocation(line: 161, column: 1, scope: !9604)
!9607 = distinct !DISubprogram(name: "atomic_or", scope: !9608, file: !9608, line: 279, type: !9609, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9611)
!9608 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9609 = !DISubroutineType(types: !9610)
!9610 = !{!9397, !9509, !9397}
!9611 = !{!9612, !9613}
!9612 = !DILocalVariable(name: "target", arg: 1, scope: !9607, file: !9608, line: 279, type: !9509)
!9613 = !DILocalVariable(name: "value", arg: 2, scope: !9607, file: !9608, line: 279, type: !9397)
!9614 = !DILocation(line: 0, scope: !9607)
!9615 = !DILocation(line: 281, column: 9, scope: !9607)
!9616 = !DILocation(line: 281, column: 2, scope: !9607)
!9617 = distinct !DISubprogram(name: "atomic_and", scope: !9608, file: !9608, line: 319, type: !9609, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9618)
!9618 = !{!9619, !9620}
!9619 = !DILocalVariable(name: "target", arg: 1, scope: !9617, file: !9608, line: 319, type: !9509)
!9620 = !DILocalVariable(name: "value", arg: 2, scope: !9617, file: !9608, line: 319, type: !9397)
!9621 = !DILocation(line: 0, scope: !9617)
!9622 = !DILocation(line: 321, column: 9, scope: !9617)
!9623 = !DILocation(line: 321, column: 2, scope: !9617)
!9624 = distinct !DISubprogram(name: "isdigit", scope: !4987, file: !4987, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9625)
!9625 = !{!9626}
!9626 = !DILocalVariable(name: "a", arg: 1, scope: !9624, file: !4987, line: 43, type: !103)
!9627 = !DILocation(line: 0, scope: !9624)
!9628 = !DILocation(line: 45, column: 29, scope: !9624)
!9629 = !DILocation(line: 45, column: 45, scope: !9624)
!9630 = !DILocation(line: 45, column: 2, scope: !9624)
!9631 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1108, file: !1108, line: 176, type: !9507, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9632)
!9632 = !{!9633, !9634, !9635, !9636}
!9633 = !DILocalVariable(name: "target", arg: 1, scope: !9631, file: !1108, line: 176, type: !9509)
!9634 = !DILocalVariable(name: "bit", arg: 2, scope: !9631, file: !1108, line: 176, type: !103)
!9635 = !DILocalVariable(name: "mask", scope: !9631, file: !1108, line: 178, type: !9397)
!9636 = !DILocalVariable(name: "old", scope: !9631, file: !1108, line: 179, type: !9397)
!9637 = !DILocation(line: 0, scope: !9631)
!9638 = !DILocation(line: 181, column: 8, scope: !9631)
!9639 = !DILocation(line: 183, column: 14, scope: !9631)
!9640 = !DILocation(line: 183, column: 22, scope: !9631)
!9641 = !DILocation(line: 183, column: 2, scope: !9631)
!9642 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1108, file: !1108, line: 198, type: !9523, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9643)
!9643 = !{!9644, !9645, !9646}
!9644 = !DILocalVariable(name: "target", arg: 1, scope: !9642, file: !1108, line: 198, type: !9509)
!9645 = !DILocalVariable(name: "bit", arg: 2, scope: !9642, file: !1108, line: 198, type: !103)
!9646 = !DILocalVariable(name: "mask", scope: !9642, file: !1108, line: 200, type: !9397)
!9647 = !DILocation(line: 0, scope: !9642)
!9648 = !DILocation(line: 200, column: 22, scope: !9642)
!9649 = !DILocation(line: 202, column: 45, scope: !9642)
!9650 = !DILocation(line: 202, column: 8, scope: !9642)
!9651 = !DILocation(line: 203, column: 1, scope: !9642)
!9652 = distinct !DISubprogram(name: "cursor_backward", scope: !925, file: !925, line: 148, type: !5816, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9653)
!9653 = !{!9654}
!9654 = !DILocalVariable(name: "count", arg: 1, scope: !9652, file: !925, line: 148, type: !32)
!9655 = !DILocation(line: 0, scope: !9652)
!9656 = !DILocation(line: 150, column: 2, scope: !9652)
!9657 = !DILocation(line: 151, column: 1, scope: !9652)
!9658 = distinct !DISubprogram(name: "cursor_forward", scope: !925, file: !925, line: 143, type: !5816, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9659)
!9659 = !{!9660}
!9660 = !DILocalVariable(name: "count", arg: 1, scope: !9658, file: !925, line: 143, type: !32)
!9661 = !DILocation(line: 0, scope: !9658)
!9662 = !DILocation(line: 145, column: 2, scope: !9658)
!9663 = !DILocation(line: 146, column: 1, scope: !9658)
!9664 = distinct !DISubprogram(name: "atomic_get", scope: !9608, file: !9608, line: 159, type: !9665, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9667)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{!9397, !9391}
!9667 = !{!9668}
!9668 = !DILocalVariable(name: "target", arg: 1, scope: !9664, file: !9608, line: 159, type: !9391)
!9669 = !DILocation(line: 0, scope: !9664)
!9670 = !DILocation(line: 161, column: 9, scope: !9664)
!9671 = !DILocation(line: 161, column: 2, scope: !9664)
!9672 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3670, file: !3670, line: 646, type: !9372, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!9673 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !203, file: !203, line: 1093, type: !962, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9674)
!9674 = !{!9675, !9676}
!9675 = !DILocalVariable(name: "dev", arg: 1, scope: !9673, file: !203, line: 1093, type: !941)
!9676 = !DILocalVariable(name: "api", scope: !9673, file: !203, line: 1096, type: !933)
!9677 = !DILocation(line: 0, scope: !9673)
!9678 = !DILocation(line: 1097, column: 40, scope: !9673)
!9679 = !DILocation(line: 1099, column: 11, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9673, file: !203, line: 1099, column: 6)
!9681 = !DILocation(line: 1099, column: 26, scope: !9680)
!9682 = !DILocation(line: 1099, column: 6, scope: !9673)
!9683 = !DILocation(line: 1102, column: 9, scope: !9673)
!9684 = !DILocation(line: 1102, column: 2, scope: !9673)
!9685 = !DILocation(line: 1107, column: 1, scope: !9673)
!9686 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !203, file: !203, line: 1136, type: !962, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9687)
!9687 = !{!9688, !9689}
!9688 = !DILocalVariable(name: "dev", arg: 1, scope: !9686, file: !203, line: 1136, type: !941)
!9689 = !DILocalVariable(name: "api", scope: !9686, file: !203, line: 1139, type: !933)
!9690 = !DILocation(line: 0, scope: !9686)
!9691 = !DILocation(line: 1140, column: 40, scope: !9686)
!9692 = !DILocation(line: 1142, column: 11, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9686, file: !203, line: 1142, column: 6)
!9694 = !DILocation(line: 1142, column: 22, scope: !9693)
!9695 = !DILocation(line: 1142, column: 6, scope: !9686)
!9696 = !DILocation(line: 1145, column: 9, scope: !9686)
!9697 = !DILocation(line: 1145, column: 2, scope: !9686)
!9698 = !DILocation(line: 1150, column: 1, scope: !9686)
!9699 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !203, file: !203, line: 878, type: !992, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9700)
!9700 = !{!9701, !9702}
!9701 = !DILocalVariable(name: "dev", arg: 1, scope: !9699, file: !203, line: 878, type: !941)
!9702 = !DILocalVariable(name: "api", scope: !9699, file: !203, line: 881, type: !933)
!9703 = !DILocation(line: 0, scope: !9699)
!9704 = !DILocation(line: 882, column: 40, scope: !9699)
!9705 = !DILocation(line: 884, column: 11, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9699, file: !203, line: 884, column: 6)
!9707 = !DILocation(line: 884, column: 26, scope: !9706)
!9708 = !DILocation(line: 884, column: 6, scope: !9699)
!9709 = !DILocation(line: 885, column: 3, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9706, file: !203, line: 884, column: 35)
!9711 = !DILocation(line: 886, column: 2, scope: !9710)
!9712 = !DILocation(line: 890, column: 1, scope: !9699)
!9713 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !203, file: !203, line: 955, type: !992, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !921, retainedNodes: !9714)
!9714 = !{!9715, !9716}
!9715 = !DILocalVariable(name: "dev", arg: 1, scope: !9713, file: !203, line: 955, type: !941)
!9716 = !DILocalVariable(name: "api", scope: !9713, file: !203, line: 958, type: !933)
!9717 = !DILocation(line: 0, scope: !9713)
!9718 = !DILocation(line: 959, column: 40, scope: !9713)
!9719 = !DILocation(line: 961, column: 11, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9713, file: !203, line: 961, column: 6)
!9721 = !DILocation(line: 961, column: 26, scope: !9720)
!9722 = !DILocation(line: 961, column: 6, scope: !9713)
!9723 = !DILocation(line: 962, column: 3, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9720, file: !203, line: 961, column: 35)
!9725 = !DILocation(line: 963, column: 2, scope: !9724)
!9726 = !DILocation(line: 967, column: 1, scope: !9713)
!9727 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1294, file: !1294, line: 523, type: !1150, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9728)
!9728 = !{!9729, !9730, !9731, !9732, !9733}
!9729 = !DILocalVariable(name: "dev", arg: 1, scope: !9727, file: !1294, line: 523, type: !1152)
!9730 = !DILocalVariable(name: "pin", arg: 2, scope: !9727, file: !1294, line: 524, type: !1167)
!9731 = !DILocalVariable(name: "flags", arg: 3, scope: !9727, file: !1294, line: 524, type: !1168)
!9732 = !DILocalVariable(name: "err", scope: !9727, file: !1294, line: 526, type: !103)
!9733 = !DILocalVariable(name: "pincfg", scope: !9727, file: !1294, line: 527, type: !103)
!9734 = !DILocation(line: 0, scope: !9727)
!9735 = !DILocation(line: 527, column: 2, scope: !9727)
!9736 = !DILocation(line: 532, column: 8, scope: !9727)
!9737 = !DILocation(line: 533, column: 10, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9727, file: !1294, line: 533, column: 6)
!9739 = !DILocation(line: 533, column: 6, scope: !9727)
!9740 = !DILocation(line: 543, column: 13, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9727, file: !1294, line: 543, column: 6)
!9742 = !DILocation(line: 543, column: 28, scope: !9741)
!9743 = !DILocation(line: 543, column: 6, scope: !9727)
!9744 = !DILocation(line: 544, column: 14, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9746, file: !1294, line: 544, column: 7)
!9746 = distinct !DILexicalBlock(scope: !9741, file: !1294, line: 543, column: 34)
!9747 = !DILocation(line: 544, column: 39, scope: !9745)
!9748 = !DILocation(line: 544, column: 7, scope: !9746)
!9749 = !DILocation(line: 545, column: 38, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9745, file: !1294, line: 544, column: 45)
!9751 = !DILocation(line: 545, column: 4, scope: !9750)
!9752 = !DILocation(line: 546, column: 3, scope: !9750)
!9753 = !DILocation(line: 546, column: 21, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9745, file: !1294, line: 546, column: 14)
!9755 = !DILocation(line: 546, column: 45, scope: !9754)
!9756 = !DILocation(line: 546, column: 14, scope: !9745)
!9757 = !DILocation(line: 547, column: 40, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9754, file: !1294, line: 546, column: 51)
!9759 = !DILocation(line: 547, column: 4, scope: !9758)
!9760 = !DILocation(line: 548, column: 3, scope: !9758)
!9761 = !DILocation(line: 551, column: 32, scope: !9727)
!9762 = !DILocation(line: 551, column: 37, scope: !9727)
!9763 = !DILocation(line: 551, column: 2, scope: !9727)
!9764 = !DILocation(line: 554, column: 6, scope: !9727)
!9765 = !DILocation(line: 562, column: 1, scope: !9727)
!9766 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1294, file: !1294, line: 410, type: !9767, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9769)
!9767 = !DISubroutineType(types: !9768)
!9768 = !{!103, !1152, !843}
!9769 = !{!9770, !9771, !9772, !9774}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9766, file: !1294, line: 410, type: !1152)
!9771 = !DILocalVariable(name: "value", arg: 2, scope: !9766, file: !1294, line: 410, type: !843)
!9772 = !DILocalVariable(name: "cfg", scope: !9766, file: !1294, line: 412, type: !9773)
!9773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!9774 = !DILocalVariable(name: "gpio", scope: !9766, file: !1294, line: 413, type: !1225)
!9775 = !DILocation(line: 0, scope: !9766)
!9776 = !DILocation(line: 412, column: 45, scope: !9766)
!9777 = !DILocation(line: 413, column: 44, scope: !9766)
!9778 = !DILocation(line: 415, column: 11, scope: !9766)
!9779 = !DILocation(line: 415, column: 9, scope: !9766)
!9780 = !DILocation(line: 417, column: 2, scope: !9766)
!9781 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1294, file: !1294, line: 420, type: !1177, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9782)
!9782 = !{!9783, !9784, !9785, !9786, !9787, !9788}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !1294, line: 420, type: !1152)
!9784 = !DILocalVariable(name: "mask", arg: 2, scope: !9781, file: !1294, line: 421, type: !1179)
!9785 = !DILocalVariable(name: "value", arg: 3, scope: !9781, file: !1294, line: 422, type: !1174)
!9786 = !DILocalVariable(name: "cfg", scope: !9781, file: !1294, line: 424, type: !9773)
!9787 = !DILocalVariable(name: "gpio", scope: !9781, file: !1294, line: 425, type: !1225)
!9788 = !DILocalVariable(name: "port_value", scope: !9781, file: !1294, line: 426, type: !121)
!9789 = !DILocation(line: 0, scope: !9781)
!9790 = !DILocation(line: 424, column: 45, scope: !9781)
!9791 = !DILocation(line: 425, column: 44, scope: !9781)
!9792 = !DILocation(line: 430, column: 15, scope: !9781)
!9793 = !DILocation(line: 431, column: 46, scope: !9781)
!9794 = !DILocation(line: 431, column: 44, scope: !9781)
!9795 = !DILocation(line: 431, column: 61, scope: !9781)
!9796 = !DILocation(line: 431, column: 53, scope: !9781)
!9797 = !DILocation(line: 431, column: 2, scope: !9781)
!9798 = !DILocation(line: 435, column: 2, scope: !9781)
!9799 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1294, file: !1294, line: 438, type: !1182, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9800)
!9800 = !{!9801, !9802, !9803, !9804}
!9801 = !DILocalVariable(name: "dev", arg: 1, scope: !9799, file: !1294, line: 438, type: !1152)
!9802 = !DILocalVariable(name: "pins", arg: 2, scope: !9799, file: !1294, line: 439, type: !1179)
!9803 = !DILocalVariable(name: "cfg", scope: !9799, file: !1294, line: 441, type: !9773)
!9804 = !DILocalVariable(name: "gpio", scope: !9799, file: !1294, line: 442, type: !1225)
!9805 = !DILocation(line: 0, scope: !9799)
!9806 = !DILocation(line: 441, column: 45, scope: !9799)
!9807 = !DILocation(line: 442, column: 44, scope: !9799)
!9808 = !DILocation(line: 448, column: 2, scope: !9799)
!9809 = !DILocation(line: 450, column: 2, scope: !9799)
!9810 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1294, file: !1294, line: 453, type: !1182, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9811)
!9811 = !{!9812, !9813, !9814, !9815}
!9812 = !DILocalVariable(name: "dev", arg: 1, scope: !9810, file: !1294, line: 453, type: !1152)
!9813 = !DILocalVariable(name: "pins", arg: 2, scope: !9810, file: !1294, line: 454, type: !1179)
!9814 = !DILocalVariable(name: "cfg", scope: !9810, file: !1294, line: 456, type: !9773)
!9815 = !DILocalVariable(name: "gpio", scope: !9810, file: !1294, line: 457, type: !1225)
!9816 = !DILocation(line: 0, scope: !9810)
!9817 = !DILocation(line: 456, column: 45, scope: !9810)
!9818 = !DILocation(line: 457, column: 44, scope: !9810)
!9819 = !DILocation(line: 467, column: 2, scope: !9810)
!9820 = !DILocation(line: 470, column: 2, scope: !9810)
!9821 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1294, file: !1294, line: 473, type: !1182, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9822)
!9822 = !{!9823, !9824, !9825, !9826}
!9823 = !DILocalVariable(name: "dev", arg: 1, scope: !9821, file: !1294, line: 473, type: !1152)
!9824 = !DILocalVariable(name: "pins", arg: 2, scope: !9821, file: !1294, line: 474, type: !1179)
!9825 = !DILocalVariable(name: "cfg", scope: !9821, file: !1294, line: 476, type: !9773)
!9826 = !DILocalVariable(name: "gpio", scope: !9821, file: !1294, line: 477, type: !1225)
!9827 = !DILocation(line: 0, scope: !9821)
!9828 = !DILocation(line: 476, column: 45, scope: !9821)
!9829 = !DILocation(line: 477, column: 44, scope: !9821)
!9830 = !DILocation(line: 484, column: 2, scope: !9821)
!9831 = !DILocation(line: 487, column: 2, scope: !9821)
!9832 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1294, file: !1294, line: 594, type: !1188, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9833)
!9833 = !{!9834, !9835, !9836, !9837, !9838, !9839, !9841, !9842, !9843}
!9834 = !DILocalVariable(name: "dev", arg: 1, scope: !9832, file: !1294, line: 594, type: !1152)
!9835 = !DILocalVariable(name: "pin", arg: 2, scope: !9832, file: !1294, line: 595, type: !1167)
!9836 = !DILocalVariable(name: "mode", arg: 3, scope: !9832, file: !1294, line: 596, type: !1126)
!9837 = !DILocalVariable(name: "trig", arg: 4, scope: !9832, file: !1294, line: 597, type: !1132)
!9838 = !DILocalVariable(name: "cfg", scope: !9832, file: !1294, line: 599, type: !9773)
!9839 = !DILocalVariable(name: "data", scope: !9832, file: !1294, line: 600, type: !9840)
!9840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!9841 = !DILocalVariable(name: "edge", scope: !9832, file: !1294, line: 601, type: !103)
!9842 = !DILocalVariable(name: "err", scope: !9832, file: !1294, line: 602, type: !103)
!9843 = !DILabel(scope: !9832, name: "exit", file: !1294, line: 643)
!9844 = !DILocation(line: 0, scope: !9832)
!9845 = !DILocation(line: 599, column: 45, scope: !9832)
!9846 = !DILocation(line: 604, column: 6, scope: !9832)
!9847 = !DILocation(line: 605, column: 34, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9849, file: !1294, line: 605, column: 7)
!9849 = distinct !DILexicalBlock(scope: !9850, file: !1294, line: 604, column: 38)
!9850 = distinct !DILexicalBlock(scope: !9832, file: !1294, line: 604, column: 6)
!9851 = !DILocation(line: 605, column: 7, scope: !9848)
!9852 = !DILocation(line: 605, column: 47, scope: !9848)
!9853 = !DILocation(line: 605, column: 39, scope: !9848)
!9854 = !DILocation(line: 605, column: 7, scope: !9849)
!9855 = !DILocation(line: 606, column: 4, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9848, file: !1294, line: 605, column: 53)
!9857 = !DILocation(line: 607, column: 4, scope: !9856)
!9858 = !DILocation(line: 608, column: 4, scope: !9856)
!9859 = !DILocation(line: 609, column: 3, scope: !9856)
!9860 = !DILocation(line: 600, column: 38, scope: !9832)
!9861 = !DILocation(line: 620, column: 30, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9832, file: !1294, line: 620, column: 6)
!9863 = !DILocation(line: 620, column: 6, scope: !9862)
!9864 = !DILocation(line: 620, column: 57, scope: !9862)
!9865 = !DILocation(line: 620, column: 6, scope: !9832)
!9866 = !DILocation(line: 625, column: 29, scope: !9832)
!9867 = !DILocation(line: 625, column: 2, scope: !9832)
!9868 = !DILocation(line: 627, column: 2, scope: !9832)
!9869 = !DILocation(line: 630, column: 3, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9832, file: !1294, line: 627, column: 16)
!9871 = !DILocation(line: 633, column: 3, scope: !9870)
!9872 = !DILocation(line: 636, column: 3, scope: !9870)
!9873 = !DILocation(line: 639, column: 2, scope: !9832)
!9874 = !DILocation(line: 641, column: 2, scope: !9832)
!9875 = !DILocation(line: 643, column: 1, scope: !9832)
!9876 = !DILocation(line: 644, column: 2, scope: !9832)
!9877 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1294, file: !1294, line: 647, type: !1192, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9878)
!9878 = !{!9879, !9880, !9881, !9882}
!9879 = !DILocalVariable(name: "dev", arg: 1, scope: !9877, file: !1294, line: 647, type: !1152)
!9880 = !DILocalVariable(name: "callback", arg: 2, scope: !9877, file: !1294, line: 648, type: !1194)
!9881 = !DILocalVariable(name: "set", arg: 3, scope: !9877, file: !1294, line: 649, type: !157)
!9882 = !DILocalVariable(name: "data", scope: !9877, file: !1294, line: 651, type: !9840)
!9883 = !DILocation(line: 0, scope: !9877)
!9884 = !DILocation(line: 651, column: 38, scope: !9877)
!9885 = !DILocation(line: 653, column: 37, scope: !9877)
!9886 = !DILocation(line: 653, column: 9, scope: !9877)
!9887 = !DILocation(line: 653, column: 2, scope: !9877)
!9888 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9889, file: !9889, line: 38, type: !9890, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9893)
!9889 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9890 = !DISubroutineType(types: !9891)
!9891 = !{!103, !9892, !1194, !157}
!9892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!9893 = !{!9894, !9895, !9896}
!9894 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9888, file: !9889, line: 38, type: !9892)
!9895 = !DILocalVariable(name: "callback", arg: 2, scope: !9888, file: !9889, line: 39, type: !1194)
!9896 = !DILocalVariable(name: "set", arg: 3, scope: !9888, file: !9889, line: 40, type: !157)
!9897 = !DILocation(line: 0, scope: !9888)
!9898 = !DILocation(line: 45, column: 7, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9888, file: !9889, line: 45, column: 6)
!9900 = !DILocation(line: 45, column: 6, scope: !9888)
!9901 = !DILocation(line: 46, column: 56, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !9889, line: 46, column: 7)
!9903 = distinct !DILexicalBlock(scope: !9899, file: !9889, line: 45, column: 38)
!9904 = !DILocation(line: 46, column: 8, scope: !9902)
!9905 = !DILocation(line: 46, column: 7, scope: !9903)
!9906 = !DILocation(line: 51, column: 13, scope: !9899)
!9907 = !DILocation(line: 56, column: 43, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !9889, line: 55, column: 11)
!9909 = distinct !DILexicalBlock(scope: !9888, file: !9889, line: 55, column: 6)
!9910 = !DILocation(line: 56, column: 3, scope: !9908)
!9911 = !DILocation(line: 57, column: 2, scope: !9908)
!9912 = !DILocation(line: 60, column: 1, scope: !9888)
!9913 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1199, file: !1199, line: 261, type: !9914, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9916)
!9914 = !DISubroutineType(types: !9915)
!9915 = !{!157, !9892}
!9916 = !{!9917}
!9917 = !DILocalVariable(name: "list", arg: 1, scope: !9913, file: !1199, line: 261, type: !9892)
!9918 = !DILocation(line: 0, scope: !9913)
!9919 = !DILocation(line: 261, column: 1, scope: !9913)
!9920 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1199, file: !1199, line: 417, type: !9921, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9923)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{!157, !9892, !1370}
!9923 = !{!9924, !9925, !9926, !9927}
!9924 = !DILocalVariable(name: "list", arg: 1, scope: !9920, file: !1199, line: 417, type: !9892)
!9925 = !DILocalVariable(name: "node", arg: 2, scope: !9920, file: !1199, line: 417, type: !1370)
!9926 = !DILocalVariable(name: "prev", scope: !9920, file: !1199, line: 417, type: !1370)
!9927 = !DILocalVariable(name: "test", scope: !9920, file: !1199, line: 417, type: !1370)
!9928 = !DILocation(line: 0, scope: !9920)
!9929 = !DILocation(line: 417, column: 1, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9920, file: !1199, line: 417, column: 1)
!9931 = !DILocation(line: 417, column: 1, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9930, file: !1199, line: 417, column: 1)
!9933 = !DILocation(line: 417, column: 1, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9935, file: !1199, line: 417, column: 1)
!9935 = distinct !DILexicalBlock(scope: !9932, file: !1199, line: 417, column: 1)
!9936 = !DILocation(line: 417, column: 1, scope: !9935)
!9937 = distinct !{!9937, !9929, !9929}
!9938 = !DILocation(line: 417, column: 1, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9934, file: !1199, line: 417, column: 1)
!9940 = !DILocation(line: 417, column: 1, scope: !9920)
!9941 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1199, file: !1199, line: 298, type: !9942, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9944)
!9942 = !DISubroutineType(types: !9943)
!9943 = !{null, !9892, !1370}
!9944 = !{!9945, !9946}
!9945 = !DILocalVariable(name: "list", arg: 1, scope: !9941, file: !1199, line: 298, type: !9892)
!9946 = !DILocalVariable(name: "node", arg: 2, scope: !9941, file: !1199, line: 298, type: !1370)
!9947 = !DILocation(line: 0, scope: !9941)
!9948 = !DILocation(line: 298, column: 1, scope: !9941)
!9949 = !DILocation(line: 298, column: 1, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9941, file: !1199, line: 298, column: 1)
!9951 = !DILocation(line: 298, column: 1, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9950, file: !1199, line: 298, column: 1)
!9953 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1199, file: !1199, line: 231, type: !9954, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9956)
!9954 = !DISubroutineType(types: !9955)
!9955 = !{!1370, !9892}
!9956 = !{!9957}
!9957 = !DILocalVariable(name: "list", arg: 1, scope: !9953, file: !1199, line: 231, type: !9892)
!9958 = !DILocation(line: 0, scope: !9953)
!9959 = !DILocation(line: 233, column: 15, scope: !9953)
!9960 = !DILocation(line: 233, column: 2, scope: !9953)
!9961 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1199, file: !1199, line: 209, type: !9962, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9964)
!9962 = !DISubroutineType(types: !9963)
!9963 = !{null, !1370, !1370}
!9964 = !{!9965, !9966}
!9965 = !DILocalVariable(name: "parent", arg: 1, scope: !9961, file: !1199, line: 209, type: !1370)
!9966 = !DILocalVariable(name: "child", arg: 2, scope: !9961, file: !1199, line: 209, type: !1370)
!9967 = !DILocation(line: 0, scope: !9961)
!9968 = !DILocation(line: 211, column: 10, scope: !9961)
!9969 = !DILocation(line: 211, column: 15, scope: !9961)
!9970 = !DILocation(line: 212, column: 1, scope: !9961)
!9971 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1199, file: !1199, line: 214, type: !9942, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9972)
!9972 = !{!9973, !9974}
!9973 = !DILocalVariable(name: "list", arg: 1, scope: !9971, file: !1199, line: 214, type: !9892)
!9974 = !DILocalVariable(name: "node", arg: 2, scope: !9971, file: !1199, line: 214, type: !1370)
!9975 = !DILocation(line: 0, scope: !9971)
!9976 = !DILocation(line: 216, column: 8, scope: !9971)
!9977 = !DILocation(line: 216, column: 13, scope: !9971)
!9978 = !DILocation(line: 217, column: 1, scope: !9971)
!9979 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1199, file: !1199, line: 243, type: !9954, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9980)
!9980 = !{!9981}
!9981 = !DILocalVariable(name: "list", arg: 1, scope: !9979, file: !1199, line: 243, type: !9892)
!9982 = !DILocation(line: 0, scope: !9979)
!9983 = !DILocation(line: 245, column: 15, scope: !9979)
!9984 = !DILocation(line: 245, column: 2, scope: !9979)
!9985 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1199, file: !1199, line: 219, type: !9942, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9986)
!9986 = !{!9987, !9988}
!9987 = !DILocalVariable(name: "list", arg: 1, scope: !9985, file: !1199, line: 219, type: !9892)
!9988 = !DILocalVariable(name: "node", arg: 2, scope: !9985, file: !1199, line: 219, type: !1370)
!9989 = !DILocation(line: 0, scope: !9985)
!9990 = !DILocation(line: 221, column: 8, scope: !9985)
!9991 = !DILocation(line: 221, column: 13, scope: !9985)
!9992 = !DILocation(line: 222, column: 1, scope: !9985)
!9993 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1199, file: !1199, line: 401, type: !9994, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !9996)
!9994 = !DISubroutineType(types: !9995)
!9995 = !{null, !9892, !1370, !1370}
!9996 = !{!9997, !9998, !9999}
!9997 = !DILocalVariable(name: "list", arg: 1, scope: !9993, file: !1199, line: 401, type: !9892)
!9998 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9993, file: !1199, line: 401, type: !1370)
!9999 = !DILocalVariable(name: "node", arg: 3, scope: !9993, file: !1199, line: 401, type: !1370)
!10000 = !DILocation(line: 0, scope: !9993)
!10001 = !DILocation(line: 401, column: 1, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9993, file: !1199, line: 401, column: 1)
!10003 = !DILocation(line: 0, scope: !10002)
!10004 = !DILocation(line: 401, column: 1, scope: !9993)
!10005 = !DILocation(line: 401, column: 1, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10002, file: !1199, line: 401, column: 1)
!10007 = !DILocation(line: 401, column: 1, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10006, file: !1199, line: 401, column: 1)
!10009 = !DILocation(line: 401, column: 1, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10008, file: !1199, line: 401, column: 1)
!10011 = !DILocation(line: 401, column: 1, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10002, file: !1199, line: 401, column: 1)
!10013 = !DILocation(line: 401, column: 1, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10012, file: !1199, line: 401, column: 1)
!10015 = !DILocation(line: 401, column: 1, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10014, file: !1199, line: 401, column: 1)
!10017 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1199, file: !1199, line: 285, type: !10018, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10020)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!1370, !1370}
!10020 = !{!10021}
!10021 = !DILocalVariable(name: "node", arg: 1, scope: !10017, file: !1199, line: 285, type: !1370)
!10022 = !DILocation(line: 0, scope: !10017)
!10023 = !DILocation(line: 285, column: 1, scope: !10017)
!10024 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1199, file: !1199, line: 274, type: !10018, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10025)
!10025 = !{!10026}
!10026 = !DILocalVariable(name: "node", arg: 1, scope: !10024, file: !1199, line: 274, type: !1370)
!10027 = !DILocation(line: 0, scope: !10024)
!10028 = !DILocation(line: 274, column: 1, scope: !10024)
!10029 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1199, file: !1199, line: 204, type: !10018, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10030)
!10030 = !{!10031}
!10031 = !DILocalVariable(name: "node", arg: 1, scope: !10029, file: !1199, line: 204, type: !1370)
!10032 = !DILocation(line: 0, scope: !10029)
!10033 = !DILocation(line: 206, column: 15, scope: !10029)
!10034 = !DILocation(line: 206, column: 2, scope: !10029)
!10035 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1294, file: !1294, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10036)
!10036 = !{!10037, !10038, !10039}
!10037 = !DILocalVariable(name: "pin", arg: 1, scope: !10035, file: !1294, line: 342, type: !103)
!10038 = !DILocalVariable(name: "line", scope: !10035, file: !1294, line: 344, type: !121)
!10039 = !DILocalVariable(name: "port", scope: !10035, file: !1294, line: 345, type: !103)
!10040 = !DILocation(line: 0, scope: !10035)
!10041 = !DILocation(line: 344, column: 18, scope: !10035)
!10042 = !{i32 983040, i32 0}
!10043 = !DILocation(line: 356, column: 9, scope: !10035)
!10044 = !DILocation(line: 370, column: 2, scope: !10035)
!10045 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1294, file: !1294, line: 37, type: !708, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10046)
!10046 = !{!10047, !10048, !10049}
!10047 = !DILocalVariable(name: "line", arg: 1, scope: !10045, file: !1294, line: 37, type: !103)
!10048 = !DILocalVariable(name: "arg", arg: 2, scope: !10045, file: !1294, line: 37, type: !102)
!10049 = !DILocalVariable(name: "data", scope: !10045, file: !1294, line: 39, type: !9840)
!10050 = !DILocation(line: 0, scope: !10045)
!10051 = !DILocation(line: 41, column: 29, scope: !10045)
!10052 = !DILocation(line: 41, column: 39, scope: !10045)
!10053 = !DILocation(line: 41, column: 44, scope: !10045)
!10054 = !DILocation(line: 41, column: 2, scope: !10045)
!10055 = !DILocation(line: 42, column: 1, scope: !10045)
!10056 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1294, file: !1294, line: 376, type: !10057, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10059)
!10057 = !DISubroutineType(types: !10058)
!10058 = !{!103, !103, !103}
!10059 = !{!10060, !10061, !10062, !10064, !10065}
!10060 = !DILocalVariable(name: "port", arg: 1, scope: !10056, file: !1294, line: 376, type: !103)
!10061 = !DILocalVariable(name: "pin", arg: 2, scope: !10056, file: !1294, line: 376, type: !103)
!10062 = !DILocalVariable(name: "clk", scope: !10056, file: !1294, line: 386, type: !10063)
!10063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1152)
!10064 = !DILocalVariable(name: "pclken", scope: !10056, file: !1294, line: 387, type: !1413)
!10065 = !DILocalVariable(name: "ret", scope: !10056, file: !1294, line: 396, type: !103)
!10066 = !DILocation(line: 0, scope: !10056)
!10067 = !DILocation(line: 387, column: 2, scope: !10056)
!10068 = !DILocation(line: 387, column: 22, scope: !10056)
!10069 = !DILocation(line: 399, column: 8, scope: !10056)
!10070 = !DILocation(line: 400, column: 10, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10056, file: !1294, line: 400, column: 6)
!10072 = !DILocation(line: 400, column: 6, scope: !10056)
!10073 = !DILocation(line: 405, column: 2, scope: !10056)
!10074 = !DILocation(line: 407, column: 2, scope: !10056)
!10075 = !DILocation(line: 408, column: 1, scope: !10056)
!10076 = distinct !DISubprogram(name: "clock_control_on", scope: !794, file: !794, line: 123, type: !1259, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10077)
!10077 = !{!10078, !10079, !10080}
!10078 = !DILocalVariable(name: "dev", arg: 1, scope: !10076, file: !794, line: 123, type: !1152)
!10079 = !DILocalVariable(name: "sys", arg: 2, scope: !10076, file: !794, line: 124, type: !887)
!10080 = !DILocalVariable(name: "api", scope: !10076, file: !794, line: 126, type: !1252)
!10081 = !DILocation(line: 0, scope: !10076)
!10082 = !DILocation(line: 127, column: 49, scope: !10076)
!10083 = !DILocation(line: 129, column: 14, scope: !10076)
!10084 = !DILocation(line: 129, column: 9, scope: !10076)
!10085 = !DILocation(line: 129, column: 2, scope: !10076)
!10086 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1294, file: !1294, line: 311, type: !8616, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10087)
!10087 = !{!10088, !10089, !10090}
!10088 = !DILocalVariable(name: "port", arg: 1, scope: !10086, file: !1294, line: 311, type: !103)
!10089 = !DILocalVariable(name: "pin", arg: 2, scope: !10086, file: !1294, line: 311, type: !103)
!10090 = !DILocalVariable(name: "line", scope: !10086, file: !1294, line: 313, type: !121)
!10091 = !DILocation(line: 0, scope: !10086)
!10092 = !DILocation(line: 313, column: 18, scope: !10086)
!10093 = !DILocation(line: 337, column: 2, scope: !10086)
!10094 = !DILocation(line: 340, column: 1, scope: !10086)
!10095 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1294, file: !1294, line: 295, type: !10096, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10098)
!10096 = !DISubroutineType(types: !10097)
!10097 = !{!121, !103}
!10098 = !{!10099}
!10099 = !DILocalVariable(name: "pin", arg: 1, scope: !10095, file: !1294, line: 295, type: !103)
!10100 = !DILocation(line: 0, scope: !10095)
!10101 = !DILocation(line: 307, column: 46, scope: !10095)
!10102 = !DILocation(line: 307, column: 27, scope: !10095)
!10103 = !DILocation(line: 307, column: 32, scope: !10095)
!10104 = !DILocation(line: 307, column: 14, scope: !10095)
!10105 = !DILocation(line: 307, column: 39, scope: !10095)
!10106 = !DILocation(line: 307, column: 2, scope: !10095)
!10107 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5826, file: !5826, line: 671, type: !10108, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10110)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{null, !121, !121}
!10110 = !{!10111, !10112}
!10111 = !DILocalVariable(name: "Port", arg: 1, scope: !10107, file: !5826, line: 671, type: !121)
!10112 = !DILocalVariable(name: "Line", arg: 2, scope: !10107, file: !5826, line: 671, type: !121)
!10113 = !DILocation(line: 0, scope: !10107)
!10114 = !DILocation(line: 673, column: 3, scope: !10107)
!10115 = !DILocalVariable(name: "value", arg: 1, scope: !10116, file: !6825, line: 373, type: !121)
!10116 = distinct !DISubprogram(name: "__RBIT", scope: !6825, file: !6825, line: 373, type: !7832, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10117)
!10117 = !{!10115, !10118}
!10118 = !DILocalVariable(name: "result", scope: !10116, file: !6825, line: 375, type: !121)
!10119 = !DILocation(line: 0, scope: !10116, inlinedAt: !10120)
!10120 = distinct !DILocation(line: 673, column: 3, scope: !10107)
!10121 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10120)
!10122 = !{i64 3500066}
!10123 = !DILocalVariable(name: "value", arg: 1, scope: !10124, file: !6825, line: 403, type: !121)
!10124 = distinct !DISubprogram(name: "__CLZ", scope: !6825, file: !6825, line: 403, type: !10125, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10127)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!154, !121}
!10127 = !{!10123}
!10128 = !DILocation(line: 0, scope: !10124, inlinedAt: !10129)
!10129 = distinct !DILocation(line: 673, column: 3, scope: !10107)
!10130 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10129)
!10131 = !DILocation(line: 674, column: 1, scope: !10107)
!10132 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9889, file: !9889, line: 69, type: !10133, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10135)
!10133 = !DISubroutineType(types: !10134)
!10134 = !{null, !9892, !1152, !121}
!10135 = !{!10136, !10137, !10138, !10139, !10140}
!10136 = !DILocalVariable(name: "list", arg: 1, scope: !10132, file: !9889, line: 69, type: !9892)
!10137 = !DILocalVariable(name: "port", arg: 2, scope: !10132, file: !9889, line: 70, type: !1152)
!10138 = !DILocalVariable(name: "pins", arg: 3, scope: !10132, file: !9889, line: 71, type: !121)
!10139 = !DILocalVariable(name: "cb", scope: !10132, file: !9889, line: 73, type: !1194)
!10140 = !DILocalVariable(name: "tmp", scope: !10132, file: !9889, line: 73, type: !1194)
!10141 = !DILocation(line: 0, scope: !10132)
!10142 = !DILocation(line: 75, column: 2, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10132, file: !9889, line: 75, column: 2)
!10144 = !DILocation(line: 0, scope: !10143)
!10145 = !DILocation(line: 76, column: 11, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10147, file: !9889, line: 76, column: 7)
!10147 = distinct !DILexicalBlock(scope: !10148, file: !9889, line: 75, column: 57)
!10148 = distinct !DILexicalBlock(scope: !10143, file: !9889, line: 75, column: 2)
!10149 = !DILocation(line: 76, column: 20, scope: !10146)
!10150 = !DILocation(line: 76, column: 7, scope: !10147)
!10151 = !DILocation(line: 78, column: 8, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10146, file: !9889, line: 76, column: 28)
!10153 = !DILocation(line: 78, column: 4, scope: !10152)
!10154 = !DILocation(line: 79, column: 3, scope: !10152)
!10155 = !DILocation(line: 75, column: 2, scope: !10148)
!10156 = !DILocation(line: 81, column: 1, scope: !10132)
!10157 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5826, file: !5826, line: 710, type: !7832, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10158)
!10158 = !{!10159}
!10159 = !DILocalVariable(name: "Line", arg: 1, scope: !10157, file: !5826, line: 710, type: !121)
!10160 = !DILocation(line: 0, scope: !10157)
!10161 = !DILocation(line: 712, column: 21, scope: !10157)
!10162 = !DILocation(line: 0, scope: !10116, inlinedAt: !10163)
!10163 = distinct !DILocation(line: 712, column: 76, scope: !10157)
!10164 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10163)
!10165 = !DILocation(line: 0, scope: !10124, inlinedAt: !10166)
!10166 = distinct !DILocation(line: 712, column: 76, scope: !10157)
!10167 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10166)
!10168 = !DILocation(line: 712, column: 73, scope: !10157)
!10169 = !DILocation(line: 712, column: 3, scope: !10157)
!10170 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10171, file: !10171, line: 910, type: !10172, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10174)
!10171 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10172 = !DISubroutineType(types: !10173)
!10173 = !{null, !1225, !121}
!10174 = !{!10175, !10176}
!10175 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10170, file: !10171, line: 910, type: !1225)
!10176 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10170, file: !10171, line: 910, type: !121)
!10177 = !DILocation(line: 0, scope: !10170)
!10178 = !DILocation(line: 912, column: 3, scope: !10170)
!10179 = !DILocation(line: 913, column: 1, scope: !10170)
!10180 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10171, file: !10171, line: 823, type: !10181, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10183)
!10181 = !DISubroutineType(types: !10182)
!10182 = !{!121, !1225}
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10180, file: !10171, line: 823, type: !1225)
!10185 = !DILocation(line: 0, scope: !10180)
!10186 = !DILocation(line: 825, column: 21, scope: !10180)
!10187 = !DILocation(line: 825, column: 3, scope: !10180)
!10188 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10171, file: !10171, line: 812, type: !10172, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10189)
!10189 = !{!10190, !10191}
!10190 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10188, file: !10171, line: 812, type: !1225)
!10191 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10188, file: !10171, line: 812, type: !121)
!10192 = !DILocation(line: 0, scope: !10188)
!10193 = !DILocation(line: 814, column: 3, scope: !10188)
!10194 = !DILocation(line: 815, column: 1, scope: !10188)
!10195 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10171, file: !10171, line: 771, type: !10181, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10196)
!10196 = !{!10197}
!10197 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10195, file: !10171, line: 771, type: !1225)
!10198 = !DILocation(line: 0, scope: !10195)
!10199 = !DILocation(line: 773, column: 21, scope: !10195)
!10200 = !DILocation(line: 773, column: 3, scope: !10195)
!10201 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1294, file: !1294, line: 47, type: !10202, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10204)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{!103, !1168, !2608}
!10204 = !{!10205, !10206}
!10205 = !DILocalVariable(name: "flags", arg: 1, scope: !10201, file: !1294, line: 47, type: !1168)
!10206 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10201, file: !1294, line: 47, type: !2608)
!10207 = !DILocation(line: 0, scope: !10201)
!10208 = !DILocation(line: 50, column: 13, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10201, file: !1294, line: 50, column: 6)
!10210 = !DILocation(line: 50, column: 28, scope: !10209)
!10211 = !DILocation(line: 50, column: 6, scope: !10201)
!10212 = !DILocation(line: 53, column: 11, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10209, file: !1294, line: 50, column: 34)
!10214 = !DILocation(line: 55, column: 14, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10213, file: !1294, line: 55, column: 7)
!10216 = !DILocation(line: 55, column: 35, scope: !10215)
!10217 = !DILocation(line: 55, column: 7, scope: !10213)
!10218 = !DILocation(line: 56, column: 14, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !1294, line: 56, column: 8)
!10220 = distinct !DILexicalBlock(scope: !10215, file: !1294, line: 55, column: 41)
!10221 = !DILocation(line: 56, column: 8, scope: !10220)
!10222 = !DILocation(line: 0, scope: !10215)
!10223 = !DILocation(line: 66, column: 14, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10213, file: !1294, line: 66, column: 7)
!10225 = !DILocation(line: 66, column: 30, scope: !10224)
!10226 = !DILocation(line: 66, column: 7, scope: !10213)
!10227 = !DILocation(line: 67, column: 12, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10224, file: !1294, line: 66, column: 36)
!10229 = !DILocation(line: 68, column: 3, scope: !10228)
!10230 = !DILocation(line: 68, column: 21, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10224, file: !1294, line: 68, column: 14)
!10232 = !DILocation(line: 68, column: 39, scope: !10231)
!10233 = !DILocation(line: 68, column: 14, scope: !10224)
!10234 = !DILocation(line: 69, column: 12, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10231, file: !1294, line: 68, column: 45)
!10236 = !DILocation(line: 70, column: 3, scope: !10235)
!10237 = !DILocation(line: 72, column: 21, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10209, file: !1294, line: 72, column: 14)
!10239 = !DILocation(line: 72, column: 35, scope: !10238)
!10240 = !DILocation(line: 72, column: 14, scope: !10209)
!10241 = !DILocation(line: 77, column: 14, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !1294, line: 77, column: 7)
!10243 = distinct !DILexicalBlock(scope: !10238, file: !1294, line: 72, column: 41)
!10244 = !DILocation(line: 77, column: 30, scope: !10242)
!10245 = !DILocation(line: 77, column: 7, scope: !10243)
!10246 = !DILocation(line: 0, scope: !10209)
!10247 = !DILocation(line: 90, column: 1, scope: !10201)
!10248 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1294, file: !1294, line: 157, type: !10249, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10251)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{null, !1152, !103, !103, !103}
!10251 = !{!10252, !10253, !10254, !10255, !10256, !10257, !10258, !10259, !10260, !10261, !10262}
!10252 = !DILocalVariable(name: "dev", arg: 1, scope: !10248, file: !1294, line: 157, type: !1152)
!10253 = !DILocalVariable(name: "pin", arg: 2, scope: !10248, file: !1294, line: 157, type: !103)
!10254 = !DILocalVariable(name: "conf", arg: 3, scope: !10248, file: !1294, line: 158, type: !103)
!10255 = !DILocalVariable(name: "func", arg: 4, scope: !10248, file: !1294, line: 158, type: !103)
!10256 = !DILocalVariable(name: "cfg", scope: !10248, file: !1294, line: 160, type: !9773)
!10257 = !DILocalVariable(name: "gpio", scope: !10248, file: !1294, line: 161, type: !1225)
!10258 = !DILocalVariable(name: "pin_ll", scope: !10248, file: !1294, line: 163, type: !103)
!10259 = !DILocalVariable(name: "mode", scope: !10248, file: !1294, line: 227, type: !32)
!10260 = !DILocalVariable(name: "otype", scope: !10248, file: !1294, line: 227, type: !32)
!10261 = !DILocalVariable(name: "ospeed", scope: !10248, file: !1294, line: 227, type: !32)
!10262 = !DILocalVariable(name: "pupd", scope: !10248, file: !1294, line: 227, type: !32)
!10263 = !DILocation(line: 0, scope: !10248)
!10264 = !DILocation(line: 160, column: 45, scope: !10248)
!10265 = !DILocation(line: 161, column: 44, scope: !10248)
!10266 = !DILocation(line: 163, column: 15, scope: !10248)
!10267 = !DILocation(line: 229, column: 14, scope: !10248)
!10268 = !DILocation(line: 246, column: 47, scope: !10248)
!10269 = !DILocation(line: 246, column: 2, scope: !10248)
!10270 = !DILocation(line: 248, column: 43, scope: !10248)
!10271 = !DILocation(line: 248, column: 2, scope: !10248)
!10272 = !DILocation(line: 250, column: 40, scope: !10248)
!10273 = !DILocation(line: 250, column: 2, scope: !10248)
!10274 = !DILocation(line: 252, column: 11, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10248, file: !1294, line: 252, column: 6)
!10276 = !DILocation(line: 252, column: 6, scope: !10248)
!10277 = !DILocation(line: 253, column: 11, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10279, file: !1294, line: 253, column: 7)
!10279 = distinct !DILexicalBlock(scope: !10275, file: !1294, line: 252, column: 36)
!10280 = !DILocation(line: 253, column: 7, scope: !10279)
!10281 = !DILocation(line: 254, column: 4, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10278, file: !1294, line: 253, column: 16)
!10283 = !DILocation(line: 255, column: 3, scope: !10282)
!10284 = !DILocation(line: 256, column: 4, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10278, file: !1294, line: 255, column: 10)
!10286 = !DILocation(line: 260, column: 40, scope: !10248)
!10287 = !DILocation(line: 260, column: 2, scope: !10248)
!10288 = !DILocation(line: 265, column: 1, scope: !10248)
!10289 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1294, file: !1294, line: 137, type: !10096, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10290)
!10290 = !{!10291, !10292}
!10291 = !DILocalVariable(name: "pin", arg: 1, scope: !10289, file: !1294, line: 137, type: !103)
!10292 = !DILocalVariable(name: "pinval", scope: !10289, file: !1294, line: 139, type: !121)
!10293 = !DILocation(line: 0, scope: !10289)
!10294 = !DILocation(line: 149, column: 13, scope: !10289)
!10295 = !DILocation(line: 151, column: 2, scope: !10289)
!10296 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10171, file: !10171, line: 342, type: !10297, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10299)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{null, !1225, !121, !121}
!10299 = !{!10300, !10301, !10302}
!10300 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10296, file: !10171, line: 342, type: !1225)
!10301 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10296, file: !10171, line: 342, type: !121)
!10302 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10296, file: !10171, line: 342, type: !121)
!10303 = !DILocation(line: 0, scope: !10296)
!10304 = !DILocation(line: 344, column: 3, scope: !10296)
!10305 = !DILocation(line: 345, column: 1, scope: !10296)
!10306 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10171, file: !10171, line: 413, type: !10297, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10307)
!10307 = !{!10308, !10309, !10310}
!10308 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10306, file: !10171, line: 413, type: !1225)
!10309 = !DILocalVariable(name: "Pin", arg: 2, scope: !10306, file: !10171, line: 413, type: !121)
!10310 = !DILocalVariable(name: "Speed", arg: 3, scope: !10306, file: !10171, line: 413, type: !121)
!10311 = !DILocation(line: 0, scope: !10306)
!10312 = !DILocation(line: 415, column: 3, scope: !10306)
!10313 = !DILocation(line: 0, scope: !10116, inlinedAt: !10314)
!10314 = distinct !DILocation(line: 415, column: 3, scope: !10306)
!10315 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10314)
!10316 = !DILocation(line: 0, scope: !10124, inlinedAt: !10317)
!10317 = distinct !DILocation(line: 415, column: 3, scope: !10306)
!10318 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10317)
!10319 = !DILocation(line: 0, scope: !10116, inlinedAt: !10320)
!10320 = distinct !DILocation(line: 415, column: 3, scope: !10306)
!10321 = !DILocation(line: 0, scope: !10124, inlinedAt: !10322)
!10322 = distinct !DILocation(line: 415, column: 3, scope: !10306)
!10323 = !DILocation(line: 417, column: 1, scope: !10306)
!10324 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10171, file: !10171, line: 484, type: !10297, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10325)
!10325 = !{!10326, !10327, !10328}
!10326 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10324, file: !10171, line: 484, type: !1225)
!10327 = !DILocalVariable(name: "Pin", arg: 2, scope: !10324, file: !10171, line: 484, type: !121)
!10328 = !DILocalVariable(name: "Pull", arg: 3, scope: !10324, file: !10171, line: 484, type: !121)
!10329 = !DILocation(line: 0, scope: !10324)
!10330 = !DILocation(line: 486, column: 3, scope: !10324)
!10331 = !DILocation(line: 0, scope: !10116, inlinedAt: !10332)
!10332 = distinct !DILocation(line: 486, column: 3, scope: !10324)
!10333 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10332)
!10334 = !DILocation(line: 0, scope: !10124, inlinedAt: !10335)
!10335 = distinct !DILocation(line: 486, column: 3, scope: !10324)
!10336 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10335)
!10337 = !DILocation(line: 0, scope: !10116, inlinedAt: !10338)
!10338 = distinct !DILocation(line: 486, column: 3, scope: !10324)
!10339 = !DILocation(line: 0, scope: !10124, inlinedAt: !10340)
!10340 = distinct !DILocation(line: 486, column: 3, scope: !10324)
!10341 = !DILocation(line: 487, column: 1, scope: !10324)
!10342 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10171, file: !10171, line: 556, type: !10297, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10343)
!10343 = !{!10344, !10345, !10346}
!10344 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10342, file: !10171, line: 556, type: !1225)
!10345 = !DILocalVariable(name: "Pin", arg: 2, scope: !10342, file: !10171, line: 556, type: !121)
!10346 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10342, file: !10171, line: 556, type: !121)
!10347 = !DILocation(line: 0, scope: !10342)
!10348 = !DILocation(line: 558, column: 3, scope: !10342)
!10349 = !DILocation(line: 0, scope: !10116, inlinedAt: !10350)
!10350 = distinct !DILocation(line: 558, column: 3, scope: !10342)
!10351 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10350)
!10352 = !DILocation(line: 0, scope: !10124, inlinedAt: !10353)
!10353 = distinct !DILocation(line: 558, column: 3, scope: !10342)
!10354 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10353)
!10355 = !DILocation(line: 0, scope: !10116, inlinedAt: !10356)
!10356 = distinct !DILocation(line: 558, column: 3, scope: !10342)
!10357 = !DILocation(line: 0, scope: !10124, inlinedAt: !10358)
!10358 = distinct !DILocation(line: 558, column: 3, scope: !10342)
!10359 = !DILocation(line: 560, column: 1, scope: !10342)
!10360 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10171, file: !10171, line: 633, type: !10297, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10361)
!10361 = !{!10362, !10363, !10364}
!10362 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10360, file: !10171, line: 633, type: !1225)
!10363 = !DILocalVariable(name: "Pin", arg: 2, scope: !10360, file: !10171, line: 633, type: !121)
!10364 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10360, file: !10171, line: 633, type: !121)
!10365 = !DILocation(line: 0, scope: !10360)
!10366 = !DILocation(line: 635, column: 3, scope: !10360)
!10367 = !DILocation(line: 0, scope: !10116, inlinedAt: !10368)
!10368 = distinct !DILocation(line: 635, column: 3, scope: !10360)
!10369 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10368)
!10370 = !DILocation(line: 0, scope: !10124, inlinedAt: !10371)
!10371 = distinct !DILocation(line: 635, column: 3, scope: !10360)
!10372 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10371)
!10373 = !DILocation(line: 0, scope: !10116, inlinedAt: !10374)
!10374 = distinct !DILocation(line: 635, column: 3, scope: !10360)
!10375 = !DILocation(line: 0, scope: !10124, inlinedAt: !10376)
!10376 = distinct !DILocation(line: 635, column: 3, scope: !10360)
!10377 = !DILocation(line: 637, column: 1, scope: !10360)
!10378 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10171, file: !10171, line: 273, type: !10297, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10379)
!10379 = !{!10380, !10381, !10382}
!10380 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10378, file: !10171, line: 273, type: !1225)
!10381 = !DILocalVariable(name: "Pin", arg: 2, scope: !10378, file: !10171, line: 273, type: !121)
!10382 = !DILocalVariable(name: "Mode", arg: 3, scope: !10378, file: !10171, line: 273, type: !121)
!10383 = !DILocation(line: 0, scope: !10378)
!10384 = !DILocation(line: 275, column: 3, scope: !10378)
!10385 = !DILocation(line: 0, scope: !10116, inlinedAt: !10386)
!10386 = distinct !DILocation(line: 275, column: 3, scope: !10378)
!10387 = !DILocation(line: 380, column: 4, scope: !10116, inlinedAt: !10386)
!10388 = !DILocation(line: 0, scope: !10124, inlinedAt: !10389)
!10389 = distinct !DILocation(line: 275, column: 3, scope: !10378)
!10390 = !DILocation(line: 414, column: 7, scope: !10124, inlinedAt: !10389)
!10391 = !DILocation(line: 0, scope: !10116, inlinedAt: !10392)
!10392 = distinct !DILocation(line: 275, column: 3, scope: !10378)
!10393 = !DILocation(line: 0, scope: !10124, inlinedAt: !10394)
!10394 = distinct !DILocation(line: 275, column: 3, scope: !10378)
!10395 = !DILocation(line: 276, column: 1, scope: !10378)
!10396 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1294, file: !1294, line: 698, type: !1307, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10397)
!10397 = !{!10398, !10399, !10400}
!10398 = !DILocalVariable(name: "dev", arg: 1, scope: !10396, file: !1294, line: 698, type: !1152)
!10399 = !DILocalVariable(name: "data", scope: !10396, file: !1294, line: 700, type: !9840)
!10400 = !DILocalVariable(name: "ret", scope: !10396, file: !1294, line: 701, type: !103)
!10401 = !DILocation(line: 0, scope: !10396)
!10402 = !DILocation(line: 700, column: 38, scope: !10396)
!10403 = !DILocation(line: 703, column: 8, scope: !10396)
!10404 = !DILocation(line: 703, column: 12, scope: !10396)
!10405 = !DILocation(line: 705, column: 7, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10396, file: !1294, line: 705, column: 6)
!10407 = !DILocation(line: 705, column: 6, scope: !10396)
!10408 = !DILocation(line: 722, column: 8, scope: !10396)
!10409 = !DILocation(line: 723, column: 10, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10396, file: !1294, line: 723, column: 6)
!10411 = !DILocation(line: 723, column: 6, scope: !10396)
!10412 = !DILocation(line: 731, column: 1, scope: !10396)
!10413 = distinct !DISubprogram(name: "device_is_ready", scope: !6666, file: !6666, line: 47, type: !10414, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10416)
!10414 = !DISubroutineType(types: !10415)
!10415 = !{!157, !1152}
!10416 = !{!10417}
!10417 = !DILocalVariable(name: "dev", arg: 1, scope: !10413, file: !6666, line: 47, type: !1152)
!10418 = !DILocation(line: 0, scope: !10413)
!10419 = !DILocation(line: 55, column: 2, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10413, file: !6666, line: 55, column: 2)
!10421 = !{i64 2154942949}
!10422 = !DILocation(line: 56, column: 9, scope: !10413)
!10423 = !DILocation(line: 56, column: 2, scope: !10413)
!10424 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1294, file: !1294, line: 270, type: !10425, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10427)
!10425 = !DISubroutineType(types: !10426)
!10426 = !{!103, !1152, !157}
!10427 = !{!10428, !10429, !10430, !10431, !10432}
!10428 = !DILocalVariable(name: "dev", arg: 1, scope: !10424, file: !1294, line: 270, type: !1152)
!10429 = !DILocalVariable(name: "on", arg: 2, scope: !10424, file: !1294, line: 270, type: !157)
!10430 = !DILocalVariable(name: "cfg", scope: !10424, file: !1294, line: 272, type: !9773)
!10431 = !DILocalVariable(name: "ret", scope: !10424, file: !1294, line: 273, type: !103)
!10432 = !DILocalVariable(name: "clk", scope: !10424, file: !1294, line: 278, type: !10063)
!10433 = !DILocation(line: 0, scope: !10424)
!10434 = !DILocation(line: 272, column: 45, scope: !10424)
!10435 = !DILocation(line: 282, column: 38, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1294, line: 280, column: 10)
!10437 = distinct !DILexicalBlock(scope: !10424, file: !1294, line: 280, column: 6)
!10438 = !DILocation(line: 282, column: 6, scope: !10436)
!10439 = !DILocation(line: 281, column: 9, scope: !10436)
!10440 = !DILocation(line: 293, column: 1, scope: !10424)
!10441 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10414, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10442)
!10442 = !{!10443}
!10443 = !DILocalVariable(name: "dev", arg: 1, scope: !10441, file: !141, line: 730, type: !1152)
!10444 = !DILocation(line: 0, scope: !10441)
!10445 = !DILocation(line: 732, column: 9, scope: !10441)
!10446 = !DILocation(line: 732, column: 2, scope: !10441)
!10447 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1294, file: !1294, line: 496, type: !10448, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10450)
!10448 = !DISubroutineType(types: !10449)
!10449 = !{!103, !1152, !103, !103, !103}
!10450 = !{!10451, !10452, !10453, !10454, !10455, !10456}
!10451 = !DILocalVariable(name: "dev", arg: 1, scope: !10447, file: !1294, line: 496, type: !1152)
!10452 = !DILocalVariable(name: "pin", arg: 2, scope: !10447, file: !1294, line: 496, type: !103)
!10453 = !DILocalVariable(name: "conf", arg: 3, scope: !10447, file: !1294, line: 496, type: !103)
!10454 = !DILocalVariable(name: "func", arg: 4, scope: !10447, file: !1294, line: 496, type: !103)
!10455 = !DILocalVariable(name: "ret", scope: !10447, file: !1294, line: 498, type: !103)
!10456 = !DILocalVariable(name: "gpio_out", scope: !10457, file: !1294, line: 508, type: !121)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !1294, line: 507, column: 27)
!10458 = distinct !DILexicalBlock(scope: !10447, file: !1294, line: 507, column: 6)
!10459 = !DILocation(line: 0, scope: !10447)
!10460 = !DILocation(line: 505, column: 2, scope: !10447)
!10461 = !DILocation(line: 507, column: 11, scope: !10458)
!10462 = !DILocation(line: 507, column: 6, scope: !10447)
!10463 = !DILocation(line: 508, column: 28, scope: !10457)
!10464 = !DILocation(line: 0, scope: !10457)
!10465 = !DILocation(line: 510, column: 16, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10457, file: !1294, line: 510, column: 7)
!10467 = !DILocation(line: 0, scope: !10466)
!10468 = !DILocation(line: 510, column: 7, scope: !10457)
!10469 = !DILocation(line: 511, column: 4, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10466, file: !1294, line: 510, column: 32)
!10471 = !DILocation(line: 512, column: 3, scope: !10470)
!10472 = !DILocation(line: 513, column: 4, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !1294, line: 512, column: 39)
!10474 = distinct !DILexicalBlock(scope: !10466, file: !1294, line: 512, column: 14)
!10475 = !DILocation(line: 514, column: 3, scope: !10473)
!10476 = !DILocation(line: 518, column: 1, scope: !10447)
!10477 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1602, file: !1602, line: 526, type: !1473, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10478)
!10478 = !{!10479, !10480, !10481}
!10479 = !DILocalVariable(name: "dev", arg: 1, scope: !10477, file: !1602, line: 526, type: !1475)
!10480 = !DILocalVariable(name: "c", arg: 2, scope: !10477, file: !1602, line: 526, type: !224)
!10481 = !DILocalVariable(name: "config", scope: !10477, file: !1602, line: 528, type: !10482)
!10482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!10483 = !DILocation(line: 0, scope: !10477)
!10484 = !DILocation(line: 528, column: 48, scope: !10477)
!10485 = !DILocation(line: 531, column: 40, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10477, file: !1602, line: 531, column: 6)
!10487 = !DILocation(line: 531, column: 6, scope: !10486)
!10488 = !DILocation(line: 531, column: 6, scope: !10477)
!10489 = !DILocation(line: 532, column: 34, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !1602, line: 531, column: 48)
!10491 = !DILocation(line: 532, column: 3, scope: !10490)
!10492 = !DILocation(line: 533, column: 2, scope: !10490)
!10493 = !DILocation(line: 539, column: 42, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10477, file: !1602, line: 539, column: 6)
!10495 = !DILocation(line: 539, column: 7, scope: !10494)
!10496 = !DILocation(line: 539, column: 6, scope: !10477)
!10497 = !DILocation(line: 543, column: 52, scope: !10477)
!10498 = !DILocation(line: 543, column: 22, scope: !10477)
!10499 = !DILocation(line: 543, column: 5, scope: !10477)
!10500 = !DILocation(line: 545, column: 2, scope: !10477)
!10501 = !DILocation(line: 546, column: 1, scope: !10477)
!10502 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1602, file: !1602, line: 548, type: !1492, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10503)
!10503 = !{!10504, !10505, !10506, !10507}
!10504 = !DILocalVariable(name: "dev", arg: 1, scope: !10502, file: !1602, line: 548, type: !1475)
!10505 = !DILocalVariable(name: "c", arg: 2, scope: !10502, file: !1602, line: 549, type: !155)
!10506 = !DILocalVariable(name: "config", scope: !10502, file: !1602, line: 551, type: !10482)
!10507 = !DILocalVariable(name: "key", scope: !10502, file: !1602, line: 555, type: !32)
!10508 = !DILocation(line: 0, scope: !10502)
!10509 = !DILocation(line: 551, column: 48, scope: !10502)
!10510 = !DILocation(line: 562, column: 2, scope: !10502)
!10511 = !DILocation(line: 563, column: 41, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10513, file: !1602, line: 563, column: 7)
!10513 = distinct !DILexicalBlock(scope: !10502, file: !1602, line: 562, column: 12)
!10514 = !DILocation(line: 563, column: 7, scope: !10512)
!10515 = !DILocation(line: 563, column: 7, scope: !10513)
!10516 = !DILocation(line: 55, column: 2, scope: !10517, inlinedAt: !10521)
!10517 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10518)
!10518 = !{!10519, !10520}
!10519 = !DILocalVariable(name: "key", scope: !10517, file: !5805, line: 44, type: !32)
!10520 = !DILocalVariable(name: "tmp", scope: !10517, file: !5805, line: 53, type: !32)
!10521 = distinct !DILocation(line: 564, column: 10, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10512, file: !1602, line: 563, column: 49)
!10523 = !{i64 2288479}
!10524 = !DILocation(line: 0, scope: !10517, inlinedAt: !10521)
!10525 = !DILocation(line: 565, column: 42, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10522, file: !1602, line: 565, column: 8)
!10527 = !DILocation(line: 565, column: 8, scope: !10526)
!10528 = !DILocation(line: 565, column: 8, scope: !10522)
!10529 = !DILocalVariable(name: "key", arg: 1, scope: !10530, file: !5805, line: 84, type: !32)
!10530 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10531)
!10531 = !{!10529}
!10532 = !DILocation(line: 0, scope: !10530, inlinedAt: !10533)
!10533 = distinct !DILocation(line: 568, column: 4, scope: !10522)
!10534 = !DILocation(line: 95, column: 2, scope: !10530, inlinedAt: !10533)
!10535 = !{i64 2289296}
!10536 = !DILocation(line: 569, column: 3, scope: !10522)
!10537 = distinct !{!10537, !10510, !10538}
!10538 = !DILocation(line: 570, column: 2, scope: !10502)
!10539 = !DILocation(line: 592, column: 33, scope: !10502)
!10540 = !DILocation(line: 592, column: 2, scope: !10502)
!10541 = !DILocation(line: 0, scope: !10530, inlinedAt: !10542)
!10542 = distinct !DILocation(line: 593, column: 2, scope: !10502)
!10543 = !DILocation(line: 95, column: 2, scope: !10530, inlinedAt: !10542)
!10544 = !DILocation(line: 594, column: 1, scope: !10502)
!10545 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1602, file: !1602, line: 596, type: !1496, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10546)
!10546 = !{!10547, !10548, !10549}
!10547 = !DILocalVariable(name: "dev", arg: 1, scope: !10545, file: !1602, line: 596, type: !1475)
!10548 = !DILocalVariable(name: "config", scope: !10545, file: !1602, line: 598, type: !10482)
!10549 = !DILocalVariable(name: "err", scope: !10545, file: !1602, line: 599, type: !121)
!10550 = !DILocation(line: 0, scope: !10545)
!10551 = !DILocation(line: 598, column: 48, scope: !10545)
!10552 = !DILocation(line: 606, column: 40, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10545, file: !1602, line: 606, column: 6)
!10554 = !DILocation(line: 606, column: 6, scope: !10553)
!10555 = !DILocation(line: 606, column: 6, scope: !10545)
!10556 = !DILocation(line: 610, column: 39, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10545, file: !1602, line: 610, column: 6)
!10558 = !DILocation(line: 610, column: 6, scope: !10557)
!10559 = !DILocation(line: 610, column: 6, scope: !10545)
!10560 = !DILocation(line: 614, column: 39, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10545, file: !1602, line: 614, column: 6)
!10562 = !DILocation(line: 614, column: 6, scope: !10561)
!10563 = !DILocation(line: 614, column: 6, scope: !10545)
!10564 = !DILocation(line: 619, column: 40, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10545, file: !1602, line: 619, column: 6)
!10566 = !DILocation(line: 619, column: 6, scope: !10565)
!10567 = !DILocation(line: 619, column: 6, scope: !10545)
!10568 = !DILocation(line: 623, column: 10, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10545, file: !1602, line: 623, column: 6)
!10570 = !DILocation(line: 623, column: 6, scope: !10545)
!10571 = !DILocation(line: 624, column: 34, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10569, file: !1602, line: 623, column: 24)
!10573 = !DILocation(line: 624, column: 3, scope: !10572)
!10574 = !DILocation(line: 625, column: 2, scope: !10572)
!10575 = !DILocation(line: 632, column: 10, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10545, file: !1602, line: 632, column: 6)
!10577 = !DILocation(line: 632, column: 6, scope: !10545)
!10578 = !DILocation(line: 633, column: 34, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10576, file: !1602, line: 632, column: 32)
!10580 = !DILocation(line: 633, column: 3, scope: !10579)
!10581 = !DILocation(line: 634, column: 2, scope: !10579)
!10582 = !DILocation(line: 636, column: 10, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10545, file: !1602, line: 636, column: 6)
!10584 = !DILocation(line: 636, column: 6, scope: !10545)
!10585 = !DILocation(line: 637, column: 33, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10583, file: !1602, line: 636, column: 31)
!10587 = !DILocation(line: 637, column: 3, scope: !10586)
!10588 = !DILocation(line: 638, column: 2, scope: !10586)
!10589 = !DILocation(line: 640, column: 10, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10545, file: !1602, line: 640, column: 6)
!10591 = !DILocation(line: 640, column: 6, scope: !10545)
!10592 = !DILocation(line: 641, column: 33, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10590, file: !1602, line: 640, column: 32)
!10594 = !DILocation(line: 641, column: 3, scope: !10593)
!10595 = !DILocation(line: 642, column: 2, scope: !10593)
!10596 = !DILocation(line: 646, column: 32, scope: !10545)
!10597 = !DILocation(line: 646, column: 2, scope: !10545)
!10598 = !DILocation(line: 648, column: 2, scope: !10545)
!10599 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1602, file: !1602, line: 419, type: !1500, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10600)
!10600 = !{!10601, !10602, !10603, !10604, !10606, !10607, !10608, !10609}
!10601 = !DILocalVariable(name: "dev", arg: 1, scope: !10599, file: !1602, line: 419, type: !1475)
!10602 = !DILocalVariable(name: "cfg", arg: 2, scope: !10599, file: !1602, line: 420, type: !1502)
!10603 = !DILocalVariable(name: "config", scope: !10599, file: !1602, line: 422, type: !10482)
!10604 = !DILocalVariable(name: "data", scope: !10599, file: !1602, line: 423, type: !10605)
!10605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!10606 = !DILocalVariable(name: "parity", scope: !10599, file: !1602, line: 424, type: !7093)
!10607 = !DILocalVariable(name: "stopbits", scope: !10599, file: !1602, line: 425, type: !7093)
!10608 = !DILocalVariable(name: "databits", scope: !10599, file: !1602, line: 426, type: !7093)
!10609 = !DILocalVariable(name: "flowctrl", scope: !10599, file: !1602, line: 428, type: !7093)
!10610 = !DILocation(line: 0, scope: !10599)
!10611 = !DILocation(line: 422, column: 48, scope: !10599)
!10612 = !DILocation(line: 423, column: 38, scope: !10599)
!10613 = !DILocation(line: 424, column: 56, scope: !10599)
!10614 = !DILocation(line: 424, column: 51, scope: !10599)
!10615 = !DILocation(line: 424, column: 26, scope: !10599)
!10616 = !DILocation(line: 425, column: 60, scope: !10599)
!10617 = !DILocation(line: 425, column: 55, scope: !10599)
!10618 = !DILocation(line: 425, column: 28, scope: !10599)
!10619 = !DILocation(line: 426, column: 60, scope: !10599)
!10620 = !DILocation(line: 426, column: 55, scope: !10599)
!10621 = !DILocation(line: 426, column: 28, scope: !10599)
!10622 = !DILocation(line: 428, column: 58, scope: !10599)
!10623 = !DILocation(line: 428, column: 53, scope: !10599)
!10624 = !DILocation(line: 428, column: 28, scope: !10599)
!10625 = !DILocation(line: 431, column: 44, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 431, column: 6)
!10627 = !DILocation(line: 438, column: 22, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 437, column: 6)
!10629 = !DILocation(line: 437, column: 6, scope: !10599)
!10630 = !DILocation(line: 448, column: 6, scope: !10599)
!10631 = !DILocation(line: 465, column: 47, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 465, column: 6)
!10633 = !DILocation(line: 475, column: 21, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 475, column: 6)
!10635 = !DILocation(line: 475, column: 6, scope: !10599)
!10636 = !DILocation(line: 476, column: 8, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10638, file: !1602, line: 476, column: 7)
!10638 = distinct !DILexicalBlock(scope: !10634, file: !1602, line: 475, column: 49)
!10639 = !DILocation(line: 477, column: 34, scope: !10637)
!10640 = !DILocation(line: 476, column: 7, scope: !10638)
!10641 = !DILocation(line: 482, column: 27, scope: !10599)
!10642 = !DILocation(line: 482, column: 2, scope: !10599)
!10643 = !DILocation(line: 484, column: 16, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 484, column: 6)
!10645 = !DILocation(line: 484, column: 13, scope: !10644)
!10646 = !DILocation(line: 484, column: 6, scope: !10599)
!10647 = !DILocation(line: 485, column: 3, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10644, file: !1602, line: 484, column: 44)
!10649 = !DILocation(line: 486, column: 2, scope: !10648)
!10650 = !DILocation(line: 488, column: 18, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 488, column: 6)
!10652 = !DILocation(line: 488, column: 15, scope: !10651)
!10653 = !DILocation(line: 488, column: 6, scope: !10599)
!10654 = !DILocation(line: 489, column: 3, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10651, file: !1602, line: 488, column: 48)
!10656 = !DILocation(line: 490, column: 2, scope: !10655)
!10657 = !DILocation(line: 492, column: 18, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 492, column: 6)
!10659 = !DILocation(line: 492, column: 15, scope: !10658)
!10660 = !DILocation(line: 492, column: 6, scope: !10599)
!10661 = !DILocation(line: 493, column: 3, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !1602, line: 492, column: 48)
!10663 = !DILocation(line: 494, column: 2, scope: !10662)
!10664 = !DILocation(line: 496, column: 18, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 496, column: 6)
!10666 = !DILocation(line: 496, column: 15, scope: !10665)
!10667 = !DILocation(line: 496, column: 6, scope: !10599)
!10668 = !DILocation(line: 497, column: 3, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10665, file: !1602, line: 496, column: 46)
!10670 = !DILocation(line: 498, column: 2, scope: !10669)
!10671 = !DILocation(line: 500, column: 11, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10599, file: !1602, line: 500, column: 6)
!10673 = !DILocation(line: 500, column: 29, scope: !10672)
!10674 = !DILocation(line: 500, column: 20, scope: !10672)
!10675 = !DILocation(line: 500, column: 6, scope: !10599)
!10676 = !DILocation(line: 501, column: 3, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10672, file: !1602, line: 500, column: 40)
!10678 = !DILocation(line: 502, column: 26, scope: !10677)
!10679 = !DILocation(line: 502, column: 19, scope: !10677)
!10680 = !DILocation(line: 503, column: 2, scope: !10677)
!10681 = !DILocation(line: 505, column: 26, scope: !10599)
!10682 = !DILocation(line: 505, column: 2, scope: !10599)
!10683 = !DILocation(line: 506, column: 2, scope: !10599)
!10684 = !DILocation(line: 507, column: 1, scope: !10599)
!10685 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1602, file: !1602, line: 509, type: !1513, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10686)
!10686 = !{!10687, !10688, !10689}
!10687 = !DILocalVariable(name: "dev", arg: 1, scope: !10685, file: !1602, line: 509, type: !1475)
!10688 = !DILocalVariable(name: "cfg", arg: 2, scope: !10685, file: !1602, line: 510, type: !1515)
!10689 = !DILocalVariable(name: "data", scope: !10685, file: !1602, line: 512, type: !10605)
!10690 = !DILocation(line: 0, scope: !10685)
!10691 = !DILocation(line: 512, column: 38, scope: !10685)
!10692 = !DILocation(line: 514, column: 24, scope: !10685)
!10693 = !DILocation(line: 514, column: 7, scope: !10685)
!10694 = !DILocation(line: 514, column: 16, scope: !10685)
!10695 = !DILocation(line: 515, column: 41, scope: !10685)
!10696 = !{i32 0, i32 1537}
!10697 = !DILocation(line: 515, column: 16, scope: !10685)
!10698 = !DILocation(line: 515, column: 7, scope: !10685)
!10699 = !DILocation(line: 515, column: 14, scope: !10685)
!10700 = !DILocation(line: 517, column: 3, scope: !10685)
!10701 = !{i32 0, i32 12289}
!10702 = !DILocation(line: 516, column: 19, scope: !10685)
!10703 = !DILocation(line: 516, column: 7, scope: !10685)
!10704 = !DILocation(line: 516, column: 17, scope: !10685)
!10705 = !DILocation(line: 519, column: 3, scope: !10685)
!10706 = !DILocation(line: 519, column: 33, scope: !10685)
!10707 = !DILocation(line: 518, column: 19, scope: !10685)
!10708 = !DILocation(line: 518, column: 7, scope: !10685)
!10709 = !DILocation(line: 518, column: 17, scope: !10685)
!10710 = !DILocation(line: 521, column: 3, scope: !10685)
!10711 = !{i32 0, i32 769}
!10712 = !DILocation(line: 520, column: 19, scope: !10685)
!10713 = !DILocation(line: 520, column: 7, scope: !10685)
!10714 = !DILocation(line: 520, column: 17, scope: !10685)
!10715 = !DILocation(line: 522, column: 2, scope: !10685)
!10716 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1602, file: !1602, line: 661, type: !1518, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10717)
!10717 = !{!10718, !10719, !10720, !10721, !10722, !10723}
!10718 = !DILocalVariable(name: "dev", arg: 1, scope: !10716, file: !1602, line: 661, type: !1475)
!10719 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10716, file: !1602, line: 662, type: !255)
!10720 = !DILocalVariable(name: "size", arg: 3, scope: !10716, file: !1602, line: 663, type: !103)
!10721 = !DILocalVariable(name: "config", scope: !10716, file: !1602, line: 665, type: !10482)
!10722 = !DILocalVariable(name: "num_tx", scope: !10716, file: !1602, line: 666, type: !154)
!10723 = !DILocalVariable(name: "key", scope: !10716, file: !1602, line: 667, type: !32)
!10724 = !DILocation(line: 0, scope: !10716)
!10725 = !DILocation(line: 665, column: 48, scope: !10716)
!10726 = !DILocation(line: 669, column: 41, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10716, file: !1602, line: 669, column: 6)
!10728 = !DILocation(line: 669, column: 7, scope: !10727)
!10729 = !DILocation(line: 669, column: 6, scope: !10716)
!10730 = !DILocation(line: 55, column: 2, scope: !10517, inlinedAt: !10731)
!10731 = distinct !DILocation(line: 674, column: 8, scope: !10716)
!10732 = !DILocation(line: 0, scope: !10517, inlinedAt: !10731)
!10733 = !DILocation(line: 676, column: 24, scope: !10716)
!10734 = !DILocation(line: 676, column: 29, scope: !10716)
!10735 = !DILocation(line: 677, column: 43, scope: !10716)
!10736 = !DILocation(line: 677, column: 9, scope: !10716)
!10737 = !DILocation(line: 676, column: 2, scope: !10716)
!10738 = !DILocation(line: 681, column: 34, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10716, file: !1602, line: 677, column: 51)
!10740 = !DILocation(line: 681, column: 55, scope: !10739)
!10741 = !DILocation(line: 681, column: 41, scope: !10739)
!10742 = !DILocation(line: 681, column: 3, scope: !10739)
!10743 = !DILocation(line: 676, column: 17, scope: !10716)
!10744 = distinct !{!10744, !10737, !10745}
!10745 = !DILocation(line: 682, column: 2, scope: !10716)
!10746 = !DILocation(line: 0, scope: !10530, inlinedAt: !10747)
!10747 = distinct !DILocation(line: 684, column: 2, scope: !10716)
!10748 = !DILocation(line: 95, column: 2, scope: !10530, inlinedAt: !10747)
!10749 = !DILocation(line: 686, column: 2, scope: !10716)
!10750 = !DILocation(line: 687, column: 1, scope: !10716)
!10751 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1602, file: !1602, line: 689, type: !1522, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10752)
!10752 = !{!10753, !10754, !10755, !10756, !10757}
!10753 = !DILocalVariable(name: "dev", arg: 1, scope: !10751, file: !1602, line: 689, type: !1475)
!10754 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10751, file: !1602, line: 689, type: !261)
!10755 = !DILocalVariable(name: "size", arg: 3, scope: !10751, file: !1602, line: 690, type: !262)
!10756 = !DILocalVariable(name: "config", scope: !10751, file: !1602, line: 692, type: !10482)
!10757 = !DILocalVariable(name: "num_rx", scope: !10751, file: !1602, line: 693, type: !154)
!10758 = !DILocation(line: 0, scope: !10751)
!10759 = !DILocation(line: 692, column: 48, scope: !10751)
!10760 = !DILocation(line: 696, column: 44, scope: !10751)
!10761 = !DILocation(line: 695, column: 24, scope: !10751)
!10762 = !DILocation(line: 695, column: 29, scope: !10751)
!10763 = !DILocation(line: 696, column: 9, scope: !10751)
!10764 = !DILocation(line: 695, column: 2, scope: !10751)
!10765 = !DILocation(line: 700, column: 53, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10751, file: !1602, line: 696, column: 52)
!10767 = !DILocation(line: 700, column: 23, scope: !10766)
!10768 = !DILocation(line: 700, column: 17, scope: !10766)
!10769 = !DILocation(line: 700, column: 3, scope: !10766)
!10770 = !DILocation(line: 700, column: 21, scope: !10766)
!10771 = !DILocation(line: 703, column: 41, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10766, file: !1602, line: 703, column: 7)
!10773 = !DILocation(line: 703, column: 7, scope: !10772)
!10774 = !DILocation(line: 703, column: 7, scope: !10766)
!10775 = !DILocation(line: 704, column: 35, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10772, file: !1602, line: 703, column: 49)
!10777 = !DILocation(line: 704, column: 4, scope: !10776)
!10778 = !DILocation(line: 709, column: 3, scope: !10776)
!10779 = !DILocation(line: 695, column: 17, scope: !10751)
!10780 = distinct !{!10780, !10764, !10781}
!10781 = !DILocation(line: 710, column: 2, scope: !10751)
!10782 = !DILocation(line: 712, column: 2, scope: !10751)
!10783 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1602, file: !1602, line: 715, type: !1526, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10784)
!10784 = !{!10785, !10786}
!10785 = !DILocalVariable(name: "dev", arg: 1, scope: !10783, file: !1602, line: 715, type: !1475)
!10786 = !DILocalVariable(name: "config", scope: !10783, file: !1602, line: 717, type: !10482)
!10787 = !DILocation(line: 0, scope: !10783)
!10788 = !DILocation(line: 717, column: 48, scope: !10783)
!10789 = !DILocation(line: 729, column: 31, scope: !10783)
!10790 = !DILocation(line: 729, column: 2, scope: !10783)
!10791 = !DILocation(line: 734, column: 1, scope: !10783)
!10792 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1602, file: !1602, line: 736, type: !1526, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10793)
!10793 = !{!10794, !10795}
!10794 = !DILocalVariable(name: "dev", arg: 1, scope: !10792, file: !1602, line: 736, type: !1475)
!10795 = !DILocalVariable(name: "config", scope: !10792, file: !1602, line: 738, type: !10482)
!10796 = !DILocation(line: 0, scope: !10792)
!10797 = !DILocation(line: 738, column: 48, scope: !10792)
!10798 = !DILocation(line: 746, column: 32, scope: !10792)
!10799 = !DILocation(line: 746, column: 2, scope: !10792)
!10800 = !DILocation(line: 756, column: 1, scope: !10792)
!10801 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1602, file: !1602, line: 758, type: !1496, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10802)
!10802 = !{!10803, !10804}
!10803 = !DILocalVariable(name: "dev", arg: 1, scope: !10801, file: !1602, line: 758, type: !1475)
!10804 = !DILocalVariable(name: "config", scope: !10801, file: !1602, line: 760, type: !10482)
!10805 = !DILocation(line: 0, scope: !10801)
!10806 = !DILocation(line: 760, column: 48, scope: !10801)
!10807 = !DILocation(line: 762, column: 43, scope: !10801)
!10808 = !DILocation(line: 762, column: 9, scope: !10801)
!10809 = !DILocation(line: 762, column: 50, scope: !10801)
!10810 = !DILocation(line: 763, column: 35, scope: !10801)
!10811 = !DILocation(line: 763, column: 3, scope: !10801)
!10812 = !DILocation(line: 762, column: 2, scope: !10801)
!10813 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1602, file: !1602, line: 773, type: !1526, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10814)
!10814 = !{!10815, !10816}
!10815 = !DILocalVariable(name: "dev", arg: 1, scope: !10813, file: !1602, line: 773, type: !1475)
!10816 = !DILocalVariable(name: "config", scope: !10813, file: !1602, line: 775, type: !10482)
!10817 = !DILocation(line: 0, scope: !10813)
!10818 = !DILocation(line: 775, column: 48, scope: !10813)
!10819 = !DILocation(line: 777, column: 33, scope: !10813)
!10820 = !DILocation(line: 777, column: 2, scope: !10813)
!10821 = !DILocation(line: 778, column: 1, scope: !10813)
!10822 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1602, file: !1602, line: 780, type: !1526, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10823)
!10823 = !{!10824, !10825}
!10824 = !DILocalVariable(name: "dev", arg: 1, scope: !10822, file: !1602, line: 780, type: !1475)
!10825 = !DILocalVariable(name: "config", scope: !10822, file: !1602, line: 782, type: !10482)
!10826 = !DILocation(line: 0, scope: !10822)
!10827 = !DILocation(line: 782, column: 48, scope: !10822)
!10828 = !DILocation(line: 784, column: 34, scope: !10822)
!10829 = !DILocation(line: 784, column: 2, scope: !10822)
!10830 = !DILocation(line: 785, column: 1, scope: !10822)
!10831 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1602, file: !1602, line: 766, type: !1496, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10832)
!10832 = !{!10833, !10834}
!10833 = !DILocalVariable(name: "dev", arg: 1, scope: !10831, file: !1602, line: 766, type: !1475)
!10834 = !DILocalVariable(name: "config", scope: !10831, file: !1602, line: 768, type: !10482)
!10835 = !DILocation(line: 0, scope: !10831)
!10836 = !DILocation(line: 768, column: 48, scope: !10831)
!10837 = !DILocation(line: 770, column: 42, scope: !10831)
!10838 = !DILocation(line: 770, column: 9, scope: !10831)
!10839 = !DILocation(line: 770, column: 2, scope: !10831)
!10840 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1602, file: !1602, line: 787, type: !1496, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10841)
!10841 = !{!10842, !10843}
!10842 = !DILocalVariable(name: "dev", arg: 1, scope: !10840, file: !1602, line: 787, type: !1475)
!10843 = !DILocalVariable(name: "config", scope: !10840, file: !1602, line: 789, type: !10482)
!10844 = !DILocation(line: 0, scope: !10840)
!10845 = !DILocation(line: 789, column: 48, scope: !10840)
!10846 = !DILocation(line: 794, column: 44, scope: !10840)
!10847 = !DILocation(line: 794, column: 9, scope: !10840)
!10848 = !DILocation(line: 794, column: 2, scope: !10840)
!10849 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1602, file: !1602, line: 797, type: !1526, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10850)
!10850 = !{!10851, !10852}
!10851 = !DILocalVariable(name: "dev", arg: 1, scope: !10849, file: !1602, line: 797, type: !1475)
!10852 = !DILocalVariable(name: "config", scope: !10849, file: !1602, line: 799, type: !10482)
!10853 = !DILocation(line: 0, scope: !10849)
!10854 = !DILocation(line: 799, column: 48, scope: !10849)
!10855 = !DILocation(line: 802, column: 34, scope: !10849)
!10856 = !DILocation(line: 802, column: 2, scope: !10849)
!10857 = !DILocation(line: 805, column: 6, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10849, file: !1602, line: 805, column: 6)
!10859 = !DILocation(line: 806, column: 3, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10858, file: !1602, line: 805, column: 43)
!10861 = !DILocation(line: 810, column: 31, scope: !10849)
!10862 = !DILocation(line: 807, column: 2, scope: !10860)
!10863 = !DILocation(line: 810, column: 2, scope: !10849)
!10864 = !DILocation(line: 811, column: 1, scope: !10849)
!10865 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1602, file: !1602, line: 813, type: !1526, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10866)
!10866 = !{!10867, !10868}
!10867 = !DILocalVariable(name: "dev", arg: 1, scope: !10865, file: !1602, line: 813, type: !1475)
!10868 = !DILocalVariable(name: "config", scope: !10865, file: !1602, line: 815, type: !10482)
!10869 = !DILocation(line: 0, scope: !10865)
!10870 = !DILocation(line: 815, column: 48, scope: !10865)
!10871 = !DILocation(line: 818, column: 35, scope: !10865)
!10872 = !DILocation(line: 818, column: 2, scope: !10865)
!10873 = !DILocation(line: 821, column: 6, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10865, file: !1602, line: 821, column: 6)
!10875 = !DILocation(line: 822, column: 3, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10874, file: !1602, line: 821, column: 43)
!10877 = !DILocation(line: 826, column: 32, scope: !10865)
!10878 = !DILocation(line: 823, column: 2, scope: !10876)
!10879 = !DILocation(line: 826, column: 2, scope: !10865)
!10880 = !DILocation(line: 827, column: 1, scope: !10865)
!10881 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1602, file: !1602, line: 829, type: !1496, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10882)
!10882 = !{!10883, !10884}
!10883 = !DILocalVariable(name: "dev", arg: 1, scope: !10881, file: !1602, line: 829, type: !1475)
!10884 = !DILocalVariable(name: "config", scope: !10881, file: !1602, line: 831, type: !10482)
!10885 = !DILocation(line: 0, scope: !10881)
!10886 = !DILocation(line: 831, column: 48, scope: !10881)
!10887 = !DILocation(line: 833, column: 46, scope: !10881)
!10888 = !DILocation(line: 833, column: 11, scope: !10881)
!10889 = !DILocation(line: 833, column: 53, scope: !10881)
!10890 = !DILocation(line: 834, column: 38, scope: !10881)
!10891 = !DILocation(line: 834, column: 4, scope: !10881)
!10892 = !DILocation(line: 834, column: 46, scope: !10881)
!10893 = !DILocation(line: 835, column: 37, scope: !10881)
!10894 = !DILocation(line: 835, column: 4, scope: !10881)
!10895 = !DILocation(line: 835, column: 44, scope: !10881)
!10896 = !DILocation(line: 836, column: 36, scope: !10881)
!10897 = !DILocation(line: 836, column: 4, scope: !10881)
!10898 = !DILocation(line: 833, column: 2, scope: !10881)
!10899 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1602, file: !1602, line: 839, type: !1496, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10900)
!10900 = !{!10901}
!10901 = !DILocalVariable(name: "dev", arg: 1, scope: !10899, file: !1602, line: 839, type: !1475)
!10902 = !DILocation(line: 0, scope: !10899)
!10903 = !DILocation(line: 841, column: 2, scope: !10899)
!10904 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1602, file: !1602, line: 844, type: !1540, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10905)
!10905 = !{!10906, !10907, !10908, !10909}
!10906 = !DILocalVariable(name: "dev", arg: 1, scope: !10904, file: !1602, line: 844, type: !1475)
!10907 = !DILocalVariable(name: "cb", arg: 2, scope: !10904, file: !1602, line: 845, type: !1542)
!10908 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10904, file: !1602, line: 846, type: !102)
!10909 = !DILocalVariable(name: "data", scope: !10904, file: !1602, line: 848, type: !10605)
!10910 = !DILocation(line: 0, scope: !10904)
!10911 = !DILocation(line: 848, column: 38, scope: !10904)
!10912 = !DILocation(line: 850, column: 8, scope: !10904)
!10913 = !DILocation(line: 850, column: 16, scope: !10904)
!10914 = !DILocation(line: 851, column: 8, scope: !10904)
!10915 = !DILocation(line: 851, column: 18, scope: !10904)
!10916 = !DILocation(line: 852, column: 1, scope: !10904)
!10917 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10918, file: !10918, line: 1792, type: !10919, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10921)
!10918 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10919 = !DISubroutineType(types: !10920)
!10920 = !{!121, !1546}
!10921 = !{!10922}
!10922 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10917, file: !10918, line: 1792, type: !1546)
!10923 = !DILocation(line: 0, scope: !10917)
!10924 = !DILocation(line: 1794, column: 11, scope: !10917)
!10925 = !DILocation(line: 1794, column: 47, scope: !10917)
!10926 = !DILocation(line: 1794, column: 3, scope: !10917)
!10927 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10918, file: !10918, line: 2227, type: !10919, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10928)
!10928 = !{!10929}
!10929 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10927, file: !10918, line: 2227, type: !1546)
!10930 = !DILocation(line: 0, scope: !10927)
!10931 = !DILocation(line: 2229, column: 11, scope: !10927)
!10932 = !DILocation(line: 2229, column: 51, scope: !10927)
!10933 = !DILocation(line: 2229, column: 3, scope: !10927)
!10934 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10918, file: !10918, line: 1803, type: !10919, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10935)
!10935 = !{!10936}
!10936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10934, file: !10918, line: 1803, type: !1546)
!10937 = !DILocation(line: 0, scope: !10934)
!10938 = !DILocation(line: 1805, column: 11, scope: !10934)
!10939 = !DILocation(line: 1805, column: 45, scope: !10934)
!10940 = !DILocation(line: 1805, column: 3, scope: !10934)
!10941 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10918, file: !10918, line: 2238, type: !10919, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10942)
!10942 = !{!10943}
!10943 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10941, file: !10918, line: 2238, type: !1546)
!10944 = !DILocation(line: 0, scope: !10941)
!10945 = !DILocation(line: 2240, column: 11, scope: !10941)
!10946 = !DILocation(line: 2240, column: 49, scope: !10941)
!10947 = !DILocation(line: 2240, column: 3, scope: !10941)
!10948 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10918, file: !10918, line: 2192, type: !10949, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10951)
!10949 = !DISubroutineType(types: !10950)
!10950 = !{null, !1546}
!10951 = !{!10952, !10953}
!10952 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10948, file: !10918, line: 2192, type: !1546)
!10953 = !DILocalVariable(name: "val", scope: !10954, file: !10918, line: 2194, type: !121)
!10954 = distinct !DILexicalBlock(scope: !10948, file: !10918, line: 2194, column: 3)
!10955 = !DILocation(line: 0, scope: !10948)
!10956 = !DILocation(line: 2194, column: 3, scope: !10954)
!10957 = !DILocalVariable(name: "addr", arg: 1, scope: !10958, file: !6825, line: 476, type: !1598)
!10958 = distinct !DISubprogram(name: "__LDREXW", scope: !6825, file: !6825, line: 476, type: !10959, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10961)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{!121, !1598}
!10961 = !{!10957, !10962}
!10962 = !DILocalVariable(name: "result", scope: !10958, file: !6825, line: 478, type: !121)
!10963 = !DILocation(line: 0, scope: !10958, inlinedAt: !10964)
!10964 = distinct !DILocation(line: 2194, column: 3, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10954, file: !10918, line: 2194, column: 3)
!10966 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !10964)
!10967 = !{i64 3527673}
!10968 = !DILocation(line: 2194, column: 3, scope: !10965)
!10969 = !DILocation(line: 0, scope: !10954)
!10970 = !DILocalVariable(name: "value", arg: 1, scope: !10971, file: !6825, line: 527, type: !121)
!10971 = distinct !DISubprogram(name: "__STREXW", scope: !6825, file: !6825, line: 527, type: !10972, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10974)
!10972 = !DISubroutineType(types: !10973)
!10973 = !{!121, !121, !1598}
!10974 = !{!10970, !10975, !10976}
!10975 = !DILocalVariable(name: "addr", arg: 2, scope: !10971, file: !6825, line: 527, type: !1598)
!10976 = !DILocalVariable(name: "result", scope: !10971, file: !6825, line: 529, type: !121)
!10977 = !DILocation(line: 0, scope: !10971, inlinedAt: !10978)
!10978 = distinct !DILocation(line: 2194, column: 3, scope: !10954)
!10979 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !10978)
!10980 = !{i64 3529109}
!10981 = distinct !{!10981, !10956, !10956}
!10982 = !DILocation(line: 2195, column: 1, scope: !10948)
!10983 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10918, file: !10918, line: 2177, type: !10949, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10984)
!10984 = !{!10985}
!10985 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10983, file: !10918, line: 2177, type: !1546)
!10986 = !DILocation(line: 0, scope: !10983)
!10987 = !DILocation(line: 2179, column: 3, scope: !10983)
!10988 = !DILocation(line: 2180, column: 1, scope: !10983)
!10989 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10918, file: !10918, line: 2164, type: !10949, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !10990)
!10990 = !{!10991, !10992}
!10991 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10989, file: !10918, line: 2164, type: !1546)
!10992 = !DILocalVariable(name: "val", scope: !10993, file: !10918, line: 2166, type: !121)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !10918, line: 2166, column: 3)
!10994 = !DILocation(line: 0, scope: !10989)
!10995 = !DILocation(line: 2166, column: 3, scope: !10993)
!10996 = !DILocation(line: 0, scope: !10958, inlinedAt: !10997)
!10997 = distinct !DILocation(line: 2166, column: 3, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !10918, line: 2166, column: 3)
!10999 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !10997)
!11000 = !DILocation(line: 2166, column: 3, scope: !10998)
!11001 = !DILocation(line: 0, scope: !10993)
!11002 = !DILocation(line: 0, scope: !10971, inlinedAt: !11003)
!11003 = distinct !DILocation(line: 2166, column: 3, scope: !10993)
!11004 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11003)
!11005 = distinct !{!11005, !10995, !10995}
!11006 = !DILocation(line: 2167, column: 1, scope: !10989)
!11007 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10918, file: !10918, line: 2096, type: !10949, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11008)
!11008 = !{!11009, !11010}
!11009 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11007, file: !10918, line: 2096, type: !1546)
!11010 = !DILocalVariable(name: "val", scope: !11011, file: !10918, line: 2098, type: !121)
!11011 = distinct !DILexicalBlock(scope: !11007, file: !10918, line: 2098, column: 3)
!11012 = !DILocation(line: 0, scope: !11007)
!11013 = !DILocation(line: 2098, column: 3, scope: !11011)
!11014 = !DILocation(line: 0, scope: !10958, inlinedAt: !11015)
!11015 = distinct !DILocation(line: 2098, column: 3, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11011, file: !10918, line: 2098, column: 3)
!11017 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11015)
!11018 = !DILocation(line: 2098, column: 3, scope: !11016)
!11019 = !DILocation(line: 0, scope: !11011)
!11020 = !DILocation(line: 0, scope: !10971, inlinedAt: !11021)
!11021 = distinct !DILocation(line: 2098, column: 3, scope: !11011)
!11022 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11021)
!11023 = distinct !{!11023, !11013, !11013}
!11024 = !DILocation(line: 2099, column: 1, scope: !11007)
!11025 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10918, file: !10918, line: 2081, type: !10949, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11026)
!11026 = !{!11027}
!11027 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11025, file: !10918, line: 2081, type: !1546)
!11028 = !DILocation(line: 0, scope: !11025)
!11029 = !DILocation(line: 2083, column: 3, scope: !11025)
!11030 = !DILocation(line: 2084, column: 1, scope: !11025)
!11031 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10918, file: !10918, line: 2068, type: !10949, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11032)
!11032 = !{!11033, !11034}
!11033 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11031, file: !10918, line: 2068, type: !1546)
!11034 = !DILocalVariable(name: "val", scope: !11035, file: !10918, line: 2070, type: !121)
!11035 = distinct !DILexicalBlock(scope: !11031, file: !10918, line: 2070, column: 3)
!11036 = !DILocation(line: 0, scope: !11031)
!11037 = !DILocation(line: 2070, column: 3, scope: !11035)
!11038 = !DILocation(line: 0, scope: !10958, inlinedAt: !11039)
!11039 = distinct !DILocation(line: 2070, column: 3, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11035, file: !10918, line: 2070, column: 3)
!11041 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11039)
!11042 = !DILocation(line: 2070, column: 3, scope: !11040)
!11043 = !DILocation(line: 0, scope: !11035)
!11044 = !DILocation(line: 0, scope: !10971, inlinedAt: !11045)
!11045 = distinct !DILocation(line: 2070, column: 3, scope: !11035)
!11046 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11045)
!11047 = distinct !{!11047, !11037, !11037}
!11048 = !DILocation(line: 2071, column: 1, scope: !11031)
!11049 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10918, file: !10918, line: 2131, type: !10949, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11050)
!11050 = !{!11051, !11052}
!11051 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11049, file: !10918, line: 2131, type: !1546)
!11052 = !DILocalVariable(name: "val", scope: !11053, file: !10918, line: 2133, type: !121)
!11053 = distinct !DILexicalBlock(scope: !11049, file: !10918, line: 2133, column: 3)
!11054 = !DILocation(line: 0, scope: !11049)
!11055 = !DILocation(line: 2133, column: 3, scope: !11053)
!11056 = !DILocation(line: 0, scope: !10958, inlinedAt: !11057)
!11057 = distinct !DILocation(line: 2133, column: 3, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11053, file: !10918, line: 2133, column: 3)
!11059 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11057)
!11060 = !DILocation(line: 2133, column: 3, scope: !11058)
!11061 = !DILocation(line: 0, scope: !11053)
!11062 = !DILocation(line: 0, scope: !10971, inlinedAt: !11063)
!11063 = distinct !DILocation(line: 2133, column: 3, scope: !11053)
!11064 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11063)
!11065 = distinct !{!11065, !11055, !11055}
!11066 = !DILocation(line: 2134, column: 1, scope: !11049)
!11067 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10918, file: !10918, line: 2035, type: !10949, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11068)
!11068 = !{!11069, !11070}
!11069 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11067, file: !10918, line: 2035, type: !1546)
!11070 = !DILocalVariable(name: "val", scope: !11071, file: !10918, line: 2037, type: !121)
!11071 = distinct !DILexicalBlock(scope: !11067, file: !10918, line: 2037, column: 3)
!11072 = !DILocation(line: 0, scope: !11067)
!11073 = !DILocation(line: 2037, column: 3, scope: !11071)
!11074 = !DILocation(line: 0, scope: !10958, inlinedAt: !11075)
!11075 = distinct !DILocation(line: 2037, column: 3, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11071, file: !10918, line: 2037, column: 3)
!11077 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11075)
!11078 = !DILocation(line: 2037, column: 3, scope: !11076)
!11079 = !DILocation(line: 0, scope: !11071)
!11080 = !DILocation(line: 0, scope: !10971, inlinedAt: !11081)
!11081 = distinct !DILocation(line: 2037, column: 3, scope: !11071)
!11082 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11081)
!11083 = distinct !{!11083, !11073, !11073}
!11084 = !DILocation(line: 2038, column: 1, scope: !11067)
!11085 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10918, file: !10918, line: 1814, type: !10919, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11086)
!11086 = !{!11087}
!11087 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11085, file: !10918, line: 1814, type: !1546)
!11088 = !DILocation(line: 0, scope: !11085)
!11089 = !DILocation(line: 1816, column: 11, scope: !11085)
!11090 = !DILocation(line: 1816, column: 46, scope: !11085)
!11091 = !DILocation(line: 1816, column: 3, scope: !11085)
!11092 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10918, file: !10918, line: 2142, type: !10949, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11093)
!11093 = !{!11094, !11095}
!11094 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11092, file: !10918, line: 2142, type: !1546)
!11095 = !DILocalVariable(name: "val", scope: !11096, file: !10918, line: 2144, type: !121)
!11096 = distinct !DILexicalBlock(scope: !11092, file: !10918, line: 2144, column: 3)
!11097 = !DILocation(line: 0, scope: !11092)
!11098 = !DILocation(line: 2144, column: 3, scope: !11096)
!11099 = !DILocation(line: 0, scope: !10958, inlinedAt: !11100)
!11100 = distinct !DILocation(line: 2144, column: 3, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11096, file: !10918, line: 2144, column: 3)
!11102 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11100)
!11103 = !DILocation(line: 2144, column: 3, scope: !11101)
!11104 = !DILocation(line: 0, scope: !11096)
!11105 = !DILocation(line: 0, scope: !10971, inlinedAt: !11106)
!11106 = distinct !DILocation(line: 2144, column: 3, scope: !11096)
!11107 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11106)
!11108 = distinct !{!11108, !11098, !11098}
!11109 = !DILocation(line: 2145, column: 1, scope: !11092)
!11110 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10918, file: !10918, line: 2046, type: !10949, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11111)
!11111 = !{!11112, !11113}
!11112 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11110, file: !10918, line: 2046, type: !1546)
!11113 = !DILocalVariable(name: "val", scope: !11114, file: !10918, line: 2048, type: !121)
!11114 = distinct !DILexicalBlock(scope: !11110, file: !10918, line: 2048, column: 3)
!11115 = !DILocation(line: 0, scope: !11110)
!11116 = !DILocation(line: 2048, column: 3, scope: !11114)
!11117 = !DILocation(line: 0, scope: !10958, inlinedAt: !11118)
!11118 = distinct !DILocation(line: 2048, column: 3, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11114, file: !10918, line: 2048, column: 3)
!11120 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11118)
!11121 = !DILocation(line: 2048, column: 3, scope: !11119)
!11122 = !DILocation(line: 0, scope: !11114)
!11123 = !DILocation(line: 0, scope: !10971, inlinedAt: !11124)
!11124 = distinct !DILocation(line: 2048, column: 3, scope: !11114)
!11125 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11124)
!11126 = distinct !{!11126, !11116, !11116}
!11127 = !DILocation(line: 2049, column: 1, scope: !11110)
!11128 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10918, file: !10918, line: 2403, type: !11129, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11131)
!11129 = !DISubroutineType(types: !11130)
!11130 = !{!154, !1546}
!11131 = !{!11132}
!11132 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11128, file: !10918, line: 2403, type: !1546)
!11133 = !DILocation(line: 0, scope: !11128)
!11134 = !DILocation(line: 2405, column: 20, scope: !11128)
!11135 = !DILocation(line: 2405, column: 10, scope: !11128)
!11136 = !DILocation(line: 2405, column: 3, scope: !11128)
!11137 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10918, file: !10918, line: 1770, type: !10919, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11138)
!11138 = !{!11139}
!11139 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11137, file: !10918, line: 1770, type: !1546)
!11140 = !DILocation(line: 0, scope: !11137)
!11141 = !DILocation(line: 1772, column: 11, scope: !11137)
!11142 = !DILocation(line: 1772, column: 46, scope: !11137)
!11143 = !DILocation(line: 1772, column: 3, scope: !11137)
!11144 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10918, file: !10918, line: 1934, type: !10949, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11145)
!11145 = !{!11146, !11147}
!11146 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11144, file: !10918, line: 1934, type: !1546)
!11147 = !DILocalVariable(name: "tmpreg", scope: !11144, file: !10918, line: 1936, type: !120)
!11148 = !DILocation(line: 0, scope: !11144)
!11149 = !DILocation(line: 1936, column: 3, scope: !11144)
!11150 = !DILocation(line: 1936, column: 17, scope: !11144)
!11151 = !DILocation(line: 1937, column: 20, scope: !11144)
!11152 = !DILocation(line: 1937, column: 10, scope: !11144)
!11153 = !DILocation(line: 1938, column: 10, scope: !11144)
!11154 = !DILocation(line: 1939, column: 20, scope: !11144)
!11155 = !DILocation(line: 1939, column: 10, scope: !11144)
!11156 = !DILocation(line: 1940, column: 10, scope: !11144)
!11157 = !DILocation(line: 1941, column: 1, scope: !11144)
!11158 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10918, file: !10918, line: 2426, type: !11159, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11161)
!11159 = !DISubroutineType(types: !11160)
!11160 = !{null, !1546, !154}
!11161 = !{!11162, !11163}
!11162 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11158, file: !10918, line: 2426, type: !1546)
!11163 = !DILocalVariable(name: "Value", arg: 2, scope: !11158, file: !10918, line: 2426, type: !154)
!11164 = !DILocation(line: 0, scope: !11158)
!11165 = !DILocation(line: 2428, column: 16, scope: !11158)
!11166 = !DILocation(line: 2428, column: 11, scope: !11158)
!11167 = !DILocation(line: 2428, column: 14, scope: !11158)
!11168 = !DILocation(line: 2429, column: 1, scope: !11158)
!11169 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1602, file: !1602, line: 205, type: !11170, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11172)
!11170 = !DISubroutineType(types: !11171)
!11171 = !{!121, !1475}
!11172 = !{!11173, !11174}
!11173 = !DILocalVariable(name: "dev", arg: 1, scope: !11169, file: !1602, line: 205, type: !1475)
!11174 = !DILocalVariable(name: "config", scope: !11169, file: !1602, line: 207, type: !10482)
!11175 = !DILocation(line: 0, scope: !11169)
!11176 = !DILocation(line: 207, column: 48, scope: !11169)
!11177 = !DILocation(line: 209, column: 36, scope: !11169)
!11178 = !DILocation(line: 209, column: 9, scope: !11169)
!11179 = !DILocation(line: 209, column: 2, scope: !11169)
!11180 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1602, file: !1602, line: 270, type: !11181, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11183)
!11181 = !DISubroutineType(types: !11182)
!11182 = !{!1441, !121}
!11183 = !{!11184}
!11184 = !DILocalVariable(name: "parity", arg: 1, scope: !11180, file: !1602, line: 270, type: !121)
!11185 = !DILocation(line: 0, scope: !11180)
!11186 = !DILocation(line: 272, column: 2, scope: !11180)
!11187 = !DILocation(line: 281, column: 1, scope: !11180)
!11188 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1602, file: !1602, line: 220, type: !11170, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11189)
!11189 = !{!11190, !11191}
!11190 = !DILocalVariable(name: "dev", arg: 1, scope: !11188, file: !1602, line: 220, type: !1475)
!11191 = !DILocalVariable(name: "config", scope: !11188, file: !1602, line: 222, type: !10482)
!11192 = !DILocation(line: 0, scope: !11188)
!11193 = !DILocation(line: 222, column: 48, scope: !11188)
!11194 = !DILocation(line: 224, column: 44, scope: !11188)
!11195 = !DILocation(line: 224, column: 9, scope: !11188)
!11196 = !DILocation(line: 224, column: 2, scope: !11188)
!11197 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1602, file: !1602, line: 304, type: !11198, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11200)
!11198 = !DISubroutineType(types: !11199)
!11199 = !{!1455, !121}
!11200 = !{!11201}
!11201 = !DILocalVariable(name: "sb", arg: 1, scope: !11197, file: !1602, line: 304, type: !121)
!11202 = !DILocation(line: 0, scope: !11197)
!11203 = !DILocation(line: 306, column: 2, scope: !11197)
!11204 = !DILocation(line: 0, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11197, file: !1602, line: 306, column: 14)
!11206 = !DILocation(line: 323, column: 1, scope: !11197)
!11207 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1602, file: !1602, line: 235, type: !11170, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11208)
!11208 = !{!11209, !11210}
!11209 = !DILocalVariable(name: "dev", arg: 1, scope: !11207, file: !1602, line: 235, type: !1475)
!11210 = !DILocalVariable(name: "config", scope: !11207, file: !1602, line: 237, type: !10482)
!11211 = !DILocation(line: 0, scope: !11207)
!11212 = !DILocation(line: 237, column: 48, scope: !11207)
!11213 = !DILocation(line: 239, column: 39, scope: !11207)
!11214 = !DILocation(line: 239, column: 9, scope: !11207)
!11215 = !DILocation(line: 239, column: 2, scope: !11207)
!11216 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1602, file: !1602, line: 355, type: !11217, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11219)
!11217 = !DISubroutineType(types: !11218)
!11218 = !{!1448, !121, !121}
!11219 = !{!11220, !11221}
!11220 = !DILocalVariable(name: "db", arg: 1, scope: !11216, file: !1602, line: 355, type: !121)
!11221 = !DILocalVariable(name: "p", arg: 2, scope: !11216, file: !1602, line: 356, type: !121)
!11222 = !DILocation(line: 0, scope: !11216)
!11223 = !DILocation(line: 358, column: 2, scope: !11216)
!11224 = !DILocation(line: 384, column: 1, scope: !11216)
!11225 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1602, file: !1602, line: 250, type: !11170, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11226)
!11226 = !{!11227, !11228}
!11227 = !DILocalVariable(name: "dev", arg: 1, scope: !11225, file: !1602, line: 250, type: !1475)
!11228 = !DILocalVariable(name: "config", scope: !11225, file: !1602, line: 252, type: !10482)
!11229 = !DILocation(line: 0, scope: !11225)
!11230 = !DILocation(line: 252, column: 48, scope: !11225)
!11231 = !DILocation(line: 254, column: 40, scope: !11225)
!11232 = !DILocation(line: 254, column: 9, scope: !11225)
!11233 = !DILocation(line: 254, column: 2, scope: !11225)
!11234 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1602, file: !1602, line: 409, type: !11235, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11237)
!11235 = !DISubroutineType(types: !11236)
!11236 = !{!1461, !121}
!11237 = !{!11238}
!11238 = !DILocalVariable(name: "fc", arg: 1, scope: !11234, file: !1602, line: 409, type: !121)
!11239 = !DILocation(line: 0, scope: !11234)
!11240 = !DILocation(line: 411, column: 9, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11234, file: !1602, line: 411, column: 6)
!11242 = !DILocation(line: 416, column: 1, scope: !11234)
!11243 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10918, file: !10918, line: 967, type: !10919, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11244)
!11244 = !{!11245}
!11245 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11243, file: !10918, line: 967, type: !1546)
!11246 = !DILocation(line: 0, scope: !11243)
!11247 = !DILocation(line: 969, column: 21, scope: !11243)
!11248 = !DILocation(line: 969, column: 3, scope: !11243)
!11249 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10918, file: !10918, line: 601, type: !10919, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11250)
!11250 = !{!11251}
!11251 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11249, file: !10918, line: 601, type: !1546)
!11252 = !DILocation(line: 0, scope: !11249)
!11253 = !DILocation(line: 603, column: 21, scope: !11249)
!11254 = !DILocation(line: 603, column: 3, scope: !11249)
!11255 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10918, file: !10918, line: 820, type: !10919, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11256)
!11256 = !{!11257}
!11257 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11255, file: !10918, line: 820, type: !1546)
!11258 = !DILocation(line: 0, scope: !11255)
!11259 = !DILocation(line: 822, column: 21, scope: !11255)
!11260 = !DILocation(line: 822, column: 3, scope: !11255)
!11261 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10918, file: !10918, line: 547, type: !10919, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11262)
!11262 = !{!11263}
!11263 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11261, file: !10918, line: 547, type: !1546)
!11264 = !DILocation(line: 0, scope: !11261)
!11265 = !DILocation(line: 549, column: 21, scope: !11261)
!11266 = !DILocation(line: 549, column: 3, scope: !11261)
!11267 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1602, file: !1602, line: 257, type: !11268, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11270)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{!121, !1441}
!11270 = !{!11271}
!11271 = !DILocalVariable(name: "parity", arg: 1, scope: !11267, file: !1602, line: 257, type: !1441)
!11272 = !DILocation(line: 0, scope: !11267)
!11273 = !DILocation(line: 259, column: 2, scope: !11267)
!11274 = !DILocation(line: 268, column: 1, scope: !11267)
!11275 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1602, file: !1602, line: 283, type: !11276, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11278)
!11276 = !DISubroutineType(types: !11277)
!11277 = !{!121, !1455}
!11278 = !{!11279}
!11279 = !DILocalVariable(name: "sb", arg: 1, scope: !11275, file: !1602, line: 283, type: !1455)
!11280 = !DILocation(line: 0, scope: !11275)
!11281 = !DILocation(line: 285, column: 2, scope: !11275)
!11282 = !DILocation(line: 0, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11275, file: !1602, line: 285, column: 14)
!11284 = !DILocation(line: 302, column: 1, scope: !11275)
!11285 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1602, file: !1602, line: 325, type: !11286, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11288)
!11286 = !DISubroutineType(types: !11287)
!11287 = !{!121, !1448, !1441}
!11288 = !{!11289, !11290}
!11289 = !DILocalVariable(name: "db", arg: 1, scope: !11285, file: !1602, line: 325, type: !1448)
!11290 = !DILocalVariable(name: "p", arg: 2, scope: !11285, file: !1602, line: 326, type: !1441)
!11291 = !DILocation(line: 0, scope: !11285)
!11292 = !DILocation(line: 328, column: 2, scope: !11285)
!11293 = !DILocation(line: 353, column: 1, scope: !11285)
!11294 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1602, file: !1602, line: 393, type: !11295, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{!121, !1461}
!11297 = !{!11298}
!11298 = !DILocalVariable(name: "fc", arg: 1, scope: !11294, file: !1602, line: 393, type: !1461)
!11299 = !DILocation(line: 0, scope: !11294)
!11300 = !DILocation(line: 395, column: 9, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11294, file: !1602, line: 395, column: 6)
!11302 = !DILocation(line: 400, column: 1, scope: !11294)
!11303 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10918, file: !10918, line: 424, type: !10949, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11304)
!11304 = !{!11305}
!11305 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11303, file: !10918, line: 424, type: !1546)
!11306 = !DILocation(line: 0, scope: !11303)
!11307 = !DILocation(line: 426, column: 3, scope: !11303)
!11308 = !DILocation(line: 427, column: 1, scope: !11303)
!11309 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1602, file: !1602, line: 197, type: !11310, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11312)
!11310 = !DISubroutineType(types: !11311)
!11311 = !{null, !1475, !121}
!11312 = !{!11313, !11314, !11315}
!11313 = !DILocalVariable(name: "dev", arg: 1, scope: !11309, file: !1602, line: 197, type: !1475)
!11314 = !DILocalVariable(name: "parity", arg: 2, scope: !11309, file: !1602, line: 198, type: !121)
!11315 = !DILocalVariable(name: "config", scope: !11309, file: !1602, line: 200, type: !10482)
!11316 = !DILocation(line: 0, scope: !11309)
!11317 = !DILocation(line: 200, column: 48, scope: !11309)
!11318 = !DILocation(line: 202, column: 29, scope: !11309)
!11319 = !DILocation(line: 202, column: 2, scope: !11309)
!11320 = !DILocation(line: 203, column: 1, scope: !11309)
!11321 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1602, file: !1602, line: 212, type: !11310, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11322)
!11322 = !{!11323, !11324, !11325}
!11323 = !DILocalVariable(name: "dev", arg: 1, scope: !11321, file: !1602, line: 212, type: !1475)
!11324 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11321, file: !1602, line: 213, type: !121)
!11325 = !DILocalVariable(name: "config", scope: !11321, file: !1602, line: 215, type: !10482)
!11326 = !DILocation(line: 0, scope: !11321)
!11327 = !DILocation(line: 215, column: 48, scope: !11321)
!11328 = !DILocation(line: 217, column: 37, scope: !11321)
!11329 = !DILocation(line: 217, column: 2, scope: !11321)
!11330 = !DILocation(line: 218, column: 1, scope: !11321)
!11331 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1602, file: !1602, line: 227, type: !11310, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11332)
!11332 = !{!11333, !11334, !11335}
!11333 = !DILocalVariable(name: "dev", arg: 1, scope: !11331, file: !1602, line: 227, type: !1475)
!11334 = !DILocalVariable(name: "databits", arg: 2, scope: !11331, file: !1602, line: 228, type: !121)
!11335 = !DILocalVariable(name: "config", scope: !11331, file: !1602, line: 230, type: !10482)
!11336 = !DILocation(line: 0, scope: !11331)
!11337 = !DILocation(line: 230, column: 48, scope: !11331)
!11338 = !DILocation(line: 232, column: 32, scope: !11331)
!11339 = !DILocation(line: 232, column: 2, scope: !11331)
!11340 = !DILocation(line: 233, column: 1, scope: !11331)
!11341 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1602, file: !1602, line: 242, type: !11310, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11342)
!11342 = !{!11343, !11344, !11345}
!11343 = !DILocalVariable(name: "dev", arg: 1, scope: !11341, file: !1602, line: 242, type: !1475)
!11344 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11341, file: !1602, line: 243, type: !121)
!11345 = !DILocalVariable(name: "config", scope: !11341, file: !1602, line: 245, type: !10482)
!11346 = !DILocation(line: 0, scope: !11341)
!11347 = !DILocation(line: 245, column: 48, scope: !11341)
!11348 = !DILocation(line: 247, column: 33, scope: !11341)
!11349 = !DILocation(line: 247, column: 2, scope: !11341)
!11350 = !DILocation(line: 248, column: 1, scope: !11341)
!11351 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1602, file: !1602, line: 107, type: !11310, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11352)
!11352 = !{!11353, !11354, !11355, !11356, !11357}
!11353 = !DILocalVariable(name: "dev", arg: 1, scope: !11351, file: !1602, line: 107, type: !1475)
!11354 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11351, file: !1602, line: 107, type: !121)
!11355 = !DILocalVariable(name: "config", scope: !11351, file: !1602, line: 109, type: !10482)
!11356 = !DILocalVariable(name: "data", scope: !11351, file: !1602, line: 110, type: !10605)
!11357 = !DILocalVariable(name: "clock_rate", scope: !11351, file: !1602, line: 112, type: !121)
!11358 = !DILocation(line: 0, scope: !11351)
!11359 = !DILocation(line: 109, column: 48, scope: !11351)
!11360 = !DILocation(line: 110, column: 38, scope: !11351)
!11361 = !DILocation(line: 112, column: 2, scope: !11351)
!11362 = !DILocation(line: 123, column: 36, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11364, file: !1602, line: 123, column: 7)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !1602, line: 122, column: 9)
!11365 = distinct !DILexicalBlock(scope: !11351, file: !1602, line: 115, column: 6)
!11366 = !DILocation(line: 124, column: 42, scope: !11363)
!11367 = !DILocation(line: 123, column: 7, scope: !11363)
!11368 = !DILocation(line: 125, column: 22, scope: !11363)
!11369 = !DILocation(line: 123, column: 7, scope: !11364)
!11370 = !DILocation(line: 176, column: 36, scope: !11351)
!11371 = !DILocation(line: 176, column: 3, scope: !11351)
!11372 = !DILocation(line: 179, column: 32, scope: !11351)
!11373 = !DILocation(line: 180, column: 10, scope: !11351)
!11374 = !DILocation(line: 179, column: 3, scope: !11351)
!11375 = !DILocation(line: 195, column: 1, scope: !11351)
!11376 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10918, file: !10918, line: 410, type: !10949, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11377)
!11377 = !{!11378}
!11378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11376, file: !10918, line: 410, type: !1546)
!11379 = !DILocation(line: 0, scope: !11376)
!11380 = !DILocation(line: 412, column: 3, scope: !11376)
!11381 = !DILocation(line: 413, column: 1, scope: !11376)
!11382 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !794, file: !794, line: 216, type: !1579, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11383)
!11383 = !{!11384, !11385, !11386, !11387}
!11384 = !DILocalVariable(name: "dev", arg: 1, scope: !11382, file: !794, line: 216, type: !1475)
!11385 = !DILocalVariable(name: "sys", arg: 2, scope: !11382, file: !794, line: 217, type: !887)
!11386 = !DILocalVariable(name: "rate", arg: 3, scope: !11382, file: !794, line: 218, type: !843)
!11387 = !DILocalVariable(name: "api", scope: !11382, file: !794, line: 220, type: !1557)
!11388 = !DILocation(line: 0, scope: !11382)
!11389 = !DILocation(line: 221, column: 49, scope: !11382)
!11390 = !DILocation(line: 223, column: 11, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11382, file: !794, line: 223, column: 6)
!11392 = !DILocation(line: 223, column: 20, scope: !11391)
!11393 = !DILocation(line: 223, column: 6, scope: !11382)
!11394 = !DILocation(line: 227, column: 9, scope: !11382)
!11395 = !DILocation(line: 227, column: 2, scope: !11382)
!11396 = !DILocation(line: 228, column: 1, scope: !11382)
!11397 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10918, file: !10918, line: 615, type: !11398, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11400)
!11398 = !DISubroutineType(types: !11399)
!11399 = !{null, !1546, !121}
!11400 = !{!11401, !11402}
!11401 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11397, file: !10918, line: 615, type: !1546)
!11402 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11397, file: !10918, line: 615, type: !121)
!11403 = !DILocation(line: 0, scope: !11397)
!11404 = !DILocation(line: 617, column: 3, scope: !11397)
!11405 = !DILocation(line: 618, column: 1, scope: !11397)
!11406 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10918, file: !10918, line: 1020, type: !11407, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11409)
!11407 = !DISubroutineType(types: !11408)
!11408 = !{null, !1546, !121, !121, !121}
!11409 = !{!11410, !11411, !11412, !11413}
!11410 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11406, file: !10918, line: 1020, type: !1546)
!11411 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11406, file: !10918, line: 1020, type: !121)
!11412 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11406, file: !10918, line: 1020, type: !121)
!11413 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11406, file: !10918, line: 1021, type: !121)
!11414 = !DILocation(line: 0, scope: !11406)
!11415 = !DILocation(line: 1029, column: 30, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11417, file: !10918, line: 1028, column: 3)
!11417 = distinct !DILexicalBlock(scope: !11406, file: !10918, line: 1023, column: 7)
!11418 = !DILocation(line: 1029, column: 19, scope: !11416)
!11419 = !DILocation(line: 1029, column: 13, scope: !11416)
!11420 = !DILocation(line: 1029, column: 17, scope: !11416)
!11421 = !DILocation(line: 1031, column: 1, scope: !11406)
!11422 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10918, file: !10918, line: 949, type: !11398, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11423)
!11423 = !{!11424, !11425}
!11424 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11422, file: !10918, line: 949, type: !1546)
!11425 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11422, file: !10918, line: 949, type: !121)
!11426 = !DILocation(line: 0, scope: !11422)
!11427 = !DILocation(line: 951, column: 3, scope: !11422)
!11428 = !DILocation(line: 952, column: 1, scope: !11422)
!11429 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10918, file: !10918, line: 588, type: !11398, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11430)
!11430 = !{!11431, !11432}
!11431 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11429, file: !10918, line: 588, type: !1546)
!11432 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11429, file: !10918, line: 588, type: !121)
!11433 = !DILocation(line: 0, scope: !11429)
!11434 = !DILocation(line: 590, column: 3, scope: !11429)
!11435 = !DILocation(line: 591, column: 1, scope: !11429)
!11436 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10918, file: !10918, line: 805, type: !11398, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11437)
!11437 = !{!11438, !11439}
!11438 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11436, file: !10918, line: 805, type: !1546)
!11439 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11436, file: !10918, line: 805, type: !121)
!11440 = !DILocation(line: 0, scope: !11436)
!11441 = !DILocation(line: 807, column: 3, scope: !11436)
!11442 = !DILocation(line: 808, column: 1, scope: !11436)
!11443 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10918, file: !10918, line: 532, type: !11398, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11444)
!11444 = !{!11445, !11446}
!11445 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11443, file: !10918, line: 532, type: !1546)
!11446 = !DILocalVariable(name: "Parity", arg: 2, scope: !11443, file: !10918, line: 532, type: !121)
!11447 = !DILocation(line: 0, scope: !11443)
!11448 = !DILocation(line: 534, column: 3, scope: !11443)
!11449 = !DILocation(line: 535, column: 1, scope: !11443)
!11450 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10918, file: !10918, line: 1737, type: !10919, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11451)
!11451 = !{!11452}
!11452 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11450, file: !10918, line: 1737, type: !1546)
!11453 = !DILocation(line: 0, scope: !11450)
!11454 = !DILocation(line: 1739, column: 11, scope: !11450)
!11455 = !DILocation(line: 1739, column: 3, scope: !11450)
!11456 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10918, file: !10918, line: 1748, type: !10919, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11457)
!11457 = !{!11458}
!11458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11456, file: !10918, line: 1748, type: !1546)
!11459 = !DILocation(line: 0, scope: !11456)
!11460 = !DILocation(line: 1750, column: 11, scope: !11456)
!11461 = !DILocation(line: 1750, column: 45, scope: !11456)
!11462 = !DILocation(line: 1750, column: 3, scope: !11456)
!11463 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10918, file: !10918, line: 1827, type: !10919, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11464)
!11464 = !{!11465}
!11465 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11463, file: !10918, line: 1827, type: !1546)
!11466 = !DILocation(line: 0, scope: !11463)
!11467 = !DILocation(line: 1829, column: 11, scope: !11463)
!11468 = !DILocation(line: 1829, column: 46, scope: !11463)
!11469 = !DILocation(line: 1829, column: 3, scope: !11463)
!11470 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10918, file: !10918, line: 1992, type: !10949, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11471)
!11471 = !{!11472}
!11472 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11470, file: !10918, line: 1992, type: !1546)
!11473 = !DILocation(line: 0, scope: !11470)
!11474 = !DILocation(line: 1994, column: 3, scope: !11470)
!11475 = !DILocation(line: 1995, column: 1, scope: !11470)
!11476 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10918, file: !10918, line: 1877, type: !10949, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11477)
!11477 = !{!11478, !11479}
!11478 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11476, file: !10918, line: 1877, type: !1546)
!11479 = !DILocalVariable(name: "tmpreg", scope: !11476, file: !10918, line: 1879, type: !120)
!11480 = !DILocation(line: 0, scope: !11476)
!11481 = !DILocation(line: 1879, column: 3, scope: !11476)
!11482 = !DILocation(line: 1879, column: 17, scope: !11476)
!11483 = !DILocation(line: 1880, column: 20, scope: !11476)
!11484 = !DILocation(line: 1880, column: 10, scope: !11476)
!11485 = !DILocation(line: 1881, column: 10, scope: !11476)
!11486 = !DILocation(line: 1882, column: 20, scope: !11476)
!11487 = !DILocation(line: 1882, column: 10, scope: !11476)
!11488 = !DILocation(line: 1883, column: 10, scope: !11476)
!11489 = !DILocation(line: 1884, column: 1, scope: !11476)
!11490 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10918, file: !10918, line: 1896, type: !10949, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11491)
!11491 = !{!11492, !11493}
!11492 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11490, file: !10918, line: 1896, type: !1546)
!11493 = !DILocalVariable(name: "tmpreg", scope: !11490, file: !10918, line: 1898, type: !120)
!11494 = !DILocation(line: 0, scope: !11490)
!11495 = !DILocation(line: 1898, column: 3, scope: !11490)
!11496 = !DILocation(line: 1898, column: 17, scope: !11490)
!11497 = !DILocation(line: 1899, column: 20, scope: !11490)
!11498 = !DILocation(line: 1899, column: 10, scope: !11490)
!11499 = !DILocation(line: 1900, column: 10, scope: !11490)
!11500 = !DILocation(line: 1901, column: 20, scope: !11490)
!11501 = !DILocation(line: 1901, column: 10, scope: !11490)
!11502 = !DILocation(line: 1902, column: 10, scope: !11490)
!11503 = !DILocation(line: 1903, column: 1, scope: !11490)
!11504 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10918, file: !10918, line: 1915, type: !10949, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11505)
!11505 = !{!11506, !11507}
!11506 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11504, file: !10918, line: 1915, type: !1546)
!11507 = !DILocalVariable(name: "tmpreg", scope: !11504, file: !10918, line: 1917, type: !120)
!11508 = !DILocation(line: 0, scope: !11504)
!11509 = !DILocation(line: 1917, column: 3, scope: !11504)
!11510 = !DILocation(line: 1917, column: 17, scope: !11504)
!11511 = !DILocation(line: 1918, column: 20, scope: !11504)
!11512 = !DILocation(line: 1918, column: 10, scope: !11504)
!11513 = !DILocation(line: 1919, column: 10, scope: !11504)
!11514 = !DILocation(line: 1920, column: 20, scope: !11504)
!11515 = !DILocation(line: 1920, column: 10, scope: !11504)
!11516 = !DILocation(line: 1921, column: 10, scope: !11504)
!11517 = !DILocation(line: 1922, column: 1, scope: !11504)
!11518 = !DILocation(line: 0, scope: !1656)
!11519 = !DILocation(line: 1914, column: 1, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !1656, file: !1602, line: 1914, column: 1)
!11521 = !DILocation(line: 1914, column: 1, scope: !1656)
!11522 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1602, file: !1602, line: 987, type: !1526, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11523)
!11523 = !{!11524, !11525}
!11524 = !DILocalVariable(name: "dev", arg: 1, scope: !11522, file: !1602, line: 987, type: !1475)
!11525 = !DILocalVariable(name: "data", scope: !11522, file: !1602, line: 989, type: !10605)
!11526 = !DILocation(line: 0, scope: !11522)
!11527 = !DILocation(line: 989, column: 38, scope: !11522)
!11528 = !DILocation(line: 1014, column: 12, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11522, file: !1602, line: 1014, column: 6)
!11530 = !DILocation(line: 1014, column: 6, scope: !11529)
!11531 = !DILocation(line: 1014, column: 6, scope: !11522)
!11532 = !DILocation(line: 1015, column: 28, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11529, file: !1602, line: 1014, column: 21)
!11534 = !DILocation(line: 1015, column: 3, scope: !11533)
!11535 = !DILocation(line: 1016, column: 2, scope: !11533)
!11536 = !DILocation(line: 1059, column: 1, scope: !11522)
!11537 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1602, file: !1602, line: 1583, type: !1496, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11538)
!11538 = !{!11539, !11540, !11541, !11542, !11543, !11544}
!11539 = !DILocalVariable(name: "dev", arg: 1, scope: !11537, file: !1602, line: 1583, type: !1475)
!11540 = !DILocalVariable(name: "config", scope: !11537, file: !1602, line: 1585, type: !10482)
!11541 = !DILocalVariable(name: "data", scope: !11537, file: !1602, line: 1586, type: !10605)
!11542 = !DILocalVariable(name: "ll_parity", scope: !11537, file: !1602, line: 1587, type: !121)
!11543 = !DILocalVariable(name: "ll_datawidth", scope: !11537, file: !1602, line: 1588, type: !121)
!11544 = !DILocalVariable(name: "err", scope: !11537, file: !1602, line: 1589, type: !103)
!11545 = !DILocation(line: 0, scope: !11537)
!11546 = !DILocation(line: 1585, column: 48, scope: !11537)
!11547 = !DILocation(line: 1586, column: 38, scope: !11537)
!11548 = !DILocation(line: 1591, column: 2, scope: !11537)
!11549 = !DILocation(line: 1593, column: 29, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11537, file: !1602, line: 1593, column: 6)
!11551 = !DILocation(line: 1593, column: 7, scope: !11550)
!11552 = !DILocation(line: 1593, column: 6, scope: !11537)
!11553 = !DILocation(line: 1599, column: 31, scope: !11537)
!11554 = !DILocation(line: 1599, column: 71, scope: !11537)
!11555 = !DILocation(line: 1599, column: 8, scope: !11537)
!11556 = !DILocation(line: 1600, column: 10, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11537, file: !1602, line: 1600, column: 6)
!11558 = !DILocation(line: 1600, column: 6, scope: !11537)
!11559 = !DILocation(line: 1616, column: 36, scope: !11537)
!11560 = !DILocation(line: 1616, column: 8, scope: !11537)
!11561 = !DILocation(line: 1617, column: 10, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11537, file: !1602, line: 1617, column: 6)
!11563 = !DILocation(line: 1617, column: 6, scope: !11537)
!11564 = !DILocation(line: 1621, column: 27, scope: !11537)
!11565 = !DILocation(line: 1621, column: 2, scope: !11537)
!11566 = !DILocation(line: 1624, column: 40, scope: !11537)
!11567 = !DILocation(line: 1624, column: 2, scope: !11537)
!11568 = !DILocation(line: 1630, column: 14, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11537, file: !1602, line: 1630, column: 6)
!11570 = !DILocation(line: 1630, column: 6, scope: !11537)
!11571 = !DILocation(line: 1638, column: 2, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11573, file: !1602, line: 1634, column: 34)
!11573 = distinct !DILexicalBlock(scope: !11569, file: !1602, line: 1634, column: 13)
!11574 = !DILocation(line: 0, scope: !11569)
!11575 = !DILocation(line: 1649, column: 35, scope: !11537)
!11576 = !DILocation(line: 1649, column: 2, scope: !11537)
!11577 = !DILocation(line: 1654, column: 14, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11537, file: !1602, line: 1654, column: 6)
!11579 = !DILocation(line: 1654, column: 6, scope: !11537)
!11580 = !DILocation(line: 1655, column: 3, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !1602, line: 1654, column: 31)
!11582 = !DILocation(line: 1656, column: 2, scope: !11581)
!11583 = !DILocation(line: 1659, column: 37, scope: !11537)
!11584 = !DILocation(line: 1659, column: 2, scope: !11537)
!11585 = !DILocation(line: 1662, column: 14, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11537, file: !1602, line: 1662, column: 6)
!11587 = !DILocation(line: 1662, column: 6, scope: !11537)
!11588 = !DILocation(line: 1663, column: 37, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11586, file: !1602, line: 1662, column: 27)
!11590 = !DILocation(line: 1663, column: 3, scope: !11589)
!11591 = !DILocation(line: 1664, column: 2, scope: !11589)
!11592 = !DILocation(line: 1684, column: 26, scope: !11537)
!11593 = !DILocation(line: 1684, column: 2, scope: !11537)
!11594 = !DILocation(line: 1701, column: 10, scope: !11537)
!11595 = !DILocation(line: 1701, column: 2, scope: !11537)
!11596 = !DILocation(line: 1722, column: 2, scope: !11537)
!11597 = !DILocation(line: 1724, column: 1, scope: !11537)
!11598 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1602, file: !1602, line: 651, type: !1526, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11599)
!11599 = !{!11600, !11601, !11602}
!11600 = !DILocalVariable(name: "dev", arg: 1, scope: !11598, file: !1602, line: 651, type: !1475)
!11601 = !DILocalVariable(name: "data", scope: !11598, file: !1602, line: 653, type: !10605)
!11602 = !DILocalVariable(name: "clk", scope: !11598, file: !1602, line: 654, type: !11603)
!11603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!11604 = !DILocation(line: 0, scope: !11598)
!11605 = !DILocation(line: 653, column: 38, scope: !11598)
!11606 = !DILocation(line: 656, column: 8, scope: !11598)
!11607 = !DILocation(line: 656, column: 14, scope: !11598)
!11608 = !DILocation(line: 657, column: 1, scope: !11598)
!11609 = distinct !DISubprogram(name: "device_is_ready", scope: !6666, file: !6666, line: 47, type: !11610, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11612)
!11610 = !DISubroutineType(types: !11611)
!11611 = !{!157, !1475}
!11612 = !{!11613}
!11613 = !DILocalVariable(name: "dev", arg: 1, scope: !11609, file: !6666, line: 47, type: !1475)
!11614 = !DILocation(line: 0, scope: !11609)
!11615 = !DILocation(line: 55, column: 2, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11609, file: !6666, line: 55, column: 2)
!11617 = !{i64 2155034112}
!11618 = !DILocation(line: 56, column: 9, scope: !11609)
!11619 = !DILocation(line: 56, column: 2, scope: !11609)
!11620 = distinct !DISubprogram(name: "clock_control_on", scope: !794, file: !794, line: 123, type: !1564, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11621)
!11621 = !{!11622, !11623, !11624}
!11622 = !DILocalVariable(name: "dev", arg: 1, scope: !11620, file: !794, line: 123, type: !1475)
!11623 = !DILocalVariable(name: "sys", arg: 2, scope: !11620, file: !794, line: 124, type: !887)
!11624 = !DILocalVariable(name: "api", scope: !11620, file: !794, line: 126, type: !1557)
!11625 = !DILocation(line: 0, scope: !11620)
!11626 = !DILocation(line: 127, column: 49, scope: !11620)
!11627 = !DILocation(line: 129, column: 14, scope: !11620)
!11628 = !DILocation(line: 129, column: 9, scope: !11620)
!11629 = !DILocation(line: 129, column: 2, scope: !11620)
!11630 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1629, file: !1629, line: 342, type: !11631, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11633)
!11631 = !DISubroutineType(types: !11632)
!11632 = !{!103, !1690, !154}
!11633 = !{!11634, !11635, !11636, !11637}
!11634 = !DILocalVariable(name: "config", arg: 1, scope: !11630, file: !1629, line: 342, type: !1690)
!11635 = !DILocalVariable(name: "id", arg: 2, scope: !11630, file: !1629, line: 343, type: !154)
!11636 = !DILocalVariable(name: "ret", scope: !11630, file: !1629, line: 345, type: !103)
!11637 = !DILocalVariable(name: "state", scope: !11630, file: !1629, line: 346, type: !1632)
!11638 = !DILocation(line: 0, scope: !11630)
!11639 = !DILocation(line: 346, column: 2, scope: !11630)
!11640 = !DILocation(line: 348, column: 8, scope: !11630)
!11641 = !DILocation(line: 349, column: 10, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11630, file: !1629, line: 349, column: 6)
!11643 = !DILocation(line: 349, column: 6, scope: !11630)
!11644 = !DILocation(line: 353, column: 44, scope: !11630)
!11645 = !DILocation(line: 353, column: 9, scope: !11630)
!11646 = !DILocation(line: 353, column: 2, scope: !11630)
!11647 = !DILocation(line: 354, column: 1, scope: !11630)
!11648 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10918, file: !10918, line: 497, type: !11398, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11649)
!11649 = !{!11650, !11651, !11652}
!11650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11648, file: !10918, line: 497, type: !1546)
!11651 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11648, file: !10918, line: 497, type: !121)
!11652 = !DILocalVariable(name: "val", scope: !11653, file: !10918, line: 499, type: !121)
!11653 = distinct !DILexicalBlock(scope: !11648, file: !10918, line: 499, column: 3)
!11654 = !DILocation(line: 0, scope: !11648)
!11655 = !DILocation(line: 499, column: 3, scope: !11653)
!11656 = !DILocation(line: 0, scope: !10958, inlinedAt: !11657)
!11657 = distinct !DILocation(line: 499, column: 3, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11653, file: !10918, line: 499, column: 3)
!11659 = !DILocation(line: 480, column: 4, scope: !10958, inlinedAt: !11657)
!11660 = !DILocation(line: 499, column: 3, scope: !11658)
!11661 = !DILocation(line: 0, scope: !11653)
!11662 = !DILocation(line: 0, scope: !10971, inlinedAt: !11663)
!11663 = distinct !DILocation(line: 499, column: 3, scope: !11653)
!11664 = !DILocation(line: 531, column: 4, scope: !10971, inlinedAt: !11663)
!11665 = distinct !{!11665, !11655, !11655}
!11666 = !DILocation(line: 500, column: 1, scope: !11648)
!11667 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10918, file: !10918, line: 850, type: !11407, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11668)
!11668 = !{!11669, !11670, !11671, !11672}
!11669 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11667, file: !10918, line: 850, type: !1546)
!11670 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11667, file: !10918, line: 850, type: !121)
!11671 = !DILocalVariable(name: "Parity", arg: 3, scope: !11667, file: !10918, line: 850, type: !121)
!11672 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11667, file: !10918, line: 851, type: !121)
!11673 = !DILocation(line: 0, scope: !11667)
!11674 = !DILocation(line: 853, column: 3, scope: !11667)
!11675 = !DILocation(line: 854, column: 3, scope: !11667)
!11676 = !DILocation(line: 855, column: 1, scope: !11667)
!11677 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10918, file: !10918, line: 1337, type: !10949, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11678)
!11678 = !{!11679}
!11679 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11677, file: !10918, line: 1337, type: !1546)
!11680 = !DILocation(line: 0, scope: !11677)
!11681 = !DILocation(line: 1339, column: 3, scope: !11677)
!11682 = !DILocation(line: 1340, column: 1, scope: !11677)
!11683 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1629, file: !1629, line: 316, type: !11684, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11686)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{!103, !1690, !1632}
!11686 = !{!11687, !11688, !11689}
!11687 = !DILocalVariable(name: "config", arg: 1, scope: !11683, file: !1629, line: 317, type: !1690)
!11688 = !DILocalVariable(name: "state", arg: 2, scope: !11683, file: !1629, line: 318, type: !1632)
!11689 = !DILocalVariable(name: "reg", scope: !11683, file: !1629, line: 320, type: !22)
!11690 = !DILocation(line: 0, scope: !11683)
!11691 = !DILocation(line: 329, column: 39, scope: !11683)
!11692 = !DILocation(line: 329, column: 52, scope: !11683)
!11693 = !DILocation(line: 329, column: 9, scope: !11683)
!11694 = !DILocation(line: 329, column: 2, scope: !11683)
!11695 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11610, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1431, retainedNodes: !11696)
!11696 = !{!11697}
!11697 = !DILocalVariable(name: "dev", arg: 1, scope: !11695, file: !141, line: 730, type: !1475)
!11698 = !DILocation(line: 0, scope: !11695)
!11699 = !DILocation(line: 732, column: 9, scope: !11695)
!11700 = !DILocation(line: 732, column: 2, scope: !11695)
!11701 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1773, file: !1773, line: 270, type: !1779, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11702)
!11702 = !{!11703}
!11703 = !DILocalVariable(name: "dev", arg: 1, scope: !11701, file: !1773, line: 270, type: !1781)
!11704 = !DILocation(line: 0, scope: !11701)
!11705 = !DILocation(line: 274, column: 2, scope: !11701)
!11706 = !DILocation(line: 275, column: 12, scope: !11701)
!11707 = !DILocation(line: 276, column: 15, scope: !11701)
!11708 = !DILocation(line: 277, column: 16, scope: !11701)
!11709 = !DILocation(line: 278, column: 15, scope: !11701)
!11710 = !DILocation(line: 279, column: 16, scope: !11701)
!11711 = !DILocation(line: 282, column: 2, scope: !11701)
!11712 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6859, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11713)
!11713 = !{!11714, !11715}
!11714 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11712, file: !495, line: 1814, type: !750)
!11715 = !DILocalVariable(name: "priority", arg: 2, scope: !11712, file: !495, line: 1814, type: !121)
!11716 = !DILocation(line: 0, scope: !11712)
!11717 = !DILocation(line: 1822, column: 46, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11719, file: !495, line: 1821, column: 3)
!11719 = distinct !DILexicalBlock(scope: !11712, file: !495, line: 1816, column: 7)
!11720 = !DILocation(line: 1824, column: 1, scope: !11712)
!11721 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1773, file: !1773, line: 118, type: !6762, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11722)
!11722 = !{!11723, !11724}
!11723 = !DILocalVariable(name: "arg", arg: 1, scope: !11721, file: !1773, line: 118, type: !102)
!11724 = !DILocalVariable(name: "dticks", scope: !11721, file: !1773, line: 121, type: !121)
!11725 = !DILocation(line: 0, scope: !11721)
!11726 = !DILocation(line: 124, column: 2, scope: !11721)
!11727 = !DILocation(line: 129, column: 17, scope: !11721)
!11728 = !DILocation(line: 129, column: 14, scope: !11721)
!11729 = !DILocation(line: 130, column: 15, scope: !11721)
!11730 = !DILocation(line: 145, column: 27, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11732, file: !1773, line: 132, column: 16)
!11732 = distinct !DILexicalBlock(scope: !11721, file: !1773, line: 132, column: 6)
!11733 = !DILocation(line: 145, column: 25, scope: !11731)
!11734 = !DILocation(line: 145, column: 45, scope: !11731)
!11735 = !DILocation(line: 146, column: 30, scope: !11731)
!11736 = !DILocation(line: 146, column: 20, scope: !11731)
!11737 = !DILocation(line: 147, column: 3, scope: !11731)
!11738 = !DILocation(line: 151, column: 2, scope: !11721)
!11739 = !DILocation(line: 152, column: 1, scope: !11721)
!11740 = distinct !DISubprogram(name: "elapsed", scope: !1773, file: !1773, line: 85, type: !6906, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11741)
!11741 = !{!11742, !11743, !11744}
!11742 = !DILocalVariable(name: "val1", scope: !11740, file: !1773, line: 87, type: !121)
!11743 = !DILocalVariable(name: "ctrl", scope: !11740, file: !1773, line: 88, type: !121)
!11744 = !DILocalVariable(name: "val2", scope: !11740, file: !1773, line: 89, type: !121)
!11745 = !DILocation(line: 87, column: 27, scope: !11740)
!11746 = !DILocation(line: 0, scope: !11740)
!11747 = !DILocation(line: 88, column: 27, scope: !11740)
!11748 = !DILocation(line: 89, column: 27, scope: !11740)
!11749 = !DILocation(line: 105, column: 12, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11740, file: !1773, line: 105, column: 6)
!11751 = !DILocation(line: 106, column: 6, scope: !11750)
!11752 = !DILocation(line: 107, column: 16, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11750, file: !1773, line: 106, column: 24)
!11754 = !DILocation(line: 111, column: 18, scope: !11753)
!11755 = !DILocation(line: 112, column: 2, scope: !11753)
!11756 = !DILocation(line: 114, column: 20, scope: !11740)
!11757 = !DILocation(line: 114, column: 30, scope: !11740)
!11758 = !DILocation(line: 114, column: 28, scope: !11740)
!11759 = !DILocation(line: 114, column: 2, scope: !11740)
!11760 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1773, file: !1773, line: 154, type: !11761, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11763)
!11761 = !DISubroutineType(types: !11762)
!11762 = !{null, !332, !157}
!11763 = !{!11764, !11765, !11766, !11767, !11768, !11769, !11770, !11775, !11776}
!11764 = !DILocalVariable(name: "ticks", arg: 1, scope: !11760, file: !1773, line: 154, type: !332)
!11765 = !DILocalVariable(name: "idle", arg: 2, scope: !11760, file: !1773, line: 154, type: !157)
!11766 = !DILocalVariable(name: "delay", scope: !11760, file: !1773, line: 169, type: !121)
!11767 = !DILocalVariable(name: "val1", scope: !11760, file: !1773, line: 170, type: !121)
!11768 = !DILocalVariable(name: "val2", scope: !11760, file: !1773, line: 170, type: !121)
!11769 = !DILocalVariable(name: "last_load_", scope: !11760, file: !1773, line: 171, type: !121)
!11770 = !DILocalVariable(name: "key", scope: !11760, file: !1773, line: 176, type: !11771)
!11771 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !11772)
!11772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !11773)
!11773 = !{!11774}
!11774 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11772, file: !460, line: 33, baseType: !103, size: 32)
!11775 = !DILocalVariable(name: "pending", scope: !11760, file: !1773, line: 178, type: !121)
!11776 = !DILocalVariable(name: "unannounced", scope: !11760, file: !1773, line: 185, type: !121)
!11777 = !DILocation(line: 0, scope: !11760)
!11778 = !DILocation(line: 162, column: 49, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11760, file: !1773, line: 162, column: 6)
!11780 = !DILocation(line: 163, column: 17, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11779, file: !1773, line: 162, column: 78)
!11782 = !DILocation(line: 164, column: 13, scope: !11781)
!11783 = !DILocation(line: 165, column: 3, scope: !11781)
!11784 = !DILocation(line: 171, column: 24, scope: !11760)
!11785 = !DILocation(line: 173, column: 10, scope: !11760)
!11786 = !DILocation(line: 174, column: 10, scope: !11760)
!11787 = !DILocalVariable(name: "l", arg: 1, scope: !11788, file: !460, line: 136, type: !11791)
!11788 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !11789, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11792)
!11789 = !DISubroutineType(types: !11790)
!11790 = !{!11771, !11791}
!11791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!11792 = !{!11787, !11793}
!11793 = !DILocalVariable(name: "k", scope: !11788, file: !460, line: 139, type: !11771)
!11794 = !DILocation(line: 0, scope: !11788, inlinedAt: !11795)
!11795 = distinct !DILocation(line: 176, column: 25, scope: !11760)
!11796 = !DILocation(line: 55, column: 2, scope: !11797, inlinedAt: !11801)
!11797 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11798)
!11798 = !{!11799, !11800}
!11799 = !DILocalVariable(name: "key", scope: !11797, file: !5805, line: 44, type: !32)
!11800 = !DILocalVariable(name: "tmp", scope: !11797, file: !5805, line: 53, type: !32)
!11801 = distinct !DILocation(line: 145, column: 10, scope: !11788, inlinedAt: !11795)
!11802 = !{i64 2221014}
!11803 = !DILocation(line: 0, scope: !11797, inlinedAt: !11801)
!11804 = !DILocation(line: 178, column: 21, scope: !11760)
!11805 = !DILocation(line: 180, column: 18, scope: !11760)
!11806 = !DILocation(line: 182, column: 14, scope: !11760)
!11807 = !DILocation(line: 183, column: 15, scope: !11760)
!11808 = !DILocation(line: 185, column: 39, scope: !11760)
!11809 = !DILocation(line: 185, column: 37, scope: !11760)
!11810 = !DILocation(line: 187, column: 27, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11760, file: !1773, line: 187, column: 6)
!11812 = !DILocation(line: 187, column: 6, scope: !11760)
!11813 = !DILocation(line: 202, column: 27, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11811, file: !1773, line: 195, column: 9)
!11815 = !DILocation(line: 202, column: 48, scope: !11814)
!11816 = !DILocation(line: 203, column: 9, scope: !11814)
!11817 = !DILocation(line: 204, column: 11, scope: !11814)
!11818 = !DILocation(line: 205, column: 13, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11814, file: !1773, line: 205, column: 7)
!11820 = !DILocation(line: 205, column: 7, scope: !11814)
!11821 = !DILocation(line: 0, scope: !11811)
!11822 = !DILocation(line: 212, column: 18, scope: !11760)
!11823 = !DILocation(line: 214, column: 28, scope: !11760)
!11824 = !DILocation(line: 214, column: 16, scope: !11760)
!11825 = !DILocation(line: 215, column: 15, scope: !11760)
!11826 = !DILocation(line: 227, column: 11, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11760, file: !1773, line: 227, column: 6)
!11828 = !DILocation(line: 227, column: 6, scope: !11760)
!11829 = !DILocation(line: 228, column: 15, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11827, file: !1773, line: 227, column: 19)
!11831 = !DILocation(line: 228, column: 38, scope: !11830)
!11832 = !DILocation(line: 228, column: 24, scope: !11830)
!11833 = !DILocation(line: 229, column: 2, scope: !11830)
!11834 = !DILocation(line: 230, column: 24, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11827, file: !1773, line: 229, column: 9)
!11836 = !DILocation(line: 230, column: 15, scope: !11835)
!11837 = !DILocation(line: 0, scope: !11827)
!11838 = !DILocalVariable(name: "key", arg: 2, scope: !11839, file: !460, line: 190, type: !11771)
!11839 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !11840, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11842)
!11840 = !DISubroutineType(types: !11841)
!11841 = !{null, !11791, !11771}
!11842 = !{!11843, !11838}
!11843 = !DILocalVariable(name: "l", arg: 1, scope: !11839, file: !460, line: 189, type: !11791)
!11844 = !DILocation(line: 0, scope: !11839, inlinedAt: !11845)
!11845 = distinct !DILocation(line: 232, column: 2, scope: !11760)
!11846 = !DILocalVariable(name: "key", arg: 1, scope: !11847, file: !5805, line: 84, type: !32)
!11847 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11848)
!11848 = !{!11846}
!11849 = !DILocation(line: 0, scope: !11847, inlinedAt: !11850)
!11850 = distinct !DILocation(line: 215, column: 2, scope: !11839, inlinedAt: !11845)
!11851 = !DILocation(line: 95, column: 2, scope: !11847, inlinedAt: !11850)
!11852 = !{i64 2221831}
!11853 = !DILocation(line: 234, column: 1, scope: !11760)
!11854 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1773, file: !1773, line: 236, type: !6906, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11855)
!11855 = !{!11856, !11857}
!11856 = !DILocalVariable(name: "key", scope: !11854, file: !1773, line: 242, type: !11771)
!11857 = !DILocalVariable(name: "cyc", scope: !11854, file: !1773, line: 243, type: !121)
!11858 = !DILocation(line: 0, scope: !11788, inlinedAt: !11859)
!11859 = distinct !DILocation(line: 242, column: 25, scope: !11854)
!11860 = !DILocation(line: 55, column: 2, scope: !11797, inlinedAt: !11861)
!11861 = distinct !DILocation(line: 145, column: 10, scope: !11788, inlinedAt: !11859)
!11862 = !DILocation(line: 0, scope: !11797, inlinedAt: !11861)
!11863 = !DILocation(line: 0, scope: !11854)
!11864 = !DILocation(line: 243, column: 17, scope: !11854)
!11865 = !DILocation(line: 243, column: 29, scope: !11854)
!11866 = !DILocation(line: 243, column: 27, scope: !11854)
!11867 = !DILocation(line: 243, column: 43, scope: !11854)
!11868 = !DILocation(line: 243, column: 41, scope: !11854)
!11869 = !DILocation(line: 0, scope: !11839, inlinedAt: !11870)
!11870 = distinct !DILocation(line: 245, column: 2, scope: !11854)
!11871 = !DILocation(line: 0, scope: !11847, inlinedAt: !11872)
!11872 = distinct !DILocation(line: 215, column: 2, scope: !11839, inlinedAt: !11870)
!11873 = !DILocation(line: 95, column: 2, scope: !11847, inlinedAt: !11872)
!11874 = !DILocation(line: 246, column: 13, scope: !11854)
!11875 = !DILocation(line: 246, column: 2, scope: !11854)
!11876 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1773, file: !1773, line: 249, type: !6906, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11877)
!11877 = !{!11878, !11879}
!11878 = !DILocalVariable(name: "key", scope: !11876, file: !1773, line: 251, type: !11771)
!11879 = !DILocalVariable(name: "ret", scope: !11876, file: !1773, line: 252, type: !121)
!11880 = !DILocation(line: 0, scope: !11788, inlinedAt: !11881)
!11881 = distinct !DILocation(line: 251, column: 25, scope: !11876)
!11882 = !DILocation(line: 55, column: 2, scope: !11797, inlinedAt: !11883)
!11883 = distinct !DILocation(line: 145, column: 10, scope: !11788, inlinedAt: !11881)
!11884 = !DILocation(line: 0, scope: !11797, inlinedAt: !11883)
!11885 = !DILocation(line: 0, scope: !11876)
!11886 = !DILocation(line: 252, column: 17, scope: !11876)
!11887 = !DILocation(line: 252, column: 29, scope: !11876)
!11888 = !DILocation(line: 252, column: 27, scope: !11876)
!11889 = !DILocation(line: 0, scope: !11839, inlinedAt: !11890)
!11890 = distinct !DILocation(line: 254, column: 2, scope: !11876)
!11891 = !DILocation(line: 0, scope: !11847, inlinedAt: !11892)
!11892 = distinct !DILocation(line: 215, column: 2, scope: !11839, inlinedAt: !11890)
!11893 = !DILocation(line: 95, column: 2, scope: !11847, inlinedAt: !11892)
!11894 = !DILocation(line: 255, column: 2, scope: !11876)
!11895 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1773, file: !1773, line: 258, type: !3237, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !461)
!11896 = !DILocation(line: 260, column: 6, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11895, file: !1773, line: 260, column: 6)
!11898 = !DILocation(line: 260, column: 16, scope: !11897)
!11899 = !DILocation(line: 260, column: 6, scope: !11895)
!11900 = !DILocation(line: 261, column: 17, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11897, file: !1773, line: 260, column: 34)
!11902 = !DILocation(line: 262, column: 2, scope: !11901)
!11903 = !DILocation(line: 263, column: 1, scope: !11895)
!11904 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1773, file: !1773, line: 265, type: !3237, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !461)
!11905 = !DILocation(line: 267, column: 16, scope: !11904)
!11906 = !DILocation(line: 268, column: 1, scope: !11904)
!11907 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11908, file: !11908, line: 9, type: !11909, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !11932)
!11908 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11909 = !DISubroutineType(types: !11910)
!11910 = !{!103, !11911, !154, !11931}
!11911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11912, size: 32)
!11912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11913)
!11913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1629, line: 60, size: 64, elements: !11914)
!11914 = !{!11915, !11930}
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11913, file: !1629, line: 69, baseType: !11916, size: 32)
!11916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11917, size: 32)
!11917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11918)
!11918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1629, line: 50, size: 64, elements: !11919)
!11919 = !{!11920, !11928, !11929}
!11920 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11918, file: !1629, line: 52, baseType: !11921, size: 32)
!11921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11922, size: 32)
!11922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11923)
!11923 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1640, line: 37, baseType: !11924)
!11924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1640, line: 32, size: 64, elements: !11925)
!11925 = !{!11926, !11927}
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11924, file: !1640, line: 34, baseType: !121, size: 32)
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11924, file: !1640, line: 36, baseType: !121, size: 32, offset: 32)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11918, file: !1629, line: 54, baseType: !154, size: 8, offset: 32)
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11918, file: !1629, line: 56, baseType: !154, size: 8, offset: 40)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11913, file: !1629, line: 71, baseType: !154, size: 8, offset: 32)
!11931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11916, size: 32)
!11932 = !{!11933, !11934, !11935}
!11933 = !DILocalVariable(name: "config", arg: 1, scope: !11907, file: !11908, line: 9, type: !11911)
!11934 = !DILocalVariable(name: "id", arg: 2, scope: !11907, file: !11908, line: 9, type: !154)
!11935 = !DILocalVariable(name: "state", arg: 3, scope: !11907, file: !11908, line: 10, type: !11931)
!11936 = !DILocation(line: 0, scope: !11907)
!11937 = !DILocation(line: 12, column: 20, scope: !11907)
!11938 = !DILocation(line: 13, column: 27, scope: !11907)
!11939 = !DILocation(line: 13, column: 42, scope: !11907)
!11940 = !DILocation(line: 13, column: 19, scope: !11907)
!11941 = !DILocation(line: 13, column: 16, scope: !11907)
!11942 = !DILocation(line: 13, column: 2, scope: !11907)
!11943 = distinct !{!11943, !11942, !11944}
!11944 = !DILocation(line: 19, column: 2, scope: !11907)
!11945 = !DILocation(line: 14, column: 23, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !11908, line: 14, column: 7)
!11947 = distinct !DILexicalBlock(scope: !11907, file: !11908, line: 13, column: 54)
!11948 = !DILocation(line: 14, column: 10, scope: !11946)
!11949 = !DILocation(line: 18, column: 11, scope: !11947)
!11950 = !DILocation(line: 14, column: 7, scope: !11947)
!11951 = !DILocation(line: 22, column: 1, scope: !11907)
!11952 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1890, file: !1890, line: 193, type: !11953, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1808, retainedNodes: !11962)
!11953 = !DISubroutineType(types: !11954)
!11954 = !{!103, !11955, !154, !22}
!11955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11956, size: 32)
!11956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11957)
!11957 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1640, line: 37, baseType: !11958)
!11958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1640, line: 32, size: 64, elements: !11959)
!11959 = !{!11960, !11961}
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11958, file: !1640, line: 34, baseType: !121, size: 32)
!11961 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11958, file: !1640, line: 36, baseType: !121, size: 32, offset: 32)
!11962 = !{!11963, !11964, !11965, !11966, !11967, !11968, !11969, !11970, !11972}
!11963 = !DILocalVariable(name: "pins", arg: 1, scope: !11952, file: !1890, line: 193, type: !11955)
!11964 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11952, file: !1890, line: 193, type: !154)
!11965 = !DILocalVariable(name: "reg", arg: 3, scope: !11952, file: !1890, line: 194, type: !22)
!11966 = !DILocalVariable(name: "pin", scope: !11952, file: !1890, line: 196, type: !121)
!11967 = !DILocalVariable(name: "mux", scope: !11952, file: !1890, line: 196, type: !121)
!11968 = !DILocalVariable(name: "pin_cgf", scope: !11952, file: !1890, line: 197, type: !121)
!11969 = !DILocalVariable(name: "ret", scope: !11952, file: !1890, line: 198, type: !103)
!11970 = !DILocalVariable(name: "i", scope: !11971, file: !1890, line: 209, type: !154)
!11971 = distinct !DILexicalBlock(scope: !11952, file: !1890, line: 209, column: 2)
!11972 = !DILocalVariable(name: "gpio_out", scope: !11973, file: !1890, line: 239, type: !121)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !1890, line: 238, column: 55)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !1890, line: 238, column: 14)
!11975 = distinct !DILexicalBlock(scope: !11976, file: !1890, line: 236, column: 14)
!11976 = distinct !DILexicalBlock(scope: !11977, file: !1890, line: 234, column: 7)
!11977 = distinct !DILexicalBlock(scope: !11978, file: !1890, line: 209, column: 41)
!11978 = distinct !DILexicalBlock(scope: !11971, file: !1890, line: 209, column: 2)
!11979 = !DILocation(line: 0, scope: !11952)
!11980 = !DILocation(line: 0, scope: !11971)
!11981 = !DILocation(line: 209, column: 25, scope: !11978)
!11982 = !DILocation(line: 209, column: 2, scope: !11971)
!11983 = distinct !{!11983, !11982, !11984}
!11984 = !DILocation(line: 259, column: 2, scope: !11971)
!11985 = !DILocation(line: 210, column: 17, scope: !11977)
!11986 = !DILocation(line: 234, column: 7, scope: !11976)
!11987 = !DILocation(line: 234, column: 33, scope: !11976)
!11988 = !DILocation(line: 234, column: 7, scope: !11977)
!11989 = !DILocation(line: 235, column: 22, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11976, file: !1890, line: 234, column: 49)
!11991 = !DILocation(line: 235, column: 29, scope: !11990)
!11992 = !DILocation(line: 236, column: 3, scope: !11990)
!11993 = !DILocation(line: 236, column: 14, scope: !11976)
!11994 = !DILocation(line: 239, column: 32, scope: !11973)
!11995 = !DILocation(line: 0, scope: !11973)
!11996 = !DILocation(line: 241, column: 8, scope: !11973)
!11997 = !DILocation(line: 246, column: 3, scope: !11973)
!11998 = !DILocation(line: 252, column: 9, scope: !11977)
!11999 = !DILocation(line: 255, column: 9, scope: !11977)
!12000 = !DILocation(line: 256, column: 11, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11977, file: !1890, line: 256, column: 7)
!12002 = !DILocation(line: 209, column: 37, scope: !11978)
!12003 = !DILocation(line: 256, column: 7, scope: !11977)
!12004 = !DILocation(line: 262, column: 1, scope: !11952)
!12005 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1890, file: !1890, line: 176, type: !12006, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1808, retainedNodes: !12008)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{!103, !121, !121, !121}
!12008 = !{!12009, !12010, !12011, !12012}
!12009 = !DILocalVariable(name: "pin", arg: 1, scope: !12005, file: !1890, line: 176, type: !121)
!12010 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12005, file: !1890, line: 176, type: !121)
!12011 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12005, file: !1890, line: 176, type: !121)
!12012 = !DILocalVariable(name: "port_device", scope: !12005, file: !1890, line: 178, type: !1820)
!12013 = !DILocation(line: 0, scope: !12005)
!12014 = !DILocation(line: 180, column: 22, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12005, file: !1890, line: 180, column: 6)
!12016 = !DILocation(line: 180, column: 6, scope: !12005)
!12017 = !DILocation(line: 180, column: 6, scope: !12015)
!12018 = !DILocation(line: 184, column: 16, scope: !12005)
!12019 = !DILocation(line: 186, column: 19, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12005, file: !1890, line: 186, column: 6)
!12021 = !DILocation(line: 186, column: 28, scope: !12020)
!12022 = !DILocation(line: 186, column: 33, scope: !12020)
!12023 = !DILocation(line: 186, column: 6, scope: !12005)
!12024 = !DILocation(line: 190, column: 43, scope: !12005)
!12025 = !DILocation(line: 190, column: 9, scope: !12005)
!12026 = !DILocation(line: 190, column: 2, scope: !12005)
!12027 = !DILocation(line: 191, column: 1, scope: !12005)
!12028 = distinct !DISubprogram(name: "device_is_ready", scope: !6666, file: !6666, line: 47, type: !12029, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1808, retainedNodes: !12031)
!12029 = !DISubroutineType(types: !12030)
!12030 = !{!157, !1820}
!12031 = !{!12032}
!12032 = !DILocalVariable(name: "dev", arg: 1, scope: !12028, file: !6666, line: 47, type: !1820)
!12033 = !DILocation(line: 0, scope: !12028)
!12034 = !DILocation(line: 55, column: 2, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12028, file: !6666, line: 55, column: 2)
!12036 = !{i64 2149459084}
!12037 = !DILocation(line: 56, column: 9, scope: !12028)
!12038 = !DILocation(line: 56, column: 2, scope: !12028)
!12039 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !12029, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1808, retainedNodes: !12040)
!12040 = !{!12041}
!12041 = !DILocalVariable(name: "dev", arg: 1, scope: !12039, file: !141, line: 730, type: !1820)
!12042 = !DILocation(line: 0, scope: !12039)
!12043 = !DILocation(line: 732, column: 9, scope: !12039)
!12044 = !DILocation(line: 732, column: 2, scope: !12039)
!12045 = distinct !DISubprogram(name: "SystemInit", scope: !1939, file: !1939, line: 167, type: !3237, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !461)
!12046 = !DILocation(line: 182, column: 1, scope: !12045)
!12047 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1939, file: !1939, line: 220, type: !3237, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !12048)
!12048 = !{!12049, !12050, !12051, !12052, !12053}
!12049 = !DILocalVariable(name: "tmp", scope: !12047, file: !1939, line: 222, type: !121)
!12050 = !DILocalVariable(name: "pllvco", scope: !12047, file: !1939, line: 222, type: !121)
!12051 = !DILocalVariable(name: "pllp", scope: !12047, file: !1939, line: 222, type: !121)
!12052 = !DILocalVariable(name: "pllsource", scope: !12047, file: !1939, line: 222, type: !121)
!12053 = !DILocalVariable(name: "pllm", scope: !12047, file: !1939, line: 222, type: !121)
!12054 = !DILocation(line: 0, scope: !12047)
!12055 = !DILocation(line: 225, column: 14, scope: !12047)
!12056 = !DILocation(line: 225, column: 19, scope: !12047)
!12057 = !DILocation(line: 227, column: 3, scope: !12047)
!12058 = !DILocation(line: 240, column: 25, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12047, file: !1939, line: 228, column: 3)
!12060 = !DILocation(line: 241, column: 19, scope: !12059)
!12061 = !DILocation(line: 241, column: 27, scope: !12059)
!12062 = !DILocation(line: 0, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12059, file: !1939, line: 243, column: 11)
!12064 = !DILocation(line: 254, column: 22, scope: !12059)
!12065 = !DILocation(line: 254, column: 62, scope: !12059)
!12066 = !DILocation(line: 255, column: 31, scope: !12059)
!12067 = !DILocation(line: 256, column: 7, scope: !12059)
!12068 = !DILocation(line: 0, scope: !12059)
!12069 = !DILocation(line: 263, column: 30, scope: !12047)
!12070 = !DILocation(line: 263, column: 52, scope: !12047)
!12071 = !DILocation(line: 263, column: 9, scope: !12047)
!12072 = !DILocation(line: 265, column: 19, scope: !12047)
!12073 = !DILocation(line: 266, column: 1, scope: !12047)
!12074 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12075, file: !12075, line: 200, type: !12076, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !461)
!12075 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12076 = !DISubroutineType(types: !12077)
!12077 = !{!12078}
!12078 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3052, line: 44, baseType: !3051)
!12079 = !DILocation(line: 202, column: 3, scope: !12074)
!12080 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12075, file: !12075, line: 219, type: !12081, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12106)
!12081 = !DISubroutineType(types: !12082)
!12082 = !{!12078, !12083}
!12083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12084, size: 32)
!12084 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12085, line: 70, baseType: !12086)
!12085 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12086 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12085, line: 49, size: 416, elements: !12087)
!12087 = !{!12088, !12089, !12090, !12091, !12092, !12093, !12094}
!12088 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12086, file: !12085, line: 51, baseType: !121, size: 32)
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12086, file: !12085, line: 54, baseType: !121, size: 32, offset: 32)
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12086, file: !12085, line: 57, baseType: !121, size: 32, offset: 64)
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12086, file: !12085, line: 60, baseType: !121, size: 32, offset: 96)
!12092 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12086, file: !12085, line: 63, baseType: !121, size: 32, offset: 128)
!12093 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12086, file: !12085, line: 66, baseType: !121, size: 32, offset: 160)
!12094 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12086, file: !12085, line: 69, baseType: !12095, size: 224, offset: 192)
!12095 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12096, line: 73, baseType: !12097)
!12096 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12096, line: 45, size: 224, elements: !12098)
!12098 = !{!12099, !12100, !12101, !12102, !12103, !12104, !12105}
!12099 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12097, file: !12096, line: 47, baseType: !121, size: 32)
!12100 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12097, file: !12096, line: 50, baseType: !121, size: 32, offset: 32)
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12097, file: !12096, line: 53, baseType: !121, size: 32, offset: 64)
!12102 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12097, file: !12096, line: 56, baseType: !121, size: 32, offset: 96)
!12103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12097, file: !12096, line: 60, baseType: !121, size: 32, offset: 128)
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12097, file: !12096, line: 63, baseType: !121, size: 32, offset: 160)
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12097, file: !12096, line: 68, baseType: !121, size: 32, offset: 192)
!12106 = !{!12107, !12108, !12109, !12110, !12114}
!12107 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12080, file: !12075, line: 219, type: !12083)
!12108 = !DILocalVariable(name: "tickstart", scope: !12080, file: !12075, line: 221, type: !121)
!12109 = !DILocalVariable(name: "pll_config", scope: !12080, file: !12075, line: 221, type: !121)
!12110 = !DILocalVariable(name: "pwrclkchanged", scope: !12111, file: !12075, line: 391, type: !12113)
!12111 = distinct !DILexicalBlock(scope: !12112, file: !12075, line: 390, column: 3)
!12112 = distinct !DILexicalBlock(scope: !12080, file: !12075, line: 389, column: 6)
!12113 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !789, line: 188, baseType: !3058)
!12114 = !DILocalVariable(name: "tmpreg", scope: !12115, file: !12075, line: 400, type: !120)
!12115 = distinct !DILexicalBlock(scope: !12116, file: !12075, line: 400, column: 7)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !12075, line: 399, column: 5)
!12117 = distinct !DILexicalBlock(scope: !12111, file: !12075, line: 398, column: 8)
!12118 = !DILocation(line: 0, scope: !12080)
!12119 = !DILocation(line: 224, column: 24, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12080, file: !12075, line: 224, column: 6)
!12121 = !DILocation(line: 224, column: 6, scope: !12080)
!12122 = !DILocation(line: 232, column: 27, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12080, file: !12075, line: 232, column: 6)
!12124 = !DILocation(line: 232, column: 43, scope: !12123)
!12125 = !DILocation(line: 232, column: 69, scope: !12123)
!12126 = !DILocation(line: 232, column: 6, scope: !12080)
!12127 = !DILocation(line: 237, column: 9, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !12075, line: 237, column: 8)
!12129 = distinct !DILexicalBlock(scope: !12123, file: !12075, line: 233, column: 3)
!12130 = !DILocation(line: 237, column: 39, scope: !12128)
!12131 = !DILocation(line: 237, column: 60, scope: !12128)
!12132 = !DILocation(line: 238, column: 9, scope: !12128)
!12133 = !DILocation(line: 238, column: 39, scope: !12128)
!12134 = !DILocation(line: 238, column: 60, scope: !12128)
!12135 = !DILocation(line: 238, column: 70, scope: !12128)
!12136 = !DILocation(line: 238, column: 78, scope: !12128)
!12137 = !DILocation(line: 238, column: 100, scope: !12128)
!12138 = !DILocation(line: 237, column: 8, scope: !12129)
!12139 = !DILocation(line: 240, column: 11, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !12075, line: 240, column: 10)
!12141 = distinct !DILexicalBlock(scope: !12128, file: !12075, line: 239, column: 5)
!12142 = !DILocation(line: 240, column: 57, scope: !12140)
!12143 = !DILocation(line: 240, column: 80, scope: !12140)
!12144 = !DILocation(line: 240, column: 89, scope: !12140)
!12145 = !DILocation(line: 240, column: 10, scope: !12141)
!12146 = !DILocation(line: 248, column: 7, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !12075, line: 248, column: 7)
!12148 = distinct !DILexicalBlock(scope: !12149, file: !12075, line: 248, column: 7)
!12149 = distinct !DILexicalBlock(scope: !12128, file: !12075, line: 246, column: 5)
!12150 = !DILocation(line: 248, column: 7, scope: !12148)
!12151 = !DILocation(line: 248, column: 7, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12147, file: !12075, line: 248, column: 7)
!12153 = !DILocation(line: 248, column: 7, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12155, file: !12075, line: 248, column: 7)
!12155 = distinct !DILexicalBlock(scope: !12147, file: !12075, line: 248, column: 7)
!12156 = !DILocation(line: 248, column: 7, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12155, file: !12075, line: 248, column: 7)
!12158 = !DILocation(line: 0, scope: !12147)
!12159 = !DILocation(line: 251, column: 30, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12149, file: !12075, line: 251, column: 10)
!12161 = !DILocation(line: 251, column: 40, scope: !12160)
!12162 = !DILocation(line: 0, scope: !12160)
!12163 = !DILocation(line: 251, column: 10, scope: !12149)
!12164 = !DILocation(line: 257, column: 15, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12160, file: !12075, line: 252, column: 7)
!12166 = !DILocation(line: 257, column: 51, scope: !12165)
!12167 = !DILocation(line: 257, column: 9, scope: !12165)
!12168 = !DILocation(line: 259, column: 15, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !12075, line: 259, column: 14)
!12170 = distinct !DILexicalBlock(scope: !12165, file: !12075, line: 258, column: 9)
!12171 = !DILocation(line: 259, column: 29, scope: !12169)
!12172 = !DILocation(line: 259, column: 43, scope: !12169)
!12173 = !DILocation(line: 259, column: 14, scope: !12170)
!12174 = distinct !{!12174, !12167, !12175}
!12175 = !DILocation(line: 263, column: 9, scope: !12165)
!12176 = !DILocation(line: 271, column: 15, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12160, file: !12075, line: 266, column: 7)
!12178 = !DILocation(line: 271, column: 9, scope: !12177)
!12179 = !DILocation(line: 273, column: 15, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12181, file: !12075, line: 273, column: 14)
!12181 = distinct !DILexicalBlock(scope: !12177, file: !12075, line: 272, column: 9)
!12182 = !DILocation(line: 273, column: 29, scope: !12180)
!12183 = !DILocation(line: 273, column: 43, scope: !12180)
!12184 = !DILocation(line: 273, column: 14, scope: !12181)
!12185 = distinct !{!12185, !12178, !12186}
!12186 = !DILocation(line: 277, column: 9, scope: !12177)
!12187 = !DILocation(line: 282, column: 27, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12080, file: !12075, line: 282, column: 6)
!12189 = !DILocation(line: 282, column: 43, scope: !12188)
!12190 = !DILocation(line: 282, column: 69, scope: !12188)
!12191 = !DILocation(line: 282, column: 6, scope: !12080)
!12192 = !DILocation(line: 289, column: 9, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12194, file: !12075, line: 289, column: 8)
!12194 = distinct !DILexicalBlock(scope: !12188, file: !12075, line: 283, column: 3)
!12195 = !DILocation(line: 289, column: 39, scope: !12193)
!12196 = !DILocation(line: 289, column: 60, scope: !12193)
!12197 = !DILocation(line: 290, column: 9, scope: !12193)
!12198 = !DILocation(line: 290, column: 39, scope: !12193)
!12199 = !DILocation(line: 290, column: 60, scope: !12193)
!12200 = !DILocation(line: 290, column: 70, scope: !12193)
!12201 = !DILocation(line: 290, column: 78, scope: !12193)
!12202 = !DILocation(line: 290, column: 100, scope: !12193)
!12203 = !DILocation(line: 289, column: 8, scope: !12194)
!12204 = !DILocation(line: 293, column: 11, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !12075, line: 293, column: 10)
!12206 = distinct !DILexicalBlock(scope: !12193, file: !12075, line: 291, column: 5)
!12207 = !DILocation(line: 293, column: 57, scope: !12205)
!12208 = !DILocation(line: 293, column: 80, scope: !12205)
!12209 = !DILocation(line: 293, column: 89, scope: !12205)
!12210 = !DILocation(line: 293, column: 10, scope: !12206)
!12211 = !DILocation(line: 307, column: 30, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12213, file: !12075, line: 307, column: 10)
!12213 = distinct !DILexicalBlock(scope: !12193, file: !12075, line: 305, column: 5)
!12214 = !DILocation(line: 307, column: 39, scope: !12212)
!12215 = !DILocation(line: 307, column: 10, scope: !12213)
!12216 = !DILocation(line: 310, column: 9, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12212, file: !12075, line: 308, column: 7)
!12218 = !DILocation(line: 313, column: 21, scope: !12217)
!12219 = !DILocation(line: 316, column: 9, scope: !12217)
!12220 = !DILocation(line: 316, column: 15, scope: !12217)
!12221 = !DILocation(line: 316, column: 51, scope: !12217)
!12222 = !DILocation(line: 318, column: 15, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12224, file: !12075, line: 318, column: 14)
!12224 = distinct !DILexicalBlock(scope: !12217, file: !12075, line: 317, column: 9)
!12225 = !DILocation(line: 318, column: 29, scope: !12223)
!12226 = !DILocation(line: 318, column: 43, scope: !12223)
!12227 = !DILocation(line: 318, column: 14, scope: !12224)
!12228 = distinct !{!12228, !12219, !12229}
!12229 = !DILocation(line: 322, column: 9, scope: !12217)
!12230 = !DILocation(line: 330, column: 9, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12212, file: !12075, line: 328, column: 7)
!12232 = !DILocation(line: 333, column: 21, scope: !12231)
!12233 = !DILocation(line: 336, column: 9, scope: !12231)
!12234 = !DILocation(line: 336, column: 15, scope: !12231)
!12235 = !DILocation(line: 338, column: 15, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12237, file: !12075, line: 338, column: 14)
!12237 = distinct !DILexicalBlock(scope: !12231, file: !12075, line: 337, column: 9)
!12238 = !DILocation(line: 338, column: 29, scope: !12236)
!12239 = !DILocation(line: 338, column: 43, scope: !12236)
!12240 = !DILocation(line: 338, column: 14, scope: !12237)
!12241 = distinct !{!12241, !12233, !12242}
!12242 = !DILocation(line: 342, column: 9, scope: !12231)
!12243 = !DILocation(line: 0, scope: !12193)
!12244 = !DILocation(line: 347, column: 27, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12080, file: !12075, line: 347, column: 6)
!12246 = !DILocation(line: 347, column: 43, scope: !12245)
!12247 = !DILocation(line: 347, column: 69, scope: !12245)
!12248 = !DILocation(line: 347, column: 6, scope: !12080)
!12249 = !DILocation(line: 353, column: 28, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12251, file: !12075, line: 353, column: 8)
!12251 = distinct !DILexicalBlock(scope: !12245, file: !12075, line: 348, column: 3)
!12252 = !DILocation(line: 353, column: 37, scope: !12250)
!12253 = !DILocation(line: 353, column: 8, scope: !12251)
!12254 = !DILocation(line: 356, column: 7, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12250, file: !12075, line: 354, column: 5)
!12256 = !DILocation(line: 359, column: 19, scope: !12255)
!12257 = !DILocation(line: 362, column: 7, scope: !12255)
!12258 = !DILocation(line: 362, column: 13, scope: !12255)
!12259 = !DILocation(line: 362, column: 49, scope: !12255)
!12260 = !DILocation(line: 364, column: 13, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !12075, line: 364, column: 12)
!12262 = distinct !DILexicalBlock(scope: !12255, file: !12075, line: 363, column: 7)
!12263 = !DILocation(line: 364, column: 27, scope: !12261)
!12264 = !DILocation(line: 364, column: 41, scope: !12261)
!12265 = !DILocation(line: 364, column: 12, scope: !12262)
!12266 = distinct !{!12266, !12257, !12267}
!12267 = !DILocation(line: 368, column: 7, scope: !12255)
!12268 = !DILocation(line: 373, column: 7, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12250, file: !12075, line: 371, column: 5)
!12270 = !DILocation(line: 376, column: 19, scope: !12269)
!12271 = !DILocation(line: 379, column: 7, scope: !12269)
!12272 = !DILocation(line: 379, column: 13, scope: !12269)
!12273 = !DILocation(line: 381, column: 13, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12275, file: !12075, line: 381, column: 12)
!12275 = distinct !DILexicalBlock(scope: !12269, file: !12075, line: 380, column: 7)
!12276 = !DILocation(line: 381, column: 27, scope: !12274)
!12277 = !DILocation(line: 381, column: 41, scope: !12274)
!12278 = !DILocation(line: 381, column: 12, scope: !12275)
!12279 = distinct !{!12279, !12271, !12280}
!12280 = !DILocation(line: 385, column: 7, scope: !12269)
!12281 = !DILocation(line: 389, column: 27, scope: !12112)
!12282 = !DILocation(line: 389, column: 43, scope: !12112)
!12283 = !DILocation(line: 389, column: 69, scope: !12112)
!12284 = !DILocation(line: 389, column: 6, scope: !12080)
!12285 = !DILocation(line: 0, scope: !12111)
!12286 = !DILocation(line: 398, column: 8, scope: !12117)
!12287 = !DILocation(line: 398, column: 8, scope: !12111)
!12288 = !DILocation(line: 400, column: 7, scope: !12115)
!12289 = !DILocation(line: 400, column: 7, scope: !12116)
!12290 = !DILocation(line: 402, column: 5, scope: !12116)
!12291 = !DILocation(line: 404, column: 8, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12111, file: !12075, line: 404, column: 8)
!12293 = !DILocation(line: 404, column: 8, scope: !12111)
!12294 = !DILocation(line: 407, column: 7, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12292, file: !12075, line: 405, column: 5)
!12296 = !DILocation(line: 410, column: 19, scope: !12295)
!12297 = !DILocation(line: 412, column: 7, scope: !12295)
!12298 = !DILocation(line: 412, column: 13, scope: !12295)
!12299 = !DILocation(line: 414, column: 13, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12301, file: !12075, line: 414, column: 12)
!12301 = distinct !DILexicalBlock(scope: !12295, file: !12075, line: 413, column: 7)
!12302 = !DILocation(line: 414, column: 27, scope: !12300)
!12303 = !DILocation(line: 414, column: 40, scope: !12300)
!12304 = !DILocation(line: 414, column: 12, scope: !12301)
!12305 = distinct !{!12305, !12297, !12306}
!12306 = !DILocation(line: 418, column: 7, scope: !12295)
!12307 = !DILocation(line: 422, column: 5, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !12075, line: 422, column: 5)
!12309 = distinct !DILexicalBlock(scope: !12111, file: !12075, line: 422, column: 5)
!12310 = !DILocation(line: 422, column: 5, scope: !12309)
!12311 = !DILocation(line: 422, column: 5, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12308, file: !12075, line: 422, column: 5)
!12313 = !DILocation(line: 422, column: 5, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !12075, line: 422, column: 5)
!12315 = distinct !DILexicalBlock(scope: !12308, file: !12075, line: 422, column: 5)
!12316 = !DILocation(line: 422, column: 5, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12315, file: !12075, line: 422, column: 5)
!12318 = !DILocation(line: 0, scope: !12308)
!12319 = !DILocation(line: 424, column: 28, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12111, file: !12075, line: 424, column: 8)
!12321 = !DILocation(line: 424, column: 38, scope: !12320)
!12322 = !DILocation(line: 0, scope: !12320)
!12323 = !DILocation(line: 424, column: 8, scope: !12111)
!12324 = !DILocation(line: 430, column: 13, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12320, file: !12075, line: 425, column: 5)
!12326 = !DILocation(line: 430, column: 49, scope: !12325)
!12327 = !DILocation(line: 430, column: 7, scope: !12325)
!12328 = !DILocation(line: 432, column: 13, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !12075, line: 432, column: 12)
!12330 = distinct !DILexicalBlock(scope: !12325, file: !12075, line: 431, column: 7)
!12331 = !DILocation(line: 432, column: 27, scope: !12329)
!12332 = !DILocation(line: 432, column: 41, scope: !12329)
!12333 = !DILocation(line: 432, column: 12, scope: !12330)
!12334 = distinct !{!12334, !12327, !12335}
!12335 = !DILocation(line: 436, column: 7, scope: !12325)
!12336 = !DILocation(line: 444, column: 13, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12320, file: !12075, line: 439, column: 5)
!12338 = !DILocation(line: 444, column: 7, scope: !12337)
!12339 = !DILocation(line: 446, column: 13, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12341, file: !12075, line: 446, column: 12)
!12341 = distinct !DILexicalBlock(scope: !12337, file: !12075, line: 445, column: 7)
!12342 = !DILocation(line: 446, column: 27, scope: !12340)
!12343 = !DILocation(line: 446, column: 41, scope: !12340)
!12344 = !DILocation(line: 446, column: 12, scope: !12341)
!12345 = distinct !{!12345, !12338, !12346}
!12346 = !DILocation(line: 450, column: 7, scope: !12337)
!12347 = !DILocation(line: 454, column: 8, scope: !12111)
!12348 = !DILocation(line: 456, column: 7, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !12075, line: 455, column: 5)
!12350 = distinct !DILexicalBlock(scope: !12111, file: !12075, line: 454, column: 8)
!12351 = !DILocation(line: 457, column: 5, scope: !12349)
!12352 = !DILocation(line: 462, column: 31, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12080, file: !12075, line: 462, column: 7)
!12354 = !DILocation(line: 462, column: 41, scope: !12353)
!12355 = !DILocation(line: 462, column: 7, scope: !12080)
!12356 = !DILocation(line: 465, column: 8, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !12075, line: 465, column: 8)
!12358 = distinct !DILexicalBlock(scope: !12353, file: !12075, line: 463, column: 3)
!12359 = !DILocation(line: 465, column: 38, scope: !12357)
!12360 = !DILocation(line: 465, column: 8, scope: !12358)
!12361 = !DILocation(line: 467, column: 44, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12363, file: !12075, line: 467, column: 10)
!12363 = distinct !DILexicalBlock(scope: !12357, file: !12075, line: 466, column: 5)
!12364 = !DILocation(line: 0, scope: !12362)
!12365 = !DILocation(line: 467, column: 10, scope: !12363)
!12366 = !DILocation(line: 483, column: 15, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12362, file: !12075, line: 468, column: 7)
!12368 = !DILocation(line: 483, column: 9, scope: !12367)
!12369 = !DILocation(line: 485, column: 15, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12371, file: !12075, line: 485, column: 14)
!12371 = distinct !DILexicalBlock(scope: !12367, file: !12075, line: 484, column: 9)
!12372 = !DILocation(line: 485, column: 29, scope: !12370)
!12373 = !DILocation(line: 485, column: 43, scope: !12370)
!12374 = !DILocation(line: 485, column: 14, scope: !12371)
!12375 = distinct !{!12375, !12368, !12376}
!12376 = !DILocation(line: 489, column: 9, scope: !12367)
!12377 = !DILocation(line: 492, column: 9, scope: !12367)
!12378 = !DILocation(line: 498, column: 9, scope: !12367)
!12379 = !DILocation(line: 501, column: 21, scope: !12367)
!12380 = !DILocation(line: 504, column: 9, scope: !12367)
!12381 = !DILocation(line: 504, column: 15, scope: !12367)
!12382 = !DILocation(line: 504, column: 51, scope: !12367)
!12383 = !DILocation(line: 506, column: 15, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12385, file: !12075, line: 506, column: 14)
!12385 = distinct !DILexicalBlock(scope: !12367, file: !12075, line: 505, column: 9)
!12386 = !DILocation(line: 506, column: 29, scope: !12384)
!12387 = !DILocation(line: 506, column: 43, scope: !12384)
!12388 = !DILocation(line: 506, column: 14, scope: !12385)
!12389 = distinct !{!12389, !12380, !12390}
!12390 = !DILocation(line: 510, column: 9, scope: !12367)
!12391 = !DILocation(line: 521, column: 15, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12362, file: !12075, line: 513, column: 7)
!12393 = !DILocation(line: 521, column: 9, scope: !12392)
!12394 = !DILocation(line: 523, column: 15, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12396, file: !12075, line: 523, column: 14)
!12396 = distinct !DILexicalBlock(scope: !12392, file: !12075, line: 522, column: 9)
!12397 = !DILocation(line: 523, column: 29, scope: !12395)
!12398 = !DILocation(line: 523, column: 43, scope: !12395)
!12399 = !DILocation(line: 523, column: 14, scope: !12396)
!12400 = distinct !{!12400, !12393, !12401}
!12401 = !DILocation(line: 527, column: 9, scope: !12392)
!12402 = !DILocation(line: 533, column: 44, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12404, file: !12075, line: 533, column: 10)
!12404 = distinct !DILexicalBlock(scope: !12357, file: !12075, line: 531, column: 5)
!12405 = !DILocation(line: 533, column: 10, scope: !12404)
!12406 = !DILocation(line: 540, column: 27, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12403, file: !12075, line: 538, column: 7)
!12408 = !DILocation(line: 543, column: 14, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12407, file: !12075, line: 542, column: 13)
!12410 = !DILocation(line: 543, column: 81, scope: !12409)
!12411 = !DILocation(line: 543, column: 55, scope: !12409)
!12412 = !DILocation(line: 543, column: 92, scope: !12409)
!12413 = !DILocation(line: 544, column: 14, scope: !12409)
!12414 = !DILocation(line: 544, column: 80, scope: !12409)
!12415 = !DILocation(line: 544, column: 53, scope: !12409)
!12416 = !DILocation(line: 544, column: 111, scope: !12409)
!12417 = !DILocation(line: 545, column: 14, scope: !12409)
!12418 = !DILocation(line: 545, column: 80, scope: !12409)
!12419 = !DILocation(line: 545, column: 86, scope: !12409)
!12420 = !DILocation(line: 545, column: 53, scope: !12409)
!12421 = !DILocation(line: 545, column: 111, scope: !12409)
!12422 = !DILocation(line: 546, column: 14, scope: !12409)
!12423 = !DILocation(line: 546, column: 82, scope: !12409)
!12424 = !DILocation(line: 546, column: 101, scope: !12409)
!12425 = !DILocation(line: 546, column: 53, scope: !12409)
!12426 = !DILocation(line: 546, column: 126, scope: !12409)
!12427 = !DILocation(line: 547, column: 14, scope: !12409)
!12428 = !DILocation(line: 547, column: 80, scope: !12409)
!12429 = !DILocation(line: 547, column: 85, scope: !12409)
!12430 = !DILocation(line: 547, column: 53, scope: !12409)
!12431 = !DILocation(line: 547, column: 111, scope: !12409)
!12432 = !DILocation(line: 548, column: 14, scope: !12409)
!12433 = !DILocation(line: 548, column: 80, scope: !12409)
!12434 = !DILocation(line: 548, column: 85, scope: !12409)
!12435 = !DILocation(line: 548, column: 53, scope: !12409)
!12436 = !DILocation(line: 542, column: 13, scope: !12407)
!12437 = !DILocation(line: 563, column: 3, scope: !12080)
!12438 = !DILocation(line: 564, column: 1, scope: !12080)
!12439 = !DISubprogram(name: "HAL_GetTick", scope: !12440, file: !12440, line: 234, type: !6906, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12440 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12441 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12075, file: !12075, line: 591, type: !12442, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12453)
!12442 = !DISubroutineType(types: !12443)
!12443 = !{!12078, !12444, !121}
!12444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12445, size: 32)
!12445 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12085, line: 92, baseType: !12446)
!12446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12085, line: 75, size: 160, elements: !12447)
!12447 = !{!12448, !12449, !12450, !12451, !12452}
!12448 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12446, file: !12085, line: 77, baseType: !121, size: 32)
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12446, file: !12085, line: 80, baseType: !121, size: 32, offset: 32)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12446, file: !12085, line: 83, baseType: !121, size: 32, offset: 64)
!12451 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12446, file: !12085, line: 86, baseType: !121, size: 32, offset: 96)
!12452 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12446, file: !12085, line: 89, baseType: !121, size: 32, offset: 128)
!12453 = !{!12454, !12455, !12456}
!12454 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12441, file: !12075, line: 591, type: !12444)
!12455 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12441, file: !12075, line: 591, type: !121)
!12456 = !DILocalVariable(name: "tickstart", scope: !12441, file: !12075, line: 593, type: !121)
!12457 = !DILocation(line: 0, scope: !12441)
!12458 = !DILocation(line: 596, column: 24, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12441, file: !12075, line: 596, column: 6)
!12460 = !DILocation(line: 596, column: 6, scope: !12441)
!12461 = !DILocation(line: 610, column: 17, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12441, file: !12075, line: 610, column: 6)
!12463 = !DILocation(line: 610, column: 15, scope: !12462)
!12464 = !DILocation(line: 610, column: 6, scope: !12441)
!12465 = !DILocation(line: 613, column: 5, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12462, file: !12075, line: 611, column: 3)
!12467 = !DILocation(line: 617, column: 8, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12466, file: !12075, line: 617, column: 8)
!12469 = !DILocation(line: 617, column: 34, scope: !12468)
!12470 = !DILocation(line: 617, column: 8, scope: !12466)
!12471 = !DILocation(line: 624, column: 27, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12441, file: !12075, line: 624, column: 6)
!12473 = !DILocation(line: 624, column: 38, scope: !12472)
!12474 = !DILocation(line: 624, column: 60, scope: !12472)
!12475 = !DILocation(line: 624, column: 6, scope: !12441)
!12476 = !DILocation(line: 628, column: 40, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !12075, line: 628, column: 8)
!12478 = distinct !DILexicalBlock(scope: !12472, file: !12075, line: 625, column: 3)
!12479 = !DILocation(line: 628, column: 63, scope: !12477)
!12480 = !DILocation(line: 628, column: 8, scope: !12478)
!12481 = !DILocation(line: 630, column: 7, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12477, file: !12075, line: 629, column: 5)
!12483 = !DILocation(line: 633, column: 29, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12478, file: !12075, line: 633, column: 8)
!12485 = !DILocation(line: 631, column: 5, scope: !12482)
!12486 = !DILocation(line: 633, column: 40, scope: !12484)
!12487 = !DILocation(line: 633, column: 63, scope: !12484)
!12488 = !DILocation(line: 633, column: 8, scope: !12478)
!12489 = !DILocation(line: 635, column: 7, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12484, file: !12075, line: 634, column: 5)
!12491 = !DILocation(line: 636, column: 5, scope: !12490)
!12492 = !DILocation(line: 639, column: 5, scope: !12478)
!12493 = !DILocation(line: 643, column: 27, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12441, file: !12075, line: 643, column: 6)
!12495 = !DILocation(line: 640, column: 3, scope: !12478)
!12496 = !DILocation(line: 643, column: 38, scope: !12494)
!12497 = !DILocation(line: 643, column: 62, scope: !12494)
!12498 = !DILocation(line: 643, column: 6, scope: !12441)
!12499 = !DILocation(line: 648, column: 27, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12501, file: !12075, line: 648, column: 8)
!12501 = distinct !DILexicalBlock(scope: !12494, file: !12075, line: 644, column: 3)
!12502 = !DILocation(line: 648, column: 8, scope: !12501)
!12503 = !DILocation(line: 651, column: 10, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !12075, line: 651, column: 10)
!12505 = distinct !DILexicalBlock(scope: !12500, file: !12075, line: 649, column: 5)
!12506 = !DILocation(line: 651, column: 46, scope: !12504)
!12507 = !DILocation(line: 651, column: 10, scope: !12505)
!12508 = !DILocation(line: 661, column: 10, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12510, file: !12075, line: 661, column: 10)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !12075, line: 659, column: 5)
!12511 = distinct !DILexicalBlock(scope: !12500, file: !12075, line: 657, column: 13)
!12512 = !DILocation(line: 661, column: 46, scope: !12509)
!12513 = !DILocation(line: 661, column: 10, scope: !12510)
!12514 = !DILocation(line: 670, column: 10, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !12075, line: 670, column: 10)
!12516 = distinct !DILexicalBlock(scope: !12511, file: !12075, line: 668, column: 5)
!12517 = !DILocation(line: 670, column: 46, scope: !12515)
!12518 = !DILocation(line: 670, column: 10, scope: !12516)
!12519 = !DILocation(line: 676, column: 5, scope: !12501)
!12520 = !DILocation(line: 679, column: 17, scope: !12501)
!12521 = !DILocation(line: 681, column: 5, scope: !12501)
!12522 = !DILocation(line: 681, column: 12, scope: !12501)
!12523 = !DILocation(line: 681, column: 65, scope: !12501)
!12524 = !DILocation(line: 681, column: 78, scope: !12501)
!12525 = !DILocation(line: 681, column: 42, scope: !12501)
!12526 = !DILocation(line: 683, column: 12, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12528, file: !12075, line: 683, column: 11)
!12528 = distinct !DILexicalBlock(scope: !12501, file: !12075, line: 682, column: 5)
!12529 = !DILocation(line: 683, column: 26, scope: !12527)
!12530 = !DILocation(line: 683, column: 39, scope: !12527)
!12531 = !DILocation(line: 683, column: 11, scope: !12528)
!12532 = distinct !{!12532, !12521, !12533}
!12533 = !DILocation(line: 687, column: 5, scope: !12501)
!12534 = !DILocation(line: 691, column: 17, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12441, file: !12075, line: 691, column: 6)
!12536 = !DILocation(line: 691, column: 15, scope: !12535)
!12537 = !DILocation(line: 691, column: 6, scope: !12441)
!12538 = !DILocation(line: 694, column: 5, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12535, file: !12075, line: 692, column: 3)
!12540 = !DILocation(line: 698, column: 8, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12539, file: !12075, line: 698, column: 8)
!12542 = !DILocation(line: 698, column: 34, scope: !12541)
!12543 = !DILocation(line: 698, column: 8, scope: !12539)
!12544 = !DILocation(line: 705, column: 27, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12441, file: !12075, line: 705, column: 6)
!12546 = !DILocation(line: 705, column: 38, scope: !12545)
!12547 = !DILocation(line: 705, column: 61, scope: !12545)
!12548 = !DILocation(line: 705, column: 6, scope: !12441)
!12549 = !DILocation(line: 708, column: 5, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12545, file: !12075, line: 706, column: 3)
!12551 = !DILocation(line: 712, column: 27, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12441, file: !12075, line: 712, column: 6)
!12553 = !DILocation(line: 709, column: 3, scope: !12550)
!12554 = !DILocation(line: 712, column: 38, scope: !12552)
!12555 = !DILocation(line: 712, column: 61, scope: !12552)
!12556 = !DILocation(line: 712, column: 6, scope: !12441)
!12557 = !DILocation(line: 715, column: 5, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12552, file: !12075, line: 713, column: 3)
!12559 = !DILocation(line: 716, column: 3, scope: !12558)
!12560 = !DILocation(line: 719, column: 21, scope: !12441)
!12561 = !DILocation(line: 719, column: 70, scope: !12441)
!12562 = !DILocation(line: 719, column: 91, scope: !12441)
!12563 = !DILocation(line: 719, column: 50, scope: !12441)
!12564 = !DILocation(line: 719, column: 47, scope: !12441)
!12565 = !DILocation(line: 719, column: 19, scope: !12441)
!12566 = !DILocation(line: 722, column: 17, scope: !12441)
!12567 = !DILocation(line: 722, column: 3, scope: !12441)
!12568 = !DILocation(line: 724, column: 3, scope: !12441)
!12569 = !DILocation(line: 725, column: 1, scope: !12441)
!12570 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12075, file: !12075, line: 885, type: !6906, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12571)
!12571 = !{!12572, !12573, !12574, !12575}
!12572 = !DILocalVariable(name: "pllm", scope: !12570, file: !12075, line: 887, type: !121)
!12573 = !DILocalVariable(name: "pllvco", scope: !12570, file: !12075, line: 887, type: !121)
!12574 = !DILocalVariable(name: "pllp", scope: !12570, file: !12075, line: 887, type: !121)
!12575 = !DILocalVariable(name: "sysclockfreq", scope: !12570, file: !12075, line: 888, type: !121)
!12576 = !DILocation(line: 0, scope: !12570)
!12577 = !DILocation(line: 891, column: 16, scope: !12570)
!12578 = !DILocation(line: 891, column: 21, scope: !12570)
!12579 = !DILocation(line: 891, column: 3, scope: !12570)
!12580 = !DILocation(line: 907, column: 19, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !12075, line: 904, column: 5)
!12582 = distinct !DILexicalBlock(scope: !12570, file: !12075, line: 892, column: 3)
!12583 = !DILocation(line: 907, column: 27, scope: !12581)
!12584 = !DILocation(line: 908, column: 10, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12581, file: !12075, line: 908, column: 10)
!12586 = !DILocation(line: 0, scope: !12585)
!12587 = !DILocation(line: 918, column: 23, scope: !12581)
!12588 = !DILocation(line: 918, column: 82, scope: !12581)
!12589 = !DILocation(line: 920, column: 28, scope: !12581)
!12590 = !DILocation(line: 921, column: 7, scope: !12581)
!12591 = !DILocation(line: 0, scope: !12582)
!12592 = !DILocation(line: 929, column: 3, scope: !12570)
!12593 = !DISubprogram(name: "HAL_InitTick", scope: !12440, file: !12440, line: 223, type: !12594, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12594 = !DISubroutineType(types: !12595)
!12595 = !{!12078, !121}
!12596 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12075, file: !12075, line: 775, type: !12597, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12599)
!12597 = !DISubroutineType(types: !12598)
!12598 = !{null, !121, !121, !121}
!12599 = !{!12600, !12601, !12602, !12603, !12613}
!12600 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12596, file: !12075, line: 775, type: !121)
!12601 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12596, file: !12075, line: 775, type: !121)
!12602 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12596, file: !12075, line: 775, type: !121)
!12603 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12596, file: !12075, line: 777, type: !12604)
!12604 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12605, line: 62, baseType: !12606)
!12605 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12605, line: 46, size: 160, elements: !12607)
!12607 = !{!12608, !12609, !12610, !12611, !12612}
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12606, file: !12605, line: 48, baseType: !121, size: 32)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12606, file: !12605, line: 51, baseType: !121, size: 32, offset: 32)
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12606, file: !12605, line: 54, baseType: !121, size: 32, offset: 64)
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12606, file: !12605, line: 57, baseType: !121, size: 32, offset: 96)
!12612 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12606, file: !12605, line: 60, baseType: !121, size: 32, offset: 128)
!12613 = !DILocalVariable(name: "tmpreg", scope: !12614, file: !12075, line: 787, type: !120)
!12614 = distinct !DILexicalBlock(scope: !12615, file: !12075, line: 787, column: 5)
!12615 = distinct !DILexicalBlock(scope: !12616, file: !12075, line: 783, column: 3)
!12616 = distinct !DILexicalBlock(scope: !12596, file: !12075, line: 782, column: 6)
!12617 = !DILocation(line: 0, scope: !12596)
!12618 = !DILocation(line: 777, column: 3, scope: !12596)
!12619 = !DILocation(line: 777, column: 20, scope: !12596)
!12620 = !DILocation(line: 782, column: 15, scope: !12616)
!12621 = !DILocation(line: 782, column: 6, scope: !12596)
!12622 = !DILocation(line: 787, column: 5, scope: !12614)
!12623 = !DILocation(line: 787, column: 5, scope: !12615)
!12624 = !DILocation(line: 790, column: 21, scope: !12615)
!12625 = !DILocation(line: 790, column: 25, scope: !12615)
!12626 = !DILocation(line: 791, column: 21, scope: !12615)
!12627 = !DILocation(line: 791, column: 26, scope: !12615)
!12628 = !DILocation(line: 792, column: 21, scope: !12615)
!12629 = !DILocation(line: 792, column: 27, scope: !12615)
!12630 = !DILocation(line: 793, column: 21, scope: !12615)
!12631 = !DILocation(line: 793, column: 26, scope: !12615)
!12632 = !DILocation(line: 794, column: 21, scope: !12615)
!12633 = !DILocation(line: 794, column: 31, scope: !12615)
!12634 = !DILocation(line: 795, column: 5, scope: !12615)
!12635 = !DILocation(line: 798, column: 5, scope: !12615)
!12636 = !DILocation(line: 804, column: 3, scope: !12615)
!12637 = !DILocation(line: 830, column: 1, scope: !12596)
!12638 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12605, file: !12605, line: 224, type: !12639, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{null, !3120, !12641}
!12641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12604, size: 32)
!12642 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12075, file: !12075, line: 841, type: !3237, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !461)
!12643 = !DILocation(line: 843, column: 38, scope: !12642)
!12644 = !DILocation(line: 844, column: 1, scope: !12642)
!12645 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12075, file: !12075, line: 850, type: !3237, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !461)
!12646 = !DILocation(line: 852, column: 38, scope: !12645)
!12647 = !DILocation(line: 853, column: 1, scope: !12645)
!12648 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12075, file: !12075, line: 941, type: !6906, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !461)
!12649 = !DILocation(line: 943, column: 10, scope: !12648)
!12650 = !DILocation(line: 943, column: 3, scope: !12648)
!12651 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12075, file: !12075, line: 952, type: !6906, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !461)
!12652 = !DILocation(line: 955, column: 11, scope: !12651)
!12653 = !DILocation(line: 955, column: 56, scope: !12651)
!12654 = !DILocation(line: 955, column: 78, scope: !12651)
!12655 = !DILocation(line: 955, column: 36, scope: !12651)
!12656 = !DILocation(line: 955, column: 33, scope: !12651)
!12657 = !DILocation(line: 955, column: 3, scope: !12651)
!12658 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12075, file: !12075, line: 964, type: !6906, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !461)
!12659 = !DILocation(line: 967, column: 11, scope: !12658)
!12660 = !DILocation(line: 967, column: 55, scope: !12658)
!12661 = !DILocation(line: 967, column: 77, scope: !12658)
!12662 = !DILocation(line: 967, column: 35, scope: !12658)
!12663 = !DILocation(line: 967, column: 32, scope: !12658)
!12664 = !DILocation(line: 967, column: 3, scope: !12658)
!12665 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12075, file: !12075, line: 977, type: !12666, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12668)
!12666 = !DISubroutineType(types: !12667)
!12667 = !{null, !12083}
!12668 = !{!12669}
!12669 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12665, file: !12075, line: 977, type: !12083)
!12670 = !DILocation(line: 0, scope: !12665)
!12671 = !DILocation(line: 980, column: 22, scope: !12665)
!12672 = !DILocation(line: 980, column: 37, scope: !12665)
!12673 = !DILocation(line: 983, column: 12, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12665, file: !12075, line: 983, column: 6)
!12675 = !DILocation(line: 983, column: 15, scope: !12674)
!12676 = !DILocation(line: 983, column: 31, scope: !12674)
!12677 = !DILocation(line: 983, column: 6, scope: !12665)
!12678 = !DILocation(line: 985, column: 24, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12674, file: !12075, line: 984, column: 3)
!12680 = !DILocation(line: 985, column: 33, scope: !12679)
!12681 = !DILocation(line: 986, column: 3, scope: !12679)
!12682 = !DILocation(line: 987, column: 17, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12674, file: !12075, line: 987, column: 11)
!12684 = !DILocation(line: 987, column: 20, scope: !12683)
!12685 = !DILocation(line: 987, column: 35, scope: !12683)
!12686 = !DILocation(line: 0, scope: !12683)
!12687 = !DILocation(line: 987, column: 11, scope: !12674)
!12688 = !DILocation(line: 989, column: 33, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12683, file: !12075, line: 988, column: 3)
!12690 = !DILocation(line: 990, column: 3, scope: !12689)
!12691 = !DILocation(line: 993, column: 33, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12683, file: !12075, line: 992, column: 3)
!12693 = !DILocation(line: 997, column: 12, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12665, file: !12075, line: 997, column: 6)
!12695 = !DILocation(line: 997, column: 15, scope: !12694)
!12696 = !DILocation(line: 1003, column: 24, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12694, file: !12075, line: 1002, column: 3)
!12698 = !DILocation(line: 1003, column: 33, scope: !12697)
!12699 = !DILocation(line: 1006, column: 61, scope: !12665)
!12700 = !DILocation(line: 1006, column: 81, scope: !12665)
!12701 = !DILocation(line: 1006, column: 22, scope: !12665)
!12702 = !DILocation(line: 1006, column: 42, scope: !12665)
!12703 = !DILocation(line: 1009, column: 12, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12665, file: !12075, line: 1009, column: 6)
!12705 = !DILocation(line: 1009, column: 17, scope: !12704)
!12706 = !DILocation(line: 1009, column: 35, scope: !12704)
!12707 = !DILocation(line: 1009, column: 6, scope: !12665)
!12708 = !DILocation(line: 1011, column: 24, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12704, file: !12075, line: 1010, column: 3)
!12710 = !DILocation(line: 1011, column: 33, scope: !12709)
!12711 = !DILocation(line: 1012, column: 3, scope: !12709)
!12712 = !DILocation(line: 1013, column: 17, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12704, file: !12075, line: 1013, column: 11)
!12714 = !DILocation(line: 1013, column: 22, scope: !12713)
!12715 = !DILocation(line: 1013, column: 39, scope: !12713)
!12716 = !DILocation(line: 0, scope: !12713)
!12717 = !DILocation(line: 1013, column: 11, scope: !12704)
!12718 = !DILocation(line: 1015, column: 33, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12713, file: !12075, line: 1014, column: 3)
!12720 = !DILocation(line: 1016, column: 3, scope: !12719)
!12721 = !DILocation(line: 1019, column: 33, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12713, file: !12075, line: 1018, column: 3)
!12723 = !DILocation(line: 1023, column: 12, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12665, file: !12075, line: 1023, column: 6)
!12725 = !DILocation(line: 1023, column: 16, scope: !12724)
!12726 = !DILocation(line: 1029, column: 24, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12724, file: !12075, line: 1028, column: 3)
!12728 = !DILocation(line: 1029, column: 33, scope: !12727)
!12729 = !DILocation(line: 1033, column: 12, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12665, file: !12075, line: 1033, column: 6)
!12731 = !DILocation(line: 1033, column: 15, scope: !12730)
!12732 = !DILocation(line: 1033, column: 30, scope: !12730)
!12733 = !DILocation(line: 1033, column: 6, scope: !12665)
!12734 = !DILocation(line: 1039, column: 28, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12730, file: !12075, line: 1038, column: 3)
!12736 = !DILocation(line: 1039, column: 37, scope: !12735)
!12737 = !DILocation(line: 1041, column: 54, scope: !12665)
!12738 = !DILocation(line: 1041, column: 62, scope: !12665)
!12739 = !DILocation(line: 1041, column: 26, scope: !12665)
!12740 = !DILocation(line: 1041, column: 36, scope: !12665)
!12741 = !DILocation(line: 1042, column: 49, scope: !12665)
!12742 = !DILocation(line: 1042, column: 57, scope: !12665)
!12743 = !DILocation(line: 1042, column: 26, scope: !12665)
!12744 = !DILocation(line: 1042, column: 31, scope: !12665)
!12745 = !DILocation(line: 1043, column: 50, scope: !12665)
!12746 = !DILocation(line: 1043, column: 78, scope: !12665)
!12747 = !DILocation(line: 1043, column: 26, scope: !12665)
!12748 = !DILocation(line: 1043, column: 31, scope: !12665)
!12749 = !DILocation(line: 1044, column: 52, scope: !12665)
!12750 = !DILocation(line: 1044, column: 102, scope: !12665)
!12751 = !DILocation(line: 1044, column: 109, scope: !12665)
!12752 = !DILocation(line: 1044, column: 26, scope: !12665)
!12753 = !DILocation(line: 1044, column: 31, scope: !12665)
!12754 = !DILocation(line: 1045, column: 50, scope: !12665)
!12755 = !DILocation(line: 1045, column: 78, scope: !12665)
!12756 = !DILocation(line: 1045, column: 26, scope: !12665)
!12757 = !DILocation(line: 1045, column: 31, scope: !12665)
!12758 = !DILocation(line: 1046, column: 1, scope: !12665)
!12759 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12075, file: !12075, line: 1056, type: !12760, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12762)
!12760 = !DISubroutineType(types: !12761)
!12761 = !{null, !12444, !843}
!12762 = !{!12763, !12764}
!12763 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12759, file: !12075, line: 1056, type: !12444)
!12764 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12759, file: !12075, line: 1056, type: !843)
!12765 = !DILocation(line: 0, scope: !12759)
!12766 = !DILocation(line: 1059, column: 22, scope: !12759)
!12767 = !DILocation(line: 1059, column: 32, scope: !12759)
!12768 = !DILocation(line: 1062, column: 53, scope: !12759)
!12769 = !DILocation(line: 1062, column: 58, scope: !12759)
!12770 = !DILocation(line: 1062, column: 22, scope: !12759)
!12771 = !DILocation(line: 1062, column: 35, scope: !12759)
!12772 = !DILocation(line: 1065, column: 54, scope: !12759)
!12773 = !DILocation(line: 1065, column: 59, scope: !12759)
!12774 = !DILocation(line: 1065, column: 22, scope: !12759)
!12775 = !DILocation(line: 1065, column: 36, scope: !12759)
!12776 = !DILocation(line: 1068, column: 55, scope: !12759)
!12777 = !DILocation(line: 1068, column: 60, scope: !12759)
!12778 = !DILocation(line: 1068, column: 22, scope: !12759)
!12779 = !DILocation(line: 1068, column: 37, scope: !12759)
!12780 = !DILocation(line: 1071, column: 56, scope: !12759)
!12781 = !DILocation(line: 1071, column: 79, scope: !12759)
!12782 = !DILocation(line: 1071, column: 22, scope: !12759)
!12783 = !DILocation(line: 1071, column: 37, scope: !12759)
!12784 = !DILocation(line: 1074, column: 34, scope: !12759)
!12785 = !DILocation(line: 1074, column: 38, scope: !12759)
!12786 = !DILocation(line: 1074, column: 14, scope: !12759)
!12787 = !DILocation(line: 1075, column: 1, scope: !12759)
!12788 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12075, file: !12075, line: 1082, type: !3237, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !461)
!12789 = !DILocation(line: 1085, column: 6, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12788, file: !12075, line: 1085, column: 6)
!12791 = !DILocation(line: 1085, column: 6, scope: !12788)
!12792 = !DILocation(line: 1088, column: 5, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12790, file: !12075, line: 1086, column: 3)
!12794 = !DILocation(line: 1091, column: 5, scope: !12793)
!12795 = !DILocation(line: 1092, column: 3, scope: !12793)
!12796 = !DILocation(line: 1093, column: 1, scope: !12788)
!12797 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12075, file: !12075, line: 1099, type: !3237, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !461)
!12798 = !DILocation(line: 1104, column: 1, scope: !12797)
!12799 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12800, file: !12800, line: 257, type: !6916, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12801)
!12800 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12801 = !{!12802}
!12802 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12799, file: !12800, line: 257, type: !121)
!12803 = !DILocation(line: 0, scope: !12799)
!12804 = !DILocation(line: 260, column: 3, scope: !12799)
!12805 = !DILocation(line: 261, column: 1, scope: !12799)
!12806 = distinct !DISubprogram(name: "LL_InitTick", scope: !12807, file: !12807, line: 260, type: !10108, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12808)
!12807 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12808 = !{!12809, !12810}
!12809 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12806, file: !12807, line: 260, type: !121)
!12810 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12806, file: !12807, line: 260, type: !121)
!12811 = !DILocation(line: 0, scope: !12806)
!12812 = !DILocation(line: 263, column: 46, scope: !12806)
!12813 = !DILocation(line: 263, column: 55, scope: !12806)
!12814 = !DILocation(line: 263, column: 18, scope: !12806)
!12815 = !DILocation(line: 264, column: 18, scope: !12806)
!12816 = !DILocation(line: 265, column: 18, scope: !12806)
!12817 = !DILocation(line: 267, column: 1, scope: !12806)
!12818 = distinct !DISubprogram(name: "LL_mDelay", scope: !12800, file: !12800, line: 273, type: !6916, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12819)
!12819 = !{!12820, !12821}
!12820 = !DILocalVariable(name: "Delay", arg: 1, scope: !12818, file: !12800, line: 273, type: !121)
!12821 = !DILocalVariable(name: "tmp", scope: !12818, file: !12800, line: 275, type: !120)
!12822 = !DILocation(line: 0, scope: !12818)
!12823 = !DILocation(line: 275, column: 3, scope: !12818)
!12824 = !DILocation(line: 275, column: 18, scope: !12818)
!12825 = !DILocation(line: 275, column: 33, scope: !12818)
!12826 = !DILocation(line: 277, column: 10, scope: !12818)
!12827 = !DILocation(line: 280, column: 12, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12818, file: !12800, line: 280, column: 6)
!12829 = !DILocation(line: 285, column: 3, scope: !12818)
!12830 = !DILocation(line: 287, column: 18, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12832, file: !12800, line: 287, column: 8)
!12832 = distinct !DILexicalBlock(scope: !12818, file: !12800, line: 286, column: 3)
!12833 = !DILocation(line: 292, column: 1, scope: !12818)
!12834 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12800, file: !12800, line: 323, type: !6916, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12835)
!12835 = !{!12836}
!12836 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12834, file: !12800, line: 323, type: !121)
!12837 = !DILocation(line: 0, scope: !12834)
!12838 = !DILocation(line: 326, column: 19, scope: !12834)
!12839 = !DILocation(line: 327, column: 1, scope: !12834)
!12840 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12800, file: !12800, line: 338, type: !12841, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12844)
!12841 = !DISubroutineType(types: !12842)
!12842 = !{!12843, !121}
!12843 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !789, line: 201, baseType: !788)
!12844 = !{!12845, !12846, !12847, !12848, !12849}
!12845 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12840, file: !12800, line: 338, type: !121)
!12846 = !DILocalVariable(name: "timeout", scope: !12840, file: !12800, line: 340, type: !121)
!12847 = !DILocalVariable(name: "getlatency", scope: !12840, file: !12800, line: 341, type: !121)
!12848 = !DILocalVariable(name: "latency", scope: !12840, file: !12800, line: 342, type: !121)
!12849 = !DILocalVariable(name: "status", scope: !12840, file: !12800, line: 343, type: !12843)
!12850 = !DILocation(line: 0, scope: !12840)
!12851 = !DILocation(line: 347, column: 21, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12840, file: !12800, line: 347, column: 6)
!12853 = !DILocation(line: 347, column: 6, scope: !12840)
!12854 = !DILocation(line: 353, column: 8, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12856, file: !12800, line: 353, column: 8)
!12856 = distinct !DILexicalBlock(scope: !12852, file: !12800, line: 352, column: 3)
!12857 = !DILocation(line: 353, column: 40, scope: !12855)
!12858 = !DILocation(line: 353, column: 8, scope: !12856)
!12859 = !DILocation(line: 374, column: 55, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12861, file: !12800, line: 374, column: 10)
!12861 = distinct !DILexicalBlock(scope: !12855, file: !12800, line: 354, column: 5)
!12862 = !DILocation(line: 368, column: 26, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12861, file: !12800, line: 368, column: 10)
!12864 = !DILocation(line: 368, column: 55, scope: !12863)
!12865 = !DILocation(line: 380, column: 57, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !12800, line: 380, column: 12)
!12867 = distinct !DILexicalBlock(scope: !12860, file: !12800, line: 379, column: 7)
!12868 = !DILocation(line: 387, column: 8, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12856, file: !12800, line: 387, column: 8)
!12870 = !DILocation(line: 387, column: 40, scope: !12869)
!12871 = !DILocation(line: 387, column: 8, scope: !12856)
!12872 = !DILocation(line: 407, column: 26, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12874, file: !12800, line: 407, column: 10)
!12874 = distinct !DILexicalBlock(scope: !12869, file: !12800, line: 388, column: 5)
!12875 = !DILocation(line: 407, column: 55, scope: !12873)
!12876 = !DILocation(line: 413, column: 28, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !12800, line: 413, column: 12)
!12878 = distinct !DILexicalBlock(scope: !12873, file: !12800, line: 412, column: 7)
!12879 = !DILocation(line: 413, column: 57, scope: !12877)
!12880 = !DILocation(line: 0, scope: !12856)
!12881 = !DILocation(line: 420, column: 8, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12856, file: !12800, line: 420, column: 8)
!12883 = !DILocation(line: 420, column: 40, scope: !12882)
!12884 = !DILocation(line: 420, column: 8, scope: !12856)
!12885 = !DILocation(line: 429, column: 26, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12887, file: !12800, line: 429, column: 10)
!12887 = distinct !DILexicalBlock(scope: !12882, file: !12800, line: 421, column: 5)
!12888 = !DILocation(line: 429, column: 55, scope: !12886)
!12889 = !DILocation(line: 435, column: 28, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12891, file: !12800, line: 435, column: 12)
!12891 = distinct !DILexicalBlock(scope: !12886, file: !12800, line: 434, column: 7)
!12892 = !DILocation(line: 435, column: 57, scope: !12890)
!12893 = !DILocation(line: 444, column: 5, scope: !12856)
!12894 = !DILocation(line: 448, column: 5, scope: !12856)
!12895 = !DILocation(line: 451, column: 18, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12856, file: !12800, line: 449, column: 5)
!12897 = !DILocation(line: 452, column: 12, scope: !12896)
!12898 = !DILocation(line: 453, column: 26, scope: !12856)
!12899 = !DILocation(line: 453, column: 38, scope: !12856)
!12900 = !DILocation(line: 453, column: 5, scope: !12896)
!12901 = distinct !{!12901, !12894, !12902}
!12902 = !DILocation(line: 453, column: 54, scope: !12856)
!12903 = !DILocation(line: 0, scope: !12852)
!12904 = !DILocation(line: 464, column: 3, scope: !12840)
!12905 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12906, file: !12906, line: 519, type: !6906, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!12906 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12907 = !DILocation(line: 521, column: 21, scope: !12905)
!12908 = !DILocation(line: 521, column: 3, scope: !12905)
!12909 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5826, file: !5826, line: 1543, type: !6916, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12910)
!12910 = !{!12911}
!12911 = !DILocalVariable(name: "Latency", arg: 1, scope: !12909, file: !5826, line: 1543, type: !121)
!12912 = !DILocation(line: 0, scope: !12909)
!12913 = !DILocation(line: 1545, column: 3, scope: !12909)
!12914 = !DILocation(line: 1546, column: 1, scope: !12909)
!12915 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5826, file: !5826, line: 1569, type: !6906, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!12916 = !DILocation(line: 1571, column: 21, scope: !12915)
!12917 = !DILocation(line: 1571, column: 3, scope: !12915)
!12918 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12800, file: !12800, line: 483, type: !12919, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12935)
!12919 = !DISubroutineType(types: !12920)
!12920 = !{!12843, !12921, !12928}
!12921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12922, size: 32)
!12922 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12807, line: 114, baseType: !12923)
!12923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12807, line: 94, size: 96, elements: !12924)
!12924 = !{!12925, !12926, !12927}
!12925 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12923, file: !12807, line: 96, baseType: !121, size: 32)
!12926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12923, file: !12807, line: 102, baseType: !121, size: 32, offset: 32)
!12927 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12923, file: !12807, line: 109, baseType: !121, size: 32, offset: 64)
!12928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12929, size: 32)
!12929 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12807, line: 139, baseType: !12930)
!12930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12807, line: 119, size: 96, elements: !12931)
!12931 = !{!12932, !12933, !12934}
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12930, file: !12807, line: 121, baseType: !121, size: 32)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12930, file: !12807, line: 127, baseType: !121, size: 32, offset: 32)
!12934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12930, file: !12807, line: 133, baseType: !121, size: 32, offset: 64)
!12935 = !{!12936, !12937, !12938, !12939}
!12936 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12918, file: !12800, line: 483, type: !12921)
!12937 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12918, file: !12800, line: 484, type: !12928)
!12938 = !DILocalVariable(name: "status", scope: !12918, file: !12800, line: 486, type: !12843)
!12939 = !DILocalVariable(name: "pllfreq", scope: !12918, file: !12800, line: 487, type: !121)
!12940 = !DILocation(line: 0, scope: !12918)
!12941 = !DILocation(line: 490, column: 6, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12918, file: !12800, line: 490, column: 6)
!12943 = !DILocation(line: 490, column: 25, scope: !12942)
!12944 = !DILocation(line: 490, column: 6, scope: !12918)
!12945 = !DILocation(line: 493, column: 15, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12942, file: !12800, line: 491, column: 3)
!12947 = !DILocation(line: 496, column: 8, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12946, file: !12800, line: 496, column: 8)
!12949 = !DILocation(line: 496, column: 29, scope: !12948)
!12950 = !DILocation(line: 496, column: 8, scope: !12946)
!12951 = !DILocation(line: 498, column: 7, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12948, file: !12800, line: 497, column: 5)
!12953 = !DILocation(line: 499, column: 7, scope: !12952)
!12954 = !DILocation(line: 499, column: 14, scope: !12952)
!12955 = !DILocation(line: 499, column: 35, scope: !12952)
!12956 = distinct !{!12956, !12953, !12957}
!12957 = !DILocation(line: 502, column: 7, scope: !12952)
!12958 = !DILocation(line: 506, column: 76, scope: !12946)
!12959 = !DILocation(line: 506, column: 103, scope: !12946)
!12960 = !DILocation(line: 507, column: 54, scope: !12946)
!12961 = !DILocation(line: 506, column: 5, scope: !12946)
!12962 = !DILocation(line: 510, column: 14, scope: !12946)
!12963 = !DILocation(line: 511, column: 3, scope: !12946)
!12964 = !DILocation(line: 0, scope: !12942)
!12965 = !DILocation(line: 518, column: 3, scope: !12918)
!12966 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12800, file: !12800, line: 642, type: !12967, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12969)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{!12843}
!12969 = !{!12970}
!12970 = !DILocalVariable(name: "status", scope: !12966, file: !12800, line: 644, type: !12843)
!12971 = !DILocation(line: 0, scope: !12966)
!12972 = !DILocation(line: 647, column: 6, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12966, file: !12800, line: 647, column: 6)
!12974 = !DILocation(line: 647, column: 27, scope: !12973)
!12975 = !DILocation(line: 663, column: 6, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12966, file: !12800, line: 663, column: 6)
!12977 = !DILocation(line: 663, column: 30, scope: !12976)
!12978 = !DILocation(line: 663, column: 6, scope: !12966)
!12979 = !DILocation(line: 669, column: 3, scope: !12966)
!12980 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12800, file: !12800, line: 611, type: !12981, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !12983)
!12981 = !DISubroutineType(types: !12982)
!12982 = !{!121, !121, !12921}
!12983 = !{!12984, !12985, !12986}
!12984 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12980, file: !12800, line: 611, type: !121)
!12985 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12980, file: !12800, line: 611, type: !12921)
!12986 = !DILocalVariable(name: "pllfreq", scope: !12980, file: !12800, line: 613, type: !121)
!12987 = !DILocation(line: 0, scope: !12980)
!12988 = !DILocation(line: 622, column: 56, scope: !12980)
!12989 = !DILocation(line: 622, column: 61, scope: !12980)
!12990 = !DILocation(line: 622, column: 32, scope: !12980)
!12991 = !DILocation(line: 626, column: 45, scope: !12980)
!12992 = !DILocation(line: 626, column: 50, scope: !12980)
!12993 = !DILocation(line: 626, column: 21, scope: !12980)
!12994 = !DILocation(line: 630, column: 47, scope: !12980)
!12995 = !DILocation(line: 630, column: 82, scope: !12980)
!12996 = !DILocation(line: 630, column: 21, scope: !12980)
!12997 = !DILocation(line: 633, column: 3, scope: !12980)
!12998 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8858, file: !8858, line: 3007, type: !6906, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!12999 = !DILocation(line: 3009, column: 11, scope: !12998)
!13000 = !DILocation(line: 3009, column: 44, scope: !12998)
!13001 = !DILocation(line: 3009, column: 3, scope: !12998)
!13002 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8858, file: !8858, line: 2987, type: !3237, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13003 = !DILocation(line: 2989, column: 3, scope: !13002)
!13004 = !DILocation(line: 2990, column: 1, scope: !13002)
!13005 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8858, file: !8858, line: 4304, type: !8992, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13006)
!13006 = !{!13007, !13008, !13009, !13010}
!13007 = !DILocalVariable(name: "Source", arg: 1, scope: !13005, file: !8858, line: 4304, type: !121)
!13008 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13005, file: !8858, line: 4304, type: !121)
!13009 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13005, file: !8858, line: 4304, type: !121)
!13010 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13005, file: !8858, line: 4304, type: !121)
!13011 = !DILocation(line: 0, scope: !13005)
!13012 = !DILocation(line: 4306, column: 3, scope: !13005)
!13013 = !DILocation(line: 4308, column: 3, scope: !13005)
!13014 = !DILocation(line: 4312, column: 1, scope: !13005)
!13015 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12800, file: !12800, line: 681, type: !13016, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13018)
!13016 = !DISubroutineType(types: !13017)
!13017 = !{!12843, !121, !12928}
!13018 = !{!13019, !13020, !13021, !13022}
!13019 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13015, file: !12800, line: 681, type: !121)
!13020 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13015, file: !12800, line: 681, type: !12928)
!13021 = !DILocalVariable(name: "status", scope: !13015, file: !12800, line: 683, type: !12843)
!13022 = !DILocalVariable(name: "hclk_frequency", scope: !13015, file: !12800, line: 684, type: !121)
!13023 = !DILocation(line: 0, scope: !13015)
!13024 = !DILocation(line: 691, column: 20, scope: !13015)
!13025 = !DILocation(line: 694, column: 6, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13015, file: !12800, line: 694, column: 6)
!13027 = !DILocation(line: 694, column: 22, scope: !13026)
!13028 = !DILocation(line: 694, column: 6, scope: !13015)
!13029 = !DILocation(line: 697, column: 14, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13026, file: !12800, line: 695, column: 3)
!13031 = !DILocation(line: 701, column: 13, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13015, file: !12800, line: 701, column: 6)
!13033 = !DILocation(line: 701, column: 6, scope: !13015)
!13034 = !DILocation(line: 704, column: 5, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13032, file: !12800, line: 702, column: 3)
!13036 = !DILocation(line: 705, column: 5, scope: !13035)
!13037 = !DILocation(line: 705, column: 12, scope: !13035)
!13038 = !DILocation(line: 705, column: 33, scope: !13035)
!13039 = distinct !{!13039, !13036, !13040}
!13040 = !DILocation(line: 708, column: 5, scope: !13035)
!13041 = !DILocation(line: 711, column: 49, scope: !13035)
!13042 = !DILocation(line: 711, column: 5, scope: !13035)
!13043 = !DILocation(line: 712, column: 5, scope: !13035)
!13044 = !DILocation(line: 713, column: 5, scope: !13035)
!13045 = !DILocation(line: 713, column: 12, scope: !13035)
!13046 = !DILocation(line: 713, column: 37, scope: !13035)
!13047 = distinct !{!13047, !13044, !13048}
!13048 = !DILocation(line: 716, column: 5, scope: !13035)
!13049 = !DILocation(line: 719, column: 50, scope: !13035)
!13050 = !DILocation(line: 719, column: 5, scope: !13035)
!13051 = !DILocation(line: 720, column: 50, scope: !13035)
!13052 = !DILocation(line: 720, column: 5, scope: !13035)
!13053 = !DILocation(line: 721, column: 3, scope: !13035)
!13054 = !DILocation(line: 724, column: 6, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13015, file: !12800, line: 724, column: 6)
!13056 = !DILocation(line: 724, column: 22, scope: !13055)
!13057 = !DILocation(line: 724, column: 6, scope: !13015)
!13058 = !DILocation(line: 727, column: 14, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13055, file: !12800, line: 725, column: 3)
!13060 = !DILocation(line: 728, column: 3, scope: !13059)
!13061 = !DILocation(line: 731, column: 13, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13015, file: !12800, line: 731, column: 6)
!13063 = !DILocation(line: 731, column: 6, scope: !13015)
!13064 = !DILocation(line: 733, column: 5, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13062, file: !12800, line: 732, column: 3)
!13066 = !DILocation(line: 734, column: 3, scope: !13065)
!13067 = !DILocation(line: 736, column: 3, scope: !13015)
!13068 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8858, file: !8858, line: 4184, type: !3237, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13069 = !DILocation(line: 4186, column: 3, scope: !13068)
!13070 = !DILocation(line: 4187, column: 1, scope: !13068)
!13071 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8858, file: !8858, line: 4205, type: !6906, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13072 = !DILocation(line: 4207, column: 11, scope: !13071)
!13073 = !DILocation(line: 4207, column: 44, scope: !13071)
!13074 = !DILocation(line: 4207, column: 3, scope: !13071)
!13075 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8858, file: !8858, line: 3224, type: !6916, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13076)
!13076 = !{!13077}
!13077 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13075, file: !8858, line: 3224, type: !121)
!13078 = !DILocation(line: 0, scope: !13075)
!13079 = !DILocation(line: 3226, column: 3, scope: !13075)
!13080 = !DILocation(line: 3227, column: 1, scope: !13075)
!13081 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8858, file: !8858, line: 3188, type: !6916, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13082)
!13082 = !{!13083}
!13083 = !DILocalVariable(name: "Source", arg: 1, scope: !13081, file: !8858, line: 3188, type: !121)
!13084 = !DILocation(line: 0, scope: !13081)
!13085 = !DILocation(line: 3190, column: 3, scope: !13081)
!13086 = !DILocation(line: 3191, column: 1, scope: !13081)
!13087 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8858, file: !8858, line: 3204, type: !6906, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13088 = !DILocation(line: 3206, column: 21, scope: !13087)
!13089 = !DILocation(line: 3206, column: 3, scope: !13087)
!13090 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8858, file: !8858, line: 3240, type: !6916, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13091)
!13091 = !{!13092}
!13092 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13090, file: !8858, line: 3240, type: !121)
!13093 = !DILocation(line: 0, scope: !13090)
!13094 = !DILocation(line: 3242, column: 3, scope: !13090)
!13095 = !DILocation(line: 3243, column: 1, scope: !13090)
!13096 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8858, file: !8858, line: 3256, type: !6916, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13097)
!13097 = !{!13098}
!13098 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13096, file: !8858, line: 3256, type: !121)
!13099 = !DILocation(line: 0, scope: !13096)
!13100 = !DILocation(line: 3258, column: 3, scope: !13096)
!13101 = !DILocation(line: 3259, column: 1, scope: !13096)
!13102 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8858, file: !8858, line: 5153, type: !6906, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13103 = !DILocation(line: 5155, column: 11, scope: !13102)
!13104 = !DILocation(line: 5155, column: 47, scope: !13102)
!13105 = !DILocation(line: 5155, column: 3, scope: !13102)
!13106 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12800, file: !12800, line: 540, type: !13107, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13109)
!13107 = !DISubroutineType(types: !13108)
!13108 = !{!12843, !121, !121, !12921, !12928}
!13109 = !{!13110, !13111, !13112, !13113, !13114, !13115}
!13110 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13106, file: !12800, line: 540, type: !121)
!13111 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13106, file: !12800, line: 540, type: !121)
!13112 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13106, file: !12800, line: 541, type: !12921)
!13113 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13106, file: !12800, line: 541, type: !12928)
!13114 = !DILocalVariable(name: "status", scope: !13106, file: !12800, line: 543, type: !12843)
!13115 = !DILocalVariable(name: "pllfreq", scope: !13106, file: !12800, line: 544, type: !121)
!13116 = !DILocation(line: 0, scope: !13106)
!13117 = !DILocation(line: 551, column: 6, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13106, file: !12800, line: 551, column: 6)
!13119 = !DILocation(line: 551, column: 25, scope: !13118)
!13120 = !DILocation(line: 551, column: 6, scope: !13106)
!13121 = !DILocation(line: 554, column: 15, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13118, file: !12800, line: 552, column: 3)
!13123 = !DILocation(line: 557, column: 8, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13122, file: !12800, line: 557, column: 8)
!13125 = !DILocation(line: 557, column: 29, scope: !13124)
!13126 = !DILocation(line: 557, column: 8, scope: !13122)
!13127 = !DILocation(line: 560, column: 20, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13129, file: !12800, line: 560, column: 10)
!13129 = distinct !DILexicalBlock(scope: !13124, file: !12800, line: 558, column: 5)
!13130 = !DILocation(line: 560, column: 10, scope: !13129)
!13131 = !DILocation(line: 562, column: 9, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13128, file: !12800, line: 561, column: 7)
!13133 = !DILocation(line: 563, column: 7, scope: !13132)
!13134 = !DILocation(line: 566, column: 9, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13128, file: !12800, line: 565, column: 7)
!13136 = !DILocation(line: 570, column: 7, scope: !13129)
!13137 = !DILocation(line: 571, column: 7, scope: !13129)
!13138 = !DILocation(line: 571, column: 14, scope: !13129)
!13139 = !DILocation(line: 571, column: 35, scope: !13129)
!13140 = distinct !{!13140, !13137, !13141}
!13141 = !DILocation(line: 574, column: 7, scope: !13129)
!13142 = !DILocation(line: 578, column: 76, scope: !13122)
!13143 = !DILocation(line: 578, column: 103, scope: !13122)
!13144 = !DILocation(line: 579, column: 54, scope: !13122)
!13145 = !DILocation(line: 578, column: 5, scope: !13122)
!13146 = !DILocation(line: 582, column: 14, scope: !13122)
!13147 = !DILocation(line: 583, column: 3, scope: !13122)
!13148 = !DILocation(line: 0, scope: !13118)
!13149 = !DILocation(line: 590, column: 3, scope: !13106)
!13150 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8858, file: !8858, line: 2969, type: !6906, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13151 = !DILocation(line: 2971, column: 11, scope: !13150)
!13152 = !DILocation(line: 2971, column: 44, scope: !13150)
!13153 = !DILocation(line: 2971, column: 3, scope: !13150)
!13154 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8858, file: !8858, line: 2929, type: !3237, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13155 = !DILocation(line: 2931, column: 3, scope: !13154)
!13156 = !DILocation(line: 2932, column: 1, scope: !13154)
!13157 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8858, file: !8858, line: 2939, type: !3237, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13158 = !DILocation(line: 2941, column: 3, scope: !13157)
!13159 = !DILocation(line: 2942, column: 1, scope: !13157)
!13160 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8858, file: !8858, line: 2949, type: !3237, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !461)
!13161 = !DILocation(line: 2951, column: 3, scope: !13160)
!13162 = !DILocation(line: 2952, column: 1, scope: !13160)
!13163 = distinct !DISubprogram(name: "z_device_state_init", scope: !13164, file: !13164, line: 23, type: !3237, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13165)
!13164 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13165 = !{!13166}
!13166 = !DILocalVariable(name: "dev", scope: !13163, file: !13164, line: 25, type: !13167)
!13167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13168, size: 32)
!13168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13169)
!13169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !13170)
!13170 = !{!13171, !13172, !13173, !13174, !13180, !13181}
!13171 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13169, file: !141, line: 380, baseType: !144, size: 32)
!13172 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13169, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13169, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!13174 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13169, file: !141, line: 386, baseType: !13175, size: 32, offset: 96)
!13175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13176, size: 32)
!13176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !13177)
!13177 = !{!13178, !13179}
!13178 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13176, file: !141, line: 359, baseType: !154, size: 8)
!13179 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13176, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13180 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13169, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!13181 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13169, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!13182 = !DILocation(line: 0, scope: !13163)
!13183 = !DILocation(line: 31, column: 1, scope: !13163)
!13184 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13164, file: !13164, line: 33, type: !13185, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13187)
!13185 = !DISubroutineType(types: !13186)
!13186 = !{!13167, !144}
!13187 = !{!13188, !13189}
!13188 = !DILocalVariable(name: "name", arg: 1, scope: !13184, file: !13164, line: 33, type: !144)
!13189 = !DILocalVariable(name: "dev", scope: !13184, file: !13164, line: 35, type: !13167)
!13190 = !DILocation(line: 0, scope: !13184)
!13191 = !DILocation(line: 40, column: 12, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13184, file: !13164, line: 40, column: 6)
!13193 = !DILocation(line: 40, column: 21, scope: !13192)
!13194 = !DILocation(line: 40, column: 25, scope: !13192)
!13195 = !DILocation(line: 40, column: 33, scope: !13192)
!13196 = !DILocation(line: 40, column: 6, scope: !13184)
!13197 = !DILocation(line: 55, column: 2, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13184, file: !13164, line: 55, column: 2)
!13199 = !DILocation(line: 50, column: 7, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13201, file: !13164, line: 50, column: 7)
!13201 = distinct !DILexicalBlock(scope: !13202, file: !13164, line: 49, column: 57)
!13202 = distinct !DILexicalBlock(scope: !13203, file: !13164, line: 49, column: 2)
!13203 = distinct !DILexicalBlock(scope: !13184, file: !13164, line: 49, column: 2)
!13204 = !DILocation(line: 50, column: 30, scope: !13200)
!13205 = !DILocation(line: 50, column: 39, scope: !13200)
!13206 = !DILocation(line: 50, column: 44, scope: !13200)
!13207 = !DILocation(line: 50, column: 7, scope: !13201)
!13208 = !DILocation(line: 49, column: 53, scope: !13202)
!13209 = !DILocation(line: 49, column: 33, scope: !13202)
!13210 = !DILocation(line: 49, column: 2, scope: !13203)
!13211 = distinct !{!13211, !13210, !13212}
!13212 = !DILocation(line: 53, column: 2, scope: !13203)
!13213 = !DILocation(line: 56, column: 7, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13215, file: !13164, line: 56, column: 7)
!13215 = distinct !DILexicalBlock(scope: !13216, file: !13164, line: 55, column: 57)
!13216 = distinct !DILexicalBlock(scope: !13198, file: !13164, line: 55, column: 2)
!13217 = !DILocation(line: 56, column: 30, scope: !13214)
!13218 = !DILocation(line: 56, column: 52, scope: !13214)
!13219 = !DILocation(line: 56, column: 34, scope: !13214)
!13220 = !DILocation(line: 56, column: 58, scope: !13214)
!13221 = !DILocation(line: 56, column: 7, scope: !13215)
!13222 = !DILocation(line: 55, column: 53, scope: !13216)
!13223 = !DILocation(line: 55, column: 33, scope: !13216)
!13224 = distinct !{!13224, !13197, !13225}
!13225 = !DILocation(line: 59, column: 2, scope: !13198)
!13226 = !DILocation(line: 62, column: 1, scope: !13184)
!13227 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13164, file: !13164, line: 93, type: !13228, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13230)
!13228 = !DISubroutineType(types: !13229)
!13229 = !{!157, !13167}
!13230 = !{!13231}
!13231 = !DILocalVariable(name: "dev", arg: 1, scope: !13227, file: !13164, line: 93, type: !13167)
!13232 = !DILocation(line: 0, scope: !13227)
!13233 = !DILocation(line: 99, column: 10, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13227, file: !13164, line: 99, column: 6)
!13235 = !DILocation(line: 99, column: 6, scope: !13227)
!13236 = !DILocation(line: 103, column: 14, scope: !13227)
!13237 = !DILocation(line: 103, column: 21, scope: !13227)
!13238 = !DILocation(line: 103, column: 33, scope: !13227)
!13239 = !DILocation(line: 103, column: 49, scope: !13227)
!13240 = !DILocation(line: 103, column: 58, scope: !13227)
!13241 = !DILocation(line: 104, column: 1, scope: !13227)
!13242 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13164, file: !13164, line: 87, type: !13243, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13246)
!13243 = !DISubroutineType(types: !13244)
!13244 = !{!344, !13245}
!13245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13167, size: 32)
!13246 = !{!13247}
!13247 = !DILocalVariable(name: "devices", arg: 1, scope: !13242, file: !13164, line: 87, type: !13245)
!13248 = !DILocation(line: 0, scope: !13242)
!13249 = !DILocation(line: 89, column: 11, scope: !13242)
!13250 = !DILocation(line: 90, column: 2, scope: !13242)
!13251 = distinct !DISubprogram(name: "device_required_foreach", scope: !13164, file: !13164, line: 125, type: !13252, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13258)
!13252 = !DISubroutineType(types: !13253)
!13253 = !{!103, !13167, !13254, !102}
!13254 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !13255)
!13255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13256, size: 32)
!13256 = !DISubroutineType(types: !13257)
!13257 = !{!103, !13167, !102}
!13258 = !{!13259, !13260, !13261, !13262, !13263}
!13259 = !DILocalVariable(name: "dev", arg: 1, scope: !13251, file: !13164, line: 125, type: !13167)
!13260 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13251, file: !13164, line: 126, type: !13254)
!13261 = !DILocalVariable(name: "context", arg: 3, scope: !13251, file: !13164, line: 127, type: !102)
!13262 = !DILocalVariable(name: "handle_count", scope: !13251, file: !13164, line: 129, type: !344)
!13263 = !DILocalVariable(name: "handles", scope: !13251, file: !13164, line: 130, type: !160)
!13264 = !DILocation(line: 0, scope: !13251)
!13265 = !DILocation(line: 129, column: 2, scope: !13251)
!13266 = !DILocation(line: 129, column: 9, scope: !13251)
!13267 = !DILocation(line: 130, column: 35, scope: !13251)
!13268 = !DILocation(line: 132, column: 33, scope: !13251)
!13269 = !DILocation(line: 132, column: 9, scope: !13251)
!13270 = !DILocation(line: 133, column: 1, scope: !13251)
!13271 = !DILocation(line: 132, column: 2, scope: !13251)
!13272 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !13273, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13275)
!13273 = !DISubroutineType(types: !13274)
!13274 = !{!160, !13167, !2614}
!13275 = !{!13276, !13277, !13278, !13279}
!13276 = !DILocalVariable(name: "dev", arg: 1, scope: !13272, file: !141, line: 493, type: !13167)
!13277 = !DILocalVariable(name: "count", arg: 2, scope: !13272, file: !141, line: 493, type: !2614)
!13278 = !DILocalVariable(name: "rv", scope: !13272, file: !141, line: 495, type: !160)
!13279 = !DILocalVariable(name: "i", scope: !13280, file: !141, line: 498, type: !344)
!13280 = distinct !DILexicalBlock(scope: !13281, file: !141, line: 497, column: 18)
!13281 = distinct !DILexicalBlock(scope: !13272, file: !141, line: 497, column: 6)
!13282 = !DILocation(line: 0, scope: !13272)
!13283 = !DILocation(line: 495, column: 35, scope: !13272)
!13284 = !DILocation(line: 497, column: 9, scope: !13281)
!13285 = !DILocation(line: 497, column: 6, scope: !13272)
!13286 = !DILocation(line: 0, scope: !13280)
!13287 = !DILocation(line: 500, column: 11, scope: !13280)
!13288 = !DILocation(line: 500, column: 40, scope: !13280)
!13289 = !DILocation(line: 502, column: 4, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13280, file: !141, line: 501, column: 40)
!13291 = distinct !{!13291, !13292, !13293}
!13292 = !DILocation(line: 500, column: 3, scope: !13280)
!13293 = !DILocation(line: 503, column: 3, scope: !13280)
!13294 = !DILocation(line: 504, column: 10, scope: !13280)
!13295 = !DILocation(line: 505, column: 2, scope: !13280)
!13296 = !DILocation(line: 507, column: 2, scope: !13272)
!13297 = distinct !DISubprogram(name: "device_visitor", scope: !13164, file: !13164, line: 106, type: !13298, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13300)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!103, !160, !344, !13254, !102}
!13300 = !{!13301, !13302, !13303, !13304, !13305, !13307, !13310, !13311}
!13301 = !DILocalVariable(name: "handles", arg: 1, scope: !13297, file: !13164, line: 106, type: !160)
!13302 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13297, file: !13164, line: 107, type: !344)
!13303 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13297, file: !13164, line: 108, type: !13254)
!13304 = !DILocalVariable(name: "context", arg: 4, scope: !13297, file: !13164, line: 109, type: !102)
!13305 = !DILocalVariable(name: "i", scope: !13306, file: !13164, line: 112, type: !344)
!13306 = distinct !DILexicalBlock(scope: !13297, file: !13164, line: 112, column: 2)
!13307 = !DILocalVariable(name: "dh", scope: !13308, file: !13164, line: 113, type: !162)
!13308 = distinct !DILexicalBlock(scope: !13309, file: !13164, line: 112, column: 44)
!13309 = distinct !DILexicalBlock(scope: !13306, file: !13164, line: 112, column: 2)
!13310 = !DILocalVariable(name: "rdev", scope: !13308, file: !13164, line: 114, type: !13167)
!13311 = !DILocalVariable(name: "rc", scope: !13308, file: !13164, line: 115, type: !103)
!13312 = !DILocation(line: 0, scope: !13297)
!13313 = !DILocation(line: 0, scope: !13306)
!13314 = !DILocation(line: 112, column: 23, scope: !13309)
!13315 = !DILocation(line: 112, column: 2, scope: !13306)
!13316 = distinct !{!13316, !13315, !13317}
!13317 = !DILocation(line: 120, column: 2, scope: !13306)
!13318 = !DILocation(line: 113, column: 24, scope: !13308)
!13319 = !DILocation(line: 0, scope: !13308)
!13320 = !DILocation(line: 114, column: 31, scope: !13308)
!13321 = !DILocation(line: 115, column: 12, scope: !13308)
!13322 = !DILocation(line: 117, column: 10, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13308, file: !13164, line: 117, column: 7)
!13324 = !DILocation(line: 112, column: 39, scope: !13309)
!13325 = !DILocation(line: 123, column: 1, scope: !13297)
!13326 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !13327, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13329)
!13327 = !DISubroutineType(types: !13328)
!13328 = !{!13167, !162}
!13329 = !{!13330, !13331, !13332}
!13330 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13326, file: !141, line: 439, type: !162)
!13331 = !DILocalVariable(name: "dev", scope: !13326, file: !141, line: 443, type: !13167)
!13332 = !DILocalVariable(name: "numdev", scope: !13326, file: !141, line: 444, type: !344)
!13333 = !DILocation(line: 0, scope: !13326)
!13334 = !DILocation(line: 446, column: 7, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13326, file: !141, line: 446, column: 6)
!13336 = !DILocation(line: 446, column: 18, scope: !13335)
!13337 = !DILocation(line: 446, column: 23, scope: !13335)
!13338 = !DILocation(line: 450, column: 2, scope: !13326)
!13339 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13164, file: !13164, line: 135, type: !13252, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13340)
!13340 = !{!13341, !13342, !13343, !13344, !13345}
!13341 = !DILocalVariable(name: "dev", arg: 1, scope: !13339, file: !13164, line: 135, type: !13167)
!13342 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13339, file: !13164, line: 136, type: !13254)
!13343 = !DILocalVariable(name: "context", arg: 3, scope: !13339, file: !13164, line: 137, type: !102)
!13344 = !DILocalVariable(name: "handle_count", scope: !13339, file: !13164, line: 139, type: !344)
!13345 = !DILocalVariable(name: "handles", scope: !13339, file: !13164, line: 140, type: !160)
!13346 = !DILocation(line: 0, scope: !13339)
!13347 = !DILocation(line: 139, column: 2, scope: !13339)
!13348 = !DILocation(line: 139, column: 9, scope: !13339)
!13349 = !DILocation(line: 140, column: 35, scope: !13339)
!13350 = !DILocation(line: 142, column: 33, scope: !13339)
!13351 = !DILocation(line: 142, column: 9, scope: !13339)
!13352 = !DILocation(line: 143, column: 1, scope: !13339)
!13353 = !DILocation(line: 142, column: 2, scope: !13339)
!13354 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !13273, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !13355)
!13355 = !{!13356, !13357, !13358, !13359, !13360}
!13356 = !DILocalVariable(name: "dev", arg: 1, scope: !13354, file: !141, line: 573, type: !13167)
!13357 = !DILocalVariable(name: "count", arg: 2, scope: !13354, file: !141, line: 573, type: !2614)
!13358 = !DILocalVariable(name: "rv", scope: !13354, file: !141, line: 575, type: !160)
!13359 = !DILocalVariable(name: "region", scope: !13354, file: !141, line: 576, type: !344)
!13360 = !DILocalVariable(name: "i", scope: !13354, file: !141, line: 577, type: !344)
!13361 = !DILocation(line: 0, scope: !13354)
!13362 = !DILocation(line: 575, column: 35, scope: !13354)
!13363 = !DILocation(line: 579, column: 9, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13354, file: !141, line: 579, column: 6)
!13365 = !DILocation(line: 579, column: 6, scope: !13354)
!13366 = !DILocation(line: 582, column: 8, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !141, line: 582, column: 8)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !141, line: 581, column: 23)
!13369 = distinct !DILexicalBlock(scope: !13364, file: !141, line: 579, column: 18)
!13370 = !DILocation(line: 582, column: 12, scope: !13367)
!13371 = !DILocation(line: 585, column: 6, scope: !13368)
!13372 = !DILocation(line: 0, scope: !13369)
!13373 = !DILocation(line: 581, column: 17, scope: !13369)
!13374 = !DILocation(line: 581, column: 3, scope: !13369)
!13375 = !DILocation(line: 588, column: 10, scope: !13369)
!13376 = !DILocation(line: 588, column: 16, scope: !13369)
!13377 = !DILocation(line: 589, column: 4, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13369, file: !141, line: 588, column: 39)
!13379 = !DILocation(line: 588, column: 3, scope: !13369)
!13380 = distinct !{!13380, !13379, !13381}
!13381 = !DILocation(line: 590, column: 3, scope: !13369)
!13382 = !DILocation(line: 591, column: 10, scope: !13369)
!13383 = !DILocation(line: 592, column: 2, scope: !13369)
!13384 = !DILocation(line: 575, column: 25, scope: !13354)
!13385 = !DILocation(line: 594, column: 2, scope: !13354)
!13386 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1949, file: !1949, line: 49, type: !5997, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1946, retainedNodes: !461)
!13387 = !DILocation(line: 51, column: 10, scope: !13386)
!13388 = !DILocation(line: 51, column: 20, scope: !13386)
!13389 = !DILocation(line: 51, column: 2, scope: !13386)
!13390 = distinct !DISubprogram(name: "coredump", scope: !3204, file: !3204, line: 209, type: !13391, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13537)
!13391 = !DISubroutineType(types: !13392)
!13392 = !{null, !32, !13393, !13437}
!13393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13394, size: 32)
!13394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13395)
!13395 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2821, line: 141, baseType: !13396)
!13396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2821, line: 97, size: 256, elements: !13397)
!13397 = !{!13398}
!13398 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13396, file: !2821, line: 107, baseType: !13399, size: 256)
!13399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2821, line: 98, size: 256, elements: !13400)
!13400 = !{!13401, !13406, !13411, !13416, !13421, !13426, !13431, !13436}
!13401 = !DIDerivedType(tag: DW_TAG_member, scope: !13399, file: !2821, line: 99, baseType: !13402, size: 32)
!13402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13399, file: !2821, line: 99, size: 32, elements: !13403)
!13403 = !{!13404, !13405}
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13402, file: !2821, line: 99, baseType: !121, size: 32)
!13405 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13402, file: !2821, line: 99, baseType: !121, size: 32)
!13406 = !DIDerivedType(tag: DW_TAG_member, scope: !13399, file: !2821, line: 100, baseType: !13407, size: 32, offset: 32)
!13407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13399, file: !2821, line: 100, size: 32, elements: !13408)
!13408 = !{!13409, !13410}
!13409 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13407, file: !2821, line: 100, baseType: !121, size: 32)
!13410 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13407, file: !2821, line: 100, baseType: !121, size: 32)
!13411 = !DIDerivedType(tag: DW_TAG_member, scope: !13399, file: !2821, line: 101, baseType: !13412, size: 32, offset: 64)
!13412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13399, file: !2821, line: 101, size: 32, elements: !13413)
!13413 = !{!13414, !13415}
!13414 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13412, file: !2821, line: 101, baseType: !121, size: 32)
!13415 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13412, file: !2821, line: 101, baseType: !121, size: 32)
!13416 = !DIDerivedType(tag: DW_TAG_member, scope: !13399, file: !2821, line: 102, baseType: !13417, size: 32, offset: 96)
!13417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13399, file: !2821, line: 102, size: 32, elements: !13418)
!13418 = !{!13419, !13420}
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13417, file: !2821, line: 102, baseType: !121, size: 32)
!13420 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13417, file: !2821, line: 102, baseType: !121, size: 32)
!13421 = !DIDerivedType(tag: DW_TAG_member, scope: !13399, file: !2821, line: 103, baseType: !13422, size: 32, offset: 128)
!13422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13399, file: !2821, line: 103, size: 32, elements: !13423)
!13423 = !{!13424, !13425}
!13424 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13422, file: !2821, line: 103, baseType: !121, size: 32)
!13425 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13422, file: !2821, line: 103, baseType: !121, size: 32)
!13426 = !DIDerivedType(tag: DW_TAG_member, scope: !13399, file: !2821, line: 104, baseType: !13427, size: 32, offset: 160)
!13427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13399, file: !2821, line: 104, size: 32, elements: !13428)
!13428 = !{!13429, !13430}
!13429 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13427, file: !2821, line: 104, baseType: !121, size: 32)
!13430 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13427, file: !2821, line: 104, baseType: !121, size: 32)
!13431 = !DIDerivedType(tag: DW_TAG_member, scope: !13399, file: !2821, line: 105, baseType: !13432, size: 32, offset: 192)
!13432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13399, file: !2821, line: 105, size: 32, elements: !13433)
!13433 = !{!13434, !13435}
!13434 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13432, file: !2821, line: 105, baseType: !121, size: 32)
!13435 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13432, file: !2821, line: 105, baseType: !121, size: 32)
!13436 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13399, file: !2821, line: 106, baseType: !121, size: 32, offset: 224)
!13437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13438, size: 32)
!13438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !13439)
!13439 = !{!13440, !13498, !13510, !13511, !13512, !13513, !13519, !13532}
!13440 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13438, file: !355, line: 247, baseType: !13441, size: 384)
!13441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !13442)
!13442 = !{!13443, !13467, !13474, !13475, !13476, !13485, !13486, !13487}
!13443 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !355, line: 60, baseType: !13444, size: 64)
!13444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !355, line: 60, size: 64, elements: !13445)
!13445 = !{!13446, !13461}
!13446 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13444, file: !355, line: 61, baseType: !13447, size: 64)
!13447 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !13448)
!13448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !13449)
!13449 = !{!13450, !13456}
!13450 = !DIDerivedType(tag: DW_TAG_member, scope: !13448, file: !309, line: 38, baseType: !13451, size: 32)
!13451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13448, file: !309, line: 38, size: 32, elements: !13452)
!13452 = !{!13453, !13455}
!13453 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13451, file: !309, line: 39, baseType: !13454, size: 32)
!13454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13448, size: 32)
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13451, file: !309, line: 40, baseType: !13454, size: 32)
!13456 = !DIDerivedType(tag: DW_TAG_member, scope: !13448, file: !309, line: 42, baseType: !13457, size: 32, offset: 32)
!13457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13448, file: !309, line: 42, size: 32, elements: !13458)
!13458 = !{!13459, !13460}
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13457, file: !309, line: 43, baseType: !13454, size: 32)
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13457, file: !309, line: 44, baseType: !13454, size: 32)
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13444, file: !355, line: 62, baseType: !13462, size: 64)
!13462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !13463)
!13463 = !{!13464}
!13464 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13462, file: !380, line: 50, baseType: !13465, size: 64)
!13465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13466, size: 64, elements: !385)
!13466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13462, size: 32)
!13467 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13441, file: !355, line: 68, baseType: !13468, size: 32, offset: 64)
!13468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13469, size: 32)
!13469 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !13470)
!13470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !13471)
!13471 = !{!13472}
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13470, file: !304, line: 232, baseType: !13473, size: 64)
!13473 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !13448)
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13441, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!13475 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13441, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!13476 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !355, line: 90, baseType: !13477, size: 16, offset: 112)
!13477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !355, line: 90, size: 16, elements: !13478)
!13478 = !{!13479, !13484}
!13479 = !DIDerivedType(tag: DW_TAG_member, scope: !13477, file: !355, line: 91, baseType: !13480, size: 16)
!13480 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13477, file: !355, line: 91, size: 16, elements: !13481)
!13481 = !{!13482, !13483}
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13480, file: !355, line: 96, baseType: !403, size: 8)
!13483 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13480, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13477, file: !355, line: 100, baseType: !328, size: 16)
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13441, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13441, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!13487 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13441, file: !355, line: 131, baseType: !13488, size: 192, offset: 192)
!13488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !13489)
!13489 = !{!13490, !13491, !13497}
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13488, file: !304, line: 245, baseType: !13447, size: 64)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13488, file: !304, line: 246, baseType: !13492, size: 32, offset: 64)
!13492 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !13493)
!13493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13494, size: 32)
!13494 = !DISubroutineType(types: !13495)
!13495 = !{null, !13496}
!13496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13488, size: 32)
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13488, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!13498 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13438, file: !355, line: 250, baseType: !13499, size: 288, offset: 384)
!13499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !13500)
!13500 = !{!13501, !13502, !13503, !13504, !13505, !13506, !13507, !13508, !13509}
!13501 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13499, file: !424, line: 26, baseType: !121, size: 32)
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13499, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13499, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!13504 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13499, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!13505 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13499, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13499, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!13507 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13499, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!13508 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13499, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13499, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13438, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!13511 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13438, file: !355, line: 256, baseType: !13469, size: 64, offset: 704)
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13438, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!13513 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13438, file: !355, line: 300, baseType: !13514, size: 96, offset: 800)
!13514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !13515)
!13515 = !{!13516, !13517, !13518}
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13514, file: !355, line: 153, baseType: !22, size: 32)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13514, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13514, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13438, file: !355, line: 325, baseType: !13520, size: 32, offset: 896)
!13520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13521, size: 32)
!13521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !13522)
!13522 = !{!13523, !13529, !13530}
!13523 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13521, file: !300, line: 5074, baseType: !13524, size: 96)
!13524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !13525)
!13525 = !{!13526, !13527, !13528}
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13524, file: !450, line: 57, baseType: !453, size: 32)
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13524, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!13528 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13524, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13521, file: !300, line: 5075, baseType: !13469, size: 64, offset: 96)
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13521, file: !300, line: 5076, baseType: !13531, offset: 160)
!13531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!13532 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13438, file: !355, line: 343, baseType: !13533, size: 64, offset: 928)
!13533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !13534)
!13534 = !{!13535, !13536}
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13533, file: !424, line: 63, baseType: !121, size: 32)
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13533, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!13537 = !{!13538, !13539, !13540}
!13538 = !DILocalVariable(name: "reason", arg: 1, scope: !13390, file: !3204, line: 209, type: !32)
!13539 = !DILocalVariable(name: "esf", arg: 2, scope: !13390, file: !3204, line: 209, type: !13393)
!13540 = !DILocalVariable(name: "thread", arg: 3, scope: !13390, file: !3204, line: 210, type: !13437)
!13541 = !DILocation(line: 0, scope: !13390)
!13542 = !DILocation(line: 212, column: 1, scope: !13390)
!13543 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3204, file: !3204, line: 214, type: !13544, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13546)
!13544 = !DISubroutineType(types: !13545)
!13545 = !{null, !22, !22}
!13546 = !{!13547, !13548}
!13547 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13543, file: !3204, line: 214, type: !22)
!13548 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13543, file: !3204, line: 214, type: !22)
!13549 = !DILocation(line: 0, scope: !13543)
!13550 = !DILocation(line: 216, column: 1, scope: !13543)
!13551 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3204, file: !3204, line: 218, type: !13552, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13554)
!13552 = !DISubroutineType(types: !13553)
!13553 = !{null, !261, !344}
!13554 = !{!13555, !13556}
!13555 = !DILocalVariable(name: "buf", arg: 1, scope: !13551, file: !3204, line: 218, type: !261)
!13556 = !DILocalVariable(name: "buflen", arg: 2, scope: !13551, file: !3204, line: 218, type: !344)
!13557 = !DILocation(line: 0, scope: !13551)
!13558 = !DILocation(line: 220, column: 1, scope: !13551)
!13559 = distinct !DISubprogram(name: "coredump_query", scope: !3204, file: !3204, line: 222, type: !13560, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13562)
!13560 = !DISubroutineType(types: !13561)
!13561 = !{!103, !3203, !102}
!13562 = !{!13563, !13564}
!13563 = !DILocalVariable(name: "query_id", arg: 1, scope: !13559, file: !3204, line: 222, type: !3203)
!13564 = !DILocalVariable(name: "arg", arg: 2, scope: !13559, file: !3204, line: 222, type: !102)
!13565 = !DILocation(line: 0, scope: !13559)
!13566 = !DILocation(line: 224, column: 2, scope: !13559)
!13567 = distinct !DISubprogram(name: "coredump_cmd", scope: !3204, file: !3204, line: 227, type: !13568, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13570)
!13568 = !DISubroutineType(types: !13569)
!13569 = !{!103, !3210, !102}
!13570 = !{!13571, !13572}
!13571 = !DILocalVariable(name: "query_id", arg: 1, scope: !13567, file: !3204, line: 227, type: !3210)
!13572 = !DILocalVariable(name: "arg", arg: 2, scope: !13567, file: !3204, line: 227, type: !102)
!13573 = !DILocation(line: 0, scope: !13567)
!13574 = !DILocation(line: 229, column: 2, scope: !13567)
!13575 = distinct !DISubprogram(name: "arch_system_halt", scope: !13576, file: !13576, line: 23, type: !5816, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13577)
!13576 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13577 = !{!13578}
!13578 = !DILocalVariable(name: "reason", arg: 1, scope: !13575, file: !13576, line: 23, type: !32)
!13579 = !DILocation(line: 0, scope: !13575)
!13580 = !DILocation(line: 55, column: 2, scope: !13581, inlinedAt: !13585)
!13581 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13582)
!13582 = !{!13583, !13584}
!13583 = !DILocalVariable(name: "key", scope: !13581, file: !5805, line: 44, type: !32)
!13584 = !DILocalVariable(name: "tmp", scope: !13581, file: !5805, line: 53, type: !32)
!13585 = distinct !DILocation(line: 31, column: 8, scope: !13575)
!13586 = !{i64 2241039}
!13587 = !DILocation(line: 0, scope: !13581, inlinedAt: !13585)
!13588 = !DILocation(line: 32, column: 2, scope: !13575)
!13589 = !DILocation(line: 32, column: 2, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13591, file: !13576, line: 32, column: 2)
!13591 = distinct !DILexicalBlock(scope: !13575, file: !13576, line: 32, column: 2)
!13592 = distinct !{!13592, !13593, !13594}
!13593 = !DILocation(line: 32, column: 2, scope: !13591)
!13594 = !DILocation(line: 34, column: 2, scope: !13591)
!13595 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13576, file: !13576, line: 39, type: !13596, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13598)
!13596 = !DISubroutineType(types: !13597)
!13597 = !{null, !32, !13393}
!13598 = !{!13599, !13600}
!13599 = !DILocalVariable(name: "reason", arg: 1, scope: !13595, file: !13576, line: 39, type: !32)
!13600 = !DILocalVariable(name: "esf", arg: 2, scope: !13595, file: !13576, line: 40, type: !13393)
!13601 = !DILocation(line: 0, scope: !13595)
!13602 = !DILocation(line: 46, column: 2, scope: !13595)
!13603 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13576, file: !13576, line: 81, type: !5816, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13604)
!13604 = !{!13605}
!13605 = !DILocalVariable(name: "reason", arg: 1, scope: !13603, file: !13576, line: 81, type: !32)
!13606 = !DILocation(line: 0, scope: !13603)
!13607 = !DILocation(line: 83, column: 2, scope: !13603)
!13608 = distinct !DISubprogram(name: "z_fatal_error", scope: !13576, file: !13576, line: 96, type: !13596, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13609)
!13609 = !{!13610, !13611, !13612, !13613}
!13610 = !DILocalVariable(name: "reason", arg: 1, scope: !13608, file: !13576, line: 96, type: !32)
!13611 = !DILocalVariable(name: "esf", arg: 2, scope: !13608, file: !13576, line: 96, type: !13393)
!13612 = !DILocalVariable(name: "key", scope: !13608, file: !13576, line: 102, type: !32)
!13613 = !DILocalVariable(name: "thread", scope: !13608, file: !13576, line: 103, type: !13437)
!13614 = !DILocation(line: 0, scope: !13608)
!13615 = !DILocation(line: 55, column: 2, scope: !13581, inlinedAt: !13616)
!13616 = distinct !DILocation(line: 102, column: 21, scope: !13608)
!13617 = !DILocation(line: 0, scope: !13581, inlinedAt: !13616)
!13618 = !DILocation(line: 119, column: 11, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13608, file: !13576, line: 119, column: 6)
!13620 = !DILocation(line: 119, column: 20, scope: !13619)
!13621 = !DILocation(line: 131, column: 2, scope: !13608)
!13622 = !DILocation(line: 151, column: 7, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13624, file: !13576, line: 146, column: 32)
!13624 = distinct !DILexicalBlock(scope: !13608, file: !13576, line: 146, column: 6)
!13625 = !DILocation(line: 151, column: 21, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13623, file: !13576, line: 151, column: 7)
!13627 = !DILocation(line: 104, column: 4, scope: !13608)
!13628 = !DILocalVariable(name: "key", arg: 1, scope: !13629, file: !5805, line: 84, type: !32)
!13629 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13630)
!13630 = !{!13628}
!13631 = !DILocation(line: 0, scope: !13629, inlinedAt: !13632)
!13632 = distinct !DILocation(line: 186, column: 2, scope: !13608)
!13633 = !DILocation(line: 95, column: 2, scope: !13629, inlinedAt: !13632)
!13634 = !{i64 2241856}
!13635 = !DILocation(line: 189, column: 3, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13637, file: !13576, line: 188, column: 41)
!13637 = distinct !DILexicalBlock(scope: !13608, file: !13576, line: 188, column: 6)
!13638 = !DILocation(line: 191, column: 1, scope: !13608)
!13639 = distinct !DISubprogram(name: "k_current_get", scope: !300, file: !300, line: 530, type: !13640, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !461)
!13640 = !DISubroutineType(types: !13641)
!13641 = !{!13642}
!13642 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !13437)
!13643 = !DILocation(line: 535, column: 9, scope: !13639)
!13644 = !DILocation(line: 535, column: 2, scope: !13639)
!13645 = distinct !DISubprogram(name: "k_thread_abort", scope: !3670, file: !3670, line: 188, type: !13646, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !13648)
!13646 = !DISubroutineType(types: !13647)
!13647 = !{null, !13642}
!13648 = !{!13649}
!13649 = !DILocalVariable(name: "thread", arg: 1, scope: !13645, file: !3670, line: 188, type: !13642)
!13650 = !DILocation(line: 0, scope: !13645)
!13651 = !DILocation(line: 197, column: 2, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13645, file: !3670, line: 197, column: 2)
!13653 = !{i64 2154741818}
!13654 = !DILocation(line: 198, column: 2, scope: !13645)
!13655 = !DILocation(line: 199, column: 1, scope: !13645)
!13656 = distinct !DISubprogram(name: "z_current_get", scope: !3670, file: !3670, line: 173, type: !13640, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !461)
!13657 = !DILocation(line: 180, column: 2, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13656, file: !3670, line: 180, column: 2)
!13659 = !{i64 2154741750}
!13660 = !DILocation(line: 181, column: 9, scope: !13656)
!13661 = !DILocation(line: 181, column: 2, scope: !13656)
!13662 = distinct !DISubprogram(name: "z_early_memset", scope: !1956, file: !1956, line: 108, type: !13663, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13665)
!13663 = !DISubroutineType(types: !13664)
!13664 = !{null, !102, !103, !344}
!13665 = !{!13666, !13667, !13668}
!13666 = !DILocalVariable(name: "dst", arg: 1, scope: !13662, file: !1956, line: 108, type: !102)
!13667 = !DILocalVariable(name: "c", arg: 2, scope: !13662, file: !1956, line: 108, type: !103)
!13668 = !DILocalVariable(name: "n", arg: 3, scope: !13662, file: !1956, line: 108, type: !344)
!13669 = !DILocation(line: 0, scope: !13662)
!13670 = !DILocation(line: 110, column: 9, scope: !13662)
!13671 = !DILocation(line: 111, column: 1, scope: !13662)
!13672 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1956, file: !1956, line: 121, type: !13673, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13675)
!13673 = !DISubroutineType(types: !13674)
!13674 = !{null, !102, !13, !344}
!13675 = !{!13676, !13677, !13678}
!13676 = !DILocalVariable(name: "dst", arg: 1, scope: !13672, file: !1956, line: 121, type: !102)
!13677 = !DILocalVariable(name: "src", arg: 2, scope: !13672, file: !1956, line: 121, type: !13)
!13678 = !DILocalVariable(name: "n", arg: 3, scope: !13672, file: !1956, line: 121, type: !344)
!13679 = !DILocation(line: 0, scope: !13672)
!13680 = !DILocation(line: 123, column: 9, scope: !13672)
!13681 = !DILocation(line: 124, column: 1, scope: !13672)
!13682 = distinct !DISubprogram(name: "z_bss_zero", scope: !1956, file: !1956, line: 132, type: !3237, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !461)
!13683 = !DILocation(line: 143, column: 2, scope: !13682)
!13684 = !DILocation(line: 168, column: 1, scope: !13682)
!13685 = distinct !DISubprogram(name: "z_init_cpu", scope: !1956, file: !1956, line: 372, type: !8467, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13686)
!13686 = !{!13687}
!13687 = !DILocalVariable(name: "id", arg: 1, scope: !13685, file: !1956, line: 372, type: !103)
!13688 = !DILocation(line: 0, scope: !13685)
!13689 = !DILocation(line: 374, column: 2, scope: !13685)
!13690 = !DILocation(line: 375, column: 34, scope: !13685)
!13691 = !DILocation(line: 375, column: 19, scope: !13685)
!13692 = !DILocation(line: 375, column: 31, scope: !13685)
!13693 = !DILocation(line: 376, column: 24, scope: !13685)
!13694 = !DILocation(line: 376, column: 19, scope: !13685)
!13695 = !DILocation(line: 376, column: 22, scope: !13685)
!13696 = !DILocation(line: 378, column: 26, scope: !13685)
!13697 = !DILocation(line: 378, column: 4, scope: !13685)
!13698 = !DILocation(line: 378, column: 50, scope: !13685)
!13699 = !DILocation(line: 377, column: 19, scope: !13685)
!13700 = !DILocation(line: 377, column: 29, scope: !13685)
!13701 = !DILocation(line: 384, column: 1, scope: !13685)
!13702 = distinct !DISubprogram(name: "init_idle_thread", scope: !1956, file: !1956, line: 343, type: !8467, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13703)
!13703 = !{!13704, !13705, !13706, !13709}
!13704 = !DILocalVariable(name: "i", arg: 1, scope: !13702, file: !1956, line: 343, type: !103)
!13705 = !DILocalVariable(name: "thread", scope: !13702, file: !1956, line: 345, type: !2048)
!13706 = !DILocalVariable(name: "stack", scope: !13702, file: !1956, line: 346, type: !13707)
!13707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13708, size: 32)
!13708 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3549, line: 44, baseType: !2162)
!13709 = !DILocalVariable(name: "tname", scope: !13702, file: !1956, line: 358, type: !1069)
!13710 = !DILocation(line: 0, scope: !13702)
!13711 = !DILocation(line: 345, column: 29, scope: !13702)
!13712 = !DILocation(line: 346, column: 28, scope: !13702)
!13713 = !DILocation(line: 362, column: 37, scope: !13702)
!13714 = !DILocation(line: 362, column: 36, scope: !13702)
!13715 = !DILocation(line: 361, column: 2, scope: !13702)
!13716 = !DILocation(line: 365, column: 2, scope: !13702)
!13717 = !DILocation(line: 370, column: 1, scope: !13702)
!13718 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2163, file: !2163, line: 331, type: !13719, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13721)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!1069, !13707}
!13721 = !{!13722}
!13722 = !DILocalVariable(name: "sym", arg: 1, scope: !13718, file: !2163, line: 331, type: !13707)
!13723 = !DILocation(line: 0, scope: !13718)
!13724 = !DILocation(line: 333, column: 21, scope: !13718)
!13725 = !DILocation(line: 333, column: 2, scope: !13718)
!13726 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13727, file: !13727, line: 155, type: !13728, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13730)
!13727 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13728 = !DISubroutineType(types: !13729)
!13729 = !{null, !2048}
!13730 = !{!13731}
!13731 = !DILocalVariable(name: "thread", arg: 1, scope: !13726, file: !13727, line: 155, type: !2048)
!13732 = !DILocation(line: 0, scope: !13726)
!13733 = !DILocation(line: 157, column: 15, scope: !13726)
!13734 = !DILocation(line: 157, column: 28, scope: !13726)
!13735 = !DILocation(line: 158, column: 1, scope: !13726)
!13736 = distinct !DISubprogram(name: "z_cstart", scope: !1956, file: !1956, line: 501, type: !3237, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13737)
!13737 = !{!13738}
!13738 = !DILocalVariable(name: "dummy_thread", scope: !13736, file: !1956, line: 518, type: !2049)
!13739 = !DILocation(line: 507, column: 2, scope: !13736)
!13740 = !DILocation(line: 43, column: 14, scope: !13741, inlinedAt: !13745)
!13741 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13742, file: !13742, line: 40, type: !3237, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13743)
!13742 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13743 = !{!13744}
!13744 = !DILocalVariable(name: "msp", scope: !13741, file: !13742, line: 42, type: !121)
!13745 = distinct !DILocation(line: 44, column: 2, scope: !13746, inlinedAt: !13748)
!13746 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13747, file: !13747, line: 42, type: !3237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !461)
!13747 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13748 = distinct !DILocation(line: 510, column: 2, scope: !13736)
!13749 = !DILocation(line: 43, column: 3, scope: !13741, inlinedAt: !13745)
!13750 = !DILocation(line: 43, column: 60, scope: !13741, inlinedAt: !13745)
!13751 = !DILocation(line: 0, scope: !13741, inlinedAt: !13745)
!13752 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13753, file: !6825, line: 1153, type: !121)
!13753 = distinct !DISubprogram(name: "__set_MSP", scope: !6825, file: !6825, line: 1153, type: !6916, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13754)
!13754 = !{!13752}
!13755 = !DILocation(line: 0, scope: !13753, inlinedAt: !13756)
!13756 = distinct !DILocation(line: 46, column: 2, scope: !13741, inlinedAt: !13745)
!13757 = !DILocation(line: 1155, column: 3, scope: !13753, inlinedAt: !13756)
!13758 = !{i64 3515415}
!13759 = !DILocation(line: 62, column: 11, scope: !13741, inlinedAt: !13745)
!13760 = !DILocation(line: 102, column: 2, scope: !13761, inlinedAt: !13762)
!13761 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7619, file: !7619, line: 97, type: !3237, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !461)
!13762 = distinct !DILocation(line: 45, column: 2, scope: !13746, inlinedAt: !13748)
!13763 = !DILocation(line: 108, column: 2, scope: !13761, inlinedAt: !13762)
!13764 = !DILocation(line: 112, column: 2, scope: !13761, inlinedAt: !13762)
!13765 = !DILocation(line: 113, column: 2, scope: !13761, inlinedAt: !13762)
!13766 = !DILocation(line: 114, column: 2, scope: !13761, inlinedAt: !13762)
!13767 = !DILocation(line: 116, column: 2, scope: !13761, inlinedAt: !13762)
!13768 = !DILocation(line: 123, column: 13, scope: !13761, inlinedAt: !13762)
!13769 = !DILocation(line: 46, column: 2, scope: !13746, inlinedAt: !13748)
!13770 = !DILocation(line: 47, column: 2, scope: !13746, inlinedAt: !13748)
!13771 = !DILocation(line: 174, column: 12, scope: !13772, inlinedAt: !13773)
!13772 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7619, file: !7619, line: 169, type: !3237, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !461)
!13773 = distinct !DILocation(line: 48, column: 2, scope: !13746, inlinedAt: !13748)
!13774 = !DILocation(line: 179, column: 12, scope: !13772, inlinedAt: !13773)
!13775 = !DILocation(line: 50, column: 2, scope: !13746, inlinedAt: !13748)
!13776 = !DILocation(line: 57, column: 2, scope: !13746, inlinedAt: !13748)
!13777 = !DILocation(line: 518, column: 2, scope: !13736)
!13778 = !DILocation(line: 518, column: 18, scope: !13736)
!13779 = !DILocation(line: 520, column: 2, scope: !13736)
!13780 = !DILocation(line: 523, column: 2, scope: !13736)
!13781 = !DILocation(line: 526, column: 2, scope: !13736)
!13782 = !DILocation(line: 527, column: 2, scope: !13736)
!13783 = !DILocation(line: 543, column: 24, scope: !13736)
!13784 = !DILocation(line: 543, column: 2, scope: !13736)
!13785 = !DILocation(line: 0, scope: !2182)
!13786 = !DILocation(line: 246, column: 15, scope: !2200)
!13787 = !DILocation(line: 246, column: 36, scope: !2199)
!13788 = !DILocation(line: 246, column: 2, scope: !2200)
!13789 = !DILocation(line: 247, column: 37, scope: !2198)
!13790 = !DILocation(line: 0, scope: !2198)
!13791 = !DILocation(line: 248, column: 19, scope: !2198)
!13792 = !DILocation(line: 248, column: 12, scope: !2198)
!13793 = !DILocation(line: 250, column: 11, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !2198, file: !1956, line: 250, column: 7)
!13795 = !DILocation(line: 250, column: 7, scope: !2198)
!13796 = !DILocation(line: 254, column: 11, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13798, file: !1956, line: 254, column: 8)
!13798 = distinct !DILexicalBlock(scope: !13794, file: !1956, line: 250, column: 20)
!13799 = !DILocation(line: 254, column: 8, scope: !13798)
!13800 = !DILocation(line: 255, column: 9, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13797, file: !1956, line: 254, column: 17)
!13802 = !DILocation(line: 258, column: 9, scope: !13801)
!13803 = !DILocation(line: 261, column: 28, scope: !13801)
!13804 = !DILocation(line: 261, column: 10, scope: !13801)
!13805 = !DILocation(line: 261, column: 17, scope: !13801)
!13806 = !DILocation(line: 261, column: 26, scope: !13801)
!13807 = !DILocation(line: 262, column: 4, scope: !13801)
!13808 = !DILocation(line: 263, column: 9, scope: !13798)
!13809 = !DILocation(line: 263, column: 16, scope: !13798)
!13810 = !DILocation(line: 263, column: 28, scope: !13798)
!13811 = !DILocation(line: 264, column: 3, scope: !13798)
!13812 = !DILocation(line: 246, column: 60, scope: !2199)
!13813 = distinct !{!13813, !13788, !13814}
!13814 = !DILocation(line: 265, column: 2, scope: !2200)
!13815 = !DILocation(line: 266, column: 1, scope: !2182)
!13816 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6859, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13817)
!13817 = !{!13818, !13819}
!13818 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13816, file: !495, line: 1814, type: !750)
!13819 = !DILocalVariable(name: "priority", arg: 2, scope: !13816, file: !495, line: 1814, type: !121)
!13820 = !DILocation(line: 0, scope: !13816)
!13821 = !DILocation(line: 1822, column: 48, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !495, line: 1821, column: 3)
!13823 = distinct !DILexicalBlock(scope: !13816, file: !495, line: 1816, column: 7)
!13824 = !DILocation(line: 1822, column: 32, scope: !13822)
!13825 = !DILocation(line: 1822, column: 40, scope: !13822)
!13826 = !DILocation(line: 1822, column: 5, scope: !13822)
!13827 = !DILocation(line: 1822, column: 46, scope: !13822)
!13828 = !DILocation(line: 1824, column: 1, scope: !13816)
!13829 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13747, file: !13747, line: 32, type: !3237, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!13830 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13831, file: !13831, line: 215, type: !13728, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13832)
!13831 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13832 = !{!13833}
!13833 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13830, file: !13831, line: 215, type: !2048)
!13834 = !DILocation(line: 0, scope: !13830)
!13835 = !DILocation(line: 217, column: 21, scope: !13830)
!13836 = !DILocation(line: 217, column: 34, scope: !13830)
!13837 = !DILocation(line: 221, column: 21, scope: !13830)
!13838 = !DILocation(line: 221, column: 34, scope: !13830)
!13839 = !DILocation(line: 223, column: 27, scope: !13830)
!13840 = !DILocation(line: 223, column: 33, scope: !13830)
!13841 = !DILocation(line: 224, column: 27, scope: !13830)
!13842 = !DILocation(line: 224, column: 32, scope: !13830)
!13843 = !DILocation(line: 232, column: 16, scope: !13830)
!13844 = !DILocation(line: 232, column: 30, scope: !13830)
!13845 = !DILocation(line: 239, column: 24, scope: !13830)
!13846 = !DILocation(line: 240, column: 1, scope: !13830)
!13847 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1956, file: !1956, line: 399, type: !13848, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13850)
!13848 = !DISubroutineType(types: !13849)
!13849 = !{!1069}
!13850 = !{!13851}
!13851 = !DILocalVariable(name: "stack_ptr", scope: !13847, file: !1956, line: 401, type: !1069)
!13852 = !DILocation(line: 404, column: 2, scope: !13847)
!13853 = !DILocation(line: 416, column: 24, scope: !13847)
!13854 = !DILocation(line: 418, column: 14, scope: !13847)
!13855 = !DILocation(line: 0, scope: !13847)
!13856 = !DILocation(line: 423, column: 2, scope: !13847)
!13857 = !DILocation(line: 424, column: 2, scope: !13847)
!13858 = !DILocation(line: 426, column: 2, scope: !13847)
!13859 = !DILocation(line: 428, column: 2, scope: !13847)
!13860 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1956, file: !1956, line: 432, type: !13861, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13863)
!13861 = !DISubroutineType(types: !13862)
!13862 = !{null, !1069}
!13863 = !{!13864}
!13864 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13860, file: !1956, line: 432, type: !1069)
!13865 = !DILocation(line: 0, scope: !13860)
!13866 = !DILocation(line: 435, column: 2, scope: !13860)
!13867 = !DILocation(line: 445, column: 2, scope: !13860)
!13868 = distinct !DISubprogram(name: "bg_thread_main", scope: !1956, file: !1956, line: 277, type: !3551, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1952, retainedNodes: !13869)
!13869 = !{!13870, !13871, !13872}
!13870 = !DILocalVariable(name: "unused1", arg: 1, scope: !13868, file: !1956, line: 277, type: !102)
!13871 = !DILocalVariable(name: "unused2", arg: 2, scope: !13868, file: !1956, line: 277, type: !102)
!13872 = !DILocalVariable(name: "unused3", arg: 3, scope: !13868, file: !1956, line: 277, type: !102)
!13873 = !DILocation(line: 0, scope: !13868)
!13874 = !DILocation(line: 291, column: 20, scope: !13868)
!13875 = !DILocation(line: 293, column: 2, scope: !13868)
!13876 = !DILocation(line: 297, column: 2, scope: !13868)
!13877 = !DILocation(line: 305, column: 2, scope: !13868)
!13878 = !DILocation(line: 307, column: 2, scope: !13868)
!13879 = !DILocation(line: 330, column: 8, scope: !13868)
!13880 = !DILocation(line: 333, column: 34, scope: !13868)
!13881 = !DILocation(line: 339, column: 1, scope: !13868)
!13882 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2209, file: !2209, line: 45, type: !13883, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !13891)
!13883 = !DISubroutineType(types: !13884)
!13884 = !{null, !13885, !102}
!13885 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !300, line: 103, baseType: !13886)
!13886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13887, size: 32)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{null, !13889, !102}
!13889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13890, size: 32)
!13890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2214)
!13891 = !{!13892, !13893}
!13892 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13882, file: !2209, line: 45, type: !13885)
!13893 = !DILocalVariable(name: "user_data", arg: 2, scope: !13882, file: !2209, line: 45, type: !102)
!13894 = !DILocation(line: 0, scope: !13882)
!13895 = !DILocation(line: 71, column: 1, scope: !13882)
!13896 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2209, file: !2209, line: 73, type: !13883, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !13897)
!13897 = !{!13898, !13899}
!13898 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13896, file: !2209, line: 73, type: !13885)
!13899 = !DILocalVariable(name: "user_data", arg: 2, scope: !13896, file: !2209, line: 73, type: !102)
!13900 = !DILocation(line: 0, scope: !13896)
!13901 = !DILocation(line: 95, column: 1, scope: !13896)
!13902 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2209, file: !2209, line: 97, type: !7620, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !461)
!13903 = !DILocation(line: 1031, column: 3, scope: !13904, inlinedAt: !13907)
!13904 = distinct !DISubprogram(name: "__get_IPSR", scope: !6825, file: !6825, line: 1027, type: !6906, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !13905)
!13905 = !{!13906}
!13906 = !DILocalVariable(name: "result", scope: !13904, file: !6825, line: 1029, type: !121)
!13907 = distinct !DILocation(line: 48, column: 10, scope: !13908, inlinedAt: !13909)
!13908 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7619, file: !7619, line: 46, type: !7620, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !461)
!13909 = distinct !DILocation(line: 99, column: 9, scope: !13902)
!13910 = !{i64 3521066}
!13911 = !DILocation(line: 0, scope: !13904, inlinedAt: !13907)
!13912 = !DILocation(line: 48, column: 9, scope: !13908, inlinedAt: !13909)
!13913 = !DILocation(line: 99, column: 2, scope: !13902)
!13914 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2209, file: !2209, line: 106, type: !3237, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !461)
!13915 = !DILocation(line: 108, column: 2, scope: !13914)
!13916 = !DILocation(line: 108, column: 17, scope: !13914)
!13917 = !DILocation(line: 108, column: 30, scope: !13914)
!13918 = !DILocation(line: 109, column: 1, scope: !13914)
!13919 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2209, file: !2209, line: 116, type: !3237, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !461)
!13920 = !DILocation(line: 118, column: 2, scope: !13919)
!13921 = !DILocation(line: 118, column: 17, scope: !13919)
!13922 = !DILocation(line: 118, column: 30, scope: !13919)
!13923 = !DILocation(line: 119, column: 1, scope: !13919)
!13924 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2209, file: !2209, line: 126, type: !7620, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !461)
!13925 = !DILocation(line: 128, column: 10, scope: !13924)
!13926 = !DILocation(line: 128, column: 25, scope: !13924)
!13927 = !DILocation(line: 128, column: 38, scope: !13924)
!13928 = !DILocation(line: 128, column: 53, scope: !13924)
!13929 = !DILocation(line: 128, column: 2, scope: !13924)
!13930 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2209, file: !2209, line: 187, type: !13931, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !13933)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{!103, !2213, !144}
!13933 = !{!13934, !13935}
!13934 = !DILocalVariable(name: "thread", arg: 1, scope: !13930, file: !2209, line: 187, type: !2213)
!13935 = !DILocalVariable(name: "value", arg: 2, scope: !13930, file: !2209, line: 187, type: !144)
!13936 = !DILocation(line: 0, scope: !13930)
!13937 = !DILocation(line: 206, column: 2, scope: !13930)
!13938 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2209, file: !2209, line: 238, type: !13939, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !13941)
!13939 = !DISubroutineType(types: !13940)
!13940 = !{!144, !2213}
!13941 = !{!13942}
!13942 = !DILocalVariable(name: "thread", arg: 1, scope: !13938, file: !2209, line: 238, type: !2213)
!13943 = !DILocation(line: 0, scope: !13938)
!13944 = !DILocation(line: 244, column: 2, scope: !13938)
!13945 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2209, file: !2209, line: 248, type: !13946, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !13948)
!13946 = !DISubroutineType(types: !13947)
!13947 = !{!103, !2212, !1069, !344}
!13948 = !{!13949, !13950, !13951}
!13949 = !DILocalVariable(name: "thread", arg: 1, scope: !13945, file: !2209, line: 248, type: !2212)
!13950 = !DILocalVariable(name: "buf", arg: 2, scope: !13945, file: !2209, line: 248, type: !1069)
!13951 = !DILocalVariable(name: "size", arg: 3, scope: !13945, file: !2209, line: 248, type: !344)
!13952 = !DILocation(line: 0, scope: !13945)
!13953 = !DILocation(line: 257, column: 2, scope: !13945)
!13954 = !DILocation(line: 0, scope: !2208)
!13955 = !DILocation(line: 281, column: 11, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !2208, file: !2209, line: 281, column: 6)
!13957 = !DILocation(line: 281, column: 20, scope: !13956)
!13958 = !DILocation(line: 275, column: 45, scope: !2208)
!13959 = !DILocation(line: 285, column: 10, scope: !2208)
!13960 = !DILocation(line: 0, scope: !2329)
!13961 = !DILocation(line: 293, column: 39, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !2329, file: !2209, line: 293, column: 2)
!13963 = !DILocation(line: 293, column: 2, scope: !2329)
!13964 = !DILocation(line: 273, column: 14, scope: !2208)
!13965 = !DILocation(line: 309, column: 2, scope: !2208)
!13966 = !DILocation(line: 309, column: 11, scope: !2208)
!13967 = !DILocation(line: 311, column: 2, scope: !2208)
!13968 = !DILocation(line: 293, column: 26, scope: !13962)
!13969 = !DILocation(line: 294, column: 9, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13962, file: !2209, line: 293, column: 54)
!13971 = !DILocation(line: 295, column: 21, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13970, file: !2209, line: 295, column: 7)
!13973 = !DILocation(line: 295, column: 28, scope: !13972)
!13974 = !DILocation(line: 295, column: 7, scope: !13970)
!13975 = !DILocation(line: 299, column: 25, scope: !13970)
!13976 = !DILocation(line: 299, column: 41, scope: !13970)
!13977 = !DILocation(line: 300, column: 7, scope: !13970)
!13978 = !DILocation(line: 300, column: 26, scope: !13970)
!13979 = !DILocation(line: 299, column: 10, scope: !13970)
!13980 = !DILocation(line: 299, column: 7, scope: !13970)
!13981 = !DILocation(line: 302, column: 16, scope: !13970)
!13982 = !DILocation(line: 304, column: 20, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13970, file: !2209, line: 304, column: 7)
!13984 = !DILocation(line: 304, column: 7, scope: !13970)
!13985 = !DILocation(line: 305, column: 26, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13983, file: !2209, line: 304, column: 26)
!13987 = !DILocation(line: 305, column: 42, scope: !13986)
!13988 = !DILocation(line: 305, column: 11, scope: !13986)
!13989 = !DILocation(line: 305, column: 8, scope: !13986)
!13990 = !DILocation(line: 306, column: 3, scope: !13986)
!13991 = !DILocation(line: 293, column: 50, scope: !13962)
!13992 = !DILocation(line: 312, column: 1, scope: !2208)
!13993 = distinct !DISubprogram(name: "copy_bytes", scope: !2209, file: !2209, line: 261, type: !13994, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !13996)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!344, !1069, !344, !144, !344}
!13996 = !{!13997, !13998, !13999, !14000, !14001}
!13997 = !DILocalVariable(name: "dest", arg: 1, scope: !13993, file: !2209, line: 261, type: !1069)
!13998 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13993, file: !2209, line: 261, type: !344)
!13999 = !DILocalVariable(name: "src", arg: 3, scope: !13993, file: !2209, line: 261, type: !144)
!14000 = !DILocalVariable(name: "src_size", arg: 4, scope: !13993, file: !2209, line: 261, type: !344)
!14001 = !DILocalVariable(name: "bytes_to_copy", scope: !13993, file: !2209, line: 263, type: !344)
!14002 = !DILocation(line: 0, scope: !13993)
!14003 = !DILocation(line: 265, column: 18, scope: !13993)
!14004 = !DILocation(line: 266, column: 2, scope: !13993)
!14005 = !DILocation(line: 268, column: 2, scope: !13993)
!14006 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2209, file: !2209, line: 383, type: !14007, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14009)
!14007 = !DISubroutineType(types: !14008)
!14008 = !{null, !2213}
!14009 = !{!14010}
!14010 = !DILocalVariable(name: "thread", arg: 1, scope: !14006, file: !2209, line: 383, type: !2213)
!14011 = !DILocation(line: 0, scope: !14006)
!14012 = !DILocation(line: 387, column: 2, scope: !14006)
!14013 = !DILocation(line: 388, column: 1, scope: !14006)
!14014 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2209, file: !2209, line: 528, type: !14015, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14022)
!14015 = !DISubroutineType(types: !14016)
!14016 = !{!1069, !2213, !14017, !344, !3548, !102, !102, !102, !103, !121, !144}
!14017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14018, size: 32)
!14018 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3549, line: 44, baseType: !14019)
!14019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2163, line: 47, size: 8, elements: !14020)
!14020 = !{!14021}
!14021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14019, file: !2163, line: 48, baseType: !146, size: 8)
!14022 = !{!14023, !14024, !14025, !14026, !14027, !14028, !14029, !14030, !14031, !14032, !14033}
!14023 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14014, file: !2209, line: 528, type: !2213)
!14024 = !DILocalVariable(name: "stack", arg: 2, scope: !14014, file: !2209, line: 529, type: !14017)
!14025 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14014, file: !2209, line: 529, type: !344)
!14026 = !DILocalVariable(name: "entry", arg: 4, scope: !14014, file: !2209, line: 530, type: !3548)
!14027 = !DILocalVariable(name: "p1", arg: 5, scope: !14014, file: !2209, line: 531, type: !102)
!14028 = !DILocalVariable(name: "p2", arg: 6, scope: !14014, file: !2209, line: 531, type: !102)
!14029 = !DILocalVariable(name: "p3", arg: 7, scope: !14014, file: !2209, line: 531, type: !102)
!14030 = !DILocalVariable(name: "prio", arg: 8, scope: !14014, file: !2209, line: 532, type: !103)
!14031 = !DILocalVariable(name: "options", arg: 9, scope: !14014, file: !2209, line: 532, type: !121)
!14032 = !DILocalVariable(name: "name", arg: 10, scope: !14014, file: !2209, line: 532, type: !144)
!14033 = !DILocalVariable(name: "stack_ptr", scope: !14014, file: !2209, line: 534, type: !1069)
!14034 = !DILocation(line: 0, scope: !14014)
!14035 = !DILocation(line: 550, column: 28, scope: !14014)
!14036 = !DILocation(line: 550, column: 2, scope: !14014)
!14037 = !DILocation(line: 553, column: 34, scope: !14014)
!14038 = !DILocation(line: 553, column: 2, scope: !14014)
!14039 = !DILocation(line: 554, column: 14, scope: !14014)
!14040 = !DILocation(line: 564, column: 2, scope: !14014)
!14041 = !DILocation(line: 567, column: 14, scope: !14014)
!14042 = !DILocation(line: 567, column: 24, scope: !14014)
!14043 = !DILocation(line: 612, column: 7, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14014, file: !2209, line: 612, column: 6)
!14045 = !DILocation(line: 612, column: 6, scope: !14014)
!14046 = !DILocation(line: 627, column: 40, scope: !14014)
!14047 = !DILocation(line: 637, column: 2, scope: !14014)
!14048 = !DILocation(line: 613, column: 15, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14044, file: !2209, line: 612, column: 17)
!14050 = !DILocation(line: 613, column: 29, scope: !14049)
!14051 = !DILocation(line: 638, column: 1, scope: !14014)
!14052 = distinct !DISubprogram(name: "z_waitq_init", scope: !14053, file: !14053, line: 47, type: !14054, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14056)
!14053 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14054 = !DISubroutineType(types: !14055)
!14055 = !{null, !2244}
!14056 = !{!14057}
!14057 = !DILocalVariable(name: "w", arg: 1, scope: !14052, file: !14053, line: 47, type: !2244)
!14058 = !DILocation(line: 0, scope: !14052)
!14059 = !DILocation(line: 49, column: 21, scope: !14052)
!14060 = !DILocation(line: 49, column: 2, scope: !14052)
!14061 = !DILocation(line: 50, column: 1, scope: !14052)
!14062 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2209, file: !2209, line: 791, type: !14063, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14066)
!14063 = !DISubroutineType(types: !14064)
!14064 = !{null, !14065, !103, !121, !32}
!14065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!14066 = !{!14067, !14068, !14069, !14070}
!14067 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14062, file: !2209, line: 791, type: !14065)
!14068 = !DILocalVariable(name: "priority", arg: 2, scope: !14062, file: !2209, line: 791, type: !103)
!14069 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14062, file: !2209, line: 792, type: !121)
!14070 = !DILocalVariable(name: "options", arg: 4, scope: !14062, file: !2209, line: 792, type: !32)
!14071 = !DILocation(line: 0, scope: !14062)
!14072 = !DILocation(line: 795, column: 15, scope: !14062)
!14073 = !DILocation(line: 795, column: 25, scope: !14062)
!14074 = !DILocation(line: 796, column: 30, scope: !14062)
!14075 = !DILocation(line: 796, column: 15, scope: !14062)
!14076 = !DILocation(line: 796, column: 28, scope: !14062)
!14077 = !DILocation(line: 797, column: 30, scope: !14062)
!14078 = !DILocation(line: 797, column: 15, scope: !14062)
!14079 = !DILocation(line: 797, column: 28, scope: !14062)
!14080 = !DILocation(line: 799, column: 22, scope: !14062)
!14081 = !DILocation(line: 799, column: 15, scope: !14062)
!14082 = !DILocation(line: 799, column: 20, scope: !14062)
!14083 = !DILocation(line: 801, column: 15, scope: !14062)
!14084 = !DILocation(line: 801, column: 28, scope: !14062)
!14085 = !DILocation(line: 814, column: 2, scope: !14062)
!14086 = !DILocation(line: 815, column: 1, scope: !14062)
!14087 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2209, file: !2209, line: 449, type: !14088, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14090)
!14088 = !DISubroutineType(types: !14089)
!14089 = !{!1069, !2213, !14017, !344}
!14090 = !{!14091, !14092, !14093, !14094, !14095, !14096, !14097, !14098}
!14091 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14087, file: !2209, line: 449, type: !2213)
!14092 = !DILocalVariable(name: "stack", arg: 2, scope: !14087, file: !2209, line: 450, type: !14017)
!14093 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14087, file: !2209, line: 450, type: !344)
!14094 = !DILocalVariable(name: "stack_obj_size", scope: !14087, file: !2209, line: 452, type: !344)
!14095 = !DILocalVariable(name: "stack_buf_size", scope: !14087, file: !2209, line: 452, type: !344)
!14096 = !DILocalVariable(name: "stack_ptr", scope: !14087, file: !2209, line: 453, type: !1069)
!14097 = !DILocalVariable(name: "stack_buf_start", scope: !14087, file: !2209, line: 453, type: !1069)
!14098 = !DILocalVariable(name: "delta", scope: !14087, file: !2209, line: 454, type: !344)
!14099 = !DILocation(line: 0, scope: !14087)
!14100 = !DILocation(line: 465, column: 20, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14087, file: !2209, line: 463, column: 2)
!14102 = !DILocation(line: 466, column: 21, scope: !14101)
!14103 = !DILocation(line: 473, column: 28, scope: !14087)
!14104 = !DILocation(line: 514, column: 33, scope: !14087)
!14105 = !DILocation(line: 514, column: 25, scope: !14087)
!14106 = !DILocation(line: 514, column: 31, scope: !14087)
!14107 = !DILocation(line: 515, column: 25, scope: !14087)
!14108 = !DILocation(line: 515, column: 30, scope: !14087)
!14109 = !DILocation(line: 516, column: 25, scope: !14087)
!14110 = !DILocation(line: 516, column: 31, scope: !14087)
!14111 = !DILocation(line: 520, column: 2, scope: !14087)
!14112 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2163, file: !2163, line: 331, type: !14113, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14115)
!14113 = !DISubroutineType(types: !14114)
!14114 = !{!1069, !14017}
!14115 = !{!14116}
!14116 = !DILocalVariable(name: "sym", arg: 1, scope: !14112, file: !2163, line: 331, type: !14017)
!14117 = !DILocation(line: 0, scope: !14112)
!14118 = !DILocation(line: 333, column: 21, scope: !14112)
!14119 = !DILocation(line: 333, column: 2, scope: !14112)
!14120 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14121, file: !14121, line: 40, type: !14122, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14124)
!14121 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14122 = !DISubroutineType(types: !14123)
!14123 = !{null, !14065}
!14124 = !{!14125}
!14125 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14120, file: !14121, line: 40, type: !14065)
!14126 = !DILocation(line: 0, scope: !14120)
!14127 = !DILocation(line: 42, column: 31, scope: !14120)
!14128 = !DILocation(line: 42, column: 2, scope: !14120)
!14129 = !DILocation(line: 43, column: 1, scope: !14120)
!14130 = distinct !DISubprogram(name: "z_init_timeout", scope: !14121, file: !14121, line: 25, type: !2270, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14131)
!14131 = !{!14132}
!14132 = !DILocalVariable(name: "to", arg: 1, scope: !14130, file: !14121, line: 25, type: !2272)
!14133 = !DILocation(line: 0, scope: !14130)
!14134 = !DILocation(line: 27, column: 22, scope: !14130)
!14135 = !DILocation(line: 27, column: 2, scope: !14130)
!14136 = !DILocation(line: 28, column: 1, scope: !14130)
!14137 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !14138, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14140)
!14138 = !DISubroutineType(types: !14139)
!14139 = !{null, !2316}
!14140 = !{!14141}
!14141 = !DILocalVariable(name: "node", arg: 1, scope: !14137, file: !309, line: 211, type: !2316)
!14142 = !DILocation(line: 0, scope: !14137)
!14143 = !DILocation(line: 213, column: 8, scope: !14137)
!14144 = !DILocation(line: 213, column: 13, scope: !14137)
!14145 = !DILocation(line: 214, column: 8, scope: !14137)
!14146 = !DILocation(line: 214, column: 13, scope: !14137)
!14147 = !DILocation(line: 215, column: 1, scope: !14137)
!14148 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !14149, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14152)
!14149 = !DISubroutineType(types: !14150)
!14150 = !{null, !14151}
!14151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!14152 = !{!14153}
!14153 = !DILocalVariable(name: "list", arg: 1, scope: !14148, file: !309, line: 197, type: !14151)
!14154 = !DILocation(line: 0, scope: !14148)
!14155 = !DILocation(line: 199, column: 8, scope: !14148)
!14156 = !DILocation(line: 199, column: 13, scope: !14148)
!14157 = !DILocation(line: 200, column: 8, scope: !14148)
!14158 = !DILocation(line: 200, column: 13, scope: !14148)
!14159 = !DILocation(line: 201, column: 1, scope: !14148)
!14160 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2209, file: !2209, line: 641, type: !14161, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14167)
!14161 = !DISubroutineType(types: !14162)
!14162 = !{!2212, !2213, !14017, !344, !3548, !102, !102, !102, !103, !121, !14163}
!14163 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1700, line: 67, baseType: !14164)
!14164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1700, line: 65, size: 64, elements: !14165)
!14165 = !{!14166}
!14166 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14164, file: !1700, line: 66, baseType: !1699, size: 64)
!14167 = !{!14168, !14169, !14170, !14171, !14172, !14173, !14174, !14175, !14176, !14177}
!14168 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14160, file: !2209, line: 641, type: !2213)
!14169 = !DILocalVariable(name: "stack", arg: 2, scope: !14160, file: !2209, line: 642, type: !14017)
!14170 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14160, file: !2209, line: 643, type: !344)
!14171 = !DILocalVariable(name: "entry", arg: 4, scope: !14160, file: !2209, line: 643, type: !3548)
!14172 = !DILocalVariable(name: "p1", arg: 5, scope: !14160, file: !2209, line: 644, type: !102)
!14173 = !DILocalVariable(name: "p2", arg: 6, scope: !14160, file: !2209, line: 644, type: !102)
!14174 = !DILocalVariable(name: "p3", arg: 7, scope: !14160, file: !2209, line: 644, type: !102)
!14175 = !DILocalVariable(name: "prio", arg: 8, scope: !14160, file: !2209, line: 645, type: !103)
!14176 = !DILocalVariable(name: "options", arg: 9, scope: !14160, file: !2209, line: 645, type: !121)
!14177 = !DILocalVariable(name: "delay", arg: 10, scope: !14160, file: !2209, line: 645, type: !14163)
!14178 = !DILocation(line: 0, scope: !14160)
!14179 = !DILocation(line: 649, column: 2, scope: !14160)
!14180 = !DILocation(line: 652, column: 7, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14160, file: !2209, line: 652, column: 6)
!14182 = !DILocation(line: 652, column: 6, scope: !14160)
!14183 = !DILocation(line: 653, column: 3, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14181, file: !2209, line: 652, column: 39)
!14185 = !DILocation(line: 654, column: 2, scope: !14184)
!14186 = !DILocation(line: 656, column: 2, scope: !14160)
!14187 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2209, file: !2209, line: 401, type: !14188, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14190)
!14188 = !DISubroutineType(types: !14189)
!14189 = !{null, !2213, !14163}
!14190 = !{!14191, !14192}
!14191 = !DILocalVariable(name: "thread", arg: 1, scope: !14187, file: !2209, line: 401, type: !2213)
!14192 = !DILocalVariable(name: "delay", arg: 2, scope: !14187, file: !2209, line: 401, type: !14163)
!14193 = !DILocation(line: 0, scope: !14187)
!14194 = !DILocation(line: 404, column: 6, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14187, file: !2209, line: 404, column: 6)
!14196 = !DILocation(line: 404, column: 6, scope: !14187)
!14197 = !DILocation(line: 405, column: 3, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14195, file: !2209, line: 404, column: 38)
!14199 = !DILocation(line: 406, column: 2, scope: !14198)
!14200 = !DILocation(line: 407, column: 3, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14195, file: !2209, line: 406, column: 9)
!14202 = !DILocation(line: 413, column: 1, scope: !14187)
!14203 = distinct !DISubprogram(name: "k_thread_start", scope: !3670, file: !3670, line: 205, type: !14204, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14206)
!14204 = !DISubroutineType(types: !14205)
!14205 = !{null, !2212}
!14206 = !{!14207}
!14207 = !DILocalVariable(name: "thread", arg: 1, scope: !14203, file: !3670, line: 205, type: !2212)
!14208 = !DILocation(line: 0, scope: !14203)
!14209 = !DILocation(line: 214, column: 2, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14203, file: !3670, line: 214, column: 2)
!14211 = !{i64 2154767042}
!14212 = !DILocation(line: 215, column: 2, scope: !14203)
!14213 = !DILocation(line: 216, column: 1, scope: !14203)
!14214 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14121, file: !14121, line: 47, type: !14188, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14215)
!14215 = !{!14216, !14217}
!14216 = !DILocalVariable(name: "thread", arg: 1, scope: !14214, file: !14121, line: 47, type: !2213)
!14217 = !DILocalVariable(name: "ticks", arg: 2, scope: !14214, file: !14121, line: 47, type: !14163)
!14218 = !DILocation(line: 0, scope: !14214)
!14219 = !DILocation(line: 49, column: 30, scope: !14214)
!14220 = !DILocation(line: 49, column: 2, scope: !14214)
!14221 = !DILocation(line: 50, column: 1, scope: !14214)
!14222 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2209, file: !2209, line: 748, type: !3237, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14223)
!14223 = !{!14224, !14242}
!14224 = !DILocalVariable(name: "thread_data", scope: !14225, file: !2209, line: 750, type: !14226)
!14225 = distinct !DILexicalBlock(scope: !14222, file: !2209, line: 750, column: 2)
!14226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14227, size: 32)
!14227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !300, line: 620, size: 384, elements: !14228)
!14228 = !{!14229, !14230, !14231, !14232, !14233, !14234, !14235, !14236, !14237, !14238, !14239, !14241}
!14229 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14227, file: !300, line: 621, baseType: !2213, size: 32)
!14230 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14227, file: !300, line: 622, baseType: !14017, size: 32, offset: 32)
!14231 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14227, file: !300, line: 623, baseType: !32, size: 32, offset: 64)
!14232 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14227, file: !300, line: 624, baseType: !3548, size: 32, offset: 96)
!14233 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14227, file: !300, line: 625, baseType: !102, size: 32, offset: 128)
!14234 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14227, file: !300, line: 626, baseType: !102, size: 32, offset: 160)
!14235 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14227, file: !300, line: 627, baseType: !102, size: 32, offset: 192)
!14236 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14227, file: !300, line: 628, baseType: !103, size: 32, offset: 224)
!14237 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14227, file: !300, line: 629, baseType: !121, size: 32, offset: 256)
!14238 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14227, file: !300, line: 630, baseType: !332, size: 32, offset: 288)
!14239 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14227, file: !300, line: 631, baseType: !14240, size: 32, offset: 320)
!14240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 32)
!14241 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14227, file: !300, line: 632, baseType: !144, size: 32, offset: 352)
!14242 = !DILocalVariable(name: "thread_data", scope: !14243, file: !2209, line: 781, type: !14226)
!14243 = distinct !DILexicalBlock(scope: !14222, file: !2209, line: 781, column: 2)
!14244 = !DILocation(line: 0, scope: !14225)
!14245 = !DILocation(line: 750, column: 2, scope: !14225)
!14246 = !DILocation(line: 780, column: 2, scope: !14222)
!14247 = !DILocation(line: 0, scope: !14243)
!14248 = !DILocation(line: 781, column: 2, scope: !14243)
!14249 = !DILocation(line: 752, column: 17, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14251, file: !2209, line: 750, column: 38)
!14251 = distinct !DILexicalBlock(scope: !14225, file: !2209, line: 750, column: 2)
!14252 = !DILocation(line: 753, column: 17, scope: !14250)
!14253 = !DILocation(line: 754, column: 17, scope: !14250)
!14254 = !DILocation(line: 755, column: 17, scope: !14250)
!14255 = !DILocation(line: 756, column: 17, scope: !14250)
!14256 = !DILocation(line: 757, column: 17, scope: !14250)
!14257 = !DILocation(line: 758, column: 17, scope: !14250)
!14258 = !DILocation(line: 759, column: 17, scope: !14250)
!14259 = !DILocation(line: 760, column: 17, scope: !14250)
!14260 = !DILocation(line: 751, column: 3, scope: !14250)
!14261 = !DILocation(line: 763, column: 16, scope: !14250)
!14262 = !DILocation(line: 763, column: 29, scope: !14250)
!14263 = !DILocation(line: 763, column: 39, scope: !14250)
!14264 = !DILocation(line: 750, column: 2, scope: !14251)
!14265 = !DILocation(line: 750, column: 2, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14251, file: !2209, line: 750, column: 2)
!14267 = distinct !{!14267, !14245, !14268}
!14268 = !DILocation(line: 764, column: 2, scope: !14225)
!14269 = !DILocation(line: 787, column: 2, scope: !14222)
!14270 = !DILocation(line: 788, column: 1, scope: !14222)
!14271 = !DILocation(line: 782, column: 20, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14273, file: !2209, line: 782, column: 7)
!14273 = distinct !DILexicalBlock(scope: !14274, file: !2209, line: 781, column: 38)
!14274 = distinct !DILexicalBlock(scope: !14243, file: !2209, line: 781, column: 2)
!14275 = !DILocation(line: 782, column: 31, scope: !14272)
!14276 = !DILocation(line: 782, column: 7, scope: !14273)
!14277 = !DILocation(line: 783, column: 37, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14272, file: !2209, line: 782, column: 51)
!14279 = !DILocation(line: 784, column: 10, scope: !14278)
!14280 = !DILocation(line: 783, column: 4, scope: !14278)
!14281 = !DILocation(line: 785, column: 3, scope: !14278)
!14282 = !DILocation(line: 781, column: 2, scope: !14274)
!14283 = !DILocation(line: 781, column: 2, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14274, file: !2209, line: 781, column: 2)
!14285 = distinct !{!14285, !14248, !14286}
!14286 = !DILocation(line: 786, column: 2, scope: !14243)
!14287 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !6005, file: !6005, line: 403, type: !6006, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14288)
!14288 = !{!14289}
!14289 = !DILocalVariable(name: "t", arg: 1, scope: !14287, file: !6005, line: 403, type: !1596)
!14290 = !DILocation(line: 0, scope: !14287)
!14291 = !DILocalVariable(name: "t", arg: 1, scope: !14292, file: !6005, line: 102, type: !1596)
!14292 = distinct !DISubprogram(name: "z_tmcvt", scope: !6005, file: !6005, line: 102, type: !6013, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14293)
!14293 = !{!14291, !14294, !14295, !14296, !14297, !14298, !14299, !14300, !14301, !14302, !14303}
!14294 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14292, file: !6005, line: 102, type: !121)
!14295 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14292, file: !6005, line: 103, type: !121)
!14296 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14292, file: !6005, line: 103, type: !157)
!14297 = !DILocalVariable(name: "result32", arg: 5, scope: !14292, file: !6005, line: 104, type: !157)
!14298 = !DILocalVariable(name: "round_up", arg: 6, scope: !14292, file: !6005, line: 104, type: !157)
!14299 = !DILocalVariable(name: "round_off", arg: 7, scope: !14292, file: !6005, line: 105, type: !157)
!14300 = !DILocalVariable(name: "mul_ratio", scope: !14292, file: !6005, line: 107, type: !157)
!14301 = !DILocalVariable(name: "div_ratio", scope: !14292, file: !6005, line: 109, type: !157)
!14302 = !DILocalVariable(name: "off", scope: !14292, file: !6005, line: 116, type: !1596)
!14303 = !DILocalVariable(name: "rdivisor", scope: !14304, file: !6005, line: 119, type: !121)
!14304 = distinct !DILexicalBlock(scope: !14305, file: !6005, line: 118, column: 18)
!14305 = distinct !DILexicalBlock(scope: !14292, file: !6005, line: 118, column: 6)
!14306 = !DILocation(line: 0, scope: !14292, inlinedAt: !14307)
!14307 = distinct !DILocation(line: 406, column: 9, scope: !14287)
!14308 = !DILocation(line: 145, column: 13, scope: !14309, inlinedAt: !14307)
!14309 = distinct !DILexicalBlock(scope: !14310, file: !6005, line: 144, column: 10)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !6005, line: 142, column: 7)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !6005, line: 141, column: 24)
!14312 = distinct !DILexicalBlock(scope: !14313, file: !6005, line: 141, column: 13)
!14313 = distinct !DILexicalBlock(scope: !14292, file: !6005, line: 134, column: 6)
!14314 = !DILocation(line: 406, column: 2, scope: !14287)
!14315 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2209, file: !2209, line: 817, type: !3546, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14316)
!14316 = !{!14317, !14318, !14319, !14320}
!14317 = !DILocalVariable(name: "entry", arg: 1, scope: !14315, file: !2209, line: 817, type: !3548)
!14318 = !DILocalVariable(name: "p1", arg: 2, scope: !14315, file: !2209, line: 818, type: !102)
!14319 = !DILocalVariable(name: "p2", arg: 3, scope: !14315, file: !2209, line: 818, type: !102)
!14320 = !DILocalVariable(name: "p3", arg: 4, scope: !14315, file: !2209, line: 818, type: !102)
!14321 = !DILocation(line: 0, scope: !14315)
!14322 = !DILocation(line: 822, column: 2, scope: !14315)
!14323 = !DILocation(line: 822, column: 17, scope: !14315)
!14324 = !DILocation(line: 822, column: 30, scope: !14315)
!14325 = !DILocation(line: 823, column: 2, scope: !14315)
!14326 = !DILocation(line: 845, column: 2, scope: !14315)
!14327 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2209, file: !2209, line: 888, type: !14328, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14330)
!14328 = !DISubroutineType(types: !14329)
!14329 = !{!103, !2213}
!14330 = !{!14331}
!14331 = !DILocalVariable(name: "thread", arg: 1, scope: !14327, file: !2209, line: 888, type: !2213)
!14332 = !DILocation(line: 0, scope: !14327)
!14333 = !DILocation(line: 893, column: 2, scope: !14327)
!14334 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2209, file: !2209, line: 897, type: !14335, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14337)
!14335 = !DISubroutineType(types: !14336)
!14336 = !{!103, !2213, !32}
!14337 = !{!14338, !14339}
!14338 = !DILocalVariable(name: "thread", arg: 1, scope: !14334, file: !2209, line: 897, type: !2213)
!14339 = !DILocalVariable(name: "options", arg: 2, scope: !14334, file: !2209, line: 897, type: !32)
!14340 = !DILocation(line: 0, scope: !14334)
!14341 = !DILocation(line: 902, column: 2, scope: !14334)
!14342 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2209, file: !2209, line: 1072, type: !14343, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14348)
!14343 = !DISubroutineType(types: !14344)
!14344 = !{!103, !2212, !14345}
!14345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14346, size: 32)
!14346 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !355, line: 234, baseType: !14347)
!14347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !355, line: 192, elements: !461)
!14348 = !{!14349, !14350}
!14349 = !DILocalVariable(name: "thread", arg: 1, scope: !14342, file: !2209, line: 1072, type: !2212)
!14350 = !DILocalVariable(name: "stats", arg: 2, scope: !14342, file: !2209, line: 1073, type: !14345)
!14351 = !DILocation(line: 0, scope: !14342)
!14352 = !DILocation(line: 1075, column: 14, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14342, file: !2209, line: 1075, column: 6)
!14354 = !DILocation(line: 1075, column: 23, scope: !14353)
!14355 = !DILocation(line: 1086, column: 1, scope: !14342)
!14356 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2209, file: !2209, line: 1088, type: !14357, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14359)
!14357 = !DISubroutineType(types: !14358)
!14358 = !{!103, !14345}
!14359 = !{!14360}
!14360 = !DILocalVariable(name: "stats", arg: 1, scope: !14356, file: !2209, line: 1088, type: !14345)
!14361 = !DILocation(line: 0, scope: !14356)
!14362 = !DILocation(line: 1094, column: 12, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14356, file: !2209, line: 1094, column: 6)
!14364 = !DILocation(line: 1120, column: 1, scope: !14356)
!14365 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14366, file: !14366, line: 20, type: !3237, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3218, retainedNodes: !461)
!14366 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14367 = !DILocation(line: 30, column: 2, scope: !14365)
!14368 = !DILocation(line: 31, column: 1, scope: !14365)
!14369 = distinct !DISubprogram(name: "idle", scope: !14366, file: !14366, line: 33, type: !3551, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3218, retainedNodes: !14370)
!14370 = !{!14371, !14372, !14373}
!14371 = !DILocalVariable(name: "unused1", arg: 1, scope: !14369, file: !14366, line: 33, type: !102)
!14372 = !DILocalVariable(name: "unused2", arg: 2, scope: !14369, file: !14366, line: 33, type: !102)
!14373 = !DILocalVariable(name: "unused3", arg: 3, scope: !14369, file: !14366, line: 33, type: !102)
!14374 = !DILocation(line: 0, scope: !14369)
!14375 = !DILocation(line: 41, column: 2, scope: !14369)
!14376 = !DILocation(line: 55, column: 2, scope: !14377, inlinedAt: !14381)
!14377 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3218, retainedNodes: !14378)
!14378 = !{!14379, !14380}
!14379 = !DILocalVariable(name: "key", scope: !14377, file: !5805, line: 44, type: !32)
!14380 = !DILocalVariable(name: "tmp", scope: !14377, file: !5805, line: 53, type: !32)
!14381 = distinct !DILocation(line: 62, column: 10, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14369, file: !14366, line: 41, column: 15)
!14383 = !{i64 2239381}
!14384 = !DILocation(line: 0, scope: !14377, inlinedAt: !14381)
!14385 = !DILocation(line: 86, column: 3, scope: !14382)
!14386 = distinct !{!14386, !14375, !14387}
!14387 = !DILocation(line: 105, column: 2, scope: !14369)
!14388 = distinct !DISubprogram(name: "k_cpu_idle", scope: !300, file: !300, line: 5627, type: !3237, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3218, retainedNodes: !461)
!14389 = !DILocation(line: 5629, column: 2, scope: !14388)
!14390 = !DILocation(line: 5630, column: 1, scope: !14388)
!14391 = !DISubprogram(name: "arch_cpu_idle", scope: !3549, file: !3549, line: 167, type: !3237, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!14392 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2352, file: !2352, line: 41, type: !14393, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14406)
!14393 = !DISubroutineType(types: !14394)
!14394 = !{!103, !14395, !32, !32}
!14395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14396, size: 32)
!14396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !14397)
!14397 = !{!14398, !14404, !14405}
!14398 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14396, file: !300, line: 2910, baseType: !14399, size: 64)
!14399 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !14400)
!14400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !14401)
!14401 = !{!14402}
!14402 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14400, file: !304, line: 232, baseType: !14403, size: 64)
!14403 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2338)
!14404 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14396, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!14405 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14396, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!14406 = !{!14407, !14408, !14409}
!14407 = !DILocalVariable(name: "sem", arg: 1, scope: !14392, file: !2352, line: 41, type: !14395)
!14408 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14392, file: !2352, line: 41, type: !32)
!14409 = !DILocalVariable(name: "limit", arg: 3, scope: !14392, file: !2352, line: 42, type: !32)
!14410 = !DILocation(line: 0, scope: !14392)
!14411 = !DILocation(line: 47, column: 2, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14392, file: !2352, line: 47, column: 2)
!14413 = !DILocation(line: 53, column: 7, scope: !14392)
!14414 = !DILocation(line: 53, column: 13, scope: !14392)
!14415 = !DILocation(line: 54, column: 7, scope: !14392)
!14416 = !DILocation(line: 54, column: 13, scope: !14392)
!14417 = !DILocation(line: 58, column: 21, scope: !14392)
!14418 = !DILocation(line: 58, column: 2, scope: !14392)
!14419 = !DILocation(line: 64, column: 2, scope: !14392)
!14420 = !DILocation(line: 65, column: 1, scope: !14392)
!14421 = distinct !DISubprogram(name: "z_waitq_init", scope: !14053, file: !14053, line: 47, type: !14422, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14425)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{null, !14424}
!14424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14399, size: 32)
!14425 = !{!14426}
!14426 = !DILocalVariable(name: "w", arg: 1, scope: !14421, file: !14053, line: 47, type: !14424)
!14427 = !DILocation(line: 0, scope: !14421)
!14428 = !DILocation(line: 49, column: 21, scope: !14421)
!14429 = !DILocation(line: 49, column: 2, scope: !14421)
!14430 = !DILocation(line: 50, column: 1, scope: !14421)
!14431 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !14432, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14435)
!14432 = !DISubroutineType(types: !14433)
!14433 = !{null, !14434}
!14434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14403, size: 32)
!14435 = !{!14436}
!14436 = !DILocalVariable(name: "list", arg: 1, scope: !14431, file: !309, line: 197, type: !14434)
!14437 = !DILocation(line: 0, scope: !14431)
!14438 = !DILocation(line: 199, column: 8, scope: !14431)
!14439 = !DILocation(line: 199, column: 13, scope: !14431)
!14440 = !DILocation(line: 200, column: 8, scope: !14431)
!14441 = !DILocation(line: 200, column: 13, scope: !14431)
!14442 = !DILocation(line: 201, column: 1, scope: !14431)
!14443 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2352, file: !2352, line: 86, type: !14444, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14446)
!14444 = !DISubroutineType(types: !14445)
!14445 = !{null, !14395}
!14446 = !{!14447, !14448, !14453}
!14447 = !DILocalVariable(name: "sem", arg: 1, scope: !14443, file: !2352, line: 86, type: !14395)
!14448 = !DILocalVariable(name: "key", scope: !14443, file: !2352, line: 88, type: !14449)
!14449 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !14450)
!14450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !14451)
!14451 = !{!14452}
!14452 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14450, file: !460, line: 33, baseType: !103, size: 32)
!14453 = !DILocalVariable(name: "thread", scope: !14443, file: !2352, line: 89, type: !14454)
!14454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14455, size: 32)
!14455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !14456)
!14456 = !{!14457, !14495, !14507, !14508, !14509, !14510, !14516, !14528}
!14457 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14455, file: !355, line: 247, baseType: !14458, size: 384)
!14458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !14459)
!14459 = !{!14460, !14470, !14471, !14472, !14473, !14482, !14483, !14484}
!14460 = !DIDerivedType(tag: DW_TAG_member, scope: !14458, file: !355, line: 60, baseType: !14461, size: 64)
!14461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14458, file: !355, line: 60, size: 64, elements: !14462)
!14462 = !{!14463, !14464}
!14463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14461, file: !355, line: 61, baseType: !2337, size: 64)
!14464 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14461, file: !355, line: 62, baseType: !14465, size: 64)
!14465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !14466)
!14466 = !{!14467}
!14467 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14465, file: !380, line: 50, baseType: !14468, size: 64)
!14468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14469, size: 64, elements: !385)
!14469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14465, size: 32)
!14470 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14458, file: !355, line: 68, baseType: !14424, size: 32, offset: 64)
!14471 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14458, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!14472 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14458, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!14473 = !DIDerivedType(tag: DW_TAG_member, scope: !14458, file: !355, line: 90, baseType: !14474, size: 16, offset: 112)
!14474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14458, file: !355, line: 90, size: 16, elements: !14475)
!14475 = !{!14476, !14481}
!14476 = !DIDerivedType(tag: DW_TAG_member, scope: !14474, file: !355, line: 91, baseType: !14477, size: 16)
!14477 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14474, file: !355, line: 91, size: 16, elements: !14478)
!14478 = !{!14479, !14480}
!14479 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14477, file: !355, line: 96, baseType: !403, size: 8)
!14480 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14477, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!14481 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14474, file: !355, line: 100, baseType: !328, size: 16)
!14482 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14458, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!14483 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14458, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!14484 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14458, file: !355, line: 131, baseType: !14485, size: 192, offset: 192)
!14485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !14486)
!14486 = !{!14487, !14488, !14494}
!14487 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14485, file: !304, line: 245, baseType: !2337, size: 64)
!14488 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14485, file: !304, line: 246, baseType: !14489, size: 32, offset: 64)
!14489 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !14490)
!14490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14491, size: 32)
!14491 = !DISubroutineType(types: !14492)
!14492 = !{null, !14493}
!14493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14485, size: 32)
!14494 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14485, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!14495 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14455, file: !355, line: 250, baseType: !14496, size: 288, offset: 384)
!14496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !14497)
!14497 = !{!14498, !14499, !14500, !14501, !14502, !14503, !14504, !14505, !14506}
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14496, file: !424, line: 26, baseType: !121, size: 32)
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14496, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14496, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14496, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!14502 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14496, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!14503 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14496, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14496, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14496, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14496, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14455, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14455, file: !355, line: 256, baseType: !14399, size: 64, offset: 704)
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14455, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!14510 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14455, file: !355, line: 300, baseType: !14511, size: 96, offset: 800)
!14511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !14512)
!14512 = !{!14513, !14514, !14515}
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14511, file: !355, line: 153, baseType: !22, size: 32)
!14514 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14511, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!14515 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14511, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14455, file: !355, line: 325, baseType: !14517, size: 32, offset: 896)
!14517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14518, size: 32)
!14518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !14519)
!14519 = !{!14520, !14526, !14527}
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14518, file: !300, line: 5074, baseType: !14521, size: 96)
!14521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !14522)
!14522 = !{!14523, !14524, !14525}
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14521, file: !450, line: 57, baseType: !453, size: 32)
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14521, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14521, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14518, file: !300, line: 5075, baseType: !14399, size: 64, offset: 96)
!14527 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14518, file: !300, line: 5076, baseType: !2353, offset: 160)
!14528 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14455, file: !355, line: 343, baseType: !14529, size: 64, offset: 928)
!14529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !14530)
!14530 = !{!14531, !14532}
!14531 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14529, file: !424, line: 63, baseType: !121, size: 32)
!14532 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14529, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!14533 = !DILocation(line: 0, scope: !14443)
!14534 = !DILocalVariable(name: "l", arg: 1, scope: !14535, file: !460, line: 136, type: !14538)
!14535 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !14536, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14539)
!14536 = !DISubroutineType(types: !14537)
!14537 = !{!14449, !14538}
!14538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!14539 = !{!14534, !14540}
!14540 = !DILocalVariable(name: "k", scope: !14535, file: !460, line: 139, type: !14449)
!14541 = !DILocation(line: 0, scope: !14535, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 88, column: 25, scope: !14443)
!14543 = !DILocation(line: 55, column: 2, scope: !14544, inlinedAt: !14548)
!14544 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14545)
!14545 = !{!14546, !14547}
!14546 = !DILocalVariable(name: "key", scope: !14544, file: !5805, line: 44, type: !32)
!14547 = !DILocalVariable(name: "tmp", scope: !14544, file: !5805, line: 53, type: !32)
!14548 = distinct !DILocation(line: 145, column: 10, scope: !14535, inlinedAt: !14542)
!14549 = !{i64 2240943}
!14550 = !DILocation(line: 0, scope: !14544, inlinedAt: !14548)
!14551 = !DILocation(line: 93, column: 39, scope: !14443)
!14552 = !DILocation(line: 93, column: 11, scope: !14443)
!14553 = !DILocation(line: 95, column: 13, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14443, file: !2352, line: 95, column: 6)
!14555 = !DILocation(line: 95, column: 6, scope: !14443)
!14556 = !DILocalVariable(name: "thread", arg: 1, scope: !14557, file: !13747, line: 65, type: !14454)
!14557 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13747, file: !13747, line: 65, type: !14558, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14560)
!14558 = !DISubroutineType(types: !14559)
!14559 = !{null, !14454, !32}
!14560 = !{!14556, !14561}
!14561 = !DILocalVariable(name: "value", arg: 2, scope: !14557, file: !13747, line: 65, type: !32)
!14562 = !DILocation(line: 0, scope: !14557, inlinedAt: !14563)
!14563 = distinct !DILocation(line: 96, column: 3, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14554, file: !2352, line: 95, column: 22)
!14565 = !DILocation(line: 67, column: 15, scope: !14557, inlinedAt: !14563)
!14566 = !DILocation(line: 67, column: 33, scope: !14557, inlinedAt: !14563)
!14567 = !DILocation(line: 97, column: 3, scope: !14564)
!14568 = !DILocation(line: 98, column: 2, scope: !14564)
!14569 = !DILocation(line: 99, column: 23, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14554, file: !2352, line: 98, column: 9)
!14571 = !DILocation(line: 99, column: 37, scope: !14570)
!14572 = !DILocation(line: 99, column: 29, scope: !14570)
!14573 = !DILocation(line: 99, column: 17, scope: !14570)
!14574 = !DILocation(line: 99, column: 14, scope: !14570)
!14575 = !DILocation(line: 103, column: 2, scope: !14443)
!14576 = !DILocation(line: 106, column: 1, scope: !14443)
!14577 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2352, file: !2352, line: 117, type: !14578, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14584)
!14578 = !DISubroutineType(types: !14579)
!14579 = !{!103, !14395, !14580}
!14580 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1700, line: 67, baseType: !14581)
!14581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1700, line: 65, size: 64, elements: !14582)
!14582 = !{!14583}
!14583 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14581, file: !1700, line: 66, baseType: !1699, size: 64)
!14584 = !{!14585, !14586, !14587, !14588, !14589}
!14585 = !DILocalVariable(name: "sem", arg: 1, scope: !14577, file: !2352, line: 117, type: !14395)
!14586 = !DILocalVariable(name: "timeout", arg: 2, scope: !14577, file: !2352, line: 117, type: !14580)
!14587 = !DILocalVariable(name: "ret", scope: !14577, file: !2352, line: 119, type: !103)
!14588 = !DILocalVariable(name: "key", scope: !14577, file: !2352, line: 124, type: !14449)
!14589 = !DILabel(scope: !14577, name: "out", file: !2352, line: 145)
!14590 = !DILocation(line: 0, scope: !14577)
!14591 = !DILocation(line: 0, scope: !14535, inlinedAt: !14592)
!14592 = distinct !DILocation(line: 124, column: 25, scope: !14577)
!14593 = !DILocation(line: 55, column: 2, scope: !14544, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 145, column: 10, scope: !14535, inlinedAt: !14592)
!14595 = !DILocation(line: 0, scope: !14544, inlinedAt: !14594)
!14596 = !DILocation(line: 128, column: 6, scope: !14597)
!14597 = distinct !DILexicalBlock(scope: !14577, file: !2352, line: 128, column: 6)
!14598 = !DILocation(line: 128, column: 6, scope: !14577)
!14599 = !{!"branch_weights", i32 1, i32 2000}
!14600 = !DILocation(line: 129, column: 13, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !14597, file: !2352, line: 128, column: 31)
!14602 = !DILocalVariable(name: "key", arg: 2, scope: !14603, file: !460, line: 190, type: !14449)
!14603 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !14604, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14606)
!14604 = !DISubroutineType(types: !14605)
!14605 = !{null, !14538, !14449}
!14606 = !{!14607, !14602}
!14607 = !DILocalVariable(name: "l", arg: 1, scope: !14603, file: !460, line: 189, type: !14538)
!14608 = !DILocation(line: 0, scope: !14603, inlinedAt: !14609)
!14609 = distinct !DILocation(line: 130, column: 3, scope: !14601)
!14610 = !DILocalVariable(name: "key", arg: 1, scope: !14611, file: !5805, line: 84, type: !32)
!14611 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14612)
!14612 = !{!14610}
!14613 = !DILocation(line: 0, scope: !14611, inlinedAt: !14614)
!14614 = distinct !DILocation(line: 215, column: 2, scope: !14603, inlinedAt: !14609)
!14615 = !DILocation(line: 95, column: 2, scope: !14611, inlinedAt: !14614)
!14616 = !{i64 2241760}
!14617 = !DILocation(line: 132, column: 3, scope: !14601)
!14618 = !DILocation(line: 135, column: 6, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14577, file: !2352, line: 135, column: 6)
!14620 = !DILocation(line: 135, column: 6, scope: !14577)
!14621 = !DILocation(line: 0, scope: !14603, inlinedAt: !14622)
!14622 = distinct !DILocation(line: 136, column: 3, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14619, file: !2352, line: 135, column: 40)
!14624 = !DILocation(line: 0, scope: !14611, inlinedAt: !14625)
!14625 = distinct !DILocation(line: 215, column: 2, scope: !14603, inlinedAt: !14622)
!14626 = !DILocation(line: 95, column: 2, scope: !14611, inlinedAt: !14625)
!14627 = !DILocation(line: 138, column: 3, scope: !14623)
!14628 = !DILocation(line: 143, column: 38, scope: !14577)
!14629 = !DILocation(line: 143, column: 8, scope: !14577)
!14630 = !DILocation(line: 143, column: 2, scope: !14577)
!14631 = !DILocation(line: 145, column: 1, scope: !14577)
!14632 = !DILocation(line: 148, column: 2, scope: !14577)
!14633 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2352, file: !2352, line: 151, type: !14444, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !14634)
!14634 = !{!14635, !14636, !14637}
!14635 = !DILocalVariable(name: "sem", arg: 1, scope: !14633, file: !2352, line: 151, type: !14395)
!14636 = !DILocalVariable(name: "thread", scope: !14633, file: !2352, line: 153, type: !14454)
!14637 = !DILocalVariable(name: "key", scope: !14633, file: !2352, line: 154, type: !14449)
!14638 = !DILocation(line: 0, scope: !14633)
!14639 = !DILocation(line: 0, scope: !14535, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 154, column: 25, scope: !14633)
!14641 = !DILocation(line: 55, column: 2, scope: !14544, inlinedAt: !14642)
!14642 = distinct !DILocation(line: 145, column: 10, scope: !14535, inlinedAt: !14640)
!14643 = !DILocation(line: 0, scope: !14544, inlinedAt: !14642)
!14644 = !DILocation(line: 157, column: 12, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14633, file: !2352, line: 156, column: 15)
!14646 = !DILocation(line: 158, column: 14, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14645, file: !2352, line: 158, column: 7)
!14648 = !DILocation(line: 158, column: 7, scope: !14645)
!14649 = !DILocation(line: 0, scope: !14557, inlinedAt: !14650)
!14650 = distinct !DILocation(line: 161, column: 3, scope: !14645)
!14651 = !DILocation(line: 67, column: 15, scope: !14557, inlinedAt: !14650)
!14652 = !DILocation(line: 67, column: 33, scope: !14557, inlinedAt: !14650)
!14653 = !DILocation(line: 162, column: 3, scope: !14645)
!14654 = distinct !{!14654, !14655, !14656}
!14655 = !DILocation(line: 156, column: 2, scope: !14633)
!14656 = !DILocation(line: 163, column: 2, scope: !14633)
!14657 = !DILocation(line: 164, column: 7, scope: !14633)
!14658 = !DILocation(line: 164, column: 13, scope: !14633)
!14659 = !DILocation(line: 170, column: 2, scope: !14633)
!14660 = !DILocation(line: 171, column: 1, scope: !14633)
!14661 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2464, file: !2464, line: 93, type: !14662, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14664)
!14662 = !DISubroutineType(types: !14663)
!14663 = !{!332, !2359, !2359}
!14664 = !{!14665, !14666, !14667, !14668}
!14665 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14661, file: !2464, line: 93, type: !2359)
!14666 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14661, file: !2464, line: 94, type: !2359)
!14667 = !DILocalVariable(name: "b1", scope: !14661, file: !2464, line: 97, type: !332)
!14668 = !DILocalVariable(name: "b2", scope: !14661, file: !2464, line: 98, type: !332)
!14669 = !DILocation(line: 0, scope: !14661)
!14670 = !DILocation(line: 97, column: 30, scope: !14661)
!14671 = !DILocation(line: 98, column: 30, scope: !14661)
!14672 = !DILocation(line: 100, column: 9, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14661, file: !2464, line: 100, column: 6)
!14674 = !DILocation(line: 100, column: 6, scope: !14661)
!14675 = !DILocation(line: 125, column: 1, scope: !14661)
!14676 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2464, file: !2464, line: 428, type: !14677, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14679)
!14677 = !DISubroutineType(types: !14678)
!14678 = !{null, !2359}
!14679 = !{!14680}
!14680 = !DILocalVariable(name: "curr", arg: 1, scope: !14676, file: !2464, line: 428, type: !2359)
!14681 = !DILocation(line: 0, scope: !14676)
!14682 = !DILocation(line: 434, column: 6, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14676, file: !2464, line: 434, column: 6)
!14684 = !DILocation(line: 434, column: 23, scope: !14683)
!14685 = !DILocation(line: 434, column: 6, scope: !14676)
!14686 = !DILocation(line: 435, column: 50, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14683, file: !2464, line: 434, column: 29)
!14688 = !DILocation(line: 435, column: 48, scope: !14687)
!14689 = !DILocation(line: 435, column: 29, scope: !14687)
!14690 = !DILocation(line: 436, column: 24, scope: !14687)
!14691 = !DILocation(line: 436, column: 3, scope: !14687)
!14692 = !DILocation(line: 437, column: 2, scope: !14687)
!14693 = !DILocation(line: 438, column: 1, scope: !14676)
!14694 = distinct !DISubprogram(name: "slice_time", scope: !2464, file: !2464, line: 407, type: !14695, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14697)
!14695 = !DISubroutineType(types: !14696)
!14696 = !{!103, !2359}
!14697 = !{!14698, !14699}
!14698 = !DILocalVariable(name: "curr", arg: 1, scope: !14694, file: !2464, line: 407, type: !2359)
!14699 = !DILocalVariable(name: "ret", scope: !14694, file: !2464, line: 409, type: !103)
!14700 = !DILocation(line: 0, scope: !14694)
!14701 = !DILocation(line: 409, column: 12, scope: !14694)
!14702 = !DILocation(line: 416, column: 2, scope: !14694)
!14703 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2464, file: !2464, line: 440, type: !14704, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14706)
!14704 = !DISubroutineType(types: !14705)
!14705 = !{null, !332, !103}
!14706 = !{!14707, !14708, !14709, !14715}
!14707 = !DILocalVariable(name: "slice", arg: 1, scope: !14703, file: !2464, line: 440, type: !332)
!14708 = !DILocalVariable(name: "prio", arg: 2, scope: !14703, file: !2464, line: 440, type: !103)
!14709 = !DILocalVariable(name: "__i", scope: !14710, file: !2464, line: 442, type: !14711)
!14710 = distinct !DILexicalBlock(scope: !14703, file: !2464, line: 442, column: 2)
!14711 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !14712)
!14712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !14713)
!14713 = !{!14714}
!14714 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14712, file: !460, line: 33, baseType: !103, size: 32)
!14715 = !DILocalVariable(name: "__key", scope: !14710, file: !2464, line: 442, type: !14711)
!14716 = !DILocation(line: 0, scope: !14703)
!14717 = !DILocation(line: 0, scope: !14710)
!14718 = !DILocalVariable(name: "l", arg: 1, scope: !14719, file: !460, line: 136, type: !14722)
!14719 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !14720, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14723)
!14720 = !DISubroutineType(types: !14721)
!14721 = !{!14711, !14722}
!14722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!14723 = !{!14718, !14724}
!14724 = !DILocalVariable(name: "k", scope: !14719, file: !460, line: 139, type: !14711)
!14725 = !DILocation(line: 0, scope: !14719, inlinedAt: !14726)
!14726 = distinct !DILocation(line: 442, column: 2, scope: !14710)
!14727 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !14732)
!14728 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14729)
!14729 = !{!14730, !14731}
!14730 = !DILocalVariable(name: "key", scope: !14728, file: !5805, line: 44, type: !32)
!14731 = !DILocalVariable(name: "tmp", scope: !14728, file: !5805, line: 53, type: !32)
!14732 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !14726)
!14733 = !{i64 2283352}
!14734 = !DILocation(line: 0, scope: !14728, inlinedAt: !14732)
!14735 = !DILocation(line: 443, column: 29, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14737, file: !2464, line: 442, column: 26)
!14737 = distinct !DILexicalBlock(scope: !14710, file: !2464, line: 442, column: 2)
!14738 = !DILocation(line: 444, column: 17, scope: !14736)
!14739 = !DILocation(line: 445, column: 51, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14736, file: !2464, line: 445, column: 7)
!14741 = !DILocation(line: 445, column: 7, scope: !14736)
!14742 = !DILocation(line: 0, scope: !14736)
!14743 = !DILocation(line: 451, column: 18, scope: !14736)
!14744 = !DILocation(line: 452, column: 3, scope: !14736)
!14745 = !DILocalVariable(name: "key", arg: 2, scope: !14746, file: !460, line: 190, type: !14711)
!14746 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !14747, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14749)
!14747 = !DISubroutineType(types: !14748)
!14748 = !{null, !14722, !14711}
!14749 = !{!14750, !14745}
!14750 = !DILocalVariable(name: "l", arg: 1, scope: !14746, file: !460, line: 189, type: !14722)
!14751 = !DILocation(line: 0, scope: !14746, inlinedAt: !14752)
!14752 = distinct !DILocation(line: 442, column: 2, scope: !14737)
!14753 = !DILocalVariable(name: "key", arg: 1, scope: !14754, file: !5805, line: 84, type: !32)
!14754 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14755)
!14755 = !{!14753}
!14756 = !DILocation(line: 0, scope: !14754, inlinedAt: !14757)
!14757 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !14752)
!14758 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !14757)
!14759 = !{i64 2284169}
!14760 = !DILocation(line: 454, column: 1, scope: !14703)
!14761 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !6005, file: !6005, line: 389, type: !7832, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14762)
!14762 = !{!14763}
!14763 = !DILocalVariable(name: "t", arg: 1, scope: !14761, file: !6005, line: 389, type: !121)
!14764 = !DILocation(line: 0, scope: !14761)
!14765 = !DILocalVariable(name: "t", arg: 1, scope: !14766, file: !6005, line: 102, type: !1596)
!14766 = distinct !DISubprogram(name: "z_tmcvt", scope: !6005, file: !6005, line: 102, type: !6013, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14767)
!14767 = !{!14765, !14768, !14769, !14770, !14771, !14772, !14773, !14774, !14775, !14776, !14777}
!14768 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14766, file: !6005, line: 102, type: !121)
!14769 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14766, file: !6005, line: 103, type: !121)
!14770 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14766, file: !6005, line: 103, type: !157)
!14771 = !DILocalVariable(name: "result32", arg: 5, scope: !14766, file: !6005, line: 104, type: !157)
!14772 = !DILocalVariable(name: "round_up", arg: 6, scope: !14766, file: !6005, line: 104, type: !157)
!14773 = !DILocalVariable(name: "round_off", arg: 7, scope: !14766, file: !6005, line: 105, type: !157)
!14774 = !DILocalVariable(name: "mul_ratio", scope: !14766, file: !6005, line: 107, type: !157)
!14775 = !DILocalVariable(name: "div_ratio", scope: !14766, file: !6005, line: 109, type: !157)
!14776 = !DILocalVariable(name: "off", scope: !14766, file: !6005, line: 116, type: !1596)
!14777 = !DILocalVariable(name: "rdivisor", scope: !14778, file: !6005, line: 119, type: !121)
!14778 = distinct !DILexicalBlock(scope: !14779, file: !6005, line: 118, column: 18)
!14779 = distinct !DILexicalBlock(scope: !14766, file: !6005, line: 118, column: 6)
!14780 = !DILocation(line: 0, scope: !14766, inlinedAt: !14781)
!14781 = distinct !DILocation(line: 392, column: 9, scope: !14761)
!14782 = !DILocation(line: 143, column: 25, scope: !14783, inlinedAt: !14781)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !6005, line: 142, column: 17)
!14784 = distinct !DILexicalBlock(scope: !14785, file: !6005, line: 142, column: 7)
!14785 = distinct !DILexicalBlock(scope: !14786, file: !6005, line: 141, column: 24)
!14786 = distinct !DILexicalBlock(scope: !14787, file: !6005, line: 141, column: 13)
!14787 = distinct !DILexicalBlock(scope: !14766, file: !6005, line: 134, column: 6)
!14788 = !DILocation(line: 392, column: 2, scope: !14761)
!14789 = distinct !DISubprogram(name: "z_time_slice", scope: !2464, file: !2464, line: 502, type: !8467, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14790)
!14790 = !{!14791, !14792}
!14791 = !DILocalVariable(name: "ticks", arg: 1, scope: !14789, file: !2464, line: 502, type: !103)
!14792 = !DILocalVariable(name: "key", scope: !14789, file: !2464, line: 511, type: !14711)
!14793 = !DILocation(line: 0, scope: !14789)
!14794 = !DILocation(line: 0, scope: !14719, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 511, column: 25, scope: !14789)
!14796 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !14797)
!14797 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !14795)
!14798 = !DILocation(line: 0, scope: !14728, inlinedAt: !14797)
!14799 = !DILocation(line: 514, column: 6, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14789, file: !2464, line: 514, column: 6)
!14801 = !DILocation(line: 514, column: 25, scope: !14800)
!14802 = !DILocation(line: 514, column: 22, scope: !14800)
!14803 = !DILocation(line: 514, column: 6, scope: !14789)
!14804 = !DILocation(line: 515, column: 3, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14800, file: !2464, line: 514, column: 35)
!14806 = !DILocation(line: 0, scope: !14746, inlinedAt: !14807)
!14807 = distinct !DILocation(line: 516, column: 3, scope: !14805)
!14808 = !DILocation(line: 0, scope: !14754, inlinedAt: !14809)
!14809 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !14807)
!14810 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !14809)
!14811 = !DILocation(line: 517, column: 3, scope: !14805)
!14812 = !DILocation(line: 519, column: 18, scope: !14789)
!14813 = !DILocation(line: 522, column: 6, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14789, file: !2464, line: 522, column: 6)
!14815 = !DILocation(line: 522, column: 27, scope: !14814)
!14816 = !DILocation(line: 522, column: 30, scope: !14814)
!14817 = !DILocation(line: 522, column: 6, scope: !14789)
!14818 = !DILocation(line: 523, column: 30, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14820, file: !2464, line: 523, column: 7)
!14820 = distinct !DILexicalBlock(scope: !14814, file: !2464, line: 522, column: 51)
!14821 = !DILocation(line: 523, column: 13, scope: !14819)
!14822 = !DILocation(line: 523, column: 7, scope: !14820)
!14823 = !DILocation(line: 530, column: 10, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14819, file: !2464, line: 523, column: 43)
!14825 = !DILocation(line: 531, column: 3, scope: !14824)
!14826 = !DILocation(line: 532, column: 30, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14819, file: !2464, line: 531, column: 10)
!14828 = !DILocation(line: 535, column: 29, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14814, file: !2464, line: 534, column: 9)
!14830 = !DILocation(line: 0, scope: !14746, inlinedAt: !14831)
!14831 = distinct !DILocation(line: 537, column: 2, scope: !14789)
!14832 = !DILocation(line: 0, scope: !14754, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !14831)
!14834 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !14833)
!14835 = !DILocation(line: 538, column: 1, scope: !14789)
!14836 = distinct !DISubprogram(name: "sliceable", scope: !2464, file: !2464, line: 468, type: !14837, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14839)
!14837 = !DISubroutineType(types: !14838)
!14838 = !{!157, !2359}
!14839 = !{!14840, !14841}
!14840 = !DILocalVariable(name: "thread", arg: 1, scope: !14836, file: !2464, line: 468, type: !2359)
!14841 = !DILocalVariable(name: "ret", scope: !14836, file: !2464, line: 470, type: !157)
!14842 = !DILocation(line: 0, scope: !14836)
!14843 = !DILocation(line: 470, column: 13, scope: !14836)
!14844 = !DILocation(line: 471, column: 3, scope: !14836)
!14845 = !DILocation(line: 471, column: 7, scope: !14836)
!14846 = !DILocation(line: 472, column: 3, scope: !14836)
!14847 = !DILocation(line: 472, column: 37, scope: !14836)
!14848 = !DILocation(line: 472, column: 24, scope: !14836)
!14849 = !DILocation(line: 472, column: 43, scope: !14836)
!14850 = !DILocation(line: 472, column: 7, scope: !14836)
!14851 = !DILocation(line: 473, column: 3, scope: !14836)
!14852 = !DILocation(line: 473, column: 7, scope: !14836)
!14853 = !DILocation(line: 473, column: 6, scope: !14836)
!14854 = !DILocation(line: 479, column: 2, scope: !14836)
!14855 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2464, file: !2464, line: 482, type: !14856, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14858)
!14856 = !DISubroutineType(types: !14857)
!14857 = !{!14711, !14711}
!14858 = !{!14859, !14860}
!14859 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14855, file: !2464, line: 482, type: !14711)
!14860 = !DILocalVariable(name: "curr", scope: !14855, file: !2464, line: 484, type: !2359)
!14861 = !DILocation(line: 0, scope: !14855)
!14862 = !DILocation(line: 484, column: 26, scope: !14855)
!14863 = !DILocation(line: 493, column: 7, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14855, file: !2464, line: 493, column: 6)
!14865 = !DILocation(line: 493, column: 6, scope: !14855)
!14866 = !DILocation(line: 494, column: 3, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14864, file: !2464, line: 493, column: 49)
!14868 = !DILocation(line: 495, column: 2, scope: !14867)
!14869 = !DILocation(line: 496, column: 2, scope: !14855)
!14870 = !DILocation(line: 499, column: 1, scope: !14855)
!14871 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13727, file: !13727, line: 106, type: !14837, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14872)
!14872 = !{!14873, !14874}
!14873 = !DILocalVariable(name: "thread", arg: 1, scope: !14871, file: !13727, line: 106, type: !2359)
!14874 = !DILocalVariable(name: "state", scope: !14871, file: !13727, line: 108, type: !154)
!14875 = !DILocation(line: 0, scope: !14871)
!14876 = !DILocation(line: 108, column: 31, scope: !14871)
!14877 = !DILocation(line: 110, column: 16, scope: !14871)
!14878 = !DILocation(line: 111, column: 41, scope: !14871)
!14879 = !DILocation(line: 110, column: 2, scope: !14871)
!14880 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2464, file: !2464, line: 393, type: !14677, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14881)
!14881 = !{!14882}
!14882 = !DILocalVariable(name: "thread", arg: 1, scope: !14880, file: !2464, line: 393, type: !2359)
!14883 = !DILocation(line: 0, scope: !14880)
!14884 = !DILocation(line: 395, column: 6, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14880, file: !2464, line: 395, column: 6)
!14886 = !DILocation(line: 395, column: 6, scope: !14880)
!14887 = !DILocalVariable(name: "thread", arg: 1, scope: !14888, file: !2464, line: 264, type: !2359)
!14888 = distinct !DISubprogram(name: "dequeue_thread", scope: !2464, file: !2464, line: 264, type: !14677, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14889)
!14889 = !{!14887}
!14890 = !DILocation(line: 0, scope: !14888, inlinedAt: !14891)
!14891 = distinct !DILocation(line: 396, column: 3, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14885, file: !2464, line: 395, column: 34)
!14893 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !14891)
!14894 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !14891)
!14895 = !DILocalVariable(name: "thread", arg: 1, scope: !14896, file: !2464, line: 232, type: !2359)
!14896 = distinct !DISubprogram(name: "runq_remove", scope: !2464, file: !2464, line: 232, type: !14677, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14897)
!14897 = !{!14895}
!14898 = !DILocation(line: 0, scope: !14896, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !14891)
!14900 = distinct !DILexicalBlock(scope: !14901, file: !2464, line: 267, column: 35)
!14901 = distinct !DILexicalBlock(scope: !14888, file: !2464, line: 267, column: 6)
!14902 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !14899)
!14903 = !DILocation(line: 397, column: 2, scope: !14892)
!14904 = !DILocalVariable(name: "thread", arg: 1, scope: !14905, file: !2464, line: 250, type: !2359)
!14905 = distinct !DISubprogram(name: "queue_thread", scope: !2464, file: !2464, line: 250, type: !14677, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14906)
!14906 = !{!14904}
!14907 = !DILocation(line: 0, scope: !14905, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 398, column: 2, scope: !14880)
!14909 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !14908)
!14910 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !14908)
!14911 = !DILocalVariable(name: "thread", arg: 1, scope: !14912, file: !2464, line: 227, type: !2359)
!14912 = distinct !DISubprogram(name: "runq_add", scope: !2464, file: !2464, line: 227, type: !14677, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14913)
!14913 = !{!14911}
!14914 = !DILocation(line: 0, scope: !14912, inlinedAt: !14915)
!14915 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !14908)
!14916 = distinct !DILexicalBlock(scope: !14917, file: !2464, line: 253, column: 35)
!14917 = distinct !DILexicalBlock(scope: !14905, file: !2464, line: 253, column: 6)
!14918 = !DILocalVariable(name: "pq", arg: 1, scope: !14919, file: !2464, line: 181, type: !14922)
!14919 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2464, file: !2464, line: 181, type: !14920, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14923)
!14920 = !DISubroutineType(types: !14921)
!14921 = !{null, !14922, !2359}
!14922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!14923 = !{!14918, !14924, !14925}
!14924 = !DILocalVariable(name: "thread", arg: 2, scope: !14919, file: !2464, line: 182, type: !2359)
!14925 = !DILocalVariable(name: "t", scope: !14919, file: !2464, line: 184, type: !2359)
!14926 = !DILocation(line: 0, scope: !14919, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !14915)
!14928 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !14927)
!14929 = distinct !DILexicalBlock(scope: !14919, file: !2464, line: 188, column: 2)
!14930 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !14927)
!14931 = distinct !DILexicalBlock(scope: !14929, file: !2464, line: 188, column: 2)
!14932 = !DILocation(line: 0, scope: !14929, inlinedAt: !14927)
!14933 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !14927)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !2464, line: 189, column: 7)
!14935 = distinct !DILexicalBlock(scope: !14931, file: !2464, line: 188, column: 56)
!14936 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !14927)
!14937 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !14927)
!14938 = !DILocation(line: 191, column: 21, scope: !14939, inlinedAt: !14927)
!14939 = distinct !DILexicalBlock(scope: !14934, file: !2464, line: 189, column: 40)
!14940 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !14927)
!14941 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !14927)
!14942 = distinct !{!14942, !14928, !14943}
!14943 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !14927)
!14944 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !14927)
!14945 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !14927)
!14946 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !14927)
!14947 = !DILocation(line: 399, column: 25, scope: !14880)
!14948 = !DILocation(line: 399, column: 22, scope: !14880)
!14949 = !DILocation(line: 399, column: 2, scope: !14880)
!14950 = !DILocation(line: 400, column: 1, scope: !14880)
!14951 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13727, file: !13727, line: 136, type: !14837, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14952)
!14952 = !{!14953}
!14953 = !DILocalVariable(name: "thread", arg: 1, scope: !14951, file: !13727, line: 136, type: !2359)
!14954 = !DILocation(line: 0, scope: !14951)
!14955 = !DILocation(line: 138, column: 9, scope: !14951)
!14956 = !DILocation(line: 138, column: 2, scope: !14951)
!14957 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2464, file: !2464, line: 1137, type: !14920, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14958)
!14958 = !{!14959, !14960}
!14959 = !DILocalVariable(name: "pq", arg: 1, scope: !14957, file: !2464, line: 1137, type: !14922)
!14960 = !DILocalVariable(name: "thread", arg: 2, scope: !14957, file: !2464, line: 1137, type: !2359)
!14961 = !DILocation(line: 0, scope: !14957)
!14962 = !DILocation(line: 1141, column: 33, scope: !14957)
!14963 = !DILocation(line: 1141, column: 2, scope: !14957)
!14964 = !DILocation(line: 1142, column: 1, scope: !14957)
!14965 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !309, file: !309, line: 294, type: !14966, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14968)
!14966 = !DISubroutineType(types: !14967)
!14967 = !{!2460, !14922}
!14968 = !{!14969}
!14969 = !DILocalVariable(name: "list", arg: 1, scope: !14965, file: !309, line: 294, type: !14922)
!14970 = !DILocation(line: 0, scope: !14965)
!14971 = !DILocation(line: 296, column: 9, scope: !14965)
!14972 = !DILocation(line: 296, column: 49, scope: !14965)
!14973 = !DILocation(line: 296, column: 2, scope: !14965)
!14974 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !309, file: !309, line: 443, type: !14975, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14977)
!14975 = !DISubroutineType(types: !14976)
!14976 = !{null, !2460, !2460}
!14977 = !{!14978, !14979, !14980}
!14978 = !DILocalVariable(name: "successor", arg: 1, scope: !14974, file: !309, line: 443, type: !2460)
!14979 = !DILocalVariable(name: "node", arg: 2, scope: !14974, file: !309, line: 443, type: !2460)
!14980 = !DILocalVariable(name: "prev", scope: !14974, file: !309, line: 445, type: !14981)
!14981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!14982 = !DILocation(line: 0, scope: !14974)
!14983 = !DILocation(line: 445, column: 39, scope: !14974)
!14984 = !DILocation(line: 447, column: 8, scope: !14974)
!14985 = !DILocation(line: 447, column: 13, scope: !14974)
!14986 = !DILocation(line: 448, column: 8, scope: !14974)
!14987 = !DILocation(line: 448, column: 13, scope: !14974)
!14988 = !DILocation(line: 449, column: 8, scope: !14974)
!14989 = !DILocation(line: 449, column: 13, scope: !14974)
!14990 = !DILocation(line: 450, column: 18, scope: !14974)
!14991 = !DILocation(line: 451, column: 1, scope: !14974)
!14992 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !309, file: !309, line: 341, type: !14993, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !14995)
!14993 = !DISubroutineType(types: !14994)
!14994 = !{!2460, !14922, !2460}
!14995 = !{!14996, !14997}
!14996 = !DILocalVariable(name: "list", arg: 1, scope: !14992, file: !309, line: 341, type: !14922)
!14997 = !DILocalVariable(name: "node", arg: 2, scope: !14992, file: !309, line: 342, type: !2460)
!14998 = !DILocation(line: 0, scope: !14992)
!14999 = !DILocation(line: 344, column: 15, scope: !14992)
!15000 = !DILocation(line: 344, column: 9, scope: !14992)
!15001 = !DILocation(line: 344, column: 26, scope: !14992)
!15002 = !DILocation(line: 344, column: 2, scope: !14992)
!15003 = distinct !DISubprogram(name: "sys_dlist_append", scope: !309, file: !309, line: 404, type: !15004, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15006)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{null, !14922, !2460}
!15006 = !{!15007, !15008, !15009}
!15007 = !DILocalVariable(name: "list", arg: 1, scope: !15003, file: !309, line: 404, type: !14922)
!15008 = !DILocalVariable(name: "node", arg: 2, scope: !15003, file: !309, line: 404, type: !2460)
!15009 = !DILocalVariable(name: "tail", scope: !15003, file: !309, line: 406, type: !14981)
!15010 = !DILocation(line: 0, scope: !15003)
!15011 = !DILocation(line: 406, column: 34, scope: !15003)
!15012 = !DILocation(line: 408, column: 8, scope: !15003)
!15013 = !DILocation(line: 408, column: 13, scope: !15003)
!15014 = !DILocation(line: 409, column: 8, scope: !15003)
!15015 = !DILocation(line: 409, column: 13, scope: !15003)
!15016 = !DILocation(line: 411, column: 8, scope: !15003)
!15017 = !DILocation(line: 411, column: 13, scope: !15003)
!15018 = !DILocation(line: 412, column: 13, scope: !15003)
!15019 = !DILocation(line: 413, column: 1, scope: !15003)
!15020 = distinct !DISubprogram(name: "update_cache", scope: !2464, file: !2464, line: 559, type: !8467, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15021)
!15021 = !{!15022, !15023}
!15022 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15020, file: !2464, line: 559, type: !103)
!15023 = !DILocalVariable(name: "thread", scope: !15020, file: !2464, line: 562, type: !2359)
!15024 = !DILocation(line: 0, scope: !15020)
!15025 = !DILocation(line: 239, column: 9, scope: !15026, inlinedAt: !15029)
!15026 = distinct !DISubprogram(name: "runq_best", scope: !2464, file: !2464, line: 237, type: !15027, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{!2359}
!15029 = distinct !DILocation(line: 314, column: 28, scope: !15030, inlinedAt: !15033)
!15030 = distinct !DISubprogram(name: "next_up", scope: !2464, file: !2464, line: 312, type: !15027, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15031)
!15031 = !{!15032}
!15032 = !DILocalVariable(name: "thread", scope: !15030, file: !2464, line: 314, type: !2359)
!15033 = distinct !DILocation(line: 562, column: 28, scope: !15020)
!15034 = !DILocation(line: 0, scope: !15030, inlinedAt: !15033)
!15035 = !DILocation(line: 340, column: 17, scope: !15030, inlinedAt: !15033)
!15036 = !DILocation(line: 340, column: 9, scope: !15030, inlinedAt: !15033)
!15037 = !DILocalVariable(name: "thread", arg: 1, scope: !15038, file: !2464, line: 127, type: !2359)
!15038 = distinct !DISubprogram(name: "should_preempt", scope: !2464, file: !2464, line: 127, type: !15039, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15041)
!15039 = !DISubroutineType(types: !15040)
!15040 = !{!157, !2359, !103}
!15041 = !{!15037, !15042}
!15042 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15038, file: !2464, line: 128, type: !103)
!15043 = !DILocation(line: 0, scope: !15038, inlinedAt: !15044)
!15044 = distinct !DILocation(line: 564, column: 6, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15020, file: !2464, line: 564, column: 6)
!15046 = !DILocation(line: 133, column: 17, scope: !15047, inlinedAt: !15044)
!15047 = distinct !DILexicalBlock(scope: !15038, file: !2464, line: 133, column: 6)
!15048 = !DILocation(line: 0, scope: !15045)
!15049 = !DILocation(line: 133, column: 6, scope: !15038, inlinedAt: !15044)
!15050 = !DILocation(line: 140, column: 6, scope: !15051, inlinedAt: !15044)
!15051 = distinct !DILexicalBlock(scope: !15038, file: !2464, line: 140, column: 6)
!15052 = !DILocation(line: 140, column: 6, scope: !15038, inlinedAt: !15044)
!15053 = !DILocation(line: 150, column: 9, scope: !15054, inlinedAt: !15044)
!15054 = distinct !DILexicalBlock(scope: !15038, file: !2464, line: 149, column: 6)
!15055 = !DILocation(line: 149, column: 6, scope: !15038, inlinedAt: !15044)
!15056 = !DILocation(line: 157, column: 6, scope: !15057, inlinedAt: !15044)
!15057 = distinct !DILexicalBlock(scope: !15038, file: !2464, line: 157, column: 6)
!15058 = !DILocation(line: 564, column: 6, scope: !15020)
!15059 = !DILocation(line: 566, column: 14, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15061, file: !2464, line: 566, column: 7)
!15061 = distinct !DILexicalBlock(scope: !15045, file: !2464, line: 564, column: 42)
!15062 = !DILocation(line: 566, column: 7, scope: !15061)
!15063 = !DILocation(line: 567, column: 4, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15060, file: !2464, line: 566, column: 27)
!15065 = !DILocation(line: 568, column: 3, scope: !15064)
!15066 = !DILocation(line: 585, column: 1, scope: !15020)
!15067 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2464, file: !2464, line: 1144, type: !15068, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15070)
!15068 = !DISubroutineType(types: !15069)
!15069 = !{!2359, !14922}
!15070 = !{!15071, !15072, !15073}
!15071 = !DILocalVariable(name: "pq", arg: 1, scope: !15067, file: !2464, line: 1144, type: !14922)
!15072 = !DILocalVariable(name: "thread", scope: !15067, file: !2464, line: 1146, type: !2359)
!15073 = !DILocalVariable(name: "n", scope: !15067, file: !2464, line: 1147, type: !2460)
!15074 = !DILocation(line: 0, scope: !15067)
!15075 = !DILocation(line: 1147, column: 19, scope: !15067)
!15076 = !DILocation(line: 1152, column: 2, scope: !15067)
!15077 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13727, file: !13727, line: 115, type: !14837, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15078)
!15078 = !{!15079}
!15079 = !DILocalVariable(name: "thread", arg: 1, scope: !15077, file: !13727, line: 115, type: !2359)
!15080 = !DILocation(line: 0, scope: !15077)
!15081 = !DILocation(line: 117, column: 46, scope: !15077)
!15082 = !DILocation(line: 117, column: 10, scope: !15077)
!15083 = !DILocation(line: 117, column: 9, scope: !15077)
!15084 = !DILocation(line: 117, column: 2, scope: !15077)
!15085 = distinct !DISubprogram(name: "is_preempt", scope: !2464, file: !2464, line: 62, type: !14695, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15086)
!15086 = !{!15087}
!15087 = !DILocalVariable(name: "thread", arg: 1, scope: !15085, file: !2464, line: 62, type: !2359)
!15088 = !DILocation(line: 0, scope: !15085)
!15089 = !DILocation(line: 65, column: 22, scope: !15085)
!15090 = !DILocation(line: 65, column: 30, scope: !15085)
!15091 = !DILocation(line: 65, column: 2, scope: !15085)
!15092 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14121, file: !14121, line: 35, type: !15093, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15097)
!15093 = !DISubroutineType(types: !15094)
!15094 = !{!157, !15095}
!15095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15096, size: 32)
!15096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2410)
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "to", arg: 1, scope: !15092, file: !14121, line: 35, type: !15095)
!15099 = !DILocation(line: 0, scope: !15092)
!15100 = !DILocation(line: 37, column: 35, scope: !15092)
!15101 = !DILocation(line: 37, column: 10, scope: !15092)
!15102 = !DILocation(line: 37, column: 9, scope: !15092)
!15103 = !DILocation(line: 37, column: 2, scope: !15092)
!15104 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !309, file: !309, line: 225, type: !15105, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15109)
!15105 = !DISubroutineType(types: !15106)
!15106 = !{!157, !15107}
!15107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15108, size: 32)
!15108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2369)
!15109 = !{!15110}
!15110 = !DILocalVariable(name: "node", arg: 1, scope: !15104, file: !309, line: 225, type: !15107)
!15111 = !DILocation(line: 0, scope: !15104)
!15112 = !DILocation(line: 227, column: 15, scope: !15104)
!15113 = !DILocation(line: 227, column: 20, scope: !15104)
!15114 = !DILocation(line: 227, column: 2, scope: !15104)
!15115 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !309, file: !309, line: 325, type: !14993, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15116)
!15116 = !{!15117, !15118}
!15117 = !DILocalVariable(name: "list", arg: 1, scope: !15115, file: !309, line: 325, type: !14922)
!15118 = !DILocalVariable(name: "node", arg: 2, scope: !15115, file: !309, line: 326, type: !2460)
!15119 = !DILocation(line: 0, scope: !15115)
!15120 = !DILocation(line: 328, column: 24, scope: !15115)
!15121 = !DILocation(line: 328, column: 15, scope: !15115)
!15122 = !DILocation(line: 328, column: 9, scope: !15115)
!15123 = !DILocation(line: 328, column: 45, scope: !15115)
!15124 = !DILocation(line: 328, column: 2, scope: !15115)
!15125 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !309, file: !309, line: 266, type: !15126, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15128)
!15126 = !DISubroutineType(types: !15127)
!15127 = !{!157, !14922}
!15128 = !{!15129}
!15129 = !DILocalVariable(name: "list", arg: 1, scope: !15125, file: !309, line: 266, type: !14922)
!15130 = !DILocation(line: 0, scope: !15125)
!15131 = !DILocation(line: 268, column: 15, scope: !15125)
!15132 = !DILocation(line: 268, column: 20, scope: !15125)
!15133 = !DILocation(line: 268, column: 2, scope: !15125)
!15134 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !309, file: !309, line: 496, type: !15135, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15137)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{null, !2460}
!15137 = !{!15138, !15139, !15140}
!15138 = !DILocalVariable(name: "node", arg: 1, scope: !15134, file: !309, line: 496, type: !2460)
!15139 = !DILocalVariable(name: "prev", scope: !15134, file: !309, line: 498, type: !14981)
!15140 = !DILocalVariable(name: "next", scope: !15134, file: !309, line: 499, type: !14981)
!15141 = !DILocation(line: 0, scope: !15134)
!15142 = !DILocation(line: 498, column: 34, scope: !15134)
!15143 = !DILocation(line: 499, column: 34, scope: !15134)
!15144 = !DILocation(line: 501, column: 8, scope: !15134)
!15145 = !DILocation(line: 501, column: 13, scope: !15134)
!15146 = !DILocation(line: 502, column: 8, scope: !15134)
!15147 = !DILocation(line: 502, column: 13, scope: !15134)
!15148 = !DILocation(line: 503, column: 2, scope: !15134)
!15149 = !DILocation(line: 504, column: 1, scope: !15134)
!15150 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !15135, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15151)
!15151 = !{!15152}
!15152 = !DILocalVariable(name: "node", arg: 1, scope: !15150, file: !309, line: 211, type: !2460)
!15153 = !DILocation(line: 0, scope: !15150)
!15154 = !DILocation(line: 213, column: 8, scope: !15150)
!15155 = !DILocation(line: 213, column: 13, scope: !15150)
!15156 = !DILocation(line: 214, column: 8, scope: !15150)
!15157 = !DILocation(line: 214, column: 13, scope: !15150)
!15158 = !DILocation(line: 215, column: 1, scope: !15150)
!15159 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13727, file: !13727, line: 131, type: !15160, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15162)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{!157, !2359, !121}
!15162 = !{!15163, !15164}
!15163 = !DILocalVariable(name: "thread", arg: 1, scope: !15159, file: !13727, line: 131, type: !2359)
!15164 = !DILocalVariable(name: "state", arg: 2, scope: !15159, file: !13727, line: 131, type: !121)
!15165 = !DILocation(line: 0, scope: !15159)
!15166 = !DILocation(line: 133, column: 23, scope: !15159)
!15167 = !DILocation(line: 133, column: 45, scope: !15159)
!15168 = !DILocation(line: 133, column: 2, scope: !15159)
!15169 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13727, file: !13727, line: 211, type: !15170, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15172)
!15170 = !DISubroutineType(types: !15171)
!15171 = !{!157, !103, !103}
!15172 = !{!15173, !15174}
!15173 = !DILocalVariable(name: "prio", arg: 1, scope: !15169, file: !13727, line: 211, type: !103)
!15174 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15169, file: !13727, line: 211, type: !103)
!15175 = !DILocation(line: 0, scope: !15169)
!15176 = !DILocation(line: 213, column: 9, scope: !15169)
!15177 = !DILocation(line: 213, column: 2, scope: !15169)
!15178 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13727, file: !13727, line: 83, type: !14837, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15179)
!15179 = !{!15180}
!15180 = !DILocalVariable(name: "thread", arg: 1, scope: !15178, file: !13727, line: 83, type: !2359)
!15181 = !DILocation(line: 0, scope: !15178)
!15182 = !DILocation(line: 89, column: 16, scope: !15178)
!15183 = !DILocation(line: 89, column: 2, scope: !15178)
!15184 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13727, file: !13727, line: 206, type: !15170, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15185)
!15185 = !{!15186, !15187}
!15186 = !DILocalVariable(name: "prio1", arg: 1, scope: !15184, file: !13727, line: 206, type: !103)
!15187 = !DILocalVariable(name: "prio2", arg: 2, scope: !15184, file: !13727, line: 206, type: !103)
!15188 = !DILocation(line: 0, scope: !15184)
!15189 = !DILocation(line: 208, column: 15, scope: !15184)
!15190 = !DILocation(line: 208, column: 2, scope: !15184)
!15191 = distinct !DISubprogram(name: "z_ready_thread", scope: !2464, file: !2464, line: 635, type: !14677, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15192)
!15192 = !{!15193, !15194, !15196}
!15193 = !DILocalVariable(name: "thread", arg: 1, scope: !15191, file: !2464, line: 635, type: !2359)
!15194 = !DILocalVariable(name: "__i", scope: !15195, file: !2464, line: 637, type: !14711)
!15195 = distinct !DILexicalBlock(scope: !15191, file: !2464, line: 637, column: 2)
!15196 = !DILocalVariable(name: "__key", scope: !15195, file: !2464, line: 637, type: !14711)
!15197 = !DILocation(line: 0, scope: !15191)
!15198 = !DILocation(line: 0, scope: !15195)
!15199 = !DILocation(line: 0, scope: !14719, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 637, column: 2, scope: !15195)
!15201 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15200)
!15203 = !DILocation(line: 0, scope: !14728, inlinedAt: !15202)
!15204 = !DILocation(line: 639, column: 4, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2464, line: 638, column: 41)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !2464, line: 638, column: 7)
!15207 = distinct !DILexicalBlock(scope: !15208, file: !2464, line: 637, column: 26)
!15208 = distinct !DILexicalBlock(scope: !15195, file: !2464, line: 637, column: 2)
!15209 = !DILocation(line: 0, scope: !14746, inlinedAt: !15210)
!15210 = distinct !DILocation(line: 637, column: 2, scope: !15208)
!15211 = !DILocation(line: 0, scope: !14754, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15210)
!15213 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15212)
!15214 = !DILocation(line: 642, column: 1, scope: !15191)
!15215 = distinct !DISubprogram(name: "ready_thread", scope: !2464, file: !2464, line: 617, type: !14677, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15216)
!15216 = !{!15217}
!15217 = !DILocalVariable(name: "thread", arg: 1, scope: !15215, file: !2464, line: 617, type: !2359)
!15218 = !DILocation(line: 0, scope: !15215)
!15219 = !DILocation(line: 626, column: 7, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15215, file: !2464, line: 626, column: 6)
!15221 = !DILocation(line: 626, column: 34, scope: !15220)
!15222 = !DILocation(line: 626, column: 37, scope: !15220)
!15223 = !DILocation(line: 626, column: 6, scope: !15215)
!15224 = !DILocation(line: 0, scope: !14905, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 629, column: 3, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15220, file: !2464, line: 626, column: 64)
!15227 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !15225)
!15228 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !15225)
!15229 = !DILocation(line: 0, scope: !14912, inlinedAt: !15230)
!15230 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !15225)
!15231 = !DILocation(line: 0, scope: !14919, inlinedAt: !15232)
!15232 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !15230)
!15233 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !15232)
!15234 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !15232)
!15235 = !DILocation(line: 0, scope: !14929, inlinedAt: !15232)
!15236 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15232)
!15237 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !15232)
!15238 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !15232)
!15239 = !DILocation(line: 191, column: 21, scope: !14939, inlinedAt: !15232)
!15240 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !15232)
!15241 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !15232)
!15242 = distinct !{!15242, !15233, !15243}
!15243 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !15232)
!15244 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !15232)
!15245 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !15232)
!15246 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !15232)
!15247 = !DILocation(line: 630, column: 3, scope: !15226)
!15248 = !DILocation(line: 632, column: 2, scope: !15226)
!15249 = !DILocation(line: 633, column: 1, scope: !15215)
!15250 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13727, file: !13727, line: 120, type: !14837, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15251)
!15251 = !{!15252}
!15252 = !DILocalVariable(name: "thread", arg: 1, scope: !15250, file: !13727, line: 120, type: !2359)
!15253 = !DILocation(line: 0, scope: !15250)
!15254 = !DILocation(line: 122, column: 12, scope: !15250)
!15255 = !DILocation(line: 122, column: 62, scope: !15250)
!15256 = !DILocation(line: 123, column: 4, scope: !15250)
!15257 = !DILocation(line: 122, column: 2, scope: !15250)
!15258 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2464, file: !2464, line: 644, type: !14677, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15259)
!15259 = !{!15260, !15261, !15263}
!15260 = !DILocalVariable(name: "thread", arg: 1, scope: !15258, file: !2464, line: 644, type: !2359)
!15261 = !DILocalVariable(name: "__i", scope: !15262, file: !2464, line: 646, type: !14711)
!15262 = distinct !DILexicalBlock(scope: !15258, file: !2464, line: 646, column: 2)
!15263 = !DILocalVariable(name: "__key", scope: !15262, file: !2464, line: 646, type: !14711)
!15264 = !DILocation(line: 0, scope: !15258)
!15265 = !DILocation(line: 0, scope: !15262)
!15266 = !DILocation(line: 0, scope: !14719, inlinedAt: !15267)
!15267 = distinct !DILocation(line: 646, column: 2, scope: !15262)
!15268 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15267)
!15270 = !DILocation(line: 0, scope: !14728, inlinedAt: !15269)
!15271 = !DILocation(line: 647, column: 3, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15273, file: !2464, line: 646, column: 26)
!15273 = distinct !DILexicalBlock(scope: !15262, file: !2464, line: 646, column: 2)
!15274 = !DILocation(line: 0, scope: !14746, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 646, column: 2, scope: !15273)
!15276 = !DILocation(line: 0, scope: !14754, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15275)
!15278 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15277)
!15279 = !DILocation(line: 649, column: 1, scope: !15258)
!15280 = distinct !DISubprogram(name: "z_sched_start", scope: !2464, file: !2464, line: 651, type: !14677, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15281)
!15281 = !{!15282, !15283}
!15282 = !DILocalVariable(name: "thread", arg: 1, scope: !15280, file: !2464, line: 651, type: !2359)
!15283 = !DILocalVariable(name: "key", scope: !15280, file: !2464, line: 653, type: !14711)
!15284 = !DILocation(line: 0, scope: !15280)
!15285 = !DILocation(line: 0, scope: !14719, inlinedAt: !15286)
!15286 = distinct !DILocation(line: 653, column: 25, scope: !15280)
!15287 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15288)
!15288 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15286)
!15289 = !DILocation(line: 0, scope: !14728, inlinedAt: !15288)
!15290 = !DILocation(line: 655, column: 6, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15280, file: !2464, line: 655, column: 6)
!15292 = !DILocation(line: 655, column: 6, scope: !15280)
!15293 = !DILocation(line: 0, scope: !14746, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 656, column: 3, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15291, file: !2464, line: 655, column: 36)
!15296 = !DILocation(line: 0, scope: !14754, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15294)
!15298 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15297)
!15299 = !DILocation(line: 657, column: 3, scope: !15295)
!15300 = !DILocation(line: 660, column: 2, scope: !15280)
!15301 = !DILocation(line: 661, column: 2, scope: !15280)
!15302 = !DILocation(line: 662, column: 2, scope: !15280)
!15303 = !DILocation(line: 663, column: 1, scope: !15280)
!15304 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13727, file: !13727, line: 126, type: !14837, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15305)
!15305 = !{!15306}
!15306 = !DILocalVariable(name: "thread", arg: 1, scope: !15304, file: !13727, line: 126, type: !2359)
!15307 = !DILocation(line: 0, scope: !15304)
!15308 = !DILocation(line: 128, column: 23, scope: !15304)
!15309 = !DILocation(line: 128, column: 36, scope: !15304)
!15310 = !DILocation(line: 128, column: 56, scope: !15304)
!15311 = !DILocation(line: 128, column: 2, scope: !15304)
!15312 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13727, file: !13727, line: 155, type: !14677, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15313)
!15313 = !{!15314}
!15314 = !DILocalVariable(name: "thread", arg: 1, scope: !15312, file: !13727, line: 155, type: !2359)
!15315 = !DILocation(line: 0, scope: !15312)
!15316 = !DILocation(line: 157, column: 15, scope: !15312)
!15317 = !DILocation(line: 157, column: 28, scope: !15312)
!15318 = !DILocation(line: 158, column: 1, scope: !15312)
!15319 = distinct !DISubprogram(name: "z_reschedule", scope: !2464, file: !2464, line: 967, type: !14747, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15320)
!15320 = !{!15321, !15322}
!15321 = !DILocalVariable(name: "lock", arg: 1, scope: !15319, file: !2464, line: 967, type: !14722)
!15322 = !DILocalVariable(name: "key", arg: 2, scope: !15319, file: !2464, line: 967, type: !14711)
!15323 = !DILocation(line: 0, scope: !15319)
!15324 = !DILocation(line: 969, column: 6, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15319, file: !2464, line: 969, column: 6)
!15326 = !DILocation(line: 969, column: 23, scope: !15325)
!15327 = !DILocation(line: 969, column: 26, scope: !15325)
!15328 = !DILocation(line: 969, column: 6, scope: !15319)
!15329 = !DILocalVariable(name: "key", arg: 2, scope: !15330, file: !13831, line: 193, type: !14711)
!15330 = distinct !DISubprogram(name: "z_swap", scope: !13831, file: !13831, line: 193, type: !15331, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15333)
!15331 = !DISubroutineType(types: !15332)
!15332 = !{!103, !14722, !14711}
!15333 = !{!15334, !15329}
!15334 = !DILocalVariable(name: "lock", arg: 1, scope: !15330, file: !13831, line: 193, type: !14722)
!15335 = !DILocation(line: 0, scope: !15330, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 970, column: 3, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15325, file: !2464, line: 969, column: 39)
!15338 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !15336)
!15339 = !DILocation(line: 971, column: 2, scope: !15337)
!15340 = !DILocation(line: 0, scope: !14746, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 972, column: 3, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15325, file: !2464, line: 971, column: 9)
!15343 = !DILocation(line: 0, scope: !14754, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15341)
!15345 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15344)
!15346 = !DILocation(line: 975, column: 1, scope: !15319)
!15347 = distinct !DISubprogram(name: "resched", scope: !2464, file: !2464, line: 940, type: !15348, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15350)
!15348 = !DISubroutineType(types: !15349)
!15349 = !{!157, !121}
!15350 = !{!15351}
!15351 = !DILocalVariable(name: "key", arg: 1, scope: !15347, file: !2464, line: 940, type: !121)
!15352 = !DILocation(line: 0, scope: !15347)
!15353 = !DILocalVariable(name: "key", arg: 1, scope: !15354, file: !5805, line: 112, type: !32)
!15354 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5805, file: !5805, line: 112, type: !15355, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15357)
!15355 = !DISubroutineType(types: !15356)
!15356 = !{!157, !32}
!15357 = !{!15353}
!15358 = !DILocation(line: 0, scope: !15354, inlinedAt: !15359)
!15359 = distinct !DILocation(line: 946, column: 9, scope: !15347)
!15360 = !DILocation(line: 115, column: 13, scope: !15354, inlinedAt: !15359)
!15361 = !DILocation(line: 946, column: 32, scope: !15347)
!15362 = !DILocation(line: 1031, column: 3, scope: !15363, inlinedAt: !15366)
!15363 = distinct !DISubprogram(name: "__get_IPSR", scope: !6825, file: !6825, line: 1027, type: !6906, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15364)
!15364 = !{!15365}
!15365 = !DILocalVariable(name: "result", scope: !15363, file: !6825, line: 1029, type: !121)
!15366 = distinct !DILocation(line: 48, column: 10, scope: !15367, inlinedAt: !15368)
!15367 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7619, file: !7619, line: 46, type: !7620, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!15368 = distinct !DILocation(line: 946, column: 36, scope: !15347)
!15369 = !{i64 3538223}
!15370 = !DILocation(line: 0, scope: !15363, inlinedAt: !15366)
!15371 = !DILocation(line: 48, column: 9, scope: !15367, inlinedAt: !15368)
!15372 = !DILocation(line: 946, column: 2, scope: !15347)
!15373 = distinct !DISubprogram(name: "need_swap", scope: !2464, file: !2464, line: 953, type: !7620, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15374)
!15374 = !{!15375}
!15375 = !DILocalVariable(name: "new_thread", scope: !15373, file: !2464, line: 959, type: !2359)
!15376 = !DILocation(line: 962, column: 31, scope: !15373)
!15377 = !DILocation(line: 0, scope: !15373)
!15378 = !DILocation(line: 963, column: 23, scope: !15373)
!15379 = !DILocation(line: 963, column: 20, scope: !15373)
!15380 = !DILocation(line: 963, column: 2, scope: !15373)
!15381 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13831, file: !13831, line: 181, type: !6835, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15382)
!15382 = !{!15383, !15384}
!15383 = !DILocalVariable(name: "key", arg: 1, scope: !15381, file: !13831, line: 181, type: !32)
!15384 = !DILocalVariable(name: "ret", scope: !15381, file: !13831, line: 183, type: !103)
!15385 = !DILocation(line: 0, scope: !15381)
!15386 = !DILocation(line: 185, column: 8, scope: !15381)
!15387 = !DILocation(line: 186, column: 2, scope: !15381)
!15388 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2464, file: !2464, line: 665, type: !14677, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15389)
!15389 = !{!15390, !15391, !15393}
!15390 = !DILocalVariable(name: "thread", arg: 1, scope: !15388, file: !2464, line: 665, type: !2359)
!15391 = !DILocalVariable(name: "__i", scope: !15392, file: !2464, line: 671, type: !14711)
!15392 = distinct !DILexicalBlock(scope: !15388, file: !2464, line: 671, column: 2)
!15393 = !DILocalVariable(name: "__key", scope: !15392, file: !2464, line: 671, type: !14711)
!15394 = !DILocation(line: 0, scope: !15388)
!15395 = !DILocation(line: 669, column: 8, scope: !15388)
!15396 = !DILocation(line: 0, scope: !15392)
!15397 = !DILocation(line: 0, scope: !14719, inlinedAt: !15398)
!15398 = distinct !DILocation(line: 671, column: 2, scope: !15392)
!15399 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15400)
!15400 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15398)
!15401 = !DILocation(line: 0, scope: !14728, inlinedAt: !15400)
!15402 = !DILocation(line: 672, column: 7, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15404, file: !2464, line: 672, column: 7)
!15404 = distinct !DILexicalBlock(scope: !15405, file: !2464, line: 671, column: 26)
!15405 = distinct !DILexicalBlock(scope: !15392, file: !2464, line: 671, column: 2)
!15406 = !DILocation(line: 672, column: 7, scope: !15404)
!15407 = !DILocation(line: 0, scope: !14888, inlinedAt: !15408)
!15408 = distinct !DILocation(line: 673, column: 4, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15403, file: !2464, line: 672, column: 35)
!15410 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !15408)
!15411 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !15408)
!15412 = !DILocation(line: 0, scope: !14896, inlinedAt: !15413)
!15413 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !15408)
!15414 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !15413)
!15415 = !DILocation(line: 674, column: 3, scope: !15409)
!15416 = !DILocation(line: 675, column: 3, scope: !15404)
!15417 = !DILocation(line: 676, column: 26, scope: !15404)
!15418 = !DILocation(line: 676, column: 23, scope: !15404)
!15419 = !DILocation(line: 676, column: 3, scope: !15404)
!15420 = !DILocation(line: 0, scope: !14746, inlinedAt: !15421)
!15421 = distinct !DILocation(line: 671, column: 2, scope: !15405)
!15422 = !DILocation(line: 0, scope: !14754, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15421)
!15424 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15423)
!15425 = !DILocation(line: 679, column: 16, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15388, file: !2464, line: 679, column: 6)
!15427 = !DILocation(line: 679, column: 13, scope: !15426)
!15428 = !DILocation(line: 679, column: 6, scope: !15388)
!15429 = !DILocation(line: 680, column: 3, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15426, file: !2464, line: 679, column: 26)
!15431 = !DILocation(line: 681, column: 2, scope: !15430)
!15432 = !DILocation(line: 684, column: 1, scope: !15388)
!15433 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14121, file: !14121, line: 52, type: !14695, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15434)
!15434 = !{!15435}
!15435 = !DILocalVariable(name: "thread", arg: 1, scope: !15433, file: !14121, line: 52, type: !2359)
!15436 = !DILocation(line: 0, scope: !15433)
!15437 = !DILocation(line: 54, column: 39, scope: !15433)
!15438 = !DILocation(line: 54, column: 9, scope: !15433)
!15439 = !DILocation(line: 54, column: 2, scope: !15433)
!15440 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13727, file: !13727, line: 141, type: !14677, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15441)
!15441 = !{!15442}
!15442 = !DILocalVariable(name: "thread", arg: 1, scope: !15440, file: !13727, line: 141, type: !2359)
!15443 = !DILocation(line: 0, scope: !15440)
!15444 = !DILocation(line: 143, column: 15, scope: !15440)
!15445 = !DILocation(line: 143, column: 28, scope: !15440)
!15446 = !DILocation(line: 146, column: 1, scope: !15440)
!15447 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13727, file: !13727, line: 73, type: !3237, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!15448 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15449)
!15449 = distinct !DILocation(line: 75, column: 30, scope: !15447)
!15450 = !DILocation(line: 0, scope: !14728, inlinedAt: !15449)
!15451 = !DILocation(line: 75, column: 9, scope: !15447)
!15452 = !DILocation(line: 76, column: 1, scope: !15447)
!15453 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2464, file: !2464, line: 977, type: !6916, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15454)
!15454 = !{!15455}
!15455 = !DILocalVariable(name: "key", arg: 1, scope: !15453, file: !2464, line: 977, type: !121)
!15456 = !DILocation(line: 0, scope: !15453)
!15457 = !DILocation(line: 979, column: 6, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15453, file: !2464, line: 979, column: 6)
!15459 = !DILocation(line: 979, column: 6, scope: !15453)
!15460 = !DILocation(line: 980, column: 3, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15458, file: !2464, line: 979, column: 20)
!15462 = !DILocation(line: 981, column: 2, scope: !15461)
!15463 = !DILocation(line: 0, scope: !14754, inlinedAt: !15464)
!15464 = distinct !DILocation(line: 982, column: 3, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15458, file: !2464, line: 981, column: 9)
!15466 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15464)
!15467 = !DILocation(line: 985, column: 1, scope: !15453)
!15468 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2464, file: !2464, line: 695, type: !14677, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15469)
!15469 = !{!15470, !15471}
!15470 = !DILocalVariable(name: "thread", arg: 1, scope: !15468, file: !2464, line: 695, type: !2359)
!15471 = !DILocalVariable(name: "key", scope: !15468, file: !2464, line: 699, type: !14711)
!15472 = !DILocation(line: 0, scope: !15468)
!15473 = !DILocation(line: 0, scope: !14719, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 699, column: 25, scope: !15468)
!15475 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15474)
!15477 = !DILocation(line: 0, scope: !14728, inlinedAt: !15476)
!15478 = !DILocation(line: 702, column: 7, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15468, file: !2464, line: 702, column: 6)
!15480 = !DILocation(line: 702, column: 6, scope: !15468)
!15481 = !DILocation(line: 0, scope: !14746, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 703, column: 3, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15479, file: !2464, line: 702, column: 38)
!15484 = !DILocation(line: 0, scope: !14754, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15482)
!15486 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15485)
!15487 = !DILocation(line: 704, column: 3, scope: !15483)
!15488 = !DILocation(line: 707, column: 2, scope: !15468)
!15489 = !DILocation(line: 708, column: 2, scope: !15468)
!15490 = !DILocation(line: 710, column: 2, scope: !15468)
!15491 = !DILocation(line: 713, column: 1, scope: !15468)
!15492 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13727, file: !13727, line: 96, type: !14837, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15493)
!15493 = !{!15494}
!15494 = !DILocalVariable(name: "thread", arg: 1, scope: !15492, file: !13727, line: 96, type: !2359)
!15495 = !DILocation(line: 0, scope: !15492)
!15496 = !DILocation(line: 98, column: 23, scope: !15492)
!15497 = !DILocation(line: 98, column: 36, scope: !15492)
!15498 = !DILocation(line: 98, column: 57, scope: !15492)
!15499 = !DILocation(line: 98, column: 2, scope: !15492)
!15500 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13727, file: !13727, line: 148, type: !14677, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15501)
!15501 = !{!15502}
!15502 = !DILocalVariable(name: "thread", arg: 1, scope: !15500, file: !13727, line: 148, type: !2359)
!15503 = !DILocation(line: 0, scope: !15500)
!15504 = !DILocation(line: 150, column: 15, scope: !15500)
!15505 = !DILocation(line: 150, column: 28, scope: !15500)
!15506 = !DILocation(line: 153, column: 1, scope: !15500)
!15507 = distinct !DISubprogram(name: "z_pend_thread", scope: !2464, file: !2464, line: 770, type: !15508, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15514)
!15508 = !DISubroutineType(types: !15509)
!15509 = !{null, !2359, !2390, !15510}
!15510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1700, line: 67, baseType: !15511)
!15511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1700, line: 65, size: 64, elements: !15512)
!15512 = !{!15513}
!15513 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15511, file: !1700, line: 66, baseType: !1699, size: 64)
!15514 = !{!15515, !15516, !15517, !15518, !15520}
!15515 = !DILocalVariable(name: "thread", arg: 1, scope: !15507, file: !2464, line: 770, type: !2359)
!15516 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15507, file: !2464, line: 770, type: !2390)
!15517 = !DILocalVariable(name: "timeout", arg: 3, scope: !15507, file: !2464, line: 771, type: !15510)
!15518 = !DILocalVariable(name: "__i", scope: !15519, file: !2464, line: 774, type: !14711)
!15519 = distinct !DILexicalBlock(scope: !15507, file: !2464, line: 774, column: 2)
!15520 = !DILocalVariable(name: "__key", scope: !15519, file: !2464, line: 774, type: !14711)
!15521 = !DILocation(line: 0, scope: !15507)
!15522 = !DILocation(line: 0, scope: !15519)
!15523 = !DILocation(line: 0, scope: !14719, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 774, column: 2, scope: !15519)
!15525 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15524)
!15527 = !DILocation(line: 0, scope: !14728, inlinedAt: !15526)
!15528 = !DILocation(line: 775, column: 3, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !2464, line: 774, column: 26)
!15530 = distinct !DILexicalBlock(scope: !15519, file: !2464, line: 774, column: 2)
!15531 = !DILocation(line: 0, scope: !14746, inlinedAt: !15532)
!15532 = distinct !DILocation(line: 774, column: 2, scope: !15530)
!15533 = !DILocation(line: 0, scope: !14754, inlinedAt: !15534)
!15534 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15532)
!15535 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15534)
!15536 = !DILocation(line: 777, column: 1, scope: !15507)
!15537 = distinct !DISubprogram(name: "pend_locked", scope: !2464, file: !2464, line: 760, type: !15508, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15538)
!15538 = !{!15539, !15540, !15541}
!15539 = !DILocalVariable(name: "thread", arg: 1, scope: !15537, file: !2464, line: 760, type: !2359)
!15540 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15537, file: !2464, line: 760, type: !2390)
!15541 = !DILocalVariable(name: "timeout", arg: 3, scope: !15537, file: !2464, line: 761, type: !15510)
!15542 = !DILocation(line: 0, scope: !15537)
!15543 = !DILocation(line: 766, column: 2, scope: !15537)
!15544 = !DILocation(line: 767, column: 2, scope: !15537)
!15545 = !DILocation(line: 768, column: 1, scope: !15537)
!15546 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2464, file: !2464, line: 740, type: !15547, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15549)
!15547 = !DISubroutineType(types: !15548)
!15548 = !{null, !2359, !2390}
!15549 = !{!15550, !15551}
!15550 = !DILocalVariable(name: "thread", arg: 1, scope: !15546, file: !2464, line: 740, type: !2359)
!15551 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15546, file: !2464, line: 740, type: !2390)
!15552 = !DILocation(line: 0, scope: !15546)
!15553 = !DILocation(line: 742, column: 2, scope: !15546)
!15554 = !DILocation(line: 743, column: 2, scope: !15546)
!15555 = !DILocation(line: 747, column: 13, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15546, file: !2464, line: 747, column: 6)
!15557 = !DILocation(line: 747, column: 6, scope: !15546)
!15558 = !DILocation(line: 748, column: 16, scope: !15559)
!15559 = distinct !DILexicalBlock(scope: !15556, file: !2464, line: 747, column: 22)
!15560 = !DILocation(line: 748, column: 26, scope: !15559)
!15561 = !DILocation(line: 749, column: 28, scope: !15559)
!15562 = !DILocation(line: 0, scope: !14919, inlinedAt: !15563)
!15563 = distinct !DILocation(line: 749, column: 3, scope: !15559)
!15564 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !15563)
!15565 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !15563)
!15566 = !DILocation(line: 0, scope: !14929, inlinedAt: !15563)
!15567 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15563)
!15568 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !15563)
!15569 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !15563)
!15570 = !DILocation(line: 191, column: 21, scope: !14939, inlinedAt: !15563)
!15571 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !15563)
!15572 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !15563)
!15573 = distinct !{!15573, !15564, !15574}
!15574 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !15563)
!15575 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !15563)
!15576 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !15563)
!15577 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !15563)
!15578 = !DILocation(line: 751, column: 1, scope: !15546)
!15579 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2464, file: !2464, line: 753, type: !15580, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15582)
!15580 = !DISubroutineType(types: !15581)
!15581 = !{null, !2359, !15510}
!15582 = !{!15583, !15584}
!15583 = !DILocalVariable(name: "thread", arg: 1, scope: !15579, file: !2464, line: 753, type: !2359)
!15584 = !DILocalVariable(name: "timeout", arg: 2, scope: !15579, file: !2464, line: 753, type: !15510)
!15585 = !DILocation(line: 0, scope: !15579)
!15586 = !DILocation(line: 755, column: 7, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15579, file: !2464, line: 755, column: 6)
!15588 = !DILocation(line: 755, column: 6, scope: !15579)
!15589 = !DILocation(line: 756, column: 3, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15587, file: !2464, line: 755, column: 41)
!15591 = !DILocation(line: 757, column: 2, scope: !15590)
!15592 = !DILocation(line: 758, column: 1, scope: !15579)
!15593 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14121, file: !14121, line: 47, type: !15580, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15594)
!15594 = !{!15595, !15596}
!15595 = !DILocalVariable(name: "thread", arg: 1, scope: !15593, file: !14121, line: 47, type: !2359)
!15596 = !DILocalVariable(name: "ticks", arg: 2, scope: !15593, file: !14121, line: 47, type: !15510)
!15597 = !DILocation(line: 0, scope: !15593)
!15598 = !DILocation(line: 49, column: 30, scope: !15593)
!15599 = !DILocation(line: 49, column: 2, scope: !15593)
!15600 = !DILocation(line: 50, column: 1, scope: !15593)
!15601 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2464, file: !2464, line: 795, type: !2416, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15602)
!15602 = !{!15603, !15604, !15605, !15607, !15608}
!15603 = !DILocalVariable(name: "timeout", arg: 1, scope: !15601, file: !2464, line: 795, type: !2418)
!15604 = !DILocalVariable(name: "thread", scope: !15601, file: !2464, line: 797, type: !2359)
!15605 = !DILocalVariable(name: "__i", scope: !15606, file: !2464, line: 800, type: !14711)
!15606 = distinct !DILexicalBlock(scope: !15601, file: !2464, line: 800, column: 2)
!15607 = !DILocalVariable(name: "__key", scope: !15606, file: !2464, line: 800, type: !14711)
!15608 = !DILocalVariable(name: "killed", scope: !15609, file: !2464, line: 801, type: !157)
!15609 = distinct !DILexicalBlock(scope: !15610, file: !2464, line: 800, column: 26)
!15610 = distinct !DILexicalBlock(scope: !15606, file: !2464, line: 800, column: 2)
!15611 = !DILocation(line: 0, scope: !15601)
!15612 = !DILocation(line: 797, column: 28, scope: !15601)
!15613 = !DILocation(line: 0, scope: !15606)
!15614 = !DILocation(line: 0, scope: !14719, inlinedAt: !15615)
!15615 = distinct !DILocation(line: 800, column: 2, scope: !15606)
!15616 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15617)
!15617 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15615)
!15618 = !DILocation(line: 0, scope: !14728, inlinedAt: !15617)
!15619 = !DILocation(line: 801, column: 27, scope: !15609)
!15620 = !DILocation(line: 801, column: 32, scope: !15609)
!15621 = !DILocation(line: 801, column: 61, scope: !15609)
!15622 = !DILocation(line: 0, scope: !15609)
!15623 = !DILocation(line: 804, column: 7, scope: !15609)
!15624 = !DILocation(line: 805, column: 21, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15626, file: !2464, line: 805, column: 8)
!15626 = distinct !DILexicalBlock(scope: !15627, file: !2464, line: 804, column: 16)
!15627 = distinct !DILexicalBlock(scope: !15609, file: !2464, line: 804, column: 7)
!15628 = !DILocation(line: 805, column: 31, scope: !15625)
!15629 = !DILocation(line: 805, column: 8, scope: !15626)
!15630 = !DILocation(line: 806, column: 5, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15625, file: !2464, line: 805, column: 40)
!15632 = !DILocation(line: 807, column: 4, scope: !15631)
!15633 = !DILocation(line: 808, column: 4, scope: !15626)
!15634 = !DILocation(line: 809, column: 4, scope: !15626)
!15635 = !DILocation(line: 810, column: 4, scope: !15626)
!15636 = !DILocation(line: 811, column: 3, scope: !15626)
!15637 = !DILocation(line: 0, scope: !14746, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 800, column: 2, scope: !15610)
!15639 = !DILocation(line: 0, scope: !14754, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15638)
!15641 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15640)
!15642 = !DILocation(line: 813, column: 1, scope: !15601)
!15643 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2464, file: !2464, line: 779, type: !14677, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15644)
!15644 = !{!15645}
!15645 = !DILocalVariable(name: "thread", arg: 1, scope: !15643, file: !2464, line: 779, type: !2359)
!15646 = !DILocation(line: 0, scope: !15643)
!15647 = !DILocation(line: 781, column: 2, scope: !15643)
!15648 = !DILocation(line: 782, column: 2, scope: !15643)
!15649 = !DILocation(line: 783, column: 15, scope: !15643)
!15650 = !DILocation(line: 783, column: 25, scope: !15643)
!15651 = !DILocation(line: 784, column: 1, scope: !15643)
!15652 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13727, file: !13727, line: 165, type: !14677, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15653)
!15653 = !{!15654}
!15654 = !DILocalVariable(name: "thread", arg: 1, scope: !15652, file: !13727, line: 165, type: !2359)
!15655 = !DILocation(line: 0, scope: !15652)
!15656 = !DILocation(line: 167, column: 15, scope: !15652)
!15657 = !DILocation(line: 167, column: 28, scope: !15652)
!15658 = !DILocation(line: 168, column: 1, scope: !15652)
!15659 = distinct !DISubprogram(name: "unready_thread", scope: !2464, file: !2464, line: 731, type: !14677, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15660)
!15660 = !{!15661}
!15661 = !DILocalVariable(name: "thread", arg: 1, scope: !15659, file: !2464, line: 731, type: !2359)
!15662 = !DILocation(line: 0, scope: !15659)
!15663 = !DILocation(line: 733, column: 6, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15659, file: !2464, line: 733, column: 6)
!15665 = !DILocation(line: 733, column: 6, scope: !15659)
!15666 = !DILocation(line: 0, scope: !14888, inlinedAt: !15667)
!15667 = distinct !DILocation(line: 734, column: 3, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15664, file: !2464, line: 733, column: 34)
!15669 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !15667)
!15670 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !15667)
!15671 = !DILocation(line: 0, scope: !14896, inlinedAt: !15672)
!15672 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !15667)
!15673 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !15672)
!15674 = !DILocation(line: 735, column: 2, scope: !15668)
!15675 = !DILocation(line: 736, column: 25, scope: !15659)
!15676 = !DILocation(line: 736, column: 22, scope: !15659)
!15677 = !DILocation(line: 736, column: 2, scope: !15659)
!15678 = !DILocation(line: 737, column: 1, scope: !15659)
!15679 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13727, file: !13727, line: 160, type: !14677, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15680)
!15680 = !{!15681}
!15681 = !DILocalVariable(name: "thread", arg: 1, scope: !15679, file: !13727, line: 160, type: !2359)
!15682 = !DILocation(line: 0, scope: !15679)
!15683 = !DILocation(line: 162, column: 15, scope: !15679)
!15684 = !DILocation(line: 162, column: 28, scope: !15679)
!15685 = !DILocation(line: 163, column: 1, scope: !15679)
!15686 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2464, file: !2464, line: 786, type: !14677, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15687)
!15687 = !{!15688, !15689, !15691}
!15688 = !DILocalVariable(name: "thread", arg: 1, scope: !15686, file: !2464, line: 786, type: !2359)
!15689 = !DILocalVariable(name: "__i", scope: !15690, file: !2464, line: 788, type: !14711)
!15690 = distinct !DILexicalBlock(scope: !15686, file: !2464, line: 788, column: 2)
!15691 = !DILocalVariable(name: "__key", scope: !15690, file: !2464, line: 788, type: !14711)
!15692 = !DILocation(line: 0, scope: !15686)
!15693 = !DILocation(line: 0, scope: !15690)
!15694 = !DILocation(line: 0, scope: !14719, inlinedAt: !15695)
!15695 = distinct !DILocation(line: 788, column: 2, scope: !15690)
!15696 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15695)
!15698 = !DILocation(line: 0, scope: !14728, inlinedAt: !15697)
!15699 = !DILocation(line: 789, column: 3, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15701, file: !2464, line: 788, column: 26)
!15701 = distinct !DILexicalBlock(scope: !15690, file: !2464, line: 788, column: 2)
!15702 = !DILocation(line: 0, scope: !14746, inlinedAt: !15703)
!15703 = distinct !DILocation(line: 788, column: 2, scope: !15701)
!15704 = !DILocation(line: 0, scope: !14754, inlinedAt: !15705)
!15705 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15703)
!15706 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15705)
!15707 = !DILocation(line: 791, column: 1, scope: !15686)
!15708 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2464, file: !2464, line: 816, type: !15709, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15711)
!15709 = !DISubroutineType(types: !15710)
!15710 = !{!103, !121, !2390, !15510}
!15711 = !{!15712, !15713, !15714, !15715, !15716, !15718}
!15712 = !DILocalVariable(name: "key", arg: 1, scope: !15708, file: !2464, line: 816, type: !121)
!15713 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15708, file: !2464, line: 816, type: !2390)
!15714 = !DILocalVariable(name: "timeout", arg: 3, scope: !15708, file: !2464, line: 816, type: !15510)
!15715 = !DILocalVariable(name: "ret", scope: !15708, file: !2464, line: 828, type: !103)
!15716 = !DILocalVariable(name: "__i", scope: !15717, file: !2464, line: 829, type: !14711)
!15717 = distinct !DILexicalBlock(scope: !15708, file: !2464, line: 829, column: 2)
!15718 = !DILocalVariable(name: "__key", scope: !15717, file: !2464, line: 829, type: !14711)
!15719 = !DILocation(line: 0, scope: !15708)
!15720 = !DILocation(line: 823, column: 14, scope: !15708)
!15721 = !DILocation(line: 823, column: 2, scope: !15708)
!15722 = !DILocation(line: 826, column: 20, scope: !15708)
!15723 = !DILocation(line: 826, column: 18, scope: !15708)
!15724 = !DILocation(line: 828, column: 12, scope: !15708)
!15725 = !DILocation(line: 0, scope: !15717)
!15726 = !DILocation(line: 0, scope: !14719, inlinedAt: !15727)
!15727 = distinct !DILocation(line: 829, column: 2, scope: !15717)
!15728 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15729)
!15729 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15727)
!15730 = !DILocation(line: 0, scope: !14728, inlinedAt: !15729)
!15731 = !DILocation(line: 830, column: 7, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15733, file: !2464, line: 830, column: 7)
!15733 = distinct !DILexicalBlock(scope: !15734, file: !2464, line: 829, column: 26)
!15734 = distinct !DILexicalBlock(scope: !15717, file: !2464, line: 829, column: 2)
!15735 = !DILocation(line: 830, column: 26, scope: !15732)
!15736 = !DILocation(line: 830, column: 23, scope: !15732)
!15737 = !DILocation(line: 830, column: 7, scope: !15733)
!15738 = !DILocation(line: 831, column: 20, scope: !15739)
!15739 = distinct !DILexicalBlock(scope: !15732, file: !2464, line: 830, column: 36)
!15740 = !DILocation(line: 832, column: 3, scope: !15739)
!15741 = !DILocation(line: 0, scope: !14746, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 829, column: 2, scope: !15734)
!15743 = !DILocation(line: 0, scope: !14754, inlinedAt: !15744)
!15744 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15742)
!15745 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15744)
!15746 = !DILocation(line: 834, column: 2, scope: !15708)
!15747 = distinct !DISubprogram(name: "z_pend_curr", scope: !2464, file: !2464, line: 840, type: !15748, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15750)
!15748 = !DISubroutineType(types: !15749)
!15749 = !{!103, !14722, !14711, !2390, !15510}
!15750 = !{!15751, !15752, !15753, !15754}
!15751 = !DILocalVariable(name: "lock", arg: 1, scope: !15747, file: !2464, line: 840, type: !14722)
!15752 = !DILocalVariable(name: "key", arg: 2, scope: !15747, file: !2464, line: 840, type: !14711)
!15753 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15747, file: !2464, line: 841, type: !2390)
!15754 = !DILocalVariable(name: "timeout", arg: 4, scope: !15747, file: !2464, line: 841, type: !15510)
!15755 = !DILocation(line: 0, scope: !15747)
!15756 = !DILocation(line: 844, column: 20, scope: !15747)
!15757 = !DILocation(line: 844, column: 18, scope: !15747)
!15758 = !DILocation(line: 0, scope: !14719, inlinedAt: !15759)
!15759 = distinct !DILocation(line: 856, column: 9, scope: !15747)
!15760 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15761)
!15761 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15759)
!15762 = !DILocation(line: 0, scope: !14728, inlinedAt: !15761)
!15763 = !DILocation(line: 857, column: 14, scope: !15747)
!15764 = !DILocation(line: 857, column: 2, scope: !15747)
!15765 = !DILocation(line: 0, scope: !15330, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 859, column: 9, scope: !15747)
!15767 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !15766)
!15768 = !DILocation(line: 859, column: 2, scope: !15747)
!15769 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2464, file: !2464, line: 862, type: !15770, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15772)
!15770 = !DISubroutineType(types: !15771)
!15771 = !{!2359, !2390}
!15772 = !{!15773, !15774, !15775, !15777}
!15773 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15769, file: !2464, line: 862, type: !2390)
!15774 = !DILocalVariable(name: "thread", scope: !15769, file: !2464, line: 864, type: !2359)
!15775 = !DILocalVariable(name: "__i", scope: !15776, file: !2464, line: 866, type: !14711)
!15776 = distinct !DILexicalBlock(scope: !15769, file: !2464, line: 866, column: 2)
!15777 = !DILocalVariable(name: "__key", scope: !15776, file: !2464, line: 866, type: !14711)
!15778 = !DILocation(line: 0, scope: !15769)
!15779 = !DILocation(line: 0, scope: !15776)
!15780 = !DILocation(line: 0, scope: !14719, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 866, column: 2, scope: !15776)
!15782 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15783)
!15783 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15781)
!15784 = !DILocation(line: 0, scope: !14728, inlinedAt: !15783)
!15785 = !DILocation(line: 867, column: 12, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15787, file: !2464, line: 866, column: 26)
!15787 = distinct !DILexicalBlock(scope: !15776, file: !2464, line: 866, column: 2)
!15788 = !DILocation(line: 869, column: 14, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15786, file: !2464, line: 869, column: 7)
!15790 = !DILocation(line: 869, column: 7, scope: !15786)
!15791 = !DILocation(line: 870, column: 4, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15789, file: !2464, line: 869, column: 23)
!15793 = !DILocation(line: 871, column: 3, scope: !15792)
!15794 = !DILocation(line: 0, scope: !14746, inlinedAt: !15795)
!15795 = distinct !DILocation(line: 866, column: 2, scope: !15787)
!15796 = !DILocation(line: 0, scope: !14754, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15795)
!15798 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15797)
!15799 = !DILocation(line: 874, column: 2, scope: !15769)
!15800 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2464, file: !2464, line: 877, type: !15770, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15801)
!15801 = !{!15802, !15803, !15804, !15806}
!15802 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15800, file: !2464, line: 877, type: !2390)
!15803 = !DILocalVariable(name: "thread", scope: !15800, file: !2464, line: 879, type: !2359)
!15804 = !DILocalVariable(name: "__i", scope: !15805, file: !2464, line: 881, type: !14711)
!15805 = distinct !DILexicalBlock(scope: !15800, file: !2464, line: 881, column: 2)
!15806 = !DILocalVariable(name: "__key", scope: !15805, file: !2464, line: 881, type: !14711)
!15807 = !DILocation(line: 0, scope: !15800)
!15808 = !DILocation(line: 0, scope: !15805)
!15809 = !DILocation(line: 0, scope: !14719, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 881, column: 2, scope: !15805)
!15811 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15810)
!15813 = !DILocation(line: 0, scope: !14728, inlinedAt: !15812)
!15814 = !DILocation(line: 882, column: 12, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15816, file: !2464, line: 881, column: 26)
!15816 = distinct !DILexicalBlock(scope: !15805, file: !2464, line: 881, column: 2)
!15817 = !DILocation(line: 884, column: 14, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15815, file: !2464, line: 884, column: 7)
!15819 = !DILocation(line: 884, column: 7, scope: !15815)
!15820 = !DILocation(line: 885, column: 4, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15818, file: !2464, line: 884, column: 23)
!15822 = !DILocation(line: 886, column: 10, scope: !15821)
!15823 = !DILocation(line: 887, column: 3, scope: !15821)
!15824 = !DILocation(line: 0, scope: !14746, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 881, column: 2, scope: !15816)
!15826 = !DILocation(line: 0, scope: !14754, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15825)
!15828 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15827)
!15829 = !DILocation(line: 890, column: 2, scope: !15800)
!15830 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2464, file: !2464, line: 893, type: !14677, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15831)
!15831 = !{!15832}
!15832 = !DILocalVariable(name: "thread", arg: 1, scope: !15830, file: !2464, line: 893, type: !2359)
!15833 = !DILocation(line: 0, scope: !15830)
!15834 = !DILocation(line: 0, scope: !15686, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 895, column: 2, scope: !15830)
!15836 = !DILocation(line: 0, scope: !15690, inlinedAt: !15835)
!15837 = !DILocation(line: 0, scope: !14719, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 788, column: 2, scope: !15690, inlinedAt: !15835)
!15839 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15840)
!15840 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15838)
!15841 = !DILocation(line: 0, scope: !14728, inlinedAt: !15840)
!15842 = !DILocation(line: 789, column: 3, scope: !15700, inlinedAt: !15835)
!15843 = !DILocation(line: 0, scope: !14746, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 788, column: 2, scope: !15701, inlinedAt: !15835)
!15845 = !DILocation(line: 0, scope: !14754, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15844)
!15847 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15846)
!15848 = !DILocation(line: 896, column: 8, scope: !15830)
!15849 = !DILocation(line: 897, column: 1, scope: !15830)
!15850 = distinct !DISubprogram(name: "z_set_prio", scope: !2464, file: !2464, line: 902, type: !15039, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15851)
!15851 = !{!15852, !15853, !15854, !15855, !15857}
!15852 = !DILocalVariable(name: "thread", arg: 1, scope: !15850, file: !2464, line: 902, type: !2359)
!15853 = !DILocalVariable(name: "prio", arg: 2, scope: !15850, file: !2464, line: 902, type: !103)
!15854 = !DILocalVariable(name: "need_sched", scope: !15850, file: !2464, line: 904, type: !157)
!15855 = !DILocalVariable(name: "__i", scope: !15856, file: !2464, line: 906, type: !14711)
!15856 = distinct !DILexicalBlock(scope: !15850, file: !2464, line: 906, column: 2)
!15857 = !DILocalVariable(name: "__key", scope: !15856, file: !2464, line: 906, type: !14711)
!15858 = !DILocation(line: 0, scope: !15850)
!15859 = !DILocation(line: 0, scope: !15856)
!15860 = !DILocation(line: 0, scope: !14719, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 906, column: 2, scope: !15856)
!15862 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15861)
!15864 = !DILocation(line: 0, scope: !14728, inlinedAt: !15863)
!15865 = !DILocation(line: 907, column: 16, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15867, file: !2464, line: 906, column: 26)
!15867 = distinct !DILexicalBlock(scope: !15856, file: !2464, line: 906, column: 2)
!15868 = !DILocation(line: 909, column: 7, scope: !15866)
!15869 = !DILocation(line: 0, scope: !14888, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 912, column: 5, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15872, file: !2464, line: 911, column: 63)
!15872 = distinct !DILexicalBlock(scope: !15873, file: !2464, line: 911, column: 8)
!15873 = distinct !DILexicalBlock(scope: !15874, file: !2464, line: 909, column: 19)
!15874 = distinct !DILexicalBlock(scope: !15866, file: !2464, line: 909, column: 7)
!15875 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !15870)
!15876 = !DILocation(line: 0, scope: !14896, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !15870)
!15878 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !15877)
!15879 = !DILocation(line: 913, column: 23, scope: !15871)
!15880 = !DILocation(line: 0, scope: !14905, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 914, column: 5, scope: !15871)
!15882 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !15881)
!15883 = !DILocation(line: 0, scope: !14912, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !15881)
!15885 = !DILocation(line: 0, scope: !14919, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !15884)
!15887 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !15886)
!15888 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !15886)
!15889 = !DILocation(line: 0, scope: !14929, inlinedAt: !15886)
!15890 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15886)
!15891 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !15886)
!15892 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !15886)
!15893 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !15886)
!15894 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !15886)
!15895 = distinct !{!15895, !15887, !15896}
!15896 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !15886)
!15897 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !15886)
!15898 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !15886)
!15899 = !DILocation(line: 918, column: 4, scope: !15873)
!15900 = !DILocation(line: 919, column: 3, scope: !15873)
!15901 = !DILocation(line: 920, column: 22, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15874, file: !2464, line: 919, column: 10)
!15903 = !DILocation(line: 0, scope: !14746, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 906, column: 2, scope: !15867)
!15905 = !DILocation(line: 0, scope: !14754, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15904)
!15907 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15906)
!15908 = !DILocation(line: 926, column: 2, scope: !15850)
!15909 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2464, file: !2464, line: 929, type: !15910, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15912)
!15910 = !DISubroutineType(types: !15911)
!15911 = !{null, !2359, !103}
!15912 = !{!15913, !15914, !15915}
!15913 = !DILocalVariable(name: "thread", arg: 1, scope: !15909, file: !2464, line: 929, type: !2359)
!15914 = !DILocalVariable(name: "prio", arg: 2, scope: !15909, file: !2464, line: 929, type: !103)
!15915 = !DILocalVariable(name: "need_sched", scope: !15909, file: !2464, line: 931, type: !157)
!15916 = !DILocation(line: 0, scope: !15909)
!15917 = !DILocation(line: 931, column: 20, scope: !15909)
!15918 = !DILocation(line: 935, column: 17, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15909, file: !2464, line: 935, column: 6)
!15920 = !DILocation(line: 935, column: 20, scope: !15919)
!15921 = !DILocation(line: 935, column: 35, scope: !15919)
!15922 = !DILocation(line: 935, column: 48, scope: !15919)
!15923 = !DILocation(line: 935, column: 6, scope: !15909)
!15924 = !DILocation(line: 936, column: 3, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15919, file: !2464, line: 935, column: 55)
!15926 = !DILocation(line: 937, column: 2, scope: !15925)
!15927 = !DILocation(line: 938, column: 1, scope: !15909)
!15928 = distinct !DISubprogram(name: "k_sched_lock", scope: !2464, file: !2464, line: 987, type: !3237, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15929)
!15929 = !{!15930, !15932}
!15930 = !DILocalVariable(name: "__i", scope: !15931, file: !2464, line: 989, type: !14711)
!15931 = distinct !DILexicalBlock(scope: !15928, file: !2464, line: 989, column: 2)
!15932 = !DILocalVariable(name: "__key", scope: !15931, file: !2464, line: 989, type: !14711)
!15933 = !DILocation(line: 0, scope: !15931)
!15934 = !DILocation(line: 0, scope: !14719, inlinedAt: !15935)
!15935 = distinct !DILocation(line: 989, column: 2, scope: !15931)
!15936 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15937)
!15937 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15935)
!15938 = !DILocation(line: 0, scope: !14728, inlinedAt: !15937)
!15939 = !DILocation(line: 992, column: 3, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15941, file: !2464, line: 989, column: 26)
!15941 = distinct !DILexicalBlock(scope: !15931, file: !2464, line: 989, column: 2)
!15942 = !DILocation(line: 0, scope: !14746, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 989, column: 2, scope: !15941)
!15944 = !DILocation(line: 0, scope: !14754, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15943)
!15946 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15945)
!15947 = !DILocation(line: 994, column: 1, scope: !15928)
!15948 = distinct !DISubprogram(name: "z_sched_lock", scope: !13727, file: !13727, line: 251, type: !3237, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!15949 = !DILocation(line: 256, column: 4, scope: !15948)
!15950 = !DILocation(line: 256, column: 19, scope: !15948)
!15951 = !DILocation(line: 256, column: 2, scope: !15948)
!15952 = !DILocation(line: 258, column: 2, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15948, file: !13727, line: 258, column: 2)
!15954 = !{i64 2154866218}
!15955 = !DILocation(line: 259, column: 1, scope: !15948)
!15956 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2464, file: !2464, line: 996, type: !3237, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15957)
!15957 = !{!15958, !15960}
!15958 = !DILocalVariable(name: "__i", scope: !15959, file: !2464, line: 998, type: !14711)
!15959 = distinct !DILexicalBlock(scope: !15956, file: !2464, line: 998, column: 2)
!15960 = !DILocalVariable(name: "__key", scope: !15959, file: !2464, line: 998, type: !14711)
!15961 = !DILocation(line: 0, scope: !15959)
!15962 = !DILocation(line: 0, scope: !14719, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 998, column: 2, scope: !15959)
!15964 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !15963)
!15966 = !DILocation(line: 0, scope: !14728, inlinedAt: !15965)
!15967 = !DILocation(line: 1002, column: 5, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15969, file: !2464, line: 998, column: 26)
!15969 = distinct !DILexicalBlock(scope: !15959, file: !2464, line: 998, column: 2)
!15970 = !DILocation(line: 1002, column: 20, scope: !15968)
!15971 = !DILocation(line: 1002, column: 3, scope: !15968)
!15972 = !DILocation(line: 1003, column: 3, scope: !15968)
!15973 = !DILocation(line: 0, scope: !14746, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 998, column: 2, scope: !15969)
!15975 = !DILocation(line: 0, scope: !14754, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !15974)
!15977 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !15976)
!15978 = !DILocation(line: 1011, column: 2, scope: !15956)
!15979 = !DILocation(line: 1012, column: 1, scope: !15956)
!15980 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2464, file: !2464, line: 1014, type: !15027, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!15981 = !DILocation(line: 1028, column: 25, scope: !15980)
!15982 = !DILocation(line: 1028, column: 2, scope: !15980)
!15983 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2464, file: !2464, line: 1155, type: !15984, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15986)
!15984 = !DISubroutineType(types: !15985)
!15985 = !{!157, !2388, !2388}
!15986 = !{!15987, !15988, !15989, !15990, !15991}
!15987 = !DILocalVariable(name: "a", arg: 1, scope: !15983, file: !2464, line: 1155, type: !2388)
!15988 = !DILocalVariable(name: "b", arg: 2, scope: !15983, file: !2464, line: 1155, type: !2388)
!15989 = !DILocalVariable(name: "thread_a", scope: !15983, file: !2464, line: 1157, type: !2359)
!15990 = !DILocalVariable(name: "thread_b", scope: !15983, file: !2464, line: 1157, type: !2359)
!15991 = !DILocalVariable(name: "cmp", scope: !15983, file: !2464, line: 1158, type: !332)
!15992 = !DILocation(line: 0, scope: !15983)
!15993 = !DILocation(line: 1160, column: 13, scope: !15983)
!15994 = !DILocation(line: 1161, column: 13, scope: !15983)
!15995 = !DILocation(line: 1163, column: 8, scope: !15983)
!15996 = !DILocation(line: 1165, column: 10, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15983, file: !2464, line: 1165, column: 6)
!15998 = !DILocation(line: 1165, column: 6, scope: !15983)
!15999 = !DILocation(line: 1167, column: 17, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15997, file: !2464, line: 1167, column: 13)
!16001 = !DILocation(line: 1167, column: 13, scope: !15997)
!16002 = !DILocation(line: 1170, column: 25, scope: !16003)
!16003 = distinct !DILexicalBlock(scope: !16000, file: !2464, line: 1169, column: 9)
!16004 = !DILocation(line: 1170, column: 52, scope: !16003)
!16005 = !DILocation(line: 1170, column: 35, scope: !16003)
!16006 = !DILocation(line: 1170, column: 3, scope: !16003)
!16007 = !DILocation(line: 0, scope: !15997)
!16008 = !DILocation(line: 1173, column: 1, scope: !15983)
!16009 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2464, file: !2464, line: 1175, type: !16010, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16025)
!16010 = !DISubroutineType(types: !16011)
!16011 = !{null, !16012, !2359}
!16012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16013, size: 32)
!16013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16014, line: 37, size: 128, elements: !16015)
!16014 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16015 = !{!16016, !16024}
!16016 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16013, file: !16014, line: 38, baseType: !16017, size: 96)
!16017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !380, line: 83, size: 96, elements: !16018)
!16018 = !{!16019, !16020, !16023}
!16019 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16017, file: !380, line: 84, baseType: !2388, size: 32)
!16020 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16017, file: !380, line: 85, baseType: !16021, size: 32, offset: 32)
!16021 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !380, line: 81, baseType: !16022)
!16022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15984, size: 32)
!16023 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16017, file: !380, line: 86, baseType: !103, size: 32, offset: 64)
!16024 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16013, file: !16014, line: 39, baseType: !103, size: 32, offset: 96)
!16025 = !{!16026, !16027, !16028, !16029, !16038}
!16026 = !DILocalVariable(name: "pq", arg: 1, scope: !16009, file: !2464, line: 1175, type: !16012)
!16027 = !DILocalVariable(name: "thread", arg: 2, scope: !16009, file: !2464, line: 1175, type: !2359)
!16028 = !DILocalVariable(name: "t", scope: !16009, file: !2464, line: 1177, type: !2359)
!16029 = !DILocalVariable(name: "__f", scope: !16030, file: !2464, line: 1190, type: !16033)
!16030 = distinct !DILexicalBlock(scope: !16031, file: !2464, line: 1190, column: 3)
!16031 = distinct !DILexicalBlock(scope: !16032, file: !2464, line: 1189, column: 27)
!16032 = distinct !DILexicalBlock(scope: !16009, file: !2464, line: 1189, column: 6)
!16033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !380, line: 155, size: 96, elements: !16034)
!16034 = !{!16035, !16036, !16037}
!16035 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16033, file: !380, line: 156, baseType: !2459, size: 32)
!16036 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16033, file: !380, line: 157, baseType: !261, size: 32, offset: 32)
!16037 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16033, file: !380, line: 158, baseType: !332, size: 32, offset: 64)
!16038 = !DILocalVariable(name: "n", scope: !16039, file: !2464, line: 1190, type: !2388)
!16039 = distinct !DILexicalBlock(scope: !16040, file: !2464, line: 1190, column: 3)
!16040 = distinct !DILexicalBlock(scope: !16030, file: !2464, line: 1190, column: 3)
!16041 = !DILocation(line: 0, scope: !16009)
!16042 = !DILocation(line: 1181, column: 31, scope: !16009)
!16043 = !DILocation(line: 1181, column: 45, scope: !16009)
!16044 = !DILocation(line: 1181, column: 15, scope: !16009)
!16045 = !DILocation(line: 1181, column: 25, scope: !16009)
!16046 = !DILocation(line: 1189, column: 11, scope: !16032)
!16047 = !DILocation(line: 1189, column: 7, scope: !16032)
!16048 = !DILocation(line: 1189, column: 6, scope: !16009)
!16049 = !DILocation(line: 1190, column: 3, scope: !16030)
!16050 = !DILocation(line: 1190, column: 3, scope: !16039)
!16051 = !DILocation(line: 0, scope: !16039)
!16052 = !DILocation(line: 1190, column: 3, scope: !16040)
!16053 = !DILocation(line: 1193, column: 2, scope: !16031)
!16054 = !DILocation(line: 1191, column: 42, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16040, file: !2464, line: 1190, column: 54)
!16056 = !DILocation(line: 1191, column: 12, scope: !16055)
!16057 = !DILocation(line: 1191, column: 22, scope: !16055)
!16058 = distinct !{!16058, !16049, !16059}
!16059 = !DILocation(line: 1192, column: 3, scope: !16030)
!16060 = !DILocation(line: 1195, column: 17, scope: !16009)
!16061 = !DILocation(line: 1195, column: 37, scope: !16009)
!16062 = !DILocation(line: 1195, column: 2, scope: !16009)
!16063 = !DILocation(line: 1196, column: 1, scope: !16009)
!16064 = !DISubprogram(name: "z_rb_foreach_next", scope: !380, file: !380, line: 176, type: !16065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16065 = !DISubroutineType(types: !16066)
!16066 = !{!2388, !16067, !16068}
!16067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16017, size: 32)
!16068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16033, size: 32)
!16069 = !DISubprogram(name: "rb_insert", scope: !380, file: !380, line: 105, type: !16070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16070 = !DISubroutineType(types: !16071)
!16071 = !{null, !16067, !2388}
!16072 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2464, file: !2464, line: 1198, type: !16010, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16073)
!16073 = !{!16074, !16075}
!16074 = !DILocalVariable(name: "pq", arg: 1, scope: !16072, file: !2464, line: 1198, type: !16012)
!16075 = !DILocalVariable(name: "thread", arg: 2, scope: !16072, file: !2464, line: 1198, type: !2359)
!16076 = !DILocation(line: 0, scope: !16072)
!16077 = !DILocation(line: 1202, column: 17, scope: !16072)
!16078 = !DILocation(line: 1202, column: 37, scope: !16072)
!16079 = !DILocation(line: 1202, column: 2, scope: !16072)
!16080 = !DILocation(line: 1204, column: 16, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16072, file: !2464, line: 1204, column: 6)
!16082 = !DILocation(line: 1204, column: 7, scope: !16081)
!16083 = !DILocation(line: 1204, column: 6, scope: !16072)
!16084 = !DILocation(line: 1205, column: 7, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16081, file: !2464, line: 1204, column: 22)
!16086 = !DILocation(line: 1205, column: 22, scope: !16085)
!16087 = !DILocation(line: 1206, column: 2, scope: !16085)
!16088 = !DILocation(line: 1207, column: 1, scope: !16072)
!16089 = !DISubprogram(name: "rb_remove", scope: !380, file: !380, line: 110, type: !16070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16090 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2464, file: !2464, line: 1209, type: !16091, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16093)
!16091 = !DISubroutineType(types: !16092)
!16092 = !{!2359, !16012}
!16093 = !{!16094, !16095, !16096}
!16094 = !DILocalVariable(name: "pq", arg: 1, scope: !16090, file: !2464, line: 1209, type: !16012)
!16095 = !DILocalVariable(name: "thread", scope: !16090, file: !2464, line: 1211, type: !2359)
!16096 = !DILocalVariable(name: "n", scope: !16090, file: !2464, line: 1212, type: !2388)
!16097 = !DILocation(line: 0, scope: !16090)
!16098 = !DILocation(line: 1212, column: 37, scope: !16090)
!16099 = !DILocation(line: 1212, column: 21, scope: !16090)
!16100 = !DILocation(line: 1217, column: 2, scope: !16090)
!16101 = distinct !DISubprogram(name: "rb_get_min", scope: !380, file: !380, line: 115, type: !16102, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16104)
!16102 = !DISubroutineType(types: !16103)
!16103 = !{!2388, !16067}
!16104 = !{!16105}
!16105 = !DILocalVariable(name: "tree", arg: 1, scope: !16101, file: !380, line: 115, type: !16067)
!16106 = !DILocation(line: 0, scope: !16101)
!16107 = !DILocation(line: 117, column: 9, scope: !16101)
!16108 = !DILocation(line: 117, column: 2, scope: !16101)
!16109 = !DISubprogram(name: "z_rb_get_minmax", scope: !380, file: !380, line: 100, type: !16110, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16110 = !DISubroutineType(types: !16111)
!16111 = !{!2388, !16067, !154}
!16112 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2464, file: !2464, line: 1246, type: !16113, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16123)
!16113 = !DISubroutineType(types: !16114)
!16114 = !{!2359, !16115}
!16115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16116, size: 32)
!16116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16014, line: 53, size: 2080, elements: !16117)
!16117 = !{!16118, !16122}
!16118 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16116, file: !16014, line: 54, baseType: !16119, size: 2048)
!16119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 2048, elements: !16120)
!16120 = !{!16121}
!16121 = !DISubrange(count: 32)
!16122 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16116, file: !16014, line: 55, baseType: !32, size: 32, offset: 2048)
!16123 = !{!16124, !16125, !16126, !16127}
!16124 = !DILocalVariable(name: "pq", arg: 1, scope: !16112, file: !2464, line: 1246, type: !16115)
!16125 = !DILocalVariable(name: "thread", scope: !16112, file: !2464, line: 1252, type: !2359)
!16126 = !DILocalVariable(name: "l", scope: !16112, file: !2464, line: 1253, type: !14922)
!16127 = !DILocalVariable(name: "n", scope: !16112, file: !2464, line: 1254, type: !2460)
!16128 = !DILocation(line: 0, scope: !16112)
!16129 = !DILocation(line: 1248, column: 11, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16112, file: !2464, line: 1248, column: 6)
!16131 = !DILocation(line: 1248, column: 7, scope: !16130)
!16132 = !DILocation(line: 1248, column: 6, scope: !16112)
!16133 = !DILocation(line: 1253, column: 31, scope: !16112)
!16134 = !DILocation(line: 1253, column: 20, scope: !16112)
!16135 = !DILocation(line: 1254, column: 19, scope: !16112)
!16136 = !DILocation(line: 1260, column: 1, scope: !16112)
!16137 = distinct !DISubprogram(name: "z_unpend_all", scope: !2464, file: !2464, line: 1262, type: !16138, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16140)
!16138 = !DISubroutineType(types: !16139)
!16139 = !{!103, !2390}
!16140 = !{!16141, !16142, !16143}
!16141 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16137, file: !2464, line: 1262, type: !2390)
!16142 = !DILocalVariable(name: "need_sched", scope: !16137, file: !2464, line: 1264, type: !103)
!16143 = !DILocalVariable(name: "thread", scope: !16137, file: !2464, line: 1265, type: !2359)
!16144 = !DILocation(line: 0, scope: !16137)
!16145 = !DILocation(line: 1267, column: 19, scope: !16137)
!16146 = !DILocation(line: 1267, column: 41, scope: !16137)
!16147 = !DILocation(line: 1267, column: 2, scope: !16137)
!16148 = !DILocation(line: 1268, column: 3, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16137, file: !2464, line: 1267, column: 50)
!16150 = !DILocation(line: 1269, column: 3, scope: !16149)
!16151 = distinct !{!16151, !16147, !16152}
!16152 = !DILocation(line: 1271, column: 2, scope: !16137)
!16153 = !DILocation(line: 1273, column: 2, scope: !16137)
!16154 = distinct !DISubprogram(name: "z_waitq_head", scope: !14053, file: !14053, line: 52, type: !15770, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16155)
!16155 = !{!16156}
!16156 = !DILocalVariable(name: "w", arg: 1, scope: !16154, file: !14053, line: 52, type: !2390)
!16157 = !DILocation(line: 0, scope: !16154)
!16158 = !DILocation(line: 54, column: 52, scope: !16154)
!16159 = !DILocation(line: 54, column: 28, scope: !16154)
!16160 = !DILocation(line: 54, column: 9, scope: !16154)
!16161 = !DILocation(line: 54, column: 2, scope: !16154)
!16162 = distinct !DISubprogram(name: "init_ready_q", scope: !2464, file: !2464, line: 1276, type: !16163, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16170)
!16163 = !DISubroutineType(types: !16164)
!16164 = !{null, !16165}
!16165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16166, size: 32)
!16166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !304, line: 83, size: 96, elements: !16167)
!16167 = !{!16168, !16169}
!16168 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16166, file: !304, line: 86, baseType: !2359, size: 32)
!16169 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16166, file: !304, line: 90, baseType: !2395, size: 64, offset: 32)
!16170 = !{!16171}
!16171 = !DILocalVariable(name: "rq", arg: 1, scope: !16162, file: !2464, line: 1276, type: !16165)
!16172 = !DILocation(line: 0, scope: !16162)
!16173 = !DILocation(line: 1289, column: 22, scope: !16162)
!16174 = !DILocation(line: 1289, column: 2, scope: !16162)
!16175 = !DILocation(line: 1291, column: 1, scope: !16162)
!16176 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !16177, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16179)
!16177 = !DISubroutineType(types: !16178)
!16178 = !{null, !14922}
!16179 = !{!16180}
!16180 = !DILocalVariable(name: "list", arg: 1, scope: !16176, file: !309, line: 197, type: !14922)
!16181 = !DILocation(line: 0, scope: !16176)
!16182 = !DILocation(line: 199, column: 8, scope: !16176)
!16183 = !DILocation(line: 199, column: 13, scope: !16176)
!16184 = !DILocation(line: 200, column: 8, scope: !16176)
!16185 = !DILocation(line: 200, column: 13, scope: !16176)
!16186 = !DILocation(line: 201, column: 1, scope: !16176)
!16187 = distinct !DISubprogram(name: "z_sched_init", scope: !2464, file: !2464, line: 1293, type: !3237, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!16188 = !DILocation(line: 1302, column: 2, scope: !16187)
!16189 = !DILocation(line: 1306, column: 2, scope: !16187)
!16190 = !DILocation(line: 1309, column: 1, scope: !16187)
!16191 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2464, file: !2464, line: 1311, type: !16192, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16195)
!16192 = !DISubroutineType(types: !16193)
!16193 = !{!103, !16194}
!16194 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !2359)
!16195 = !{!16196}
!16196 = !DILocalVariable(name: "thread", arg: 1, scope: !16191, file: !2464, line: 1311, type: !16194)
!16197 = !DILocation(line: 0, scope: !16191)
!16198 = !DILocation(line: 1313, column: 22, scope: !16191)
!16199 = !DILocation(line: 1313, column: 9, scope: !16191)
!16200 = !DILocation(line: 1313, column: 2, scope: !16191)
!16201 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2464, file: !2464, line: 1325, type: !16202, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16204)
!16202 = !DISubroutineType(types: !16203)
!16203 = !{null, !16194, !103}
!16204 = !{!16205, !16206, !16207}
!16205 = !DILocalVariable(name: "thread", arg: 1, scope: !16201, file: !2464, line: 1325, type: !16194)
!16206 = !DILocalVariable(name: "prio", arg: 2, scope: !16201, file: !2464, line: 1325, type: !103)
!16207 = !DILocalVariable(name: "th", scope: !16201, file: !2464, line: 1334, type: !2359)
!16208 = !DILocation(line: 0, scope: !16201)
!16209 = !DILocation(line: 1336, column: 2, scope: !16201)
!16210 = !DILocation(line: 1337, column: 1, scope: !16201)
!16211 = distinct !DISubprogram(name: "k_can_yield", scope: !2464, file: !2464, line: 1384, type: !7620, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!16212 = !DILocation(line: 1386, column: 11, scope: !16211)
!16213 = !DILocation(line: 1386, column: 29, scope: !16211)
!16214 = !DILocation(line: 1386, column: 32, scope: !16211)
!16215 = !DILocation(line: 1386, column: 46, scope: !16211)
!16216 = !DILocation(line: 1387, column: 28, scope: !16211)
!16217 = !DILocation(line: 1387, column: 4, scope: !16211)
!16218 = !DILocation(line: 1386, column: 2, scope: !16211)
!16219 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !300, file: !300, line: 989, type: !7620, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!16220 = !DILocation(line: 993, column: 10, scope: !16219)
!16221 = !DILocation(line: 993, column: 2, scope: !16219)
!16222 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2464, file: !2464, line: 1390, type: !3237, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16223)
!16223 = !{!16224}
!16224 = !DILocalVariable(name: "key", scope: !16222, file: !2464, line: 1396, type: !14711)
!16225 = !DILocation(line: 0, scope: !14719, inlinedAt: !16226)
!16226 = distinct !DILocation(line: 1396, column: 25, scope: !16222)
!16227 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16228)
!16228 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16226)
!16229 = !DILocation(line: 0, scope: !14728, inlinedAt: !16228)
!16230 = !DILocation(line: 0, scope: !16222)
!16231 = !DILocation(line: 1400, column: 18, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16233, file: !2464, line: 1399, column: 36)
!16233 = distinct !DILexicalBlock(scope: !16222, file: !2464, line: 1398, column: 6)
!16234 = !DILocation(line: 0, scope: !14888, inlinedAt: !16235)
!16235 = distinct !DILocation(line: 1400, column: 3, scope: !16232)
!16236 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !16235)
!16237 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !16235)
!16238 = !DILocation(line: 0, scope: !14896, inlinedAt: !16239)
!16239 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !16235)
!16240 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !16239)
!16241 = !DILocation(line: 1402, column: 15, scope: !16222)
!16242 = !DILocation(line: 0, scope: !14905, inlinedAt: !16243)
!16243 = distinct !DILocation(line: 1402, column: 2, scope: !16222)
!16244 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !16243)
!16245 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !16243)
!16246 = !DILocation(line: 0, scope: !14912, inlinedAt: !16247)
!16247 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !16243)
!16248 = !DILocation(line: 0, scope: !14919, inlinedAt: !16249)
!16249 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !16247)
!16250 = !DILocation(line: 188, column: 2, scope: !14929, inlinedAt: !16249)
!16251 = !DILocation(line: 188, column: 2, scope: !14931, inlinedAt: !16249)
!16252 = !DILocation(line: 0, scope: !14929, inlinedAt: !16249)
!16253 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !16249)
!16254 = !DILocation(line: 189, column: 35, scope: !14934, inlinedAt: !16249)
!16255 = !DILocation(line: 189, column: 7, scope: !14935, inlinedAt: !16249)
!16256 = !DILocation(line: 191, column: 21, scope: !14939, inlinedAt: !16249)
!16257 = !DILocation(line: 190, column: 4, scope: !14939, inlinedAt: !16249)
!16258 = !DILocation(line: 192, column: 4, scope: !14939, inlinedAt: !16249)
!16259 = distinct !{!16259, !16250, !16260}
!16260 = !DILocation(line: 194, column: 2, scope: !14929, inlinedAt: !16249)
!16261 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !16249)
!16262 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !16249)
!16263 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !16249)
!16264 = !DILocation(line: 1403, column: 2, scope: !16222)
!16265 = !DILocation(line: 0, scope: !15330, inlinedAt: !16266)
!16266 = distinct !DILocation(line: 1404, column: 2, scope: !16222)
!16267 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !16266)
!16268 = !DILocation(line: 1405, column: 1, scope: !16222)
!16269 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2464, file: !2464, line: 1459, type: !16270, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16272)
!16270 = !DISubroutineType(types: !16271)
!16271 = !{!332, !15510}
!16272 = !{!16273, !16274, !16275}
!16273 = !DILocalVariable(name: "timeout", arg: 1, scope: !16269, file: !2464, line: 1459, type: !15510)
!16274 = !DILocalVariable(name: "ticks", scope: !16269, file: !2464, line: 1461, type: !1699)
!16275 = !DILocalVariable(name: "ret", scope: !16269, file: !2464, line: 1480, type: !332)
!16276 = !DILocation(line: 0, scope: !16269)
!16277 = !DILocation(line: 1468, column: 6, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16269, file: !2464, line: 1468, column: 6)
!16279 = !DILocation(line: 1468, column: 6, scope: !16269)
!16280 = !DILocation(line: 1469, column: 20, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16278, file: !2464, line: 1468, column: 40)
!16282 = !DILocation(line: 1469, column: 3, scope: !16281)
!16283 = !DILocation(line: 1473, column: 3, scope: !16281)
!16284 = !DILocation(line: 1478, column: 10, scope: !16269)
!16285 = !DILocation(line: 1480, column: 16, scope: !16269)
!16286 = !DILocation(line: 1485, column: 1, scope: !16269)
!16287 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3670, file: !3670, line: 310, type: !16288, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16290)
!16288 = !DISubroutineType(types: !16289)
!16289 = !{null, !16194}
!16290 = !{!16291}
!16291 = !DILocalVariable(name: "thread", arg: 1, scope: !16287, file: !3670, line: 310, type: !16194)
!16292 = !DILocation(line: 0, scope: !16287)
!16293 = !DILocation(line: 319, column: 2, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16287, file: !3670, line: 319, column: 2)
!16295 = !{i64 2154784607}
!16296 = !DILocation(line: 320, column: 2, scope: !16287)
!16297 = !DILocation(line: 321, column: 1, scope: !16287)
!16298 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2464, file: !2464, line: 1415, type: !16299, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16301)
!16299 = !DISubroutineType(types: !16300)
!16300 = !{!332, !1699}
!16301 = !{!16302, !16303, !16304, !16305}
!16302 = !DILocalVariable(name: "ticks", arg: 1, scope: !16298, file: !2464, line: 1415, type: !1699)
!16303 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16298, file: !2464, line: 1418, type: !121)
!16304 = !DILocalVariable(name: "timeout", scope: !16298, file: !2464, line: 1430, type: !15510)
!16305 = !DILocalVariable(name: "key", scope: !16298, file: !2464, line: 1437, type: !14711)
!16306 = !DILocation(line: 0, scope: !16298)
!16307 = !DILocation(line: 1425, column: 12, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16298, file: !2464, line: 1425, column: 6)
!16309 = !DILocation(line: 1425, column: 6, scope: !16298)
!16310 = !DILocation(line: 1426, column: 3, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16308, file: !2464, line: 1425, column: 18)
!16312 = !DILocation(line: 1427, column: 3, scope: !16311)
!16313 = !DILocation(line: 1431, column: 24, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16298, file: !2464, line: 1431, column: 6)
!16315 = !DILocation(line: 1431, column: 6, scope: !16298)
!16316 = !DILocation(line: 1432, column: 35, scope: !16317)
!16317 = distinct !DILexicalBlock(scope: !16314, file: !2464, line: 1431, column: 30)
!16318 = !DILocation(line: 1432, column: 27, scope: !16317)
!16319 = !DILocation(line: 1433, column: 2, scope: !16317)
!16320 = !DILocation(line: 1434, column: 27, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16314, file: !2464, line: 1433, column: 9)
!16322 = !DILocation(line: 0, scope: !16314)
!16323 = !DILocation(line: 0, scope: !14719, inlinedAt: !16324)
!16324 = distinct !DILocation(line: 1437, column: 25, scope: !16298)
!16325 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16326)
!16326 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16324)
!16327 = !DILocation(line: 0, scope: !14728, inlinedAt: !16326)
!16328 = !DILocation(line: 1440, column: 20, scope: !16298)
!16329 = !DILocation(line: 1440, column: 18, scope: !16298)
!16330 = !DILocation(line: 1442, column: 2, scope: !16298)
!16331 = !DILocation(line: 1443, column: 23, scope: !16298)
!16332 = !DILocation(line: 1443, column: 2, scope: !16298)
!16333 = !DILocation(line: 1444, column: 29, scope: !16298)
!16334 = !DILocation(line: 1444, column: 2, scope: !16298)
!16335 = !DILocation(line: 0, scope: !15330, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 1446, column: 8, scope: !16298)
!16337 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !16336)
!16338 = !DILocation(line: 1450, column: 10, scope: !16298)
!16339 = !DILocation(line: 1450, column: 45, scope: !16298)
!16340 = !DILocation(line: 1450, column: 43, scope: !16298)
!16341 = !DILocation(line: 1451, column: 6, scope: !16298)
!16342 = !DILocation(line: 1457, column: 1, scope: !16298)
!16343 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !6005, file: !6005, line: 1103, type: !6006, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16344)
!16344 = !{!16345}
!16345 = !DILocalVariable(name: "t", arg: 1, scope: !16343, file: !6005, line: 1103, type: !1596)
!16346 = !DILocation(line: 0, scope: !16343)
!16347 = !DILocation(line: 0, scope: !14766, inlinedAt: !16348)
!16348 = distinct !DILocation(line: 1106, column: 9, scope: !16343)
!16349 = !DILocation(line: 139, column: 13, scope: !16350, inlinedAt: !16348)
!16350 = distinct !DILexicalBlock(scope: !16351, file: !6005, line: 138, column: 10)
!16351 = distinct !DILexicalBlock(scope: !16352, file: !6005, line: 136, column: 7)
!16352 = distinct !DILexicalBlock(scope: !14787, file: !6005, line: 134, column: 17)
!16353 = !DILocation(line: 1106, column: 2, scope: !16343)
!16354 = distinct !DISubprogram(name: "k_yield", scope: !3670, file: !3670, line: 140, type: !3237, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!16355 = !DILocation(line: 148, column: 2, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16354, file: !3670, line: 148, column: 2)
!16357 = !{i64 2154783927}
!16358 = !DILocation(line: 149, column: 2, scope: !16354)
!16359 = !DILocation(line: 150, column: 1, scope: !16354)
!16360 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2464, file: !2464, line: 1495, type: !16361, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16363)
!16361 = !DISubroutineType(types: !16362)
!16362 = !{!332, !103}
!16363 = !{!16364, !16365}
!16364 = !DILocalVariable(name: "us", arg: 1, scope: !16360, file: !2464, line: 1495, type: !103)
!16365 = !DILocalVariable(name: "ticks", scope: !16360, file: !2464, line: 1497, type: !332)
!16366 = !DILocation(line: 0, scope: !16360)
!16367 = !DILocation(line: 1501, column: 31, scope: !16360)
!16368 = !DILocation(line: 1501, column: 10, scope: !16360)
!16369 = !DILocation(line: 1502, column: 23, scope: !16360)
!16370 = !DILocation(line: 1502, column: 10, scope: !16360)
!16371 = !DILocation(line: 1506, column: 31, scope: !16360)
!16372 = !DILocation(line: 1506, column: 9, scope: !16360)
!16373 = !DILocation(line: 1506, column: 2, scope: !16360)
!16374 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !6005, file: !6005, line: 571, type: !6006, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16375)
!16375 = !{!16376}
!16376 = !DILocalVariable(name: "t", arg: 1, scope: !16374, file: !6005, line: 571, type: !1596)
!16377 = !DILocation(line: 0, scope: !16374)
!16378 = !DILocation(line: 0, scope: !14766, inlinedAt: !16379)
!16379 = distinct !DILocation(line: 574, column: 9, scope: !16374)
!16380 = !DILocation(line: 135, column: 5, scope: !16352, inlinedAt: !16379)
!16381 = !DILocation(line: 139, column: 13, scope: !16350, inlinedAt: !16379)
!16382 = !DILocation(line: 574, column: 2, scope: !16374)
!16383 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !6005, file: !6005, line: 1187, type: !6006, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16384)
!16384 = !{!16385}
!16385 = !DILocalVariable(name: "t", arg: 1, scope: !16383, file: !6005, line: 1187, type: !1596)
!16386 = !DILocation(line: 0, scope: !16383)
!16387 = !DILocation(line: 0, scope: !14766, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 1190, column: 9, scope: !16383)
!16389 = !DILocation(line: 145, column: 13, scope: !16390, inlinedAt: !16388)
!16390 = distinct !DILexicalBlock(scope: !14784, file: !6005, line: 144, column: 10)
!16391 = !DILocation(line: 1190, column: 2, scope: !16383)
!16392 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2464, file: !2464, line: 1517, type: !16288, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16393)
!16393 = !{!16394}
!16394 = !DILocalVariable(name: "thread", arg: 1, scope: !16392, file: !2464, line: 1517, type: !16194)
!16395 = !DILocation(line: 0, scope: !16392)
!16396 = !DILocation(line: 1521, column: 6, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !16392, file: !2464, line: 1521, column: 6)
!16398 = !DILocation(line: 1521, column: 6, scope: !16392)
!16399 = !DILocation(line: 1525, column: 6, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16392, file: !2464, line: 1525, column: 6)
!16401 = !DILocation(line: 1525, column: 37, scope: !16400)
!16402 = !DILocation(line: 1525, column: 6, scope: !16392)
!16403 = !DILocation(line: 1527, column: 20, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16405, file: !2464, line: 1527, column: 7)
!16405 = distinct !DILexicalBlock(scope: !16400, file: !2464, line: 1525, column: 42)
!16406 = !DILocation(line: 1527, column: 33, scope: !16404)
!16407 = !DILocation(line: 1527, column: 7, scope: !16405)
!16408 = !DILocation(line: 1532, column: 2, scope: !16392)
!16409 = !DILocation(line: 1533, column: 2, scope: !16392)
!16410 = !DILocation(line: 1031, column: 3, scope: !15363, inlinedAt: !16411)
!16411 = distinct !DILocation(line: 48, column: 10, scope: !15367, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 1537, column: 7, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16392, file: !2464, line: 1537, column: 6)
!16414 = !DILocation(line: 0, scope: !15363, inlinedAt: !16411)
!16415 = !DILocation(line: 48, column: 9, scope: !15367, inlinedAt: !16412)
!16416 = !DILocation(line: 1537, column: 6, scope: !16392)
!16417 = !DILocation(line: 1538, column: 3, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16413, file: !2464, line: 1537, column: 25)
!16419 = !DILocation(line: 1539, column: 2, scope: !16418)
!16420 = !DILocation(line: 1540, column: 1, scope: !16392)
!16421 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13727, file: !13727, line: 101, type: !14837, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16422)
!16422 = !{!16423}
!16423 = !DILocalVariable(name: "thread", arg: 1, scope: !16421, file: !13727, line: 101, type: !2359)
!16424 = !DILocation(line: 0, scope: !16421)
!16425 = !DILocation(line: 103, column: 23, scope: !16421)
!16426 = !DILocation(line: 103, column: 36, scope: !16421)
!16427 = !DILocation(line: 103, column: 55, scope: !16421)
!16428 = !DILocation(line: 103, column: 2, scope: !16421)
!16429 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2464, file: !2464, line: 1567, type: !16430, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16432)
!16430 = !DISubroutineType(types: !16431)
!16431 = !{!16194}
!16432 = !{!16433}
!16433 = !DILocalVariable(name: "ret", scope: !16429, file: !2464, line: 1577, type: !16194)
!16434 = !DILocation(line: 1577, column: 30, scope: !16429)
!16435 = !DILocation(line: 0, scope: !16429)
!16436 = !DILocation(line: 1582, column: 2, scope: !16429)
!16437 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2464, file: !2464, line: 1593, type: !6629, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !461)
!16438 = !DILocation(line: 1031, column: 3, scope: !15363, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 48, column: 10, scope: !15367, inlinedAt: !16440)
!16440 = distinct !DILocation(line: 1595, column: 10, scope: !16437)
!16441 = !DILocation(line: 0, scope: !15363, inlinedAt: !16439)
!16442 = !DILocation(line: 48, column: 9, scope: !15367, inlinedAt: !16440)
!16443 = !DILocation(line: 1595, column: 27, scope: !16437)
!16444 = !DILocation(line: 1595, column: 41, scope: !16437)
!16445 = !DILocation(line: 1595, column: 30, scope: !16437)
!16446 = !DILocation(line: 1595, column: 2, scope: !16437)
!16447 = distinct !DISubprogram(name: "z_thread_abort", scope: !2464, file: !2464, line: 1725, type: !14677, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16448)
!16448 = !{!16449, !16450}
!16449 = !DILocalVariable(name: "thread", arg: 1, scope: !16447, file: !2464, line: 1725, type: !2359)
!16450 = !DILocalVariable(name: "key", scope: !16447, file: !2464, line: 1727, type: !14711)
!16451 = !DILocation(line: 0, scope: !16447)
!16452 = !DILocation(line: 0, scope: !14719, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 1727, column: 25, scope: !16447)
!16454 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16455)
!16455 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16453)
!16456 = !DILocation(line: 0, scope: !14728, inlinedAt: !16455)
!16457 = !DILocation(line: 1729, column: 20, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16447, file: !2464, line: 1729, column: 6)
!16459 = !DILocation(line: 1729, column: 33, scope: !16458)
!16460 = !DILocation(line: 1729, column: 48, scope: !16458)
!16461 = !DILocation(line: 1729, column: 6, scope: !16447)
!16462 = !DILocation(line: 0, scope: !14746, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 1730, column: 3, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16458, file: !2464, line: 1729, column: 54)
!16465 = !DILocation(line: 0, scope: !14754, inlinedAt: !16466)
!16466 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16463)
!16467 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16466)
!16468 = !DILocation(line: 1732, column: 3, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16464, file: !2464, line: 1732, column: 3)
!16470 = !{i64 2155521337, i64 2155521353, i64 2155521379, i64 2155521407, i64 2155521427}
!16471 = !DILocation(line: 1733, column: 3, scope: !16464)
!16472 = !DILocation(line: 1736, column: 20, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16447, file: !2464, line: 1736, column: 6)
!16474 = !DILocation(line: 1736, column: 33, scope: !16473)
!16475 = !DILocation(line: 1736, column: 49, scope: !16473)
!16476 = !DILocation(line: 1736, column: 6, scope: !16447)
!16477 = !DILocation(line: 0, scope: !14746, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 1737, column: 3, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16473, file: !2464, line: 1736, column: 56)
!16480 = !DILocation(line: 0, scope: !14754, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16478)
!16482 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16481)
!16483 = !DILocation(line: 1738, column: 3, scope: !16479)
!16484 = !DILocation(line: 1775, column: 2, scope: !16447)
!16485 = !DILocation(line: 1776, column: 16, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16447, file: !2464, line: 1776, column: 6)
!16487 = !DILocation(line: 1776, column: 13, scope: !16486)
!16488 = !DILocation(line: 1776, column: 25, scope: !16486)
!16489 = !DILocation(line: 1031, column: 3, scope: !15363, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 48, column: 10, scope: !15367, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 1776, column: 29, scope: !16486)
!16492 = !DILocation(line: 0, scope: !15363, inlinedAt: !16490)
!16493 = !DILocation(line: 48, column: 9, scope: !15367, inlinedAt: !16491)
!16494 = !DILocation(line: 1776, column: 6, scope: !16447)
!16495 = !DILocation(line: 0, scope: !15330, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 1777, column: 3, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16486, file: !2464, line: 1776, column: 47)
!16498 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !16496)
!16499 = !DILocation(line: 1779, column: 2, scope: !16497)
!16500 = !DILocation(line: 0, scope: !14746, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 1780, column: 2, scope: !16447)
!16502 = !DILocation(line: 0, scope: !14754, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16501)
!16504 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16503)
!16505 = !DILocation(line: 1781, column: 1, scope: !16447)
!16506 = distinct !DISubprogram(name: "end_thread", scope: !2464, file: !2464, line: 1690, type: !14677, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16507)
!16507 = !{!16508}
!16508 = !DILocalVariable(name: "thread", arg: 1, scope: !16506, file: !2464, line: 1690, type: !2359)
!16509 = !DILocation(line: 0, scope: !16506)
!16510 = !DILocation(line: 1695, column: 20, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16506, file: !2464, line: 1695, column: 6)
!16512 = !DILocation(line: 1695, column: 33, scope: !16511)
!16513 = !DILocation(line: 1695, column: 49, scope: !16511)
!16514 = !DILocation(line: 1695, column: 6, scope: !16506)
!16515 = !DILocation(line: 1697, column: 29, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16511, file: !2464, line: 1695, column: 56)
!16517 = !DILocation(line: 1698, column: 7, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16516, file: !2464, line: 1698, column: 7)
!16519 = !DILocation(line: 1698, column: 7, scope: !16516)
!16520 = !DILocation(line: 0, scope: !14888, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 1699, column: 4, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16518, file: !2464, line: 1698, column: 35)
!16523 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !16521)
!16524 = !DILocation(line: 0, scope: !14896, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !16521)
!16526 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !16525)
!16527 = !DILocation(line: 1700, column: 3, scope: !16522)
!16528 = !DILocation(line: 1701, column: 20, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16516, file: !2464, line: 1701, column: 7)
!16530 = !DILocation(line: 1701, column: 30, scope: !16529)
!16531 = !DILocation(line: 1701, column: 7, scope: !16516)
!16532 = !DILocation(line: 1702, column: 4, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16529, file: !2464, line: 1701, column: 39)
!16534 = !DILocation(line: 1703, column: 3, scope: !16533)
!16535 = !DILocation(line: 1704, column: 9, scope: !16516)
!16536 = !DILocation(line: 1705, column: 23, scope: !16516)
!16537 = !DILocation(line: 1705, column: 3, scope: !16516)
!16538 = !DILocation(line: 1706, column: 3, scope: !16516)
!16539 = !DILocation(line: 1722, column: 2, scope: !16516)
!16540 = !DILocation(line: 1723, column: 1, scope: !16506)
!16541 = distinct !DISubprogram(name: "unpend_all", scope: !2464, file: !2464, line: 1674, type: !16542, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16544)
!16542 = !DISubroutineType(types: !16543)
!16543 = !{null, !2390}
!16544 = !{!16545, !16546}
!16545 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16541, file: !2464, line: 1674, type: !2390)
!16546 = !DILocalVariable(name: "thread", scope: !16541, file: !2464, line: 1676, type: !2359)
!16547 = !DILocation(line: 0, scope: !16541)
!16548 = !DILocation(line: 1678, column: 19, scope: !16541)
!16549 = !DILocation(line: 1678, column: 41, scope: !16541)
!16550 = !DILocation(line: 1678, column: 2, scope: !16541)
!16551 = !DILocation(line: 1679, column: 3, scope: !16552)
!16552 = distinct !DILexicalBlock(scope: !16541, file: !2464, line: 1678, column: 50)
!16553 = !DILocation(line: 1680, column: 9, scope: !16552)
!16554 = !DILocalVariable(name: "thread", arg: 1, scope: !16555, file: !13747, line: 65, type: !2359)
!16555 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13747, file: !13747, line: 65, type: !16556, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16558)
!16556 = !DISubroutineType(types: !16557)
!16557 = !{null, !2359, !32}
!16558 = !{!16554, !16559}
!16559 = !DILocalVariable(name: "value", arg: 2, scope: !16555, file: !13747, line: 65, type: !32)
!16560 = !DILocation(line: 0, scope: !16555, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 1681, column: 3, scope: !16552)
!16562 = !DILocation(line: 67, column: 15, scope: !16555, inlinedAt: !16561)
!16563 = !DILocation(line: 67, column: 33, scope: !16555, inlinedAt: !16561)
!16564 = !DILocation(line: 1682, column: 3, scope: !16552)
!16565 = distinct !{!16565, !16550, !16566}
!16566 = !DILocation(line: 1683, column: 2, scope: !16541)
!16567 = !DILocation(line: 1684, column: 1, scope: !16541)
!16568 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2464, file: !2464, line: 1794, type: !16569, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16571)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{!103, !2359, !15510}
!16571 = !{!16572, !16573, !16574, !16575}
!16572 = !DILocalVariable(name: "thread", arg: 1, scope: !16568, file: !2464, line: 1794, type: !2359)
!16573 = !DILocalVariable(name: "timeout", arg: 2, scope: !16568, file: !2464, line: 1794, type: !15510)
!16574 = !DILocalVariable(name: "key", scope: !16568, file: !2464, line: 1796, type: !14711)
!16575 = !DILocalVariable(name: "ret", scope: !16568, file: !2464, line: 1797, type: !103)
!16576 = !DILocation(line: 0, scope: !16568)
!16577 = !DILocation(line: 0, scope: !14719, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 1796, column: 25, scope: !16568)
!16579 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16578)
!16581 = !DILocation(line: 0, scope: !14728, inlinedAt: !16580)
!16582 = !DILocation(line: 1801, column: 20, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16568, file: !2464, line: 1801, column: 6)
!16584 = !DILocation(line: 1801, column: 33, scope: !16583)
!16585 = !DILocation(line: 1801, column: 49, scope: !16583)
!16586 = !DILocation(line: 1801, column: 6, scope: !16568)
!16587 = !DILocation(line: 1803, column: 13, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16583, file: !2464, line: 1803, column: 13)
!16589 = !DILocation(line: 1803, column: 13, scope: !16583)
!16590 = !DILocation(line: 1805, column: 24, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16588, file: !2464, line: 1805, column: 13)
!16592 = !DILocation(line: 1805, column: 21, scope: !16591)
!16593 = !DILocation(line: 1805, column: 34, scope: !16591)
!16594 = !DILocation(line: 1806, column: 20, scope: !16591)
!16595 = !DILocation(line: 1806, column: 44, scope: !16591)
!16596 = !DILocation(line: 1806, column: 30, scope: !16591)
!16597 = !DILocation(line: 1805, column: 13, scope: !16588)
!16598 = !DILocation(line: 1810, column: 42, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16591, file: !2464, line: 1808, column: 9)
!16600 = !DILocation(line: 1810, column: 3, scope: !16599)
!16601 = !DILocation(line: 1811, column: 22, scope: !16599)
!16602 = !DILocation(line: 1811, column: 3, scope: !16599)
!16603 = !DILocation(line: 0, scope: !15330, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 1814, column: 9, scope: !16599)
!16605 = !DILocation(line: 196, column: 9, scope: !15330, inlinedAt: !16604)
!16606 = !DILocation(line: 1817, column: 3, scope: !16599)
!16607 = !DILocation(line: 0, scope: !16583)
!16608 = !DILocation(line: 0, scope: !14746, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 1822, column: 2, scope: !16568)
!16610 = !DILocation(line: 0, scope: !14754, inlinedAt: !16611)
!16611 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16609)
!16612 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16611)
!16613 = !DILocation(line: 1823, column: 2, scope: !16568)
!16614 = !DILocation(line: 1824, column: 1, scope: !16568)
!16615 = distinct !DISubprogram(name: "z_sched_wake", scope: !2464, file: !2464, line: 1882, type: !16616, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16618)
!16616 = !DISubroutineType(types: !16617)
!16617 = !{!157, !2390, !103, !102}
!16618 = !{!16619, !16620, !16621, !16622, !16623, !16624, !16626}
!16619 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16615, file: !2464, line: 1882, type: !2390)
!16620 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16615, file: !2464, line: 1882, type: !103)
!16621 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16615, file: !2464, line: 1882, type: !102)
!16622 = !DILocalVariable(name: "thread", scope: !16615, file: !2464, line: 1884, type: !2359)
!16623 = !DILocalVariable(name: "ret", scope: !16615, file: !2464, line: 1885, type: !157)
!16624 = !DILocalVariable(name: "__i", scope: !16625, file: !2464, line: 1887, type: !14711)
!16625 = distinct !DILexicalBlock(scope: !16615, file: !2464, line: 1887, column: 2)
!16626 = !DILocalVariable(name: "__key", scope: !16625, file: !2464, line: 1887, type: !14711)
!16627 = !DILocation(line: 0, scope: !16615)
!16628 = !DILocation(line: 0, scope: !16625)
!16629 = !DILocation(line: 0, scope: !14719, inlinedAt: !16630)
!16630 = distinct !DILocation(line: 1887, column: 2, scope: !16625)
!16631 = !DILocation(line: 55, column: 2, scope: !14728, inlinedAt: !16632)
!16632 = distinct !DILocation(line: 145, column: 10, scope: !14719, inlinedAt: !16630)
!16633 = !DILocation(line: 0, scope: !14728, inlinedAt: !16632)
!16634 = !DILocation(line: 1888, column: 12, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16636, file: !2464, line: 1887, column: 26)
!16636 = distinct !DILexicalBlock(scope: !16625, file: !2464, line: 1887, column: 2)
!16637 = !DILocation(line: 1890, column: 14, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !16635, file: !2464, line: 1890, column: 7)
!16639 = !DILocation(line: 1890, column: 7, scope: !16635)
!16640 = !DILocalVariable(name: "thread", arg: 1, scope: !16641, file: !16642, line: 134, type: !2359)
!16641 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16642, file: !16642, line: 134, type: !16643, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16645)
!16642 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16643 = !DISubroutineType(types: !16644)
!16644 = !{null, !2359, !32, !102}
!16645 = !{!16640, !16646, !16647}
!16646 = !DILocalVariable(name: "value", arg: 2, scope: !16641, file: !16642, line: 135, type: !32)
!16647 = !DILocalVariable(name: "data", arg: 3, scope: !16641, file: !16642, line: 136, type: !102)
!16648 = !DILocation(line: 0, scope: !16641, inlinedAt: !16649)
!16649 = distinct !DILocation(line: 1891, column: 4, scope: !16650)
!16650 = distinct !DILexicalBlock(scope: !16638, file: !2464, line: 1890, column: 23)
!16651 = !DILocation(line: 0, scope: !16555, inlinedAt: !16652)
!16652 = distinct !DILocation(line: 138, column: 2, scope: !16641, inlinedAt: !16649)
!16653 = !DILocation(line: 67, column: 15, scope: !16555, inlinedAt: !16652)
!16654 = !DILocation(line: 67, column: 33, scope: !16555, inlinedAt: !16652)
!16655 = !DILocation(line: 139, column: 15, scope: !16641, inlinedAt: !16649)
!16656 = !DILocation(line: 139, column: 25, scope: !16641, inlinedAt: !16649)
!16657 = !DILocation(line: 1894, column: 4, scope: !16650)
!16658 = !DILocation(line: 1895, column: 10, scope: !16650)
!16659 = !DILocation(line: 1896, column: 4, scope: !16650)
!16660 = !DILocation(line: 1898, column: 3, scope: !16650)
!16661 = !DILocation(line: 0, scope: !14746, inlinedAt: !16662)
!16662 = distinct !DILocation(line: 1887, column: 2, scope: !16636)
!16663 = !DILocation(line: 0, scope: !14754, inlinedAt: !16664)
!16664 = distinct !DILocation(line: 215, column: 2, scope: !14746, inlinedAt: !16662)
!16665 = !DILocation(line: 95, column: 2, scope: !14754, inlinedAt: !16664)
!16666 = !DILocation(line: 1901, column: 2, scope: !16615)
!16667 = distinct !DISubprogram(name: "z_sched_wait", scope: !2464, file: !2464, line: 1904, type: !16668, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16671)
!16668 = !DISubroutineType(types: !16669)
!16669 = !{!103, !14722, !14711, !2390, !15510, !16670}
!16670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16671 = !{!16672, !16673, !16674, !16675, !16676, !16677}
!16672 = !DILocalVariable(name: "lock", arg: 1, scope: !16667, file: !2464, line: 1904, type: !14722)
!16673 = !DILocalVariable(name: "key", arg: 2, scope: !16667, file: !2464, line: 1904, type: !14711)
!16674 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16667, file: !2464, line: 1905, type: !2390)
!16675 = !DILocalVariable(name: "timeout", arg: 4, scope: !16667, file: !2464, line: 1905, type: !15510)
!16676 = !DILocalVariable(name: "data", arg: 5, scope: !16667, file: !2464, line: 1905, type: !16670)
!16677 = !DILocalVariable(name: "ret", scope: !16667, file: !2464, line: 1907, type: !103)
!16678 = !DILocation(line: 0, scope: !16667)
!16679 = !DILocation(line: 1907, column: 12, scope: !16667)
!16680 = !DILocation(line: 1909, column: 11, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16667, file: !2464, line: 1909, column: 6)
!16682 = !DILocation(line: 1909, column: 6, scope: !16667)
!16683 = !DILocation(line: 1910, column: 11, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16681, file: !2464, line: 1909, column: 20)
!16685 = !DILocation(line: 1910, column: 26, scope: !16684)
!16686 = !DILocation(line: 1910, column: 9, scope: !16684)
!16687 = !DILocation(line: 1911, column: 2, scope: !16684)
!16688 = !DILocation(line: 1912, column: 2, scope: !16667)
!16689 = distinct !DISubprogram(name: "z_data_copy", scope: !16690, file: !16690, line: 22, type: !3237, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3220, retainedNodes: !461)
!16690 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16691 = !DILocation(line: 24, column: 2, scope: !16689)
!16692 = !DILocation(line: 27, column: 2, scope: !16689)
!16693 = !DILocation(line: 71, column: 1, scope: !16689)
!16694 = distinct !DISubprogram(name: "z_add_timeout", scope: !2501, file: !2501, line: 88, type: !16695, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16701)
!16695 = !DISubroutineType(types: !16696)
!16696 = !{null, !2474, !2493, !16697}
!16697 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1700, line: 67, baseType: !16698)
!16698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1700, line: 65, size: 64, elements: !16699)
!16699 = !{!16700}
!16700 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16698, file: !1700, line: 66, baseType: !1699, size: 64)
!16701 = !{!16702, !16703, !16704, !16705, !16711, !16712, !16715, !16718}
!16702 = !DILocalVariable(name: "to", arg: 1, scope: !16694, file: !2501, line: 88, type: !2474)
!16703 = !DILocalVariable(name: "fn", arg: 2, scope: !16694, file: !2501, line: 88, type: !2493)
!16704 = !DILocalVariable(name: "timeout", arg: 3, scope: !16694, file: !2501, line: 89, type: !16697)
!16705 = !DILocalVariable(name: "__i", scope: !16706, file: !2501, line: 102, type: !16707)
!16706 = distinct !DILexicalBlock(scope: !16694, file: !2501, line: 102, column: 2)
!16707 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !16708)
!16708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !16709)
!16709 = !{!16710}
!16710 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16708, file: !460, line: 33, baseType: !103, size: 32)
!16711 = !DILocalVariable(name: "__key", scope: !16706, file: !2501, line: 102, type: !16707)
!16712 = !DILocalVariable(name: "t", scope: !16713, file: !2501, line: 103, type: !2474)
!16713 = distinct !DILexicalBlock(scope: !16714, file: !2501, line: 102, column: 24)
!16714 = distinct !DILexicalBlock(scope: !16706, file: !2501, line: 102, column: 2)
!16715 = !DILocalVariable(name: "ticks", scope: !16716, file: !2501, line: 107, type: !1699)
!16716 = distinct !DILexicalBlock(scope: !16717, file: !2501, line: 106, column: 39)
!16717 = distinct !DILexicalBlock(scope: !16713, file: !2501, line: 105, column: 7)
!16718 = !DILocalVariable(name: "next_time", scope: !16719, file: !2501, line: 137, type: !332)
!16719 = distinct !DILexicalBlock(scope: !16720, file: !2501, line: 127, column: 22)
!16720 = distinct !DILexicalBlock(scope: !16713, file: !2501, line: 127, column: 7)
!16721 = !DILocation(line: 0, scope: !16694)
!16722 = !DILocation(line: 91, column: 6, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16694, file: !2501, line: 91, column: 6)
!16724 = !DILocation(line: 91, column: 6, scope: !16694)
!16725 = !DILocation(line: 100, column: 6, scope: !16694)
!16726 = !DILocation(line: 100, column: 9, scope: !16694)
!16727 = !DILocation(line: 0, scope: !16706)
!16728 = !DILocalVariable(name: "l", arg: 1, scope: !16729, file: !460, line: 136, type: !16732)
!16729 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !16730, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16733)
!16730 = !DISubroutineType(types: !16731)
!16731 = !{!16707, !16732}
!16732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!16733 = !{!16728, !16734}
!16734 = !DILocalVariable(name: "k", scope: !16729, file: !460, line: 139, type: !16707)
!16735 = !DILocation(line: 0, scope: !16729, inlinedAt: !16736)
!16736 = distinct !DILocation(line: 102, column: 2, scope: !16706)
!16737 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !16742)
!16738 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16739)
!16739 = !{!16740, !16741}
!16740 = !DILocalVariable(name: "key", scope: !16738, file: !5805, line: 44, type: !32)
!16741 = !DILocalVariable(name: "tmp", scope: !16738, file: !5805, line: 53, type: !32)
!16742 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !16736)
!16743 = !{i64 2244894}
!16744 = !DILocation(line: 0, scope: !16738, inlinedAt: !16742)
!16745 = !DILocation(line: 106, column: 33, scope: !16717)
!16746 = !DILocation(line: 105, column: 7, scope: !16713)
!16747 = !DILocation(line: 107, column: 50, scope: !16716)
!16748 = !DILocation(line: 107, column: 48, scope: !16716)
!16749 = !DILocation(line: 0, scope: !16716)
!16750 = !DILocation(line: 109, column: 17, scope: !16716)
!16751 = !DILocation(line: 110, column: 3, scope: !16716)
!16752 = !DILocation(line: 111, column: 31, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16717, file: !2501, line: 110, column: 10)
!16754 = !DILocation(line: 111, column: 37, scope: !16753)
!16755 = !DILocation(line: 111, column: 35, scope: !16753)
!16756 = !DILocation(line: 0, scope: !16717)
!16757 = !DILocation(line: 109, column: 8, scope: !16716)
!16758 = !DILocation(line: 109, column: 15, scope: !16716)
!16759 = !DILocation(line: 114, column: 12, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16713, file: !2501, line: 114, column: 3)
!16761 = !DILocation(line: 0, scope: !16713)
!16762 = !DILocation(line: 114, column: 3, scope: !16760)
!16763 = !DILocation(line: 115, column: 24, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16765, file: !2501, line: 115, column: 8)
!16765 = distinct !DILexicalBlock(scope: !16766, file: !2501, line: 114, column: 45)
!16766 = distinct !DILexicalBlock(scope: !16760, file: !2501, line: 114, column: 3)
!16767 = !DILocation(line: 115, column: 11, scope: !16764)
!16768 = !DILocation(line: 115, column: 18, scope: !16764)
!16769 = !DILocation(line: 115, column: 8, scope: !16765)
!16770 = !DILocation(line: 116, column: 15, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16764, file: !2501, line: 115, column: 32)
!16772 = !DILocation(line: 117, column: 26, scope: !16771)
!16773 = !DILocation(line: 117, column: 37, scope: !16771)
!16774 = !DILocation(line: 117, column: 5, scope: !16771)
!16775 = !DILocation(line: 123, column: 7, scope: !16713)
!16776 = !DILocation(line: 120, column: 15, scope: !16765)
!16777 = !DILocation(line: 114, column: 36, scope: !16766)
!16778 = distinct !{!16778, !16762, !16779}
!16779 = !DILocation(line: 121, column: 3, scope: !16760)
!16780 = !DILocation(line: 124, column: 41, scope: !16781)
!16781 = distinct !DILexicalBlock(scope: !16782, file: !2501, line: 123, column: 18)
!16782 = distinct !DILexicalBlock(scope: !16713, file: !2501, line: 123, column: 7)
!16783 = !DILocation(line: 124, column: 4, scope: !16781)
!16784 = !DILocation(line: 125, column: 3, scope: !16781)
!16785 = !DILocation(line: 127, column: 13, scope: !16720)
!16786 = !DILocation(line: 127, column: 10, scope: !16720)
!16787 = !DILocation(line: 127, column: 7, scope: !16713)
!16788 = !DILocation(line: 137, column: 24, scope: !16719)
!16789 = !DILocation(line: 0, scope: !16719)
!16790 = !DILocation(line: 139, column: 18, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16719, file: !2501, line: 139, column: 8)
!16792 = !DILocation(line: 139, column: 23, scope: !16791)
!16793 = !DILocation(line: 141, column: 5, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16791, file: !2501, line: 140, column: 48)
!16795 = !DILocation(line: 142, column: 4, scope: !16794)
!16796 = !DILocalVariable(name: "key", arg: 2, scope: !16797, file: !460, line: 190, type: !16707)
!16797 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !16798, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16800)
!16798 = !DISubroutineType(types: !16799)
!16799 = !{null, !16732, !16707}
!16800 = !{!16801, !16796}
!16801 = !DILocalVariable(name: "l", arg: 1, scope: !16797, file: !460, line: 189, type: !16732)
!16802 = !DILocation(line: 0, scope: !16797, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 102, column: 2, scope: !16714)
!16804 = !DILocalVariable(name: "key", arg: 1, scope: !16805, file: !5805, line: 84, type: !32)
!16805 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16806)
!16806 = !{!16804}
!16807 = !DILocation(line: 0, scope: !16805, inlinedAt: !16808)
!16808 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !16803)
!16809 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !16808)
!16810 = !{i64 2245711}
!16811 = !DILocation(line: 148, column: 1, scope: !16694)
!16812 = distinct !DISubprogram(name: "elapsed", scope: !2501, file: !2501, line: 62, type: !16813, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !461)
!16813 = !DISubroutineType(types: !16814)
!16814 = !{!332}
!16815 = !DILocation(line: 64, column: 9, scope: !16812)
!16816 = !DILocation(line: 64, column: 28, scope: !16812)
!16817 = !DILocation(line: 64, column: 35, scope: !16812)
!16818 = !DILocation(line: 64, column: 2, scope: !16812)
!16819 = distinct !DISubprogram(name: "first", scope: !2501, file: !2501, line: 39, type: !16820, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16822)
!16820 = !DISubroutineType(types: !16821)
!16821 = !{!2474}
!16822 = !{!16823}
!16823 = !DILocalVariable(name: "t", scope: !16819, file: !2501, line: 41, type: !16824)
!16824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!16825 = !DILocation(line: 41, column: 19, scope: !16819)
!16826 = !DILocation(line: 0, scope: !16819)
!16827 = !DILocation(line: 43, column: 9, scope: !16819)
!16828 = !DILocation(line: 43, column: 2, scope: !16819)
!16829 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !309, file: !309, line: 443, type: !16830, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16832)
!16830 = !DISubroutineType(types: !16831)
!16831 = !{null, !16824, !16824}
!16832 = !{!16833, !16834, !16835}
!16833 = !DILocalVariable(name: "successor", arg: 1, scope: !16829, file: !309, line: 443, type: !16824)
!16834 = !DILocalVariable(name: "node", arg: 2, scope: !16829, file: !309, line: 443, type: !16824)
!16835 = !DILocalVariable(name: "prev", scope: !16829, file: !309, line: 445, type: !16836)
!16836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16824)
!16837 = !DILocation(line: 0, scope: !16829)
!16838 = !DILocation(line: 445, column: 39, scope: !16829)
!16839 = !DILocation(line: 447, column: 8, scope: !16829)
!16840 = !DILocation(line: 447, column: 13, scope: !16829)
!16841 = !DILocation(line: 448, column: 8, scope: !16829)
!16842 = !DILocation(line: 448, column: 13, scope: !16829)
!16843 = !DILocation(line: 449, column: 8, scope: !16829)
!16844 = !DILocation(line: 449, column: 13, scope: !16829)
!16845 = !DILocation(line: 450, column: 18, scope: !16829)
!16846 = !DILocation(line: 451, column: 1, scope: !16829)
!16847 = distinct !DISubprogram(name: "next", scope: !2501, file: !2501, line: 46, type: !16848, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16850)
!16848 = !DISubroutineType(types: !16849)
!16849 = !{!2474, !2474}
!16850 = !{!16851, !16852}
!16851 = !DILocalVariable(name: "t", arg: 1, scope: !16847, file: !2501, line: 46, type: !2474)
!16852 = !DILocalVariable(name: "n", scope: !16847, file: !2501, line: 48, type: !16824)
!16853 = !DILocation(line: 0, scope: !16847)
!16854 = !DILocation(line: 48, column: 58, scope: !16847)
!16855 = !DILocation(line: 48, column: 19, scope: !16847)
!16856 = !DILocation(line: 50, column: 9, scope: !16847)
!16857 = !DILocation(line: 50, column: 2, scope: !16847)
!16858 = distinct !DISubprogram(name: "sys_dlist_append", scope: !309, file: !309, line: 404, type: !16859, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16862)
!16859 = !DISubroutineType(types: !16860)
!16860 = !{null, !16861, !16824}
!16861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!16862 = !{!16863, !16864, !16865}
!16863 = !DILocalVariable(name: "list", arg: 1, scope: !16858, file: !309, line: 404, type: !16861)
!16864 = !DILocalVariable(name: "node", arg: 2, scope: !16858, file: !309, line: 404, type: !16824)
!16865 = !DILocalVariable(name: "tail", scope: !16858, file: !309, line: 406, type: !16836)
!16866 = !DILocation(line: 0, scope: !16858)
!16867 = !DILocation(line: 406, column: 34, scope: !16858)
!16868 = !DILocation(line: 408, column: 8, scope: !16858)
!16869 = !DILocation(line: 408, column: 13, scope: !16858)
!16870 = !DILocation(line: 409, column: 8, scope: !16858)
!16871 = !DILocation(line: 409, column: 13, scope: !16858)
!16872 = !DILocation(line: 411, column: 8, scope: !16858)
!16873 = !DILocation(line: 411, column: 13, scope: !16858)
!16874 = !DILocation(line: 412, column: 13, scope: !16858)
!16875 = !DILocation(line: 413, column: 1, scope: !16858)
!16876 = distinct !DISubprogram(name: "next_timeout", scope: !2501, file: !2501, line: 67, type: !16813, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16877)
!16877 = !{!16878, !16879, !16880}
!16878 = !DILocalVariable(name: "to", scope: !16876, file: !2501, line: 69, type: !2474)
!16879 = !DILocalVariable(name: "ticks_elapsed", scope: !16876, file: !2501, line: 70, type: !332)
!16880 = !DILocalVariable(name: "ret", scope: !16876, file: !2501, line: 71, type: !332)
!16881 = !DILocation(line: 69, column: 24, scope: !16876)
!16882 = !DILocation(line: 0, scope: !16876)
!16883 = !DILocation(line: 70, column: 26, scope: !16876)
!16884 = !DILocation(line: 73, column: 10, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16876, file: !2501, line: 73, column: 6)
!16886 = !DILocation(line: 73, column: 19, scope: !16885)
!16887 = !DILocation(line: 74, column: 21, scope: !16885)
!16888 = !DILocation(line: 74, column: 30, scope: !16885)
!16889 = !DILocation(line: 74, column: 28, scope: !16885)
!16890 = !DILocation(line: 74, column: 45, scope: !16885)
!16891 = !DILocation(line: 73, column: 6, scope: !16876)
!16892 = !DILocation(line: 77, column: 9, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16885, file: !2501, line: 76, column: 9)
!16894 = !DILocation(line: 0, scope: !16885)
!16895 = !DILocation(line: 81, column: 20, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16876, file: !2501, line: 81, column: 6)
!16897 = !DILocation(line: 81, column: 6, scope: !16896)
!16898 = !DILocation(line: 81, column: 32, scope: !16896)
!16899 = !DILocation(line: 85, column: 2, scope: !16876)
!16900 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !309, file: !309, line: 341, type: !16901, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16903)
!16901 = !DISubroutineType(types: !16902)
!16902 = !{!16824, !16861, !16824}
!16903 = !{!16904, !16905}
!16904 = !DILocalVariable(name: "list", arg: 1, scope: !16900, file: !309, line: 341, type: !16861)
!16905 = !DILocalVariable(name: "node", arg: 2, scope: !16900, file: !309, line: 342, type: !16824)
!16906 = !DILocation(line: 0, scope: !16900)
!16907 = !DILocation(line: 344, column: 15, scope: !16900)
!16908 = !DILocation(line: 344, column: 9, scope: !16900)
!16909 = !DILocation(line: 344, column: 26, scope: !16900)
!16910 = !DILocation(line: 344, column: 2, scope: !16900)
!16911 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !309, file: !309, line: 325, type: !16901, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16912)
!16912 = !{!16913, !16914}
!16913 = !DILocalVariable(name: "list", arg: 1, scope: !16911, file: !309, line: 325, type: !16861)
!16914 = !DILocalVariable(name: "node", arg: 2, scope: !16911, file: !309, line: 326, type: !16824)
!16915 = !DILocation(line: 0, scope: !16911)
!16916 = !DILocation(line: 328, column: 24, scope: !16911)
!16917 = !DILocation(line: 328, column: 15, scope: !16911)
!16918 = !DILocation(line: 328, column: 9, scope: !16911)
!16919 = !DILocation(line: 328, column: 45, scope: !16911)
!16920 = !DILocation(line: 328, column: 2, scope: !16911)
!16921 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !309, file: !309, line: 294, type: !16922, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16924)
!16922 = !DISubroutineType(types: !16923)
!16923 = !{!16824, !16861}
!16924 = !{!16925}
!16925 = !DILocalVariable(name: "list", arg: 1, scope: !16921, file: !309, line: 294, type: !16861)
!16926 = !DILocation(line: 0, scope: !16921)
!16927 = !DILocation(line: 296, column: 9, scope: !16921)
!16928 = !DILocation(line: 296, column: 2, scope: !16921)
!16929 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !309, file: !309, line: 266, type: !16930, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16932)
!16930 = !DISubroutineType(types: !16931)
!16931 = !{!157, !16861}
!16932 = !{!16933}
!16933 = !DILocalVariable(name: "list", arg: 1, scope: !16929, file: !309, line: 266, type: !16861)
!16934 = !DILocation(line: 0, scope: !16929)
!16935 = !DILocation(line: 268, column: 15, scope: !16929)
!16936 = !DILocation(line: 268, column: 20, scope: !16929)
!16937 = !DILocation(line: 268, column: 2, scope: !16929)
!16938 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2501, file: !2501, line: 150, type: !16939, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16941)
!16939 = !DISubroutineType(types: !16940)
!16940 = !{!103, !2474}
!16941 = !{!16942, !16943, !16944, !16946}
!16942 = !DILocalVariable(name: "to", arg: 1, scope: !16938, file: !2501, line: 150, type: !2474)
!16943 = !DILocalVariable(name: "ret", scope: !16938, file: !2501, line: 152, type: !103)
!16944 = !DILocalVariable(name: "__i", scope: !16945, file: !2501, line: 154, type: !16707)
!16945 = distinct !DILexicalBlock(scope: !16938, file: !2501, line: 154, column: 2)
!16946 = !DILocalVariable(name: "__key", scope: !16945, file: !2501, line: 154, type: !16707)
!16947 = !DILocation(line: 0, scope: !16938)
!16948 = !DILocation(line: 0, scope: !16945)
!16949 = !DILocation(line: 0, scope: !16729, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 154, column: 2, scope: !16945)
!16951 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !16950)
!16953 = !DILocation(line: 0, scope: !16738, inlinedAt: !16952)
!16954 = !DILocation(line: 155, column: 7, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !2501, line: 155, column: 7)
!16956 = distinct !DILexicalBlock(scope: !16957, file: !2501, line: 154, column: 24)
!16957 = distinct !DILexicalBlock(scope: !16945, file: !2501, line: 154, column: 2)
!16958 = !DILocation(line: 155, column: 7, scope: !16956)
!16959 = !DILocation(line: 156, column: 4, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16955, file: !2501, line: 155, column: 39)
!16961 = !DILocation(line: 158, column: 3, scope: !16960)
!16962 = !DILocation(line: 0, scope: !16797, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 154, column: 2, scope: !16957)
!16964 = !DILocation(line: 0, scope: !16805, inlinedAt: !16965)
!16965 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !16963)
!16966 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !16965)
!16967 = !DILocation(line: 161, column: 2, scope: !16938)
!16968 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !309, file: !309, line: 225, type: !16969, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16973)
!16969 = !DISubroutineType(types: !16970)
!16970 = !{!157, !16971}
!16971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16972, size: 32)
!16972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2478)
!16973 = !{!16974}
!16974 = !DILocalVariable(name: "node", arg: 1, scope: !16968, file: !309, line: 225, type: !16971)
!16975 = !DILocation(line: 0, scope: !16968)
!16976 = !DILocation(line: 227, column: 15, scope: !16968)
!16977 = !DILocation(line: 227, column: 20, scope: !16968)
!16978 = !DILocation(line: 227, column: 2, scope: !16968)
!16979 = distinct !DISubprogram(name: "remove_timeout", scope: !2501, file: !2501, line: 53, type: !2495, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16980)
!16980 = !{!16981}
!16981 = !DILocalVariable(name: "t", arg: 1, scope: !16979, file: !2501, line: 53, type: !2474)
!16982 = !DILocation(line: 0, scope: !16979)
!16983 = !DILocation(line: 55, column: 6, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16979, file: !2501, line: 55, column: 6)
!16985 = !DILocation(line: 55, column: 14, scope: !16984)
!16986 = !DILocation(line: 55, column: 6, scope: !16979)
!16987 = !DILocation(line: 56, column: 25, scope: !16988)
!16988 = distinct !DILexicalBlock(scope: !16984, file: !2501, line: 55, column: 23)
!16989 = !DILocation(line: 56, column: 12, scope: !16988)
!16990 = !DILocation(line: 56, column: 19, scope: !16988)
!16991 = !DILocation(line: 57, column: 2, scope: !16988)
!16992 = !DILocation(line: 59, column: 23, scope: !16979)
!16993 = !DILocation(line: 59, column: 2, scope: !16979)
!16994 = !DILocation(line: 60, column: 1, scope: !16979)
!16995 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !309, file: !309, line: 496, type: !16996, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16998)
!16996 = !DISubroutineType(types: !16997)
!16997 = !{null, !16824}
!16998 = !{!16999, !17000, !17001}
!16999 = !DILocalVariable(name: "node", arg: 1, scope: !16995, file: !309, line: 496, type: !16824)
!17000 = !DILocalVariable(name: "prev", scope: !16995, file: !309, line: 498, type: !16836)
!17001 = !DILocalVariable(name: "next", scope: !16995, file: !309, line: 499, type: !16836)
!17002 = !DILocation(line: 0, scope: !16995)
!17003 = !DILocation(line: 498, column: 34, scope: !16995)
!17004 = !DILocation(line: 499, column: 34, scope: !16995)
!17005 = !DILocation(line: 501, column: 8, scope: !16995)
!17006 = !DILocation(line: 501, column: 13, scope: !16995)
!17007 = !DILocation(line: 502, column: 8, scope: !16995)
!17008 = !DILocation(line: 502, column: 13, scope: !16995)
!17009 = !DILocation(line: 503, column: 2, scope: !16995)
!17010 = !DILocation(line: 504, column: 1, scope: !16995)
!17011 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !16996, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17012)
!17012 = !{!17013}
!17013 = !DILocalVariable(name: "node", arg: 1, scope: !17011, file: !309, line: 211, type: !16824)
!17014 = !DILocation(line: 0, scope: !17011)
!17015 = !DILocation(line: 213, column: 8, scope: !17011)
!17016 = !DILocation(line: 213, column: 13, scope: !17011)
!17017 = !DILocation(line: 214, column: 8, scope: !17011)
!17018 = !DILocation(line: 214, column: 13, scope: !17011)
!17019 = !DILocation(line: 215, column: 1, scope: !17011)
!17020 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2501, file: !2501, line: 183, type: !17021, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17025)
!17021 = !DISubroutineType(types: !17022)
!17022 = !{!1699, !17023}
!17023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17024, size: 32)
!17024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!17025 = !{!17026, !17027, !17028, !17030}
!17026 = !DILocalVariable(name: "timeout", arg: 1, scope: !17020, file: !2501, line: 183, type: !17023)
!17027 = !DILocalVariable(name: "ticks", scope: !17020, file: !2501, line: 185, type: !1699)
!17028 = !DILocalVariable(name: "__i", scope: !17029, file: !2501, line: 187, type: !16707)
!17029 = distinct !DILexicalBlock(scope: !17020, file: !2501, line: 187, column: 2)
!17030 = !DILocalVariable(name: "__key", scope: !17029, file: !2501, line: 187, type: !16707)
!17031 = !DILocation(line: 0, scope: !17020)
!17032 = !DILocation(line: 0, scope: !17029)
!17033 = !DILocation(line: 0, scope: !16729, inlinedAt: !17034)
!17034 = distinct !DILocation(line: 187, column: 2, scope: !17029)
!17035 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17036)
!17036 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17034)
!17037 = !DILocation(line: 0, scope: !16738, inlinedAt: !17036)
!17038 = !DILocation(line: 188, column: 11, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17040, file: !2501, line: 187, column: 24)
!17040 = distinct !DILexicalBlock(scope: !17029, file: !2501, line: 187, column: 2)
!17041 = !DILocation(line: 0, scope: !16797, inlinedAt: !17042)
!17042 = distinct !DILocation(line: 187, column: 2, scope: !17040)
!17043 = !DILocation(line: 0, scope: !16805, inlinedAt: !17044)
!17044 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17042)
!17045 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17044)
!17046 = !DILocation(line: 191, column: 2, scope: !17020)
!17047 = distinct !DISubprogram(name: "timeout_rem", scope: !2501, file: !2501, line: 165, type: !17021, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17048)
!17048 = !{!17049, !17050, !17051}
!17049 = !DILocalVariable(name: "timeout", arg: 1, scope: !17047, file: !2501, line: 165, type: !17023)
!17050 = !DILocalVariable(name: "ticks", scope: !17047, file: !2501, line: 167, type: !1699)
!17051 = !DILocalVariable(name: "t", scope: !17052, file: !2501, line: 173, type: !2474)
!17052 = distinct !DILexicalBlock(scope: !17047, file: !2501, line: 173, column: 2)
!17053 = !DILocation(line: 0, scope: !17047)
!17054 = !DILocation(line: 169, column: 6, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17047, file: !2501, line: 169, column: 6)
!17056 = !DILocation(line: 169, column: 6, scope: !17047)
!17057 = !DILocation(line: 173, column: 28, scope: !17052)
!17058 = !DILocation(line: 0, scope: !17052)
!17059 = !DILocation(line: 173, column: 39, scope: !17060)
!17060 = distinct !DILexicalBlock(scope: !17052, file: !2501, line: 173, column: 2)
!17061 = !DILocation(line: 173, column: 2, scope: !17052)
!17062 = !DILocation(line: 174, column: 15, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17060, file: !2501, line: 173, column: 61)
!17064 = !DILocation(line: 174, column: 9, scope: !17063)
!17065 = !DILocation(line: 175, column: 15, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17063, file: !2501, line: 175, column: 7)
!17067 = !DILocation(line: 175, column: 7, scope: !17063)
!17068 = !DILocation(line: 173, column: 52, scope: !17060)
!17069 = distinct !{!17069, !17061, !17070}
!17070 = !DILocation(line: 178, column: 2, scope: !17052)
!17071 = !DILocation(line: 180, column: 17, scope: !17047)
!17072 = !DILocation(line: 180, column: 15, scope: !17047)
!17073 = !DILocation(line: 180, column: 2, scope: !17047)
!17074 = !DILocation(line: 181, column: 1, scope: !17047)
!17075 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14121, file: !14121, line: 35, type: !17076, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17078)
!17076 = !DISubroutineType(types: !17077)
!17077 = !{!157, !17023}
!17078 = !{!17079}
!17079 = !DILocalVariable(name: "to", arg: 1, scope: !17075, file: !14121, line: 35, type: !17023)
!17080 = !DILocation(line: 0, scope: !17075)
!17081 = !DILocation(line: 37, column: 35, scope: !17075)
!17082 = !DILocation(line: 37, column: 10, scope: !17075)
!17083 = !DILocation(line: 37, column: 9, scope: !17075)
!17084 = !DILocation(line: 37, column: 2, scope: !17075)
!17085 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2501, file: !2501, line: 194, type: !17021, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17086)
!17086 = !{!17087, !17088, !17089, !17091}
!17087 = !DILocalVariable(name: "timeout", arg: 1, scope: !17085, file: !2501, line: 194, type: !17023)
!17088 = !DILocalVariable(name: "ticks", scope: !17085, file: !2501, line: 196, type: !1699)
!17089 = !DILocalVariable(name: "__i", scope: !17090, file: !2501, line: 198, type: !16707)
!17090 = distinct !DILexicalBlock(scope: !17085, file: !2501, line: 198, column: 2)
!17091 = !DILocalVariable(name: "__key", scope: !17090, file: !2501, line: 198, type: !16707)
!17092 = !DILocation(line: 0, scope: !17085)
!17093 = !DILocation(line: 0, scope: !17090)
!17094 = !DILocation(line: 0, scope: !16729, inlinedAt: !17095)
!17095 = distinct !DILocation(line: 198, column: 2, scope: !17090)
!17096 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17097)
!17097 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17095)
!17098 = !DILocation(line: 0, scope: !16738, inlinedAt: !17097)
!17099 = !DILocation(line: 199, column: 11, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17101, file: !2501, line: 198, column: 24)
!17101 = distinct !DILexicalBlock(scope: !17090, file: !2501, line: 198, column: 2)
!17102 = !DILocation(line: 199, column: 23, scope: !17100)
!17103 = !DILocation(line: 0, scope: !16797, inlinedAt: !17104)
!17104 = distinct !DILocation(line: 198, column: 2, scope: !17101)
!17105 = !DILocation(line: 0, scope: !16805, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17104)
!17107 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17106)
!17108 = !DILocation(line: 199, column: 21, scope: !17100)
!17109 = !DILocation(line: 202, column: 2, scope: !17085)
!17110 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2501, file: !2501, line: 205, type: !16813, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17111)
!17111 = !{!17112, !17113, !17115}
!17112 = !DILocalVariable(name: "ret", scope: !17110, file: !2501, line: 207, type: !332)
!17113 = !DILocalVariable(name: "__i", scope: !17114, file: !2501, line: 209, type: !16707)
!17114 = distinct !DILexicalBlock(scope: !17110, file: !2501, line: 209, column: 2)
!17115 = !DILocalVariable(name: "__key", scope: !17114, file: !2501, line: 209, type: !16707)
!17116 = !DILocation(line: 0, scope: !17110)
!17117 = !DILocation(line: 0, scope: !17114)
!17118 = !DILocation(line: 0, scope: !16729, inlinedAt: !17119)
!17119 = distinct !DILocation(line: 209, column: 2, scope: !17114)
!17120 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17121)
!17121 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17119)
!17122 = !DILocation(line: 0, scope: !16738, inlinedAt: !17121)
!17123 = !DILocation(line: 210, column: 9, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17125, file: !2501, line: 209, column: 24)
!17125 = distinct !DILexicalBlock(scope: !17114, file: !2501, line: 209, column: 2)
!17126 = !DILocation(line: 0, scope: !16797, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 209, column: 2, scope: !17125)
!17128 = !DILocation(line: 0, scope: !16805, inlinedAt: !17129)
!17129 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17127)
!17130 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17129)
!17131 = !DILocation(line: 212, column: 2, scope: !17110)
!17132 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2501, file: !2501, line: 215, type: !11761, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17133)
!17133 = !{!17134, !17135, !17136, !17138, !17139, !17142, !17143}
!17134 = !DILocalVariable(name: "ticks", arg: 1, scope: !17132, file: !2501, line: 215, type: !332)
!17135 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17132, file: !2501, line: 215, type: !157)
!17136 = !DILocalVariable(name: "__i", scope: !17137, file: !2501, line: 217, type: !16707)
!17137 = distinct !DILexicalBlock(scope: !17132, file: !2501, line: 217, column: 2)
!17138 = !DILocalVariable(name: "__key", scope: !17137, file: !2501, line: 217, type: !16707)
!17139 = !DILocalVariable(name: "next_to", scope: !17140, file: !2501, line: 218, type: !103)
!17140 = distinct !DILexicalBlock(scope: !17141, file: !2501, line: 217, column: 24)
!17141 = distinct !DILexicalBlock(scope: !17137, file: !2501, line: 217, column: 2)
!17142 = !DILocalVariable(name: "sooner", scope: !17140, file: !2501, line: 219, type: !157)
!17143 = !DILocalVariable(name: "imminent", scope: !17140, file: !2501, line: 221, type: !157)
!17144 = !DILocation(line: 0, scope: !17132)
!17145 = !DILocation(line: 0, scope: !17137)
!17146 = !DILocation(line: 0, scope: !16729, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 217, column: 2, scope: !17137)
!17148 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17149)
!17149 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17147)
!17150 = !DILocation(line: 0, scope: !16738, inlinedAt: !17149)
!17151 = !DILocation(line: 218, column: 17, scope: !17140)
!17152 = !DILocation(line: 0, scope: !17140)
!17153 = !DILocation(line: 221, column: 27, scope: !17140)
!17154 = !DILocation(line: 233, column: 17, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17140, file: !2501, line: 233, column: 7)
!17156 = !DILocation(line: 234, column: 26, scope: !17157)
!17157 = distinct !DILexicalBlock(scope: !17155, file: !2501, line: 233, column: 56)
!17158 = !DILocation(line: 234, column: 4, scope: !17157)
!17159 = !DILocation(line: 235, column: 3, scope: !17157)
!17160 = !DILocation(line: 0, scope: !16797, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 217, column: 2, scope: !17141)
!17162 = !DILocation(line: 0, scope: !16805, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17161)
!17164 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17163)
!17165 = !DILocation(line: 237, column: 1, scope: !17132)
!17166 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2501, file: !2501, line: 239, type: !17167, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17169)
!17167 = !DISubroutineType(types: !17168)
!17168 = !{null, !332}
!17169 = !{!17170, !17171, !17172, !17174}
!17170 = !DILocalVariable(name: "ticks", arg: 1, scope: !17166, file: !2501, line: 239, type: !332)
!17171 = !DILocalVariable(name: "key", scope: !17166, file: !2501, line: 245, type: !16707)
!17172 = !DILocalVariable(name: "t", scope: !17173, file: !2501, line: 262, type: !2474)
!17173 = distinct !DILexicalBlock(scope: !17166, file: !2501, line: 261, column: 67)
!17174 = !DILocalVariable(name: "dt", scope: !17173, file: !2501, line: 263, type: !103)
!17175 = !DILocation(line: 0, scope: !17166)
!17176 = !DILocation(line: 242, column: 2, scope: !17166)
!17177 = !DILocation(line: 0, scope: !16729, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 245, column: 25, scope: !17166)
!17179 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17178)
!17181 = !DILocation(line: 0, scope: !16738, inlinedAt: !17180)
!17182 = !DILocation(line: 261, column: 9, scope: !17166)
!17183 = !DILocation(line: 261, column: 17, scope: !17166)
!17184 = !DILocation(line: 261, column: 25, scope: !17166)
!17185 = !DILocation(line: 261, column: 37, scope: !17166)
!17186 = !DILocation(line: 261, column: 47, scope: !17166)
!17187 = !DILocation(line: 261, column: 44, scope: !17166)
!17188 = !DILocation(line: 261, column: 2, scope: !17166)
!17189 = !DILocation(line: 0, scope: !17173)
!17190 = !DILocation(line: 263, column: 12, scope: !17173)
!17191 = !DILocation(line: 265, column: 16, scope: !17173)
!17192 = !DILocation(line: 265, column: 13, scope: !17173)
!17193 = !DILocation(line: 266, column: 13, scope: !17173)
!17194 = !DILocation(line: 267, column: 3, scope: !17173)
!17195 = !DILocation(line: 0, scope: !16797, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 269, column: 3, scope: !17173)
!17197 = !DILocation(line: 0, scope: !16805, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17196)
!17199 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17198)
!17200 = !DILocation(line: 270, column: 6, scope: !17173)
!17201 = !DILocation(line: 270, column: 3, scope: !17173)
!17202 = !DILocation(line: 0, scope: !16729, inlinedAt: !17203)
!17203 = distinct !DILocation(line: 271, column: 9, scope: !17173)
!17204 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17203)
!17206 = !DILocation(line: 0, scope: !16738, inlinedAt: !17205)
!17207 = !DILocation(line: 272, column: 22, scope: !17173)
!17208 = distinct !{!17208, !17188, !17209}
!17209 = !DILocation(line: 273, column: 2, scope: !17166)
!17210 = !DILocation(line: 276, column: 19, scope: !17211)
!17211 = distinct !DILexicalBlock(scope: !17212, file: !2501, line: 275, column: 23)
!17212 = distinct !DILexicalBlock(scope: !17166, file: !2501, line: 275, column: 6)
!17213 = !DILocation(line: 277, column: 2, scope: !17211)
!17214 = !DILocation(line: 279, column: 15, scope: !17166)
!17215 = !DILocation(line: 279, column: 12, scope: !17166)
!17216 = !DILocation(line: 280, column: 21, scope: !17166)
!17217 = !DILocation(line: 282, column: 24, scope: !17166)
!17218 = !DILocation(line: 282, column: 2, scope: !17166)
!17219 = !DILocation(line: 0, scope: !16797, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 284, column: 2, scope: !17166)
!17221 = !DILocation(line: 0, scope: !16805, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17220)
!17223 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17222)
!17224 = !DILocation(line: 285, column: 1, scope: !17166)
!17225 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2501, file: !2501, line: 287, type: !17226, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17228)
!17226 = !DISubroutineType(types: !17227)
!17227 = !{!420}
!17228 = !{!17229, !17230, !17232}
!17229 = !DILocalVariable(name: "t", scope: !17225, file: !2501, line: 289, type: !1596)
!17230 = !DILocalVariable(name: "__i", scope: !17231, file: !2501, line: 291, type: !16707)
!17231 = distinct !DILexicalBlock(scope: !17225, file: !2501, line: 291, column: 2)
!17232 = !DILocalVariable(name: "__key", scope: !17231, file: !2501, line: 291, type: !16707)
!17233 = !DILocation(line: 0, scope: !17225)
!17234 = !DILocation(line: 0, scope: !17231)
!17235 = !DILocation(line: 0, scope: !16729, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 291, column: 2, scope: !17231)
!17237 = !DILocation(line: 55, column: 2, scope: !16738, inlinedAt: !17238)
!17238 = distinct !DILocation(line: 145, column: 10, scope: !16729, inlinedAt: !17236)
!17239 = !DILocation(line: 0, scope: !16738, inlinedAt: !17238)
!17240 = !DILocation(line: 292, column: 7, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17242, file: !2501, line: 291, column: 24)
!17242 = distinct !DILexicalBlock(scope: !17231, file: !2501, line: 291, column: 2)
!17243 = !DILocation(line: 292, column: 19, scope: !17241)
!17244 = !DILocation(line: 0, scope: !16797, inlinedAt: !17245)
!17245 = distinct !DILocation(line: 291, column: 2, scope: !17242)
!17246 = !DILocation(line: 0, scope: !16805, inlinedAt: !17247)
!17247 = distinct !DILocation(line: 215, column: 2, scope: !16797, inlinedAt: !17245)
!17248 = !DILocation(line: 95, column: 2, scope: !16805, inlinedAt: !17247)
!17249 = !DILocation(line: 292, column: 17, scope: !17241)
!17250 = !DILocation(line: 294, column: 2, scope: !17225)
!17251 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2501, file: !2501, line: 297, type: !6906, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !461)
!17252 = !DILocation(line: 300, column: 19, scope: !17251)
!17253 = !DILocation(line: 300, column: 9, scope: !17251)
!17254 = !DILocation(line: 300, column: 2, scope: !17251)
!17255 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2501, file: !2501, line: 306, type: !17226, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !461)
!17256 = !DILocation(line: 308, column: 9, scope: !17255)
!17257 = !DILocation(line: 308, column: 2, scope: !17255)
!17258 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2501, file: !2501, line: 319, type: !6916, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17259)
!17259 = !{!17260, !17261, !17262, !17263}
!17260 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17258, file: !2501, line: 319, type: !121)
!17261 = !DILocalVariable(name: "start_cycles", scope: !17258, file: !2501, line: 328, type: !121)
!17262 = !DILocalVariable(name: "cycles_to_wait", scope: !17258, file: !2501, line: 331, type: !121)
!17263 = !DILocalVariable(name: "current_cycles", scope: !17264, file: !2501, line: 338, type: !121)
!17264 = distinct !DILexicalBlock(scope: !17265, file: !2501, line: 337, column: 11)
!17265 = distinct !DILexicalBlock(scope: !17266, file: !2501, line: 337, column: 2)
!17266 = distinct !DILexicalBlock(scope: !17258, file: !2501, line: 337, column: 2)
!17267 = !DILocation(line: 0, scope: !17258)
!17268 = !DILocation(line: 322, column: 19, scope: !17269)
!17269 = distinct !DILexicalBlock(scope: !17258, file: !2501, line: 322, column: 6)
!17270 = !DILocation(line: 322, column: 6, scope: !17258)
!17271 = !DILocation(line: 328, column: 26, scope: !17258)
!17272 = !DILocation(line: 333, column: 43, scope: !17258)
!17273 = !DILocation(line: 337, column: 2, scope: !17258)
!17274 = !DILocation(line: 338, column: 29, scope: !17264)
!17275 = !DILocation(line: 0, scope: !17264)
!17276 = !DILocation(line: 341, column: 23, scope: !17277)
!17277 = distinct !DILexicalBlock(scope: !17264, file: !2501, line: 341, column: 7)
!17278 = !DILocation(line: 341, column: 39, scope: !17277)
!17279 = !DILocation(line: 349, column: 1, scope: !17258)
!17280 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !300, file: !300, line: 1675, type: !6906, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !461)
!17281 = !DILocation(line: 1677, column: 9, scope: !17280)
!17282 = !DILocation(line: 1677, column: 2, scope: !17280)
!17283 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17284, file: !17284, line: 24, type: !6906, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !461)
!17284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17285 = !DILocation(line: 26, column: 9, scope: !17283)
!17286 = !DILocation(line: 26, column: 2, scope: !17283)
!17287 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2501, file: !2501, line: 364, type: !17288, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !17290)
!17288 = !DISubroutineType(types: !17289)
!17289 = !{!1596, !16697}
!17290 = !{!17291, !17292}
!17291 = !DILocalVariable(name: "timeout", arg: 1, scope: !17287, file: !2501, line: 364, type: !16697)
!17292 = !DILocalVariable(name: "dt", scope: !17287, file: !2501, line: 366, type: !1699)
!17293 = !DILocation(line: 0, scope: !17287)
!17294 = !DILocation(line: 368, column: 6, scope: !17287)
!17295 = !DILocation(line: 371, column: 10, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17297, file: !2501, line: 370, column: 47)
!17297 = distinct !DILexicalBlock(scope: !17298, file: !2501, line: 370, column: 13)
!17298 = distinct !DILexicalBlock(scope: !17287, file: !2501, line: 368, column: 6)
!17299 = !DILocation(line: 371, column: 3, scope: !17296)
!17300 = !DILocation(line: 376, column: 58, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17302, file: !2501, line: 376, column: 7)
!17302 = distinct !DILexicalBlock(scope: !17297, file: !2501, line: 372, column: 9)
!17303 = !DILocation(line: 376, column: 7, scope: !17302)
!17304 = !DILocation(line: 376, column: 43, scope: !17301)
!17305 = !DILocation(line: 377, column: 4, scope: !17306)
!17306 = distinct !DILexicalBlock(scope: !17301, file: !2501, line: 376, column: 64)
!17307 = !DILocation(line: 379, column: 10, scope: !17302)
!17308 = !DILocation(line: 379, column: 33, scope: !17302)
!17309 = !DILocation(line: 379, column: 31, scope: !17302)
!17310 = !DILocation(line: 379, column: 3, scope: !17302)
!17311 = !DILocation(line: 0, scope: !17298)
!17312 = !DILocation(line: 381, column: 1, scope: !17287)
!17313 = distinct !DISubprogram(name: "boot_banner", scope: !17314, file: !17314, line: 26, type: !3237, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3223, retainedNodes: !461)
!17314 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17315 = !DILocation(line: 34, column: 2, scope: !17313)
!17316 = !DILocation(line: 36, column: 1, scope: !17313)
!17317 = distinct !DISubprogram(name: "statics_init", scope: !2529, file: !2529, line: 21, type: !2535, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17318)
!17318 = !{!17319, !17320}
!17319 = !DILocalVariable(name: "unused", arg: 1, scope: !17317, file: !2529, line: 21, type: !2537)
!17320 = !DILocalVariable(name: "h", scope: !17321, file: !2529, line: 24, type: !17322)
!17321 = distinct !DILexicalBlock(scope: !17317, file: !2529, line: 24, column: 2)
!17322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17323, size: 32)
!17323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !17324)
!17324 = !{!17325, !17331, !17337}
!17325 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17323, file: !300, line: 5074, baseType: !17326, size: 96)
!17326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !17327)
!17327 = !{!17328, !17329, !17330}
!17328 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17326, file: !450, line: 57, baseType: !453, size: 32)
!17329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17326, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!17330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17326, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!17331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17323, file: !300, line: 5075, baseType: !17332, size: 64, offset: 96)
!17332 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !17333)
!17333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !17334)
!17334 = !{!17335}
!17335 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17333, file: !304, line: 232, baseType: !17336, size: 64)
!17336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2515)
!17337 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17323, file: !300, line: 5076, baseType: !17338, offset: 160)
!17338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!17339 = !DILocation(line: 0, scope: !17317)
!17340 = !DILocation(line: 0, scope: !17321)
!17341 = !DILocation(line: 24, column: 2, scope: !17321)
!17342 = !DILocation(line: 52, column: 2, scope: !17317)
!17343 = !DILocation(line: 49, column: 27, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17345, file: !2529, line: 48, column: 3)
!17345 = distinct !DILexicalBlock(scope: !17346, file: !2529, line: 24, column: 36)
!17346 = distinct !DILexicalBlock(scope: !17321, file: !2529, line: 24, column: 2)
!17347 = !DILocation(line: 49, column: 45, scope: !17344)
!17348 = !DILocation(line: 49, column: 4, scope: !17344)
!17349 = !DILocation(line: 24, column: 2, scope: !17346)
!17350 = !DILocation(line: 24, column: 2, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17346, file: !2529, line: 24, column: 2)
!17352 = distinct !{!17352, !17341, !17353}
!17353 = !DILocation(line: 51, column: 2, scope: !17321)
!17354 = distinct !DISubprogram(name: "k_heap_init", scope: !2529, file: !2529, line: 13, type: !17355, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17357)
!17355 = !DISubroutineType(types: !17356)
!17356 = !{null, !17322, !102, !344}
!17357 = !{!17358, !17359, !17360}
!17358 = !DILocalVariable(name: "h", arg: 1, scope: !17354, file: !2529, line: 13, type: !17322)
!17359 = !DILocalVariable(name: "mem", arg: 2, scope: !17354, file: !2529, line: 13, type: !102)
!17360 = !DILocalVariable(name: "bytes", arg: 3, scope: !17354, file: !2529, line: 13, type: !344)
!17361 = !DILocation(line: 0, scope: !17354)
!17362 = !DILocation(line: 15, column: 19, scope: !17354)
!17363 = !DILocation(line: 15, column: 2, scope: !17354)
!17364 = !DILocation(line: 16, column: 20, scope: !17354)
!17365 = !DILocation(line: 16, column: 2, scope: !17354)
!17366 = !DILocation(line: 19, column: 1, scope: !17354)
!17367 = distinct !DISubprogram(name: "z_waitq_init", scope: !14053, file: !14053, line: 47, type: !17368, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17371)
!17368 = !DISubroutineType(types: !17369)
!17369 = !{null, !17370}
!17370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17332, size: 32)
!17371 = !{!17372}
!17372 = !DILocalVariable(name: "w", arg: 1, scope: !17367, file: !14053, line: 47, type: !17370)
!17373 = !DILocation(line: 0, scope: !17367)
!17374 = !DILocation(line: 49, column: 21, scope: !17367)
!17375 = !DILocation(line: 49, column: 2, scope: !17367)
!17376 = !DILocation(line: 50, column: 1, scope: !17367)
!17377 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !17378, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17381)
!17378 = !DISubroutineType(types: !17379)
!17379 = !{null, !17380}
!17380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17336, size: 32)
!17381 = !{!17382}
!17382 = !DILocalVariable(name: "list", arg: 1, scope: !17377, file: !309, line: 197, type: !17380)
!17383 = !DILocation(line: 0, scope: !17377)
!17384 = !DILocation(line: 199, column: 8, scope: !17377)
!17385 = !DILocation(line: 199, column: 13, scope: !17377)
!17386 = !DILocation(line: 200, column: 8, scope: !17377)
!17387 = !DILocation(line: 200, column: 13, scope: !17377)
!17388 = !DILocation(line: 201, column: 1, scope: !17377)
!17389 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2529, file: !2529, line: 64, type: !17390, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17396)
!17390 = !DISubroutineType(types: !17391)
!17391 = !{!102, !17322, !344, !344, !17392}
!17392 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1700, line: 67, baseType: !17393)
!17393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1700, line: 65, size: 64, elements: !17394)
!17394 = !{!17395}
!17395 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17393, file: !1700, line: 66, baseType: !1699, size: 64)
!17396 = !{!17397, !17398, !17399, !17400, !17401, !17402, !17403, !17404, !17409}
!17397 = !DILocalVariable(name: "h", arg: 1, scope: !17389, file: !2529, line: 64, type: !17322)
!17398 = !DILocalVariable(name: "align", arg: 2, scope: !17389, file: !2529, line: 64, type: !344)
!17399 = !DILocalVariable(name: "bytes", arg: 3, scope: !17389, file: !2529, line: 64, type: !344)
!17400 = !DILocalVariable(name: "timeout", arg: 4, scope: !17389, file: !2529, line: 65, type: !17392)
!17401 = !DILocalVariable(name: "now", scope: !17389, file: !2529, line: 67, type: !420)
!17402 = !DILocalVariable(name: "end", scope: !17389, file: !2529, line: 67, type: !420)
!17403 = !DILocalVariable(name: "ret", scope: !17389, file: !2529, line: 68, type: !102)
!17404 = !DILocalVariable(name: "key", scope: !17389, file: !2529, line: 72, type: !17405)
!17405 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !17406)
!17406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !17407)
!17407 = !{!17408}
!17408 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17406, file: !460, line: 33, baseType: !103, size: 32)
!17409 = !DILocalVariable(name: "blocked_alloc", scope: !17389, file: !2529, line: 78, type: !157)
!17410 = !DILocation(line: 0, scope: !17389)
!17411 = !DILocation(line: 67, column: 21, scope: !17389)
!17412 = !DILocation(line: 70, column: 8, scope: !17389)
!17413 = !DILocation(line: 72, column: 41, scope: !17389)
!17414 = !DILocalVariable(name: "l", arg: 1, scope: !17415, file: !460, line: 136, type: !17418)
!17415 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !17416, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17419)
!17416 = !DISubroutineType(types: !17417)
!17417 = !{!17405, !17418}
!17418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17338, size: 32)
!17419 = !{!17414, !17420}
!17420 = !DILocalVariable(name: "k", scope: !17415, file: !460, line: 139, type: !17405)
!17421 = !DILocation(line: 0, scope: !17415, inlinedAt: !17422)
!17422 = distinct !DILocation(line: 72, column: 25, scope: !17389)
!17423 = !DILocation(line: 55, column: 2, scope: !17424, inlinedAt: !17428)
!17424 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5805, file: !5805, line: 42, type: !5806, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17425)
!17425 = !{!17426, !17427}
!17426 = !DILocalVariable(name: "key", scope: !17424, file: !5805, line: 44, type: !32)
!17427 = !DILocalVariable(name: "tmp", scope: !17424, file: !5805, line: 53, type: !32)
!17428 = distinct !DILocation(line: 145, column: 10, scope: !17415, inlinedAt: !17422)
!17429 = !{i64 2239948}
!17430 = !DILocation(line: 0, scope: !17424, inlinedAt: !17428)
!17431 = !DILocation(line: 81, column: 9, scope: !17432)
!17432 = distinct !DILexicalBlock(scope: !17389, file: !2529, line: 80, column: 22)
!17433 = !DILocation(line: 83, column: 9, scope: !17432)
!17434 = !DILocation(line: 85, column: 12, scope: !17435)
!17435 = distinct !DILexicalBlock(scope: !17432, file: !2529, line: 84, column: 7)
!17436 = !DILocation(line: 85, column: 21, scope: !17435)
!17437 = !DILocation(line: 85, column: 30, scope: !17435)
!17438 = !DILocation(line: 85, column: 37, scope: !17435)
!17439 = !DILocation(line: 84, column: 7, scope: !17432)
!17440 = !DILocation(line: 99, column: 10, scope: !17432)
!17441 = !DILocation(line: 0, scope: !17415, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 101, column: 9, scope: !17432)
!17443 = !DILocation(line: 55, column: 2, scope: !17424, inlinedAt: !17444)
!17444 = distinct !DILocation(line: 145, column: 10, scope: !17415, inlinedAt: !17442)
!17445 = !DILocation(line: 0, scope: !17424, inlinedAt: !17444)
!17446 = distinct !{!17446, !17447, !17448}
!17447 = !DILocation(line: 80, column: 2, scope: !17389)
!17448 = !DILocation(line: 102, column: 2, scope: !17389)
!17449 = !DILocalVariable(name: "key", arg: 2, scope: !17450, file: !460, line: 190, type: !17405)
!17450 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !17451, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17453)
!17451 = !DISubroutineType(types: !17452)
!17452 = !{null, !17418, !17405}
!17453 = !{!17454, !17449}
!17454 = !DILocalVariable(name: "l", arg: 1, scope: !17450, file: !460, line: 189, type: !17418)
!17455 = !DILocation(line: 0, scope: !17450, inlinedAt: !17456)
!17456 = distinct !DILocation(line: 106, column: 2, scope: !17389)
!17457 = !DILocalVariable(name: "key", arg: 1, scope: !17458, file: !5805, line: 84, type: !32)
!17458 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5805, file: !5805, line: 84, type: !5816, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17459)
!17459 = !{!17457}
!17460 = !DILocation(line: 0, scope: !17458, inlinedAt: !17461)
!17461 = distinct !DILocation(line: 215, column: 2, scope: !17450, inlinedAt: !17456)
!17462 = !DILocation(line: 95, column: 2, scope: !17458, inlinedAt: !17461)
!17463 = !{i64 2240765}
!17464 = !DILocation(line: 107, column: 2, scope: !17389)
!17465 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2529, file: !2529, line: 110, type: !17466, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17468)
!17466 = !DISubroutineType(types: !17467)
!17467 = !{!102, !17322, !344, !17392}
!17468 = !{!17469, !17470, !17471, !17472}
!17469 = !DILocalVariable(name: "h", arg: 1, scope: !17465, file: !2529, line: 110, type: !17322)
!17470 = !DILocalVariable(name: "bytes", arg: 2, scope: !17465, file: !2529, line: 110, type: !344)
!17471 = !DILocalVariable(name: "timeout", arg: 3, scope: !17465, file: !2529, line: 110, type: !17392)
!17472 = !DILocalVariable(name: "ret", scope: !17465, file: !2529, line: 114, type: !102)
!17473 = !DILocation(line: 0, scope: !17465)
!17474 = !DILocation(line: 114, column: 14, scope: !17465)
!17475 = !DILocation(line: 118, column: 2, scope: !17465)
!17476 = distinct !DISubprogram(name: "k_heap_free", scope: !2529, file: !2529, line: 121, type: !17477, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !17479)
!17477 = !DISubroutineType(types: !17478)
!17478 = !{null, !17322, !102}
!17479 = !{!17480, !17481, !17482}
!17480 = !DILocalVariable(name: "h", arg: 1, scope: !17476, file: !2529, line: 121, type: !17322)
!17481 = !DILocalVariable(name: "mem", arg: 2, scope: !17476, file: !2529, line: 121, type: !102)
!17482 = !DILocalVariable(name: "key", scope: !17476, file: !2529, line: 123, type: !17405)
!17483 = !DILocation(line: 0, scope: !17476)
!17484 = !DILocation(line: 0, scope: !17415, inlinedAt: !17485)
!17485 = distinct !DILocation(line: 123, column: 25, scope: !17476)
!17486 = !DILocation(line: 55, column: 2, scope: !17424, inlinedAt: !17487)
!17487 = distinct !DILocation(line: 145, column: 10, scope: !17415, inlinedAt: !17485)
!17488 = !DILocation(line: 0, scope: !17424, inlinedAt: !17487)
!17489 = !DILocation(line: 125, column: 20, scope: !17476)
!17490 = !DILocation(line: 125, column: 2, scope: !17476)
!17491 = !DILocation(line: 128, column: 60, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17476, file: !2529, line: 128, column: 6)
!17493 = !DILocation(line: 128, column: 43, scope: !17492)
!17494 = !DILocation(line: 128, column: 68, scope: !17492)
!17495 = !DILocation(line: 128, column: 6, scope: !17476)
!17496 = !DILocation(line: 123, column: 41, scope: !17476)
!17497 = !DILocation(line: 129, column: 3, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17492, file: !2529, line: 128, column: 74)
!17499 = !DILocation(line: 130, column: 2, scope: !17498)
!17500 = !DILocation(line: 0, scope: !17450, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 131, column: 3, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17492, file: !2529, line: 130, column: 9)
!17503 = !DILocation(line: 0, scope: !17458, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 215, column: 2, scope: !17450, inlinedAt: !17501)
!17505 = !DILocation(line: 95, column: 2, scope: !17458, inlinedAt: !17504)
!17506 = !DILocation(line: 133, column: 1, scope: !17476)
